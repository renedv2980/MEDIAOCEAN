*          DATA SET DMDADDS    AT LEVEL 011 AS OF 11/13/20                      
*CATALP DMDADDS                                                                 
***********************************************************************         
*                                                                     *         
* P1     A(ROUTINE) OR X'000000XX' WHERE XX IS HEX ROUTINE NUM        *         
* P2     A(I/O AREA)                                                  *         
* P3     BYTES 0-1=RETURN ERROR FLAGS , BYTES 2-3=RECORD LENGTH       *         
* P4     A(DTFPH)                                                     *         
* P5     A(DISK ADDRESS)                                              *         
* P6     DEPENDS ON P1                                                *         
*                                                                     *         
* AVAILABLE ROUTINES ARE                                              *         
*                                                                     *         
* 01 RDID      READ TTBR AT P5.                                       *         
*              IF PARM3 IS L=XX THEN MAX READ LENGTH SET TO XX BYTES. *         
* 18 RDIDFLS   READ TTBR AT P5 AND FLUSH BUFFER IF NECESSARY.         *         
*                                                                     *         
* 02 RDIDTRK   READ TTBR AT P5. USE TRK BUFFER AT P6 FOR BLOCKED RECS.*         
*                                                                     *         
* 17 RDIDVAR   DISABLED DUE TO TIMING PROBLEMS ON 3990 AND CPU.       *         
*              READ TTBR AT P5. P6 BYTES 0-1 ARE LENGTH TO SKIP BEFORE*         
*              STARTING TO READ, P6 BYTES 2-3 ARE LENGTH TO READ.     *         
*              MUST BE UNBLOCKED AND NOT INDEXED.                     *         
*                                                                     *         
* 03 RDTRK     READ TTBR AT P5 USING TRK BUFFER AT P6. P2 IS A(REC).  *         
*              IF PARM3 IS L=XX THEN MAX READ LENGTH SET TO XX BYTES. *         
*                                                                     *         
* 04 WTID      WRITE RECORD AT TTBR.                                  *         
*                                                                     *         
* 05 WTCKD     WRITE RECORD AFTER TTBR IN DNEXT. P5 IS A(TTBR) ON EXIT*         
*                                                                     *         
* 06 WTTRK     WRITE DATA A TRACK AT A TIME USING BUFFER AT P6.       *         
*              BUFFER FORMAT IS COUNT/DATA, ETC. P2 IS CCW BUILD AREA.*         
*                                                                     *         
* 07 DATRNS    TRANSLATE TTBR AT P5 TO CCHHR AT P6.                   *         
*                                                                     *         
* 08 WTERASE   ERASE A FILE FROM TT+1. P5 IS A(TT00) OF LAST TRK USED.*         
*                                                                     *         
* 09 DABACK    READ A FILE BACKWARDS FROM TTB0 AT P5.                 *         
*                                                                     *         
* 0A DACPUID   TEST CPU ID IN RECORD ZERO OF TRACK ONE.               *         
*                                                                     *         
* 0B ADDADR    RETURN DISK ADDR AT WHICH THIS REC WILL BE ADDED AT P5.*         
*              FLAGS DNEXT AS UNAVAILABLE UNTIL FOLLOWED BY WTCKD.    *         
*                                                                     *         
* 0C ADDAFT    ADD REC AFTER THAT SPECIFIED IN P5.                    *         
*              P6(2) IS HIGH TRK FOR CONTROL INTERVAL                 *         
*              P6+2(2) IS REMAINING BYTE COUNT THIS TRK               *         
*                                                                     *         
* 0D FNDEOF    FIND END OF FILE. P5 IS LAST KNOWN REC,LAST REC ON EXIT*         
*                                                                     *         
* 0E DAOPEN    OPEN FILE AND BUILD EXTENT MATRIX.                     *         
*                                                                     *         
* 0F DACLOSE   CLOSE FILE.                                            *         
*                                                                     *         
* 10 DARPT     CALC RECS/TRK FOR LEN AT P3+2. RETURN RECS/TRK AT P3+2.*         
*              IF REC LEN IS X'FFFF' RETURN MAX REC LEN AT P3+2.      *         
*              RETURN A(DEVICE DATA) AT P2.                           *         
*                                                                     *         
* 11 DAOPOLD   OPEN FILE (DISP=OLD) AND BUILD EXTENT MATRIX.          *         
*                                                                     *         
* 13 DAINFO    RETURN DNEXT/TRACKS USED/TRACKS TOTAL                  *         
*                                                                     *         
* 15 DACLEAR   CLEAR ALL DA BUFFERS                                   *         
*                                                                     *         
* ERROR BYTE INDICATORS                                               *         
*                                                                     *         
* BYTE 0 X'80' UNRECOVERABLE ERROR                                    *         
*        X'40' INVALID REQUEST (BLK REQUEST ON UNBLOCKED FILE)        *         
*        X'20'                                                        *         
*        X'10'                                                        *         
*        X'08'                                                        *         
*        X'04'                                                        *         
*        X'02'                                                        *         
*        X'01' ID REFERENCE OUTSIDE EXTENTS                           *         
*                                                                     *         
* BYTE 1 X'80' INVALID CPU ID                                         *         
*        X'40'                                                        *         
*        X'20'                                                        *         
*        X'10'                                                        *         
*        X'08' NO RECORD FOUND                                        *         
*        X'04' END OF FILE                                            *         
*        X'02'                                                        *         
*        X'01' END OF BLK (ALWAYS SETS NO REC FOUND ALSO)             *         
***********************************************************************         
DADDS    TITLE 'DADDS - DIRECT ACCESS - 31 BIT MODE'                            
         PRINT NOGEN                                                            
DADDS    CSECT                                                                  
         ENTRY RDID                01                                           
         ENTRY RDIDTRK             02                                           
         ENTRY RDTRK               03                                           
         ENTRY WTID                04                                           
         ENTRY WTCKD               05                                           
         ENTRY WTTRK               06                                           
         ENTRY DATRNS              07                                           
         ENTRY WTERASE             08                                           
         ENTRY DABACK              09                                           
         ENTRY DACPUID             10                                           
         ENTRY FNDEOF              11                                           
         ENTRY ADDADR              12                                           
         ENTRY ADDAFT              13                                           
         ENTRY DAOPEN              14                                           
         ENTRY DACLOSE             15                                           
         ENTRY DARPT               16                                           
         ENTRY DAOPOLD             17                                           
         ENTRY RDIDFLS             18                                           
         ENTRY DAINFO              19                                           
         ENTRY CHKEOF              20                                           
         ENTRY DACLEAR             21                                           
*                                                                               
         NMOD1 WORKX-WORK,**DADDS*,RA,CLEAR=YES                                 
         USING WORK,RC                                                          
         SAC   0                                                                
         N     RF,=X'80000000'     DROP ALL BUT MODE BIT                        
         ST    RF,CALLMODE         RF NEGATIVE FOR 31-BIT CALL                  
         SAM31                     GET INTO 31-BIT MODE                         
*                                                                               
DADDS0   MVC   LOWBITS,=X'7FFFFFFF'                                             
         TM    CALLMODE,X'80'                                                   
         BO    *+8                                                              
         MVI   LOWBITS,0                                                        
         MVC   P2LOWBTS,LOWBITS                                                 
*                                                                               
         LR    R8,R1               R8=A(PARAMATER LIST)                         
         USING PARAMS,R8                                                        
         SR    R2,R2                                                            
         ICM   R2,7,P4+1           R2=A(DTF)                                    
         USING DTFPHD,R2                                                        
         MVC   SAVEP3,P3                                                        
*                                                                               
DA0      XC    P3(2),P3            RESET ERROR FLAGS                            
         XC    SAVEP2,SAVEP2                                                    
         XC    ATCB,ATCB                                                        
         ICM   RE,15,=V(SSB)                                                    
         BZ    DA1                                                              
         USING SSBD,RE                                                          
         OC    SSBCNTL,SSBCNTL     TEST OFFLINE                                 
         BZ    DA1                                                              
         TM    SSBSTAT2,SSBSHBDW   TEST HOLD BLOCKED DA WRITE                   
         BZ    *+8                                                              
         MVI   HOLD,1              SET HOLD WRITES IF SSB FLAG SET              
         TM    SSBPROT,SSBSTRTQ                                                 
         BO    *+16                                                             
         TM    SSBPROT,SSBPONQ                                                  
         BZ    *+8                                                              
         MVI   PROTON,1            SET STORAGE PROTECTION MODE ON               
         ICM   RE,15,SSBTKADR                                                   
         BZ    DA1                                                              
         ST    RE,ATCB             SAVE A(TCB)                                  
         DROP  RE                                                               
         EJECT                                                                  
***********************************************************************         
* GET DEVICE DATA AND PASS CONTROL TO REQUESTED ROUTINE               *         
* INITIALISE EXTENT MATRIX AND ALLOCATE BUFFERS ON FIRST CALL         *         
***********************************************************************         
DA1      L     RE,=A(DEV3390)      3390 IS ONLY VALID CURRENT DEVICE            
*&&DO                                                                           
         SR    RE,RE               SET DISK DEVICE DATA                         
         ICM   RE,1,DTFDEVT                                                     
         BNZ   *+8                                                              
         LA    RE,1                                                             
         BCTR  RE,0                                                             
         SLL   RE,4                                                             
         A     RE,=A(DEVDISK)                                                   
*&&                                                                             
         MVC   DEVDATA,0(RE)                                                    
         ST    RE,SVDTAPTR                                                      
*                                                                               
DA2      SR    RF,RF               P1=A(ROUTINE) OR ROUTINE NUMBER              
         ICM   RF,7,P1+1                                                        
         CHI   RF,31               MAXIMUM 31 ROUTINES                          
         BH    DA2A                                                             
         SLL   RF,2                                                             
         A     RF,=A(DAROUTS)      INDEX INTO ROUTINE ADDRESS TABLE             
         L     RF,0(RF)                                                         
DA2A     ST    RF,DAROUTA          RF=A(DADDS ROUTINE)                          
*                                                                               
DA3      LA    RF,DMTX                                                          
         USING EXTENTD,RF                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF'                                         
         BNE   *+8                                                              
         LA    RF,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    *+12                                                             
         ICM   RF,15,DMTX                                                       
         BZ    DA4                 MUST NOT HAVE BEEN OPENED                    
*                                                                               
         LTR   RF,RF               TEST IF HIGH CORE ADDRESS SET                
         BZ    DA4                                                              
         OC    EXT#TRKS,EXT#TRKS   INIT EXTENT MATRIX ON FIRST CALL             
         BNZ   DA4                                                              
         BRAS  RE,DAINIT                                                        
         DROP  RF                                                               
*                                                                               
DA4      L     RF,=A(RDID)         GO DIRECTLY TO RDID ROUTINE                  
         C     RF,DAROUTA                                                       
         BER   RF                                                               
         BRAS  RE,INICCW           INITIALISE CCWS/IDAWS                        
         L     RF,DAROUTA                                                       
         BR    RF                                                               
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* READ RECORD ROUTINES                                                *         
***********************************************************************         
RDIDFLS  OI    READTYPE,FLUSH      READ WITH FLUSH BUFFER                       
         B     RDID                                                             
*                                                                               
RDIDTRK  OI    READTYPE,TRACK      READ WITH FULL TRACK BUFFER                  
         B     RDID                                                             
*                                                                               
RDID     L     R4,P5               R4=A(TTBR)                                   
         N     R4,LOWBITS                                                       
*                                                                               
RDIDPQ   CLC   DTFDD(4),=C'PRTQ'   IS THIS A PRTQ                               
         JNE   RDIDPQXX                                                         
         TM    DTFTYPE,DTFTB22     IS THIS A 16 BIT PQ                          
         JO    RDIDPQXX            IT'S 22 BIT                                  
         JZ    RDIDPQXX            IT'S 16 BIT                                  
*                                                                               
         LR    RF,R2               MUST BE 20 BIT   (NEVER 18)                  
         AHI   RF,-40              BACK UP TO CIDATA                            
         USING CIDATA,RF                                                        
*                                                                               
         MVC   PQSAVEDA,0(R4)      SAVE ORIGINAL DA                             
*                                                                               
         L     R0,0(R4)            R0=DA   TTTTBB00                             
         SRL   R0,4                SHIFT TO GET 20 BIT TRACK                    
         ST    R0,FULL             SAVE AS 0TTTTBB0 IN FULL                     
         NC    FULL,=X'FFFFF000'   CLEAR ALL BUT TRACKS                         
         MVC   FULL+3(1),2(R4)     SAVE AS 0TTTT0BB                             
*                                                                               
         OC    CJSTTRK,CJSTTRK     IF ZERO NOT FULLY INITIALISED YET            
         JZ    RDIDPQX             SO DONE                                      
*                                                                               
         L     R0,FULL             R0=NEW DA                                    
         SRL   R0,12               SHIFT SO R0=TRACK ONLY                       
         SH    R0,CJSTTRK          ARE WE ON PART2S                             
         JL    RDIDPQX             NO - DONE                                    
*                                                                               
         CLC   CIHIREC,=X'0004'    CHECK MUST BE 4 BLOCK TRACKS                 
         JNE   *+2                 4 PER TRACK REQUIRED FOR BIG20               
*                                                                               
         LH    RE,CJHIREC          SET RE TO BLOCKS PER PART 2                  
         SRL   RE,2                /4 TO GET TRACKS PER PART 2                  
         STH   RE,HALF                                                          
         MH    R0,HALF             MULTIPLY RELATIVE PART 2 BY TRKS             
         AH    R0,CJSTTRK          ADD BACK PART 2 START TRACK                  
         DROP  RF                                                               
*                                                                               
         L     RE,FULL             RE=NEW DA                                    
         N     RE,=X'00000FFF'     MASK OUT TO JUST 0BB                         
         AHI   RE,-1               BLOCK -1 SO BLK 1 IS 0 ETC                   
         LR    RF,RE               COPY BB-1 TO RF                              
         N     RE,=X'00000003'     RE KEEP LOW BITS ONLY                        
         LA    RE,1(RE)            ADD BACK 1                                   
         STC   RE,FULL+3           SAVE AS NEW BB                               
*                                                                               
         N     RF,=X'000000FC'     KEEP HIGH BITS                               
         SRL   RF,2                SHIFT OUT LOW BITS                           
         CH    RF,HALF             TEST NOT MORE THAN TRACKS PER PART 2         
         JL    RDIDPQ9                                                          
         BCTR  RF,0                IF SO GO BACK TO PREVIOUS                    
         MVI   FULL+3,5            AND ATTEMPT BLOCK 5 READ (NOT FOUND)         
RDIDPQ9  AR    R0,RF               ADD TO TRACK                                 
         SLL   R0,4                LINE UP                                      
         STCM  R0,7,FULL           AND SAVE IN NEW DA                           
*                                                                               
RDIDPQX  MVC   0(4,R4),FULL        REPLACE DA WITH NEW DA                       
*                                                                               
RDIDPQXX EQU   *                                                                
*                                                                               
*&&US                                                                           
         ICM   RF,15,=V(UPSOON)                                                 
         BZ    RDID1                                                            
         CLI   P4,0                NO UPSOON UNLESS A DTF#                      
         BE    RDID1                                                            
         TM    DTFOPEN,DTF_RO      NO UPSOON IF FILE IS READ-ONLY               
         NOP   RDID1               *NOP* BO                                     
         GOTO1 (RF),DUB,C'GETR',(R8)                                            
         BE    DAEXIT                                                           
*&&                                                                             
RDID1    LA    R5,SRCH                                                          
         CLC   0(4,R4),=X'00000001'                                             
         BNE   *+8                                                              
         OI    READTYPE,READ1ST                                                 
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    RDREC               YES - ALWAYS TREAT AS UNBLOCKED              
         CLC   SAVEP3(2),=C'L='                                                 
         BE    RDREC               UNBLOCKED IF LENGTH OVERRIDE IN P3           
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    RDID2                                                            
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BZ    *+16                                                             
         TM    2(R4),X'03'         22-BIT BLOCKED IF BLOCK BITS NONZERO         
         BNZ   RDBLK                                                            
         B     *+12                                                             
         TM    2(R4),X'0F'         20-BIT BLOCKED IF BLOCK BITS NONZERO         
         BNZ   RDBLK                                                            
         TM    READTYPE,READ1ST    TRYING TO READ FIRST RECORD                  
         BZ    RDREC                                                            
         TM    DBLKSZ,X'80'        TEST IF BLOCKED                              
         BO    RDREC                                                            
         B     RDBLK                                                            
*                                                                               
RDID2    TM    READTYPE,READ1ST    READING FIRST RECORD ON FILE                 
         BZ    RDID3                                                            
         TM    DBLKSZ,X'80'        YES - TEST IF FILE BLOCKED                   
         BO    RDREC                                                            
*                                                                               
RDID3    CLI   3(R4),0                                                          
         BNE   RDBLK               BLOCKED IF R OF TTBR NONZERO                 
*                                                                               
RDREC    CLI   PROTON,0                                                         
         BE    RDRECA                                                           
         ICM   RE,15,ATCB                                                       
         BZ    RDRECA                                                           
         ICM   R0,15,TCBPIO-TCBD(RE)                                            
         BZ    RDRECA                                                           
         L     RE,P2                                                            
         ST    RE,SAVEP2                                                        
         ST    R0,P2                                                            
         MVI   P2LOWBTS,X'7F'                                                   
*                                                                               
RDRECA   BRAS  RE,INICCW           INITIALISE CCWS/IDAWS                        
         BRAS  RE,DACCHH           UNBLOCKED - TRANSLATE TTBR TO CCHHR          
         MVI   CCWRD,6             READ DATA                                    
         L     R1,P2                                                            
         N     R1,P2LOWBTS                                                      
         SR    R0,R0                                                            
         ICM   R0,3,MAXIOL                                                      
         BAS   RE,SETIDAWS                                                      
         OI    CCWRD+4,X'04'       SET IDA                                      
         LA    R1,IDAWS                                                         
         STCM  R1,7,CCWRD+1        DIRECTLY TO I/O AREA                         
         SR    R0,R0                                                            
         ICM   R0,3,MAXIOL                                                      
         TM    READTYPE,TRACK      READ WITH FULL TRACK BUFFER                  
         BO    RDRECA0                                                          
         OC    DBLKSZ,DBLKSZ       TEST BLOCKED FILE                            
         BZ    RDRECA0             NO - USE MAXIOL                              
         ICM   R0,3,DBLKSZ         MAX BLKSIZE=DBLKSZ                           
RDRECA0  STCM  R0,3,CCWRD+6        SET MAX LENGTH FOR READ                      
*                                                                               
         CLI   P1+3,X'11'          TEST FOR RDIDVAR                             
         JE    *+2                 DIE=RDIDVAR INVALID                          
         CLC   SAVEP3(2),=C'L='                                                 
         BNE   RDREC1                                                           
         OC    SAVEP3+2(2),SAVEP3+2                                             
         JZ    *+2                 DIE=ZERO REC LEN                             
         MVC   CCWRD+6(2),SAVEP3+2 SET LEN FOR READ TO L= OVERRIDE              
         B     RDREC1                                                           
*                                                                               
RDREC0   OC    P6+2(2),P6+2                                                     
         JZ    *+2                 DIE=ZERO L=LEN                               
         MVC   CCWRD+6(2),P6+2                                                  
*                                                                               
RDREC1   TM    DIND,DINDNDX        TEST DANDX FILE                              
         BO    *+12                YES - CALC SECTOR VALUE                      
         TM    DBLKSZ,X'80'        TEST F/L RECORD FILE                         
         BZ    *+8                 NO - CANT CALC SECTOR                        
         BAS   R9,SETSCTR                                                       
         CLI   P1+3,X'11'          TEST FOR RDIDVAR                             
         BNE   RDREC2                                                           
         MVC   CCWRD+8(8),CCWRD    DUP READ CCW                                 
         MVI   CCWRD+4,X'90'       SET SKIP AND CD                              
         OC    P6(2),P6                                                         
         JZ    *+2                 DIE=ZERO SKIP LEN                            
         MVC   CCWRD+6(2),P6       SET SKIP LENGTH                              
*                                                                               
RDREC2   BRAS  R9,EXCPRD           STOP SELF ABUSE                              
         BAS   R9,EXCP             EXCP AND WAIT                                
         CLI   P1+3,X'11'          TEST FOR RDIDVAR                             
         BNE   *+10                                                             
         MVC   CCWRD(8),CCWRD+8                                                 
         SR    R0,R0                                                            
         ICM   R0,3,CCWRD+6        GET READ LENGTH                              
         SR    RE,RE                                                            
         ICM   RE,3,IOBRCNT                                                     
         SR    R0,RE                                                            
         STH   R0,P3+2             SET LENGTH FOR USER                          
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* READ BLOCKED RECORD                                                 *         
***********************************************************************         
RDBLK    ICM   R5,15,DBLK          GET BUFFER ADDRESS                           
         BNZ   RDBLK0                                                           
         MVI   P3,X'C0'            NO - SET ERROR/INVALID REQUEST               
         B     DAEXIT                                                           
*                                                                               
RDBLK0   TM    READTYPE,READ1ST    TEST READING FIRST RECORD                    
         BO    RDBLK0A                                                          
         CLC   DBLKDA(3),0(R4)     TEST BLK IN CORE                             
         BNE   RDBLK0A                                                          
         TM    READTYPE,FLUSH      YES - READ FLUSH WANTS FRESH COPY            
         BZ    RDBLK2                                                           
*                                                                               
RDBLK0A  TM    READTYPE,TRACK      TEST FOR TRACK BUFFER                        
         BO    RDTRK                                                            
         BRAS  RE,INICCW           INITIALISE CCWS/IDAWS                        
         BAS   R9,WBB              READ BLOCK                                   
*                                                                               
RDBLK1   TM    READTYPE,READ1ST                                                 
         BZ    RDBLK1A                                                          
         CLC   0(3,R5),=X'000101'                                               
         BNE   RDBLK1C                                                          
         MVC   0(3,R4),=X'000101'  16-BIT FILE                                  
         B     RDBLK1X             DONE                                         
*                                                                               
RDBLK1A  CLC   0(3,R4),0(R5)       TEST X'TTTTXB' REQUESTED TO ACTUAL           
         BE    RDBLK1X                                                          
         CLC   0(4,R4),=X'00010101'                                             
         BNE   RDBLK1E             ERROR                                        
*                                                                               
RDBLK1C  CLC   0(3,R5),=X'000041'  TEST IF LOADED AS A BIG FILE                 
         BNE   RDBLK1D                                                          
         OI    DTFTYPE,DTFTBIG     SET DTF TO SHOW BIG FILE                     
         MVC   0(3,R4),=X'000041'  FIX DISK ADR TO 18-BIT FORMAT                
         B     RDBLK1X                                                          
*                                                                               
RDBLK1D  CLC   0(3,R5),=X'000011'  TEST IF LOADED AS A 20-BIT FILE              
         BNE   RDBLK1E                                                          
         OI    DTFTYPE,DTFTBIGF                                                 
         MVC   0(3,R4),=X'000011'  FIX DISK ADR TO 20-BIT FORMAT                
         B     RDBLK1X                                                          
*                                                                               
RDBLK1E  CLC   0(3,R5),=X'000005'  TEST IF LOADED AS A 22-BIT FILE              
         BNE   RDBLK1F                                                          
         OI    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         MVC   0(3,R4),=X'000005'  FIX DISK ADR TO 22-BIT FORMAT                
         B     RDBLK1X                                                          
*                                                                               
RDBLK1F  MVI   P3,X'80'            TREAT AS UNRECOVERABLE I/O ERROR             
         B     DAEXIT                                                           
*                                                                               
RDBLK1X  MVC   DBLKDA(3),0(R5)     SAVE TTB IN DTF                              
*                                                                               
RDBLK2   TM    DTFTYPE,DTFTKCL+DTFTKCR TEST IF KEY COMPRESSED FILE              
         BZ    RDBLK3                                                           
         GOTO1 =A(RDBLKA)          COMPRESSED RECORDS                           
         B     DAEXIT                                                           
*                                                                               
RDBLK3   LH    R6,4(R5)            NON COMPRESSED RECORDS                       
         AHI   R6,-6                                                            
         LA    R5,6(R5)            POINT TO FIRST RECLEN                        
         SR    R0,R0                                                            
         IC    R0,3(R4)            RECORD NUMBER                                
*                                                                               
         MVI   BYTE,0                                                           
         TM    DIND,DINDVRB        TEST FOR POSSIBLE VERMONT BUFF               
         BZ    RDBLK6                                                           
*NOP     CLC   0(6,R5),=X'005AC4E2D9C2'  TEST AL2(90),CL4'DSRB'                 
*NOP     BNE   RDBLK6                                                           
         MVI   BYTE,1              FLAG THIS IS A VRB                           
*                                                                               
RDBLK4   LH    R1,0(R5)            BUMP TO NEXT RECORD IN BLOCK                 
         AR    R5,R1                                                            
         SR    R6,R1                                                            
         BP    *+12                                                             
RDBLK4X  MVI   P3+1,X'09'          SET REC NOT FOUND/END OF BLK                 
         B     DAEXIT                                                           
*                                                                               
RDBLK6   BCT   R0,RDBLK4                                                        
*                                                                               
RDBLK8   SR    R1,R1                                                            
         ICM   R1,3,0(R5)                                                       
         BZ    RDBLK4X             THIS IS AN ERROR BUT JUST SET EOB            
*                                                                               
         XR    R0,R0               ONLY READ UP TO DBLKSZ AND NO MORE           
         ICM   R0,3,DBLKSZ                                                      
         N     R0,=XL4'00007FFF'                                                
         CR    R1,R0                                                            
         BL    *+6                                                              
         LR    R1,R0                                                            
*                                                                               
         CLI   BYTE,1                                                           
         BE    RDBLK9                                                           
         AHI   R1,-2                                                            
         STH   R1,P3+2             SET LEN FOR USER                             
         L     R0,P2                                                            
         N     R0,P2LOWBTS                                                      
         LA    RE,2(R5)                                                         
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         B     DAEXIT                                                           
*                                                                               
RDBLK9   AHI   R1,-6                                                            
         STH   R1,P3+2             SET LEN FOR USER                             
         L     R0,P2                                                            
         N     R0,P2LOWBTS                                                      
         LA    RE,6(R5)                                                         
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* READ ALL THE RECORDS ON A TRACK INTO USER PROVIDED BUFFER           *         
* FORMATTED SAVE AREA IN USER BUFFER IS                               *         
* 00-07 FILENAME                                                      *         
* 08-11 TT00 OF LAST TRACK READ (TT0X FOR D/A INDEXED FILES)          *         
* 12-15 DATA LENGTH IN BUFFER X'FFFFFFFF' MEANS FULL TRK READ ERROR   *         
***********************************************************************         
RDTRK    L     R6,P6               GET BUFFER ADDRESS                           
         N     R6,LOWBITS                                                       
         CLC   0(8,R6),DTF+22      DOES IT LOOK LIKE WE'VE BEEN HERE            
         BE    RDTRK0                                                           
         XC    0(16,R6),0(R6)      NO - INIT SAVE AREA AND SET NAME             
         MVC   0(8,R6),DTF+22                                                   
*                                                                               
RDTRK0   L     R4,P5               GET A(TTBR)                                  
         N     R4,LOWBITS                                                       
         CLC   8(2,R6),0(R4)       TEST IF REQUEST FOR SAME TRACK               
         BNE   RDTRK4                                                           
RDTRK1A  TM    DTFTYPE,DTFTBIGF    TEST BIG FILE DISK ADDRESSES                 
         BO    RDTRK1B                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    RDTRK2                                                           
         ICM   RF,15,0(R4)         GET TTTTBBRR                                 
         N     RF,=X'FFFFC000'     KEEP LEFTMOST 18 BITS                        
         C     RF,8(R6)            COMPARE TO SAVED ADDRESS                     
         BNE   RDTRK4                                                           
         B     RDTRK2                                                           
*                                                                               
RDTRK1B  TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    RDTRK1C                                                          
         ICM   RF,15,0(R4)         GET TTTTTBRR                                 
         N     RF,=X'FFFFF000'     KEEP LEFTMOST 20 BITS                        
         C     RF,8(R6)            COMPARE TO SAVED ADDRESS                     
         BNE   RDTRK4                                                           
         B     RDTRK2                                                           
*                                                                               
RDTRK1C  ICM   RF,15,0(R4)         GET TTTTTXRR                                 
         N     RF,=X'FFFFFC00'     KEEP LEFTMOST 22 BITS                        
         C     RF,8(R6)            COMPARE TO SAVED ADDRESS                     
         BNE   RDTRK4                                                           
*                                                                               
RDTRK2   TM    READTYPE,FLUSH      TEST IF FLUSH REQUEST                        
         BO    RDTRK4                                                           
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BZ    RDTRK8                                                           
         CLC   11(1,R6),3(R4)      YES - MATCH EXTENT ALSO                      
         BE    RDTRK8                                                           
*                                                                               
RDTRK4   L     R4,P5               GET A(USERS TTBR)                            
         N     R4,LOWBITS                                                       
         ICM   RF,15,0(R4)         GET TTBR                                     
         TM    DTFTYPE,DTFTBIGF    TEST BIG FILE DISK ADDRESSES                 
         BO    RDTRK4A                                                          
         N     RF,=X'FFFFC000'     KEEP LEFTMOST 18 BITS                        
         B     RDTRK4C                                                          
RDTRK4A  TM    DTFTYPE,DTFTBIG                                                  
         BO    RDTRK4B                                                          
         N     RF,=X'FFFFF000'     KEEP LEFTMOST 20 BITS                        
         B     RDTRK4C                                                          
RDTRK4B  N     RF,=X'FFFFFC00'     KEEP LEFTMOST 22 BITS                        
RDTRK4C  STCM  RF,15,8(R6)         SET TTT0 IN SAVE AREA                        
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BZ    *+10                                                             
         MVC   11(1,R6),3(R4)      SET TT0X IN SAVE AREA                        
*                                                                               
         CLI   PROTON,0                                                         
         BE    RDTRK5                                                           
         ICM   RE,15,ATCB                                                       
         BZ    RDTRK5                                                           
         ICM   R0,15,TCBPIO-TCBD(RE)                                            
         BZ    RDTRK5                                                           
         L     RE,P6                                                            
         ST    RE,SAVEP6                                                        
         ST    R0,P6                                                            
         BRAS  RE,INICCW           INITIALISE CCWS/IDAWS                        
         LA    R5,SRCH             SET TO READ A NEW TRACK                      
         BAS   RE,DACCHH                                                        
         MVI   SRCH+4,0            SET SRCH REC ARG TO 0                        
         MVI   CCWRD,X'5E'         SET READ FULL TRK                            
         L     R1,P6                                                            
         SR    R0,R0                                                            
         ICM   R0,3,MAXIOL                                                      
         BAS   RE,SETIDAWS                                                      
         OI    CCWRD+4,X'04'       SET IDA                                      
         LA    R1,IDAWS                                                         
         STCM  R1,7,CCWRD+1        DIRECTLY TO I/O AREA                         
         L     RE,P6                                                            
         XC    0(16,RE),0(RE)                                                   
         L     R6,SAVEP6                                                        
         B     RDTRK5A                                                          
*                                                                               
RDTRK5   LA    R5,SRCH             SET TO READ A NEW TRACK                      
         BAS   RE,DACCHH                                                        
         MVI   SRCH+4,0            SET SRCH REC ARG TO 0                        
         L     R6,P6               GET BUFFER ADDRESS                           
         N     R6,LOWBITS                                                       
         LA    RE,16(R6)           POINT PAST SAVE AREA                         
         ST    RE,CCWRD            SET READ DATA ADDRESS                        
         XC    0(16,RE),0(RE)                                                   
         MVI   CCWRD,X'5E'         SET READ FULL TRK                            
         NI    CCWRD+4,X'FF'-X'04' RESET IDA                                    
*                                                                               
RDTRK5A  MVC   CCWRD+6(2),MAXIOL   SET BIG LEN                                  
         CLC   SAVEP3(2),=C'L='                                                 
         BNE   RDTRK6                                                           
         OC    SAVEP3+2(2),SAVEP3+2                                             
         JZ    *+2                 DIE=ZERO L=LEN                               
         MVC   CCWRD+6(2),SAVEP3+2 SET LEN FOR READ TO L= OVERRIDE              
*                                                                               
RDTRK6   BAS   R9,SETSCTRZ                                                      
         BRAS  R9,EXCPRD                                                        
         BAS   R9,EXCP                                                          
*                                                                               
         CLI   PROTON,0                                                         
         BE    RDTRK6A                                                          
         ICM   RE,15,ATCB                                                       
         BZ    RDTRK6A                                                          
         OC    SAVEP6,SAVEP6                                                    
         BZ    RDTRK6A                                                          
         ICM   R0,15,TCBPIO-TCBD(RE)                                            
         BZ    RDTRK6A                                                          
         L     R6,SAVEP6                                                        
         ST    R6,P6                                                            
         SR    RF,RF                                                            
         ICM   RF,3,CCWRD+6        GET READ LENGTH                              
         SR    RE,RE                                                            
         ICM   RE,3,IOBRCNT                                                     
         SR    RF,RE                                                            
         BZ    RDTRK14                                                          
         ST    RF,12(R6)           SET DATA LEN IN BUFFER                       
         LA    RE,16(R6)                                                        
         LR    R1,RF                                                            
         MVCL  RE,R0                                                            
         B     RDTRK7                                                           
*                                                                               
RDTRK6A  SR    R0,R0                                                            
         ICM   R0,3,CCWRD+6        GET READ LENGTH                              
         SR    RE,RE                                                            
         ICM   RE,3,IOBRCNT                                                     
         SR    R0,RE                                                            
         BZ    RDTRK14                                                          
         ST    R0,12(R6)           SET DATA LEN IN BUFFER                       
*                                                                               
RDTRK7   OC    DBLK,DBLK           TEST IF BLOCKED FILE                         
         BZ    RDTRK8                                                           
         CLC   0(4,R4),=X'00010101'                                             
         BNE   RDTRK8                                                           
RDTRK7A  CLC   24(3,R6),=X'000041' TEST IF LOADED AS 18-BIT FILE                
         BNE   RDTRK7B                                                          
         OI    DTFTYPE,DTFTBIG                                                  
         MVC   0(3,R4),=X'000041'  FIX DISK ADR TO 18-BIT FORMAT                
         MVC   8(3,R6),=X'000040'  SET TRACK ADDR IN BUFFER HEADER              
         B     RDTRK8                                                           
*                                                                               
RDTRK7B  CLC   24(3,R6),=X'000011' TEST IF LOADED AS 20-BIT FILE                
         BNE   RDTRK7C                                                          
         OI    DTFTYPE,DTFTBIGF                                                 
         MVC   0(3,R4),=X'000011'  FIX DISK ADR TO 20-BIT FORMAT                
         MVC   8(3,R6),=X'000010'  SET TRACK ADDR IN BUFFER HEADER              
         B     RDTRK8                                                           
*                                                                               
RDTRK7C  CLC   24(3,R6),=X'000005' TEST IF LOADED AS 22-BIT FILE                
         BNE   RDTRK8                                                           
         OI    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         MVC   0(3,R4),=X'000005'  FIX DISK ADR TO 22-BIT FORMAT                
         MVC   8(3,R6),=X'000004'  SET TRACK ADDR IN BUFFER HEADER              
*                                                                               
RDTRK8   L     R5,P6               GET BUFFER ADDRESS                           
         N     R5,LOWBITS                                                       
         CLC   12(4,R5),=F'-1'     TEST PREVIOUS FULL TRK RD ERROR              
         BNE   RDTRK10                                                          
         NI    READTYPE,255-TRACK  SET TO READ WITHOUT TRACK BUFFER             
         MVC   DAROUTA,=A(RDID)                                                 
         MVI   P3,0                CLEAR ERROR FLAG                             
         B     DA4                 AND GO REBUILD CCW'S                         
*                                                                               
RDTRK10  L     R6,12(R5)           GET DATA LENGTH                              
         LA    R5,16(R5)           POINT TO FIRST REC                           
         L     R4,P5               GET A(TTB)                                   
         N     R4,LOWBITS                                                       
         SR    R0,R0                                                            
         IC    R0,2(R4)            SET REC NUM IN BCT REG                       
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    RDTRK11                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    RDTRK16                                                          
         N     R0,=X'0000003F'     6 BITS FOR BLOCK OR RECORD                   
         B     RDTRK16                                                          
*                                                                               
RDTRK11  TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    RDTRK12                                                          
         TM    2(R4),X'0F'         TEST BLOCKED 20-BIT RECORD                   
         BZ    *+12                                                             
         N     R0,=X'0000000F'     TTTTTBRR BLOCKED IS 4 BITS                   
         B     RDTRK16                                                          
         SR    R0,R0               TTTTT0RR UNBLOCKED 8 BITS                    
         ICM   R0,1,3(R4)                                                       
         B     RDTRK16                                                          
*                                                                               
RDTRK12  TM    2(R4),X'03'         TEST BLOCKED 22-BIT RECORD                   
         BZ    *+12                                                             
         N     R0,=X'00000003'     TTTTTXRR BLOCKED IS 2 BITS                   
         B     RDTRK16                                                          
         SR    R0,R0               TTTTT0RR UNBLOCKED 8 BITS                    
         ICM   R0,1,3(R4)                                                       
         B     RDTRK16                                                          
*                                                                               
RDTRK13  MVC   HALF,6(R5)          GET REC LEN FROM COUNT FIELD                 
         LA    RE,8                ADD 8 FOR COUNT FIELD LENGTH                 
         AH    RE,HALF                                                          
         AR    R5,RE               POINT TO NEXT REC                            
         SR    R6,RE               ADJUST REMAINING DATA LEN                    
         BP    *+12                                                             
RDTRK14  MVI   P3+1,X'09'          SET REC NOT FOUND/END OF BLOCK               
         B     DAEXIT                                                           
*                                                                               
RDTRK16  BCT   R0,RDTRK13                                                       
*                                                                               
         MVC   HALF,6(R5)          MOVE LENGTH                                  
         LH    R6,HALF                                                          
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    RDTRK18                                                          
         TM    READTYPE,TRACK                                                   
         BZ    RDTRK18                                                          
         L     R7,DBLK             MOVE BLOCKED RECORD TO BUFFER                
         B     RDTRK20                                                          
RDTRK18  L     R7,P2               MOVE RECORD TO CALLER'S I/O AREA             
         N     R7,P2LOWBTS                                                      
         STH   R6,P3+2                                                          
*                                                                               
RDTRK20  MOVE  ((R7),(R6)),8(R5)                                                
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    DAEXIT              YES - NO NEED TO DEBLOCK                     
*                                                                               
         TM    READTYPE,TRACK                                                   
         BZ    DAEXIT                                                           
         L     R5,DBLK                                                          
         B     RDBLK1              BACK TO NORMAL BLOCK PROCESSING              
         EJECT                                                                  
***********************************************************************         
* WRITE RECORD ROUTINES                                               *         
***********************************************************************         
WTID     L     R4,P5               GET A(TTBR)                                  
         N     R4,LOWBITS                                                       
*                                                                               
WTIDPQ   CLC   DTFDD(4),=C'PRTQ'   IS THIS A PRTQ                               
         JNE   WTIDPQXX                                                         
         TM    DTFTYPE,DTFTB22     IS THIS A 16 BIT PQ                          
         JO    WTIDPQXX            IT'S 22 BIT                                  
         JZ    WTIDPQXX            IT'S 16 BIT                                  
*                                                                               
         LR    RF,R2               MUST BE A 20 BIT PQ  (NEVER 18 BIT)          
         AHI   RF,-40              BACK UP TO CIDATA                            
         USING CIDATA,RF                                                        
*                                                                               
         MVC   PQSAVEDA,0(R4)      SAVE ORIGINAL DA                             
*                                                                               
         L     R0,0(R4)            R0=DA   TTTTBB00                             
         SRL   R0,4                SHIFT TO GET 20 BIT TRACK                    
         ST    R0,FULL             SAVE AS 0TTTTBB0 IN FULL                     
         NC    FULL,=X'FFFFF000'   CLEAR ALL BUT TRACKS                         
         MVC   FULL+3(1),2(R4)     SAVE AS 0TTTT0BB                             
*                                                                               
         OC    CJSTTRK,CJSTTRK     IF ZERO NOT FULLY INITIALISED YET            
         JZ    WTIDPQX             SO DONE                                      
*                                                                               
         L     R0,FULL             R0=NEW DA                                    
         SRL   R0,12               SHIFT SO R0=TRACK ONLY                       
         SH    R0,CJSTTRK          ARE WE ON PART2S                             
         JL    WTIDPQX             NO - DONE                                    
*                                                                               
         CLC   CIHIREC,=X'0004'    CHECK MUST BE 4 BLOCK TRACKS                 
         JNE   *+2                 4 PER TRACK REQUIRED FOR BIG20               
*                                                                               
         LH    RE,CJHIREC          SET RE TO BLOCKS PER PART 2                  
         SRL   RE,2                /4 TO GET TRACKS PER PART 2                  
         STH   RE,HALF                                                          
         MH    R0,HALF             MULTIPLY RELATIVE PART 2 BY TRKS             
         AH    R0,CJSTTRK          ADD BACK PART 2 START TRACK                  
         DROP  RF                                                               
*                                                                               
         L     RE,FULL             RE=NEW DA                                    
         N     RE,=X'00000FFF'     MASK OUT TO JUST 0BB                         
         AHI   RE,-1               BLOCK -1 SO TRK 1 IS 0 ETC                   
         LR    RF,RE               RF=BB -1                                     
         N     RE,=X'00000003'     KEEP LOW BITS                                
         LA    RE,1(RE)            ADD BACK 1                                   
         STC   RE,FULL+3           SAVE AS NEW BB                               
*                                                                               
         N     RF,=X'000000FC'     KEEP HIGH BITS                               
         SRL   RF,2                SHIFT OUT LOW BITS                           
         CH    RF,HALF             TEST NOT MORE THAN TRACKS PER PART 2         
         JL    WTIDPQ9                                                          
         BCTR  RF,0                IF SO GO BACK TO PREVIOUS                    
         MVI   FULL+3,5            AND ATTEMPT BLOCK 5 READ (NOT FOUND)         
WTIDPQ9  AR    R0,RF               ADD TO TRACK                                 
         SLL   R0,4                LINE UP                                      
         STCM  R0,7,FULL           AND SAVE IN NEW DA                           
*                                                                               
WTIDPQX  MVC   0(4,R4),FULL        SAVE NEW DA                                  
*                                                                               
WTIDPQXX EQU   *                   SAVE NEW DA                                  
*                                                                               
         LA    R5,SRCH             TRANSLATE TO CCHHR                           
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    WTREC               YES - ALWAYS TREAT AS UNBLOCKED              
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTID3                                                            
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT FILE                   
         BO    WTID2                                                            
         TM    2(R4),X'0F'         20-BIT BLOCKED IF BLOCK BITS NONZERO         
         BNZ   WTBLK                                                            
         B     WTREC                                                            
WTID2    TM    2(R4),X'03'         22-BIT BLOCKED IF BLOCK BITS NONZERO         
         BNZ   WTBLK                                                            
         B     WTREC                                                            
WTID3    CLI   3(R4),0             TEST BLK REQUEST                             
         BNE   WTBLK                                                            
*                                                                               
WTREC    BAS   RE,DACCHH           UNBLOCKED - TRANSLATE TTBR TO CCHHR          
         MVI   CCWWT,X'05'         SET OP CD=WRITE                              
         L     R1,P2                                                            
         N     R1,P2LOWBTS                                                      
         SR    R0,R0                                                            
         ICM   R0,3,P3+2                                                        
         BAS   RE,SETIDAWS                                                      
         LA    R1,IDAWS                                                         
         STCM  R1,7,CCWWT+1        WRITE FROM I/O AREA                          
         MVI   CCWWT+4,X'04'       RESET SLI AND SET IDA                        
         MVC   CCWWT+6(2),P3+2     SET LENGTH                                   
         TM    DBLKSZ,X'80'        CALC SECTOR FOR F/L RECORDS                  
         BZ    *+8                                                              
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP                                                          
         B     DAEXIT                                                           
*                                                                               
WTBLK    L     R5,DBLK             BLOCKED - GET BUFFER ADDRESS                 
         CLC   DBLKDA(3),0(R4)     TEST BLK IN CORE                             
         BE    WTBLK2                                                           
*                                                                               
WTBLK1   BAS   R9,WBB              READ BLOCK                                   
         CLC   0(3,R4),0(R5)       TEST TTB REQUESTED TO ACTUAL                 
         JNE   *+2                 DIE=TTB DONT MATCH                           
         MVC   DBLKDA(3),0(R5)     SAVE TTB IN DTF                              
*                                                                               
WTBLK2   TM    DTFTYPE,DTFTKCL+DTFTKCR TEST IF KEY COMPRESSED FILE              
         BZ    WTBLK3                                                           
         GOTO1 =A(WTBLKA)          COMPRESSED RECORDS                           
         BE    WTBLK8                                                           
         B     DAEXIT                                                           
*                                                                               
WTBLK3   LH    R6,4(R5)            NON COMPRESSED RECORDS                       
         AHI   R6,-6                                                            
         LA    R5,6(R5)            POINT TO FIRST RECLEN                        
         SR    R0,R0                                                            
         IC    R0,3(R4)            RECORD NUMBER                                
         B     WTBLK6                                                           
WTBLK4   LH    R1,0(R5)            BUMP TO NEXT RECORD IN BLOCK                 
         AR    R5,R1                                                            
         SR    R6,R1                                                            
         BP    *+12                                                             
         MVI   P3+1,X'09'          SET REC NOT FOUND/END OF BLK                 
         B     DAEXIT                                                           
WTBLK6   BCT   R0,WTBLK4                                                        
*                                                                               
WTBLK7   LH    RF,0(R5)            R5=A(RECORD IN BLOCK)                        
         AHI   RF,-2                                                            
         CH    RF,P3+2             TEST NEW LENGTH WITH OLD LENGTH              
         JH    *+2                 DIE=INCREASED LEN                            
         LA    RE,2(R5)                                                         
         L     R0,P2               GET A(NEW RECORD)                            
         N     R0,P2LOWBTS                                                      
         LR    R1,RF                                                            
         MVCL  RE,R0               MOVE NEW RECORD TO BLOCK                     
*                                                                               
WTBLK8   CLI   HOLD,0              DO NOT WRITE IF HOLD SET                     
         BE    *+12                                                             
         OI    DIND,DINDBWP        SET BLOCK UPDATED                            
         B     DAEXIT                                                           
         L     R4,P5                                                            
         N     R4,LOWBITS                                                       
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         MVI   CCWWT,X'05'         SET OPCD=WRITE                               
         MVI   CCWWT+4,4           RESET SLI/SET IDA                            
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP                                                          
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* ADD A NEW RECORD AT THE END OF A FILE OR A CONTROL INTERVAL.        *         
* WTCKD  ADDS A RECORD AT THE END OF A FILE (DNEXT)                   *         
* ADDADR RESERVES THE CURRENT EOF POINTER (DNEXT) & RETURNS TO CALLER *         
* ADDAFT ADDS A RECORD AFTER THE ADDRESS PASSED IN P6                 *         
***********************************************************************         
WTCKD    MVI   WTCMD,C'W'          SET COMMAND CODE                             
         OI    DTF+2,X'80'         SET FLAG FOR DNEXT AVAILABLE                 
         OI    DTF+0,X'40'                                                      
         MVI   IOBFLAG1,X'C1'      SET DC/CC/RELATED/NOAPPNDG                   
         MVI   IOBFLAG2,X'20'      SET BECAUSE BIT 6 ABOVE IS OFF               
         B     ADDADR2                                                          
*                                                                               
ADDADR   CLI   LOCKFLG,C'Y'        HAVE WE BEEN IN ONCE ALREADY                 
         BE    ADDADR0                                                          
         GOTO1 =A(LCKEOF)          LOCK AND GET EOF FROM DATASPACE              
         BE    ADDADR0                                                          
         MVI   EOFWHY,2            SET INTERNAL SYNCH CALL                      
         B     FNDEOF                                                           
*                                                                               
ADDADR0  MVC   P3+2(2),SAVEP3+2                                                 
         TM    DTF+2,X'80'         TEST DNEXT AVAILABLE                         
         BO    ADDADR1                                                          
         ICM   RF,15,=V(ADWAIT)                                                 
         BZ    ADDADR1                                                          
         LR    R1,R2               POINT TO DTF                                 
         O     R1,=X'FF000000'     SET 'DO NOT WAIT ON THIS ECB'                
         BASSM RE,RF               BRANCH AND SET 24-BIT MODE                   
         LA    RE,ADDADR           THANKS ZIEGLER - YOU FUCKHEAD                
         O     RE,=X'80000000'                                                  
         BSM   0,RE                BACK TO 31-BIT MODE AND TRY AGAIN            
*                                                                               
ADDADR1  MVI   WTCMD,C'R'          SET COMMAND CODE                             
         NI    DTF+2,X'7F'         SET DNEXT NOT AVAILABLE FLAG                 
         NI    DTF+0,X'BF'                                                      
*                                                                               
ADDADR2  MVC   HITRK(2),=X'FFFF'   EXTRACT VALUES FROM DTF                      
         XC    HITRK+2(2),HITRK+2                                               
         MVC   WNEXT,DNEXT                                                      
         MVC   WCOUNT,DCOUNT                                                    
         B     WTCKD0                                                           
*                                                                               
ADDAFT   MVI   WTCMD,C'F'          SET COMMAND CODE                             
         XC    HITRK,HITRK                                                      
         MVC   HITRK(2),P6         P6(2) IS HI TRK FOR CNTL INTRVL              
         MVC   WCOUNT,P6+2         P6+2 IS REMAINING TRK CAPACITY               
         L     RE,P5                                                            
         N     RE,LOWBITS                                                       
         MVC   WNEXT,0(RE)                                                      
*                                                                               
WTCKD0   SR    R0,R0               SET RECORD LENGTH FOR TRACK CAPACITY         
         STH   R0,RECLEN                                                        
         ICM   R0,3,P3+2           IF ZERO LEN (RECOVERY PSEUDO ERASE)          
         BZ    WTCKD4              THEN WRITE ON THIS TRACK                     
         BAS   R9,SETLEN                                                        
         STH   R0,RECLEN                                                        
*                                                                               
WTCKD1   TM    DTFTYPE,DTFTBIGF    TEST 20-BIT TRACK                            
         BO    WTCKD2                                                           
         TM    DTFTYPE,DTFTBIG     TEST 18-BIT TRACK                            
         BZ    WTCKD3                                                           
         TM    WNEXT+2,X'3F'       18-BIT MAX REC NUM IS 63                     
         BM    WTCKD1A                                                          
         BO    WTCKD1B             AT MAX VALUE SO GO TO NEXT TRACK             
         MVC   WCOUNT,DEVCAPL      AT MIN VALUE SO SET CAPACITY TO MAX          
*                                                                               
WTCKD1A  CLC   RECLEN,WCOUNT       TEST IF RECORD FITS ON THIS TRACK            
         BNH   WTCKD4              YES - GO AND WRITE IT                        
*                                                                               
WTCKD1B  SR    RE,RE               BUMP TO NEXT 18-BIT TRACK                    
         ICM   RE,7,WNEXT                                                       
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,6                                                             
         STCM  RE,7,WNEXT          SET TT0                                      
*                                                                               
WTCKD1C  MVI   WNEXT+3,0           NO D/A INDEXED BIG FILES                     
*                                                                               
WTCKD1D  EQU   *                   NO CONTROL INTERVALS FOR BIG FILES           
*                                                                               
WTCKD1E  MVC   WCOUNT,DEVCAPL      RESET CAPACITY COUNTER                       
         CLC   RECLEN,WCOUNT       TEST REC FITS NOW                            
         BNH   WTCKD4                                                           
         DC    H'0'                DIE=REC LEN>TRK LEN                          
*                                                                               
WTCKD2   TM    WNEXT+3,X'FF'       20-BIT FORMAT TTTTT0RR                       
         BM    WTCKD2A                                                          
         BO    WTCKD2B             AT MAX VALUE SO GO TO NEXT TRACK             
         MVC   WCOUNT,DEVCAPL      RR AT MIN VALUE SO SET CAP TO MAX            
*                                                                               
WTCKD2A  CLC   RECLEN,WCOUNT       TEST IF RECORD FITS ON THIS TRACK            
         BNH   WTCKD4              YES - GO AND WRITE IT                        
*                                                                               
WTCKD2B  TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTCKD2C                                                          
         ICM   RE,15,WNEXT         BUMP TO NEXT 20-BIT TRACK                    
         SRL   RE,12                                                            
         LA    RE,1(RE)                                                         
         SLL   RE,12                                                            
         STCM  RE,15,WNEXT         SET TTTTT000                                 
         B     WTCKD2E                                                          
*                                                                               
WTCKD2C  ICM   RE,15,WNEXT         BUMP TO NEXT 22-BIT TRACK                    
         SRL   RE,10                                                            
         LA    RE,1(RE)                                                         
         SLL   RE,10                                                            
         STCM  RE,15,WNEXT         SET TTTTTX00                                 
*                                                                               
WTCKD2E  MVC   WCOUNT,DEVCAPL      RESET CAPACITY COUNTER                       
         CLC   RECLEN,WCOUNT       TEST REC FITS NOW                            
         BNH   WTCKD4                                                           
         DC    H'0'                DIE=REC LEN>TRK LEN                          
*                                                                               
WTCKD3   TM    WNEXT+2,X'FF'       16-BIT FILE - TEST MAX RECORD NUM            
         BM    WTCKD3A                                                          
         BO    WTCKD3B             AT MAX VALUE SO GO TO NEXT TRACK             
         MVC   WCOUNT,DEVCAPL      AT MIN VALUE SO SET CAPACITY TO MAX          
*                                                                               
WTCKD3A  CLC   RECLEN,WCOUNT       TEST IF RECORD FITS ON THIS TRACK            
         BNH   WTCKD4              YES - GO AND WRITE IT                        
*                                                                               
WTCKD3B  SR    RE,RE               BUMP TO NEXT TRACK                           
         ICM   RE,3,WNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,8                                                             
         STCM  RE,7,WNEXT          SET TT0                                      
*                                                                               
WTCKD3C  TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    *+8                                                              
         MVI   WNEXT+3,0           NO - SET RECORD NUMBER TO ZERO               
*                                                                               
WTCKD3D  CLC   WNEXT(2),HITRK      TEST STILL IN CNTL INTERVAL                  
         BH    DAEXITE             NO - TAKE EOF EXIT                           
*                                                                               
WTCKD3E  MVC   WCOUNT,DEVCAPL      RESET CAPACITY COUNTER                       
         CLC   RECLEN,WCOUNT       TEST REC FITS NOW                            
         BNH   WTCKD4                                                           
         DC    H'0'                DIE=REC LEN>TRK LEN                          
*                                                                               
WTCKD4   SR    R0,R0               UPDATE CAPACITY COUNTER                      
         ICM   R0,3,WCOUNT                                                      
         SH    R0,RECLEN                                                        
         STH   R0,WCOUNT                                                        
         CLI   WTCMD,C'R'          TEST COMMAND=ADDADR                          
         BE    WTCKD5                                                           
*                                                                               
         LA    R4,WNEXT                                                         
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         XC    CCW4(40),CCW4                                                    
*                                                                               
         LA    RE,COUNT            SET COUNT CCW                                
         ST    RE,CCWCNT                                                        
         MVI   CCWCNT,X'1D'                                                     
         LA    R0,8                                                             
         STH   R0,CCWCNT+6                                                      
*                                                                               
         OC    P3+2(2),P3+2        TEST ZERO DATA LEN                           
         BZ    *+8                 YES - DONT CHAIN                             
         MVI   CCWCNT+4,X'80'      SET DC                                       
*                                                                               
         MVI   CCWWCKD,X'1D'       SET OPCD=WCKD FOR DATA CCW                   
         L     R1,P2                                                            
         N     R1,P2LOWBTS                                                      
         SR    R0,R0                                                            
         ICM   R0,3,P3+2                                                        
         BAS   RE,SETIDAWS                                                      
         OI    CCWWCKD+4,X'04' SET IDA                                          
         LA    R1,IDAWS                                                         
         STCM  R1,7,CCWWCKD+1      WRITE FROM I/O AREA                          
         MVC   CCWWCKD+6(2),P3+2   SET DATA LEN IN CCW                          
*                                                                               
         XC    COUNT,COUNT         BUILD COUNT FIELD                            
         MVC   COUNT(4),SRCH                                                    
WTCKD4A  TM    DTFTYPE,DTFTBIGF    20-BIT AND 22-BIT TRACK                      
         BZ    WTCKD4C                                                          
         IC    RE,WNEXT+3          GET RECORD NUMBER                            
         B     WTCKD4D                                                          
WTCKD4C  IC    RE,WNEXT+2          GET RECORD NUMBER                            
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         N     RE,=X'0000003F'     18-BIT TRACK                                 
WTCKD4D  LA    RE,1(RE)                                                         
         STC   RE,COUNT+4                                                       
         MVC   COUNT+6(2),P3+2     SET DATA LEN                                 
*                                                                               
WTCKD5   TM    DTFTYPE,DTFTBIGF    UPDATE WNEXT FOR THIS RECORD                 
         BZ    WTCKD5A                                                          
         IC    RE,WNEXT+3          20-BIT AND 22-BIT TRACK                      
         LA    RE,1(RE)                                                         
         STC   RE,WNEXT+3                                                       
         B     WTCKD5B                                                          
WTCKD5A  IC    RE,WNEXT+2          16-BIT AND 18-BIT TRACK                      
         LA    RE,1(RE)                                                         
         STC   RE,WNEXT+2                                                       
WTCKD5B  L     RE,P5               PASS ADDRESS TO USER                         
         N     RE,LOWBITS                                                       
         MVC   0(4,RE),WNEXT                                                    
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    WTCKD5C                                                          
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    *+8                                                              
         MVI   3(RE),0             NO - SET RECORD NUMBER TO ZERO               
*                                                                               
WTCKD5C  CLI   WTCMD,C'F'          TEST COMMAND=ADDAFT                          
         BNE   *+14                                                             
         MVC   P6+2(2),WCOUNT      RETURN TRACK CAPACITY                        
         B     WTCKD8                                                           
         CLI   WTCMD,C'R'          TEST COMMAND=ADDADR                          
         BNE   WTCKD6                                                           
         TM    DIND,DINDNDX        TEST D/A INDEXED DTF                         
         BZ    DAEXIT              NO - EXIT                                    
         LA    R4,WNEXT                                                         
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH           ENSURE E-O-F POSTED IF WNEXT INVALID         
         B     DAEXIT                                                           
*                                                                               
WTCKD6   MVC   DNEXT,WNEXT         FOR WTCKD UPDATE DNEXT/DCOUNT                
         MVC   DCOUNT,WCOUNT                                                    
*                                                                               
WTCKD8   TM    DIND,DINDNDX        TEST D/A INDEXED DTF                         
         BZ    *+8                                                              
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP             ADD RECORD TO TRACK                          
         OC    P3(2),P3                                                         
         BZ    WTCKD9                                                           
         TM    P3+1,X'08'          TEST NOT FOUND ERROR                         
         BZ    WTCKD9                                                           
         XC    P3(2),P3            GO AND RESET DNEXT                           
         MVI   EOFWHY,2            SET INTERNAL SYNCH CALL                      
         MVC   SYNCDA,WNEXT                                                     
         B     FNDEOF                                                           
*                                                                               
WTCKD9   GOTO1 =A(ULKEOF)          RESTORE EOF TO DATASPACE AND UNLOCK          
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* WRITE A SET OF RECORDS IN ONE I/O                                   *         
* USER BUFFER FORMAT IS COUNT1/DATA1,COUNT2/DATA2,ETC.                *         
* COUNT FIELDS ARE AL6/AL2(DATA LEN)                                  *         
* P3+2(2) IS TOTAL BUFFER LENGTH                                      *         
* P2 IS A(CCW BUILD AREA) - 24 BYTES + 8 BYTES PER RECORD             *         
* IF P6(1)=FF THEN BUFFER FMT IS  CNT1/A(DATA1),CNT2/A(DATA2)         *         
* AND BUFFER ADDRESS MUST BE IN 24-BIT ADDRESSABLE STORAGE            *         
***********************************************************************         
WTTRK    MVC   SVDTAPTR,P6         SAVE BUFFER START                            
         NC    SVDTAPTR,LOWBITS                                                 
         CLI   P6,X'FF'            IF P6=X'FF' MUST BE 24 BIT ADDRESS           
         BNE   *+8                                                              
         MVI   SVDTAPTR,0                                                       
         SR    R0,R0                                                            
         ICM   R0,3,P3+2                                                        
         ST    R0,SVDTALEN         AND DATA LENGTH                              
         MVI   WTCMD,C'W'                                                       
         MVI   IOBFLAG1,X'C1'      SET DC/CC/RELATED/NOAPPNDG                   
         MVI   IOBFLAG2,X'20'      SET BECAUSE BIT 6 ABOVE IS OFF               
*                                                                               
WTTRK1   MVC   WCOUNT,DCOUNT       SET REMAINING TRACK CAPACITY                 
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK1B                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTTRK1A                                                          
         TM    DNEXT+2,X'0F'                                                    
         BNZ   *+14                                                             
         MVC   BYTE,DNEXT+3        20-BIT TRACK UNBLOCKED                       
         B     WTTRK1C                                                          
         MVC   BYTE,DNEXT+2                                                     
         NI    BYTE,X'0F'          20-BIT TRACK BLOCKED                         
         B     WTTRK1C                                                          
WTTRK1A  TM    DNEXT+2,X'03'                                                    
         BNZ   *+14                                                             
         MVC   BYTE,DNEXT+3        22-BIT TRACK UNBLOCKED                       
         B     WTTRK1C                                                          
         MVC   BYTE,DNEXT+2                                                     
         NI    BYTE,X'03'          22-BIT TRACK BLOCKED                         
         B     WTTRK1C                                                          
WTTRK1B  MVC   BYTE,DNEXT+2                                                     
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         NI    BYTE,X'3F'          18-BIT TRACK                                 
WTTRK1C  CLI   BYTE,0                                                           
         BNE   WTTRK2                                                           
         MVC   WCOUNT,DEVCAPL      SET MAX LENGTH IF ZERO RECORD NUMBER         
*                                                                               
WTTRK2   SR    R5,R5               ADD UP REC LENS TO SEE IF THEY FIT           
         LM    R6,R7,SVDTAPTR                                                   
WTTRK2A  MVC   P3+2(2),6(R6)       MOVE DATA LEN                                
         LH    R0,P3+2                                                          
         BAS   R9,SETLEN                                                        
         STH   R0,RECLEN                                                        
         AH    R5,RECLEN           BUMP TOTAL BYTES REQUIRED                    
         LA    R0,8                                                             
         AH    R0,P3+2                                                          
         CLI   P6,X'FF'                                                         
         BNE   *+8                                                              
         LA    R0,12                                                            
         AR    R6,R0                                                            
         SR    R7,R0                                                            
         BP    WTTRK2A                                                          
         STH   R5,RECLEN           SAVE TOTAL BYTES REQUIRED                    
*                                                                               
WTTRK2B  CLC   RECLEN,WCOUNT       WILL RECS FIT THIS TRACK                     
         BNH   WTRK4                                                            
         MVC   WCOUNT,DEVCAPL                                                   
         CLC   RECLEN,WCOUNT       WILL THEY FIT ON ANY TRACK                   
         BH    WTRK4               NO - START ON THIS TRACK                     
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK2C                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTTRK2B1                                                         
         TM    DNEXT+2,X'0F'                                                    
         BNZ   *+14                                                             
         MVC   BYTE,DNEXT+3        20-BIT TRACK UNBLOCKED                       
         B     WTTRK2D                                                          
         MVC   BYTE,DNEXT+2        20-BIT TRACK BLOCKED                         
         NI    BYTE,X'0F'                                                       
         B     WTTRK2D                                                          
WTTRK2B1 TM    DNEXT+2,X'03'                                                    
         BNZ   *+14                                                             
         MVC   BYTE,DNEXT+3        22-BIT TRACK UNBLOCKED                       
         B     WTTRK2D                                                          
         MVC   BYTE,DNEXT+2        22-BIT TRACK BLOCKED                         
         NI    BYTE,X'03'                                                       
         B     WTTRK2D                                                          
WTTRK2C  MVC   BYTE,DNEXT+2                                                     
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         NI    BYTE,X'3F'          18-BIT TRACK                                 
WTTRK2D  CLI   BYTE,0              TEST RECORD NUMBER ZERO                      
         JE    *+2                 DIE=FOUND REC ZERO                           
                                                                                
WTTRK2E  SR    RE,RE               SET TO WRITE ON THE NEXT TRACK               
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK2F                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTTRK2E1                                                         
         ICM   RE,7,DNEXT          20-BIT TRACK NUMBER                          
         SRL   RE,4                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,12                                                            
         ST    RE,DNEXT                                                         
         B     WTRK4                                                            
WTTRK2E1 ICM   RE,7,DNEXT          22-BIT TRACK NUMBER                          
         SRL   RE,2                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,10                                                            
         ST    RE,DNEXT                                                         
         B     WTRK4                                                            
WTTRK2F  TM    DTFTYPE,DTFTBIG                                                  
         BZ    WTTRK2G                                                          
         ICM   RE,7,DNEXT          18-BIT TRACK NUMBER                          
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,14                                                            
         ST    RE,DNEXT                                                         
         B     WTRK4                                                            
WTTRK2G  ICM   RE,3,DNEXT          16-BIT TRACK NUMBER                          
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT                                                         
*                                                                               
WTRK4    MVC   WNEXT,DNEXT         EXTRACT END OF FILE INFO                     
         MVC   WCOUNT,DCOUNT                                                    
         MVC   SVMAX,=X'FFFF'                                                   
         LA    R0,IDAWS                                                         
         ST    R0,LASTIDAW         INITIALIZE IDAW POINTER                      
*                                                                               
WTRK5    L     RE,P2               GET USER CCW AREA ADDRESS                    
         N     RE,P2LOWBTS                                                      
         ST    RE,IOBSTART                                                      
         MVC   0(24,RE),CCWSK      MOVE SK/SRCH/TIC CCW'S                       
         LA    R0,8(RE)            GET A(SRCH) IN REG                           
         ST    R0,16(RE)           SET IN TIC                                   
         MVI   16(RE),X'08'        RESTORE OPCD                                 
         LA    RE,16(RE)                                                        
         ST    RE,LASTCCW          SET A(TIC)=LASTCCW                           
*                                                                               
WTTRK5A  TM    DTFTYPE,DTFTBIGF    TEST IF NEED TO RESET TRACK CAPACITY         
         BZ    WTTRK5B                                                          
         CLI   WNEXT+3,0           20-BIT AND 22-BIT - TEST RECORD ZERO         
         BE    WTTRK5D                                                          
         B     WTTRK5E                                                          
WTTRK5B  TM    DTFTYPE,DTFTBIG                                                  
         BZ    WTTRK5C                                                          
         TM    WNEXT+2,X'3F'       18-BIT TRACK - TEST RECORD ZERO              
         BZ    WTTRK5D                                                          
         B     WTTRK5E                                                          
WTTRK5C  CLI   WNEXT+2,0           16-BIT TRACK - TEST RECORD ZERO              
         BNE   WTTRK5E                                                          
WTTRK5D  MVC   WCOUNT,DEVCAPL                                                   
         MVC   SVMAX,WCOUNT                                                     
WTTRK5E  LA    R4,WNEXT            BUILD SEEK/SRCH ARG                          
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         MVC   COUNT(5),SRCH       SAVE DUMMY COUNT FIELD                       
*                                                                               
WTRK6    LM    R6,R7,SVDTAPTR                                                   
         MVC   P3+2(2),6(R6)       MOVE DATA LENGTH                             
         LH    R0,P3+2                                                          
         BAS   R9,SETLEN                                                        
         STH   R0,RECLEN           SET ACTUAL BYTES REQUIRED                    
         CLC   RECLEN,SVMAX                                                     
         JH    *+2                 DIE=REC LEN>TRK LEN                          
*                                                                               
WTTRK7   SR    R0,R0               TEST RECORD OK FOR THIS TRACK                
         ICM   R0,3,WCOUNT                                                      
         SH    R0,RECLEN                                                        
         BM    WTTRK10             TOO BIG TO FIT ON TRACK                      
WTTRK7A  TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK7B                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTTRK7A1                                                         
         TM    WNEXT+2,X'0F'       20-BIT TRACK BLOCKED MAX RECS                
         BO    WTTRK10                                                          
         BNZ   WTTRK7D                                                          
         CLI   WNEXT+3,X'FF'       20-BIT TRACK UNBLOCKED MAX RECS              
         BO    WTTRK10                                                          
         B     WTTRK7D                                                          
WTTRK7A1 TM    WNEXT+2,X'03'       22-BIT TRACK BLOCKED MAX RECS                
         BO    WTTRK10                                                          
         BNZ   WTTRK7D                                                          
         CLI   WNEXT+3,X'FF'       22-BIT TRACK UNBLOCKED MAX RECS              
         BO    WTTRK10                                                          
         B     WTTRK7D                                                          
WTTRK7B  TM    DTFTYPE,DTFTBIG                                                  
         BZ    WTTRK7C                                                          
         TM    WNEXT+2,X'3F'       18-BIT TRACK MAX RECS                        
         BO    WTTRK10                                                          
         B     WTTRK7D                                                          
WTTRK7C  CLI   WNEXT+2,X'FF'       16-BIT TRACK MAX RECS                        
         BE    WTTRK10                                                          
*                                                                               
WTTRK7D  STH   R0,WCOUNT           DECREMENT REMAINING TRACK CAPACITY           
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK7E                                                          
         IC    RE,WNEXT+3          UPDATE WNEXT FOR 20-BIT AND 22-BIT           
         LA    RE,1(RE)                                                         
         STC   RE,WNEXT+3                                                       
         B     WTTRK7F                                                          
WTTRK7E  IC    RE,WNEXT+2          UPDATE WNEXT FOR 16-BIT AND 18-BIT           
         LA    RE,1(RE)                                                         
         STC   RE,WNEXT+2                                                       
WTTRK7F  L     RE,P5               PASS ADDRESS TO USER                         
         N     RE,LOWBITS                                                       
         MVC   0(3,RE),WNEXT                                                    
         MVI   3(RE),0                                                          
*                                                                               
         IC    RE,COUNT+4          BUMP COUNT FIELD RECORD NUMBER               
         LA    RE,1(RE)                                                         
         STC   RE,COUNT+4                                                       
         MVC   0(5,R6),COUNT       MOVE COUNT FIELD CCHHR                       
         MVI   5(R6),0             KEYLEN=0                                     
*                                                                               
         L     RE,LASTCCW                                                       
         OI    4(RE),X'40'         SET CC IN LAST CCW                           
         LA    RE,8(RE)                                                         
         XC    0(8,RE),0(RE)                                                    
         ST    R6,0(RE)            SET COUNT FIELD ADDRESS                      
         MVI   0(RE),X'1D'         SET OPCD=WCKD                                
         LA    R0,8                                                             
         AH    R0,P3+2             SET CCW LEN=DATA LEN + 8                     
         STH   R0,6(RE)                                                         
         ST    RE,LASTCCW          AND SAVE CCW ADDRESS                         
         CLI   P6,X'FF'            IS BUFFER FORMAT COUNT/A(DATA)               
         BNE   WTTRK8                                                           
*                                                                               
         LA    R0,8                RESET COUNT FIELD LENGTH                     
         STH   R0,6(RE)                                                         
         OI    4(RE),X'80'         SET DC                                       
         LA    RE,8(RE)            SET CCW FOR DATA                             
         ST    RE,LASTCCW                                                       
         XC    0(8,RE),0(RE)                                                    
*                                                                               
         L     RF,LASTIDAW                                                      
         ST    RF,NEXTIDAW         SET ADDR FOR IDAW SUBROUTINE                 
         ST    RF,0(RE)            SET IDAW ADDRESS IN CCW                      
         MVI   0(RE),X'1D'         SET COMMAND                                  
         OI    4(RE),X'04'         SET IDA FLAG                                 
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,3,P3+2           GET LEN IN R0                                
         STCM  R0,3,6(RE)          SET LEN IN CCW                               
         L     R1,8(R6)            GET ADDR IN R1                               
         BAS   RE,SETIDAWS                                                      
         LA    R0,12               SET LEN OF BUFFER ENTRY                      
*                                                                               
WTTRK8   AR    R6,R0                                                            
         SR    R7,R0                                                            
         STM   R6,R7,SVDTAPTR                                                   
         BP    WTRK6               CONTINUE IF MORE DATA                        
*                                                                               
WTTRK10  L     RE,LASTCCW          GET LAST CCW                                 
         CLI   0(RE),X'1D'         TEST WCKD                                    
         BNE   WTTRK12                                                          
         MVC   DNEXT,WNEXT         UPDATE VALUES IN DTF                         
         MVC   DCOUNT,WCOUNT                                                    
         BAS   R9,EXCP                                                          
         OC    P3(2),P3                                                         
         BZ    WTTRK11                                                          
         TM    P3+1,X'08'          TEST NOT FOUND                               
         BZ    DAEXIT                                                           
         XC    P3(2),P3                                                         
         MVI   EOFWHY,2            SET INTERNAL SYNCH CALL                      
         B     FNDEOF              GO AND RESET DNEXT                           
*                                                                               
WTTRK11  L     R7,SVDTALEN                                                      
         LTR   R7,R7               TEST MORE TO ADD                             
         BZ    DAEXIT              NO - EXIT                                    
         B     WTRK4                                                            
*                                                                               
WTTRK12  SR    RE,RE               BUMP TO NEXT TRACK                           
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    WTTRK13                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    WTTRK12A                                                         
         ICM   RE,7,WNEXT          20-BIT TRACK NUMBER                          
         SRL   RE,4                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,12                                                            
         ST    RE,WNEXT            SET TTTTT000                                 
         B     WTRK5                                                            
WTTRK12A ICM   RE,7,WNEXT          22-BIT TRACK NUMBER                          
         SRL   RE,2                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,10                                                            
         ST    RE,WNEXT            SET TTTTTX00                                 
         B     WTRK5                                                            
WTTRK13  TM    DTFTYPE,DTFTBIG                                                  
         BZ    WTTRK14                                                          
         ICM   RE,7,WNEXT          18-BIT TRACK NUMBER                          
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,14                                                            
         ST    RE,WNEXT            SET TTTTX000                                 
         B     WTRK5                                                            
WTTRK14  ICM   RE,3,WNEXT          16-BIT TRACK NUMBER                          
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,WNEXT            SET TTTT0000                                 
         B     WTRK5                                                            
         EJECT                                                                  
***********************************************************************         
* ERASE ALL TRACKS TO THE END OF FILE                                 *         
* P5 HAS ADDRESS OF LAST TRACK USED                                   *         
* P2 HAS ADDRESS OF USER CCW BUILD BUFFER IF P2=FF (MIN=1410 BYTES)   *         
* FORMAT OF USER BUFFER IS -                                          *         
* 30CL40 SEEK/SRHA/SRID/TIC/ERASE CCWS                                *         
* 30CL07 SEEK ADDRESSES (00CCHH0)                                     *         
***********************************************************************         
WTERASE  BRAS  RE,ERASE            GO ERASE FILE                                
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* GET DISK ADDRESS OF PREVIOUS RECORD ON FILE. P5 HAS TTB0            *         
* LOGIC OF THIS ROUTINE IS SUBTLE. SEARCH FIELD (CCHHR) IS BUILT AND  *         
* COPIED TO 'COUNT.' SEARCH COMMAND FINDS RECORD N, THEN READ COUNT   *         
* COMMAND READS COUNT FIELD OF RECORD N+1. IF I/O IS SUCCESSFUL COUNT *         
* WILL CONTAIN NEXT COUNT FIELD AND WILL NOT BE EQUAL TO SEARCH FIELD *         
* IF I/O FAILS, COUNT AND SEARCH ARE EQUAL AND WE ARE DONE            *         
***********************************************************************         
DABACK   L     R4,P5               R4=A(DISK ADDRESS)                           
         N     R4,LOWBITS                                                       
         SR    R0,R0                                                            
*                                                                               
DABACK1  TM    DTFTYPE,DTFTBIGF    20-BIT TRACK FILE                            
         BZ    DABACK2                                                          
         TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    DABAK1B                                                          
         NI    2(R4),X'F0'         20-BIT UNBLOCKED REQUEST TTTTT0RR            
         ICM   R0,7,0(R4)                                                       
         SRL   R0,4                R0=TRACK                                     
         SR    R1,R1                                                            
         ICM   R1,1,3(R4)          R1=BLOCK                                     
         AHI   R1,-1                                                            
         BNP   DABAK1A                                                          
         STC   R1,3(R4)                                                         
         B     DAEXIT                                                           
DABAK1A  AHI   R0,-1               DECREMENT TRACK NUMBER                       
         SLL   R0,4                                                             
         STCM  R0,7,0(R4)                                                       
         B     DABACK6                                                          
DABAK1B  NI    2(R4),X'FC'         22-BIT UNBLOCKED REQUEST TTTTTXRR            
         ICM   R0,7,0(R4)                                                       
         SRDL  R0,2                R0=TRACK                                     
         SRL   R1,30                                                            
         AHI   R1,-1               DECREMENT BLOCK NUMBER                       
         BZ    DABAK1C                                                          
         SLL   R1,30               IF NON ZERO RETURN                           
         SLDL  R0,2                                                             
         STCM  R0,7,0(R4)                                                       
         B     DAEXIT                                                           
DABAK1C  AHI   R0,-1               DECREMENT TRACK NUMBER                       
         SLL   R0,2                                                             
         STCM  R0,7,0(R4)                                                       
         B     DABACK6                                                          
*                                                                               
DABACK2  TM    DTFTYPE,DTFTBIG     18-BIT TRACK NUMBERS                         
         BZ    DABACK4                                                          
         MVI   3(R4),0             INSURE UNBLOCKED REQUEST                     
         ICM   R0,7,0(R4)                                                       
         SRDL  R0,6                R0=TRACK                                     
         SRL   R1,26                                                            
         AHI   R1,-1               DECREMENT BLOCK NUMBER                       
         BZ    DABACK3                                                          
         SLL   R1,26               IF NON ZERO RETURN                           
         SLDL  R0,6                                                             
         STCM  R0,7,0(R4)                                                       
         B     DAEXIT                                                           
DABACK3  BCTR  R0,0                DECREMENT TRACK NUMBER                       
         SLL   R0,6                                                             
         STCM  R0,7,0(R4)                                                       
         B     DABACK6                                                          
*                                                                               
DABACK4  MVI   3(R4),0             16-BIT FILE ENSURE UNBLOCKED                 
         IC    R0,2(R4)                                                         
         BCTR  R0,0                DECREMENT BLOCK NUMBER                       
         STC   R0,2(R4)                                                         
         LTR   R0,R0                                                            
         BNZ   DAEXIT              IF NON ZERO BLOCK NUMBER RETURN              
         ICM   R0,3,0(R4)                                                       
         BCTR  R0,0                DECREMENT TRACK NUMBER                       
         STCM  R0,3,0(R4)                                                       
         MVI   2(R4),0                                                          
*                                                                               
DABACK6  MVC   DCOUNT,=H'1'        SET LOW REMAINING CAPACITY                   
         LTR   R0,R0                                                            
         BP    DABACK10                                                         
         MVI   P3+1,X'04'          SET B-O-F                                    
         B     DAEXIT                                                           
*                                                                               
DABACK10 XC    CCWRD(8),CCWRD                                                   
         LA    RE,COUNT                                                         
         ST    RE,CCWRD                                                         
         MVI   CCWRD,X'12'         SET OPCD=READ COUNT                          
         LA    RE,8                                                             
         STH   RE,CCWRD+6                                                       
*                                                                               
DABACK12 LA    R5,SRCH             LOOP TO FIND LAST REC ON TRACK               
         BAS   RE,DACCHH                                                        
         MVC   COUNT(5),SRCH                                                    
*                                                                               
         L     RF,IOBSTART         REMOVE LONG SEEK IF PRESENT                  
         CLI   0(RF),X'07'                                                      
         BNE   *+12                                                             
         LA    RF,8(RF)                                                         
         ST    RF,IOBSTART                                                      
         XC    ECB,ECB                                                          
         EXCP  IOB                                                              
         WAIT  ECB=ECB                                                          
*                                                                               
         CLC   COUNT(5),SRCH       WAS COUNT READ                               
         BE    DABACK14            NO - HAVE FOUND LAST                         
         IC    RE,2(R4)                                                         
         LA    RE,1(RE)                                                         
         STC   RE,2(R4)                                                         
         B     DABACK12                                                         
*                                                                               
DABACK14 TM    DTFTYPE,DTFTBIGF    RECNUM CANT BE ZERO                          
         BO    DABACK15                                                         
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DABACK16                                                         
         TM    2(R4),X'3F'         18-BIT TRACK REC NUM                         
         BNZ   DAEXIT                                                           
         DC    H'0'                DIE=ZERO REC NUM 18                          
DABACK15 CLI   3(R4),0             20-BIT AND 22-BIT REC NUM LAST BYTE          
         BNE   DAEXIT                                                           
         DC    H'0'                DIE=ZERO REC NUM 20                          
DABACK16 CLI   2(R4),0             16-BIT TRACK                                 
         BNE   DAEXIT                                                           
         DC    H'0'                DIE=ZERO REC NUM 16                          
         EJECT                                                                  
***********************************************************************         
* ID OF OWNER CPU IS STORED IN LAST TWO CHRS OF REC ZERO COUNT FIELD  *         
***********************************************************************         
DACPUID  BRAS  RE,CPUID            GO READ RECORD ZERO OF FIRST TRACK           
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* FIND LAST RECORD ON FILE. LAST KNOWN DATA IS AT P5 (TTB0).          *         
***********************************************************************         
DAINFO   MVI   EOFWHY,1            SET ENTRY TO RETURN EOF VALUE(S)             
         B     FNDEOF                                                           
DAINFOX  L     RE,0(R4)            0(R4) HAS BEEN SET TO DNEXT                  
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    DAINFOX2                                                         
         TM    DTFTYPE,DTFTBIG                                                  
         BO    DAINFOX1                                                         
         SRDL  RE,12               20-BIT TRACK                                 
         TM    2(R4),X'0F'                                                      
         BZ    *+12                                                             
         SRL   RF,28               BLOCKED                                      
         B     DAINFOX4                                                         
         SRL   RF,20               UNBLOCKED                                    
         B     DAINFOX4                                                         
DAINFOX1 SRDL  RE,10               22-BIT TRACK                                 
         TM    2(R4),X'03'                                                      
         BZ    *+12                                                             
         SRL   RF,30               BLOCKED                                      
         B     DAINFOX4                                                         
         SRL   RF,22               UNBLOCKED                                    
         B     DAINFOX4                                                         
DAINFOX2 TM    DTFTYPE,DTFTBIG     18-BIT TRACK                                 
         BZ    DAINFOX3                                                         
         SRDL  RE,14                                                            
         SRL   RF,26                                                            
         B     DAINFOX4                                                         
DAINFOX3 SRDL  RE,16               16-BIT TRACK                                 
         SRL   RF,24                                                            
DAINFOX4 LTR   RF,RF               RE=NUM TRKS AND RF=NUM RECS                  
         BNZ   DAINFOX5                                                         
         AHI   RE,-1               DECREMENT TRACKS USED IF RECS=ZERO           
         BNM   *+6                                                              
         SR    RE,RE                                                            
DAINFOX5 ST    RE,4(R4)            4(R4) SET TO TRACKS USED                     
         MVC   8(4,R4),TRKSTOTL    8(R4) TOTAL NUMBER OF TRACKS                 
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* CLEAR BUFFERS SO ALWAYS GET FRESH COPY OF BLOCK                     *         
***********************************************************************         
DACLEAR  CLI   HOLD,0              WRITE OUT OLD BLOCK IF HOLD STATUS           
         BE    DACLEAR1                                                         
         TM    DIND,DINDBWP        HAS CURRENT BLOCK BEEN UPDATED               
         BZ    DACLEAR1                                                         
         LA    R4,DBLKDA           YES - WRITE OUT UPDATED BLOCK                
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         MVI   CCWWT,X'05'                                                      
         MVI   CCWWT+4,4           SET IDA                                      
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP                                                          
         NI    DIND,X'7F'          SET BLOCK NOT UPDATED                        
*                                                                               
DACLEAR1 XC    DBLKDA,DBLKDA       CLEAR MAIN BUFFER DISK ADDR                  
         BRAS  R9,CLRBUFF          CLEAR EXTENDED BUFFER SEEK ADDRS             
DACLEARX B     DAEXIT                                                           
*                                                                               
***********************************************************************         
* CHECK EOF POINTER AND SET IN DSPACE IF NECCESSARY                   *         
***********************************************************************         
CHKEOF   MVI   EOFWHY,3            CHECK EOF FOR GLOBAL FILES                   
         GOTO1 =A(LCKEOF)          LOCK AND GET EOF FROM DATASPACE              
         BNE   FNDEOF                                                           
CHKEOFX  GOTO1 =A(ULKEOF)          RESTORE EOF TO DSPACE AND UNLOCK             
         B     DAEXIT                                                           
*                                                                               
FNDEOF   LA    RE,COUNT            READ RECORDS INTO COUNT FIELD                
         ST    RE,CCWRD                                                         
         MVI   CCWRD,6                                                          
         MVC   CCWRD+6(2),MAXIOL                                                
         MVI   CCWRD+4,X'30'       SLI/NO DATAXFR                               
         TM    DIND,DINDNDX        TEST IF A D/A INDEXED FILE                   
         BO    FNDEOF13                                                         
         XC    LOARG(12),LOARG     LOARG,HIARG,CURARG                           
         L     R4,P5                                                            
         N     R4,LOWBITS                                                       
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    FNDEOF2                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    FNDEOF3                                                          
*                                                                               
FNDEOF1  SR    R0,R0               18-BIT TRACK NUMBER                          
         ICM   R0,7,0(R4)                                                       
         CLM   R0,6,=X'0001'       THIS VALUE IS UNLIKELY !                     
         BNE   *+8                                                              
         LA    R0,X'40'            THIS IS TRK 1 IN 18 BITS                     
         STCM  R0,7,LOARG                                                       
         OI    LOARG+2,1           OR IN RECORD NUMBER                          
         B     FNDEOF5                                                          
*                                                                               
FNDEOF2  TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    FNDEOF2A                                                         
         SR    R0,R0               20-BIT TRACK NUMBER                          
         ICM   R0,7,0(R4)                                                       
         JZ    *+12                                                             
         CLM   R0,6,=X'0001'       THIS VALUE IS UNLIKELY !                     
         BNE   *+8                                                              
         LA    R0,X'10'            THIS IS TRK 1 IN 20 BITS                     
         STCM  R0,7,LOARG                                                       
         MVI   LOARG+3,1           SET RECORD NUMBER                            
         B     FNDEOF5                                                          
FNDEOF2A SR    R0,R0               22-BIT TRACK NUMBER                          
         ICM   R0,7,0(R4)                                                       
         CLM   R0,6,=X'0001'       THIS VALUE IS UNLIKELY !                     
         BNE   *+8                                                              
         LA    R0,X'04'            THIS IS TRK 1 IN 22 BITS                     
         STCM  R0,7,LOARG                                                       
         MVI   LOARG+3,1           SET RECORD NUMBER                            
         B     FNDEOF5                                                          
*                                                                               
FNDEOF3  SR    R0,R0               16-BIT TRACK NUMBER                          
         ICM   R0,3,0(R4)                                                       
         BNZ   *+8                                                              
         LA    R0,1                IF TRACK IS ZERO SET IT TO ONE               
         STH   R0,LOARG                                                         
         MVI   LOARG+2,1           SET RECORD TO ONE                            
*                                                                               
FNDEOF5  LA    R1,DMTX             SEARCH EXTENTS TO GET HIGHEST TRACK          
         USING EXTENTD,R1                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF'                                         
         BNE   *+8                                                              
         LA    R1,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    *+8                                                              
         ICM   R1,15,DMTX                                                       
*                                                                               
         SR    RE,RE                                                            
         SR    R0,R0                                                            
FNDEOF6  CLI   0(R1),X'FF'                                                      
         BE    FNDEOF8             END OF EXTENTS                               
         ICM   R0,3,EXT#TRKS       GET NUMBER OF TRKS THIS EXTENT               
         AR    RE,R0               ADD TO TOTAL                                 
         LA    R1,EXTLNQ(R1)                                                    
         B     FNDEOF6                                                          
         DROP  R1                                                               
*                                                                               
FNDEOF8  ST    RE,TRKSTOTL         SAVE TOTAL NUMBER OF TRACKS                  
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    FNDEOF11                                                         
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    FNDEOF12                                                         
*                                                                               
FNDEOF10 SLL   RE,6                ADJUST TO 18-BIT TRACK ADDRESS               
         STCM  RE,7,HITRK                                                       
         SRL   RE,6                                                             
         LA    RE,1(RE)            SET TO NUMBER OF TRACKS + 1                  
         SLL   RE,6                                                             
         STCM  RE,7,HIARG                                                       
         OI    HIARG+2,1                                                        
         CLC   LOARG,HIARG                                                      
         JH    *+2                 DIE=FAILED EOF SRCH                          
         BRAS  RE,DAEOF            FIND EOF FOR FILE                            
         B     FNDEOFX                                                          
*                                                                               
FNDEOF11 TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    FNDEOF1A                                                         
         SLL   RE,4                ADJUST TO 20-BIT TRACK ADDRESS               
         STCM  RE,7,HITRK                                                       
         SRL   RE,4                                                             
         LA    RE,1(RE)            SET TO NUMBER OF TRACKS + 1                  
         SLL   RE,4                                                             
         STCM  RE,7,HIARG                                                       
         MVI   HIARG+3,1                                                        
         CLC   LOARG,HIARG                                                      
         JH    *+2                 DIE=FAILED EOF SRCH                          
         BRAS  RE,DAEOF            FIND EOF FOR FILE                            
         B     FNDEOFX                                                          
*                                                                               
FNDEOF1A SLL   RE,2                ADJUST TO 22-BIT TRACK ADDRESS               
         STCM  RE,7,HITRK                                                       
         SRL   RE,2                                                             
         LA    RE,1(RE)            SET TO NUMBER OF TRACKS + 1                  
         SLL   RE,2                                                             
         STCM  RE,7,HIARG                                                       
         MVI   HIARG+3,1                                                        
         CLC   LOARG,HIARG                                                      
         JH    *+2                 DIE=FAILED EOF SRCH                          
         BRAS  RE,DAEOF            FIND EOF FOR FILE                            
         B     FNDEOFX                                                          
*                                                                               
FNDEOF12 STH   RE,HITRK            16-BIT TRACK NUMBER                          
         LA    RE,1(RE)                                                         
         STH   RE,HIARG            BUMP TRACK NUMBER                            
         MVI   HIARG+2,1                                                        
         CLC   LOARG,HIARG                                                      
         JH    *+2                 DIE=FAILED EOF SRCH                          
         BRAS  RE,DAEOF            FIND EOF FOR FILE                            
*                                                                               
FNDEOFX  GOTO1 =A(EOFMSG),(RC)     BUILD FIND EOF FILENAME MESSAGE              
         CLI   EOFWHY,1                                                         
         BE    DAINFOX             RETURN TO DAINFO CALL CODE                   
         BL    DAEXIT              RETURN IF NORMAL EOF SEARCH                  
*                                                                               
FNDEOFXX CLI   EOFWHY,3            EXIT IF EOF CHECK CALL                       
         BE    CHKEOFX                                                          
         CLI   EOFWHY,2            TEST IF INTERNAL SYNCH CALL                  
         BNE   DAEXIT                                                           
         L     RE,DAROUTA          YES - RETURN TO START OF CALLED ROUT         
         BR    RE                                                               
***********************************************************************         
* FIND EOF FOR EACH EXTENT ON A D/A INDEXED FILE                      *         
***********************************************************************         
FNDEOF13 LA    R1,DMTX             R1=A(CURRENT EXTENT MATRIX ENTRY)            
         USING EXTENTD,R1                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF'                                         
         BNE   *+8                                                              
         LA    R1,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    *+8                                                              
         ICM   R1,15,DMTX                                                       
         LA    RF,1                RF=CURRENT EXTENT MATRIX NUMBER              
         LA    R0,1                R0=HITRK OF PREVIOUS EXTENT                  
*                                                                               
FNDEOF14 CLI   0(R1),X'FF'         TEST IF END OF EXTENT MATRIX                 
         BE    FNDEOFX                                                          
         XC    LOARG(12),LOARG     LOARG,HIARG,CURARG                           
         LA    R0,1                                                             
         STH   R0,LOARG            LOARG IS ALWAYS ONE                          
         MVI   LOARG+2,1                                                        
         STC   RF,LOARG+3          SET EXTENT NUMBER                            
         ICM   R0,3,EXT#TRKS                                                    
         AHI   R0,1                                                             
         STH   R0,HIARG            HIARG IS HIGH TRACK PLUS 1                   
         MVI   HIARG+2,1                                                        
         STC   RF,HIARG+3          SET EXTENT NUMBER                            
         STC   RF,CURARG+3                                                      
         BRAS  RE,DAEOF            FIND EOF FOR THIS EXTENT                     
         LR    RE,RF                                                            
         SLL   RE,2                                                             
         LA    RE,DNEXTMTX-4(RE)                                                
         MVC   0(4,RE),DNEXT       MOVE DNEXT TO DNEXT MATRIX                   
         LR    RE,RF                                                            
         SLL   RE,1                                                             
         LA    RE,DCNTMTX-2(RE)                                                 
         MVC   0(2,RE),DCOUNT      MOVE DCOUNT TO DCOUNT MATRIX                 
         LA    R1,EXTLNQ(R1)       BUMP TO NEXT EXTENT MATRIX ENTRY             
         LA    RF,1(RF)                                                         
         B     FNDEOF14                                                         
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* OPEN DA FILE USING DYNAMIC ALLOCATION                               *         
* DAOPEN - OPEN FILE WITH DISP=SHR                                    *         
* DAOPOLD- OPEN FILE WITH DISP=OLD                                    *         
***********************************************************************         
DAOPOLD  MVI   BYTE,1              BYTE=01 MEANS DISP=OLD                       
         B     *+8                                                              
DAOPEN   MVI   BYTE,0              BYTE=00 MEANS DISP=SHR                       
*                                                                               
         TM    DTFOPEN,DTF_OPN     EXIT IF ALREADY OPEN                         
         BO    DAEXIT                                                           
         BRAS  RE,DAOPENR          OPEN ROUTINE                                 
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* CLOSE DA FILE AND FREE ALL BUFFERS ASSIGNED                         *         
***********************************************************************         
DACLOSE  TM    DTFOPEN,DTF_OPN     EXIT IF ALREADY CLOSED                       
         BZ    DAEXIT                                                           
*NOP*    MVI   DUB,C'C'                                                         
*NOP*    BRAS  RE,DATRACE                                                       
         BRAS  RF,DACLOSER         CLOSE ROUTINE                                
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* EXECUTE CHANNEL PROGRAM BUILT BY ACTION ROUTINE                     *         
***********************************************************************         
EXCP     CLI   RPSSW,0             INSERT RPS CCW IF ACTIVE                     
         BE    EXCP0                                                            
         LA    R0,CCW0                                                          
         ST    R0,IOBSTART                                                      
         MVC   CCW0,CCW1                                                        
         XC    CCW1,CCW1                                                        
         LA    R0,SECTOR                                                        
         ST    R0,CCW1                                                          
         MVI   CCW1,X'23'          SET OPCD=SET SECTOR                          
         MVI   CCW1+4,X'40'        SET CC                                       
         MVI   CCW1+7,1            SET LEN=1                                    
*                                                                               
EXCP0    L     RF,IOBSTART         REMOVE LONG SEEK IF PRESENT                  
         CLI   0(RF),X'07'                                                      
         BNE   *+12                                                             
         LA    RF,8(RF)                                                         
         ST    RF,IOBSTART                                                      
*                                                                               
EXCP1    XC    ECB,ECB             EXECUTE CHANNEL PROGRAM                      
         EXCP  IOB                                                              
         LA    R1,ECB                                                           
         TM    P1,X'80'            TEST IF NOT WAIT (FOR PQ) REQUIRED           
         BO    EXCPX               EXIT AS NORMAL                               
         ICM   RF,15,=V(ADWAIT)                                                 
         BZ    EXCPWAIT                                                         
         BASSM RE,RF               BRANCH AND SET 24-BIT MODE                   
         LA    RE,EXCPWAIT         THANKS ZIEGLER - YOU FUCKHEAD                
         O     RE,=X'80000000'                                                  
         BSM   0,RE                RESTORE TO 31-BIT MODE                       
*                                                                               
EXCPWAIT WAIT  ECB=(1)                                                          
*                                                                               
EXCP2    CLI   IOBECBCC,X'7F'      TEST NORMAL COMPLETION                       
         BE    EXCPX                                                            
         CLI   IOBECBCC,X'41'      TEST PERMANENT ERROR                         
         BE    EXCP3                                                            
         CLI   IOBECBCC,X'42'      TEST OUTSIDE EXTENTS                         
         BE    EXCPA                                                            
         CLI   IOBECBCC,X'48'      TEST IF RELATED IOB PURGED                   
         BE    EXCP2A                                                           
         DC    H'0'                DIE=EXCP COMPLETION                          
*                                                                               
EXCP2A   L     RE,DTFADCB                                                       
         N     RE,=X'00FFFFFF'                                                  
         NI    44(RE),X'3C'        RESET ERROR CORRECTION FLAGS                 
         B     EXCP1               AND RETRY I/O                                
*                                                                               
EXCP3    SR    RE,RE               GET CHANNEL END CCW IF ERROR                 
         ICM   RE,7,IOBNCCW                                                     
         SH    RE,=H'8'            BACK UP TO LAST CCW EXECUTED                 
         MVC   OPCD,0(RE)          SAVE LAST OP CODE                            
EXCP3A   MVI   RPSSW,0                                                          
         TM    IOBUSTAT,X'02'      TEST CSW UNIT STAT FOR UNIT CHECK            
         BO    EXCP4                                                            
         TM    IOBUSTAT,X'01'      TEST CSW UNIT STAT FOR UNIT EXCPN            
         BZ    EXCP3B                                                           
         CR    R9,R9               OK EXIT WITH CC EQL IF EOF REC               
         BR    R9                                                               
EXCP3B   TM    IOBCSTAT,X'10'      TEST PROTECTION CHECK                        
         BZ    EXCP3C                                                           
         ABEND 899,DUMP            IO PROTECTION FAILURE                        
*                                                                               
EXCP3C   TM    IOBUSTAT,X'FF'      TEST CSW UNIT STAT                           
         JNZ   *+2                 DIE=CSW UNIT STATUS                          
         TM    IOBCSTAT,X'FF'      TEST CSW CHNL STAT                           
         JNZ   *+2                 DIE=CSW CHNL STATUS                          
*                                                                               
EXCP4    TM    IOBSENS0,X'04'      TEST SENSE BYTE 0 ON UNIT CHECK              
         BO    EXCP4A                                                           
         CLI   IOBSENS0,0                                                       
         BE    EXCP5                                                            
         B     EXCP6               UNRECOVERABLE ERROR                          
EXCP4A   CLI   OPCD,X'11'          TRACK OVERRUN - TEST OPCD=ERASE              
         BER   R9                                                               
         B     EXCP6               UNRECOVERABLE ERROR                          
*                                                                               
EXCP5    TM    IOBSENS1,X'08'      TEST SENSE BYTE 1 ON UNIT CHECK              
         BO    EXCP5A                                                           
         B     EXCP6               UNRECOVERABLE ERROR                          
EXCP5A   MVI   P3+1,X'08'          SET NO RECORD FOUND                          
         CLI   WTCMD,C'W'                                                       
         BER   R9                  RETURN IF WTCKD                              
         B     DAEXIT                                                           
*                                                                               
EXCP6    MVI   P3,X'80'            SET UNRECOVERABLE ERROR                      
         CLI   OPCD,X'5E'          TEST FULL TRACK READ                         
         BNE   DAEXIT                                                           
         NI    READTYPE,255-TRACK  SET TO READ WITHOUT TRACK BUFFER             
         MVC   DAROUTA,=A(RDID)                                                 
         MVI   P3,0                RESET AND REDO DIRECT READ                   
         L     RE,P6               POINT TO BUFFER                              
         N     RE,LOWBITS                                                       
         MVC   12(4,RE),=F'-1'     SET ERROR ON FULL TRACK READ FLAG            
         B     DA4                 GO REBUILD CCW'S YOU IDIOT                   
*                                                                               
EXCPA    MVI   P3,X'01'            SET REFERENCE OUTSIDE EXTENTS                
         CLI   P3,0                                                             
         B     DAEXIT                                                           
*                                                                               
EXCPX    BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* READ IN NEW BLOCK.IF OLD BLOCK HAS BEEN UPDATED AND DISK ADDRESS NOW*         
* CHANGED THEN WRITE BACK OLD BLOCK FIRST.                            *         
***********************************************************************         
WBB      ST    R9,SAVER9                                                        
         CLI   HOLD,0              WRITE OUT OLD BLOCK IF HOLD STATUS           
         BE    WBB2                                                             
         TM    DIND,DINDBWP        HAS CURRENT BLOCK BEEN UPDATED               
         BZ    WBB1                                                             
         LA    R4,DBLKDA           YES - WRITE OUT UPDATED BLOCK                
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         MVI   CCWWT,X'05'                                                      
         MVI   CCWWT+4,4           SET IDA                                      
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP                                                          
         NI    DIND,X'7F'          SET BLOCK NOT UPDATED                        
*                                                                               
WBB1     L     R4,P5               READ IN NEW BLOCK                            
         N     R4,LOWBITS                                                       
         CLC   0(4,R4),=4X'FF'                                                  
         BE    DAEXIT              EXIT ON DUMMY READ                           
         MVI   CCWWT,X'06'                                                      
         MVI   CCWWT+4,X'24'       SET IDA AND SET SLI                          
*                                                                               
WBB2     LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         BRAS  R9,CHKBUFF          TEST DATA IN EXTENDED BUFFER                 
         BE    WBBX                                                             
         BAS   R9,SETSCTR                                                       
         BAS   R9,EXCP                                                          
         TM    DTFTYPE,DTFTKCL+DTFTKCR                                          
         BZ    WBBX                                                             
         L     R5,DBLK                                                          
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         AR    R5,R0                                                            
         XC    0(16,R5),0(R5)      CLEAR BUFFER CONTROL AREA                    
*                                                                               
WBBX     L     R5,DBLK             RETURN ADDRESS OF BUFFER                     
         L     R9,SAVER9                                                        
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* TRANSLATE A RELATIVE TRACK ADDRESS TO AN ACTUAL DISK ADDRESS.       *         
* TTTTBBRR FOR 16-BIT/18-BIT ADDR WITH RR=00 FOR UNBLOCKED REC NUM BB *         
* TTTTTBRR FOR 20-BIT ADDR WITH B=0 FOR UNBLOCKED RECORD NUM RR       *         
* TTTT00EE FOR DANDX EE=EXTENT MATRIX NUMBER                          *         
* R4 HAS A(INPUT), R5 HAS A(OUTPUT). ON EXIT R1 POINTS TO             *         
* APPROPRIATE MATRIX ENTRY.                                           *         
***********************************************************************         
DACCHH   TM    DTFOPEN,DTF_OPN     TEST FILE STILL OPEN                         
         JZ    *+2                 DIE=FILE NOT OPEN                            
*                                                                               
DACCHH0  MVC   SAVEDA,0(R4)        SAVE DISK ADDR FOR TRACE DATA                
         LA    R1,DMTX             16 EXTENTS                                   
         USING EXTENTD,R1                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+8                                                              
         LA    R1,DNDXMTX          48 EXTENTS                                   
         TM    DIND,DINDXAM        HIGH CORE EXTENT                             
         BZ    *+8                                                              
         ICM   R1,15,DMTX                                                       
*                                                                               
         LA    R7,1                                                             
         TM    READTYPE,READ1ST                                                 
         BO    DACCHH0C            GET FIRST RECORD, 16, 18 OR 20 BIT           
         ICM   R7,7,0(R4)          GET TRACK NUMBER                             
         TM    DTFTYPE,DTFTBIG+DTFTBIGF                                         
         BO    DACCHH0A                                                         
         BNZ   DACCHH0B                                                         
         SRL   R7,8                16-BIT TRACK                                 
         B     DACCHH0C                                                         
*                                                                               
DACCHH0A SRL   R7,2                22-BIT TRACK                                 
         B     DACCHH0C                                                         
DACCHH0B SRL   R7,4                20-BIT TRACK                                 
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    *+8                                                              
         SRL   R7,2                18-BIT TRACK                                 
DACCHH0C LTR   R7,R7                                                            
         JZ    *+2                 DIE=ZERO TRK NUM                             
*                                                                               
DACCHH1  TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    DACCHH10                                                         
         SR    R0,R0                                                            
         SR    R3,R3                                                            
DACCHH2  CLI   0(R1),X'FF'         TEST VALID EXTENT MATRIX ENTRY               
         BE    DACCHH14            AT END                                       
         ICM   R3,3,EXT#TRKS       GET NUMBER OF TRACKS THIS EXTENT             
         AR    R0,R3               ADD TO TOTAL TRACKS                          
         CR    R7,R0               TEST LIES IN THIS EXTENT                     
         BH    DACCHH4             NO - NEXT                                    
         SR    R0,R3               BACK UP TO START OF EXTENT                   
         SR    R7,R0               AND GET REL TRK FOR THIS EXTENT              
         B     DACCHH16                                                         
*                                                                               
DACCHH4  LA    R1,EXTLNQ(R1)                                                    
         B     DACCHH2                                                          
*                                                                               
DACCHH10 SR    R1,R1               DANDX FILE - EXTENT NUMBER IN D/A            
         ICM   R1,1,3(R4)                                                       
         JZ    *+2                 DIE=ZERO DANDX XTNT                          
*                                                                               
         BCTR  R1,0                                                             
         LA    R0,EXTLNQ           LENGTH OF EXTENT MATRIX ENTRY                
         MR    R0,R0                                                            
         LA    R0,DMTX             16 EXTENTS                                   
         CLC   DMTX(EXTLNQ),=14X'FF'                                            
         BNE   *+8                                                              
         LA    R0,DNDXMTX          48 EXTENTS                                   
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    *+8                                                              
         ICM   R0,15,DMTX                                                       
         AR    R1,R0               R1=A(EXTENT MATRIX ENTRY)                    
         CLI   0(R1),X'FF'         TEST VALID EXTENT MATRIX ENTRY               
         JE    *+2                 DIE=INV XTNT MATRIX                          
*                                                                               
         SR    R0,R0                                                            
DACCHH12 CLI   0(R1),X'FF'                                                      
         BE    DACCHH14                                                         
         CLC   0(2,R4),EXT#TRKS    TEST TRACK NUMBER                            
         BNH   DACCHH16                                                         
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BO    DACCHH14            YES - SET EXTENT E-O-F                       
         SR    R7,R7                                                            
         ICM   R7,3,0(R4)                                                       
         ICM   R0,3,EXT#TRKS                                                    
         SR    R7,R0                                                            
         LA    R1,EXTLNQ(R1)                                                    
         B     DACCHH12                                                         
*                                                                               
DACCHH14 MVI   P3+1,X'04'          SET EOF                                      
         CLC   DAROUTA,=A(WTERASE)                                              
         BER   RE                  GO AWAY NOW                                  
         BCTR  R1,0                                                             
         BCTR  R1,0                                                             
         MVC   0(2,R5),0(R1)       RETURN HIGH RELATIVE TRK                     
         MVC   2(2,R5),DEVTYP      RETURN DEVC TYPE CODE                        
         B     DAEXITE             TAKE EOF EXIT                                
*                                                                               
DACCHH16 SR    R3,R3               R7 CONTAINS REL TRK FOR EXTENT               
         IC    R3,EXTDEV#          GET DEVICE # (SEE DEVDISK TABLE)             
         SHI   R3,1                                                             
         JM    *+2                 DIE=INV DEVICE NUM                           
         SLL   R3,4                                                             
         A     R3,=A(DEVDISK)      SET DEVICE DATA FOR THIS EXTENT              
         MVC   DEVDATA,0(R3)                                                    
         LH    R3,DEVTRKS          R3 HAS TRKS PER CYL                          
         LH    R0,EXTTRKLO         STARTING TRACK #                             
         AR    R7,R0               ADD START TRACK TO RELATIVE TRACK            
         BCTR  R7,0                                                             
         SR    R6,R6                                                            
         DR    R6,R3               R7 HAS CYL R6 HAS TRK                        
         AH    R7,EXTCYLLO         ADD LOW CYL                                  
         STH   R7,0(R5)            SET CYL                                      
         STH   R6,2(R5)            SET TRK                                      
         MVI   4(R5),1             SET TO FIRST REC/BLK                         
         TM    READTYPE,READ1ST                                                 
         BO    DACCHH19                                                         
         MVC   4(1,R5),2(R4)       SET REC                                      
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    DACCHH17                                                         
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DACCHH19                                                         
         NI    4(R5),X'3F'         18-BIT FILE                                  
         B     DACCHH19                                                         
*                                                                               
DACCHH17 TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    DACCHH18                                                         
         NI    4(R5),X'0F'         20-BIT FILE                                  
         CLI   4(R5),0             TEST UNBLOCKED                               
         BNE   DACCHH19                                                         
         MVC   4(1,R5),3(R4)       TTTTT0RR FOR UNBLOCKED 20-BIT FILE           
         B     DACCHH19                                                         
*                                                                               
DACCHH18 NI    4(R5),X'03'         22-BIT FILE                                  
         CLI   4(R5),0             TEST UNBLOCKED                               
         BNE   DACCHH19                                                         
         MVC   4(1,R5),3(R4)       TTTTTXRR FOR UNBLOCKED 20-BIT FILE           
*                                                                               
DACCHH19 XC    IOBSEEK,IOBSEEK     SET SEEK ADDR IN IOB (MBBCCHHR)              
         MVC   IOBSEEK+0(1),EXTSEQ#    EXTENT SEQUENCE #                        
         MVC   IOBSEEK+3(5),0(R5)                                               
         MVC   DTFUC,EXTDEV#       SET SEQNUM/DEVTYP IN DTF                     
         MVC   DTFSEEK(8),IOBSEEK  SET SEEK ADDR IN DTF (MBBCCHHR)              
         BR    RE                                                               
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* CONSTRUCT AN IDAW LIST. R1=ADDRESS OF DATA AND R0=LENGTH OF DATA    *         
* UM IDAWS=(DATALEN-1)/2048+1)+1 THE MAX 2K BOUNDRIES CROSSED +1      *         
*                                                                     *         
* MOST CALLING ROUTINES WILL NOT NEED TO SET THE IDAL FLAG IF THEY    *         
* ONLY MODIFYING CCW4 BECAUSE ISBLDCCW SETS IT ON                     *         
* CALLER ONLY NEEDS TO SET BIT IK BUILDING CCW ITSESLF                *         
***********************************************************************         
SETIDAWS AHI   R0,-1               DATA LENGTH CANT BE ZERO                     
         JM    *+2                 DIE=ZERO DATA LEN                            
         SRL   R0,11               DIVIDE BY 2048                               
         AHI   R0,2                PLUS 2 GIVES MAX BOUNDARIES + 1              
         ICM   RF,15,NEXTIDAW      POINT TO NEXT IDAW                           
         BNZ   *+8                                                              
         LA    RF,IDAWS            OR IF NOT SET POINT TO FIRST                 
*                                                                               
SETIDAW2 ST    R1,0(RF)            SET START ADDRESS                            
         LA    R1,2048(R1)         AND THEN GO IN 2048 MULTS                    
         SRL   R1,11                                                            
         SLL   R1,11                                                            
         LA    RF,4(RF)                                                         
         BCT   R0,SETIDAW2                                                      
         ST    RF,LASTIDAW         SAVE POINTER FOR NEXT TIME                   
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* CALCULATE SECTOR NUMBER FOR RPS                                     *         
***********************************************************************         
SETSCTR  STM   RE,RC,REGSAVE       SAVE CALLING REGS                            
         MVI   RPSSW,0             EXIT IF RPS NOT AVAILABLE                    
         OC    DEVSCT,DEVSCT                                                    
         BZR   R9                                                               
*                                                                               
         MVI   RPSSW,C'Y'          INDICATE RPS ACTIVE                          
         SR    R0,R0                                                            
         ICM   R0,12,DBLKSZ        GET BLOCK SIZE IN HOB                        
         N     R0,=X'7FFFFFFF'                                                  
         ICM   R0,1,SKREC          AND REC NUM IN LOB                           
*                                                                               
         LLC   RF,DEVSUB           PICK UP INTERNAL DEVICE CODE                 
         BCTR  RF,0                                                             
         SLL   RF,1                                                             
         L     RE,=A(DEVCODE)                                                   
         AR    RE,RF               POINT TO ENTRY IN TABLE                      
         LA    R2,SECTOR           THIS DESTROYS EOF POINTER IN R2              
         ICM   R2,8,0(RE)          UCB DEVICE CODE TO HOB                       
*                                                                               
         L     RF,X'10'(,R0)       CVT CORE LOCATION                            
         L     RF,X'E8'(,RF)       SECTOR CALC ROUTINE ADDRESS                  
         BASR  RE,RF                                                            
         LM    RE,RC,REGSAVE                                                    
         BR    R9                                                               
*                                                                               
SETSCTRZ MVI   RPSSW,0             SET RPS NOT AVAILABLE                        
         OC    DEVSCT,DEVSCT       TEST DEVICE SUPPORTS RPS                     
         BZR   R9                                                               
         MVI   SECTOR,0                                                         
         MVI   RPSSW,C'Y'                                                       
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* COMPUTE ACTUAL SPACE RECORD WILL REQUIRE ON A TRACK                 *         
* PASSING REC=1 TO TRKBAL CAUSES PRV BAL FIELD TO BE REST TO MAXIMUM  *         
***********************************************************************         
SETLEN   MVI   TRKBREC,1           SET RECORD TO 1                              
         MVI   TRKBKLEN,0          SET KEYLEN=0                                 
         STCM  R0,3,TRKBDLEN       SET RECLEN                                   
*                                                                               
         LLC   RF,DEVSUB           GET INTERNAL DEVICE CODE                     
         BCTR  RF,0                                                             
         SLL   RF,1                                                             
         LR    RE,RF                                                            
         A     RE,=A(DEVCODE)                                                   
         LLC   R0,0(RE)            GET DEVICE TYPE CODE                         
*                                                                               
* AFTER TRKCALC MACRO R0 HAS REMAINING TRACK BALANCE                            
*                                                                               
         LA    R1,TRKBDATA                                                      
         TRKCALC FUNCTN=TRKBAL,TYPE=(R0),REGSAVE=YES,MF=(E,(1))                 
*                                                                               
         SR    R1,R1                                                            
         ICM   R1,3,DEVCAPL        GET MAX TRACK CAPACITY                       
         SR    R1,R0               LESS REMAINING BALANCE                       
         LR    R0,R1               PUT RECORD LENGTH IN R0                      
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* TRANSLATE A RELATIVE TRACK ADDRESS TO BBCCHHR                       *         
***********************************************************************         
DATRNS   LM    R4,R5,P5            GET INPUT/OUTPUT ADDRESSES                   
         N     R4,LOWBITS                                                       
         N     R5,LOWBITS                                                       
         BAS   RE,DACCHH                                                        
         B     DAEXIT                                                           
*                                                                               
DARPT    GOTO1 =A(DARPTRK),(RC)   COMPUTE MAXIMUM RECORD SIZE                   
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* RETURN EOF ERROR FLAG WITH OPTION TO SEND CONSOLE MESSAGE           *         
***********************************************************************         
DAEXITE  ICM   RE,15,=V(SSB)       SEND EOF MESSAGE IF ONLINE                   
         BZ    DAEXITE5                                                         
         USING SSBD,RE                                                          
         OC    SSBCNTL,SSBCNTL                                                  
         BZ    DAEXITE5                                                         
         B     DAEXITE5            DONT SENT MESSAGE                            
         DROP  RE                                                               
*                                                                               
DAEXITE2 L     R4,=A(FULLMSG)                                                   
         MVC   MYWORK(2),=X'0017'                                               
         MVC   MYWORK+2(34),0(R4)                                               
         CLC   MYWORK+17(8),DTFDD  ONLY ONCE PER FILE                           
         BE    DAEXITE4                                                         
         MVC   MYWORK+17(08),DTFDD                                              
         LA    R4,MYWORK                                                        
DAEXITE3 NOP   DAEXITE4            ONLY DO IT ONCE                              
         WTO   TEXT=(R4)           DO A WTO ONLINE                              
         MVI   DAEXITE3+1,X'F0'    ONLY DO IT ONCE                              
DAEXITE4 B     DAEXITE5                                                         
*                                                                               
DAEXITE5 OI    P3+1,X'04'          SET END OF FILE RETURN                       
         B     DAEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* RESET STORAGE PROTECTION AND CALLER'S MODE                          *         
***********************************************************************         
DAEXIT   CLI   PROTON,0            RESET STORAGE PROTECTION                     
         BE    DAEXIT1                                                          
         ICM   RE,15,ATCB                                                       
         BZ    DAEXIT1                                                          
         OC    SAVEP2,SAVEP2                                                    
         BZ    DAEXIT1                                                          
         ICM   R0,15,TCBPIO-TCBD(RE)                                            
         BZ    DAEXIT1                                                          
         SR    R1,R1                                                            
         ICM   R1,3,P3+2                                                        
         L     RE,SAVEP2                                                        
         ST    RE,P2                                                            
         N     RE,LOWBITS                                                       
         LTR   R1,R1                                                            
         BZ    DAEXIT1                                                          
         LR    RF,R1                                                            
         MVCL  RE,R0                                                            
*                                                                               
DAEXIT1  OC    PQSAVEDA,PQSAVEDA   DID WE SAVE A 16 BIT PQ DA                   
         JZ    DAEXIT1A                                                         
         L     RF,P5                                                            
         N     RF,LOWBITS                                                       
         MVC   0(4,RF),PQSAVEDA    RESTORE OLD 16 BIT DA                        
*                                                                               
DAEXIT1A LA    RF,DAEXITX          RESET CALL MODE AND EXIT                     
         O     RF,CALLMODE                                                      
         BSM   0,RF                                                             
DAEXITX  XIT1                                                                   
         EJECT                                                                  
MAXXTNTS EQU   16                  MAX NUM OF EXTENTS                           
MAXXNDXX EQU   48                  MAX NUM OF EXTENTS (BIGDEMOS)                
ONLINE   DC    C' '                SET TO C'Y' IF ONLINE                        
         DC    X'00'               N/D                                          
MAXIOL   DC    AL2(56664)          MAX 3390 RECORD LENGTH                       
*                                                                               
ECBAD1   DC    F'0'                                                             
SYNCDA   DC    F'0'                                                             
         LTORG                                                                  
FULLMSG  DC    C'END OF FILE ON ????????. REPLY GO'                             
         EJECT                                                                  
***********************************************************************         
*   DEVICE PHYSICAL CHARACTERISTICS                                   *         
* X DEVICE TYPE - 1=CKD,2=RBA                                         *         
* X DEVICE SUB TYPE - 1=3340,2=3350,3=3375,4=3380,5=3390              *         
* H DEVICE TRACKS PER CYLINDER                                        *         
* H DEVICE INTER RECORD GAP                                           *         
* H DEVICE TRACK CAPACITY LOGICAL                                     *         
* H DEVICE TRACK CAPACITY PHYSICAL                                    *         
* H DEVICE RECORD ZERO OVERHEAD                                       *         
* H DEVICE SECTORS PER TRACK                                          *         
* H DEVICE MODULUS FACTOR                                             *         
***********************************************************************         
DEVDISK  DS    0XL16                                                            
DEV3340  DC    X'0101',AL2(12,167,08535,08960,0293,064,000)                     
DEV3350  DC    X'0102',AL2(30,185,19254,19964,0389,128,000)                     
DEV3375  DC    X'0103',AL2(12,384,36000,36992,0992,196,031)                     
DEV3380  DC    X'0104',AL2(15,480,47968,49056,1088,221,043)                     
DEV3390  DC    X'0105',AL2(15,000,58786,58786,0000,224,000)                     
*                                                                               
DEVCODE  DS    0XL2                XL1=MVS,XL1=INTERNAL                         
         DC    X'0A01'             3340                                         
         DC    X'0B02'             3350                                         
         DC    X'0C03'             3375                                         
         DC    X'0E04'             3380                                         
         DC    X'0F05'             3390                                         
         DC    X'0000'                                                          
         EJECT                                                                  
***********************************************************************         
* ENSURE YOU ARE NOT READING OVER YOUR IOB (FACPAK DOESN'T LIKE IT)   *         
***********************************************************************         
EXCPRD   CLI   CCWRD,X'06'         ONLY FOR READS                               
         BNER  R9                                                               
         XR    RF,RF                                                            
         ICM   RF,7,CCWRD+1        PICK UP IDAW                                 
         ICM   RE,15,0(RF)                                                      
         LA    RF,IOB                                                           
         CR    RF,RE               TEST IF READING AFTER IOB                    
         BLR   R9                                                               
         SR    RF,RE               RF=LENGTH AVAILABLE                          
         XR    RE,RE                                                            
         ICM   RE,3,CCWRD+6        RE=LENGTH REQUIRED                           
         CR    RF,RE                                                            
         BHR   R9                                                               
         STCM  RF,3,CCWRD+6        DO NOT READ OVER IOB OR DEATH                
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* TABLE THAT MAPS ROUTINE NUMBERS TO ROUTINE ADDRESSES                *         
***********************************************************************         
DAROUTS  DC    A(0)                00                                           
         DC    A(RDID)             01                                           
         DC    A(RDIDTRK)          02                                           
         DC    A(RDTRK)            03                                           
         DC    A(WTID)             04                                           
         DC    A(WTCKD)            05                                           
         DC    A(WTTRK)            06                                           
         DC    A(DATRNS)           07                                           
         DC    A(WTERASE)          08                                           
         DC    A(DABACK)           09                                           
         DC    A(DACPUID)          10                                           
         DC    A(FNDEOF)           11                                           
         DC    A(ADDADR)           12                                           
         DC    A(ADDAFT)           13                                           
         DC    A(DAOPEN)           14                                           
         DC    A(DACLOSE)          15                                           
         DC    A(DARPT)            16                                           
         DC    A(DAOPOLD)          17  WAS RDIDVAR                              
         DC    A(RDIDFLS)          18                                           
         DC    A(DAINFO)           19                                           
         DC    A(CHKEOF)           20                                           
         DC    A(DACLEAR)          21                                           
         DC    A(0)                22                                           
         DC    A(0)                23                                           
         DC    A(0)                24                                           
         DC    A(0)                25                                           
         DC    A(0)                26                                           
         DC    A(0)                27                                           
         DC    A(0)                28                                           
         DC    A(0)                29                                           
         DC    A(0)                30                                           
         DC    A(0)                31                                           
         EJECT                                                                  
***********************************************************************         
* SEARCH EXTENDED DATA BUFFERS FOR SEEK ADDRESS                       *         
***********************************************************************         
CHKBUFF  ICM   R1,15,DTFXTAB       EXIT IF NO EXTRA BUFFERS                     
         JZ    CHKBUF30                                                         
         USING DTFXTABD,R1                                                      
         LLC   R0,DTFXBUFS         GET NUMBER OF BUFFERS                        
         AHI   R0,1                ADD 1 FOR DBLK ENTRY                         
*                                                                               
CHKBUF2  CLC   DTFSEEK,DTFXTBSK    ACTUAL SEEK ADDR TO BUFFER SEEK ADDR         
         JE    CHKBUF4                                                          
         LA    R1,DTFXTBNX                                                      
         BRCT  R0,CHKBUF2                                                       
         J     CHKBUF10            DATA NOT IN BUFFER                           
*                                                                               
CHKBUF4  MVC   DBLK,DTFXTBIO       MOVE DATA ADDRESS TO DTF                     
         TM    READTYPE,FLUSH      TEST IF FLUSH BUFFER REQUIRED                
         JZ    CHKBUFFX            NO - EXIT WITH CC EQL                        
         LR    R5,R1               SET TO REDO I/O INTO THIS BUFFER             
         J     CHKBUF16                                                         
*                                                                               
CHKBUF10 ICM   R1,15,DTFXTAB                                                    
         LLC   R0,DTFXBUFS                                                      
         AHI   R0,1                ADD 1 FOR DBLK ENTRY                         
         J     CHKBUF14                                                         
*                                                                               
CHKBUF12 CLC   DTFXTBSQ,(DTFXTBSQ-DTFXTABD)(R5)                                 
         JNL   *+6                                                              
CHKBUF14 LR    R5,R1               SET R5 TO POINT TO OLDEST ENTRY              
         LA    R1,DTFXTBNX                                                      
         BRCT  R0,CHKBUF12                                                      
         LR    R1,R5                                                            
*                                                                               
CHKBUF16 MVC   DTFXTBSK,DTFSEEK    MOVE SEEK ADDRESS TO ENTRY                   
         MVC   DBLK,DTFXTBIO       MOVE I/O ADDRESS TO DCB                      
         SR    R5,R5                                                            
         ICM   R5,3,DTFXSEQ        GET SEQUENCE NUMBER                          
         LA    R5,1(R5)                                                         
         STH   R5,DTFXSEQ                                                       
         ST    R5,DTFXTBSQ         SET SEQUENCE NUMBER IN ENTRY                 
*                                                                               
         OC    DTFXSEQ,DTFXSEQ     DID SEQUENCE NUMBERS RECYCLE                 
         JNZ   CHKBUF22                                                         
         ICM   R1,15,DTFXTAB                                                    
         LLC   R0,DTFXBUFS         GET NUMBER OF BUFFERS                        
         AHI   R0,1                ADD 1 FOR DBLK ENTRY                         
*                                                                               
CHKBUF20 XC    DTFXTBSQ,DTFXTBSQ   ON RECYCLE CLEAR ALL SEQUENCE NUMBER         
         LA    R1,DTFXTBNX                                                      
         BRCT  R0,CHKBUF20                                                      
*                                                                               
CHKBUF22 L     R1,DBLK             REBUILD IDAWS AS I/O ADR CHANGED             
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         BAS   RE,SETIDAWS                                                      
*                                                                               
CHKBUF30 LTR   R9,R9               SET CC NEQ                                   
*                                                                               
CHKBUFFX BR    R9                                                               
         DROP  R1                                                               
*                                                                               
***********************************************************************         
* CLEAR EXTENDED DATA BUFFERS BY CLEARING SEEK ADDRESS                *         
***********************************************************************         
CLRBUFF  ICM   R1,15,DTFXTAB       EXIT IF NO EXTRA BUFFERS                     
         JZ    CLRBUFX                                                          
         USING DTFXTABD,R1                                                      
         LLC   R0,DTFXBUFS         GET NUMBER OF BUFFERS                        
         AHI   R0,1                ADD 1 FOR DBLK ENTRY                         
*                                                                               
CLRBUF2  XC    DTFXTBSK,DTFXTBSK   CLEAR BUFFER SEEK ADDRESS                    
         LA    R1,DTFXTBNX                                                      
         BRCT  R0,CLRBUF2                                                       
*                                                                               
CLRBUFX  BR    R9                                                               
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* READ BLOCK FOR COMPRESSED RECORDS                                   *         
***********************************************************************         
RDBLKA   NTR1  BASE=*                                                           
         SR    RE,RE               POINT TO CONTROL AREA                        
         ICM   RE,3,DBLKSZ                                                      
         AR    RE,R5                                                            
         CLC   0(3,R5),0(RE)       SAME BLOCK AS LAST TIME                      
         BNE   RDBLKA1                                                          
         CLC   3(1,R4),3(RE)       TEST HIGHER RECORD NUMBER                    
         BL    RDBLKA1                                                          
         LH    R6,4(RE)            SET REMAINING BYTES IN BLOCK                 
         SR    RF,RF                                                            
         ICM   RF,3,6(RE)                                                       
         AR    R5,RF               POINT TO LAST ACCESSED RECORD                
         MVC   BYTE,3(RE)          SET LAST RECORD NUMBER                       
         MVC   KEY,16(RE)          SET LAST RECORD KEY                          
         CLC   3(1,R4),3(RE)       TEST SAME RECORD AS LAST TIME                
         BE    RDBLKB                                                           
         B     RDBLKD                                                           
*                                                                               
RDBLKA1  LH    R6,4(R5)            COMPRESSED RECORDS                           
         SH    R6,=H'6'            R6=TOTAL LENGTH OF BLOCK USED                
         LA    R5,6(R5)            R5=A(FIRST RECORD AREA IN BLOCK)             
         MVI   BYTE,1              SET RECORD NUMBER IN BLOCK                   
*                                                                               
RDBLKB   LA    RE,2(R5)            RE=A(FIRST DATA BYTE IN RECORD)              
         XC    FULL,FULL                                                        
         TM    DTFTYPE,DTFTKCL     TEST KEY COMPRESSION FROM LEFT               
         BZ    *+14                                                             
         MVC   FULL+1(1),0(RE)     EXTRACT MISSING FROM LEFT VALUE              
         LA    RE,1(RE)                                                         
         TM    DTFTYPE,DTFTKCR     TEST KEY COMPRESSION FROM RIGHT              
         BZ    *+14                                                             
         MVC   FULL+3(1),0(RE)     EXTRACT MISSING FROM RIGHT VALUE             
         LA    RE,1(RE)                                                         
*                                                                               
RDBLKC   LH    RF,FULL             POINT TO 1ST DIFFERENT BYTE IN KEY           
         LA    RF,KEY(RF)                                                       
         LH    R1,DKEYLNC          KEYLEN                                       
         BCTR  R1,0                LESS ONE                                     
         SH    R1,FULL             LESS MISSING FROM LEFT                       
         SH    R1,FULL+2           LESS MISSING FROM RIGHT                      
         BM    RDBLKD                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(RE)       MOVE DIFFERENT BYTES TO KEY                  
*                                                                               
RDBLKD   CLC   3(1,R4),BYTE        TEST IF REQUIRED RECORD                      
         BE    RDBLKE                                                           
         IC    RF,BYTE             BUMP RECORD NUMBER                           
         LA    RF,1(RF)                                                         
         STC   RF,BYTE                                                          
         LH    R0,0(R5)            POSITION TO NEXT RECORD IN BLOCK             
         AR    R5,R0                                                            
         SR    R6,R0                                                            
         BP    RDBLKB                                                           
         MVI   P3+1,X'09'          SET REC NOT FOUND/END OF BLK                 
         B     RDBLKX                                                           
*                                                                               
RDBLKE   STM   R5,R6,DUB           SAVE POSITION OF RECORD                      
         AH    R1,=H'1'            R1=NUM OF DIFFERENT KEY BYTES                
         AR    RE,R1               RE=A(FIRST NON KEY BYTE OF RECORD)           
         LR    R0,RE                                                            
         SR    R0,R5                                                            
         LH    RF,0(R5)                                                         
         SR    RF,R0               RF=L'NON KEY AREA OF RECORD                  
         JNP   *+2                 DIE=MUST BE +VE                              
         LR    R0,RF                                                            
         AH    R0,DKEYLNC                                                       
         STH   R0,P3+2             SET LENGTH FOR CALLER                        
         L     R6,P2                                                            
         N     R6,P2LOWBTS                                                      
         LH    R1,DKEYLNC                                                       
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R6),KEY         MOVE KEY TO CALLERS AREA                     
         LA    R0,1(R1,R6)                                                      
         LR    R1,RF                                                            
         MVCL  R0,RE               MOVE DATA TO CALLERS AREA                    
*                                                                               
RDBLKF   SR    RE,RE               POINT TO CONTROL AREA                        
         ICM   RE,3,DBLKSZ                                                      
         A     RE,DBLK                                                          
         MVC   0(4,RE),0(R4)       SAVE DISK ADDRESS                            
         MVC   4(2,RE),DUB+6       SAVE REMAINING BYTES IN BLOCK                
         L     RF,DUB                                                           
         S     RF,DBLK                                                          
         STCM  RF,3,6(RE)          SAVE DISPLACEMENT TO LAST RECORD             
         MVC   16(L'KEY,RE),KEY                                                 
*                                                                               
RDBLKX   XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* WRITE BLOCK FOR COMPRESSED RECORDS                                  *         
***********************************************************************         
WTBLKA   NTR1  BASE=*                                                           
         LH    R6,4(R5)            COMPRESSED RECORDS                           
         SH    R6,=H'6'            R6=TOTAL LENGTH OF BLOCK USED                
         LA    R5,6(R5)            R5=A(FIRST RECORD AREA IN BLOCK)             
         MVI   BYTE,1              SET RECORD NUMBER IN BLOCK                   
*                                                                               
WTBLKB   LA    RE,2(R5)            RE=A(FIRST DATA BYTE IN RECORD)              
         XC    FULL,FULL                                                        
         TM    DTFTYPE,DTFTKCL     TEST KEY COMPRESSION FROM LEFT               
         BZ    *+14                                                             
         MVC   FULL+1(1),0(RE)     EXTRACT MISSING FROM LEFT VALUE              
         LA    RE,1(RE)                                                         
         TM    DTFTYPE,DTFTKCR     TEST KEY COMPRESSION FROM RIGHT              
         BZ    *+14                                                             
         MVC   FULL+3(1),0(RE)     EXTRACT MISSING FROM RIGHT VALUE             
         LA    RE,1(RE)                                                         
*                                                                               
WTBLKC   LH    RF,FULL             POINT TO 1ST DIFFERENT BYTE IN KEY           
         LA    RF,KEY(RF)                                                       
         LH    R1,DKEYLNC          KEYLEN                                       
         BCTR  R1,0                LESS ONE                                     
         SH    R1,FULL             LESS MISSING FROM LEFT                       
         SH    R1,FULL+2           LESS MISSING FROM RIGHT                      
         BM    WTBLKD                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(RE)       MOVE DIFFERENT BYTES TO KEY                  
*                                                                               
WTBLKD   CLC   3(1,R4),BYTE        TEST IF REQUIRED RECORD                      
         BE    WTBLKE                                                           
         IC    RF,BYTE             BUMP RECORD NUMBER                           
         LA    RF,1(RF)                                                         
         STC   RF,BYTE                                                          
         LH    R0,0(R5)            POSITION TO NEXT RECORD IN BLOCK             
         AR    R5,R0                                                            
         SR    R6,R0                                                            
         BP    WTBLKB                                                           
         MVI   P3+1,X'09'          SET REC NOT FOUND/END OF BLK                 
         B     WTBLKXN                                                          
*                                                                               
WTBLKE   AH    R1,=H'1'            R1=NUMBER OF DIFFERENT KEY BYTES             
         AR    RE,R1               RE=A(FIRST NON KEY BYTE OF RECORD)           
         LR    R0,RE                                                            
         SR    R0,R5                                                            
         LH    RF,0(R5)                                                         
         SR    RF,R0               RF=L'NON KEY AREA OF RECORD                  
*                                                                               
WTBLKF   L     R6,P2               R6=A(NEW RECORD)                             
         N     R6,P2LOWBTS                                                      
         LH    R1,DKEYLNC                                                       
         BCTR  R1,0                                                             
         EX    R1,WTBLKG                                                        
         BE    WTBLKH                                                           
         DC    H'0'                DIE=CANT CHANGE KEY                          
WTBLKG   CLC   0(0,R6),KEY                                                      
*                                                                               
WTBLKH   LA    R1,1(R1)                                                         
         LH    R0,P3+2             GET NEW RECORD LENGTH                        
         SR    R0,R1                                                            
         CR    RF,R0                                                            
         JH    *+2                 DIE=INCREASED LEN                            
         LA    R0,0(R1,R6)                                                      
         LR    R1,RF                                                            
         MVCL  RE,R0               MOVE DATA PORTION OF REC TO BLOCK            
*                                                                               
WTBLKXE  CR    RB,RB                                                            
         B     *+6                                                              
WTBLKXN  LTR   RB,RB                                                            
         XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* INITIALISE CCWS AND IDAWS                                           *         
***********************************************************************         
INICCW   NTR1  BASE=*                                                           
         MVI   IOBFLAG1,X'C3'      SET DC/CC/UNRELATED/NOAPPENDG                
         LA    R0,ECB                                                           
         STCM  R0,7,IOBECBPB                                                    
         LA    R0,CCW1                                                          
         ST    R0,IOBSTART                                                      
         L     R0,DTFADCB          GET DCB ADDRESS                              
         N     R0,=X'00FFFFFF'                                                  
         STCM  R0,7,IOBDCBPB                                                    
*                                                                               
         CLI   DEVTYP,1            INITIALISE CKD CCWS                          
         BNE   INICCW2                                                          
*                                                                               
         LA    R0,SEEK                                                          
         ST    R0,CCWSK                                                         
         MVI   CCWSK,X'07'         SET SEEK                                     
         MVI   CCWSK+7,6           SET LENGTH                                   
         OI    CCWSK+4,X'40'       SET CC                                       
*                                                                               
         LA    R0,SRCH                                                          
         ST    R0,CCWSRCH                                                       
         MVI   CCWSRCH,X'31'       SET SRCH ID EQUAL                            
         MVI   CCWSRCH+7,5         SET LENGTH                                   
         OI    CCWSRCH+4,X'40'     SET CC                                       
         LA    R0,CCWSRCH                                                       
         ST    R0,CCWTIC                                                        
         MVI   CCWTIC,X'08'        SET TIC                                      
         OI    CCWTIC+4,X'40'      SET CC                                       
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         BNZ   *+8                                                              
         ICM   R0,3,MAXIOL                                                      
*                                                                               
         ICM   R1,15,DBLK                                                       
         BZ    *+8                                                              
         BAS   RE,SETIDAWS                                                      
*                                                                               
         LA    R0,IDAWS                                                         
         ST    R0,CCWRD                                                         
         MVI   CCWRD,X'06'         SET READ DATA                                
         OI    CCWRD+4,X'24'       SLI+IDA                                      
         MVC   CCWRD+6(2),DBLKSZ   SET LENGTH                                   
         NI    CCWRD+6,X'7F'                                                    
         B     INICCWX                                                          
*                                                                               
INICCW2  CLI   DEVTYP,2            INITIALISE FBA CCWS                          
         JNE   *+2                 DIE=UNKNOWN DEVICE                           
         MVI   FBALOP,X'06'                                                     
         LA    R0,64                                                            
         STH   R0,FBALBLKS                                                      
*                                                                               
         LA    R0,FBAXNT                                                        
         ST    R0,CCW1                                                          
         MVI   CCW1,X'63'          SET DEFINE EXTENT                            
         MVI   CCW1+7,16           SET LENGTH                                   
         OI    CCW1+4,X'40'        SET CC                                       
*                                                                               
         LA    R0,FBALOC                                                        
         ST    R0,CCW2                                                          
         MVI   CCW2,X'43'          SET LOCATE                                   
         MVI   CCW2+7,8            SET LENGTH                                   
         OI    CCW2+4,X'40'        SET CC                                       
*                                                                               
         L     R1,DBLK                                                          
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         BAS   RE,SETIDAWS                                                      
         LA    R0,IDAWS                                                         
         ST    R0,CCW3                                                          
         MVI   CCW3,X'42'          SET READ                                     
         MVC   CCW3+6(2),DBLKSZ    SET LENGTH                                   
         NI    CCW3+6,X'7F'                                                     
*                                                                               
INICCWX  XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* FIND LAST RECORD BETWEEN TWO POINTS ON A FILE.                      *         
* ON ENTRY LOARG=LOW SEARCH ARGUMENT AND HIARG=HIGH SEARCH ARGUMENT   *         
***********************************************************************         
DAEOF    NTR1  BASE=*                                                           
         MVC   FULL,LOARG          SAVE LOARG VALUE                             
*                                                                               
DAEOF2   TM    DTFTYPE,DTFTBIGF                                                 
         BO    DAEOF3                                                           
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DAEOF5                                                           
         SR    R0,R0               18-BIT TRACK ADDRESS                         
         ICM   R0,7,LOARG                                                       
         SRL   R0,6                                                             
         SR    RE,RE                                                            
         ICM   RE,7,HIARG                                                       
         SRL   RE,6                                                             
         AR    R0,RE                                                            
         SRL   R0,1                                                             
         SLL   R0,6                                                             
         STCM  R0,7,CURARG                                                      
         OI    CURARG+2,1                                                       
         SR    R0,R0                                                            
         ICM   R0,7,CURARG                                                      
         SRL   R0,6                                                             
         SR    R1,R1                                                            
         ICM   R1,7,LOARG                                                       
         SRL   R1,6                                                             
         CR    R0,R1               WHEN CURARG=LOARG HAVE FOUND TRACK           
         BE    DAEOF8                                                           
         B     DAEOF6                                                           
*                                                                               
DAEOF3   TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    DAEOF4                                                           
         SR    R0,R0               20-BIT TRACK ADDRESS                         
         ICM   R0,7,LOARG                                                       
         SRL   R0,4                                                             
         SR    RE,RE                                                            
         ICM   RE,7,HIARG                                                       
         SRL   RE,4                                                             
         AR    R0,RE                                                            
         SRL   R0,1                                                             
         SLL   R0,4                                                             
         STCM  R0,7,CURARG                                                      
         MVI   CURARG+3,1                                                       
         SR    R0,R0                                                            
         ICM   R0,7,CURARG                                                      
         SRL   R0,4                                                             
         SR    R1,R1                                                            
         ICM   R1,7,LOARG                                                       
         SRL   R1,4                                                             
         CR    R0,R1               WHEN CURARG=LOARG HAVE FOUND TRACK           
         BE    DAEOF8                                                           
         B     DAEOF6                                                           
*                                                                               
DAEOF4   SR    R0,R0               22-BIT TRACK ADDRESS                         
         ICM   R0,7,LOARG                                                       
         SRL   R0,2                                                             
         SR    RE,RE                                                            
         ICM   RE,7,HIARG                                                       
         SRL   RE,2                                                             
         AR    R0,RE                                                            
         SRL   R0,1                                                             
         SLL   R0,2                                                             
         STCM  R0,7,CURARG                                                      
         MVI   CURARG+3,1                                                       
         SR    R0,R0                                                            
         ICM   R0,7,CURARG                                                      
         SRL   R0,2                                                             
         SR    R1,R1                                                            
         ICM   R1,7,LOARG                                                       
         SRL   R1,2                                                             
         CR    R0,R1               WHEN CURARG=LOARG HAVE FOUND TRACK           
         BE    DAEOF8                                                           
         B     DAEOF6                                                           
*                                                                               
DAEOF5   SR    R0,R0               16-BIT TRACK ADDRESS                         
         ICM   R0,3,LOARG                                                       
         SR    RE,RE                                                            
         ICM   RE,3,HIARG                                                       
         AR    R0,RE                                                            
         SRL   R0,1                                                             
         STH   R0,CURARG                                                        
         CLC   CURARG(2),LOARG     WHEN CURARG=LOARG HAVE FOUND TRACK           
         BE    DAEOF8                                                           
         MVI   CURARG+2,1                                                       
*                                                                               
DAEOF6   LA    R4,CURARG           READ FIRST RECORD ON CURARG TRACK            
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         BAS   R9,EOFEXCP                                                       
         LA    RE,LOARG            IF DATA SET LOARG=CURARG                     
         BE    *+8                 CC EQL MEANS DATA ON TRACK                   
         LA    RE,HIARG            ELSE SET HIARG=CURARG                        
         MVC   0(3,RE),CURARG                                                   
         B     DAEOF2                                                           
*                                                                               
* LAST REC IS ON THIS TRACK (CURARG)                                            
*                                                                               
DAEOF8   MVC   DCOUNT,DEVCAPL      SET MAX TRACK CAPACITY                       
*                                                                               
DAEOF9   LA    R4,CURARG           READ NEXT RECORD ON THIS TRACK               
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         MVI   HALF,0              SET EOF RECORD FLAG                          
         BAS   R9,EOFEXCP                                                       
         BNE   DAEOF13             NO MORE RECORDS ON TRACK                     
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,3,CCWRD+6        GET READ LEN                                 
         SR    RE,RE                                                            
         ICM   RE,3,IOBRCNT                                                     
         SR    R0,RE                                                            
         STH   R0,P3+2             SET LENGTH                                   
         LTR   R0,R0                                                            
         BNZ   *+8                                                              
         OI    HALF,X'01'          SET THIS RECORD IS EOF RECORD                
         BAS   R9,SETLEN           GET ADJ LEN IN R0                            
         SR    RE,RE                                                            
         ICM   RE,3,DCOUNT                                                      
         SR    RE,R0                                                            
         BNM   *+6                                                              
         SR    RE,RE                                                            
         STCM  RE,3,DCOUNT         ADJUST TRACK CAPACITY                        
*                                                                               
DAEOF10  TM    DTFTYPE,DTFTBIGF                                                 
         BO    DAEOF11                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DAEOF12                                                          
         TM    CURARG+2,X'3F'      18-BIT - MAX 63 RECS/TRK                     
         BNO   *+12                                                             
         OI    HALF,X'02'          SET MAX RECS/TRK FLAG                        
         B     DAEOF13                                                          
         IC    RE,CURARG+2                                                      
         SRDL  RE,6                                                             
         SRL   RF,26                                                            
         LA    RF,1(RF)                                                         
         SLL   RF,26                                                            
         SLDL  RE,6                                                             
         STC   RE,CURARG+2                                                      
         B     DAEOF9                                                           
*                                                                               
DAEOF11  TM    CURARG+3,X'FF'      20-BIT AND 22-BIT                            
         BNO   *+12                                                             
         OI    HALF,X'02'          SET MAX RECS/TRK FLAG                        
         B     DAEOF13                                                          
         IC    RE,CURARG+3                                                      
         LA    RE,1(RE)                                                         
         STC   RE,CURARG+3                                                      
         B     DAEOF9                                                           
*                                                                               
DAEOF12  TM    CURARG+2,X'FF'      16-BIT FILE - MAX 255 RECS/TRK               
         BNO   *+12                                                             
         OI    HALF,X'02'          SET MAX RECS/TRK FLAG                        
         B     DAEOF13                                                          
         IC    RE,CURARG+2                                                      
         LA    RE,1(RE)                                                         
         STC   RE,CURARG+2                                                      
         B     DAEOF9                                                           
*                                                                               
* PRECEDING REC WAS LAST                                                        
*                                                                               
DAEOF13  MVC   LOARG,=X'00010100'  SET TO FIRST RECORD ON FILE                  
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    DAEOF13B                                                         
         MVC   LOARG,=X'00001001'  20-BIT                                       
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DAEOF13C                                                         
         MVC   LOARG,=X'00000401'  22-BIT                                       
         B     DAEOF13C                                                         
DAEOF13B TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+10                                                             
         MVC   LOARG,=X'00004100'                                               
DAEOF13C TM    DIND,DINDNDX        TEST IF A D/A INDEXED FILE                   
         BZ    *+10                                                             
         MVC   LOARG,FULL          YES - RESTORE ORIGINAL LOARG VALUE           
         TM    HALF,X'01'                                                       
         BZ    DAEOF15             LAST REC NOT EOF REC                         
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    DAEOF14A                                                         
         TM    DTFTYPE,DTFTBIG                                                  
         BO    DAEOF14                                                          
         CLI   CURARG+2,2                                                       
         BNE   DAEOF15                                                          
         MVC   DCOUNT,DEVCAPL      LAST REC IS EOF REC IN REC ONE               
         MVI   CURARG+2,1                                                       
         B     DAEOF15                                                          
DAEOF14  SR    RE,RE               18-BIT FILE                                  
         IC    RE,CURARG+2                                                      
         SRDL  RE,6                                                             
         SRL   RF,26                                                            
         CH    RF,=H'2'                                                         
         BNE   DAEOF15                                                          
         BCTR  RF,0                                                             
         SLL   RF,26                                                            
         SRDL  RE,6                                                             
         MVC   DCOUNT,DEVCAPL      LAST REC IS EOF REC IN REC ONE               
         STC   RE,CURARG+2                                                      
         B     DAEOF15                                                          
DAEOF14A TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    DAEOF14B                                                         
         CLI   CURARG+3,2          20-BIT FILE                                  
         BNE   DAEOF15                                                          
         MVC   DCOUNT,DEVCAPL      LAST REC IS EOF REC IN REC ONE               
         MVI   CURARG+3,1                                                       
         STC   RE,CURARG+2                                                      
         B     DAEOF15                                                          
DAEOF14B CLI   CURARG+3,2          22-BIT FILE                                  
         BNE   DAEOF15                                                          
         MVC   DCOUNT,DEVCAPL      LAST REC IS EOF REC IN REC ONE               
         MVI   CURARG+3,1                                                       
         STC   RE,CURARG+2                                                      
*                                                                               
DAEOF15  CLC   LOARG,CURARG        IS LAST RECORD THE FIRST RECORD              
         BE    DAEOF16             YES - FILE IS EMPTY                          
         LA    R4,LOARG                                                         
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
         BAS   R9,EOFEXCP          READ FIRST RECORD IN FILE                    
         JNE   *+2                 DIE=NO FIRST REC                             
*                                                                               
DAEOF16  TM    HALF,X'02'          TEST IF MAXIMUM RECS/TRK EXIT                
         BO    DAEOF20                                                          
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    DAEOF17                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    DAEOF18                                                          
         IC    RE,CURARG+2         18-BIT FILE                                  
         SRDL  RE,6                                                             
         SRL   RF,26                                                            
         BCTR  RF,0                                                             
         SLL   RF,26                                                            
         SLDL  RE,6                                                             
         STC   RE,CURARG+2                                                      
         B     DAEOF20                                                          
DAEOF17  IC    RE,CURARG+3         20-BIT AND 22-BIT                            
         BCTR  RE,0                                                             
         STC   RE,CURARG+3                                                      
         B     DAEOF20                                                          
DAEOF18  IC    RE,CURARG+2         16-BIT FILE                                  
         BCTR  RE,0                                                             
         STC   RE,CURARG+2                                                      
*                                                                               
DAEOF20  CLI   EOFWHY,1            TEST DAINFO COMMAND                          
         BE    *+10                                                             
         MVC   DNEXT,CURARG        SET DNEXT TO LAST RECORD ON FILE             
         L     R4,P5                                                            
         N     R4,LOWBITS                                                       
         MVC   0(4,R4),CURARG      RETURN VALUE TO CALLER                       
         B     DAEOFX                                                           
*                                                                               
EOFEXCP  L     RF,IOBSTART         REMOVE LONG SEEK IF PRESENT                  
         CLI   0(RF),X'07'                                                      
         BNE   *+12                                                             
         LA    RF,8(RF)                                                         
         ST    RF,IOBSTART                                                      
EOFEXCP0 XC    ECB,ECB                                                          
         EXCP  IOB                                                              
         WAIT  ECB=ECB                                                          
         CLI   IOBECBCC,X'7F'      TEST NORMAL COMPLETION                       
         BER   R9                  EXIT WITH CC=EQL IF RECORD FOUND             
         CLI   IOBECBCC,X'41'      TEST PERMANENT ERROR                         
         BE    EOFEXCP1                                                         
         CLI   IOBECBCC,X'48'      TEST RELATED IOB PURGED                      
         JNE   *+2                 DIE=EXCP COMPLETION                          
         L     RE,DTFADCB                                                       
         N     RE,=X'00FFFFFF'                                                  
         NI    44(RE),X'3C'        RESET ERROR CORRECTION FLAGS                 
         B     EOFEXCP0            AND RETRY I/O                                
*                                                                               
EOFEXCP1 TM    IOBUSTAT,X'02'      TEST CSW UNIT STAT FOR UNIT CHECK            
         BO    EOFEXCP2                                                         
         TM    IOBUSTAT,X'01'      TEST CSW UNIT STAT FOR EOF RECORD            
         BZ    *+8                                                              
         CR    R9,R9               EXIT WITH CC=EQL IF EOF RECORD               
         BR    R9                                                               
         TM    IOBUSTAT,X'FF'      TEST CSW UNIT STAT                           
         JNZ   *+2                 DIE=CSW UNIT STATUS                          
         TM    IOBCSTAT,X'FF'      TEST CSW CHNL STAT                           
         JNZ   *+2                 DIE=CSW CHNL STATUS                          
*                                                                               
EOFEXCP2 TM    IOBSENS1,X'08'      TEST SENSE BYTE 1 FOR NOT FOUND              
         JZ    *+2                 DIE=SENSE NOT FOUND                          
         LTR   R9,R9               EXIT WITH CC=NEQ IF NOT FOUND                
         BR    R9                                                               
*                                                                               
DAEOFX   EQU   *                                                                
*NOP*    MVI   DUB,C'E'                                                         
*NOP*    BRAS  R9,DATRACE                                                       
         XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
**********************************************************************          
* OPEN DA FILE USING DYNAMIC ALLOCATION                              *          
* BYTE=00 MEANS DISP=SHR,BYTE=01 MEANS DISP=OLD                      *          
**********************************************************************          
DAOPENR  NTR1  BASE=*                                                           
         L     R4,DTFADCB          A(DCB)                                       
         NILH  GR4,X'00FF'                                                      
         MVC   40(8,R4),DTFDD      SET FILE ID IN DCB DDNAME                    
*                                                                               
DAALLOC  BRAS  RE,ALLOC            ALLOCATE DD CARD                             
         SAC   0                                                                
*                                                                               
DAOPEN0  ICM   RE,15,=V(SSB)       TEST OFFLINE WITH EXTENDED SSB               
         BZ    DAOPEN0D                                                         
         USING SSOOFF,RE                                                        
         OC    SSOCNTL,SSOCNTL     TEST OFFLINE                                 
         BNZ   DAOPEN0D                                                         
         CLI   SSOXTND,X'FF'                                                    
         BNE   DAOPEN0D                                                         
*                                                                               
         ICM   R0,15,=V(SYS1FLEX)  TEST IF DMFILES IS INCLUDED                  
         BZ    DAOPEN0D                                                         
         C     R2,=V(SYSDTFSS)     IGNORE IF NOT A DMFILES FILE                 
         BL    DAOPEN0D                                                         
         C     R2,=V(SYSDTFSX)                                                  
         BH    DAOPEN0D                                                         
         CR    R2,R0               TEST IF A DMFILES SERVICE FILE               
         BNL   DAOPEN0A                                                         
         C     R2,=V(SYS1FLEW)     YES - TEST NON-UPDATIVE ONES                 
         BNL   *+12                SET TO READ-ONLY                             
         TM    SSOMTIND,SSOWSRN    TEST WRSRV=N INPUT                           
         BZ    DAOPEN0D                                                         
         OI    DTFOPEN,DTF_RO      SET READ-ONLY SERVICE FILE                   
         B     DAOPEN0D                                                         
*                                                                               
DAOPEN0A TM    SSOMTIND,SSOWRTN    TEST WRITE=N INPUT                           
         BZ    DAOPEN0B                                                         
         OI    DTFOPEN,DTF_RO      SET READ-ONLY FILE                           
         B     DAOPEN0D                                                         
*                                                                               
DAOPEN0B TM    DTFOPEN,DTF_RO      TEST READ-ONLY FILE                          
         BZ    DAOPEN0D                                                         
         TM    DTFFLAG,DTFRODTF    DEFINED WITH ADD=NO IN DMDA MACRO            
         BO    DAOPEN0D                                                         
         TM    SSOMTIND,SSOMRKY    TEST IF MARKER=Y INPUT                       
         BZ    DAOPEN0D                                                         
         NI    DTFOPEN,X'FF'-DTF_RO    TURN OFF READ-ONLY BIT                   
         OI    DTFFLAG,DTFROWRN    SET FLAG TO ISSUE READ-ONLY WARNING          
*                                                                               
DAOPEN0D TM    DTFOPEN,DTF_RO      TEST READ-ONLY FILE                          
         BZ    DAOPEN0F                                                         
         DROP  RE                                                               
*                                                                               
DAOPEN0E STAM  ARE,AR1,ARSSAVER    OPEN FILE INPUT                              
         OPEN  ((4),INPUT)                                                      
         LAM   ARE,AR1,ARSSAVER                                                 
         B     DAOPEN0G                                                         
*                                                                               
DAOPEN0F STAM  ARE,AR1,ARSSAVER    OPEN FILE INPUT/OUPUT                        
         OPEN  ((4),INOUT)                                                      
         LAM   ARE,AR1,ARSSAVER                                                 
*                                                                               
DAOPEN0G TM    48(R4),X'10'        TEST VALID OPEN                              
         BO    DAOPEN0H                                                         
         ABEND 991,DUMP                                                         
*                                                                               
DAOPEN0H LR    R1,R4               FIX DEBS TO MACRF=EXCP                       
         SVC   252                                                              
         MVI   42(R4),X'D0'        CHANGE MACRF BYTES TO EXCP                   
         MVI   43(R4),X'04'        IN OPENED FOUNDATION BLOCK                   
         OI    DTFOPEN,DTF_OPN+DTF_POPN  SET OPEN FLAGS                         
*                                                                               
         USING EXTENTD,R4                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    DAOPEN0L                                                         
         OC    DMTX(4),DMTX        WAS THIS SET ALREADY                         
         JNZ   *+2                 DIE=ALREADY OPEN                             
*                                                                               
         LA    R0,(EXTLNQ*MAXXNDXX)+1                                           
         GETMAIN RU,LV=(0),LOC=(ANY,ANY)                                        
         STCM  R1,15,DMTX          SAVE HIGH CORE VALUE                         
         LR    R4,R1                                                            
         B     DAOPEN0N                                                         
*                                                                               
DAOPEN0L LA    R4,DMTX             R4=A(EXTENT MATRIX ENTRY)                    
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+8                                                              
         LA    R4,DNDXMTX                                                       
*                                                                               
DAOPEN0N L     RE,DTFADCB          A(DCB)                                       
         NILH  GRE,X'00FF'                                                      
         L     RE,44(RE)           GET A(DEB) FROM A(DCB)                       
         NILH  GRE,X'00FF'                                                      
*                                                                               
         SR    R1,R1                                                            
         ICM   R1,1,16(RE)         R1=NUMBER OF EXTENTS IN DEB                  
         JZ    *+2                 DIE=ZERO XTNTS                               
         SR    R5,R5                                                            
*                                                                               
         ICM   R5,1,DTFXTNTS       GET NUM OF EXTENTS DEFINED IN DTF            
         BNZ   *+8                                                              
         LA    R5,MAXXTNTS                                                      
         CR    R1,R5               ACTUAL TO DEFINED                            
         JH    *+2                 DIE=TOO MANY XTNTS                           
         LA    R5,32(RE)           R5=A(DEB MATRIX ENTRY)                       
         SR    R6,R6               R6=EXTENT SEQUENCE NUMBER                    
*                                                                               
DAOPEN1  XC    EXTENTD(EXTLNQ),EXTENTD                                          
         L     RE,0(R5)                                                         
         NILH  GRE,X'00FF'                                                      
         MVC   EXTDEV#,19(RE)      SET MVS DEVICE TYPE FROM UCB                 
         STC   R6,EXTSEQ#          SET EXTENT SEQUENCE NUMBER                   
         MVC   EXTCYLLO(8),6(R5)   SET CCHH LOW AND CCHH HIGH                   
         MVC   EXTCHU,4(RE)        SET CHAN/UNIT FROM UCB                       
*                                                                               
         L     RE,=A(DEVCODE)                                                   
DAOPEN2  CLI   0(RE),0                                                          
         JE    *+2                 DIE=UNKNOWN DEVICE                           
         CLC   EXTDEV#,0(RE)       TEST MVS CODE WITH TABLE ENTRY               
         BE    DAOPEN2A                                                         
         LA    RE,L'DEVCODE(RE)                                                 
         B     DAOPEN2                                                          
*                                                                               
DAOPEN2A MVC   EXTDEV#,1(RE)       SET INT DEVICE TYPE CODE FROM TABLE          
         CLI   1(RE),5                                                          
         JNE   *+2                 DIE=DEVICE NOT 3390                          
*                                                                               
DAOPEN3  LLC   RF,1(RE)            SET DEVICE DATA IN DTF                       
         BCTR  RF,0                                                             
         SLL   RF,4                                                             
         A     RF,=A(DEVDISK)                                                   
         LTR   R6,R6                                                            
         BNZ   DAOPEN3A                                                         
         MVC   DTFDEVF(2),0(RF)    SET INTERNAL DEV FLAG AND TYPE               
         OI    DTFAVAIL,X'80'      SET DTF AVAIL                                
         OI    DTFDEVF,X'40'                                                    
*                                                                               
DAOPEN3A MVC   DEVDATA,0(RF)                                                    
         LH    R3,DEVTRKS                                                       
         BCTR  R3,0                R3=TRKS/CYL-1                                
         OC    EXTTRKLO,EXTTRKLO                                                
         BNZ   DAOPEN3B                                                         
         CH    R3,EXTTRKHI                                                      
         BE    DAOPEN4                                                          
DAOPEN3B OI    DTFDEVF,X'04'       SET EXTENTS NOT ON CYL BOUNDRYS              
*                                                                               
DAOPEN4  CLC   EXTDEV#,DTFDEVT     TEST FOR MIXED EXTENTS                       
         BE    DAOPEN5                                                          
         OI    DTFDEVF,X'08'       YES - SET MIXED EXTENTS                      
*                                                                               
DAOPEN5  LA    R4,EXTLNQ(R4)       BUMP TO NEXT EXTENT                          
         LA    R5,16(R5)           NEXT EXTENT ENTRY MATRIX FROM DEB            
         LA    R6,1(R6)            EXTENT SEQUENCE #                            
         BCT   R1,DAOPEN1                                                       
         MVI   0(R4),X'FF'         SET END OF EXTENTS                           
         DROP  R4                                                               
*                                                                               
DAOPEN6  ICM   RE,15,DBLK          TEST FOR BLOCKED DA FILE                     
         BZ    *+10                                                             
         XC    0(6,RE),0(RE)       CLEAR START OF BLOCK                         
*                                                                               
         TM    DTFFLAG,DTFCACHE    TEST TO SUPPRESS CACHEING                    
         BZ    DAOPEN7                                                          
         LA    R1,DTFADCB          POINT R1 TO ADDRESS OF DCB                   
         LA    R0,2                                                             
         LNR   R0,R0                                                            
         SVC   247                                                              
*                                                                               
DAOPEN7  EQU   *                                                                
*NOP*    MVI   DUB,C'O'                                                         
*NOP*    BRAS  RE,DATRACE                                                       
*                                                                               
DAOPENX  XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* CLOSE DA FILE AND FREE ALL BUFFERS ASSIGNED                         *         
***********************************************************************         
DACLOSER NTR1 BASE=*                                                            
         L     R4,DTFADCB          CLOSE FILE                                   
         NILH  GR4,X'00FF'                                                      
         MVI   42(R4),X'28'        CHANGE MACRF BYTES BACK TO RI                
         MVI   43(R4),X'00'        IN OPENED FOUNDATION BLOCK                   
         STAM  ARE,AR1,ARSSAVER                                                 
         CLOSE ((4))                                                            
         LAM   ARE,AR1,ARSSAVER                                                 
         NI    DTFOPEN,255-X'20'   TURN OFF OPEN FLAG                           
         OI    DTFAVAIL,X'80'      SET DNEXT AVAIL                              
         OI    DTFDEVF,X'40'                                                    
         XC    DBLKDA,DBLKDA       RESET BLOCK ADDRESS                          
         XC    DNEXT,DNEXT         CLEAR EOF POINTER                            
*                                                                               
         LA    R4,DMTX                                                          
         USING EXTENTD,R4                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+8                                                              
         LA    R4,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    *+8                                                              
         ICM   R4,15,DMTX                                                       
         XC    EXTENTD(EXTLNQ),EXTENTD  CLEAR FIRST EXTENT ENTRY                
         TM    DIND,DINDXAM        HIGH CORE EXTENT MATRIX                      
         BZ    DACLS10                                                          
         XC    DMTX(4),DMTX        CLEAR HIGH CORE ADDRESS                      
         LA    R0,(EXTLNQ*MAXXNDXX)+1                                           
         FREEMAIN RC,A=(4),LV=(0)                                               
         DROP  R4                                                               
*                                                                               
DACLS10  SR    R0,R0               CHECK FOR EXTENDED BUFFERS                   
         ICM   R0,1,DTFXBUFS                                                    
         BZ    DACLSX                                                           
         ICM   R5,15,DTFXTAB       POINT TO BUFFER TABLE                        
         BZ    DACLSX              NOT ACQUIRED                                 
         L     R1,DTFXTBIO-DTFXTABD(R5) GET FIRST BUFFER ADDR                   
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         TM    DTFTYPE,DTFTKCL+DTFTKCR TEST KEY COMPRESSION                     
         BZ    *+8                                                              
         AHI   R0,L'KEY+16         WE ACQUIRED A LARGER AREA                    
         TM    DIND,DINDNDX        TEST D/A INDEXED                             
         BZ    *+8                                                              
         AHI   R0,4                YES - WE ACQUIRED A LARGER AREA              
*                                                                               
         AHI   R0,7                                                             
         SRL   R0,3                                                             
         SLL   R0,3                                                             
         STH   R0,BUFFLEN          SAVE TOTAL BUFFER LENGTH                     
         FREEMAIN RC,A=(1),LV=(0)                                               
         LTR   RF,RF                                                            
         JNZ   *+2                 DIE=INVALID FREEMAIN                         
*                                                                               
         LA    R5,DTFXTBNX-DTFXTABD(R5)  POINT TO SECOND ENTRY                  
         SR    R0,R0                                                            
         ICM   R0,3,BUFFLEN        GET TOTAL BUFFER LENGTH                      
         LLC   R1,DTFXBUFS         GET NUMBER OF BUFFERS                        
         MR    R0,R0                                                            
         LA    R0,(DTFXTABX-DTFXTABD)(R1) PLUS LENGTH OF TABLE                  
         ICM   R1,15,DTFXTAB       POINT TO TABLE START                         
         FREEMAIN RC,A=(1),LV=(0)                                               
         LTR   RF,RF                                                            
         JNZ   *+2                 DIE=INVALID FREEMAIN                         
*                                                                               
         XC    DBLK,DBLK           SET BUFFERS NOT DEFINED                      
         XC    DTFXTAB,DTFXTAB                                                  
*                                                                               
DACLSX   XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO DYNAMICALLY ALLOCATE A DD CARD FOR FILE                  *         
* BYTE=X'00' FOR DISP=SHR OR BYTE=X'01' FOR DISP=OLD                  *         
***********************************************************************         
ALLOC    NTR1  BASE=*                                                           
*                                                                               
ALLOC1   ICM   RE,15,=V(SSB)       EXTRACT FACPAK ID IF ONLINE                  
         BZ    ALLOC3                                                           
         USING SSOOFF,RE                                                        
         OC    SSOCNTL,SSOCNTL     TEST ONLINE                                  
         BNZ   ALLOC3                                                           
*                                                                               
ALLOC2   CLI   SSOXTND,X'FF'       TEST EXTENDED SSB                            
         BNE   ALLOC3                                                           
         TM    SSOFLAG2,SSO2DYNO   EXIT IF DYNAMIC ALLOCATION INACTIVE          
         BO    ALLOCXIT                                                         
         OI    BYTE,X'80'          SET OFFLINE/EXTENDED SSB FLAG                
         USING DTFPHD,R2                                                        
*                                                                               
ALLOC3   LA    R1,RBLK             SET UP REQ BLK POINTER                       
         ST    R1,ARBLK                                                         
         OI    ARBLK,X'80'                                                      
         MVI   RBLKLEN,20          SET UP REQ BLK LEN                           
         MVI   RBLKVERB,1          SET ALLOCATE BY DSN VERB CODE                
         LA    R1,ATXT                                                          
         ST    R1,RBLKATXT         SET POINTER TO TEXT POINTER LIST             
*                                                                               
ALLOC4   LA    R1,TXTDD            SET UP POINTER TO DDNAME TEXT                
         ST    R1,ATXTDD                                                        
         MVC   0(2,R1),=X'0001'    SET DDNAME TEXT CODE                         
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(8,R1),DTFDD       SET DDNAME VALUE TO DCB VALUE                
         LA    RF,6(R1)            FIND LEN OF DDNAME                           
         LA    R0,8                                                             
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         BCT   R0,*-12                                                          
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN DDNAME TEXT HEADER                
*                                                                               
ALLOC5   LA    R1,TXTDSN           SET UP POINTER TO DSN TEXT                   
         ST    R1,ATXTDSN                                                       
         MVC   TXTDSN(2),=X'0002'  SET DSN TEXT CODE                            
         MVC   TXTDSN+2(2),=X'0001'                                             
         ICM   RF,15,=V(DMDYNDD)   CALL DMDYNDD TO GET DSN TEXT                 
         BZ    ALLOCXIT                                                         
         GOTO1 (RF),MYWORK,0,DTFDD,(R2)                                         
         BNE   ALLOCXIT                                                         
         TM    8(R1),X'02'         TEST IF DID GLOBAL ALLOCATE                  
         BZ    *+8                                                              
         OI    BYTE,X'20'                                                       
         TM    8(R1),X'01'         TEST IF ALLOCATED FLASH COPY                 
         BZ    ALLOC5A                                                          
         OI    BYTE,X'10'                                                       
         OI    DTFOPEN,DTF_RO      SET FLASH COPY FILE READ-ONLY                
         TM    BYTE,X'80'                                                       
         B     ALLOC5A             *NOP* BZ DONT SET WRITE=N OFFLINE            
         ICM   RE,15,=V(SSB)       GET A(OFFLINE SSB)                           
         USING SSOOFF,RE                                                        
         OI    SSOMTIND,SSOWRTN    SET WRITE=N IF FLASH COPY FILE               
ALLOC5A  ICM   RE,15,0(R1)         P1=AL1(LENGTH OF DSN),AL3(NEW DSN)           
         JZ    *+2                 DIE=INV DSN LEN                              
         NILH  GRE,X'00FF'                                                      
         MVC   TXTDSN+6(25),0(RE)                                               
         LLC   RF,0(R1)                                                         
         STH   RF,TXTDSN+4         SET LEN IN DSN TEXT HEADER                   
*                                                                               
ALLOC6   LA    R1,TXTDISP          SET UP POINTER TO DISP TEXT                  
         ST    R1,ATXTDISP                                                      
         MVC   0(2,R1),=X'0004'    SET DISP TEXT CODE                           
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'08'         SET DISP=SHR CODE                            
*                                                                               
         TM    BYTE,X'01'          IS THIS A DAOPOLD                            
         BZ    *+8                                                              
         MVI   6(R1),X'01'         SET DISP=OLD CODE                            
*                                                                               
         LA    R1,TXTUNAL          SET UP POINTER TO UNALLOCATE TEXT            
         ST    R1,ATXTUNAL                                                      
         MVC   0(2,R1),=X'001C'    SET UNALLOCATE TEXT CODE                     
         XC    2(4,R1),2(R1)                                                    
*                                                                               
         OI    ATXTLAST,X'80'      SET END OF TEXT POINTER LIST                 
         LA    R1,ARBLK                                                         
         LR    R5,R1               R5=A(REQ BLK IN DUMP)                        
         DYNALLOC                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         LTR   RF,RF               TEST FOR ERRORS                              
         BZ    ALLOC10                                                          
         TM    BYTE,X'20'          YES - TEST IF DID GLOBAL ALLOCATE            
         BO    ALLOC8                                                           
*                                                                               
ALLOC7   CLC   RBLKERR,=X'0410'    NORMAL - TEST IF DD CARD EXISTS              
         BE    ALLOCXIT                                                         
         XC    MYWORK,MYWORK                                                    
         MVC   MYWORK(2),=X'0033'                                               
         MVC   MYWORK+2(32),=C'DISP=OLD ALLOCATION FAILURE FOR '                
         MVC   MYWORK+34(20),TXTDSN+6                                           
         TM    BYTE,X'01'                                                       
         BO    *+10                                                             
         MVC   MYWORK+7(3),=C'SHR'                                              
         LA    R4,MYWORK                                                        
         WTO   TEXT=(R4)                                                        
         TM    BYTE,X'01'          ASK OPERATOR IF DISP=OLD ALLOCATION          
         BZ    ALLOC9                                                           
         XC    ECBAD,ECBAD                                                      
         WTOR  'RETRY OR CANCEL',REPLY,1,ECBAD,ROUTCDE=(1)                      
         WAIT  ECB=ECBAD                                                        
         CLI   REPLY,C'R'          BACK TO TRY AGAIN                            
         BE    ALLOC1                                                           
         ABEND 990                 FILE IS IN USE - ABEND WITHOUT DUMP          
*                                                                               
ALLOC8   CLC   RBLKERR,=X'0410'    GLOBAL - TEST IF DD CARD EXISTS              
         BNE   ALLOC9                                                           
         XC    MYWORK,MYWORK       YES - OUTPUT DD OVERRIDE MESSAGE             
         MVC   MYWORK(2),=X'001E'                                               
         MVC   MYWORK+2(21),=C'DD OVERRIDE USED FOR '                           
         MVC   MYWORK+23(8),TXTDD+6                                             
         LA    R4,MYWORK                                                        
         WTO   TEXT=(R4),MCSFLAG=HRDCPY                                         
         B     ALLOCXIT            ALLOW DD OVERRIDE                            
*                                                                               
ALLOC9   LA    R1,TXTDSN                                                        
         ICM   RF,15,=V(ISGQU)     CALL ISGQU FOR ALLOCATION DETAIL             
         JZ    *+10                                                             
         BASR  RE,RF                                                            
         J     ALLOC1                                                           
*                                                                               
         ABEND 990,DUMP            ALLOCATION FAILURE ABEND                     
*                                                                               
ALLOC10  EQU   *                                                                
*                                                                               
ALLOCXIT XIT1                                                                   
         DROP  RE                                                               
*                                                                               
         LTORG                                                                  
*                                                                               
DSPACE   DC    C' '                                                             
ECBAD    DC    F'0'                WTOR FIELDS                                  
REPLY    DC    CL4' '                                                           
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO READ CPUID AND DATSPACE ID FROM RECORD ZERO              *         
***********************************************************************         
CPUID    NTR1  BASE=*                                                           
         LA    R4,=X'00010000'     SET RECORD ZERO OF FIRST TRACK               
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         LA    R4,=X'00004000'     SET TO 18-BIT ADDRESS                        
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         LA    R4,=X'00001000'     SET TO 20-BIT ADDRESS                        
         TM    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         BNO   *+8                                                              
         LA    R4,=X'00000400'     SET TO 22-BIT ADDRESS                        
         LA    R5,SRCH                                                          
         BAS   RE,DACCHH                                                        
*                                                                               
         XC    CCWRD(8),CCWRD      READ RECORD ZERO                             
         LA    RE,COUNT            EITHER INTO LOCAL NMOD COUNT FIELD           
*                                  OR INTO TCB FIELD IF STORAGE                 
         ICM   RF,15,=V(SSB)                                                    
         BZ    CPUID1                                                           
         USING SSBD,RF                                                          
         TM    SSBPROT,SSBPONQ     TEST PROTECTION ACTIVE                       
         BZ    CPUID1                                                           
         ICM   RF,15,SSBTKADR      YES - CANT EXCP INTO KEY 9                   
         BZ    CPUID1                                                           
         LA    RE,TCBCIOA-TCBD(RF)                                              
         DROP  RF                                                               
*                                                                               
CPUID1   ST    RE,AREC0                                                         
         ST    RE,CCWRD                                                         
         MVI   CCWRD,6                                                          
         LA    RE,8                                                             
         STH   RE,CCWRD+6                                                       
         BAS   R9,EXCP                                                          
*                                                                               
         L     RE,AREC0            RESTORE A(RECORD)                            
         L     R5,X'10'(,R0)       POINT TO CPU ID                              
         L     R5,X'C4'(,R5)                                                    
         LA    R5,X'10'(,R5)       R5=A(FOUR CHR CPU ID)                        
         MVC   HALF(2),2(R5)                                                    
*                                                                               
         CLC   6(1,RE),HALF        SAME AS RECORD ZERO VALUE                    
         BE    *+8                                                              
         OI    P3+1,X'80'          NO - SET ERROR                               
         MVC   P3+2(2),6(RE)       RETURN REC ZERO VALUE                        
         CLI   7(RE),C' '          TEST FOR DSPACE CHR                          
         BNH   CPUIDX                                                           
         TM    DTFFLAG,DTFGLOB     IS IT GLOBAL                                 
         BZ    CPUIDX                                                           
*                                                                               
         ICM   RF,15,=V(SSB)                                                    
         BZ    CPUIDX                                                           
         USING SSOOFF,RF                                                        
         OC    SSOCNTL,SSOCNTL                                                  
         BNZ   CPUID2              TEST IF ONLINE                               
         CLI   SSODSPAC,C' '                                                    
         BH    *+10                                                             
         MVC   SSODSPAC,7(RE)                                                   
         CLC   SSODSPAC,7(RE)                                                   
         BE    CPUIDX                                                           
         OI    P3+1,X'10'          DSPACE REQUIRED DOES NOT MATCH               
         B     CPUIDX                                                           
*                                                                               
         USING SSBD,RF                                                          
CPUID2   TM    DTFOPEN,X'C0'       TEST R/O OR NOP                              
         BNZ   CPUIDX                                                           
*                                                                               
         TM    SSBSYSFL,X'80'      TEST SYSTEM                                  
         BZ    CPUIDX                                                           
         CLI   7(RE),C'A'          CHECK PROD FILE                              
         BNE   CPUIDX                                                           
*                                                                               
         OI    DTFOPEN,X'04'       WRONG STAMP SET TO QUIESCED                  
         LA    R4,MYWORK                                                        
         MVC   MYWORK+0(8),DTFDD                                                
         MVC   MYWORK+8(16),=C'QUIESCED DSPACE='                                
         MVC   MYWORK+24(1),7(RE)                                               
         MVC   MYWORK+25(2),=C'//'                                              
         GOTO1 =V(DDWTO),PARMS,MYWORK,(X'80',0)                                 
*                                                                               
CPUIDX   XIT1                                                                   
         DROP  RF                                                               
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ERASE ALL TRACKS TO THE END OF FILE                                 *         
* P5 HAS ADDRESS OF LAST TRACK USED                                   *         
* P2 HAS ADDRESS OF USER CCW BUILD BUFFER IF P2=FF (MIN=1410 BYTES)   *         
* FORMAT OF USER BUFFER IS -                                          *         
* 30CL40 SEEK/SRHA/SRID/TIC/ERASE CCWS                                *         
* 30CL07 SEEK ADDRESSES (00CCHH0)                                     *         
***********************************************************************         
ERASE    NTR1  BASE=*                                                           
         L     RF,P5               GET A(LAST TRACK USED)                       
         N     RF,LOWBITS                                                       
         SR    RE,RE                                                            
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    ERASE0                                                           
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    ERASE1                                                           
         ICM   RE,7,0(RF)          18-BIT TRACK NUMBER                          
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,14                                                            
         ST    RE,FULL                                                          
         B     ERASE2                                                           
ERASE0   TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    ERASE0A                                                          
         ICM   RE,7,0(RF)          20-BIT TRACK NUMBER                          
         SRL   RE,4                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,12                                                            
         ST    RE,FULL                                                          
         B     ERASE2                                                           
ERASE0A  ICM   RE,7,0(RF)          22-BIT TRACK NUMBER                          
         SRL   RE,2                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,10                                                            
         ST    RE,FULL                                                          
         B     ERASE2                                                           
ERASE1   ICM   RE,3,0(RF)          16-BIT AND D/A INDEXED FILE                  
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,FULL                                                          
         TM    DIND,DINDNDX        TEST D/A INDEXED FILE                        
         BZ    *+10                                                             
         MVC   FULL+3(1),3(RF)     YES - SET EXTENT NUMBER                      
*                                                                               
ERASE2   CLI   P2,X'FF'            TEST IF BUFFER FOR FAST ERASE                
         BNE   ERASE3                                                           
         L     RE,P2                                                            
         N     RE,P2LOWBTS                                                      
         LA    RE,0(RE)                                                         
         LTR   RE,RE                                                            
         BZ    ERASE3                                                           
         TM    DTFDEVF,X'04'       TEST IF EXTENTS NOT ON CYL BOUNDRY           
         BO    ERASE3                                                           
         B     ERASE8                                                           
*                                                                               
ERASE3   MVC   CCW3,CCW2           MOVE SRCH ID CCW                             
         MVI   CCW2,X'39'          SET OPCD=SRCH HA                             
         MVI   CCW2+7,4            SET LEN=4                                    
*                                                                               
         XC    CCW4,CCW4                                                        
         LA    RE,CCW3                                                          
         ST    RE,CCW4             SET TIC ADDRESS                              
         MVI   CCW4,8              OPCD=TIC                                     
         MVI   CCW4+4,X'40'        SET CC                                       
*                                                                               
         XC    CCW5,CCW5                                                        
         LA    RE,COUNT                                                         
         ST    RE,CCW5                                                          
         MVI   CCW5,X'11'          OPCD=ERASE                                   
         MVI   CCW5+4,X'20'        SLI                                          
         MVI   CCW5+7,8                                                         
*                                                                               
ERASE4   LA    R4,FULL                                                          
         LA    R5,SRCH                                                          
         BRAS  RE,DACCHH                                                        
         CLI   P3+1,X'04'          TEST FOR EOF                                 
         BE    ERASEX                                                           
         BRAS  R9,EXCP                                                          
*                                                                               
ERASE5   SR    RE,RE               BUMP TO NEXT TRACK                           
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    ERASE6                                                           
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    ERASE7                                                           
         ICM   RE,7,FULL           18-BIT TRACK NUMBER                          
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,6                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE4                                                           
ERASE6   TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    ERASE6A                                                          
         ICM   RE,7,FULL           20-BIT TRACK NUMBER                          
         SRL   RE,4                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,4                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE4                                                           
ERASE6A  ICM   RE,7,FULL           22-BIT TRACK NUMBER                          
         SRL   RE,2                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,2                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE4                                                           
ERASE7   ICM   RE,3,FULL           16-BIT TRACK NUMBER                          
         LA    RE,1(RE)                                                         
         STH   RE,FULL                                                          
         B     ERASE4                                                           
*                                                                               
ERASE8   LA    RE,7(RE)            ADJUST USER BUFFER TO DUB BOUNDRY            
         SRL   RE,3                                                             
         SLL   RE,3                                                             
         LA    RF,1200(RE)         ALLOW MAX OF 30 TRACKS                       
         STM   RE,RF,SVFRSCCW                                                   
         XC    SVUC,SVUC           SET FIRST TIME                               
*                                                                               
ERASE10  LA    R4,FULL             GET PHYSICAL TRACK LOCATION                  
         LA    R5,SRCH                                                          
         BRAS  RE,DACCHH                                                        
         CLI   P3+1,X'04'                                                       
         BNE   *+12                                                             
         MVI   FULL+3,X'FF'        SET EOF FLAG                                 
         B     ERASE21                                                          
         L     RF,SVFRSADR                                                      
         CLC   SVUC,DTFUC          SAME EXTENT                                  
         BNE   ERASE21                                                          
         CLC   SRCH(2),2(RF)       SAME CYLINDER                                
         BNE   ERASE21                                                          
*                                                                               
ERASE12  LM    RE,RF,SVNXTCCW      BUILD TRACK ERASE CCWS AT NEXT LOCN          
         MVI   HALF,X'07'                                                       
         C     RE,SVFRSCCW                                                      
         BE    ERASE14                                                          
         MVI   HALF,X'1B'                                                       
         AHI   RE,-8                                                            
         OI    4(RE),X'40'         CHAIN PREVIOUS CCW                           
         LA    RE,8(RE)                                                         
ERASE14  MVC   0(7,RF),SEEK        SET SEEK ADDRESS                             
         XC    0(40,RE),0(RE)                                                   
*                                                                               
ERASE16  ST    RF,0(RE)            SEEK/SEEKHEAD                                
         MVC   0(1,RE),HALF                                                     
         OI    4(RE),X'40'                                                      
         MVI   7(RE),6                                                          
         LA    RF,2(RF)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
         ST    RF,0(RE)            SEARCH HOME ADDR                             
         MVI   0(RE),X'39'                                                      
         OI    4(RE),X'40'                                                      
         MVI   7(RE),4                                                          
         LA    RE,8(RE)                                                         
*                                                                               
         ST    RF,0(RE)            SEARCH ID EQL                                
         MVI   0(RE),X'31'                                                      
         OI    4(RE),X'40'                                                      
         MVI   7(RE),5                                                          
*                                                                               
         ST    RE,8(RE)            TIC                                          
         MVI   8(RE),X'08'                                                      
         OI    12(RE),X'40'                                                     
         LA    RE,16(RE)                                                        
*                                                                               
         LA    R0,COUNT            ERASE                                        
         ST    R0,0(RE)                                                         
         MVI   0(RE),X'11'                                                      
         MVI   4(RE),X'20'                                                      
         MVI   7(RE),8                                                          
*                                                                               
         LA    RE,8(RE)            BUMP AND SAVE NEXT CCW/SRCH LOCNS            
         LA    RF,5(RF)                                                         
         STM   RE,RF,SVNXTCCW                                                   
*                                                                               
ERASE18  SR    RE,RE               BUMP TO NEXT TRACK                           
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    ERASE19                                                          
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    ERASE20                                                          
         ICM   RE,7,FULL           18-BIT TRACK NUMBER                          
         SRL   RE,6                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,6                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE10                                                          
ERASE19  TM    DTFTYPE,DTFTBIG     TEST 20-BIT OR 22-BIT                        
         BO    ERASE19A                                                         
         ICM   RE,7,FULL           20-BIT TRACK NUMBER                          
         SRL   RE,4                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,4                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE10                                                          
ERASE19A ICM   RE,7,FULL           22-BIT TRACK NUMBER                          
         SRL   RE,2                                                             
         LA    RE,1(RE)                                                         
         SLL   RE,2                                                             
         STCM  RE,7,FULL                                                        
         B     ERASE10                                                          
ERASE20  ICM   RE,3,FULL           16-BIT TRACK NUMBER                          
         LA    RE,1(RE)                                                         
         STH   RE,FULL                                                          
         B     ERASE10                                                          
*                                                                               
ERASE21  LM    RE,RF,SVFRSCCW      END OF CYLINDER/EXTENT/FILE                  
         OC    SVUC,SVUC                                                        
         BZ    ERASE24             IGNORE FIRST TIME                            
         MVC   DTFUC,SVUC          RESTORE TO FIRST TRACK OF THIS CYL           
         MVC   IOBSEEK,DUB                                                      
         ST    RE,IOBSTART                                                      
         L     R1,SVNXTADR         CALC NUMBER OF TRACKS                        
         SR    R1,RF                                                            
         SR    R0,R0                                                            
         LA    RE,7                                                             
         DR    R0,RE               R1=NUM OF TRACKS                             
         LR    R0,R1                                                            
         SRA   R1,1                                                             
         SR    R0,R1                                                            
         ST    R1,CCW1             SAVE NUMTRACKS/2                             
         IC    RE,5(RF)                                                         
         LA    R1,1(RE)                                                         
         ST    R1,CCW1+4           SAVE FIRSTTRACK+1                            
*                                                                               
ERASE22  STC   RE,5(RF)            ADJUST LIST TO EVEN/ODD TRACK SETS           
         LA    RF,7(RF)                                                         
         LA    RE,2(RE)                                                         
         BCT   R0,ERASE22                                                       
         L     R0,CCW1                                                          
         LTR   R0,R0                                                            
         BZ    *+18                                                             
         XC    CCW1(4),CCW1                                                     
         L     RE,CCW1+4                                                        
         B     ERASE22                                                          
         BRAS  R9,EXCP             ERASE WHOLE CYLINDER                         
         XC    P3(2),P3                                                         
*                                                                               
ERASE24  CLI   FULL+3,X'FF'        EXIT IF EOF                                  
         BE    ERASEX                                                           
         LA    R4,FULL             INITIALISE FOR NEW CYLINDER                  
         LA    R5,SRCH                                                          
         BRAS  RE,DACCHH                                                        
         MVC   SVUC,DTFUC          SAVE EXTENT                                  
         MVC   DUB,DTFSEEK         SAVE SEEK ADDRESS OF FIRST TRACK             
         LM    RE,RF,SVFRSCCW                                                   
         STM   RE,RF,SVNXTCCW                                                   
         B     ERASE12                                                          
*                                                                               
ERASEX   XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* INITIALISE EXTENT MATRIX ON FIRST NON-OPEN OR NON-CLOSE CALL        *         
* ALLOCATE FILE BUFFERS IF OFFLINE                                    *         
***********************************************************************         
DAINIT   NTR1  BASE=*,LABEL=*                                                   
         LA    RF,DMTX                                                          
         USING EXTENTD,RF                                                       
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+8                                                              
         LA    RF,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENT                             
         BZ    *+12                                                             
         ICM   RF,15,DMTX                                                       
         BZ    DAINITX             CAN NOT INITALIZE IF NO STORAGE              
*                                                                               
         OC    EXTCHU,EXTCHU       TEST IF FILE HAS BEEN OPENED                 
         BNZ   DAINIT1                                                          
         CLC   DAROUTA,=A(DAOPEN)  OPEN IS ONLY VALID COMMAND                   
         BE    DAINITX                                                          
         CLC   DAROUTA,=A(DAOPOLD)                                              
         BE    DAINITX                                                          
         CLC   DAROUTA,=A(DACLOSE) CLOSE IS OK TOO                              
         BE    DAINITX                                                          
         DC    H'0'                DIE=FILE NOT OPEN                            
         DROP  RF                                                               
*                                                                               
DAINIT1  CLC   DAROUTA,=A(DACLOSE) TEST IF CLOSE COMMAND                        
         BE    DAINITX                                                          
         BRAS  RE,DAHITRK          COMPUTE HIGH TRACKS FOR EACH EXTENT          
*                                                                               
DAINIT2  ICM   R1,15,=V(SSB)       SKIP ALLOCATION IF ONLINE                    
         BZ    DAINIT3                                                          
         USING SSBD,R1                                                          
         OC    SSBCNTL,SSBCNTL                                                  
         BNZ   DAINITX                                                          
         DROP  R1                                                               
*                                                                               
DAINIT3  SR    R0,R0               TEST IF NEED TO ALLOCATE A BUFFER            
         ICM   R0,3,DBLKSZ                                                      
         BZ    DAINITX                                                          
         TM    DBLKSZ,X'80'        TEST F/L REC FILE                            
         BO    DAINITX                                                          
         OC    DBLK+1(3),DBLK+1    TEST IF ALREADY HAS ONE                      
         BNZ   DAINITX                                                          
         BRAS  RE,GETBUFF          ALLOCATE BUFFER                              
*                                                                               
DAINITX  XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* CALCULATE THE NUMBER OF TRACKS IN EACH EXTENT AND SET AT ENTRY+12(2)*         
* FORMAT OF EACH EXTENT ENTRY IS :-                                   *         
* 00(1) DEVICE TYPE LOGICAL                                           *         
* 01(1) EXTENT SEQUENCE NUMBER                                        *         
* 02(4) CCHH LOW                                                      *         
* 06(4) CCHH HIGH                                                     *         
* 10(2) MVS CHAN/UNIT (OR DOS UNIT/CLASS)                             *         
* 12(2) NUMBER OF TRACKS IN EXTENT                                    *         
***********************************************************************         
DAHITRK  NTR1  BASE=*,LABEL=*                                                   
         SR    RE,RE                                                            
         LA    R1,DMTX             CHECK THAT X'FF' TERMINATES EXTENTS          
         USING EXTENTD,R1                                                       
         LHI   R0,MAXXTNTS+1                                                    
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+12                                                             
         LA    R1,DNDXMTX                                                       
         LHI   R0,MAXXNDXX+1                                                    
         TM    DIND,DINDXAM        HIGH CORE EXTENTS MATRIX                     
         BZ    DAHITRK1                                                         
         ICM   R1,15,DMTX                                                       
         LHI   R0,MAXXNDXX+1                                                    
*                                                                               
DAHITRK1 CLI   0(R1),X'FF'                                                      
         BE    DAHITRK2                                                         
         LA    R1,EXTLNQ(R1)                                                    
         LA    RE,1(RE)                                                         
         BCT   R0,DAHITRK1                                                      
         DC    H'0'                DIE=INV XTNTS                                
*                                                                               
DAHITRK2 LA    R1,DMTX             R1=A(EXTENT MATRIX ENTRY)                    
         CLC   EXTENTD(EXTLNQ),=14X'FF' BIGDEMO (DANDX)                         
         BNE   *+8                                                              
         LA    R1,DNDXMTX                                                       
         TM    DIND,DINDXAM        HIGH CORE EXTENTS MATRIX                     
         BZ    *+8                                                              
         ICM   R1,15,DMTX                                                       
*                                                                               
DAHITRK3 CLI   0(R1),X'FF'                                                      
         BE    DAHITRKX                                                         
         LLC   R3,EXTDEV#          GET TRKS PER CYL FOR THIS EXTENT             
         SHI   R3,1                                                             
         JM    *+2                 DIE=INV XTNTS                                
         SLL   R3,4                                                             
         A     R3,=A(DEVDISK)                                                   
         MVC   DEVDATA,0(R3)                                                    
         LH    R3,DEVTRKS                                                       
         LH    R5,EXTCYLLO         R5=LOWCYL*TRKSPERCYL+LOWTRK                  
         MR    R4,R3                                                            
         AH    R5,EXTTRKLO                                                      
         LH    R7,EXTCYLHI         R7=HICYL*TRKSPERCYL+HITRK                    
         MR    R6,R3                                                            
         AH    R7,EXTTRKHI                                                      
         SR    R7,R5                                                            
         LA    R7,1(R7)            R7=NUMBER OF TRACKS IN EXTENT                
         STH   R7,EXT#TRKS                                                      
         LA    R1,EXTLNQ(R1)       BUMP TO NEXT EXTENT                          
         B     DAHITRK3                                                         
*                                                                               
DAHITRKX DS    0H                                                               
**NOP**  OI    DTFFLAG,X'01'       SET EXTENT ENTRY HAS NUM OF TRACKS           
*                                  NOW USED FOR SHRMEM RECV BUFFER              
         XIT1                                                                   
         DROP  R1                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ALLOCATE BUFFER AREAS FOR FILE                                      *         
* NOTE DANDX BUFFS MUST BE IN 24-BIT STORAGE UNTIL DMDABUFF IS 31-BIT *         
***********************************************************************         
GETBUFF  NTR1  BASE=*,LABEL=*                                                   
*                                                                               
         TM    DIND,DINDNDX        TEST DNDX                                    
         BO    GETBUF10                                                         
         TM    DTFTYPE,DTFTKCL+DTFTKCR TEST KEY COMPRESSION                     
         BZ    *+8                                                              
         AHI   R0,L'KEY+16         NO ALWAYS GET ONE BUFFER ABOVE LINE          
         AHI   R0,7                ADJUST TO DOUBLE WORD                        
         SRL   R0,3                                                             
         SLL   R0,3                                                             
         STH   R0,BUFFLEN          SAVE TOTAL BUFFER LENGTH                     
*                                                                               
         GETMAIN RU,LV=(0),LOC=(ANY,ANY)                                        
         ST    R1,DBLK                                                          
         XC    0(6,R1),0(R1)       CLEAR START OF BLOCK                         
         AH    R1,DBLKSZ                                                        
         TM    DTFTYPE,DTFTKCL+DTFTKCR TEST KEY COMPRESSION                     
         BZ    *+10                                                             
         XC    0(16,R1),0(R1)      CLEAR BUFFER CONTROL AREA                    
         CLI   DTFXBUFS,0          TEST EXTENDED BUFFERS                        
         BE    GETBUFFX                                                         
*                                                                               
GETBUF2  SR    R0,R0               GET TOTAL BUFFER LENGTH                      
         ICM   R0,3,BUFFLEN                                                     
         CLI   DTFXBUFS,DTFXMAX-1  MAX IS ONE LESS THAN TABLE SIZE              
         BNH   *+8                 SO HAVE ROOM FOR DBLK ENTRY                  
         MVI   DTFXBUFS,DTFXMAX-1                                               
         LLC   R1,DTFXBUFS         GET NUMBER OF BUFFERS                        
         MR    R0,R0               TIMES LENGTH OF BUFFERS                      
         LA    R0,(DTFXTABX-DTFXTABD)(R1) PLUS LENGTH OF TABLE                  
*                                                                               
         GETMAIN RU,LV=(0),LOC=(ANY,ANY),BNDRY=PAGE                             
         LTR   RF,RF                                                            
         JNZ   *+2                 DIE=INVALID GETMAIN                          
*                                                                               
         STCM  R1,15,DTFXTAB       SET TABLE ADDRESS                            
         XC    DTFXSEQ,DTFXSEQ     RESET SEQUENCE NUMBER                        
*                                                                               
         USING DTFXTABD,R1                                                      
         XC    DTFXTABD(DTFXTABX-DTFXTABD),DTFXTABD                             
         MVC   DTFXTBIO,DBLK       SET DBLK IN FIRST ENTRY                      
         LA    R5,(DTFXTABX-DTFXTABD)(R1) POINT TO FIRST BUFFER                 
         SR    R4,R4                                                            
         ICM   R4,3,BUFFLEN        GET TOTAL BUFFER LENGTH                      
         LLC   R0,DTFXBUFS         GET NUMBER OF BUFFERS                        
         LA    R1,DTFXTBNX         POINT TO SECOND ENTRY                        
*                                                                               
GETBUF8  ST    R5,DTFXTBIO         SET BUFFER ADDRESS                           
         AR    R5,R4               POINT TO NEXT BUFFER                         
         LA    R1,DTFXTBNX         POINT TO NEXT TABLE ENTRY                    
         BCT   R0,GETBUF8          LOOP ON NUMBER OF BUFFERS                    
         B     GETBUFFX                                                         
         DROP  R1                                                               
*                                                                               
GETBUF10 AHI   R0,4                DANDX FILE BUFFER HAS EXTRA SAVE             
         AHI   R0,7                                                             
         SRL   R0,3                                                             
         SLL   R0,3                                                             
         GETMAIN RU,LV=(0)         BUFFER AREA BELOW THE LINE                   
         ST    R1,DBLK                                                          
         XC    0(6,R1),0(R1)       CLEAR START OF BLOCK                         
         OC    DNDX+1(3),DNDX+1    CHECK IOAREA2                                
         BNZ   GETBUFFX                                                         
         SR    R0,R0                                                            
         ICM   R0,3,DBLKSZ                                                      
         AHI   R0,4                                                             
         AHI   R0,7                                                             
         SRL   R0,3                                                             
         SLL   R0,3                                                             
         GETMAIN RU,LV=(0)         BUFFER AREA BELOW THE LINE                   
         ST    R1,DNDX                                                          
*                                                                               
GETBUFFX XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* COMPUTE MAXIMUM SIZE RECORD THAT CAN BE WRITTEN ON A TRACK          *         
* OR NUMBER OF EQUAL LENGTH RECORDS THAT WILL FIT ON A TRACK          *         
***********************************************************************         
DARPTRK  NTR1  BASE=*                                                           
*                                                                               
DARPT0   MVC   P2,SVDTAPTR         RETURN A(DEVICE DATA) AT P2                  
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,DEVCAPL                                                     
         SR    R0,R0                                                            
         ICM   R0,3,P3+2                                                        
         BZ    DARPTERR            ERROR IF REC LEN ZERO                        
*                                                                               
         CLC   P3+2(2),=X'FFFF'    IF REC LEN X'FFFF' COMPUTE MAX LEN           
         BNE   DARPT10                                                          
         MVI   TRKBREC,1           SET RECORD TO 1                              
         MVI   TRKBKLEN,0          SET KEYLEN=0                                 
         MVC   TRKBDLEN,=X'FFFF'   SET RECLEN THAT NEVER CAN FIT                
         MVC   TRKBBAL,DEVCAPL     SET TRACK CAPACITY TO MAX                    
*                                                                               
         LLC   RF,DEVSUB           GET INTERNAL DEVICE CODE                     
         BCTR  RF,0                                                             
         SLL   RF,1                                                             
         LR    RE,RF                                                            
         A     RE,=A(DEVCODE)                                                   
         LLC   R0,0(RE)            GET MVS DEVICE TYPE CODE                     
*                                                                               
         LA    R1,TRKBDATA                                                      
         TRKCALC FUNCTN=TRKBAL,TYPE=(R0),REGSAVE=YES,MAXSIZE=YES,      X        
               MF=(E,(1))                                                       
         STH   R0,P3+2             RETURN MAX REC LEN AT P3+2                   
         B     DARPTX                                                           
*                                                                               
DARPT10  BAS   R9,SETLEN                                                        
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,DEVCAPL        GET MAX TRACK SIZE                           
         DR    RE,R0               DIVIDE BY RECLEN                             
         STH   RF,P3+2             GIVES RECS/TRACK IN RF                       
         LTR   RF,RF                                                            
         BNZ   DARPTX                                                           
*                                                                               
DARPTERR OI    P3,X'40'            RETURN ERROR FLAG                            
*                                                                               
DARPTX   XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* BUILD FIND EOF FILENAME TTTTBBRR NNN% MESSAGE                       *         
***********************************************************************         
EOFMSG   NTR1  BASE=*                                                           
         MVC   MYWORK(2),=X'0020'                                               
         MVC   MYWORK+2(9),=C'FIND EOF '                                        
         MVC   MYWORK+11(8),DTFDD                                               
         MVI   MYWORK+19,C' '                                                   
         MVC   MYWORK+20(14),MYWORK+19                                          
         ICM   RF,15,=V(HEXOUT)                                                 
         BZ    EOFMSG1                                                          
         LA    RE,DNEXT                                                         
         ST    RE,PARMS                                                         
         CLI   EOFWHY,1            DAINFO CALL                                  
         BNE   EOFMSG0                                                          
         L     RE,P5               A(DUMMY DNEXT)                               
         ST    RE,PARMS                                                         
EOFMSG0  GOTO1 (RF),PARMS,,MYWORK+20,4,(24,0)                                   
*                                                                               
EOFMSG1  SR    RE,RE               RE/RF=NUM OF TRACKS USED                     
         ICM   RE,7,CURARG                                                      
         TM    DTFTYPE,DTFTBIGF+DTFTBIG 22-BIT TRACK                            
         BNO   *+12                                                             
         SRDL  RE,34                                                            
         B     EOFMSG2                                                          
         TM    DTFTYPE,DTFTBIGF    20-BIT TRACK                                 
         BZ    *+12                                                             
         SRDL  RE,36                                                            
         B     EOFMSG2                                                          
         TM    DTFTYPE,DTFTBIG     18-BIT TRACK                                 
         BZ    *+12                                                             
         SRDL  RE,38                                                            
         B     EOFMSG2                                                          
         SRDL  RE,40               16-BIT TRACK                                 
*                                                                               
EOFMSG2  CHI   RF,1                RF=NUM OF TRACKS IN USE                      
         BH    *+14                                                             
         MVC   MYWORK+29(4),=C'100%'                                            
         B     EOFMSG3                                                          
         TM    DIND,DINDNDX        SKIP D/A INDEXED FILES                       
         BO    EOFMSG3                                                          
         TM    DTFOPEN,X'80'       SKIP R/O FILES                               
         BO    EOFMSG3                                                          
         CLI   DTFXNUM,X'A0'       SKIP CONTROL FILES                           
         BL    *+12                                                             
         CLI   DTFXNUM,X'AF'                                                    
         BNH   EOFMSG3                                                          
         MVC   MYWORK+31(2),=C'0%'                                              
         ICM   R0,15,TRKSTOTL                                                   
         BZ    EOFMSG4                                                          
         SR    R0,RF                                                            
         BM    EOFMSG4                                                          
         LR    RF,R0               RF=NUM OF TRACKS AVAILABLE                   
         M     RE,=F'10000'                                                     
         D     RE,TRKSTOTL                                                      
         A     RF,=F'50'                                                        
         SR    RE,RE                                                            
         D     RE,=F'100'          RF=PERCENTAGE AVAILABLE ROUNDED              
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  MYWORK+30(2),DUB+4(4)                                            
         CLI   MYWORK+30,C'0'                                                   
         BNE   *+8                                                              
         MVI   MYWORK+30,C' '                                                   
         CHI   RF,10               ALWAYS OUTPUT IF LESS THAN 10% AVAIL         
         BL    EOFMSG4                                                          
*                                                                               
EOFMSG3  CLI   EOFWHY,2            TEST IF HAD TO SYNCH EOF                     
         BNE   EOFMSG3X                                                         
         MVC   MYWORK+2(4),=C'SYNC'                                             
         OC    SYNCDA,SYNCDA       TEST IF BAD DSKADR SET                       
         BZ    EOFMSG3B                                                         
         ICM   RF,15,=V(HEXOUT)                                                 
         BZ    EOFMSG3B                                                         
         GOTO1 (RF),PARMS,SYNCDA,MYWORK+34,4,(24,0)                             
         MVC   MYWORK(2),=X'0028'                                               
         MVC   SVSYNCDA,SYNCDA                                                  
         XC    SYNCDA,SYNCDA                                                    
EOFMSG3B B     EOFMSG4             ALWAYS OUTPUT SYNCH EOF MESSAGES             
EOFMSG3X EQU   *                                                                
*&&US*&& B     EOFMSGX                                                          
*                                                                               
EOFMSG4  LA    R4,MYWORK                                                        
         WTO   TEXT=(R4),MCSFLAG=HRDCPY                                         
*                                                                               
EOFMSGX  XIT1                                                                   
         DROP  R2                                                               
SVSYNCDA DC    F'0'                SAVE VALUE OF LAST BAD DNEXT                 
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* LOCK DATA SPACE FOR SYSTEM                                          *         
* GET GLOBAL EOF INFO FROM DATA SPACE AND COPY INTO LOCAL DTF         *         
***********************************************************************         
LCKEOF   NTR1  BASE=*                                                           
         ICM   R4,15,=V(SSB)       R4=A(SSB)                                    
         BZ    LCKEOFOK                                                         
         USING SSBD,R4                                                          
         SR    R3,R3               R3=A(DTF)                                    
         ICM   R3,7,P4+1                                                        
         USING DTFPHD,R3                                                        
*                                                                               
LCKEOF1  TM    DTFOPEN,X'80'       EXIT IF FILE IS READ ONLY                    
         BO    LCKEOFOK                                                         
         CLI   DTFSNUM,0           EXIT IF NO SE NUM IN DTF                     
         BE    LCKEOF5                                                          
         TM    DTFFLAG,DTFGLOB     EXIT IF NOT A GLOBAL FILE                    
         BZ    LCKEOF5                                                          
         XC    DUB,DUB                                                          
         MVC   DUB+3(1),DTFSNUM                                                 
         GOTO1 =V(LOCKSPC),DUB     LOCK THE SYSTEM                              
         MVI   LOCKFLG,C'Y'        SET WE HAVE LOCKED                           
*                                                                               
LCKEOF2  SR    R2,R2               R2=A(COPY OF RESOURCE HEADER)                
         ICM   R2,7,5(R1)                                                       
         USING DMSPACED,R2                                                      
         ICM   R2,7,DSPTFRST+1     R2=DISP TO SYSTEMS HEADER                    
         USING DMSYSHDR,R2                                                      
         SAC   512                                                              
         LAM   AR2,AR2,SSBALET                                                  
         SR    R1,R1                                                            
         ICM   R1,3,DSYFILES       R1=NUMBER OF FILES                           
         BZ    LCKEOF3A                                                         
         LA    R2,DSYDATA          R2=DISP TO SYSTEM FILE LIST                  
         USING DSFILHDR,R2                                                      
*                                                                               
LCKEOF3  CLC   DTFXNUM,DSFILNUM    TEST FILE NUMBER                             
         BE    LCKEOF4                                                          
         LA    R2,32(,R2)                                                       
         BCT   R1,LCKEOF3                                                       
LCKEOF3A SAC   0                                                                
         DC    H'0'                DIE=INV FILE NUM                             
*                                                                               
LCKEOF4  OC    DSEOF1,DSEOF1       TEST EOF POINTER IN DSPACE                   
         BZ    LCKEOF8                                                          
         CLC   DNEXT,DSEOF1        TEST OUR EOF NOT GREATER                     
         BH    LCKEOF8                                                          
         MVC   DNEXT,DSEOF1        COPY DSPACE EOF DATA TO DTF                  
         MVC   DCOUNT,DSEOF2                                                    
         CR    RB,RB                                                            
         B     LCKEOF9             EXIT CC EQL IF VALID EOF DATA                
*                                                                               
LCKEOF5  OC    DNEXT,DNEXT         DO WE HAVE DNEXT YET                         
         BNZ   LCKEOFOK                                                         
*                                                                               
LCKEOF8  LTR   RB,RB               EXIT CC NEQ TO FORCE EOF SEARCH              
LCKEOF9  SAC   0                                                                
         B     LCKEOFX                                                          
*                                                                               
LCKEOFOK CR    RB,RB                                                            
*                                                                               
LCKEOFX  XIT1                                                                   
         DROP  R2,R3,R4                                                         
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* PUT LOCAL EOF DATA FOR FILE BACK TO GLOBAL DATA IN DATA SPACE       *         
* FREE DATA SPACE FOR SYSTEM                                          *         
***********************************************************************         
ULKEOF   NTR1  BASE=*                                                           
         ICM   R4,15,=V(SSB)       R4=A(SSB)                                    
         BZ    ULKEOFX                                                          
         USING SSBD,R4                                                          
         SR    R3,R3               R3=A(DTF)                                    
         ICM   R3,7,P4+1                                                        
         USING DTFPHD,R3                                                        
*                                                                               
ULKEOF1  CLI   DTFSNUM,0           EXIT IF SE NUM NOT IN DTF                    
         BE    ULKEOFX                                                          
         TM    DTFFLAG,DTFGLOB     EXIT IF FILE IS NOT GLOBAL                   
         BZ    ULKEOFX                                                          
         TM    DTFOPEN,X'80'       EXIT IF FILE IS READ ONLY                    
         BO    ULKEOFX                                                          
         XC    DUB,DUB                                                          
         OI    DUB,X'20'           SET ENQUIRY FLAG                             
         MVC   DUB+3(1),DTFSNUM                                                 
         GOTO1 =V(LOCKSPC),DUB     ENQUIRE ON SYSTEM                            
*                                                                               
ULKEOF2  SR    R2,R2               R2=A(COPY OF RESOURCE HEADER)                
         ICM   R2,7,5(R1)                                                       
         USING DMSPACED,R2                                                      
         ICM   R2,7,DSPTFRST+1     R2=DISP TO SYSTEMS HEADER                    
         USING DMSYSHDR,R2                                                      
         SAC   512                                                              
         LAM   AR2,AR2,SSBALET                                                  
         SR    R1,R1                                                            
         ICM   R1,3,DSYFILES       R1=NUMBER OF FILES                           
         BZ    ULKEOF3A                                                         
         LA    R2,DSYDATA          R2=DISP TO SYSTEM FILE LIST                  
         USING DSFILHDR,R2                                                      
*                                                                               
ULKEOF3  CLC   DTFXNUM,DSFILNUM    TEST FILE NUMBER                             
         BE    ULKEOF4                                                          
         LA    R2,32(,R2)                                                       
         BCT   R1,ULKEOF3                                                       
ULKEOF3A SAC   0                                                                
         DC    H'0'                DIE=INV FILE NUM                             
*                                                                               
ULKEOF4  MVC   DSEOF1,DNEXT        COPY OUR EOF INFO TO DATA SPACE              
         MVC   DSEOF2(2),DCOUNT                                                 
         SAC   0                                                                
         XC    DUB,DUB                                                          
         MVI   DUB,X'10'                                                        
         MVC   DUB+3(1),DTFSNUM                                                 
         GOTO1 =V(LOCKSPC),DUB     FREE THE SYSTEM                              
         MVI   LOCKFLG,C'N'                                                     
*                                                                               
ULKEOFX  XIT1                                                                   
         DROP  R2,R4                                                            
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO TRACE OPEN/CLOSE COMMANDS - DUB(1) HAS TRACE TYPE        *         
***********************************************************************         
DATRACE  NTR1  BASE=*                                                           
         CLI   DTFTYPE,0           IGNORE THESE FILES                           
         BE    DATRACEX                                                         
         LA    RF,MYWORK                                                        
         MVC   MYWORK(2),=AL2(23)                                               
         MVC   MYWORK+2(1),DUB                                                  
         MVC   MYWORK+3(1),DTFSNUM                                              
         MVC   MYWORK+4(1),DTFFLAG                                              
         MVC   MYWORK+5(1),DTFTYPE                                              
         MVC   MYWORK+6(1),DTFOPEN                                              
         MVC   MYWORK+7(8),DTFDD                                                
         MVC   MYWORK+15(4),DNEXT                                               
         MVC   MYWORK+19(4),DCOUNT                                              
         ICM   RF,15,=V(DDTRACE)                                                
         BZ    DATRACEX                                                         
         GOTO1 (RF),DUB,X'00000006',MYWORK                                      
DATRACEX XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE                                                               
***********************************************************************         
WORK     DSECT                                                                  
*                                                                               
IOB      DS    0XL40                                                            
IOBFLAG1 DS    X               +00 FLAG BYTE 1                                  
IOBFLAG2 DS    X               +01 FLAG BYTE 2                                  
IOBSENS0 DS    X               +02 SENSE BYTE ZERO                              
IOBSENS1 DS    X               +03 SENSE BYTE ONE                               
IOBECBCC DS    X               +04 COMPLETION CODE (FIRST BYTE OF ECB)          
IOBECBPB DS    AL3             +05 A(ECB TO BE POSTED ON COMPLETION)            
IOBFLAG3 DS    X               +08 FLAG BYTE 3                                  
IOBNCCW  DS    AL3             +09 CSW A(NEXT CCW TO EXECUTED)                  
IOBUSTAT DS    X               +12 CSW UNIT STATUS                              
IOBCSTAT DS    X               +13 CSW CHANNEL STATUS                           
IOBRCNT  DS    XL2             +14 CSW RESIDUAL COUNT                           
IOBSTART DS    AL4             +16 A(CHANNEL PROGRAM TO BE EXECUTED)            
IOBFLAG4 DS    X               +20 FLAG BYTE 4                                  
IOBDCBPB DS    AL3             +21 A(DCB ASSOCIATED WITH THIS CCB)              
         DS    XL8             +24 N/D                                          
IOBSEEK  DS    XL8             +32 SEEK ADDRESS MBBCCHHR                        
*                                                                               
ECB      DS    F                   EVENT CONTROL BLOCK FOR IOB                  
         DS    F                   MUST FOLLOW ECB FOR D/A METHOD               
*                                                                               
CCW0     DS    CL8                                                              
CCWS     DS    0CL64                                                            
CCW1     DS    D                                                                
CCW2     DS    D                                                                
CCW3     DS    D                                                                
CCW4     DS    D                                                                
CCW5     DS    D                                                                
CCW6     DS    D                                                                
CCW7     DS    D                                                                
CCW8     DS    D                                                                
CCWW     DS    CL24                                                             
*                                                                               
         ORG   CCWS                CKD DEFINITIONS                              
CCWSK    DS    D                                                                
CCWSRCH  DS    D                                                                
CCWTIC   DS    D                                                                
CCWRD    DS    D                                                                
CCWWT    EQU   CCWRD                                                            
CCWCNT   EQU   CCWRD                                                            
CCWWCKD  DS    D                                                                
         DS    3D                                                               
*                                                                               
SEEK     DS    0CL8                SEEK ADDRESS                                 
         DS    CL2                                                              
SRCH     DS    0CL5                                                             
SKCYL    DS    CL2                                                              
SKTRK    DS    CL2                                                              
SKREC    DS    CL1                                                              
         DS    CL1                                                              
*                                                                               
         ORG   CCWS                FBA DEFINITIONS                              
CCWXNT   DS    D                                                                
CCWLOC   DS    D                                                                
CCWREAD  DS    D                                                                
CCWWRITE EQU   CCWREAD                                                          
         DS    5D                                                               
FBAXNT   DS    0CL16                                                            
FBAXMASK DS    XL4                                                              
FBAXOSET DS    XL4                                                              
FBAXFRST DS    XL4                                                              
FBAXLAST DS    XL4                                                              
FBALOC   DS    0CL08                                                            
FBALOP   DS    XL1                                                              
FBALREP  DS    XL1                                                              
FBALBLKS DS    XL2                                                              
FBALDISP DS    XL4                                                              
*                                                                               
         ORG                                                                    
DEVDATA  DS    0CL16                                                            
DEVTYP   DS    X                                                                
DEVSUB   DS    X                                                                
DEVTRKS  DS    H                                                                
DEVIRG   DS    H                                                                
DEVCAPL  DS    H                                                                
DEVCAPP  DS    H                                                                
DEVRZERO DS    H                                                                
DEVSCT   DS    H                                                                
DEVMOD   DS    H                                                                
*                                                                               
DUB      DS    D                                                                
COUNT    DS    D                                                                
SAVEDA   DS    F                                                                
SAVEP2   DS    F                                                                
SAVEP3   DS    F                                                                
SAVEP6   DS    F                                                                
SAVER9   DS    F                                                                
DAROUTA  DS    A                                                                
WNEXT    DS    F                                                                
WCOUNT   DS    H                                                                
WTCMD    DS    C                                                                
SECTOR   DS    C                                                                
*                                                                               
FULL     DS    F                                                                
LOARG    DS    F                                                                
HIARG    DS    F                                                                
CURARG   DS    F                                                                
TRKSTOTL DS    F                                                                
*                                                                               
ATCB     DS    A                                                                
AREC0    DS    A                                                                
*                                                                               
SVDTAPTR DS    F                                                                
SVDTALEN DS    F                                                                
CALLMODE DS    A                                                                
LASTCCW  DS    A                                                                
SVMAX    DS    H                                                                
BUFFLEN  DS    H                                                                
*                                                                               
SVFRSCCW DS    A                                                                
SVFRSADR DS    A                                                                
SVNXTCCW DS    A                                                                
SVNXTADR DS    A                                                                
HITRK    DS    F                                                                
SVUC     DS    H                                                                
HALF     DS    H                                                                
RECLEN   DS    H                                                                
OPCD     DS    C                                                                
HOLD     DS    C                                                                
PROTON   DS    C                                                                
RPSSW    DS    C                                                                
BYTE     DS    C                                                                
BYTE1    DS    C                                                                
READTYPE DS    C                                                                
FLUSH    EQU   X'01'                                                            
TRACK    EQU   X'02'                                                            
READ1ST  EQU   X'04'                                                            
EOFWHY   DS    X                   REASON WHY FNDEOF WAS CALLED                 
LOCKFLG  DS    C                                                                
         DS    X                   SPARE                                        
*                                                                               
REGSAVE  DS    15F                 USED FOR SETSCTR SAVE AREA                   
KEY      DS    XL48                KEY AREA FOR DECOMPRESSION                   
         ORG   KEY                                                              
ARSSAVER DS    XL16                SAVE AREA FOR AR'S FOR OPEN/CLOSE            
         ORG   KEY                                                              
TRKBDATA DS    0D                                                               
         DS    XL3                 RESERVED                                     
TRKBDVTY DS    X                   DEVICE TYPE CODE                             
TRKBFLGS DS    X                   FLAGS                                        
         DS    X                   RESERVED                                     
TRKBBAL  DS    H                   TRACK BALANCE                                
TRKBREC  DS    X                   RECORD NUMBER                                
TRKBKLEN DS    X                   KEY LENGTH                                   
TRKBDLEN DS    H                   DATA LENGTH                                  
*                                                                               
         ORG   KEY                                                              
ARBLK    DS    A                   REQUEST BLOCK POINTER                        
*                                                                               
RBLK     DS    0XL20               REQUEST BLOCK                                
RBLKLEN  DS    XL1                                                              
RBLKVERB DS    XL1                                                              
         DS    XL2                                                              
RBLKERR  DS    XL2                                                              
RBLKINFO DS    XL2                                                              
RBLKATXT DS    A                                                                
         DS    XL8                                                              
*                                                                               
ATXT     DS    0A                  TEXT BLOCK POINTERS                          
ATXTDD   DS    A                                                                
ATXTDSN  DS    A                                                                
ATXTDISP DS    A                                                                
ATXTUNAL DS    A                                                                
         ORG   *-4                                                              
ATXTLAST DS    A                   LAST TEXT BLOCK POINTER                      
         ORG                                                                    
*                                                                               
TXTDD    DS    XL6,CL8             TEXT BLOCK DDNAME 0001                       
TXTDSN   DS    XL6,CL25            TEXT BLOCK DSN    0002                       
TXTDISP  DS    XL6,XL1             TEXT BLOCK DISP   0004                       
TXTUNAL  DS    XL6                 TEXT BLOCK UNALOC 001C                       
*                                                                               
LASTIDAW DS    A                                                                
NEXTIDAW DS    A                                                                
LOWBITS  DS    F                                                                
P2LOWBTS DS    F                                                                
IDAWS    DS    40A                 INDIRECT ADDRESS WORDS                       
*                                                                               
MYWORK   DS    CL80                                                             
*                                                                               
PARMS    DS    5F                                                               
*                                                                               
PQSAVEDA DS    F                                                                
*                                                                               
WORKX    EQU   *                                                                
         EJECT                                                                  
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
*                                                                               
***********************************************************************         
* DSECT FOR EXTENDED I/O BUFFER TABLE                                 *         
***********************************************************************         
DTFXMAX  EQU   16                  MAXIMUM NUMBER OF TABLE ENTRIES              
*                                                                               
DTFXTABD DSECT                                                                  
DTFXTBIO DS    A                   IOAREA ADDRESS                               
DTFXTBSQ DS    A                   SEQUENCE NUMBER                              
DTFXTBSK DS    XL8                 SEEK ADDRESS                                 
DTFXTBNX EQU   *                   DSPL TO NEXT ENTRY                           
*                                                                               
         DS    ((DTFXMAX-1)*16)X   ROOM FOR 15 MORE ENTRIES                     
DTFXTABX EQU   *                                                                
         EJECT                                                                  
PARAMS   DSECT                                                                  
P1       DS    A                                                                
P2       DS    A                                                                
P3       DS    A                                                                
P4       DS    A                                                                
P5       DS    A                                                                
P6       DS    A                                                                
         EJECT                                                                  
*FASSB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         PRINT ON                                                               
*FASSBOFF                                                                       
         PRINT OFF                                                              
       ++INCLUDE FASSBOFF                                                       
         PRINT ON                                                               
*FATCB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FATCB                                                          
         PRINT ON                                                               
*DMSPACED                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMSPACED                                                       
         PRINT ON                                                               
*DMDSHDR                                                                        
         PRINT OFF                                                              
       ++INCLUDE DMDSHDR                                                        
         PRINT ON                                                               
*DMDSYSHDR                                                                      
         PRINT OFF                                                              
       ++INCLUDE DMDSYSHDR                                                      
         PRINT ON                                                               
*DMDYNDDD                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMDYNDDD                                                       
         PRINT ON                                                               
*DMXTNTD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DMXTNTD                                                        
         PRINT ON                                                               
*DMPRTQW                                                                        
         PRINT OFF                                                              
       ++INCLUDE DMPRTQW                                                        
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'011DMDADDS   11/13/20'                                      
         END                                                                    
