*          DATA SET DMISLDDS   AT LEVEL 004 AS OF 02/23/15                      
*CATALP DMISLDDS                                                                
***********************************************************************         
* P1     NOT USED                                                     *         
* P2     A(RECORD)                                                    *         
* P3     ERROR INDICATORS                                             *         
* P4     A(DTFIS)                                                     *         
*                                                                     *         
* FORMAT OF PRIME DATA BLOCK IS AS FOLLOWS:-                          *         
*                                                                     *         
* XL2    LENGTH OF SPARE AT LOAD TIME                                 *         
* XL4    LINK TO OVERFLOW BLOCK                                       *         
* XLI    SPARE BYTES (DEFINED IN ISDTF)                               *         
* XLJ    FIRST RECORD WITH UNCOMPRESSED KEY                           *         
* XLK    SECOND RECORD WITH COMPRESSED KEY                            *         
* ...    ...............................                              *         
* XLL    LAST RECORD WITH COMPRESSED KEY                              *         
* XL1    END OF DATA (X'FF')                                          *         
* XLM    SPARE BYTES AT END OF BLOCK                                  *         
* XLN    LAST KEY IN BLOCK (UNCOMPRESSED) LEN DEFINED BY ISKEYLN      *         
***********************************************************************         
         TITLE 'ISLDDS - INDEX SEQUENTIAL LOAD'                                 
         PRINT NOGEN                                                            
ISLDDS   CSECT                                                                  
         ENTRY IVLDDS                                                           
         ENTRY ISLEOFS                                                          
         ENTRY ISLPDIXA                                                         
*                                                                               
IVLDDS   NMOD1 0,*ISLDDS*,RA                                                    
         LR    RC,R1               RC=A(PARAM LIST)                             
         USING PARAMS,RC                                                        
         L     RA,ACOMMON                                                       
         USING COMMON,RA                                                        
         XC    P3(2),P3            RESET ERROR IND                              
*                                                                               
         L     R2,12(R1)           R2=A(ISFILE DTF)                             
         USING ISDTF,R2                                                         
         TM    ISFTYPE,ISFTBIGF    BIG FILES WITH PDIXOV FORMAT                 
         BZ    *+12                                                             
         BRAS  RE,ISVDDS                                                        
         B     ISLEXIT                                                          
*                                                                               
         TM    ISFTYPE,ISFTPDOV    TEST IF OVERFLOW AFTER PRIME DATA            
         BZ    *+12                                                             
         BRAS  RE,ISNDDS                                                        
         B     ISLEXIT                                                          
*                                                                               
         CLI   FRSTTIME,0          INITIALISE ON FIRST CALL                     
         BNE   ISLINIT                                                          
         CLI   RECKEY,X'FF'        TEST PREVIOUS KEY WITH EOF VALUE             
         JE    *+2                 FF IS LAST POSSIBLE RECORD                   
*                                                                               
ISLMV    L     R4,P2               GET REC ADDRESS                              
         LH    R5,ISKEYLN1         KEYLEN-1                                     
         CLI   0(R4),X'FF'         TEST FOR EOF REC                             
         BNE   *+14                                                             
         BCTR  R5,0                                                             
         EX    R5,ISLMVCFF         SET KEY TO X'FF'                             
         LH    R5,ISKEYLN1         RESTORE                                      
*                                                                               
         EX    R5,ISLCLC                                                        
         BE    ISLDUP              DUPLICATE KEY ERROR                          
         BH    ISLSEQ              SEQUENCE ERROR                               
*                                                                               
         CLI   KEYCOMP,0           TEST COMPARE KEYS THIS TIME                  
         BNE   ISLMV4              NON-ZERO MEANS YES                           
         SH    R5,ISKEYLN          SET R5 TO -1                                 
         B     ISLMV6                                                           
*                                                                               
ACOMMON  DC    A(COMMON)                                                        
*                                                                               
ISLXTNT  DC    H'0',CL16'BAD DISK EXTENTS'                                      
ISLDUP   DC    H'0',CL16'DUPLICATE KEY'                                         
ISLSEQ   DC    H'0',CL16'SEQUENCE ERROR'                                        
ISLBADRL DC    H'0',CL16'BAD RECORD LEN'                                        
         EJECT                                                                  
***********************************************************************         
* DETERMINE COMPRESSED LENGTH OF KEY                                  *         
***********************************************************************         
ISLMV2   EX    R5,ISLCLC           CLC  0(0,R4),RECKEY                          
         BE    ISLMV6                                                           
ISLMV4   BCTR  R5,0                DECREMENT LEN FOR NEXT CLC                   
         LTR   R5,R5                                                            
         BNM   ISLMV2                                                           
*                                                                               
ISLMV6   LA    R5,1(R5)            SET NUMBER OF MATCHED BYTES                  
         TM    ISCMPRSW,X'80'                                                   
         BZ    *+16                                                             
         LH    R1,ISKEYLN                                                       
         AR    R1,R4                                                            
         MVC   ISRECLN,0(R1)       SET REC LEN FOR V/L RECORDS                  
*                                                                               
         OC    ISRECLN,ISRECLN     TEST FOR BAD RECORD LENGTH                   
         BZ    ISLBADRL                                                         
         CLC   ISRECLN,MAXRECL                                                  
         BH    ISLBADRL                                                         
*                                                                               
         LH    R1,ISRECLN                                                       
         SR    R1,R5                                                            
         LA    R1,1(R1)            ACTUAL LEN=RECLN-MATCHED BYTES+1             
ISLMV8   L     RE,PDBUFPTR         GET CURRENT POSITION                         
         LA    R0,0(R1,RE)         POINT TO NEXT REC POSITION                   
         C     R0,PDBUFPTX         WILL THIS REC FIT                            
         BH    ISLNXTPD            NO                                           
         ST    R0,PDBUFPTR         SET NEXT REC ADDRESS                         
*                                                                               
         TM    ISCMPRSW,X'01'      TEST KEY COMPRESSION DESIRED                 
         BZ    *+8                 NO                                           
         MVI   KEYCOMP,C'C'        ALLOW KEY COMPARE NEXT TIME                  
*                                                                               
         STC   R5,0(RE)            SET MATCHED BYTES IN BLOCK                   
         LA    RE,1(RE)            SET 'TO' ADDRESS                             
         LA    RF,0(R4,R5)         GET 'FROM' ADDRESS                           
         EJECT                                                                  
***********************************************************************         
* MOVE REC TO BUFFER                                                  *         
***********************************************************************         
ISLMV9   LA    R0,256                                                           
         CR    R1,R0                                                            
         BNH   *+20                                                             
         MVC   0(256,RE),0(RF)                                                  
         AR    RE,R0                                                            
         AR    RF,R0                                                            
         SR    R1,R0                                                            
         B     *-18                                                             
         BCTR  R1,0                                                             
         EX    R1,ISLMVC                                                        
*                                                                               
         LH    R5,ISKEYLN1         GET KEY LEN-1                                
         EX    R5,ISLSAVE                                                       
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BNE   ISLEXIT                                                          
         L     RE,PDBUFPTR         SET ADDRESS IN RE                            
         B     ISLNXTPD            GO WRITE RECORD                              
*                                                                               
ISLCLC   CLC   RECKEY(0),0(R4)                                                  
ISLSAVE  MVC   RECKEY(0),0(R4)                                                  
ISLMVC   MVC   0(0,RE),0(RF)                                                    
ISLMVCFF MVC   1(0,R4),0(R4)       PROPAGATE X'FF' IN KEY                       
         EJECT                                                                  
***********************************************************************         
* RECORD WILL NOT FIT -  SET EOB FLAG AND TRY NEXT BLOCK              *         
***********************************************************************         
ISLNXTPD MVI   0(RE),X'FF'         SET EOB FLAG                                 
         MVI   KEYCOMP,0           SUPPRESS KEY COMPRESSION NEXT TEST           
*                                                                               
         L     RE,PDCCWPTR         GET CURRENT CCW ADDRESS                      
         L     RE,0(RE)            GET CURRENT BLK ADDRESS                      
         LA    RE,0(RE)                                                         
         AH    RE,ISPDLN           ADD BLKLEN                                   
         SH    RE,ISKEYLN          BACK UP ONE KEYLEN                           
         LH    RF,ISKEYLN1                                                      
         EX    RF,ISLMVTI          PUT HI KEY AT END OF BLOCK                   
*                                                                               
         L     RE,TIBUFPTR         MOVE HI KEY IN BLK TO TI                     
         EX    RF,ISLMVTI                                                       
         LA    RE,1(RE,RF)         GET NEXT TI ADDRESS                          
         ST    RE,TIBUFPTR                                                      
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISLWRITE                                                         
*                                                                               
         L     RE,PDCCWPTR         GET A(CURRENT PD CCW)                        
         LA    RE,16(RE)                                                        
         CLI   0(RE),0             TEST FOR LAST                                
         BE    ISLWRITE            YES-GO WRITE                                 
         ST    RE,PDCCWPTR         SET PTR                                      
*                                                                               
         L     RE,0(RE)            GET BLK ADDRESS                              
         LA    RE,0(RE)            CLEAR HOB                                    
         LH    RF,ISSPARE                                                       
         STH   RF,0(RE)            SET SPARE                                    
         LA    R0,6(RE,RF)         SET FIRST DATA ADDRESS                       
         ST    R0,PDBUFPTR                                                      
         AH    RE,ISPDLN                                                        
         SH    RE,ISKEYLN          LEAVE ROOM FOR HI KEY                        
         BCTR  RE,0                                                             
         ST    RE,PDBUFPTX         SET LAST BYTE ADDR-1 FOR EOB FLAG            
         B     ISLMV               GO MOVE RECORD                               
*                                                                               
ISLMVTI  MVC   0(0,RE),RECKEY                                                   
         EJECT                                                                  
***********************************************************************         
* WRITE PRIME DATA BUFFER                                             *         
***********************************************************************         
ISLWRITE LA    R7,PDTTBR           POINT TO REL TRK                             
         LA    R8,ISXTNTPD         POINT TO EXTENT MATRIX                       
         BAS   R9,ISLCCHH          TRANSLATE IN 'SEEK'                          
         B     ISLEOFER                                                         
*                                                                               
         BAS   R9,ISLCLRCO                                                      
         L     R7,ADRCOUNT         BUILD PD COUNT FIELDS                        
         LA    R8,1                                                             
         LH    R0,ISHIPD                                                        
ISLWRT2  MVC   0(4,R7),SRCH                                                     
         STC   R8,4(R7)                                                         
         MVC   6(2,R7),ISPDLN      SET BLK LEN                                  
         LA    R7,8(R7)                                                         
         LA    R8,1(R8)                                                         
         BCT   R0,ISLWRT2                                                       
*                                                                               
ISLWRT4  L     R7,PDCCWPTR         GET LAST GOOD DATA CCW                       
         MVI   4(R7),0             RESET CC/DC                                  
*                                                                               
         L     R1,ADRPDCCW                                                      
         BAS   R9,ISLEXCP                                                       
         DC    AL4(0)                                                           
         MVC   ISPDLAST,PDTTBR     SAVE LAST PD ADDRESS IN DTF                  
*                                                                               
         SR    RE,RE               BUMP TO NEXT PD TRACK                        
         ICM   RE,3,PDTTBR                                                      
         LA    RE,1(RE)                                                         
         STH   RE,PDTTBR                                                        
         BAS   R9,ISLCLRPB         CLEAR PD BUFFER AND RESET POINTERS           
*                                                                               
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISLWRT6                                                          
         LH    RE,ISTRKS           GET TRKS/CYL                                 
         BCTR  RE,0                                                             
         CH    RE,SEEK+4           TEST FOR LAST TRK ON CYL                     
         BH    ISLMV               NO - GO MOVE RECORD                          
         EJECT                                                                  
***********************************************************************         
* AT END OF CYLINDER WRITE TRACK INDEX                                *         
***********************************************************************         
ISLWRT6  XC    SEEK+4(2),SEEK+4    SET TRACK TO ZERO                            
         XC    IOB+37(2),IOB+37    CLEAR SEEK ADDRESS IN IOB                    
*                                                                               
         BAS   R9,ISLCLRCO                                                      
         L     R7,ADRCOUNT         BUILD TI COUNT FIELDS                        
         LA    R8,1                                                             
         LH    R0,ISHITI                                                        
ISLWRT10 MVC   0(4,R7),SRCH                                                     
         STC   R8,4(R7)                                                         
         MVC   6(2,R7),ISTILN                                                   
         LA    R7,8(R7)                                                         
         LA    R8,1(R8)                                                         
         BCT   R0,ISLWRT10                                                      
*                                                                               
         L     R1,ADRTICCW                                                      
         BAS   R9,ISLEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         BAS   R9,ISLCLRTB         CLEAR TI BUFFER AND RESET POINTERS           
         EJECT                                                                  
***********************************************************************         
* MOVE LAST KEY TO CYLINDER INDEX                                     *         
***********************************************************************         
ISLWRT20 L     RE,CIBUFPTR                                                      
         LH    RF,ISKEYLN1                                                      
         LA    R0,3(RE,RF)         CI ENTRY LEN=KEYLN+2 (TT)                    
         C     R0,CIBUFPTX         WILL THIS ENTRY FIT                          
         BNH   *+12                YES                                          
         BAS   RE,ISLWRTCI         NO - WRITE RECORD                            
         B     ISLWRT20                                                         
         ST    R0,CIBUFPTR                                                      
*                                                                               
         L     R0,CICORE           BUMP CYL INDEX CORE                          
         AH    R0,ISIXLN                                                        
         ST    R0,CICORE                                                        
         EX    RF,ISLMVCI                                                       
         LA    RE,1(RE,RF)         POINT PAST KEY                               
         MVC   0(2,RE),TITTBR                                                   
*                                                                               
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISLEND                                                           
         SR    RE,RE               BUMP TI REL TRK BY TRKS/CYL                  
         ICM   RE,3,TITTBR                                                      
         AH    RE,ISTRKS                                                        
         STH   RE,TITTBR                                                        
         LA    RE,1(RE)            AND SET PD TRK TO TI+1.                      
         STH   RE,PDTTBR                                                        
         B     ISLMV               GO MOVE THIS RECORD                          
ISLEND   BAS   RE,ISLWRTCI         GO WRITE RECORD                              
*                                                                               
         LA    R7,CITTBR           WRITE EOF REC                                
         LA    R8,ISXTNTIX                                                      
         BAS   R9,ISLCCHH                                                       
         B     ISLEOFER                                                         
*                                                                               
         BAS   R9,ISLCLRCO                                                      
         L     R7,ADRCOUNT                                                      
         MVC   0(4,R7),SRCH        SET CCHH WITH LEN=0                          
         IC    R8,CITTBR+2         GET REC NUM                                  
         LA    R8,1(R8)            ADD 1                                        
         STC   R8,4(R7)            SET REC NUM IN COUNT FIELD                   
*                                                                               
         L     R7,FSTCICCW         POINT TO COUNT FIELD CCW                     
         MVI   4(R7),0             RESET CC/DC                                  
         L     R1,ADRCICCW                                                      
         BAS   R9,ISLEXCP                                                       
         DC    AL4(0)                                                           
         EJECT                                                                  
***********************************************************************         
* NOW ERASE THE REST OF CYLINDER INDEX EXTENT                         *         
***********************************************************************         
ISLEND1  CLI   WRITESW,C'N'                                                     
         BE    ISLEND5                                                          
         L     R7,FSTCICCW                                                      
         MVI   0(R7),X'11'         SET OPCD=ERASE                               
*                                                                               
ISLEND2  SR    R6,R6               BUMP TO NEXT CI TRACK                        
         ICM   R6,3,CITTBR                                                      
         LA    R6,1(R6)                                                         
         SLL   R6,16                                                            
         ST    R6,CITTBR                                                        
*                                                                               
         LA    R7,CITTBR                                                        
         LA    R8,ISXTNTIX                                                      
         BAS   R9,ISLCCHH                                                       
         B     ISLEND4             ERROR RETURN EOF                             
*                                                                               
         L     R7,ADRCOUNT         NORMAL RETURN GET COUNT FIELD ADDR           
         XC    0(8,R7),0(R7)                                                    
         MVC   0(4,R7),SRCH                                                     
         MVI   4(R7),1                                                          
*                                                                               
         L     R1,ADRCICCW                                                      
         BAS   R9,ISLEXCP                                                       
         DC    AL4(0)                                                           
         B     ISLEND2                                                          
*                                                                               
ISLEND4  TM    P3+1,X'04'          TEST EOF SET                                 
         JZ    *+2                                                              
ISLEND5  XC    P3(2),P3                                                         
*                                                                               
ISLEND6  LM    RE,RF,CICORE        RE=CICORE AND RF=MICORE                      
         TM    ISINDXTY,X'02'                                                   
         BZ    ISLEND6A            TEST IF INDEX SIZE IN DOUBLE WORDS           
         LA    RE,7(RE)                                                         
         SRL   RE,3                ADJUST CICORE TO DUBS                        
         LA    RF,7(RF)                                                         
         SRL   RF,3                ADJUST MICORE TO DUBS                        
ISLEND6A TM    ISINDXTY,X'01'                                                   
         BZ    ISLEND6B                                                         
         XR    RE,RF                                                            
         XR    RF,RE                                                            
         XR    RE,RF               RE=MICORE AND RF=CICORE                      
ISLEND6B STCM  RE,3,ISINDXLN       PASS BACK CYL/MST OR MST/CYL SIZES           
         STCM  RF,3,ISCILN+2                                                    
         ST    RE,ISPDDA                                                        
         ST    RF,ISOVDA                                                        
*                                                                               
         B     ISLEXIT             DONE                                         
         EJECT                                                                  
***********************************************************************         
* WRITE CYLINDER INDEX RECORD                                         *         
***********************************************************************         
ISLWRTCI NTR1                                                                   
         LA    R7,CITTBR           POINT TO REL TRK/REC                         
         LA    R8,ISXTNTIX         POINT TO EXTENT MATRIX                       
         BAS   R9,ISLCCHH          TRANSLATE IN 'SEEK'                          
         B     ISLEOFER                                                         
*                                                                               
         MVC   ISCILAST,CITTBR     SAVE LAST CI ADDRESS                         
         L     R0,MICORE           BUMP MST NDX CORE                            
         AH    R0,ISIXLN                                                        
         AHI   R0,2                                                             
         ST    R0,MICORE                                                        
*                                                                               
         BAS   R9,ISLCLRCO                                                      
         L     R7,ADRCOUNT                                                      
         MVC   0(4,R7),SRCH        MOVE CCHH                                    
         SR    R8,R8                                                            
         IC    R8,CITTBR+2                                                      
         LA    R8,1(R8)                                                         
         STC   R8,CITTBR+2                                                      
         STC   R8,4(R7)            SET REC                                      
         MVC   6(2,R7),ISCILN      MOVE LENGTH                                  
*                                                                               
         L     R1,ADRCICCW                                                      
         BAS   R9,ISLEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         CH    R8,ISHICI           SEE IF LAST REC ON TRK                       
         BL    ISLWCIX                                                          
         SR    RE,RE               BUMP TO NEXT CI TRACK                        
         ICM   RE,3,CITTBR                                                      
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,CITTBR                                                        
ISLWCIX  BAS   R9,ISLCLRCB                                                      
         XIT1                                                                   
*                                                                               
ISLMVCI  MVC   0(0,RE),RECKEY                                                   
*                                                                               
ISLEXIT  XMOD1 1                                                                
*                                                                               
ISLEOFER ABEND 101,DUMP                                                         
         EJECT                                                                  
***********************************************************************         
* TRANSLATE A RELATIVE TRACK ADDRESS TO AN ACTUAL DISK ADDRESS        *         
* R7 HAS A(RELTRK) AND R8 HAS A(MATRIX ENTRY)                         *         
* CCB/IOB ARE SET FOR THE CORRECT DEVICE ADDRESS                      *         
***********************************************************************         
ISLCCHH  SR    RE,RE               TEST DISK ADDRESS OK                         
         ICM   RE,3,0(R7)                                                       
         JZ    *+2                                                              
*                                                                               
ISLCCHH2 CLC   0(2,R7),12(R8)      SEARCH EXTENT MATRIX                         
         BNH   ISLCCHH4                                                         
         SR    RE,RE                                                            
         ICM   RE,3,0(R7)                                                       
         SR    R0,R0                                                            
         ICM   R0,3,12(R8)                                                      
         SR    RE,R0                                                            
         LA    R8,14(R8)                                                        
         CLI   0(R8),X'FF'                                                      
         BNE   ISLCCHH2                                                         
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BE    4(R9)                                                            
         MVI   P3+1,X'04'                                                       
         BR    R9                  ERROR RETURN ON EOF                          
*                                                                               
ISLCCHH4 XC    SEEK,SEEK           RE=REL TRK FOR THIS EXTENT                   
         AH    RE,4(R8)            ADD LOW TRACK                                
         BCTR  RE,0                                                             
         SRDA  RE,32                                                            
         LH    R0,ISTRKS                                                        
         DR    RE,R0               RF HAS CYL, RE HAS TRK                       
         AH    RF,2(R8)            ADD LOW CYL                                  
         STH   RF,SEEK+2           SET CYL                                      
         STH   RE,SEEK+4           SET TRK                                      
         MVC   SEEK+6(1),2(R7)     SET REC                                      
         XC    ISFSEEK,ISFSEEK     SET SEEK ADDR IN DTF (MBBCCHHR)              
         MVC   ISFSEEK(1),1(R8)                                                 
         MVC   ISFSEEK+3(5),SEEK+2                                              
         MVC   ISFUC,0(R8)         SET SEQNUM/DEVTYP IN DTF                     
         MVC   IOB+32(8),ISFSEEK   SET SEEK ADDR IN IOB (MBBCCHHR)              
         B     4(R9)               NORMAL RETURN                                
         EJECT                                                                  
***********************************************************************         
* EXECUTE CHANNEL PROGRAM                                             *         
***********************************************************************         
ISLEXCP  XC    IOB(32),IOB         INITIALISE IOB                               
         MVI   IOB,X'C3'           SET DC/CC/NOTRELATED/NOAPPENDG               
         LA    R1,8(R1)            REMOVE LONG SEEK                             
         ST    R1,IOB+16           R1 POINTS TO CCW STRING                      
         LA    R1,ECB                                                           
         ST    R1,IOB+4                                                         
         L     R1,ISFADCB          SET DCB ADDR                                 
         STCM  R1,7,IOB+21                                                      
*                                                                               
ISLX1    LA    R1,IOB              EXECUTE CHANNEL PROGRAM                      
         CLI   WRITESW,C'N'        TEST WRITE=NO                                
         BE    4(R9)               YES - RETURN NORMAL COMPLETION               
         XC    ECB,ECB                                                          
         EXCP  IOB                                                              
         WAIT  ECB=ECB                                                          
*                                                                               
ISLX2    CLI   IOB+4,X'7F'         EXIT IF NORMAL COMPLETION                    
         BE    4(R9)                                                            
         CLI   IOB+4,X'41'         TEST PERMANENT ERROR                         
         BE    ISLX3                                                            
         CLI   IOB+4,X'42'         TEST OUTSIDE EXTENTS                         
         BNE   *+10                                                             
         MVI   P3+1,X'01'          REFERENCE OUTSIDE EXTENTS                    
         BR    R9                                                               
         DC    H'0'                DIE IF HORRIBLE COMPLETION CODE              
*                                                                               
ISLX3    TM    IOB+12,X'02'        TEST CSW UNIT STATUS FOR UNIT CHECK          
         BO    ISLX4                                                            
         TM    IOB+12,X'01'        TEST CSW UNIT STATUS FOR UNIT EXCPN          
         BZ    *+10                                                             
         MVI   P3+1,X'04'          SET EOF                                      
         BR    R9                                                               
         TM    IOB+12,X'FF'        TEST CSW UNIT STATUS                         
         JNZ   *+2                                                              
         TM    IOB+13,X'FF'        TEST CSW CHNL STATUS                         
         BZ    ISLX4                                                            
ISLXER80 MVI   P1,X'80'            SET UNRECOVERABLE ERROR                      
         BR    R9                  ERROR RETURN                                 
*                                                                               
ISLX4    TM    IOB+2,X'04'         TEST SENSE BYTE 0 ON UNIT CHECK              
         BNZ   ISLXER80            TRACK OVERRUN                                
         CLI   IOB+2,0                                                          
         BNE   ISLXER80            UNRECOVERABLE ERROR                          
         TM    IOB+3,X'04'         TEST SENSE BYTE 1 ON UNIT CHECK              
         BZ    *+10                                                             
         MVI   P3+1,X'08'          SET NO RECORD FOUND                          
         BR    R9                                                               
         B     ISLXER80            UNRECOVERABLE ERROR                          
         EJECT                                                                  
***********************************************************************         
* INITIALISE ON FIRST CALL                                            *         
***********************************************************************         
ISLINIT  MVI   WRITESW,C'Y'        SET WRITE OPTION                             
         ICM   RF,15,=V(LDWRITE)                                                
         BZ    *+10                                                             
         MVC   WRITESW,0(RF)                                                    
         MVI   FRSTTIME,0          RESET FIRST TIME SWITCH                      
         XC    ISINDXLN,ISINDXLN   CLEAR CI CORE ACCUMULATOR                    
         SR    RE,RE                                                            
         ICM   RE,3,ISPDLN         GET PD BUFFER LENGTH                         
         SH    RE,ISSPARE                                                       
         AHI   RE,-8                                                            
         STH   RE,MAXRECL          SAVE MAXIMUM RECORD LENGTH                   
*                                                                               
         SR    RE,RE                                                            
         ICM   RE,1,ISFDEVT        ISOPEN HAS SET LOGICAL DEVICE                
         JZ    *+2                 INVALID DEVICE                               
         BCTR  RE,0                                                             
         SLL   RE,4                                                             
         LA    RE,DEV3340(RE)                                                   
         MVC   DEVDATA,0(RE)       SAVE DISK DEVICE DATA                        
*                                                                               
ISLDTF   MVC   ISTRKS,DEVTRKS      SET TRKS/CYL                                 
         SR    R0,R0                                                            
         ICM   R0,3,ISPDLN                                                      
         BAS   R9,ISLDTFR          GET PD RECS/TRK                              
         STH   R0,ISHIPD                                                        
         MH    R0,ISKEYLN          COMPUTE LEN OF TI REC                        
         LH    R1,ISTRKS                                                        
         BCTR  R1,0                                                             
         MR    R0,R0                                                            
         STH   R1,ISTILN           ISTILN=ISHIPD*ISKEYLN*(ISTRKS-1)             
         SRL   R1,1                                                             
         CH    R1,ISPDLN                                                        
         JNL   *+2                 BLKSIZE MUST BE GT HALF TISIZE               
         LH    R0,ISIXLN           COMPUTE LEN OF CI REC                        
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,ISTILN                                                      
         DR    RE,R0                                                            
         MR    RE,R0                                                            
         STH   RF,ISCILN           ISCILN=(ISTILN/ISIXLN)*ISIXLN                
         SR    R0,R0                                                            
         ICM   R0,3,ISTILN                                                      
         BAS   R9,ISLDTFR          GET TI RECS/TRK                              
         STH   R0,ISHITI                                                        
         SR    R0,R0                                                            
         ICM   R0,3,ISCILN                                                      
         BAS   R9,ISLDTFR          GET CI RECS/TRK                              
         STH   R0,ISHICI                                                        
         B     ISLDTFX                                                          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE COMPUTES RECS/TRK FOR RECLEN IN R0                       *         
***********************************************************************         
ISLDTFR  LTR   R0,R0                                                            
         JZ    *+2                 DIE IF RECLEN IS ZERO                        
         C     R0,=F'32767'                                                     
         JH    *+2                 DIE IF RECLEN GT 32K                         
         CLI   DEVSUB,5            TEST FOR 3390                                
         BE    ISL3390                                                          
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,DEVCAPL                                                     
         OC    DEVMOD,DEVMOD                                                    
         BZ    *+16                                                             
         AH    R0,DEVMOD           ADJUST FOR MODULO                            
         SRL   R0,5                                                             
         SLL   R0,5                                                             
         AH    R0,DEVIRG           ADJUST FOR IRG                               
         DR    RE,R0                                                            
         LTR   R0,RF               RETURN RECS/TRK IN R0                        
         BNZR  R9                                                               
         DC    H'0'                DIE IF RECLEN GT TRACK LEN                   
                                                                                
***********************************************************************         
* 3390 COMPUTATION ROUTINES                                           *         
* DN=(DL+6+231)/232                                                   *         
* D=9+(DL+6*DN)+6+33)/34                                              *         
* SPACE=10+D                                                          *         
***********************************************************************         
ISL3390  LR    RE,R0               GET RECLEN                                   
         LA    RE,237(RE)          RE=DL+6+231                                  
         SRDL  RE,32                                                            
         D     RE,=F'232'          RF=(DL+237)/232                              
         MHI   RF,6                                                             
         AR    RF,R0               RF=DL+6*DN                                   
         LA    RF,39(RF)                                                        
         SR    RE,RE                                                            
         D     RE,=F'34'                                                        
         LA    RF,19(RF)           GIVES SPACE REQUIRED IN RF                   
         SR    R0,R0                                                            
         LA    R1,1729             1729=NUMBER OF CELLS/TRACK                   
         DR    R0,RF               DIVIDE BY SPACE/RECORD                       
         LR    R0,R1               GIVES MAX RECS/TRACK (TRUNCATED)             
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* SET HIGH REL TRK IN EXTENT MATRIX                                   *         
* FIND X'FF' IN XTNT MATRIX AND MOVE PD XTNTS TO RIGHT 1 BYTE         *         
***********************************************************************         
ISLDTFX  LHI   R0,15               MAX 15 PD XTNTS                              
         LA    R1,ISXTNTIX+14                                                   
         L     RE,ADRPDBUF         MOVE AREA                                    
*                                                                               
INXT2    MVC   0(15,RE),0(R1)      MOVE 14 BYTES XTNT + 1                       
         LA    R1,14(R1)                                                        
         LA    RE,14(RE)                                                        
         CLI   0(R1),X'FF'                                                      
         BE    INXT4                                                            
         BCT   R0,INXT2                                                         
         DC    H'0'                                                             
*                                                                               
INXT4    MVI   ISXTNTIX+14,X'FF'   SET END FLAG FOR INDEX XTNT                  
         LA    R1,ISXTNTPD                                                      
         L     RE,ADRPDBUF         MOVE PD EXTENTS BACK                         
*                                                                               
INXT6    MVC   0(15,R1),0(RE)      MOVE 14 BYTES XTNT + 1                       
         LA    RE,14(RE)                                                        
         LA    R1,14(R1)                                                        
         CLI   0(RE),X'FF'                                                      
         BNE   INXT6                                                            
         XC    RECKEY,RECKEY                                                    
*                                                                               
         LA    R1,ISXTNTIX                                                      
         BAS   R9,ISLSETHI                                                      
         LA    R1,ISXTNTPD                                                      
         BAS   R9,ISLSETHI                                                      
*                                                                               
ISLINI1  BAS   R9,ISLCLRCO         CLEAR COUNTS/CCWS/BUFFERS                    
         BAS   R9,ISLCLRCI                                                      
         BAS   R9,ISLCLRTI                                                      
         BAS   R9,ISLCLRPD                                                      
         BAS   R9,ISLCLRCB                                                      
         BAS   R9,ISLCLRTB                                                      
         BAS   R9,ISLCLRPB                                                      
*                                                                               
ISLINI2  L     R1,ADRCICCW         BUILD CI SK/SRCH/TIC CCWS                    
         BAS   R9,ISLSST                                                        
         ST    R1,FSTCICCW         SAVE ADR OF FIRST CI CCW                     
         MVC   0(4,R1),ADRCOUNT                                                 
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         LA    R1,8(R1)                                                         
         MVC   0(4,R1),ADRCIBUF                                                 
         MVI   0(R1),X'05'         SET OPCD=WRITE DATA                          
         MVC   6(2,R1),ISCILN                                                   
*                                                                               
ISLINI3  L     R1,ADRTICCW         BUILD TI SK/SCTR/SRCH/TIC CCWS               
         BAS   R9,ISLSSST                                                       
         ST    R1,FSTTICCW         SAVE ADDR OF FIRST TI CCW                    
         L     R3,ADRCOUNT                                                      
         LH    RE,ISHITI           GET RECORDS/TRK                              
ISLINI3A ST    R3,0(R1)                                                         
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         MVC   8(4,R1),ADRTIBUF                                                 
         MVI   8(R1),X'05'         SET OPCD=WRITE DATA                          
         MVI   12(R1),X'40'                                                     
         MVC   14(2,R1),ISTILN                                                  
         LA    R3,8(R3)            NEXT COUNT ADDRESS                           
         LA    R1,16(R1)           NEXT CCW                                     
         BCT   RE,ISLINI3A                                                      
         AHI   R1,-8               BACK UP TO LAST CCW                          
         MVI   4(R1),0             RESET CC/DC                                  
*                                                                               
ISLINI4  L     R1,ADRPDCCW         BUILD PD SK/SCTR/SEARCH/TIC CCWS             
         BAS   R9,ISLSSST                                                       
         ST    R1,FSTPDCCW         SAVE ADDR OF FIRST PD CCW                    
         L     R3,ADRCOUNT                                                      
         L     R4,ADRPDBUF                                                      
         LH    R5,ISHIPD           GET RECORDS/TRK                              
ISLINI4A ST    R3,0(R1)                                                         
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         ST    R4,8(R1)                                                         
         MVI   8(R1),X'05'         SET OPCD=WRITE DATA                          
         MVI   12(R1),X'40'                                                     
         MVC   14(2,R1),ISPDLN                                                  
         LA    R1,16(R1)                                                        
         LA    R3,8(R3)                                                         
         AH    R4,ISPDLN                                                        
         BCT   R5,ISLINI4A                                                      
         AHI   R1,-8               BACK UP TO LAST CCW                          
         MVI   4(R1),0             RESET CC/DC                                  
*                                                                               
ISLINI5  L     R1,FSTPDCCW         POINT TO FIRST PD DATA CCW                   
         LA    R1,8(R1)                                                         
         ST    R1,PDCCWPTR                                                      
         B     ISLMV               INITIALISE COMPLETE - BACK TO START          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINES TO SET EXTENT MATRIX AND CLEAR BUFFER AREAS             *         
***********************************************************************         
ISLSETHI SR    RE,RE               INITIALISE COUNTER                           
         LH    R7,2(R1)            GET LOW CYL                                  
         MH    R7,ISTRKS           X TRKS/CYL                                   
         AH    R7,4(R1)            ADD LOW TRK                                  
         OC    4(2,R1),4(R1)                                                    
         BNE   ISLXTNT             XTNT MUST START ON TRK 0                     
*                                                                               
         LH    R8,6(R1)            GET HI CYL                                   
         MH    R8,ISTRKS           X TRKS/CYL                                   
         AH    R8,8(R1)            ADD HI TRK                                   
*                                                                               
         LH    R0,ISTRKS           GET TRKS/CYL                                 
         BCTR  R0,0                SET HI TRK ON CYL                            
         CH    R0,8(R1)            XTNT MUST END ON HI TRK                      
         BNE   ISLXTNT                                                          
*                                                                               
         SR    R8,R7                                                            
         LA    RE,1(R8,RE)         BUMP COUNTER                                 
         STH   RE,12(R1)                                                        
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BNE   ISLSETH1                                                         
         MVC   12(2,R1),=X'FFFF'   SET MAXIMUM RELATIVE HITRK VALUE             
         B     ISLSETH2                                                         
*                                                                               
ISLSETH1 CLM   RE,15,=X'0000FFFF'  TEST IF > 64K                                
         BNH   ISLSETH2                                                         
         ABEND 100,DUMP            CANT HAVE MORE THAN 64K TRACKS               
*                                                                               
ISLSETH2 LA    R1,14(R1)                                                        
         CLI   0(R1),X'FF'                                                      
         BNE   ISLSETHI+2                                                       
*                                                                               
         BR    R9                                                               
*                                                                               
ISLCLRCO LM    RE,RF,ADRCOUNT      CLEAR COUNT FIELD                            
         B     ISLCLR                                                           
*                                                                               
ISLCLRCI LM    RE,RF,ADRCICCW      CLEAR CYLINDER INDEX                         
         B     ISLCLR                                                           
*                                                                               
ISLCLRTI LM    RE,RF,ADRTICCW      CLEAR TRACK INDEX                            
         B     ISLCLR                                                           
*                                                                               
ISLCLRPD LM    RE,RF,ADRPDCCW      CLEAR PRIME DATA                             
         B     ISLCLR                                                           
*                                                                               
ISLCLRCB LM    RE,RF,ADRCIBUF      CLEAR CI BUFFER                              
         ST    RE,CIBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISCILN                                                        
         ST    R0,CIBUFPTX                                                      
         B     ISLCLR                                                           
*                                                                               
ISLCLRTB LM    RE,RF,ADRTIBUF      CLEAR TI BUFFER                              
         ST    RE,TIBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISTILN                                                        
         ST    R0,TIBUFPTX                                                      
         B     ISLCLR                                                           
*                                                                               
ISLCLRPB LM    RE,RF,ADRPDBUF      CLEAR PD BUFFER                              
         LA    R0,6(RE)            LEAVE ROOM FOR SPARE/LINK                    
         AH    R0,ISSPARE                                                       
         ST    R0,PDBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISPDLN                                                        
         SH    R0,ISKEYLN          LEAVE FOOM FOR HI KEY AT END                 
         BCTR  R0,0                                                             
         ST    R0,PDBUFPTX                                                      
         MVC   0(2,RE),ISSPARE     SET SPARE                                    
         LA    RE,2(RE)            DON'T CLEAR IT                               
         L     R1,FSTPDCCW                                                      
         LA    R1,8(R1)            POINT TO FIRST DATA CCW                      
         ST    R1,PDCCWPTR                                                      
         MVI   KEYCOMP,0           SUPPRESS KEY COMPARE                         
         B     ISLCLR                                                           
*                                                                               
ISLCLR   SR    RF,RE               CLEAR FROM RE TO RF-8                        
         AHI   RF,-8                                                            
         XCEF                                                                   
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD CCW CHAIN                                                     *         
***********************************************************************         
ISLSST   LA    R0,SEEK             BUILD SEEK/SRCH/TIC AT R1                    
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'07'         SET OPCD=SEEK                                
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),6                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SRCH                                                          
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'31'         SET OPCD=SEARCH ID EQUAL                     
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),5                                                          
*                                                                               
         LR    R0,R1                                                            
         LA    R1,8(R1)                                                         
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'08'         SET OPCD=TIC TO SEARCH                       
         MVI   4(R1),X'40'                                                      
*                                                                               
         LA    R1,8(R1)                                                         
         BR    R9                  EXIT WITH R1 POINTING TO NEXT CCW            
*                                                                               
ISLSSST  LA    R0,SEEK             BUILD SEEK/SCTR/SRCH/TIC AT R1               
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'07'         SET OPCD=SEEK                                
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),6                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SECTOR                                                        
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'23'         SET OPCD=SETSCTR                             
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),1                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SRCH                                                          
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'31'         SET OPCD=SEARCH ID EQUAL                     
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),5                                                          
*                                                                               
         LR    R0,R1                                                            
         LA    R1,8(R1)                                                         
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'08'         SET OPCD=TIC TO SEARCH                       
         MVI   4(R1),X'40'                                                      
*                                                                               
         LA    R1,8(R1)                                                         
         BR    R9                  EXIT WITH R1 POINTING TO NEXT CCW            
*                                                                               
         TITLE 'ISLDDS - INDEX SEQUENTIAL LOAD - NEW PD EXTENTS'                
***********************************************************************         
* THIS SECTION OF THE CODE HANDLES NEW STYLE IS FILES AND IS A COPY OF*         
* THE REGULAR CODE ABOVE BUT CHANGED TO ALLOW FOR THE FACT THAT IN NEW*         
* STYLE I/D FILES THE OVERFLOW AREA IS AT THE END OF PRIME DATA.      *         
***********************************************************************         
ISNDDS   NTR1  BASE=*,LABEL=*                                                   
         CLI   FRSTTIME,0          INITIALISE ON FIRST CALL                     
         BNE   ISNINIT                                                          
         CLI   RECKEY,X'FF'        TEST IF EOF REC PASSED ON PREV CALL          
         JE    *+2                                                              
*                                                                               
ISNMV    L     R4,P2               GET REC ADDRESS                              
         LH    R5,ISKEYLN1         KEYLEN-1                                     
         CLI   0(R4),X'FF'         TEST FOR EOF REC                             
         BNE   *+14                                                             
         BCTR  R5,0                                                             
         EX    R5,ISNMVCFF         SET KEY TO X'FF'                             
         LH    R5,ISKEYLN1         RESTORE                                      
*                                                                               
         EX    R5,ISNCLC                                                        
         BE    ISNDUP              DUPLICATE KEY ERROR                          
         BH    ISNSEQ              SEQUENCE ERROR                               
*                                                                               
         CLI   KEYCOMP,0           TEST COMPARE KEYS THIS TIME                  
         BNE   ISNMV4              NON-ZERO MEANS YES                           
         SH    R5,ISKEYLN          SET R5 TO -1                                 
         B     ISNMV6                                                           
*                                                                               
ISNXTNTS DC    H'0',CL16'BAD DISK EXTENTS'                                      
ISNDUP   DC    H'0',CL16'DUPLICATE KEY'                                         
ISNSEQ   DC    H'0',CL16'SEQUENCE ERROR'                                        
ISNBADRL DC    H'0',CL16'BAD RECORD LEN'                                        
         EJECT                                                                  
***********************************************************************         
* DETERMINE COMPRESSED LENGTH OF KEY                                  *         
***********************************************************************         
ISNMV2   EX    R5,ISNCLC           CLC  0(0,R4),RECKEY                          
         BE    ISNMV6                                                           
ISNMV4   BCTR  R5,0                DECREMENT LEN FOR NEXT CLC                   
         LTR   R5,R5                                                            
         BNM   ISNMV2                                                           
*                                                                               
ISNMV6   LA    R5,1(R5)            SET NUMBER OF MATCHED BYTES                  
         TM    ISCMPRSW,X'80'                                                   
         BZ    *+16                                                             
         LH    R1,ISKEYLN                                                       
         AR    R1,R4                                                            
         MVC   ISRECLN,0(R1)       SET REC LEN FOR V/L RECORDS                  
*                                                                               
         OC    ISRECLN,ISRECLN     TEST FOR BAD RECORD LENGTH                   
         BZ    ISNBADRL                                                         
         CLC   ISRECLN,MAXRECL                                                  
         BH    ISNBADRL                                                         
*                                                                               
         LH    R1,ISRECLN                                                       
         SR    R1,R5                                                            
         LA    R1,1(R1)            ACTUAL LEN=RECLN-MATCHED BYTES+1             
ISNMV8   L     RE,PDBUFPTR         GET CURRENT POSITION                         
         LA    R0,0(R1,RE)         POINT TO NEXT REC POSITION                   
         C     R0,PDBUFPTX         WILL THIS REC FIT                            
         BH    ISNNXTPD            NO                                           
         ST    R0,PDBUFPTR         SET NEXT REC ADDRESS                         
*                                                                               
         TM    ISCMPRSW,X'01'      TEST KEY COMPRESSION DESIRED                 
         BZ    *+8                 NO                                           
         MVI   KEYCOMP,C'C'        ALLOW KEY COMPARE NEXT TIME                  
*                                                                               
         STC   R5,0(RE)            SET MATCHED BYTES IN BLOCK                   
         LA    RE,1(RE)            SET 'TO' ADDRESS                             
         LA    RF,0(R4,R5)         GET 'FROM' ADDRESS                           
         EJECT                                                                  
***********************************************************************         
* MOVE REC TO BUFFER                                                  *         
***********************************************************************         
ISNMV9   LA    R0,256                                                           
         CR    R1,R0                                                            
         BNH   *+20                                                             
         MVC   0(256,RE),0(RF)                                                  
         AR    RE,R0                                                            
         AR    RF,R0                                                            
         SR    R1,R0                                                            
         B     *-18                                                             
         BCTR  R1,0                                                             
         EX    R1,ISNMVC                                                        
*                                                                               
         LH    R5,ISKEYLN1         GET KEY LEN-1                                
         EX    R5,ISNSAVE                                                       
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BNE   ISNEXIT                                                          
         L     RE,PDBUFPTR         SET ADDRESS IN RE                            
         B     ISNNXTPD            GO WRITE RECORD                              
*                                                                               
ISNCLC   CLC   RECKEY(0),0(R4)                                                  
ISNSAVE  MVC   RECKEY(0),0(R4)                                                  
ISNMVC   MVC   0(0,RE),0(RF)                                                    
ISNMVCFF MVC   1(0,R4),0(R4)       PROPAGATE X'FF' IN KEY                       
         EJECT                                                                  
***********************************************************************         
* RECORD WILL NOT FIT -  SET EOB FLAG AND TRY NEXT BLOCK              *         
***********************************************************************         
ISNNXTPD MVI   0(RE),X'FF'         SET EOB FLAG                                 
         MVI   KEYCOMP,0           SUPPRESS KEY COMPRESSION NEXT TEST           
*                                                                               
         L     RE,PDCCWPTR         GET CURRENT CCW ADDRESS                      
         L     RE,0(RE)            GET CURRENT BLK ADDRESS                      
         LA    RE,0(RE)                                                         
         AH    RE,ISPDLN           ADD BLKLEN                                   
         SH    RE,ISKEYLN          BACK UP ONE KEYLEN                           
         LH    RF,ISKEYLN1                                                      
         EX    RF,ISNMVTI          PUT HI KEY AT END OF BLOCK                   
*                                                                               
         L     RE,TIBUFPTR         MOVE HI KEY IN BLK TO TI                     
         EX    RF,ISNMVTI                                                       
         LA    RE,1(RE,RF)         GET NEXT TI ADDRESS                          
         ST    RE,TIBUFPTR                                                      
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISNWRITE                                                         
*                                                                               
         L     RE,PDCCWPTR         GET A(CURRENT PD CCW)                        
         LA    RE,16(RE)                                                        
         CLI   0(RE),0             TEST FOR LAST                                
         BE    ISNWRITE            YES-GO WRITE                                 
         ST    RE,PDCCWPTR         SET PTR                                      
*                                                                               
         L     RE,0(RE)            GET BLK ADDRESS                              
         LA    RE,0(RE)            CLEAR HOB                                    
         LH    RF,ISSPARE                                                       
         STH   RF,0(RE)            SET SPARE                                    
         LA    R0,6(RE,RF)         SET FIRST DATA ADDRESS                       
         ST    R0,PDBUFPTR                                                      
         AH    RE,ISPDLN                                                        
         SH    RE,ISKEYLN          LEAVE ROOM FOR HI KEY                        
         BCTR  RE,0                                                             
         ST    RE,PDBUFPTX         SET LAST BYTE ADDR-1 FOR EOB FLAG            
         B     ISNMV               GO MOVE RECORD                               
*                                                                               
ISNMVTI  MVC   0(0,RE),RECKEY                                                   
         EJECT                                                                  
***********************************************************************         
* WRITE PRIME DATA BUFFER                                             *         
***********************************************************************         
ISNWRITE LA    R7,NPDTTBR          POINT TO REL TRK                             
         LA    R8,ISXTNT           POINT TO EXTENT MATRIX                       
         BAS   R9,ISNCCHH          TRANSLATE IN 'SEEK'                          
         B     ISNEOFER                                                         
*                                                                               
         BAS   R9,ISNCLRCO                                                      
         L     R7,ADRCOUNT         BUILD PD COUNT FIELDS                        
         LA    R8,1                                                             
         LH    R0,ISHIPD                                                        
ISNWRT2  MVC   0(4,R7),SRCH                                                     
         STC   R8,4(R7)                                                         
         MVC   6(2,R7),ISPDLN      SET BLK LEN                                  
         LA    R7,8(R7)                                                         
         LA    R8,1(R8)                                                         
         BCT   R0,ISNWRT2                                                       
*                                                                               
ISNWRT4  L     R7,PDCCWPTR         GET LAST GOOD DATA CCW                       
         MVI   4(R7),0             RESET CC/DC                                  
*                                                                               
         L     R1,ADRPDCCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         MVC   ISPDLAST,NPDTTBR    SAVE LAST PD ADDRESS IN DTF                  
*                                                                               
         SR    RE,RE               BUMP TO NEXT PD TRACK                        
         ICM   RE,3,NPDTTBR                                                     
         LA    RE,1(RE)                                                         
         STH   RE,NPDTTBR                                                       
         BAS   R9,ISNCLRPB         CLEAR PD BUFFER AND RESET POINTERS           
*                                                                               
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISNWRT6                                                          
         LH    RE,ISTRKS           GET TRKS/CYL                                 
         BCTR  RE,0                                                             
         CH    RE,SEEK+4           TEST FOR LAST TRK ON CYL                     
         BH    ISNMV               NO - GO MOVE RECORD                          
         EJECT                                                                  
***********************************************************************         
* AT END OF CYLINDER WRITE TRACK INDEX                                *         
***********************************************************************         
ISNWRT6  XC    SEEK+4(2),SEEK+4    SET TRACK TO ZERO                            
         XC    IOB+37(2),IOB+37    CLEAR SEEK ADDRESS IN IOB                    
*                                                                               
         BAS   R9,ISNCLRCO                                                      
         L     R7,ADRCOUNT         BUILD TI COUNT FIELDS                        
         LA    R8,1                                                             
         LH    R0,ISHITI                                                        
ISNWRT10 MVC   0(4,R7),SRCH                                                     
         STC   R8,4(R7)                                                         
         MVC   6(2,R7),ISTILN                                                   
         LA    R7,8(R7)                                                         
         LA    R8,1(R8)                                                         
         BCT   R0,ISNWRT10                                                      
*                                                                               
         L     R1,ADRTICCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         BAS   R9,ISNCLRTB         CLEAR TI BUFFER AND RESET POINTERS           
         EJECT                                                                  
***********************************************************************         
* MOVE LAST KEY TO CYLINDER INDEX                                     *         
***********************************************************************         
ISNWRT20 L     RE,CIBUFPTR                                                      
         LH    RF,ISKEYLN1                                                      
         LA    R0,3(RE,RF)         CI ENTRY LEN=KEYLN+2 (TT)                    
         C     R0,CIBUFPTX         WILL THIS ENTRY FIT                          
         BNH   *+12                YES                                          
         BAS   RE,ISNWRTCI         NO - WRITE RECORD                            
         B     ISNWRT20                                                         
         ST    R0,CIBUFPTR                                                      
*                                                                               
         L     R0,CICORE           BUMP CYL INDEX CORE                          
         AH    R0,ISIXLN                                                        
         ST    R0,CICORE                                                        
         EX    RF,ISNMVCI                                                       
         LA    RE,1(RE,RF)         POINT PAST KEY                               
         MVC   0(2,RE),NTITTBR                                                  
*                                                                               
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISNEND                                                           
         SR    RE,RE               BUMP TI REL TRK BY TRKS/CYL                  
         ICM   RE,3,NTITTBR                                                     
         AH    RE,ISTRKS                                                        
         STH   RE,NTITTBR                                                       
         LA    RE,1(RE)            AND SET PD TRK TO TI+1.                      
         STH   RE,NPDTTBR                                                       
         B     ISNMV               GO MOVE THIS RECORD                          
*                                                                               
ISNEND   BAS   RE,ISNWRTCI         GO WRITE RECORD                              
*                                                                               
         CLI   WRITESW,C'N'                                                     
         BE    ISNEND25                                                         
         LA    R7,NCITTBR          WRITE EOF REC                                
         LA    R8,ISXTNT                                                        
         BAS   R9,ISNCCHH                                                       
         B     ISNEOFER                                                         
*                                                                               
         BAS   R9,ISNCLRCO                                                      
         L     R7,ADRCOUNT                                                      
         MVC   0(4,R7),SRCH        SET CCHH WITH LEN=0                          
         IC    R8,NCITTBR+2        GET REC NUM                                  
         LA    R8,1(R8)            ADD 1                                        
         STC   R8,4(R7)            SET REC NUM IN COUNT FIELD                   
*                                                                               
         L     R7,FSTCICCW         POINT TO COUNT FIELD CCW                     
         MVI   4(R7),0             RESET CC/DC                                  
         L     R1,ADRCICCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
         EJECT                                                                  
***********************************************************************         
* NOW ERASE THE REST OF CYLINDER INDEX (FIRST CYLINDER)               *         
***********************************************************************         
         L     R7,FSTCICCW                                                      
         MVI   0(R7),X'11'         SET OPCD=ERASE                               
*                                                                               
ISNEND2  SR    R6,R6               BUMP TO NEXT CI TRACK                        
         ICM   R6,3,NCITTBR                                                     
         LA    R6,1(R6)                                                         
         CH    R6,ISTRKS           TEST REACHED END OF CYLINDER                 
         BNL   ISNEND10                                                         
         SLL   R6,16                                                            
         ST    R6,NCITTBR                                                       
*                                                                               
         LA    R7,NCITTBR                                                       
         LA    R8,ISXTNT                                                        
         BAS   R9,ISNCCHH                                                       
         DC    AL4(0)              ERROR RETURN                                 
*                                                                               
         L     R7,ADRCOUNT         NORMAL RETURN GET COUNT FIELD ADDR           
         XC    0(8,R7),0(R7)                                                    
         MVC   0(4,R7),SRCH                                                     
         MVI   4(R7),1                                                          
*                                                                               
         L     R1,ADRCICCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
         B     ISNEND2                                                          
         EJECT                                                                  
***********************************************************************         
* NOW ERASE OVERFLOW                                                  *         
***********************************************************************         
ISNEND10 XC    DUB,DUB                                                          
         MVC   DUB(2),ISPDLAST     MOVE LAST PRIME DATA TRACK NUMBER            
*                                                                               
ISNEND12 SR    R6,R6                                                            
         ICM   R6,3,DUB            BUMP TO NEXT TRACK                           
         LA    R6,1(R6)                                                         
         SLL   R6,16                                                            
         ST    R6,DUB              SAVE TTBR                                    
*                                                                               
         LA    R7,DUB                                                           
         LA    R8,ISXTNT                                                        
         BAS   R9,ISNCCHH                                                       
         B     ISNEND20            ERROR RETURN (EOF WOULD BE GOOD)             
*                                                                               
         L     R7,ADRCOUNT         NORMAL RETURN GET COUNT FIELD ADDR           
         XC    0(8,R7),0(R7)                                                    
         MVC   0(4,R7),SRCH                                                     
         MVI   4(R7),1                                                          
*                                                                               
         L     R1,ADRCICCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
         B     ISNEND12                                                         
*                                                                               
ISNEND20 TM    P3+1,X'04'          TEST END-OF-FILE                             
         JZ    *+2                                                              
ISNEND25 XC    P3(2),P3                                                         
*                                                                               
ISNEND30 LM    RE,RF,CICORE        RE=CICORE AND RF=MICORE                      
         TM    ISINDXTY,X'02'                                                   
         BZ    ISNEND32            TEST IF INDEX SIZE IN DOUBLE WORDS           
         LA    RE,7(RE)                                                         
         SRL   RE,3                ADJUST CICORE TO DUBS                        
         LA    RF,7(RF)                                                         
         SRL   RF,3                ADJUST MICORE TO DUBS                        
ISNEND32 TM    ISINDXTY,X'01'                                                   
         BZ    ISNEND34                                                         
         XR    RE,RF                                                            
         XR    RF,RE                                                            
         XR    RE,RF               RE=MICORE AND RF=CICORE                      
ISNEND34 STCM  RE,3,ISINDXLN       PASS BACK CYL/MST OR MST/CYL SIZES           
         STCM  RF,3,ISCILN+2                                                    
         ST    RE,ISPDDA                                                        
         ST    RF,ISOVDA                                                        
*                                                                               
         B     ISNEXIT             DONE                                         
         EJECT                                                                  
***********************************************************************         
* WRITE CYLINDER INDEX RECORD                                         *         
***********************************************************************         
ISNWRTCI NTR1                                                                   
         LA    R7,NCITTBR          POINT TO REL TRK/REC                         
         LA    R8,ISXTNT           POINT TO EXTENT MATRIX                       
         BAS   R9,ISNCCHH          TRANSLATE IN 'SEEK'                          
         B     ISNEOFER                                                         
*                                                                               
         MVC   ISCILAST,NCITTBR    SAVE LAST CI ADDRESS                         
         L     R0,MICORE           BUMP MST NDX CORE                            
         AH    R0,ISIXLN                                                        
         AHI   R0,2                                                             
         ST    R0,MICORE                                                        
*                                                                               
         BAS   R9,ISNCLRCO                                                      
         L     R7,ADRCOUNT                                                      
         MVC   0(4,R7),SRCH        MOVE CCHH                                    
         SR    R8,R8                                                            
         IC    R8,NCITTBR+2                                                     
         LA    R8,1(R8)                                                         
         STC   R8,NCITTBR+2                                                     
         STC   R8,4(R7)            SET REC                                      
         MVC   6(2,R7),ISCILN      MOVE LENGTH                                  
*                                                                               
         L     R1,ADRCICCW                                                      
         BAS   R9,ISNEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         CH    R8,ISHICI           SEE IF LAST REC ON TRK                       
         BL    ISNWCIX                                                          
         SR    RE,RE               BUMP TO NEXT CI TRACK                        
         ICM   RE,3,NCITTBR                                                     
         LA    RE,1(RE)                                                         
         CH    RE,ISTRKS           TEST USED ENTIRE CYLINDER                    
         BH    ISNCIER             YUP - BIG TROUBLE                            
         SLL   RE,16                                                            
         ST    RE,NCITTBR                                                       
ISNWCIX  BAS   R9,ISNCLRCB                                                      
         XIT1                                                                   
*                                                                               
ISNMVCI  MVC   0(0,RE),RECKEY                                                   
*                                                                               
ISNEXIT  XIT1                                                                   
*                                                                               
ISNEOFER ABEND 101,DUMP                                                         
*                                                                               
ISNCIER  ABEND 103,DUMP                                                         
         EJECT                                                                  
***********************************************************************         
* TRANSLATE A RELATIVE TRACK ADDRESS TO AN ACTUAL DISK ADDRESS        *         
* R7 HAS A(RELTRK) AND R8 HAS A(MATRIX ENTRY)                         *         
* CCB/IOB ARE SET FOR THE CORRECT DEVICE ADDRESS                      *         
***********************************************************************         
ISNCCHH  SR    RE,RE               TEST DISK ADDRESS OK                         
         ICM   RE,3,0(R7)                                                       
         JZ    *+2                                                              
*                                                                               
ISNCCHH2 CLC   0(2,R7),12(R8)      SEARCH EXTENT MATRIX                         
         BNH   ISNCCHH4                                                         
         SR    RE,RE                                                            
         ICM   RE,3,0(R7)                                                       
         SR    R0,R0                                                            
         ICM   R0,3,12(R8)                                                      
         SR    RE,R0                                                            
         LA    R8,14(R8)                                                        
         CLI   0(R8),X'FF'                                                      
         BNE   ISNCCHH2                                                         
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BE    4(R9)                                                            
         MVI   P3+1,X'04'                                                       
         BR    R9                  ERROR RETURN ON EOF                          
*                                                                               
ISNCCHH4 XC    SEEK,SEEK           RE=REL TRK FOR THIS EXTENT                   
         AH    RE,4(R8)            ADD LOW TRACK                                
         BCTR  RE,0                                                             
         SRDA  RE,32                                                            
         LH    R0,ISTRKS                                                        
         DR    RE,R0               RF HAS CYL, RE HAS TRK                       
         AH    RF,2(R8)            ADD LOW CYL                                  
         STH   RF,SEEK+2           SET CYL                                      
         STH   RE,SEEK+4           SET TRK                                      
         MVC   SEEK+6(1),2(R7)     SET REC                                      
         XC    ISFSEEK,ISFSEEK     SET SEEK ADDR IN DTF (MBBCCHHR)              
         MVC   ISFSEEK(1),1(R8)                                                 
         MVC   ISFSEEK+3(5),SEEK+2                                              
         MVC   ISFUC,0(R8)         SET SEQNUM/DEVTYP IN DTF                     
         MVC   IOB+32(8),ISFSEEK   SET SEEK ADDR IN IOB (MBBCCHHR)              
         B     4(R9)               NORMAL RETURN                                
         EJECT                                                                  
***********************************************************************         
* EXECUTE CHANNEL PROGRAM                                             *         
***********************************************************************         
ISNEXCP  XC    IOB(32),IOB         INITIALISE IOB                               
         MVI   IOB,X'C3'           SET DC/CC/NOTRELATED/NOAPPENDG               
         LA    R1,8(R1)            REMOVE LONG SEEK                             
         ST    R1,IOB+16           R1 POINTS TO CCW STRING                      
         LA    R1,ECB                                                           
         ST    R1,IOB+4                                                         
         L     R1,ISFADCB          SET DCB ADDR                                 
         STCM  R1,7,IOB+21                                                      
*                                                                               
ISNX1    LA    R1,IOB              EXECUTE CHANNEL PROGRAM                      
         CLI   WRITESW,C'N'        TEST WRITE=NO                                
         BE    4(R9)               YES - RETURN NORMAL COMPLETION               
         XC    ECB,ECB                                                          
         EXCP  IOB                                                              
         WAIT  ECB=ECB                                                          
*                                                                               
ISNX2    CLI   IOB+4,X'7F'         EXIT IF NORMAL COMPLETION                    
         BE    4(R9)                                                            
         CLI   IOB+4,X'41'         TEST PERMANENT ERROR                         
         BE    ISNX3                                                            
         CLI   IOB+4,X'42'         TEST OUTSIDE EXTENTS                         
         BNE   *+10                                                             
         MVI   P3+1,X'01'          REFERENCE OUTSIDE EXTENTS                    
         BR    R9                                                               
         DC    H'0'                DIE IF HORRIBLE COMPLETION CODE              
*                                                                               
ISNX3    TM    IOB+12,X'02'        TEST CSW UNIT STATUS FOR UNIT CHECK          
         BO    ISNX4                                                            
         TM    IOB+12,X'01'        TEST CSW UNIT STATUS FOR UNIT EXCPN          
         BZ    *+10                                                             
         MVI   P3+1,X'04'          SET EOF                                      
         BR    R9                                                               
         TM    IOB+12,X'FF'        TEST CSW UNIT STATUS                         
         JNZ   *+2                                                              
         TM    IOB+13,X'FF'        TEST CSW CHNL STATUS                         
         BZ    ISNX4                                                            
ISNXER80 MVI   P1,X'80'            SET UNRECOVERABLE ERROR                      
         BR    R9                  ERROR RETURN                                 
*                                                                               
ISNX4    TM    IOB+2,X'04'         TEST SENSE BYTE 0 ON UNIT CHECK              
         BNZ   ISNXER80            TRACK OVERRUN                                
         CLI   IOB+2,0                                                          
         BNE   ISNXER80            UNRECOVERABLE ERROR                          
         TM    IOB+3,X'04'         TEST SENSE BYTE 1 ON UNIT CHECK              
         BZ    *+10                                                             
         MVI   P3+1,X'08'          SET NO RECORD FOUND                          
         BR    R9                                                               
         B     ISNXER80            UNRECOVERABLE ERROR                          
         EJECT                                                                  
***********************************************************************         
* INITIALISE ON FIRST CALL                                            *         
***********************************************************************         
ISNINIT  MVI   WRITESW,C'Y'        SET WRITE OPTION                             
         ICM   RF,15,=V(LDWRITE)                                                
         BZ    *+10                                                             
         MVC   WRITESW,0(RF)                                                    
         MVI   FRSTTIME,0          RESET FIRST TIME SWITCH                      
         XC    ISINDXLN,ISINDXLN   CLEAR CI CORE ACCUMULATOR                    
         SR    RE,RE                                                            
         ICM   RE,3,ISPDLN         GET PD BUFFER LENGTH                         
         SH    RE,ISSPARE                                                       
         AHI   RE,-8                                                            
         STH   RE,MAXRECL          SAVE MAXIMUM RECORD LENGTH                   
*                                                                               
         SR    RE,RE                                                            
         ICM   RE,1,ISFDEVT        ISOPEN HAS SET LOGICAL DEVICE                
         JZ    *+2                 INVALID DEVICE                               
         BCTR  RE,0                                                             
         SLL   RE,4                                                             
         LA    RE,DEV3340(RE)                                                   
         MVC   DEVDATA,0(RE)       SAVE DISK DEVICE DATA                        
*                                                                               
ISNDTF   MVC   ISTRKS,DEVTRKS      SET TRKS/CYL                                 
         SR    R0,R0                                                            
         ICM   R0,3,ISPDLN                                                      
         BAS   R9,ISNDTFR          GET PD RECS/TRK                              
         STH   R0,ISHIPD                                                        
         MH    R0,ISKEYLN          COMPUTE LEN OF TI REC                        
         LH    R1,ISTRKS                                                        
         BCTR  R1,0                                                             
         MR    R0,R0                                                            
         STH   R1,ISTILN           ISTILN=ISHIPD*ISKEYLN*(ISTRKS-1)             
         SRL   R1,1                                                             
         CH    R1,ISPDLN                                                        
         JNL   *+2                 BLKSIZE MUST BE GT HALF TISIZE               
         LH    R0,ISIXLN           COMPUTE LEN OF CI REC                        
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,ISTILN                                                      
         DR    RE,R0                                                            
         MR    RE,R0                                                            
         STH   RF,ISCILN           ISCILN=(ISTILN/ISIXLN)*ISIXLN                
         SR    R0,R0                                                            
         ICM   R0,3,ISTILN                                                      
         BAS   R9,ISNDTFR          GET TI RECS/TRK                              
         STH   R0,ISHITI                                                        
         SR    R0,R0                                                            
         ICM   R0,3,ISCILN                                                      
         BAS   R9,ISNDTFR          GET CI RECS/TRK                              
         STH   R0,ISHICI                                                        
*                                                                               
         LH    RE,ISTRKS           GET TRKS/CYL                                 
         LA    RE,1(RE)            SET CYL 2/ TRK 0                             
         LA    RF,1(RE)            SET CYL 2/ TRK 1                             
         SLL   RE,16                                                            
         ST    RE,NTITTBR                                                       
         SLL   RF,16                                                            
         ST    RF,NPDTTBR                                                       
         B     ISNDTFX                                                          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE COMPUTES RECS/TRK FOR RECLEN IN R0                       *         
***********************************************************************         
ISNDTFR  LTR   R0,R0                                                            
         JZ    *+2                                                              
         C     R0,=F'32767'                                                     
         JH    *+2                 DIE IF RECLEN GT 32K                         
         CLI   DEVSUB,5            TEST FOR 3390                                
         BE    ISN3390                                                          
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,DEVCAPL                                                     
         OC    DEVMOD,DEVMOD                                                    
         BZ    *+16                                                             
         AH    R0,DEVMOD           ADJUST FOR MODULO                            
         SRL   R0,5                                                             
         SLL   R0,5                                                             
         AH    R0,DEVIRG           ADJUST FOR IRG                               
         DR    RE,R0                                                            
         LTR   R0,RF               RETURN RECS/TRK IN R0                        
         BNZR  R9                                                               
         DC    H'0'                DIE IF RECLEN GT TRACK LEN                   
                                                                                
***********************************************************************         
* 3390 COMPUTATION ROUTINES                                           *         
* DN=(DL+6+231)/232                                                   *         
* D=9+(DL+6*DN)+6+33)/34                                              *         
* SPACE=10+D                                                          *         
***********************************************************************         
ISN3390  LR    RE,R0               GET RECLEN                                   
         LA    RE,237(RE)          RE=DL+6+231                                  
         SRDL  RE,32                                                            
         D     RE,=F'232'          RF=(DL+237)/232                              
         MHI   RF,6                                                             
         AR    RF,R0               RF=DL+6*DN                                   
         LA    RF,39(RF)                                                        
         SR    RE,RE                                                            
         D     RE,=F'34'                                                        
         LA    RF,19(RF)           GIVES SPACE REQUIRED IN RF                   
         SR    R0,R0                                                            
         LA    R1,1729             1729=NUMBER OF CELLS/TRACK                   
         DR    R0,RF               DIVIDE BY SPACE/RECORD                       
         LR    R0,R1               GIVES MAX RECS/TRACK (TRUNCATED)             
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* SET HIGH REL TRK IN EXTENT MATRIX                                   *         
***********************************************************************         
ISNDTFX  XC    RECKEY,RECKEY                                                    
         LA    R1,ISXTNT                                                        
         BAS   R9,ISNSETHI                                                      
*                                                                               
ISNINI1  BAS   R9,ISNCLRCO        CLEAR COUNTS/CCWS/BUFFERS                     
         BAS   R9,ISNCLRCI                                                      
         BAS   R9,ISNCLRTI                                                      
         BAS   R9,ISNCLRPD                                                      
         BAS   R9,ISNCLRCB                                                      
         BAS   R9,ISNCLRTB                                                      
         BAS   R9,ISNCLRPB                                                      
*                                                                               
ISNINI2  L     R1,ADRCICCW         BUILD CI SK/SRCH/TIC CCWS                    
         BAS   R9,ISNSST                                                        
         ST    R1,FSTCICCW         SAVE ADR OF FIRST CI CCW                     
         MVC   0(4,R1),ADRCOUNT                                                 
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         LA    R1,8(R1)                                                         
         MVC   0(4,R1),ADRCIBUF                                                 
         MVI   0(R1),X'05'         SET OPCD=WRITE DATA                          
         MVC   6(2,R1),ISCILN                                                   
*                                                                               
ISNINI3  L     R1,ADRTICCW         BUILD TI SK/SCTR/SRCH/TIC CCWS               
         BAS   R9,ISNSSST                                                       
         ST    R1,FSTTICCW         SAVE ADDR OF FIRST TI CCW                    
         L     R3,ADRCOUNT                                                      
         LH    RE,ISHITI           GET RECORDS/TRK                              
*                                                                               
ISNINI3A ST    R3,0(R1)                                                         
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         MVC   8(4,R1),ADRTIBUF                                                 
         MVI   8(R1),X'05'         SET OPCD=WRITE DATA                          
         MVI   12(R1),X'40'                                                     
         MVC   14(2,R1),ISTILN                                                  
         LA    R3,8(R3)            NEXT COUNT ADDRESS                           
         LA    R1,16(R1)           NEXT CCW                                     
         BCT   RE,ISNINI3A                                                      
         AHI   R1,-8               BACK UP TO LAST CCW                          
         MVI   4(R1),0             RESET CC/DC                                  
*                                                                               
ISNINI4  L     R1,ADRPDCCW         BUILD PD SK/SCTR/SEARCH/TIC CCWS             
         BAS   R9,ISNSSST                                                       
         ST    R1,FSTPDCCW         SAVE ADDR OF FIRST PD CCW                    
         L     R3,ADRCOUNT                                                      
         L     R4,ADRPDBUF                                                      
         LH    R5,ISHIPD           GET RECORDS/TRK                              
ISNINI4A ST    R3,0(R1)                                                         
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         ST    R4,8(R1)                                                         
         MVI   8(R1),X'05'         SET OPCD=WRITE DATA                          
         MVI   12(R1),X'40'                                                     
         MVC   14(2,R1),ISPDLN                                                  
         LA    R1,16(R1)                                                        
         LA    R3,8(R3)                                                         
         AH    R4,ISPDLN                                                        
         BCT   R5,ISNINI4A                                                      
         AHI   R1,-8               BACK UP TO LAST CCW                          
         MVI   4(R1),0             RESET CC/DC                                  
*                                                                               
ISNINI5  L     R1,FSTPDCCW         POINT TO FIRST PD DATA CCW                   
         LA    R1,8(R1)                                                         
         ST    R1,PDCCWPTR                                                      
         B     ISNMV               INITIALISE COMPLETE - BACK TO START          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINES TO SET EXTENT MATRIX AND CLEAR BUFFER AREAS             *         
***********************************************************************         
ISNSETHI SR    RE,RE                                                            
         LH    R7,2(R1)            GET LOW CYL                                  
         MH    R7,ISTRKS           X TRKS/CYL                                   
         AH    R7,4(R1)            ADD LOW TRK                                  
         OC    4(2,R1),4(R1)                                                    
         BNE   ISNXTNTS            XTNT MUST START ON TRK 0                     
*                                                                               
         LH    R8,6(R1)            GET HI CYL                                   
         MH    R8,ISTRKS           X TRKS/CYL                                   
         AH    R8,8(R1)            ADD HI TRK                                   
*                                                                               
         LH    R0,ISTRKS           GET TRKS/CYL                                 
         BCTR  R0,0                SET HI TRK ON CYL                            
         CH    R0,8(R1)            XTNT MUST END ON HI TRK                      
         BNE   ISNXTNTS                                                         
*                                                                               
         SR    R8,R7                                                            
         LA    RE,1(R8,RE)                                                      
         STH   RE,12(R1)                                                        
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BNE   *+10                                                             
         MVC   12(2,R1),=X'FFFF'   SET MAXIMUM RELATIVE HITRK VALUE             
         LA    R1,14(R1)                                                        
         CLI   0(R1),X'FF'                                                      
         BNE   ISNSETHI+2                                                       
         BR    R9                                                               
*                                                                               
ISNCLRCO LM    RE,RF,ADRCOUNT      CLEAR COUNT FIELD                            
         B     ISNCLR                                                           
*                                                                               
ISNCLRCI LM    RE,RF,ADRCICCW      CLEAR CYLINDER INDEX CCWS                    
         B     ISNCLR                                                           
*                                                                               
ISNCLRTI LM    RE,RF,ADRTICCW      CLEAR TRACK INDEX CCWS                       
         B     ISNCLR                                                           
*                                                                               
ISNCLRPD LM    RE,RF,ADRPDCCW      CLEAR PRIME DATA CCWS                        
         B     ISNCLR                                                           
*                                                                               
ISNCLRCB LM    RE,RF,ADRCIBUF      CLEAR CI BUFFER                              
         ST    RE,CIBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISCILN                                                        
         ST    R0,CIBUFPTX                                                      
         B     ISNCLR                                                           
*                                                                               
ISNCLRTB LM    RE,RF,ADRTIBUF      CLEAR TI FUBBER                              
         ST    RE,TIBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISTILN                                                        
         ST    R0,TIBUFPTX                                                      
         B     ISNCLR                                                           
*                                                                               
ISNCLRPB LM    RE,RF,ADRPDBUF      CLEAR PD BUFFER                              
         LA    R0,6(RE)            LEAVE ROOM FOR SPARE/LINK                    
         AH    R0,ISSPARE                                                       
         ST    R0,PDBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISPDLN                                                        
         SH    R0,ISKEYLN          LEAVE FOOM FOR HI KEY AT END                 
         BCTR  R0,0                                                             
         ST    R0,PDBUFPTX                                                      
         MVC   0(2,RE),ISSPARE     SET SPARE                                    
         LA    RE,2(RE)            DON'T CLEAR IT                               
         L     R1,FSTPDCCW                                                      
         LA    R1,8(R1)            POINT TO FIRST DATA CCW                      
         ST    R1,PDCCWPTR                                                      
         MVI   KEYCOMP,0           SUPPRESS KEY COMPARE                         
         B     ISNCLR                                                           
*                                                                               
ISNCLR   SR    RF,RE               CLEAR FROM RE TO RF-8                        
         AHI   RF,-8                                                            
         XCEF                                                                   
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD CCW CHAIN                                                     *         
***********************************************************************         
ISNSST   LA    R0,SEEK             BUILD SEEK/SRCH/TIC AT R1                    
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'07'         SET OPCD=SEEK                                
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),6                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SRCH                                                          
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'31'         SET OPCD=SEARCH ID EQUAL                     
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),5                                                          
*                                                                               
         LR    R0,R1                                                            
         LA    R1,8(R1)                                                         
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'08'         SET OPCD=TIC TO SEARCH                       
         MVI   4(R1),X'40'                                                      
*                                                                               
         LA    R1,8(R1)                                                         
         BR    R9                  EXIT WITH R1 POINTING TO NEXT CCW            
*                                                                               
ISNSSST  LA    R0,SEEK             BUILD SEEK/SCTR/SRCH/TIC AT R1               
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'07'         SET OPCD=SEEK                                
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),6                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SECTOR                                                        
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'23'         SET OPCD=SETSCTR                             
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),1                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SRCH                                                          
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'31'         SET OPCD=SEARCH ID EQUAL                     
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),5                                                          
*                                                                               
         LR    R0,R1                                                            
         LA    R1,8(R1)                                                         
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'08'         SET OPCD=TIC TO SEARCH                       
         MVI   4(R1),X'40'                                                      
*                                                                               
         LA    R1,8(R1)                                                         
         BR    R9                  EXIT WITH R1 POINTING TO NEXT CCW            
         EJECT                                                                  
         TITLE 'ISLDDS - 20 BIT PLUS NEW PDIXOV FORMAT'                         
***********************************************************************         
* NEWEST FLAVOUR OF ISDDS. 20-BIT ADDRESSING PLUS NEW PDIXOV FORMAT.  *         
* PRIME DATA IS FIRST, FOLLOWED BY THE INDEX, FOLLOWED BY OVERFLOW.   *         
* THE FIRST RECORD IN PRIME DATA DEFINES WHERE THE INDEX STARTS AND   *         
* HOW BIG IT IS PLUS OVERFLOW START ADDRESS AT THE END OF THE INDEX   *         
* AREA. PRIME DATA BLOCKS START ON TRACK#2.                           *         
*                                                                     *         
* THE INDEX STARTS AFTER THE LAST PRIME DATA BLOCK AND CONTAINS THE   *         
* HIGH KEY IN EACH PRIME DATA BLOCK. INDEX RECORD FORMAT IS:-         *         
*                                                                     *         
* XLJ    LAST KEY OF PRIME DATA BLOCK WITH SEQUENCE NUMBER N          *         
* XL4    SEQUENCE NUMBER N OF INDEX ENTRY                             *         
* XLJ    LAST KEY OF PRIME DATA BLOCK WITH SEQUENCE NUMBER N+1        *         
* XL4    SEQUENCE NUMBER N+1 OF INDEX ENTRY                           *         
* ...    ..................................                           *         
* XL1    END OF INDEX ENTRIES (X'FF')                                 *         
* XLM    SPARE BYTES AT END OF BLOCK                                  *         
* XLJ    LAST KEY IN INDEX BLOCK                                      *         
***********************************************************************         
         ORG   ISLDDS+X'2000'                                                   
ISVDDS   NTR1  BASE=*,LABEL=*                                                   
         XC    CICORE,CICORE                                                    
         XC    MICORE,MICORE                                                    
         CLI   FRSTTIME,0          INITIALISE ON FIRST CALL                     
         BNE   ISVINIT                                                          
         CLI   RECKEY,X'FF'        TEST IF EOF REC PASSED ON PREV CALL          
         JE    *+2                                                              
*                                                                               
ISVMV    L     R4,P2               GET REC ADDRESS                              
         LH    R5,ISKEYLN1         KEYLEN-1                                     
         CLI   0(R4),X'FF'         TEST FOR EOF REC                             
         BNE   *+14                                                             
         BCTR  R5,0                                                             
         EX    R5,ISVMVCFF         SET KEY TO X'FF'                             
         LH    R5,ISKEYLN1         RESTORE                                      
*                                                                               
         EX    R5,ISVCLC                                                        
         BE    ISVDUP              DUPLICATE KEY ERROR                          
         BH    ISVSEQ              SEQUENCE ERROR                               
*                                                                               
         CLI   KEYCOMP,0           TEST COMPARE KEYS THIS TIME                  
         BNE   ISVMV4              NON-ZERO MEANS YES                           
         SH    R5,ISKEYLN          SET R5 TO -1                                 
         B     ISVMV6                                                           
*                                                                               
ISVEXIT  XIT1                                                                   
*                                                                               
ISVEOFER ABEND 101,DUMP                                                         
*                                                                               
ISVXTNT  DC    H'0',CL16'BAD DISK EXTENTS'                                      
ISVDUP   DC    H'0',CL16'DUPLICATE KEY'                                         
ISVSEQ   DC    H'0',CL16'SEQUENCE ERROR'                                        
ISVBADRL DC    H'0',CL16'BAD RECORD LEN'                                        
         EJECT                                                                  
***********************************************************************         
* DETERMINE COMPRESSED LENGTH OF KEY                                  *         
***********************************************************************         
ISVMV2   EX    R5,ISVCLC           CLC  0(0,R4),RECKEY                          
         BE    ISVMV6                                                           
ISVMV4   BCTR  R5,0                DECREMENT LEN FOR NEXT CLC                   
         LTR   R5,R5                                                            
         BNM   ISVMV2                                                           
*                                                                               
ISVMV6   LA    R5,1(R5)            SET NUMBER OF MATCHED BYTES                  
         TM    ISCMPRSW,X'80'                                                   
         BZ    *+16                                                             
         LH    R1,ISKEYLN                                                       
         AR    R1,R4                                                            
         MVC   ISRECLN,0(R1)       SET REC LEN FOR V/L RECORDS                  
*                                                                               
         OC    ISRECLN,ISRECLN     TEST FOR BAD RECORD LENGTH                   
         BZ    ISVBADRL                                                         
         CLC   ISRECLN,MAXRECL                                                  
         BH    ISVBADRL                                                         
*                                                                               
         LH    R1,ISRECLN                                                       
         SR    R1,R5                                                            
         LA    R1,1(R1)            ACTUAL LEN=RECLN-MATCHED BYTES+1             
ISVMV8   L     RE,PDBUFPTR         GET CURRENT POSITION                         
         LA    R0,0(R1,RE)         POINT TO NEXT REC POSITION                   
         C     R0,PDBUFPTX         WILL THIS REC FIT                            
         BH    ISVNXTPD            NO                                           
         ST    R0,PDBUFPTR         SET NEXT REC ADDRESS                         
*                                                                               
         TM    ISCMPRSW,X'01'      TEST KEY COMPRESSION DESIRED                 
         BZ    *+8                 NO                                           
         MVI   KEYCOMP,C'C'        ALLOW KEY COMPARE NEXT TIME                  
*                                                                               
         STC   R5,0(RE)            SET MATCHED BYTES IN BLOCK                   
         LA    RE,1(RE)            SET 'TO' ADDRESS                             
         LA    RF,0(R4,R5)         GET 'FROM' ADDRESS                           
         EJECT                                                                  
***********************************************************************         
* MOVE REC TO BUFFER                                                  *         
***********************************************************************         
ISVMV9   LHI   R0,256                                                           
         CR    R1,R0                                                            
         BNH   *+20                                                             
         MVC   0(256,RE),0(RF)                                                  
         AR    RE,R0                                                            
         AR    RF,R0                                                            
         SR    R1,R0                                                            
         B     *-18                                                             
         BCTR  R1,0                                                             
         EX    R1,ISVMVC                                                        
*                                                                               
         LH    R5,ISKEYLN1         GET KEY LEN-1                                
         EX    R5,ISVSAVE                                                       
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BNE   ISVEXIT                                                          
         L     RE,PDBUFPTR         SET ADDRESS IN RE                            
         B     ISVNXTPD            GO WRITE RECORD                              
*                                                                               
ISVCLC   CLC   RECKEY(0),0(R4)                                                  
ISVSAVE  MVC   RECKEY(0),0(R4)                                                  
ISVMVC   MVC   0(0,RE),0(RF)                                                    
ISVMVCFF MVC   1(0,R4),0(R4)       PROPAGATE X'FF' IN KEY                       
         EJECT                                                                  
***********************************************************************         
* RECORD WILL NOT FIT -  SET EOB FLAG AND TRY NEXT BLOCK              *         
***********************************************************************         
ISVNXTPD MVI   0(RE),X'FF'         SET EOB FLAG                                 
         MVI   KEYCOMP,0           SUPPRESS KEY COMPRESSION NEXT TEST           
*                                                                               
         L     RE,PDCCWPTR         GET CURRENT CCW ADDRESS                      
         L     RE,0(RE)            GET CURRENT BLK ADDRESS                      
         LA    RE,0(RE)                                                         
         AH    RE,ISPDLN           ADD BLKLEN                                   
         SH    RE,ISKEYLN          BACK UP ONE KEYLEN                           
         LH    RF,ISKEYLN1                                                      
         EX    RF,ISVMVTI          PUT HI KEY AT END OF BLOCK                   
*                                                                               
         MVI   TIDIRTY,C'Y'        SET TI HAS DATA THAT MUST BE WRITTEN         
*                                                                               
         L     R0,CICORE           ANOTHER BLOCK WRITTEN                        
         AHI   R0,1                                                             
         ST    R0,CICORE                                                        
*                                                                               
         L     RE,TIBUFPTR         MOVE HI KEY IN BLK TO TI                     
         ST    RE,FULL1                                                         
         EX    RF,ISVMVTI                                                       
         LA    RE,1(RE,RF)         GET NEXT TI ADDRESS                          
         L     RF,RELTINUM                                                      
         AHI   RF,1                                                             
         ST    RF,RELTINUM                                                      
         STCM  RF,15,0(RE)                                                      
         AHI   RE,4                                                             
         ST    RE,TIBUFPTR                                                      
*                                                                               
         AH    RE,ISKEYLN          CHECK TO SEE IF ANOTHER KEY FITS             
         AHI   RE,4                                                             
         C     RE,TIBUFPTX                                                      
         BNH   ISVNXTP1                                                         
         BRAS  RE,ISVWRTTI         WRITE THIS TRACK INDEX TO TEMP FILE          
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISVWRTPD                                                         
         B     ISVNXTP3                                                         
*                                                                               
ISVNXTP1 CLI   RECKEY,X'FF'        ROOM FOR MORE - TEST IF EOF KEY              
         BNE   ISVNXTP3                                                         
         L     R1,FULL1            R1=A(EOF TI ENTRY)                           
         LH    RF,ISKEYLN1                                                      
         AHI   RF,4                                                             
ISVNXTP2 L     RE,TIBUFPTR         PROPAGATE EOF ENTRY TO END OF TI REC         
         EX    RF,ISVCPYTI                                                      
         AH    RE,ISKEYLN                                                       
         AHI   RE,4                                                             
         ST    RE,TIBUFPTR                                                      
         AH    RE,ISKEYLN          CHECK TO SEE IF ANOTHER KEY FITS             
         AHI   RE,4                                                             
         C     RE,TIBUFPTX                                                      
         BNH   ISVNXTP2                                                         
         B     ISVWRTPD                                                         
*                                                                               
ISVNXTP3 L     RE,PDCCWPTR         GET A(CURRENT PD CCW)                        
         AHI   RE,16                                                            
         CLI   0(RE),0             TEST FOR LAST                                
         BE    ISVWRTPD            YES-GO WRITE                                 
         ST    RE,PDCCWPTR         SET PTR                                      
*                                                                               
         L     RE,0(RE)            GET BLK ADDRESS                              
         LA    RE,0(RE)            CLEAR HOB                                    
         LH    RF,ISSPARE                                                       
         STH   RF,0(RE)            SET SPARE                                    
         LA    R0,6(RE,RF)         SET FIRST DATA ADDRESS                       
         ST    R0,PDBUFPTR                                                      
         AH    RE,ISPDLN                                                        
         SH    RE,ISKEYLN          LEAVE ROOM FOR HI KEY                        
         BCTR  RE,0                                                             
         ST    RE,PDBUFPTX         SET LAST BYTE ADDR-1 FOR EOB FLAG            
         B     ISVMV               GO MOVE RECORD                               
*                                                                               
ISVMVTI  MVC   0(0,RE),RECKEY                                                   
ISVCPYTI MVC   0(0,RE),0(R1)                                                    
         EJECT                                                                  
***********************************************************************         
* WRITE PRIME DATA BUFFER                                             *         
***********************************************************************         
ISVWRTPD BRAS  RE,ISVWRITE                                                      
         CLI   RECKEY,X'FF'        TEST EOF                                     
         BE    ISVEND                                                           
         B     ISVMV               GO MOVE RECORD                               
         EJECT                                                                  
***********************************************************************         
* WRITE PRIME DATA BUFFER TO DISK                                     *         
***********************************************************************         
ISVWRITE NTR1                                                                   
         LA    R7,NPDTTBR          POINT TO REL TRK                             
         BAS   R9,ISVCCHH          TRANSLATE IN 'SEEK'                          
         B     ISVEOFER                                                         
*                                                                               
         BAS   R9,ISVCLRCO                                                      
*                                                                               
         LHI   R1,1                                                             
         LH    R0,ISHIPD                                                        
         L     R7,ADRCOUNT         BUILD PD COUNT FIELDS                        
ISVWRT2  MVC   0(4,R7),SRCH                                                     
         STC   R1,4(R7)                                                         
         MVC   6(2,R7),ISPDLN      SET BLK LEN                                  
         LA    R7,8(R7)                                                         
         AHI   R1,1                                                             
         BCT   R0,ISVWRT2                                                       
*                                                                               
ISVWRT4  L     R7,PDCCWPTR         GET LAST GOOD DATA CCW                       
         MVI   4(R7),0             RESET CC/DC                                  
*                                                                               
         L     R1,ADRPDCCW                                                      
         BAS   R9,ISVEXCP                                                       
         DC    AL4(0)                                                           
         MVC   ISPDLAST,NPDTTBR    SAVE LAST PD ADDRESS IN DTF                  
*                                                                               
         XR    RE,RE               BUMP TO NEXT PD TRACK                        
         ICM   RE,7,NPDTTBR                                                     
         AHI   RE,X'10'            TTTTTB REMEMBER                              
         STCM  RE,7,NPDTTBR                                                     
*                                                                               
         BRAS  R9,ISVCLRPB         CLEAR PD BUFFER AND RESET POINTERS           
         B     ISVEXIT                                                          
         EJECT                                                                  
***********************************************************************         
* WRITE TI RECORD TO TEMPORARY FILE                                   *         
***********************************************************************         
ISVWRTTI NTR1                                                                   
         CLI   TIDIRTY,C'Y'                                                     
         BNE   ISVEXIT                                                          
*                                                                               
         L     R3,ADRTIBUF         SET LENGTH OF THIS RECORD TO BLKLEN          
         XC    0(4,R3),0(R3)                                                    
         LH    R0,ISPDLN                                                        
         AHI   R0,4                                                             
         STH   R0,0(R3)                                                         
*                                                                               
         L     RE,TIBUFPTR         SET EOB POINTER                              
         MVI   0(RE),X'FF'                                                      
*                                                                               
         LH    RE,ISPDLN           WRITE COPY OF HIGH KEY TO END OF BLK         
         AHI   RE,4                                                             
         AR    RE,R3                                                            
         SH    RE,ISKEYLN          LEAVE ROOM FOR HI KEY                        
         LH    RF,ISKEYLN1                                                      
         EX    RF,WTIMVHIK                                                      
*                                                                               
         PUT   PDIXOV,(R3)         WRITE RECORD TO FILE                         
*                                                                               
WTI02    L     RF,TICOUNT                                                       
         AHI   RF,1                                                             
         ST    RF,TICOUNT                                                       
*                                                                               
         BAS   R9,ISVCLRTB                                                      
         MVI   TIDIRTY,C'N'                                                     
         B     ISVEXIT                                                          
*                                                                               
WTIMVHIK MVC   0(0,RE),RECKEY      MOVE IN HIGH KEY FOR THIS TI                 
         EJECT                                                                  
***********************************************************************         
* WE HAVE LOADED PD TO THE FIRST PART OF THE DISK                     *         
* TI IS SITTING AS A SERIES OF RECORDS IN THE PDIXOV FILE             *         
* WE NEED TO READ THEM BACK AND WRITE STRAIGHT AFTER THE PD           *         
* THE IDEA IS TO REUSE THE PD BLOCK WRITE LOGIC                       *         
***********************************************************************         
ISVEND   CLI   TIDIRTY,C'Y'        WRITE LAST TRACK IF ANY DATA IN IT           
         BNE   *+8                                                              
         BRAS  RE,ISVWRTTI                                                      
*                                                                               
         CLOSE PDIXOV                                                           
         MVI   ISLPDIXO,C' '       SET PDIXOV CLOSED                            
*                                                                               
         MVC   SVPDLAST,NPDTTBR    SAVE LAST PD ADDRESS                         
         MVC   NTITTBR,NPDTTBR     SET A(FIRST TI BLOCK)                        
*                                                                               
         OPEN  (PDIXOV,INPUT)      NOW READ IN BLOCKS FOR TI YOU BUILT          
         LTR   RF,RF                                                            
         JNZ   *+2                                                              
         MVI   ISLPDIXO,C'Y'       SET OPENED FOR INPUT                         
*                                                                               
         BRAS  RE,ISVBLDPD                                                      
*                                                                               
         L     RE,PDCCWPTR         GET A(FIRST PD CCW)                          
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
         MVI   TIDIRTY,C'N'                                                     
*                                                                               
ISVEND2  L     R3,ADRTIBUF         NEXT TI BLOCK                                
         GET   PDIXOV,(R3)                                                      
*                                                                               
         L     R0,CICORE           NUMBER OF TI BLOCKS                          
         AHI   R0,1                                                             
         ST    R0,CICORE                                                        
*                                                                               
         LA    R0,4(R3)            MOVE RECORD INTO PD BLOCK                    
         LH    R1,0(R3)                                                         
         AHI   R1,-4                                                            
         L     RE,PDBUFPTR         BUT MAKE SURE YOU STRIP OFF LENGTH           
         LH    RF,ISPDLN                                                        
         MVCL  RE,R0                                                            
         MVI   TIDIRTY,C'Y'        REUSE THIS 'MUST WRITE' FLAG                 
*                                                                               
         L     RE,PDCCWPTR         GET A(CURRENT PD CCW)                        
         LA    RE,16(RE)                                                        
         CLI   0(RE),0             TEST FOR LAST                                
         BE    ISVEND4             YES-GO WRITE                                 
*                                                                               
         ST    RE,PDCCWPTR         SET PTR                                      
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
         B     ISVEND2             GET NEXT TI RECORD                           
*                                                                               
ISVEND4  BRAS  RE,ISVWRITE         WRITE TI INTO NEXT PD TRACK                  
         L     RE,PDCCWPTR         GET A(FIRST PD CCW)                          
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
*                                                                               
         LM    RE,RF,ADRPDBUF      CLEAR OUT BUFFER                             
         SR    RF,RE                                                            
         XR    R1,R1                                                            
         MVCL  RE,R0                                                            
         MVI   TIDIRTY,C'N'                                                     
         B     ISVEND2                                                          
         EJECT                                                                  
***********************************************************************         
* EOD ON TI FILE SO NOW WE WRITE UPDATED BLOCK 1 AND ERASE TO EOF     *         
***********************************************************************         
ISVLEND  CLOSE PDIXOV              EODAD FOR PDIXOV FILE                        
         MVI   ISLPDIXO,C' '       SET PDIXOV CLOSED                            
*                                                                               
         CLI   TIDIRTY,C'Y'        UNCOMMITTED WRITE?                           
         BNE   ISVLEN1             NO                                           
         BRAS  RE,ISVWRITE         WRITE TI INTO NEXT PD TRACK                  
*                                                                               
         L     RE,PDCCWPTR         GET A(FIRST PD CCW)                          
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
*                                                                               
         LM    RE,RF,ADRPDBUF      CLEAR OUT THE PD BUFFER                      
         SR    RF,RE                                                            
         XR    R1,R1                                                            
         MVCL  RE,R0                                                            
*                                                                               
ISVLEN1  MVC   SVIXLAST,NPDTTBR    SAVE LAST IS ADDRESS                         
*                                                                               
ISVLEN2  NC    NPDTTBR,=XL4'FFFFF000' FIRST OVERFLOW TRACK                      
         MVC   ISVOVS,NPDTTBR      FIRST OV BUFFER ADDRESS                      
         MVC   FULL,NPDTTBR        SAVE IT FOR ERASE BELOW                      
         MVC   ISVTIS,NTITTBR                                                   
         MVC   ISVTICNT,TICOUNT                                                 
         TIME  DEC,ISVOVLD,LINKAGE=SYSTEM                                       
*                                                                               
         L     RF,ADRPDBUF                                                      
         MVC   0(ISVBLK1L,RF),ISVBLK1                                           
         MVC   NPDTTBR,=X'00001000'                                             
         BRAS  RE,ISVWRITE                                                      
         MVC   NPDTTBR,FULL        RESTORE THIS FOR REPORTING                   
*                                                                               
         L     RE,PDCCWPTR         GET A(FIRST PD CCW)                          
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
*                                                                               
         LM    RE,RF,ADRPDBUF      CLEAR OUT BUFFER                             
         SR    RF,RE                                                            
         XR    R1,R1                                                            
         MVCL  RE,R0                                                            
*                                                                               
         BRAS  RE,ISVBLDPD                                                      
         L     RE,PDCCWPTR         GET A(FIRST PD CCW)                          
         L     RE,0(RE)            GET BLK ADDRESS                              
         ST    RE,PDBUFPTR                                                      
*                                                                               
         BAS   R9,ISVCLRCO                                                      
*                                                                               
         LHI   R1,1                                                             
         LH    R0,ISHIPD                                                        
         L     R7,ADRCOUNT         BUILD PD COUNT FIELDS                        
ISVLEN3  MVC   0(4,R7),SRCH                                                     
         STC   R1,4(R7)                                                         
         MVC   6(2,R7),ISPDLN      SET BLK LEN                                  
         LA    R7,8(R7)                                                         
         AHI   R1,1                                                             
         BCT   R0,ISVLEN3                                                       
*                                                                               
         L     RF,FSTPDCCW                                                      
         MVI   0(RF),X'11'         SET OPCD=ERASE                               
         MVI   4(RF),0                                                          
         B     ISVLEN4             ERASE REST OF FILE                           
*                                                                               
ISVBLK1  DC    C'PDIXOV BLOCK FORMAT - TI START='                               
ISVTIS   DC    AL4(0)                                                           
         DC    C'NUMBER OF TI BLOCKS='                                          
ISVTICNT DC    AL4(0)                                                           
         DC    C'OV START ADDRESS='                                             
ISVOVS   DC    AL4(0)                                                           
         DC    C'LOADED ON: '                                                   
ISVOVLD  DC    CL16' '                                                          
ISVBLK1L EQU   *-ISVBLK1                                                        
         EJECT                                                                  
***********************************************************************         
* NOW ERASE REST OF FILE. FULL CONTAINS 1ST TRACK OF OVERFLOW AREA    *         
***********************************************************************         
ISVLEN4  CLI   WRITESW,C'N'        DON'T OPEN THIS FILE IF NO WRITE             
         BE    ISVEXIT                                                          
         LA    R7,FULL                                                          
         BRAS  R9,ISVCCHH                                                       
         B     ISVEND20            ERROR RETURN (EOF WOULD BE GOOD)             
*                                                                               
         L     R7,ADRCOUNT         NORMAL RETURN GET COUNT FIELD ADDR           
         XC    0(8,R7),0(R7)                                                    
         MVC   0(4,R7),SRCH                                                     
         MVI   4(R7),1                                                          
*                                                                               
         L     R1,ADRPDCCW                                                      
         BRAS  R9,ISVEXCP                                                       
         DC    AL4(0)                                                           
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,7,FULL           BUMP TO NEXT TRACK                           
         AHI   RF,X'10'                                                         
         STCM  RF,7,FULL                                                        
         B     ISVLEN4                                                          
*                                                                               
ISVEND20 TM    P3+1,X'04'          TEST END-OF-FILE                             
         JZ    *+2                                                              
*                                                                               
ISVEND25 XC    P3(2),P3                                                         
*                                                                               
ISVEND30 LM    RE,RF,CICORE        RE=CICORE AND RF=MICORE                      
         TM    ISINDXTY,X'02'                                                   
         BZ    ISVEND32            TEST IF INDEX SIZE IN DOUBLE WORDS           
         LA    RE,7(RE)                                                         
         SRL   RE,3                ADJUST CICORE TO DUBS                        
         LA    RF,7(RF)                                                         
         SRL   RF,3                ADJUST MICORE TO DUBS                        
*                                                                               
ISVEND32 TM    ISINDXTY,X'01'                                                   
         BZ    ISVEND34                                                         
         XR    RE,RF                                                            
         XR    RF,RE                                                            
         XR    RE,RF               RE=MICORE AND RF=CICORE                      
ISVEND34 MH    RE,ISIXLN           PASS BACK CYL/MST OR MST/CYL SIZES           
         ST    RE,ISINDX                                                        
         MH    RF,ISIXLN           PASS BACK CYL/MST OR MST/CYL SIZES           
         STCM  RF,15,ISCILN                                                     
         ST    RE,ISPDDA                                                        
         ST    RF,ISOVDA                                                        
         B     ISVEXIT             DONE                                         
         EJECT                                                                  
***********************************************************************         
* TRANSLATE A RELATIVE TRACK ADDRESS TO AN ACTUAL DISK ADDRESS        *         
* R7 HAS A(RELTRK) AND R8 HAS A(MATRIX ENTRY)                         *         
* CCB/IOB ARE SET FOR THE CORRECT DEVICE ADDRESS                      *         
***********************************************************************         
ISVCCHH  ICM   RE,15,0(R7)         TEST DISK ADDRESS OK                         
         JZ    *+2                                                              
         SRL   RE,32-20            GET TTTTT                                    
         XR    R0,R0                                                            
         XR    R1,R1                                                            
         LA    R8,ISXTNT                                                        
ISVCCHH2 ICM   R1,3,12(R8)                                                      
         AR    R0,R1                                                            
         CR    RE,R0                                                            
         BH    ISVCCHH4                                                         
         SR    R0,R1                                                            
         SR    RE,R0                                                            
         B     ISVCCHH6                                                         
*                                                                               
ISVCCHH4 AHI   R8,14                                                            
         CLI   0(R8),X'FF'                                                      
         BNE   ISVCCHH2                                                         
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BE    4(R9)                                                            
         MVI   P3+1,X'04'                                                       
         BR    R9                  ERROR RETURN ON EOF                          
*                                                                               
ISVCCHH6 XC    SEEK,SEEK           RE=REL TRK FOR THIS EXTENT                   
         AH    RE,4(R8)            ADD LOW TRACK                                
         BCTR  RE,0                                                             
         SRDA  RE,32                                                            
*                                                                               
         LH    R0,ISTRKS                                                        
         DR    RE,R0               RF HAS CYL, RE HAS TRK                       
         AH    RF,2(R8)            ADD LOW CYL                                  
         STH   RF,SEEK+2           SET CYL                                      
         STH   RE,SEEK+4           SET TRK                                      
         MVC   SEEK+6(1),2(R7)     SET REC                                      
         NI    SEEK+6,X'0F'                                                     
         XC    ISFSEEK,ISFSEEK     SET SEEK ADDR IN DTF (MBBCCHHR)              
         MVC   ISFSEEK(1),1(R8)                                                 
         MVC   ISFSEEK+3(5),SEEK+2                                              
         MVC   ISFUC,0(R8)         SET SEQNUM/DEVTYP IN DTF                     
         MVC   IOB+32(8),ISFSEEK   SET SEEK ADDR IN IOB (MBBCCHHR)              
         B     4(R9)               NORMAL RETURN                                
         EJECT                                                                  
***********************************************************************         
* EXECUTE CHANNEL PROGRAM                                             *         
***********************************************************************         
ISVEXCP  XC    IOB(32),IOB         INITIALISE IOB                               
         MVI   IOB,X'C3'           SET DC/CC/NOTRELATED/NOAPPENDG               
         LA    R1,8(R1)            REMOVE LONG SEEK                             
         ST    R1,IOB+16           R1 POINTS TO CCW STRING                      
         LA    R1,ECB                                                           
         ST    R1,IOB+4                                                         
         L     R1,ISFADCB          SET DCB ADDR                                 
         STCM  R1,7,IOB+21                                                      
*                                                                               
ISVX1    LA    R1,IOB              EXECUTE CHANNEL PROGRAM                      
         CLI   WRITESW,C'N'        TEST WRITE=NO                                
         BE    4(R9)               YES - RETURN NORMAL COMPLETION               
         XC    ECB,ECB                                                          
         EXCP  IOB                                                              
         WAIT  ECB=ECB                                                          
*                                                                               
ISVX2    CLI   IOB+4,X'7F'         EXIT IF NORMAL COMPLETION                    
         BE    4(R9)                                                            
         CLI   IOB+4,X'41'         TEST PERMANENT ERROR                         
         BE    ISVX3                                                            
         CLI   IOB+4,X'42'         TEST OUTSIDE EXTENTS                         
         BNE   *+10                                                             
         MVI   P3+1,X'01'          REFERENCE OUTSIDE EXTENTS                    
         BR    R9                                                               
         DC    H'0'                DIE IF HORRIBLE COMPLETION CODE              
*                                                                               
ISVX3    TM    IOB+12,X'02'        TEST CSW UNIT STATUS FOR UNIT CHECK          
         BO    ISVX4                                                            
         TM    IOB+12,X'01'        TEST CSW UNIT STATUS FOR UNIT EXCPN          
         BZ    *+10                                                             
         MVI   P3+1,X'04'          SET EOF                                      
         BR    R9                                                               
         TM    IOB+12,X'FF'        TEST CSW UNIT STATUS                         
         JNZ   *+2                                                              
         TM    IOB+13,X'FF'        TEST CSW CHNL STATUS                         
         BZ    ISVX4                                                            
ISVXER80 MVI   P1,X'80'            SET UNRECOVERABLE ERROR                      
         BR    R9                  ERROR RETURN                                 
*                                                                               
ISVX4    TM    IOB+2,X'04'         TEST SENSE BYTE 0 ON UNIT CHECK              
         BNZ   ISVXER80            TRACK OVERRUN                                
         CLI   IOB+2,0                                                          
         BNE   ISVXER80            UNRECOVERABLE ERROR                          
         TM    IOB+3,X'04'         TEST SENSE BYTE 1 ON UNIT CHECK              
         BZ    *+10                                                             
         MVI   P3+1,X'08'          SET NO RECORD FOUND                          
         BR    R9                                                               
         B     ISVXER80            UNRECOVERABLE ERROR                          
         EJECT                                                                  
***********************************************************************         
* INITIALISE ON FIRST CALL                                            *         
***********************************************************************         
ISVINIT  MVI   WRITESW,C'Y'        SET WRITE OPTION                             
         ICM   RF,15,=V(LDWRITE)                                                
         BZ    *+10                                                             
         MVC   WRITESW,0(RF)                                                    
*                                                                               
ISVI01   CLI   ISLPDIXO,C' '       TEST IF OPENED ALREADY                       
         BNE   ISVI02                                                           
         OPEN  (PDIXOV,OUTPUT)     TEMP OUTPUT FILE FOR TI                      
         LTR   RF,RF                                                            
         JNZ   *+2                                                              
         MVI   ISLPDIXO,C'Y'       SET OPENED FOR OUTPUT                        
*                                                                               
ISVI02   MVI   FRSTTIME,0          RESET FIRST TIME SWITCH                      
         XC    TICOUNT,TICOUNT                                                  
         XC    RELTINUM,RELTINUM                                                
         XR    RE,RE                                                            
         ICM   RE,3,ISPDLN         GET PD BUFFER LENGTH                         
         SH    RE,ISSPARE                                                       
         AHI   RE,-8                                                            
         STH   RE,MAXRECL          SAVE MAXIMUM RECORD LENGTH                   
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,1,ISFDEVT        ISOPEN HAS SET LOGICAL DEVICE                
         JZ    *+2                                                              
         BCTR  RE,0                                                             
         SLL   RE,4                                                             
         LA    RE,DEV3340(RE)                                                   
         MVC   DEVDATA,0(RE)       SAVE DISK DEVICE DATA                        
*                                                                               
ISVDTF   MVC   ISTRKS,DEVTRKS      SET TRKS/CYL                                 
         XR    R0,R0                                                            
         ICM   R0,3,ISPDLN                                                      
         BAS   R9,ISVDTFR          GET PD RECS/TRK                              
         STH   R0,ISHIPD                                                        
         MVC   ISTILN,ISPDLN       SET TRACK INDEX SAME AS PD LN                
*                                                                               
         MVC   NPDTTBR,=X'00002000' SET TRK1 BLOCK 1 AS START FOR PD            
         B     ISVDTFX                                                          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE COMPUTES RECS/TRK FOR RECLEN IN R0                       *         
***********************************************************************         
ISVDTFR  LTR   R0,R0                                                            
         JZ    *+2                                                              
         C     R0,=F'32767'                                                     
         JH    *+2                 DIE IF RECLEN GT 32K                         
*                                                                               
         CLI   DEVSUB,5            TEST FOR 3390                                
         BE    ISV3390                                                          
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         ICM   RF,3,DEVCAPL                                                     
         OC    DEVMOD,DEVMOD                                                    
         BZ    *+16                                                             
         AH    R0,DEVMOD           ADJUST FOR MODULO                            
         SRL   R0,5                                                             
         SLL   R0,5                                                             
         AH    R0,DEVIRG           ADJUST FOR IRG                               
         DR    RE,R0                                                            
         LTR   R0,RF               RETURN RECS/TRK IN R0                        
         BNZR  R9                                                               
         DC    H'0'                DIE IF RECLEN GT TRACK LEN                   
                                                                                
***********************************************************************         
* 3390 COMPUTATION ROUTINES                                           *         
* DN=(DL+6+231)/232                                                   *         
* D=9+(DL+6*DN)+6+33)/34                                              *         
* SPACE=10+D                                                          *         
***********************************************************************         
ISV3390  LR    RE,R0               GET RECLEN                                   
         LA    RE,237(RE)          RE=DL+6+231                                  
         SRDL  RE,32                                                            
         D     RE,=F'232'          RF=(DL+237)/232                              
         MHI   RF,6                                                             
         AR    RF,R0               RF=DL+6*DN                                   
         LA    RF,39(RF)                                                        
         SR    RE,RE                                                            
         D     RE,=F'34'                                                        
         LA    RF,19(RF)           GIVES SPACE REQUIRED IN RF                   
         SR    R0,R0                                                            
         LA    R1,1729             1729=NUMBER OF CELLS/TRACK                   
         DR    R0,RF               DIVIDE BY SPACE/RECORD                       
         LR    R0,R1               GIVES MAX RECS/TRACK (TRUNCATED)             
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* SET HIGH REL TRK IN EXTENT MATRIX                                   *         
***********************************************************************         
ISVDTFX  XC    RECKEY,RECKEY                                                    
         LA    R1,ISXTNT                                                        
         BAS   R9,ISVSETHI                                                      
*                                                                               
ISVINI1  BAS   RE,ISVCLRAL         CLEAR COUNTS/CCWS/BUFFERS                    
         BRAS  RE,ISVBLDPD                                                      
*                                                                               
         L     RF,ADRPDBUF                                                      
         MVC   0(32,RF),=CL32'LOADING PDIXOV FILE'                              
         MVC   032(256,RF),0(RF)                                                
         MVC   288(256,RF),0(RF)                                                
         MVC   NPDTTBR,=X'00001000'                                             
         BRAS  RE,ISVWRITE                                                      
*                                                                               
         L     R1,FSTPDCCW         POINT TO FIRST PD DATA CCW                   
         MVI   12(R1),X'40'                                                     
         B     ISVMV               INITIALISE COMPLETE - BACK TO START          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINES TO SET EXTENT MATRIX AND CLEAR BUFFER AREAS             *         
***********************************************************************         
ISVSETHI XR    RE,RE                                                            
         LH    R7,2(R1)            GET LOW CYL                                  
         MH    R7,ISTRKS           X TRKS/CYL                                   
         AH    R7,4(R1)            ADD LOW TRK                                  
         OC    4(2,R1),4(R1)                                                    
         BNE   ISVXTNT             XTNT MUST START ON TRK 0                     
*                                                                               
         LH    R8,6(R1)            GET HI CYL                                   
         MH    R8,ISTRKS           X TRKS/CYL                                   
         AH    R8,8(R1)            ADD HI TRK                                   
*                                                                               
         LH    R0,ISTRKS           GET TRKS/CYL                                 
         BCTR  R0,0                SET HI TRK ON CYL                            
         CH    R0,8(R1)            XTNT MUST END ON HI TRK                      
         BNE   ISVXTNT                                                          
*                                                                               
         SR    R8,R7                                                            
         LA    R8,1(R8)                                                         
         STH   R8,12(R1)           NUM OF TRACKS IN THIS EXTENT                 
         CLI   WRITESW,C'N'        TEST WRITE=NO SET                            
         BNE   *+10                                                             
         MVC   12(2,R1),=X'FFFF'   SET MAXIMUM RELATIVE HITRK VALUE             
         LA    R1,14(R1)                                                        
         CLI   0(R1),X'FF'                                                      
         BNE   ISVSETHI+2                                                       
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD CCW CHAIN                                                     *         
***********************************************************************         
ISVSSST  LA    R0,SEEK             BUILD SEEK/SCTR/SRCH/TIC AT R1               
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'07'         SET OPCD=SEEK                                
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),6                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SECTOR                                                        
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'23'         SET OPCD=SETSCTR                             
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),1                                                          
*                                                                               
         LA    R1,8(R1)                                                         
         LA    R0,SRCH                                                          
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'31'         SET OPCD=SEARCH ID EQUAL                     
         MVI   4(R1),X'40'                                                      
         MVI   7(R1),5                                                          
*                                                                               
         LR    R0,R1                                                            
         LA    R1,8(R1)                                                         
         ST    R0,0(R1)                                                         
         MVI   0(R1),X'08'         SET OPCD=TIC TO SEARCH                       
         MVI   4(R1),X'40'                                                      
*                                                                               
         LA    R1,8(R1)                                                         
         BR    R9                  EXIT WITH R1 POINTING TO NEXT CCW            
         EJECT                                                                  
***********************************************************************         
* COMMON ROUTINES AND W/S                                             *         
***********************************************************************         
COMMON   DS    0D                                                               
*                                                                               
ISVCLRAL NTR1                     CLEAR COUNTS/CCWS/BUFFERS                     
         BAS   R9,ISVCLRCO                                                      
         BAS   R9,ISVCLRCI                                                      
         BAS   R9,ISVCLRTI                                                      
         BAS   R9,ISVCLRPD                                                      
         BAS   R9,ISVCLRCB                                                      
         BAS   R9,ISVCLRTB                                                      
         BAS   R9,ISVCLRPB                                                      
         B     ISVEXIT                                                          
*                                                                               
ISVCLRCO LM    RE,RF,ADRCOUNT      CLEAR COUNT FIELD                            
         B     ISVCLR                                                           
*                                                                               
ISVCLRCI LM    RE,RF,ADRCICCW      CLEAR CYLINDER INDEX CCWS                    
         B     ISVCLR                                                           
*                                                                               
ISVCLRTI LM    RE,RF,ADRTICCW      CLEAR TRACK INDEX CCWS                       
         B     ISVCLR                                                           
*                                                                               
ISVCLRPD LM    RE,RF,ADRPDCCW      CLEAR PRIME DATA CCWS                        
         B     ISVCLR                                                           
*                                                                               
ISVCLRCB LM    RE,RF,ADRCIBUF      CLEAR CI BUFFER                              
         ST    RE,CIBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISCILN                                                        
         ST    R0,CIBUFPTX                                                      
         B     ISVCLR                                                           
*                                                                               
ISVCLRPB LM    RE,RF,ADRPDBUF      CLEAR PD BUFFER                              
         LA    R0,6(RE)            LEAVE ROOM FOR SPARE/LINK                    
         AH    R0,ISSPARE                                                       
         ST    R0,PDBUFPTR                                                      
         LR    R0,RE                                                            
         AH    R0,ISPDLN                                                        
         SH    R0,ISKEYLN          LEAVE FOOM FOR HI KEY AT END                 
         BCTR  R0,0                                                             
         ST    R0,PDBUFPTX                                                      
         MVC   0(2,RE),ISSPARE     SET SPARE                                    
         LA    RE,2(RE)            DON'T CLEAR IT                               
         L     R1,FSTPDCCW                                                      
         LA    R1,8(R1)            POINT TO FIRST DATA CCW                      
         ST    R1,PDCCWPTR                                                      
         MVI   KEYCOMP,0           SUPPRESS KEY COMPARE                         
         B     ISVCLR                                                           
*                                                                               
ISVCLRTB LM    RE,RF,ADRTIBUF      CLEAR TI BUFFER                              
         LA    R1,4(RE)                                                         
         ST    R1,TIBUFPTR         FIRST ADDRESS AT +4                          
         LR    R1,RE                                                            
         AH    R1,ISPDLN                                                        
         SH    R1,ISKEYLN          FOR A COPY OF HIGH TI KEY AT EOB             
         AHI   R1,-1               FOR AN FF BYTE                               
         ST    R1,TIBUFPTX         SET END OF BLOCK                             
         B     ISVCLR                                                           
*                                                                               
ISVCLR   XR    R1,R1                                                            
         SR    RF,RE                                                            
         AHI   RF,-8                                                            
         MVCL  RE,R0                                                            
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD PD SK/SCTR/SEARCH/TIC CCWS                                    *         
***********************************************************************         
ISVBLDPD NTR1                                                                   
         L     R1,ADRPDCCW         BUILD PD SK/SCTR/SEARCH/TIC CCWS             
         BRAS  R9,ISVSSST                                                       
         ST    R1,FSTPDCCW         SAVE ADDR OF FIRST PD CCW                    
         L     R3,ADRCOUNT                                                      
         L     R4,ADRPDBUF                                                      
         LH    R5,ISHIPD           GET RECORDS/TRK                              
*                                                                               
ISVINI4  ST    R3,0(R1)                                                         
         MVI   0(R1),X'1D'         SET OPCD=WRITE CKD                           
         MVI   4(R1),X'80'                                                      
         MVI   7(R1),8                                                          
         ST    R4,8(R1)                                                         
         MVI   8(R1),X'05'         SET OPCD=WRITE DATA                          
         MVI   12(R1),X'40'                                                     
         MVC   14(2,R1),ISPDLN                                                  
         LA    R1,16(R1)                                                        
         LA    R3,8(R3)                                                         
         AH    R4,ISPDLN                                                        
         BCT   R5,ISVINI4                                                       
         AHI   R1,-8               BACK UP TO LAST CCW                          
         MVI   4(R1),0             RESET CC/DC                                  
*                                                                               
ISVINI5  L     R1,FSTPDCCW         POINT TO FIRST PD DATA CCW                   
         LA    R1,8(R1)                                                         
         ST    R1,PDCCWPTR                                                      
         B     ISVEXIT                                                          
         EJECT                                                                  
***********************************************************************         
* X DEVICE TYPE - 1=CKD,2=RBA                                         *         
* X DEVICE SUB TYPE - 1=3340,2=3350,3=3375,4=3380,5=3390              *         
* H DEVICE TRACKS PER CYLINDER                                        *         
* H DEVICE INTER RECORD GAP                                           *         
* H DEVICE TRACK CAPACITY LOGICAL                                     *         
* H DEVICE TRACK CAPACITY PHYSICAL                                    *         
* H DEVICE RECORD ZERO OVERHEAD                                       *         
* H DEVICE SECTORS PER TRACK                                          *         
* H DEVICE MODULUS FACTOR                                             *         
***********************************************************************         
         DROP  RB                                                               
MAXIOL   DC    X'FFFF'                                                          
*                                                                               
DEV3340  DC    X'0101',AL2(12,167,08535,08960,0293,064,000)                     
DEV3350  DC    X'0102',AL2(30,185,19254,19964,0389,128,000)                     
DEV3375  DC    X'0103',AL2(12,384,36000,36992,0992,196,031)                     
DEV3380  DC    X'0104',AL2(15,480,47968,49056,1088,221,043)                     
DEV3390  DC    X'0105',AL2(15,000,00000,00000,0000,224,000)                     
DEV3370  DC    X'0201',AL2(32,000,16384,16384,0000,000,000)                     
*                                                                               
DEVDATA  DS    0CL16                                                            
DEVTYP   DS    X                                                                
DEVSUB   DS    X                                                                
DEVTRKS  DS    H                                                                
DEVIRG   DS    H                                                                
DEVCAPL  DS    H                                                                
DEVCAPP  DS    H                                                                
DEVRZERO DS    H                                                                
DEVSCT   DS    H                                                                
DEVMOD   DS    H                                                                
         EJECT                                                                  
DUB      DC    D'0'                                                             
FULL     DS    F                                                                
FULL1    DS    F                                                                
*                                                                               
SEEK     DC    D'0'                BBCCHHRO                                     
SRCH     EQU   SEEK+2                                                           
ECB      DC    F'0'                                                             
         DC    F'0'                                                             
SECTOR   DC    F'0'                                                             
*                                                                               
ADRCOUNT DC    A(COUNTS)                                                        
ADRCICCW DC    A(CICCWS)                                                        
ADRCIBUF DC    A(CIBUFF)                                                        
ADRTICCW DC    A(TICCWS)                                                        
ADRTIBUF DC    A(TIBUFF)                                                        
ADRPDCCW DC    A(PDCCWS)                                                        
ADRPDBUF DC    A(PDBUFF)                                                        
         DC    A(PDBUFFX)                                                       
*                                                                               
FSTCICCW DS    A                                                                
FSTTICCW DS    A                                                                
FSTPDCCW DS    A                                                                
*                                                                               
CIBUFPTR DS    A                                                                
CIBUFPTX DS    A                                                                
TIBUFPTR DS    A                                                                
TIBUFPTX DS    A                                                                
PDBUFPTR DS    A                                                                
PDBUFPTX DS    A                                                                
PDCCWPTR DS    A                                                                
*                                                                               
TICOUNT  DC    F'0'                                                             
RELTINUM DC    F'0'                                                             
*                                                                               
CICORE   DC    F'0'                                                             
MICORE   DC    F'0'                                                             
*                                                                               
PDTTBR   DC    X'00020000'                                                      
TITTBR   DC    X'00010000'                                                      
CITTBR   DC    X'00010000'                                                      
*                                                                               
NTITTBR  DC    X'00000000'         NEW PD - INIT SETS TO CYL 2 TRK 0            
NPDTTBR  DC    X'00000000'         NEW PD - INIT SETS TO CYL 2 TRK 1            
NCITTBR  DC    X'00010000'         NEW PD - CYL 1 TRK 0 (=RELTRK 1)             
*                                                                               
MAXRECL  DC    H'0'                MAX REC LENGTH                               
WRITESW  DC    C'Y'                WRITE TO FILE Y/N                            
TIDIRTY  DC    C'N'                TI HAS DATA TO WRITE                         
FRSTTIME DC    C'F'                FIRST TIME SWITCH                            
KEYCOMP  DC    X'00'               ZERO TO SUPPRESS KEY COMPARE                 
         DC    3X'00'                                                           
*                                                                               
RECKEY   DC    XL255'00'           KEY OF LATEST RECORD                         
*                                                                               
PDIXOV   DCB   DDNAME=PDIXOV,DSORG=PS,MACRF=(GM,PM),RECFM=VB,          +        
               BLKSIZE=32704,LRECL=32700,EODAD=ISVLEND                          
                                                                                
***********************************************************************         
* ISLEOFS AND ISLPDIXA FORMATS ARE FIXED AS THEY ARE REFERENCED BY    *         
* DMLDMOD AS ENTRY POINTS. DO NOT CHANGE WITHOUT CHANGING DMLDMOD.    *         
***********************************************************************         
ISLEOFS  DS    0D                  SAVE DATA FOR 20-BIT FILES                   
SVPDLAST DC    A(0)                LAST PRIME DATA ADDRESS                      
SVIXLAST DC    A(0)                LAST INDEX ADDRESS                           
*                                                                               
ISLPDIXA DC    A(PDIXOV)           A(PDIXOV FILE)                               
ISLPDIXO DC    C' '                C'Y'=PDIXOV FILE IS OPEN                     
         DC    CL3' '                                                           
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* NOTE THE ORDER OF THESE IS IMPORTANT                                *         
* IF YOU CHANGE IT IN ANY WAY YOU MUST UPDATE THE ADR*** STUFF ABOVE  *         
***********************************************************************         
         DS    0D                                                               
         DC    CL8'*CCBIOB*'                                                    
CCB      DS    0XL40                                                            
IOB      DC    XL40'00'                                                         
*                                                                               
         DC    CL8'*COUNTS*'                                                    
COUNTS   DS    200D                                                             
*                                                                               
         DC    CL8'*CICCWS*'                                                    
CICCWS   DS    006D                                                             
*                                                                               
         DC    CL8'*CIBUFF*'                                                    
CIBUFF   DS    1500D                                                            
*                                                                               
         DC    CL8'*TICCWS*'                                                    
TICCWS   DS    404D                                                             
*                                                                               
         DC    CL8'*TIBUFF*'                                                    
TIBUFF   DS    64000X                                                           
*                                                                               
         DC    CL8'*PDCCWS*'                                                    
PDCCWS   DS    404D                                                             
*                                                                               
         DC    CL8'*PDBUFF*'                                                    
PDBUFF   DS    64000X                                                           
PDBUFFX  EQU   *-1                                                              
         EJECT                                                                  
PARAMS   DSECT                                                                  
P1       DS    A                                                                
P2       DS    A                                                                
P3       DS    A                                                                
P4       DS    A                                                                
P5       DS    A                                                                
P6       DS    A                                                                
                                                                                
*DMDTFIS                                                                        
       ++INCLUDE DMDTFIS                                                        
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'004DMISLDDS  02/23/15'                                      
         END                                                                    
