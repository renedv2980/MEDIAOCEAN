*          DATA SET DDTREE     AT LEVEL 006 AS OF 04/18/14                      
*&&      SET   TR=N                                                             
*CATALP TREE                                                                    
*                                                                               
TREE     TITLE 'DDTREE - BINARY SEARCH TREE (BST) ROUTINES'                     
*                                                                               
***********************************************************************         
* PARAMETERS                                                                    
*                                                                               
*   ON ENTRY                                                                    
*       P1     A(ACTION)                                                        
*       P2     A(STRUCTURE DEFINITION BLOCK) - SEE DDTREED                      
*                                                                               
*   ON EXIT                                                                     
*                                                                               
* *NOTE - THIS MODULE IS NOT RESPONSIBLE FOR LOCKING THE TREE. THERE            
*         MAY BE PROBLEMS READING THROUGH OR CHANGING AN UNLOCKED TREE,         
*         PLEASE MAKE SURE THE TREE IS LOCKED/ENQUEUED IF NECESSARY,            
*         BEFORE DDTREE IS CALLED.                                              
***********************************************************************         
TREE     CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKL,**TREE**,RA                                                
         USING WORKD,RC            RC=A(W/S)                                    
*                                                                               
         LARL  R9,COMMON                                                        
         USING COMMON,R9                                                        
*                                                                               
         ST    R1,APARMS                                                        
         MVC   PARMS(PARMSX-PARMS),0(R1) SAVE PARAMETERS                        
*                                                                               
         SAM31                                                                  
*                                                                               
         L     R8,ATREEBLK                                                      
         USING TREED,R8                                                         
         MVI   TRERF,0             CLEAR RETURN FLAG                            
*                                                                               
         L     R2,AACT                                                          
         CLC   =C'BAL',0(R2)       BALANCE THE TREE                             
         BNE   TREE10                                                           
*                                                                               
         LHI   R1,L'MSGW           INIT WTO MESSAGE                             
         STH   R1,MSGWLEN                                                       
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         BAS   RE,BALANCE                                                       
         BE    *+8                                                              
         OI    TRERF,TRFBINC       BALANCE INCOMPLETE                           
*                                                                               
         LA    R3,MSGW                                                          
         MVC   MSGWMSG,=CL40'*          PASS THROUGH ALL NODES       '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT1),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVC   MSGWMSG,=CL40'*          GET NEXT NODE                '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT2),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVC   MSGWMSG,=CL40'*          GETS TO CALCULATE LOW DEPTH  '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT3),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVC   MSGWMSG,=CL40'*          GETS TO CALCULATE HIGH DEPTH '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT4),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVC   MSGWMSG,=CL40'*          LEFT ROTATIONS               '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT5),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVC   MSGWMSG,=CL40'*          RIGHT ROTATIONS              '          
         MVC   MSGWMSG+1(L'TRENAME),TRENAME                                     
         EDIT  (P8,LOOPCNT6),(16,MSGWDET),ZERO=NOBLANK,COMMAS=YES               
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         B     EXITOK                                                           
*                                                                               
TREE10   CLC   =C'NEX',0(R2)       GET NEXT NODE                                
         BNE   TREE20                                                           
         MVC   TARKEY,TREKEY                                                    
         BAS   RE,GETNEXT                                                       
         BNE   EXITHI                                                           
         MVC   TREKEY,RESKEY       RETURN - NODE KEY                            
         MVC   TRANODE,RESULT               NODE ADDRESS                        
         MVC   TREDEEP,DEPTH                NODE DEPTH IN TREE                  
         B     EXITOK                                                           
*                                                                               
TREE20   CLC   =C'GET',0(R2)       GET THIS NODE                                
         BNE   TREEBAD                                                          
         MVC   TARKEY,TREKEY                                                    
         BAS   RE,GETTHIS                                                       
         BH    EXITHI                                                           
         MVC   TREKEY,RESKEY       RETURN - NODE KEY                            
         MVC   TRANODE,RESULT               NODE ADDRESS                        
         MVC   TREDEEP,DEPTH                NODE DEPTH IN TREE                  
         B     EXITOK                                                           
*                                                                               
TREEBAD  DC    H'0'                INVALID ACTION                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* BALANCE THE TREE                                                              
***********************************************************************         
BALANCE  NTR1                                                                   
*                                                                               
         ZAP   LOOPCNT1,PACK0      LOOP PROTECTION COUNTERS                     
         ZAP   LOOPCNT2,PACK0                                                   
         ZAP   LOOPCNT3,PACK0                                                   
         ZAP   LOOPCNT4,PACK0                                                   
         ZAP   LOOPCNT5,PACK0                                                   
         ZAP   LOOPCNT6,PACK0                                                   
*                                                                               
BALA10   XC    TARGET,TARGET       START WITH FIRST NODE IN ORDER               
         XC    TARKEY,TARKEY                                                    
         XC    DEPTH,DEPTH                                                      
*                                                                               
         NI    FLAG,X'FF'-ROTFLAG                                               
*&&TR                                                                           
         LA    R3,MSGW                                                          
         MVC   MSGWMSG,=CL40'*NODE*  START FROM TREE ROOT'                      
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*&&                                                                             
         AP    LOOPCNT1,PACK1                                                   
         CP    LOOPCNT1,LOOPMAX    PROTECT AGAINST TOO MANY CYCLES              
         BH    EXITLO                                                           
*                                                                               
BALA20   BAS   RE,GETNEXT          GET THE NEXT KEY IN ORDER                    
         BNE   BALA95              END OF TREE                                  
         NI    FLAG,X'FF'-ROTLEFT-ROTRIGHT                                      
*                                                                               
         MVC   NODE,RESULT         SAVE NODE CURRENT NODE INFORMATION           
         MVC   NODEKEY,RESKEY                                                   
         MVC   NODEEP,DEPTH                                                     
*                                                                               
         AP    LOOPCNT2,PACK1                                                   
         CP    LOOPCNT2,GETMAX     PROTECT AGAINST TOO MANY GETS                
         BH    EXITLO                                                           
*&&TR                                                                           
         LA    R3,MSGW                                                          
         MVC   MSGWMSG,=CL40'*NODE*  KEY OF NODE'                               
         MVC   MSGWDET(L'NODEKEY),NODEKEY                                       
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*&&                                                                             
BALA25   MVC   TARGET,NODE                                                      
         MVC   TARKEY,NODEKEY                                                   
         MVC   DEPTH,NODEEP                                                     
*                                                                               
         XC    LOLOW,LOLOW                                                      
         XC    LODEEP,LODEEP                                                    
*                                                                               
         BAS   RE,LOCHILD          FIND THIS NODE'S LOWEST CHILD                
         MVC   LOKEY,RESKEY                                                     
*                                                                               
         MVC   TARGET,RESULT                                                    
         MVC   TARKEY,RESKEY                                                    
*                                                                               
         BAS   RE,LOLEAF           GET LEAF DEPTH (IF A LEAF)                   
*                                                                               
BALA30   CLC   RESKEY,NODEKEY      LOOK AT ALL BRANCHES LOWER                   
         BNL   BALA50              DONE WITH LOWER BRANCHES                     
*                                                                               
         AP    LOOPCNT3,PACK1      PROTECT AGAINST TOO MANY GETS                
         CP    LOOPCNT3,DEEPMAX                                                 
         BH    EXITLO                                                           
*                                                                               
         MVC   TARGET,RESULT                                                    
         MVC   TARKEY,RESKEY                                                    
*                                                                               
         BAS   RE,LOLEAF           SET LEAF DEPTH (IF A LEAF)                   
*                                                                               
         BAS   RE,GETNEXT          GET THE NEXT KEY IN ORDER                    
         BE    BALA30                                                           
         DC    H'0'                NODE REMOVED WHILE BALANCING, LOCK!          
*                                                                               
BALA50   MVC   TARGET,NODE         CURRENT NODE INFORMATION                     
         MVC   TARKEY,NODEKEY                                                   
         MVC   DEPTH,NODEEP                                                     
*                                                                               
         XC    HILOW,HILOW                                                      
         XC    HIDEEP,HIDEEP                                                    
*                                                                               
         BAS   RE,HICHILD          FIND THIS NODE'S HIGHEST CHILD               
         MVC   HIKEY,RESKEY                                                     
*                                                                               
         MVC   TARGET,RESULT                                                    
         MVC   TARKEY,RESKEY                                                    
*                                                                               
         BAS   RE,HILEAF           SET LEAF DEPTH (IF A LEAF)                   
*                                                                               
         MVC   RESULT,NODE                                                      
         MVC   RESKEY,NODEKEY                                                   
         MVC   DEPTH,NODEEP                                                     
*                                                                               
BALA60   CLC   RESKEY,HIKEY        LOOK AT ALL BRANCHES HIGHER                  
         BNL   BALA80              DONE WITH HIGHER BRANCHES                    
*                                                                               
         AP    LOOPCNT4,PACK1      PROTECT AGAINST TOO MANY GETS                
         CP    LOOPCNT4,DEEPMAX                                                 
         BH    EXITLO                                                           
*                                                                               
         MVC   TARGET,RESULT                                                    
         MVC   TARKEY,RESKEY                                                    
*                                                                               
         BAS   RE,HILEAF           GET LEAF DEPTH (IF A LEAF)                   
*                                                                               
         BAS   RE,GETNEXT          GET THE NEXT KEY IN ORDER                    
         BE    BALA60                                                           
         DC    H'0'                NODE REMOVED WHILE BALANCING, LOCK!          
*                                                                               
BALA80   MVC   TARGET,NODE                                                      
         MVC   TARKEY,NODEKEY                                                   
         MVC   DEPTH,NODEEP                                                     
*                                                                               
         L     R0,LODEEP                                                        
         L     R1,HIDEEP                                                        
         SR    R1,R0                                                            
         CHI   R1,1                ARE THEY MORE THAN ONE LEVEL OFF?            
         BNH   BALA90              NO                                           
*                                                                               
         TM    FLAG,ROTRIGHT       DID I JUST ROTATE RIGHT?                     
         BO    BALA20              YES, NO RIGHT AND LEFT ON SAME NODE          
*                                                                               
         AP    LOOPCNT5,PACK1      PROTECT AGAINST TOO MANY ROTATIONS           
         CP    LOOPCNT5,ROTAMAX                                                 
         BH    EXITLO                                                           
*&&TR                                                                           
         LA    R3,MSGW                                                          
         MVC   MSGWMSG,=CL40'*NODE*  LEFT ROTATION'                             
         MVC   MSGWDET(L'TARKEY),TARKEY                                         
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*&&                                                                             
         BAS   RE,LEFTROT          YES, ROTATE NODE TO THE LEFT                 
         MVC   NODEEP,DEPTH        DEPTH AFTER ROTATION                         
         B     BALA20                                                           
*                                                                               
BALA90   L     R0,LODEEP                                                        
         L     R1,HIDEEP                                                        
         SR    R0,R1                                                            
         CHI   R0,1                MORE THAN ONE LEVEL OFF?                     
         BNH   BALA20              NO, THAN BALANCED                            
*                                                                               
         TM    FLAG,ROTLEFT        DID I JUST ROTATE LEFT?                      
         BO    BALA20              YES, NO LEFT AND RIGHT ON SAME NODE          
*                                                                               
         AP    LOOPCNT6,PACK1      PROTECT AGAINST TOO MANY ROTATIONS           
         CP    LOOPCNT6,ROTAMAX                                                 
         BH    EXITLO                                                           
*&&TR                                                                           
         LA    R3,MSGW                                                          
         MVC   MSGWMSG,=CL40'*NODE*  RIGHT ROTATION'                            
         MVC   MSGWDET(L'TARKEY),TARKEY                                         
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*&&                                                                             
         BAS   RE,RIGHTROT         YES, ROTATE NODE TO THE RIGHT                
         MVC   NODEEP,DEPTH        DEPTH AFTER ROTATION                         
         B     BALA20                                                           
*                                                                               
BALA95   TM    FLAG,ROTFLAG        DID WE HAVE TO ROTATE SOMETHING?             
         BZ    EXITOK              NO, THEN BALANCED                            
         B     BALA10              YES, TRY AGAIN                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* GET THE NEXT NODE IN THE INDEX TREE AND RETURN THE DEPTH                      
*                                                                               
*     ON ENTRY - TRABASE= A(SHARED MEMORY FILE INDEX HEADER)                    
*                TRAHEAD= A(RESOURCE HEADER)                                    
*                TARKEY= INDEX KEY                                              
*                                                                               
*     ON EXIT  - RESULT= A(NEXT NODE IN TREE) OR ZERO FOR END OF TREE           
*                RESKEY= KEY OF NEXT NODE IN TREE                               
*                DEPTH=  DEPTH OF NODE IN TREE                                  
*                CC EQUAL IF RETURNING THIS OR NEXT NODE                        
*                CC NOT LOW IF LOOKING FOR A KEY AND FOUND NEXT                 
*                CC NOT HIGH IF END OF TREE FOUND                               
***********************************************************************         
GETTHIS  NI    FLAG,X'FF'-NXTFLAG  GET THIS NODE                                
         J     *+8                                                              
GETNEXT  OI    FLAG,NXTFLAG        GET NEXT NODE                                
*                                                                               
GETNODE  NTR1                                                                   
*                                                                               
         XC    RESKEY,RESKEY                                                    
         XC    RESULT,RESULT                                                    
         XC    DEPTH,DEPTH                                                      
*                                                                               
         L     R2,TRAHEAD          A(RESOURCE HEADER)                           
         USING SITABD,R2                                                        
*                                                                               
         L     R4,TREMAX           MAXIMUM NUMBER OF NODES TO CHECK             
         AHI   R4,100              WITH A CUSHION OF 100                        
*                                                                               
         ICM   R3,15,SITTREE       GET HEAD OF TREE                             
         BZ    EXITLO              NO HEAD, END OF LIST                         
*                                                                               
         A     R3,TRABASE          R3= A(CURRENT SEARCH NODE)                   
         USING SI1PARD,R3                                                       
*                                                                               
GETN10   BRCT  R4,GETN12           AVOID INFINITE LOOP                          
         ST    R3,RESULT           RETURN THIS NODE                             
         OI    TRERF,TRFLOOP       LOOP PROBLEMS                                
         B     GETN40                                                           
*                                                                               
GETN12   LLC   RF,TREKEYL          LENGTH OF KEY                                
         AHI   RF,-1               MINUS 1 FOR EX                               
         BNM   *+8                 ANY LENGTH GIVEN?                            
         LHI   RF,9                NO: USE 10 AS DEFAULT LENGTH                 
*                                                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   TARKEY(0),SI1NDX    COMPARE DESIRED KEY                          
         BL    GETN20              KEY IS LOWER THAN CURRENT                    
         BH    GETN30              KEY IS HIGHER THAN CURRENT                   
*                                                                               
         TM    FLAG,NXTFLAG        ARE WE LOOKING FOR NEXT ONE?                 
         BO    GETN30              YES, GET NEXT                                
         ST    R3,RESULT           NO, THIS IS THE ONE                          
         B     EXITOK                                                           
*                                                                               
GETN20   ST    R3,RESULT           SET POTENTIAL RESULT                         
         LR    R5,R4               HOLD THE COUNT FOR POTENTIAL RESULT          
         ICM   R1,15,SI1LTP        ANY LEFT (LOWER) NODE?                       
         BZ    GETN40              NO, THAN RETURN THIS ONE                     
         A     R1,TRABASE          A(LEFT NODE)                                 
         LR    R3,R1               SET CURRENT NODE                             
         B     GETN10                                                           
*                                                                               
GETN30   ICM   R1,15,SI1RTP        ANY RIGHT (HIGHER) NODE?                     
         BZ    GETN40              NO, POTENTIAL RESULT IS OFFICIAL             
         A     R1,TRABASE          A(RIGHT NODE)                                
         LR    R3,R1               SET CURRENT NODE                             
         B     GETN10                                                           
*                                                                               
GETN40   OC    RESULT,RESULT       WAS A NODE FOUND?                            
         BZ    EXITHI              NO, EXIT HIGH                                
*                                                                               
         L     R3,RESULT                                                        
*                                                                               
         LLC   RF,TREKEYL          LENGTH OF KEY                                
         AHI   RF,-1               MINUS 1 FOR EX                               
         BNM   *+8                 ANY LENGTH GIVEN?                            
         LHI   RF,9                NO: USE 10 AS DEFAULT LENGTH                 
*                                                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   RESKEY(0),SI1NDX    SET RESULT KEY                               
*                                                                               
         L     R1,SIT1CIC                                                       
         AHI   R1,100                                                           
         SR    R1,R5                                                            
         ST    R1,DEPTH            DEPTH OF NODE IN TREE                        
*                                                                               
         TM    FLAG,NXTFLAG        WERE WE LOOKING FOR THE NEXT?                
         BO    EXITOK              YES, EXIT EQUAL                              
         B     EXITLO              NO, EXIT LOW, RETURNING NEXT                 
         DROP  R2,R3                                                            
         EJECT                                                                  
                                                                                
***********************************************************************         
* RETRIEVE TARGET NODE'S LOWEST (LEFT-MOST) CHILD AND ITS DEPTH                 
***********************************************************************         
         USING SI1PARD,R2          TARGET NODE                                  
LOCHILD  NTR1                                                                   
         XR    R4,R4                                                            
         XC    RESULT,RESULT                                                    
         XC    RESKEY,RESKEY                                                    
*                                                                               
         L     R2,TARGET                                                        
LOCH10   OC    SI1LTP,SI1LTP                                                    
         BZ    LOCH20                                                           
         L     R2,SI1LTP                                                        
         A     R2,TRABASE                                                       
         AHI   R4,1                                                             
         B     LOCH10                                                           
*                                                                               
LOCH20   ST    R2,RESULT                                                        
         A     R4,DEPTH            ADD DEPTH OF TARGET                          
         ST    R4,DEPTH                                                         
*                                                                               
         LLC   RF,TREKEYL          LENGTH OF KEY                                
         AHI   RF,-1               MINUS 1 FOR EX                               
         BNM   *+8                 ANY LENGTH GIVEN?                            
         LHI   RF,9                NO: USE 10 AS DEFAULT LENGTH                 
*                                                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   RESKEY(0),SI1NDX    SET RESULT KEY                               
*                                                                               
         B     EXIT                                                             
         DROP  R2                                                               
                                                                                
***********************************************************************         
* RETRIEVE TARGET NODE'S HIGHEST (RIGHT-MOST) CHILD AND ITS DEPTH               
***********************************************************************         
         USING SI1PARD,R2          TARGET NODE                                  
HICHILD  NTR1                                                                   
         XR    R4,R4                                                            
         XC    RESULT,RESULT                                                    
         XC    RESKEY,RESKEY                                                    
*                                                                               
         L     R2,TARGET                                                        
HICH10   OC    SI1RTP,SI1RTP                                                    
         BZ    HICH20                                                           
         L     R2,SI1RTP                                                        
         A     R2,TRABASE                                                       
         AHI   R4,1                                                             
         B     HICH10                                                           
*                                                                               
HICH20   ST    R2,RESULT                                                        
         A     R4,DEPTH            ADD DEPTH OF TARGET                          
         ST    R4,DEPTH                                                         
*                                                                               
         LLC   RF,TREKEYL          LENGTH OF KEY                                
         AHI   RF,-1               MINUS 1 FOR EX                               
         BNM   *+8                 ANY LENGTH GIVEN?                            
         LHI   RF,9                NO: USE 10 AS DEFAULT LENGTH                 
*                                                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   RESKEY(0),SI1NDX    SET RESULT KEY                               
*                                                                               
         B     EXIT                                                             
         DROP  R2                                                               
                                                                                
***********************************************************************         
* CALCULATE THE MOST SHALLOW AND DEEPEST LEAF OF LEFT (LOW) BRANCH              
***********************************************************************         
         USING SI1PARD,R2                                                       
LOLEAF   NTR1                                                                   
*                                                                               
         OC    LOLOW,LOLOW                                                      
         BNZ   *+10                                                             
         MVC   LOLOW,DEPTH         FIRST TIME, THIS MUST MOST SHALLOW           
*                                                                               
         OC    LODEEP,LODEEP       FIRST TIME, THIS MUST BE DEEPEST             
         BNZ   *+10                                                             
         MVC   LODEEP,DEPTH                                                     
*                                                                               
         L     R2,TARGET                                                        
         OC    SI1LTP,SI1LTP       IS THIS A LEAF? (NO CHILDREN)                
         BNZ   LOLX                                                             
         OC    SI1RTP,SI1RTP                                                    
         BNZ   LOLX                                                             
*                                                                               
         CLC   DEPTH,LODEEP        THIS LEAF DEEPER THAN OTHERS?                
         BNH   *+10                NO                                           
         MVC   LODEEP,DEPTH                                                     
*                                                                               
         CLC   DEPTH,LOLOW         THIS LEAF MORE SHALLOW THAN OTHERS?          
         BNL   *+10                NO                                           
         MVC   LOLOW,DEPTH                                                      
*                                                                               
LOLX     B     EXIT                                                             
         DROP  R2                                                               
                                                                                
***********************************************************************         
* CALCULATE THE MOST SHALLOW AND DEEPEST LEAF OF RIGHT (HIGH) BRANCH            
***********************************************************************         
         USING SI1PARD,R2                                                       
HILEAF   NTR1                                                                   
*                                                                               
         OC    HILOW,HILOW                                                      
         BNZ   *+10                                                             
         MVC   HILOW,DEPTH         FIRST TIME, THIS MUST MOST SHALLOW           
*                                                                               
         OC    HIDEEP,HIDEEP       FIRST TIME, THIS MUST BE DEEPEST             
         BNZ   *+10                                                             
         MVC   HIDEEP,DEPTH                                                     
*                                                                               
HIL10    L     R2,TARGET                                                        
         OC    SI1LTP,SI1LTP       IS THIS A LEAF? (NO CHILDREN)                
         BNZ   HILX                                                             
         OC    SI1RTP,SI1RTP                                                    
         BNZ   HILX                                                             
*                                                                               
         CLC   DEPTH,HIDEEP        LEAF DEEPER THAN OTHERS?                     
         BNH   *+10                NO                                           
         MVC   HIDEEP,DEPTH                                                     
*                                                                               
         CLC   DEPTH,HILOW         LEAF MORE SHALLOW THAN OTHERS?               
         BNL   *+10                NO                                           
         MVC   HILOW,DEPTH                                                      
*                                                                               
HILX     B     EXITOK                                                           
         DROP  R2                                                               
                                                                                
***********************************************************************         
*                                                                               
*   ROTATION OPERATIONS FOR A BINARY SEARCH TREE                                
*                                                                               
*   TERMINOLOGY USED FOR THE ROTATION OF BINARY SEARCH TREE NODES               
*      ROOT   = THE NODE THAT IS TARGETED FOR ROTATION                          
*      PARENT = THE PARENT NODE OF THE ROOT NODE                                
*      PIVOT  = THE NODE THAT IS REPLACING THE ROOT NODE                        
*      LEFT   = THE LEFT NODE OF THE PIVOT NODE                                 
*      RIGHT  = THE RIGHT NODE OF THE PIVOT NODE                                
*                                                                               
*   ON ENTRY  TARGET= ROOT NODE TO BE ROTATED                                   
*             TRABASE= BASE ADDRESS USED FOR MEMORY DISPLACEMENTS               
*                                                                               
***********************************************************************         
* ROTATATION OF A TREE NODE TO THE LEFT (COUNTER-CLOCKWISE)                     
***********************************************************************         
ROOT     USING SI1PARD,R2         NODE TARGETED FOR ROTATION                    
PARENT   USING SI1PARD,R3         PARENT OF ROOT                                
PIVOT    USING SI1PARD,R4         RIGHT CHILD OF ROOT                           
LEFT     USING SI1PARD,R5         LEFT CHILD OF PIVOT                           
*                                                                               
LEFTROT  NTR1                                                                   
         OI    FLAG,ROTFLAG+ROTLEFT                                             
         NI    FLAG,X'FF'-ROTRIGHT                                              
*                                                                               
         L     R2,TARGET          ROOT                                          
         S     R2,TRABASE         GET DISPLACEMENT INTO MEMORY                  
         ST    R2,DROOT           DISPLACEMENT TO ROOT                          
         A     R2,TRABASE         A(ROOT)                                       
*                                                                               
         L     R3,ROOT.SI1PTP     PARENT                                        
         ST    R3,DPARENT         DISPLACEMENT TO PARENT                        
         A     R3,TRABASE         A(PARENT)                                     
*                                                                               
         L     R4,ROOT.SI1RTP     RIGHT CHILD OF ROOT IS THE PIVOT              
         ST    R4,DPIVOT          DISPLACEMENT TO PIVOT                         
         A     R4,TRABASE         A(PIVOT)                                      
*                                                                               
         L     R5,PIVOT.SI1LTP    LEFT CHILD OF PIVOT                           
         ST    R5,DLEFT           DISPLACEMENT TO PARENT                        
         A     R5,TRABASE         A(LEFT)                                       
*                                                                               
         OC    DPARENT,DPARENT    ROTATION ROOT THE ROOT OF TREE?               
         BNZ   LR010              NO                                            
*                                                                               
         L     R1,TRAHEAD         A(RESOURCE HEADER)                            
         AH    R1,TRDROOT         DISPLACEMENT IN HEADER TO TREE ROOT           
         MVC   0(4,R1),DPIVOT     SET TREE ROOT TO PIVOT                        
         B     LR020                                                            
*                                                                               
LR010    CLC   PARENT.SI1LTP,DROOT   ROOT LOWER OR HIGHER THAN PARENT           
         BNE   *+14                                                             
         MVC   PARENT.SI1LTP,DPIVOT  PIVOT NOW PARENT LEFT                      
         B     *+10                                                             
         MVC   PARENT.SI1RTP,DPIVOT  PIVOT IS NOW PARENT RIGHT                  
*                                                                               
LR020    MVC   PIVOT.SI1PTP,DPARENT  PIVOT NOW HAS NEW PARENT                   
         MVC   PIVOT.SI1LTP,DROOT    PIVOT LEFT NOW POINTS TO OLD ROOT          
*                                                                               
         MVC   ROOT.SI1PTP,DPIVOT    ROOT PARENT IS NOW THE PIVOT               
         MVC   ROOT.SI1RTP,DLEFT                                                
*                                                                               
         OC    DLEFT,DLEFT           DID PIVOT HAVE A LEFT                      
         BZ    *+10                  NO                                         
         MVC   LEFT.SI1PTP,DROOT     LEFT'S PARENT IS OLD ROOT                  
*                                                                               
         L     R1,DEPTH                                                         
         AHI   R1,1                                                             
         ST    R1,DEPTH              TARGET JUST GOT A LITTE DEEPER             
*                                                                               
         B     EXITOK                                                           
         DROP  ROOT,PARENT,PIVOT,LEFT                                           
         EJECT                                                                  
                                                                                
***********************************************************************         
* ROTATATION OF A TREE NODE TO THE RIGHT (CLOCKWISE)                            
***********************************************************************         
ROOT     USING SI1PARD,R2         NODE TARGETED FOR ROTATION                    
PARENT   USING SI1PARD,R3         PARENT OF ROOT                                
PIVOT    USING SI1PARD,R4         LEFT CHILD OF ROOT                            
RIGHT    USING SI1PARD,R5         RIGHT CHILD OF PIVOT                          
*                                                                               
RIGHTROT NTR1                                                                   
         OI    FLAG,ROTFLAG+ROTRIGHT                                            
         NI    FLAG,X'FF'-ROTLEFT                                               
*                                                                               
         L     R2,TARGET          ROOT                                          
         S     R2,TRABASE         GET DISPLACEMENT INTO MEMORY                  
         ST    R2,DROOT           DISPLACEMENT TO ROOT                          
         A     R2,TRABASE         A(ROOT)                                       
*                                                                               
         L     R3,ROOT.SI1PTP     PARENT                                        
         ST    R3,DPARENT         DISPLACEMENT TO PARENT                        
         A     R3,TRABASE         A(PARENT)                                     
*                                                                               
         L     R4,ROOT.SI1LTP     LEFT CHILD OF ROOT IS THE PIVOT               
         ST    R4,DPIVOT          DISPLACEMENT TO PIVOT                         
         A     R4,TRABASE         A(PIVOT)                                      
*                                                                               
         L     R5,PIVOT.SI1RTP    RIGHT CHILD OF PIVOT                          
         ST    R5,DRIGHT          DISPLACEMENT TO PARENT                        
         A     R5,TRABASE         A(LEFT)                                       
*                                                                               
         OC    DPARENT,DPARENT    ROTATION ROOT THE ROOT OF TREE?               
         BNZ   RR010              NO                                            
*                                                                               
         L     R1,TRAHEAD         A(RESOURCE HEADER)                            
         AH    R1,TRDROOT         DISPLACEMENT IN HEADER TO TREE ROOT           
         MVC   0(4,R1),DPIVOT     SET TREE ROOT TO PIVOT                        
         B     RR020                                                            
*                                                                               
RR010    CLC   PARENT.SI1LTP,DROOT   ROOT LOWER OR HIGHER THAN PARENT           
         BNE   *+14                                                             
         MVC   PARENT.SI1LTP,DPIVOT  PIVOT NOW PARENT LEFT                      
         B     *+10                                                             
         MVC   PARENT.SI1RTP,DPIVOT  PIVOT IS NOW PARENT RIGHT                  
*                                                                               
RR020    MVC   PIVOT.SI1PTP,DPARENT  PIVOT NOW HAS NEW PARENT                   
         MVC   PIVOT.SI1RTP,DROOT    PIVOT RIGHT NOW POINTS TO OLD ROOT         
*                                                                               
         MVC   ROOT.SI1PTP,DPIVOT    ROOT PARENT IS NOW THE PIVOT               
         MVC   ROOT.SI1LTP,DRIGHT    ROOT LEFT IS OLD PIVOT'S RIGHT             
*                                                                               
         OC    DRIGHT,DRIGHT         DID PIVOT HAVE A RIGHT                     
         BZ    *+10                  NO                                         
         MVC   RIGHT.SI1PTP,DROOT    RIGHT'S PARENT IS OLD ROOT                 
*                                                                               
         L     R1,DEPTH                                                         
         AHI   R1,1                                                             
         ST    R1,DEPTH              TARGET JUST GOT A LITTE DEEPER             
*                                                                               
RIGHTX   B     EXITOK                                                           
         DROP  ROOT,PARENT,PIVOT,RIGHT                                          
         EJECT                                                                  
                                                                                
***********************************************************************         
* EXITS AND COMMON STORAGE                                                      
***********************************************************************         
COMMON   DS    0D                                                               
*                                                                               
EXITHI   LHI   RF,2                                                             
         B     EXITCC                                                           
EXITLO   LHI   RF,0                                                             
         B     EXITCC                                                           
EXITOK   LHI   RF,1                                                             
EXITCC   CHI   RF,1                                                             
EXIT     XIT1                                                                   
*                                                                               
SPACES   DC    80C' '                                                           
*                                                                               
PACK0    DC    P'0'                                                             
PACK1    DC    P'1'                                                             
*                                                                               
GETMAX   DC    P'130000'  NO MORE THAN 100,000 GETS                             
DEEPMAX  DC    P'100000'  NO MORE THAN 100,000 GETS TO CALCULATE DEPTH          
ROTAMAX  DC    P'65000'   NO MORE THAN 65,000 ROTATIONS                         
LOOPMAX  DC    P'50'      NO MORE THAN 50 RESTARTS                              
*                                                                               
         LTORG                                                                  
                                                                                
***********************************************************************         
* WORKING STORAGE                                                               
***********************************************************************         
WORKD    DSECT                                                                  
DUB      DS    D                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    C                                                                
FLAG     DS    X                                                                
NXTFLAG  EQU   X'40'     GET NEXT NODE IN ORDER                                 
ROTFLAG  EQU   X'08'     ROTATION PERFORMED                                     
ROTLEFT  EQU   X'04'     LEFT ROTATION JUST PERFORMED                           
ROTRIGHT EQU   X'02'     RIGHT ROTATION JUST PERFORMED                          
*                                                                               
APARMS   DS    A                                                                
PARMS    DS    0A                                                               
AACT     DS    A         A(ACTION)                                              
ATREEBLK DS    A         A(TREE STRUCTURE BLOCK)                                
PARMSX   EQU   *                                                                
*                                                                               
NODE     DS    A                                                                
TARGET   DS    A         A(TARGET NODE)                                         
RESULT   DS    A         A(RESULT NODE)                                         
*                                                                               
NODEKEY  DS    CL40                                                             
TARKEY   DS    CL40      TARGET KEY                                             
RESKEY   DS    CL40      RESULT KEY                                             
LOKEY    DS    CL40      LOW KEY                                                
HIKEY    DS    CL40      HIGH KEY                                               
*                                                                               
DEPTH    DS    F         DEPTH OF TARGET/RESULT NODE IN THE TREE                
NODEEP   DS    F         DEPTH OF MAIN NODE                                     
LOLOW    DS    F         LOW DEPTH MARK FOR LEAF OF LEFT TREE BRANCH            
HILOW    DS    F         LOW DEPTH MARK FOR LEAF OF RIGHT TREE BRANCH           
LODEEP   DS    F         HIGH DEPTH MARK FOR LEAF OF LEFT TREE BRANCH           
HIDEEP   DS    F         HIGH DEPTH MARK FOR LEAF OF RIGHT TREE BRANCH          
*                                                                               
DPARENT  DS    F         DISPLACEMENT IN MEMORY TO PARENT OF ROOT               
DROOT    DS    F                                TO ROOT NODE                    
DPIVOT   DS    F                                TO PIVOT NODE                   
DLEFT    DS    F                                TO LEFT CHILD OF PIVOT          
DRIGHT   DS    F                                TO RIGHT CHILD OF PIVOT         
*                                                                               
TREEMAX  DS    PL8       MAXIMUM NUMBER OF NODES IN TREE                        
*                                                                               
LOOPCNT1 DS    PL8                                                              
LOOPCNT2 DS    PL8                                                              
LOOPCNT3 DS    PL8                                                              
LOOPCNT4 DS    PL8                                                              
LOOPCNT5 DS    PL8                                                              
LOOPCNT6 DS    PL8                                                              
LOOPCNT7 DS    PL8                                                              
LOOPCNT8 DS    PL8                                                              
LOOPCNT9 DS    PL8                                                              
LOOPCNT0 DS    PL8                                                              
*                                                                               
MSGW     DS    0CL82               WTO OUTPUT MESSAGE                           
MSGWLEN  DS    XL2                                                              
MSGWTXT  DS    0CL80                                                            
MSGWMSG  DS    CL40                WTO INFORMATION MESSAGE                      
MSGWDET  DS    CL40                WTO INFORMATION DETAIL                       
*                                                                               
WORK     DS    CL64                                                             
*                                                                               
WORKL    EQU   *-WORKD                                                          
*                                                                               
***********************************************************************         
* INCLUDES                                                                      
***********************************************************************         
       ++INCLUDE DDTREED                                                        
       ++INCLUDE SHFID                                                          
*                                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'006DDTREE    04/18/14'                                      
         END                                                                    
