*          DATA SET TABISPLT   AT LEVEL 040 AS OF 03/19/14                      
*CATALP TABISPLT                                                                
*                                                                               
         TITLE 'TABISPLIT- TALENT BILLING - SPLIT ROUTINES'                     
*                                                                               
*        PARMS                                                                  
*              P1        - RC                                                   
*              P2 BYTE 3 - ROUTINE EQUATE                                       
*                                                                               
TABISPLT CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 0,TABISPLT                                                       
         L     RC,0(R1)                                                         
         USING GEND,RC                                                          
         L     R8,ASPOOLD                                                       
         USING SPOOLD,R8                                                        
         L     R9,ASUBSYSD         SYSTEM SPECIFIC WORK                         
         USING SUBSYSD,R9                                                       
         LA    RA,BUFF             BILL DSECT                                   
         LA    RA,8(RA)                                                         
         USING BILLD,RA                                                         
         EJECT                                                                  
*                                                                               
*        DECIDE WHAT ROUTINE TO GO TO                                           
*                                                                               
         CLI   7(R1),EINVPST       DO INVOICE POSTINGS                          
         BE    INVPST                                                           
*                                                                               
         TM    TBSTA2,TAINSPRM     IF PRIMARY INVOICE                           
         BNO   SPLITX                                                           
         GOTO1 EXTRCT,DMCB,(RC)    AND NOT EXTRACTING                           
         BE    SPLITX                                                           
*                                                                               
         CLI   7(R1),EGETSI        GET INFO FROM TASI ELEM INTO TABLE           
         BE    GETSI                                                            
         CLI   7(R1),ESETPCIF      SET PROD CLI INT INFO IN TABLE               
         BE    SETPCSUB                                                         
         CLI   7(R1),EINVNUM       GET SUBSIDIARY INVOICE NUMBERS               
         BE    INVNUM                                                           
         CLI   7(R1),EADDCKS       ADD SUBSIDIARY CHECK RECORDS                 
         BE    ADDCKS                                                           
         CLI   7(R1),EADDIVS       ADD SUBSIDIARY INVOICE RECORDS               
         BE    ADDIVS                                                           
         DC    H'0'                                                             
SPLITX   B     XIT                                                              
         SPACE 1                                                                
         EJECT                                                                  
*        GETS INFORMATION FROM SUBSIDIARY INVOICE ELEMENTS                      
*        AND SETS IN SITAB TABLE                                                
         SPACE                                                                  
GETSI    DS    0H                                                               
         SR    R2,R2               COUNT OF N'ENTRIES IN TABLE                  
         L     R6,=V(SITAB)        SUBSIDIARY INVOICE TABLE                     
         USING SITABD,R6                                                        
         L     R3,AIO                                                           
         MVI   ELCODE,TASIELQ      GET ELEMENT                                  
         USING TASID,R3                                                         
         BAS   RE,GETEL                                                         
         B     *+8                                                              
GETSI10  BAS   RE,NEXTEL                                                        
         BNE   GETSIX                                                           
*        MVC   SITBPCT,TASIPCT     SET PERCENTAGE                               
         MVC   SITBPCT3,TASIPCT3   SET PERCENTAGE                               
         MVC   SITBSTAT,TASISTAT   AND STATUS                                   
         MVC   SITBEST,SPACES                                                   
         ZIC   R1,TASILEN                                                       
         SH    R1,=Y(TASILNQ+1)                                                 
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   SITBEST(0),TASIEST  AND ESTIMATE NUMBER                          
         LA    R6,SITBLEN(R6)      NEXT TABLE ENTRY                             
         LA    R2,1(R2)            INCREMENT COUNT                              
         B     GETSI10             LOOP                                         
*                                                                               
GETSIX   STC   R2,TBSICNT          SAVE COUNT                                   
         B     XIT                                                              
         DROP  R3,R6                                                            
         EJECT                                                                  
*        SAVE PRODUCTION CLIENT INTERFACE INFORMATION FOR                       
*        EACH ESTIMATE NUMBER                                                   
         SPACE                                                                  
SETPCSUB DS    0H                                                               
         MVC   SVEST,TBEST         SAVE ESTIMATE NUMBER                         
         MVC   SVIFCLR,IFCLR       SAVE PROD CLI INT INFO                       
*                                                                               
         ZIC   R2,TBSICNT          NUMBER OF SUBSIDIARY INVOICES                
         L     R6,=V(SITAB)        R6=A(SPLIT TABLE)                            
         USING SITABD,R6                                                        
SETPCS5  MVC   TBEST,SITBEST                                                    
         GOTO1 SETPCIF,DMCB,(RC)                                                
         MVC   SITBIFC,IFCLR                                                    
         LA    R6,SITBLEN(R6)      NEXT TABLE ENTRY                             
         BCT   R2,SETPCS5                                                       
*                                                                               
         MVC   TBEST,SVEST         RESET ESTIMATE NUMBER                        
         MVC   IFCLR,SVIFCLR       RESET PROD CLI INT INFO                      
         MVC   TGPCLI(3),TBEST     SET PRODUCTION CLIENT                        
         B     XIT                                                              
         DROP  R6                                                               
         EJECT                                                                  
*        GETS NUMBERS FOR SUBSIDIARY INVOICES                                   
         SPACE                                                                  
INVNUM   DS    0H                                                               
         MVC   TEMP,TGINV          SAVE PRIMARY INVOICE NUMBER                  
         MVC   AIO,=V(AREA)        SET IOAREA                                   
         GOTO1 RECVAL,DMCB,TLAYCDQ,(X'20',0) READ AGENCY RECORD                 
         BE    *+6                                                              
         DC    H'0'                                                             
         MVI   DUMMYHDR,8+6        SET LENGTH OF DUMMY HEADER                   
         ZIC   RE,TBSICNT          NEW INVOICE NUMBERS NEEDED                   
         CVD   RE,DUB                                                           
         GOTO1 CHNINV,DMCB,DUB+6,DUMMYHDR                                       
         BE    *+6                                                              
         DC    H'0'                                                             
         MVC   PINVNUM,6(R1)       SAVED PACKED INVOICE NUMBER                  
         MVC   AIO,AIO1            RESET IOAREA                                 
*                                                                               
         ZIC   R2,TBSICNT          NUMBER OF SUBSIDIARY INVOICES                
         L     R6,=V(SITAB)                                                     
         USING SITABD,R6                                                        
         L     R3,AIO              R3=A(PRIMARY INVOICE RECORD)                 
         USING TASID,R3                                                         
         MVI   ELCODE,TASIELQ      GET SUBSIDIARY INVOICE ELEMENT               
         BAS   RE,GETEL                                                         
         B     *+8                                                              
INVNUM5  BAS   RE,NEXTEL                                                        
         BE    *+6                                                              
         DC    H'0'                MUST HAVE IT                                 
         MVC   SITBINV,TGINV       SET BASE INVOICE NUMBER                      
         XC    SITBINV,COMPLM3     KEEP UNCOMPLEMENTED INVOICE NUMBER           
         MVO   TFULL(3),PINVNUM                                                 
         MVC   SITBINV+3(2),TFULL  SET INVOICE NUMBER IN TABLE                  
         MVC   TASIINV,SITBINV     AND IN ELEMENT                               
         AP    PINVNUM,=P'1'       NEXT INVOICE NUMBER                          
         LA    R6,SITBLEN(R6)      BUMP TO NEXT TABLE ENTRY                     
         BCT   R2,INVNUM5          LOOP                                         
         MVC   TGINV,TEMP          RESET PRIMARY INVOICE NUMBER                 
         B     XIT                                                              
         DROP  R3,R6                                                            
         EJECT                                                                  
*        ADD CHECK RECORDS FOR SUBSIDIARY INVOICE NUMBERS                       
*        AND CALL TABIPOST TO BUFFER POSTINGS                                   
         SPACE 1                                                                
ADDCKS   DS    0H                                                               
         BRAS  RE,CLRCUM           CLEAR CUMMULATIVE AREAS                      
         MVC   AIO,=V(AREA)        SET IOAREA                                   
         MVC   TEMP,TGINV          SAVE GLOBAL INVOICE NUMBER                   
         MVC   SVIFCLR,IFCLR       SAVE PROD CLIENT INTERFACE INFO              
*                                                                               
         ZIC   R2,TBSICNT          N'ENTRIES                                    
         L     R6,=V(SITAB)        R6=A(SUBSIDIARY INVOICE TABLE)               
         USING SITABD,R6                                                        
         L     R7,ATHISCHK         CURRENT PRIMARY CHECK                        
         USING TABCHKD,R7                                                       
***      MVC   SVTAB,TABCHKD       SAVE ORIGINAL AMOUNTS                        
         LA    RE,TABCHKD          RE=A(DATA TO MOVE FROM)                      
         LA    R0,SVTAB            R0=A(DATA TO MOVE TO)                        
         LHI   R1,TABLEN           R1 AND RF = LENGTH TO MOVE                   
         LR    RF,R1                                                            
         MVCL  R0,RE               SAVE ORIGINAL AMOUNTS IN SVTAB               
*                                                                               
ADDCKS10 STC   R2,CURINV           CURRENT ENTRY IN TABLE                       
         MVC   TGINV,SITBINV       SET INVOICE NUMBER(UNCOMPLEMENTED)           
         MVC   TFULL,SITBPCT       PERCENTAGE OF TOTAL AMOUNT                   
         MVI   TFULL,0                                                          
         MVC   IFCLR,SITBIFC       SET PROD CLIENT INTERFACE                    
*                                                                               
         MVI   BYTE,1                                                           
         BAS   RE,ADJTABLE         ADJUST TABLE TO SUB PORTION                  
*                                                                               
         GOTO1 RECVAL,DMCB,TLCKCDQ,(X'C0',0) BUILD THE KEY                      
         L     R4,AIO              R4=A(SUBSIDIARY INVOICE RECORD)              
         USING TLCKD,R4                                                         
         MVC   TLCKKEY,KEY         INITIALIZE RECORD                            
         MVC   TLCKLEN,DATADISP                                                 
         XC    TLCKSTAT(7),TLCKSTAT                                             
*                                                                               
         MVI   RECTYP,C'C'                                                      
         BAS   RE,SETELEM          PROCESS CHECK ELEMENTS                       
         BRAS  RE,ADDTANU          ADD TANU ELEMENT(S)                          
*                                                                               
         MVI   ELCODE,TACNELQ      DELETE CHECK/PULL/STOP CANCEL                
         GOTO1 REMELEM                                                          
         MVI   ELCODE,TAKPELQ      CHECK/STOP                                   
         GOTO1 REMELEM                                                          
         MVI   ELCODE,TAKLELQ      AND CHECK/PULL ELEMENTS                      
         GOTO1 REMELEM                                                          
*                                                                               
         GOTO1 AMYTRACE,DMCB,(RC),=C'SUBSIDIARY CHECK',AIO,0                    
         BRAS  RE,ADDIT            ADD SUBSIDIARY CHECKS                        
         MVI   BYTE,0                                                           
         TM    TBOPTS,TBTRACE                                                   
         BNO   *+8                                                              
         MVI   BYTE,X'10'                                                       
         L     R1,ASPBLK                                                        
         XC    0(L'TLDRREC+1,R1),0(R1)                                          
         GOTO1 AADDPTRS,DMCB,(BYTE,ASPBLK)                                      
*                                                                               
         BAS   RE,ADDFTAB          ADD TO TABLE OF INV AMTS TO FORCE            
*                                                                               
         CLI   INTFACE,C'N'        IF ON INTERFACE                              
         BE    ADDCKS50                                                         
* NO-OP  MVI   TBPRERUN,C'N'       NOT RERUN/POSTINGS                           
         TM    TBISTAT,TAPDSCAN    IF THIS IS A CANADIAN PAYMENT                
         BNO   ADDCKS40                                                         
         GOTO1 ACVTTAB,DMCB,TABCHKD CONVERT CAN$ TO US$ IN TABLE                
ADDCKS40 OI    STAT3,STSPTAOS      SET SPLIT AOS STATUS                         
         GOTO1 =V(TABIPOST),DMCB,(RC),ECKPOST,TABCHKD                           
*                                                                               
ADDCKS50 TM    TBISTAT,TAPDSCAN    IF THIS IS A CANADIAN PAYMENT                
         BNO   ADDCKS60                                                         
***      MVC   TABCHKD(TABLEN),SVTAB  RESTORE ORIGINAL AMOUNTS                  
         LA    RE,SVTAB            RE=A(DATA TO MOVE FROM)                      
         LA    R0,TABCHKD          R0=A(DATA TO MOVE TO)                        
         LHI   R1,TABLEN           R1 AND RF = LENGTH TO MOVE                   
         LR    RF,R1                                                            
         MVCL  R0,RE               RESTORE ORIGINAL AMOUNTS                     
*                                                                               
         GOTO1 ACVTTAB,DMCB,TABCHKD   CONVERT CAN$ TO US$ IN TABLE              
         MVI   BYTE,2                 SECOND TIME TABLE ADJUSTMENT              
         BAS   RE,ADJTABLE            ADJUST TABLE AGAIN                        
*                                                                               
ADDCKS60 BAS   RE,CLCFTOT             CALCULATE TOTAL IN US$                    
***      MVC   TABCHKD(TABLEN),SVTAB  RESTORE ORIGINAL AMOUNTS                  
         LA    RE,SVTAB            RE=A(DATA TO MOVE FROM)                      
         LA    R0,TABCHKD          R0=A(DATA TO MOVE TO)                        
         LHI   R1,TABLEN           R1 AND RF = LENGTH TO MOVE                   
         LR    RF,R1                                                            
         MVCL  R0,RE               RESTORE ORIGINAL AMOUNTS                     
*                                                                               
         LA    R6,SITBLEN(R6)      BUMP TO NEXT SUBSIDIARY INVOICE              
         BCT   R2,ADDCKS10         LOOP                                         
*                                                                               
         MVC   TGINV,TEMP          RESET GLOBAL INVOICE NUMBER                  
         MVC   SVIFCLR,IFCLR       RESET PROD CLIENT INTERFACE INFO             
         B     XIT                                                              
         DROP  R4,R6                                                            
         EJECT                                                                  
*              ADJUSTS TABLE AMOUNTS (TABD & TAPD AMOUNTS)                      
*              TO SUBSIDIARY PORTION                                            
*                                  TFULL=PERCENTAGE                             
ADJTABLE NTR1                                                                   
*                                  ADJUST TAPD AMOUNTS IN TABLE                 
         LA    R2,TABGRS           AMOUNTS                                      
         LA    R3,TABPDL                                                        
         SRA   R3,2                N'AMOUNTS                                    
         L     R4,=V(CUMPDAMT)                                                  
         CLI   BYTE,1                                                           
         BE    *+8                                                              
         L     R4,=V(CUMPDAM2)                                                  
         BAS   RE,ADJUST                                                        
*                                  ADJUST TABD AMOUNTS IN TABLE                 
         LA    R2,TABTAX           AMOUNTS                                      
         LA    R3,TABBDL                                                        
         SRA   R3,2                N'AMOUNTS                                    
         L     R4,=V(CUMBDAMT)                                                  
         CLI   BYTE,1                                                           
         BE    *+8                                                              
         L     R4,=V(CUMBDAM2)                                                  
         BAS   RE,ADJUST                                                        
*                                                                               
         OC    ACURTAPG,ACURTAPG   IF TAPG ELEMENT IS PRESENT                   
         BZ    XIT                 ADJUST TAPG AMOUNTS IN TABLE                 
         L     RE,ACURTAPG                                                      
         MVC   SVPGEL,0(RE)                                                     
*                                                                               
         USING TAPGD,RE                                                         
         LA    RE,SVPGEL                                                        
         LA    R2,TAPGHNDI         AMOUNTS                                      
         LA    R3,TAPGEND-TAPGHNDI                                              
         SRA   R3,2                N'AMOUNTS                                    
         L     R4,=V(CUMPGAMT)                                                  
         CLI   BYTE,1                                                           
         BE    *+8                                                              
         L     R4,=V(CUMPGAM2)                                                  
         BAS   RE,ADJUST                                                        
         B     XIT                                                              
         DROP  RE                                                               
         SPACE 2                                                                
*              CALCULATES PORTION GIVEN AMOUNTS                                 
*              IF LAST PORTION FORCES AMOUNTS (SUM OF PARTS EQ WHOLE)           
*                                  R2=A(AMOUNTS TO ADJUST)                      
*                                  R3=NUMBER OF AMOUNTS                         
*                                  R4=(CUMMULATIVE AREA)                        
*                                  TFULL=PERCENTAGE                             
         SPACE                                                                  
ADJUST   NTR1                                                                   
         CLI   CURINV,1            IF LAST INVOICE TO SPLIT                     
         BNE   ADJ5                                                             
         GOTO1 SUBTOT,DMCB,(R2),(R4),(R3)                                       
         SLA   R3,2                 L'AMOUNTS                                   
         BCTR  R3,0                                                             
         EX    R3,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R2),0(R4)       SET REMAINDER INTO TABLE                     
         B     ADJUSTX                                                          
*                                                                               
*                                                                               
ADJ5     STH   R3,HALF             OTHERWISE, SAVE N'AMOUNTS                    
         LR    R0,R2               AND A(AMOUNTS TO ADJUST)                     
ADJ10    GOTOR CALPCT,DMCB,0(R2)   GET SUBISIDIARY PORTION                      
         LA    R2,4(R2)            BUMP TO NEXT AMOUNT                          
         BCT   R3,ADJ10            LOOP                                         
*                                  ADD TO CUMMULATIVE TOTAL                     
         LR    R2,R0               RESET A(AMOUNTS)                             
         LH    R3,HALF             RESET N'AMOUNTS                              
         GOTO1 ADDTOT,DMCB,(R2),(R4),(R3)                                       
ADJUSTX  B     XIT                                                              
         EJECT                                                                  
*              ADD ADJUSTED SUBSIDIARY PORTION TO                               
*              TABLE OF INVOICE AMOUNTS TO FORCE                                
         SPACE                                                                  
ADDFTAB  NTR1                                                                   
         MVI   TGBYTE,C'N'         OK TO ADD NEW ENTRY                          
         BAS   RE,GETFRCTB         GET FORCE TABLE ENTRY FOR THIS INV           
         USING FRCTBLD,R6                                                       
*                                                                               
         MVC   FRCTBINV,TGINV                                                   
*                                                                               
         CLI   TABACDE,APPLWSPU    IF THIS IS A WILDSPOT UPGRADE                
         BE    *+12                                                             
         CLI   TABACDE,APPLCAB     OR CABLE                                     
         BNE   *+10                                                             
         XC    TABAPPL,TABAPPL     IGNORE APPLIED AMOUNT FOR INVOICE            
*                                                                               
         LA    R2,TABGRS                                                        
         LA    R3,TABPDL                                                        
         SRA   R3,2                                                             
         GOTO1 ADDTOT,DMCB,(R2),FRCTBPD,(R3)                                    
*                                                                               
         LA    R2,TABTAX                                                        
         LA    R3,TABBDL                                                        
         SRA   R3,2                                                             
         GOTO1 ADDTOT,DMCB,(R2),FRCTBBD,(R3)                                    
                                                                                
         OC    ACURTAPG,ACURTAPG                                                
         BZ    XIT                                                              
         OC    FRCTBPG,FRCTBPG                                                  
         BNZ   XIT                                                              
         LA    R2,SVPGEL+TAPGHNDI-TAPGD                                         
         LA    R3,TAPGEND-TAPGHNDI                                              
         SRA   R3,2                                                             
         GOTO1 ADDTOT,DMCB,(R2),FRCTBPG,(R3)                                    
         B     XIT                                                              
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
*              CALUCATE TOTAL IN US DOLLARS FOR LATER POSTINGS                  
*              AND FOR LATER FORCE OF TABDTOT IN INVOICE RECORD                 
         SPACE                                                                  
CLCFTOT  NTR1                                                                   
         MVI   TGBYTE,C'Y'         SET MUST FIND ENTRY                          
         BAS   RE,GETFRCTB         GET FORCE TABLE ENTRY FOR THIS INV.          
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
         BRAS  RE,CFTOT                                                         
         B     XIT                                                              
         DROP  R6                                                               
         EJECT                                                                  
*        ADD INVOICE RECORDS FOR SUBSIDIARY INVOICE NUMBERS                     
         SPACE 1                                                                
ADDIVS   DS    0H                                                               
         BRAS  RE,CLRCUM           CLEAR CUMMULATIVE AREAS                      
         MVC   TEMP,TGINV          SAVE GLOBAL INVOICE NUMBER                   
         MVC   SVIFCLR,IFCLR       SAVE PROD CLIENT INTERFACE INFO              
         MVC   AIO,=V(AREA)        IO AREA FOR NEW RECORD                       
         ZIC   R2,TBSICNT          N'ENTRIES                                    
         L     R6,=V(SITAB)        R6=A(SUBSIDIARY INVOICE TABLE)               
         USING SITABD,R6                                                        
*                                                                               
ADDIVS10 STC   R2,CURINV           SET CURRENT ENTRY                            
         MVC   IFCLR,SITBIFC       SET PROD CLIENT INTERFACE INFO               
         MVC   TGINV,SITBINV       SET SUBSIDIARY INVOICE NUMBER                
         XC    TGINV,COMPLM3       COMPLEMENT FOR READ                          
         GOTO1 RECVAL,DMCB,TLINCDQ,(X'C0',0) BUILD THE KEY                      
         XC    TGINV,COMPLM3       UN-COMPLEMENT IT BACK                        
         L     R4,AIO              R4=A(SUBSIDIARY INVOICE RECORD)              
         USING TLIND,R4                                                         
         MVC   TLINKEY,KEY         INITIALIZE RECORD                            
         MVC   TLINLEN,DATADISP                                                 
         XC    TLINSTAT(7),TLINSTAT                                             
*                                                                               
         MVC   TFULL,SITBPCT       PERCENTAGE OF TOTAL AMOUNT                   
         MVI   TFULL,0                                                          
         MVI   RECTYP,C'I'                                                      
         BAS   RE,SETELEM          PROCESS INVOICE ELEMENTS                     
         BRAS  RE,FIXBD4AM         FIX CAN$ BILLING DETAILS TOTAL               
         BRAS  RE,ADDTANU          ADD TANU ELEMENT(S)                          
         BRAS  RE,BRKPST           BREAK UP PST                                 
         GOTO1 =V(TABIPOST),DMCB,(RC),EINVLVL  MAKE INV LVL INTERACE            
*                                                           POSTINGS            
         BRAS  RE,RESETPST         RESET PST                                    
         BAS   RE,ADDINV           ADD THE INVOICE                              
         LA    R6,SITBLEN(R6)      BUMP TO NEXT TABLE ENTRY                     
         BCT   R2,ADDIVS10         LOOP                                         
         MVC   TGINV,TEMP          RESET GLOBAL INVOICE NUMBER                  
         MVC   SVIFCLR,IFCLR       RESET PROD CLIENT INTERFACE INFO             
         B     XIT                                                              
         DROP  R4,R6                                                            
         EJECT                                                                  
*              ADD SUBSIDIARY INVOICE RECORDS TO FILE                           
         SPACE                                                                  
ADDINV   NTR1                                                                   
         GOTO1 AMYTRACE,DMCB,(RC),=C'SUBSIDIARY INVOICE',AIO,0                  
*                                                                               
         TM    TBOPTS2,TBFIXINV+TBWRYES    IF FIXING INVOICES                   
         BNO   ADDI20              & ACTUALLY WRITING TO THE FILE               
         USING T703FFD,R3                                                       
         L     R3,ATWA                                                          
         MVI   TWAWRITE,C'Y'       SET WRITE = Y IN TWA FOR FIX                 
*                                                                               
ADDI20   BRAS  RE,ADDIT            ADD THE RECORD                               
         TM    TBOPTS2,TBFIXINV+TBWRYES    IF FIXING INVOICES                   
         BNO   *+8                         & ACTUALLY WROTE TO THE FILE         
         MVI   TWAWRITE,C'N'               SET WRITE BACK TO NO                 
*                                                                               
         MVI   BYTE,X'04'                                                       
         TM    TBOPTS,TBTRACE      (CHECK FOR TRACE)                            
         BNO   *+8                                                              
         MVI   BYTE,X'14'                                                       
         TM    TBOPTS2,TBFIXINV+TBWRYES    IF FIXING INVOICES                   
         BNO   *+8                 & ACTUALLY WRITING TO THE FILE               
         MVI   TWAWRITE,C'Y'       SET WRITE = Y IN TWA FOR FIX                 
         LA    RF,TBILLD                                                        
         AHI   RF,INVPTRS-BILLD                                                 
         XC    0(255,RF),0(RF)     CLEAR INVPTRS                                
         GOTO1 AADDPTRS,DMCB,(BYTE,(RF))      ADD POINTERS                      
         TM    TBOPTS2,TBFIXINV+TBWRYES    IF FIXING INVOICES                   
         BNO   *+8                         & ACTUALLY WROTE TO THE FILE         
         MVI   TWAWRITE,C'N'               SET WRITE BACK TO NO                 
*                                                                               
ADDIX    B     XIT                                                              
         DROP  R3                                                               
         EJECT                                                                  
*        SETS ELEMENTS FOR SUBSIDIARY CHECK/INVOICE RECORD                      
*                                  R4 = A(SUBSIDIARY RECORD AREA)               
*                                  R6 = A(CURR SPLIT INV TABLE ENTRY)           
SETELEM  NTR1                                                                   
         AH    R4,DATADISP         R4=A(FIRST ELEMENT FOR ADD)                  
         L     R3,AIO2             R3=A(PRIMARY CHECK RECORD)                   
         CLI   RECTYP,C'C'                                                      
         BE    *+8                                                              
         L     R3,AIO1             R3=A(PRIMARY INVOICE RECORD)                 
         MVI   ELCODE,0                                                         
         BAS   RE,GETEL            PT TO FIRST ELEMENT                          
         B     *+8                                                              
SETEL5   BAS   RE,NEXTEL           PT TO NEXT ELEMENT                           
         BNE   SETELX                                                           
*                                                                               
         CLI   RECTYP,C'C'                                                      
         BNE   SETEL15                                                          
         LA    RE,CHKELTAB         CHECK ELEMENTS NOT TO ADD                    
SETEL10  CLC   0(1,R3),0(RE)                                                    
         BE    SETEL5              DON'T ADD ELEMENT TO RECORD                  
         LA    RE,1(RE)            BUMP NEXT ENTRY IN TABLE                     
         CLI   0(RE),X'FF'         IF NOT END OF TABLE                          
         BNE   SETEL10             LOOP                                         
*                                                                               
SETEL15  ZIC   R1,1(R3)            GET ELEMENT LENGTH                           
         BCTR  R1,0                MOVE ELEMENT                                 
         EX    R1,*+8              OVER TO NEW RECORD                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         CLI   0(R3),TAINELQ       IF TAIN ELEMENT                              
         BNE   *+12                                                             
         BRAS  RE,FIXTAIN          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAPDELQ       IF TAPD ELEMENT                              
         BNE   *+12                                                             
         BAS   RE,FIXTAPD          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAPGELQ       IF TAPG ELEMENT                              
         BNE   *+12                                                             
         BAS   RE,FIXTAPG          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAEUELQ       IF PAYMENT DETAILS (EUROS) ELEMENT           
         BNE   *+12                                                             
         BAS   RE,FIXTAEU          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAPDELQ4      IF PAYMENT DETAILS (CAN$) ELEMENT            
         BNE   *+12                                                             
         BAS   RE,FIXTAPD4         FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TABDELQ       IF TABD ELEMENT                              
         BNE   *+12                                                             
         BAS   RE,FIXTABD          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TABDELQ3      IF BILLING DETAILS (EUROS) ELEMENT           
         BNE   *+12                                                             
         BAS   RE,FIXTABD3         FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TABDELQ4      IF BILLING DETAILS (CAN$) ELEMENT            
         BNE   *+12                                                             
         BAS   RE,FIXTABD4         FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAXTELQ       IF BILLING DETAILS (CAN$) ELEMENT            
         BNE   *+12                                                             
         BRAS  RE,FIXTAXT          FIX IT                                       
         B     SETEL30                                                          
         CLI   0(R3),TAPAELQ       IF TAPA ELEMENT                              
         BNE   *+8                                                              
         BAS   RE,FIXTAPA          FIX IT                                       
*                                                                               
SETEL30  LA    R4,1(R1,R4)         BUMP TO NEXT OPEN SLOT IN SUB REC            
         B     SETEL5              GET NEXT PRIMARY ELEMENT                     
SETELX   MVI   0(R4),X'00'         MARK END OF RECORD                           
         L     R1,AIO              SET RECORD LENGTH                            
         USING TLRCD,R1                                                         
         SR    R4,R1                                                            
         STH   R4,TLRCLEN                                                       
         B     XIT                                                              
         DROP  R1                                                               
         EJECT                                                                  
*        IF CHECK- FIX AMOUNTS, IF INVOICE - FORCE AMOUNTS                      
         SPACE                                                                  
         USING TAPDD,R4                                                         
         USING SITABD,R6                                                        
FIXTAPD  NTR1                                                                   
         MVC   TAPDINV,SITBINV     SET NEW INVOICE NUMBER                       
         CLI   RECTYP,C'C'         IF CHECK RECORD                              
         BNE   FIXTAPD5                                                         
         NI    TAPDSTA2,X'FF'-TAPDSPRM   TURN OFF PRIMARY STATUS &              
         OI    TAPDSTA2,TAPDSSUB         INDICATE SUBSIDIARY RECORD             
         MVC   TAPDAMTS(TABPDL),TABGRS   SET AMOUNTS                            
         MVC   TAPDNTNW,TAPDREXP                                                
         B     FIXTAPDX                                                         
*                                                                               
FIXTAPD5 BAS   RE,FRCTAPD          OTHERWISE, FORCE AMOUNTS IN ELEMENT          
FIXTAPDX B     XIT                                                              
         DROP  R4,R6                                                            
         SPACE 3                                                                
*        IF CHECK- FIX AMOUNTS, IF INVOICE - FORCE AMOUNTS                      
         SPACE                                                                  
         USING TAPGD,R4                                                         
         USING SITABD,R6                                                        
FIXTAPG  NTR1                                                                   
         CLI   RECTYP,C'C'         IF CHECK RECORD                              
         BE    XIT                                                              
         BAS   RE,FRCTAPG          OTHERWISE, FORCE AMOUNTS IN ELEMENT          
         B     XIT                                                              
         DROP  R4,R6                                                            
         SPACE 3                                                                
*        FOR INVOICE FORCE AMOUNTS                                              
         SPACE                                                                  
         USING TAPDD,R4                                                         
         USING SITABD,R6                                                        
FIXTAEU  NTR1                                                                   
         MVC   TAPDINV,SITBINV     SET NEW INVOICE NUMBER                       
         GOTOR MULTSPCT,DMCB,('TAPDAMTL/4',TAPDAMTS),SITBPCT                    
         J     XIT                                                              
         DROP  R4,R6                                                            
         SPACE 3                                                                
*        FOR INVOICE FORCE AMOUNTS                                              
         SPACE                                                                  
FIXTABD  NTR1                                                                   
         CLI   RECTYP,C'C'         IF INVOICE RECORD                            
         BNE   *+6                                                              
         DC    H'0'                                                             
         BAS   RE,FRCTABD          FORCE AMOUNTS IN ELEMENT                     
         B     XIT                                                              
         SPACE 3                                                                
*        FOR INVOICE FORCE AMOUNTS                                              
         SPACE                                                                  
         USING TABDD,R4                                                         
         USING SITABD,R6                                                        
FIXTABD3 NTR1                                                                   
         GOTOR MULTSPCT,DMCB,('TABDAM2L/4',TABDAMTS),SITBPCT                    
         B     XIT                                                              
         DROP  R4,R6                                                            
                                                                                
         USING TABDD,R4                                                         
         USING SITABD,R6                                                        
FIXTABD4 NTR1                                                                   
*                                  ADJUST TABD AMOUNTS IN TABLE                 
         LA    R2,TABDAMTS         AMOUNTS                                      
         LA    R3,TABDAM2L                                                      
         SRA   R3,2                N'AMOUNTS                                    
         L     R4,=V(CUMB4AMT)                                                  
         BAS   RE,ADJUST                                                        
         B     XIT                                                              
         DROP  R4,R6                                                            
                                                                                
         USING TAPDD,R4                                                         
         USING SITABD,R6                                                        
*                                  ADJUST TAPD AMOUNTS IN TABLE                 
FIXTAPD4 NTR1                                                                   
         LA    R2,TAPDAMTS         AMOUNTS                                      
         LA    R3,TAPDAMTL                                                      
         SRA   R3,2                N'AMOUNTS                                    
         L     R4,=V(CUMP4AMT)                                                  
         BAS   RE,ADJUST                                                        
         B     XIT                                                              
         DROP  R4,R6                                                            
         EJECT                                                                  
*              SPLIT VARIOUS PAY OPTION ELEMENTS                                
         SPACE 1                                                                
         USING TAPAD,R4            R4 = A(ELEMENT IN SUB RECORD)                
FIXTAPA  NTR1                                                                   
         MVI   TGBYTE,C'Y'         SET MUST FIND ENTRY                          
         BAS   RE,GETFRCTB         GET FORCE TABLE ENTRY FOR THIS INV.          
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATTAX   TAX AMOUNT                                   
         BNE   *+16                                                             
         L     RF,=V(CUMPATAM)     RF = A(CORRES. CUME TABLE)                   
         LA    R5,FRCTAX                                                        
         B     FIXPA10                                                          
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATHND   HANDLING AMOUNT                              
         BNE   *+16                                                             
         L     RF,=V(CUMPAHAM)     RF = A(CORRES. CUME TABLE)                   
         LA    R5,FRCHND                                                        
         B     FIXPA10                                                          
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATCHA   CHLOE HANDLING AMOUNT                        
         BNE   *+16                                                             
         L     RF,=V(CUMPACHA)     RF = A(CORRES. CUME TABLE)                   
         LA    R5,FRCHND                                                        
         B     FIXPA10                                                          
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATFEE   FEE AMOUNT (WIRE FEE)                        
         BNE   *+16                                                             
         BRAS  RE,CKFEE            RETURNS R5 --> WHERE TO ADD FEE              
         L     RF,=V(CUMPAFEE)     RF = A(CORRES. CUME TABLE)                   
         B     FIXPA10                                                          
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATFIC   FICA CREDIT AMOUNT                           
         BNE   *+16                                                             
         L     RF,=V(CUMPAFAM)     RF = A(CORRES. CUME TABLE)                   
         LA    R5,FRCFICR                                                       
         B     FIXPA10                                                          
         SPACE 1                                                                
         CLI   TAPATYPE,TAPATGST   GST AMOUNT                                   
         BNE   FIXPAX                                                           
         L     RF,=V(CUMPAGAM)     RF = A(CORRES. CUME TABLE)                   
         LA    R5,FRCGST                                                        
         SPACE 1                                                                
FIXPA10  LA    R2,TAPADATA         R2 = AMOUNT                                  
         LA    R3,1                SET THERE'S ONLY ONE                         
         LR    R4,RF               R4 = A(CUME TABLE)                           
         BAS   RE,ADJUST           SPLIT IT                                     
         SPACE 1                                                                
         L     R0,0(R5)            ADD TO APPROPRIATE FLD IN FORCE TBL          
         A     R0,0(R2)                                                         
         ST    R0,0(R5)                                                         
         SPACE 1                                                                
         L     R0,FRCTOT           ADD TO FORCE TABLE TOTAL                     
         A     R0,0(R2)                                                         
         ST    R0,FRCTOT                                                        
         SPACE 1                                                                
FIXPAX   B     XIT                                                              
         DROP  R4                                                               
         EJECT                                                                  
*                                                                               
*        FORCE CUMMULATIVE SUBSIDIARY CHECK TAPD AMOUNTS                        
*        INTO SUBSIDIARY INVOICE TAPD ELEMENT                                   
*               R4 PTS TO ELEMENT                                               
         SPACE                                                                  
         USING TAPDD,R4                                                         
FRCTAPD  NTR1                                                                   
         MVI   TGBYTE,C'Y'         SET MUST FIND ENTRY                          
         BAS   RE,GETFRCTB         GET FORCE TABLE ENTRY FOR THIS INV.          
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
*                                                                               
         NI    TAPDSTA2,X'FF'-TAPDSPRM   TURN OFF PRIMARY STATUS &              
         OI    TAPDSTA2,TAPDSSUB         INDICATE SUBSIDIARY RECORD             
         XC    TAPDAMTS(TAPDAMTL),TAPDAMTS                                      
         MVC   TAPDAMTS(TABPDL),FRCTBPD                                         
         MVC   TAPDNTNW,TAPDREXP                                                
         B     XIT                                                              
         DROP  R4                                                               
         EJECT                                                                  
*                                                                               
*                                                                               
*        FORCE CUMMULATIVE SUBSIDIARY CHECK TAPG AMOUNTS                        
*        INTO SUBSIDIARY INVOICE TAPG ELEMENT                                   
*               R4 PTS TO ELEMENT                                               
         SPACE                                                                  
         USING TAPGD,R4                                                         
FRCTAPG  NTR1                                                                   
         MVI   TGBYTE,C'Y'         SET MUST FIND ENTRY                          
         BAS   RE,GETFRCTB         GET FORCE TABLE ENTRY FOR THIS INV.          
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
         MVC   TAPGHNDI(TAPGEND-TAPGHNDI),FRCTBPG                               
         B     XIT                                                              
         DROP  R4,R6                                                            
         EJECT                                                                  
*                                                                               
*        FORCE CUMMULATIVE TABD AMOUNTS FROM TABLE                              
*        INTO SUBSIDIARY INVOICE TABD ELEMENT                                   
*               R4 PTS TO ELEMENT                                               
         SPACE                                                                  
         USING TABDD,R4                                                         
FRCTABD  NTR1                                                                   
*                                                                               
         LR    R1,R4                                                            
         LA    R2,TABDCSF                                                       
         LA    R3,1                                                             
         L     R4,=V(CUMCSFAM)                                                  
         BAS   RE,ADJUST                                                        
         LR    R4,R1                                                            
         LR    R3,R1                                                            
*                                                                               
         LA    R2,TABDPST                                                       
         LA    R3,1                                                             
         L     R4,=V(CUMPSTAM)                                                  
         BAS   RE,ADJUST                                                        
         LR    R4,R1                                                            
         LR    R3,R1                                                            
*                                                                               
         LR    R1,R4                                                            
         LA    R2,TABDSIGN                                                      
         LA    R3,1                                                             
         L     R4,=V(CUMSIGAM)                                                  
         BAS   RE,ADJUST                                                        
         LR    R4,R1                                                            
         LR    R3,R1                                                            
*                                                                               
         XR    R1,R1               FORCE LAST INVOICE TOTAL                     
         ZIC   R2,TBSICNT                                                       
         L     R5,=V(FRCIVAMT)                                                  
         USING FRCTBLD,R5                                                       
FRCTABD1 CH    R2,=H'1'                                                         
         BNE   FRCTABD2                                                         
         L     RE,TBTOT            PRIMARY TOTAL-CUMMULATIVE TOTAL              
         SR    RE,R1                                                            
         ST    RE,FRCTOT                                                        
         B     FRCTABD3                                                         
*                                                                               
FRCTABD2 A     R1,FRCTOT                                                        
         LA    R5,FRCTBLEN(R5)                                                  
         BCT   R2,FRCTABD1                                                      
         DROP  R5                                                               
*                                                                               
FRCTABD3 LA    RE,MAXSI            MAXIMUM SUBSIDIARY INVOICES                  
         ZIC   R2,TBSICNT                                                       
         L     R5,=V(FRCIVAMT)     TABLE OF FORCED INVOICE AMOUNTS              
         USING FRCTBLD,R5                                                       
FRCTABD4 CLC   TGINV,FRCTBINV      FIND ELEMENT TO ADD FOR THIS INVOICE         
         BE    FRCTABD5                                                         
         LA    R5,FRCTBLEN(R5)                                                  
         AHI   R2,-1                                                            
         BCT   RE,FRCTABD4                                                      
         DC    H'0'                MUST FIND INVOICE                            
*                                                                               
FRCTABD5 CHI   R2,1                SKIP LAST INVOICE                            
         BNH   FRCTABD6                                                         
         L     R0,FRCTOT           ADD CSF TO FORCE TABLE TOTAL                 
         A     R0,TABDCSF                                                       
         A     R0,TABDSIGN         ADD SIG FEE TO FORCE TABLE TOTAL             
*                                                                               
         TM    TBISTAT,TAPDSCAN    IF CANADIAN, CONVERT PST TO US$              
         BNO   FRCTBD5A                                                         
         BRAS  RE,GETUSPST         GET PST IN US$                               
         A     R0,0(R1)                                                         
         B     *+8                                                              
FRCTBD5A A     R0,TABDPST          AND ADD US$ PST                              
         ST    R0,FRCTOT                                                        
*                                                                               
FRCTABD6 MVC   TABDTAX,FRCTAX                                                   
         MVC   TABDHND,FRCHND                                                   
         MVC   TABDHNDC,FRCHNDC                                                 
         MVC   TABDGST,FRCGST                                                   
         MVC   TABDTOT,FRCTOT      US $ TOTAL                                   
         DROP  R4                                                               
*                                                                               
         ZIC   RE,TBSICNT                                                       
         L     R6,=V(SITAB)        INVOICE TABLE                                
         USING SITABD,R6                                                        
FRCTABD7 CLC   TGINV,SITBINV       MATCH ON INVOICE                             
         BE    FRCTABD8                                                         
         LA    R6,SITBLEN(R6)                                                   
         BCT   RE,FRCTABD7                                                      
         DC    H'0'                MUST FIND INVOICE                            
FRCTABD8 MVC   SITBTOT,FRCTOT      BUFFER TOTAL FOR LATER POSTING               
         B     XIT                                                              
         DROP  R5,R6                                                            
         EJECT                                                                  
         SPACE 3                                                                
*              ROUTINE LOOKS UP CURRENT ENTRY IN FORCE TABLE                    
*                                                                               
*                                  TGBYTE = Y ==> MUST FIND TABLE ENTRY         
GETFRCTB DS    0H                                                               
         LA    R0,MAXSI            MAXIMUM SUBSIDIARY INVOICES                  
         L     R6,=V(FRCIVAMT)     TABLE OF FORCED INVOICE AMOUNTS              
         USING FRCTBLD,R6                                                       
GETFRC10 CLI   TGBYTE,C'Y'         UNLESS MUST FIND ENTRY                       
         BE    *+12                                                             
         OC    FRCTBINV,FRCTBINV   FIND FIRST EMPTY SLOT                        
         BZR   RE                                                               
         CLC   TGINV,FRCTBINV      OR FIND ELEMENT FOR THIS INVOICE             
         BER   RE                                                               
         LA    R6,FRCTBLEN(R6)                                                  
         BCT   R0,GETFRC10                                                      
         DC    H'0'                MUST FIND INVOICE                            
         EJECT                                                                  
*                                                                               
*        ADD SUBSIDIARY TOT TO CUMMULATIVE TOTAL                                
*              R2=AMOUNT TO BE ADDED                                            
*              R3=BUCKET TOTALS                                                 
*              R4=NUMBER OF AMOUNTS                                             
*                                                                               
ADDTOT   NTR1                                                                   
         LA    R0,1                                                             
         B     TOT10                                                            
         SPACE                                                                  
SUBTOT   NTR1                                                                   
         XR    R0,R0                                                            
*                                                                               
TOT10    LM    R2,R4,0(R1)                                                      
TOT20    L     RE,0(R2)            SUBTOTAL TO ADD/SUBTRACT                     
*                                                                               
         LTR   R0,R0                                                            
         BZ    *+12                                                             
         A     RE,0(R3)            TO/FROM BUCKET TOTAL                         
         B     *+8                                                              
         S     RE,0(R3)                                                         
*                                                                               
         ST    RE,0(R3)            STORE IN BUCKET TOTAL                        
         LA    R2,4(R2)                                                         
         LA    R3,4(R3)                                                         
         BCT   R4,TOT20                                                         
         B     XIT                                                              
         EJECT                                                                  
*                                                                               
*        DO INVOICE RELATED POSTINGS                                            
*                                                                               
INVPST   DS    0H                                                               
         TM    TBSTA2,TAINSPRM     IF PRIMARY INVOICE                           
         BNO   INVPST40                                                         
         GOTO1 EXTRCT,DMCB,(RC)    AND NOT EXTRACTING                           
         BE    INVPSTX                                                          
*                                                                               
         MVC   TEMP,TBINV          SAVE TBINV                                   
         MVC   SVEST,TBEST         SAVE TBEST                                   
         MVC   SVTBTOT,TBTOT       SAVE TBTOT                                   
         MVC   SVIFCLR,IFCLR       SAVE PROD CLIENT INTERFACE INFO              
         L     R6,=V(SITAB)        R3=A(SUBSIDIARY INVOICE TABLE)               
         USING SITABD,R6                                                        
         ZIC   R2,TBSICNT          POST SUBSIDIARY INVOICES ONLY                
*                                                                               
INVPST10 GOTO1 TINVCON,DMCB,SITBINV,TBINV,DATCON   SET SUBS. INV NUMBER         
         MVC   TBEST,SITBEST                       SET ESTIMATE #               
         MVC   TFULL,SITBPCT                       SET PERCENTAGE               
         MVI   TFULL,0                                                          
         MVC   TBTOT,SITBTOT                       SET TBTOT                    
         MVC   IFCLR,SITBIFC       SET PROD CLIENT INTERFACE INFO               
         GOTO1 =V(TABIPOST),DMCB,(RC),EPOSTSR                                   
         LA    R6,SITBLEN(R6)      NEXT SUBSIDIARY INVOICE                      
         BCT   R2,INVPST10         LOOP                                         
*                                                                               
         GOTO1 =V(TABIPOST),DMCB,(RC),EPSTSJSV    (POSTS SJ & SV)               
         MVC   TBTOT,SVTBTOT       RESET TOTAL BILL DOLLARS                     
         MVC   TBINV,TEMP          RESET INVOICE NUMBER                         
         MVC   TBEST,SVEST         & ESTIMATE NUMBER                            
         MVC   SVIFCLR,IFCLR       & PROD CLIENT INTERFACE INFO                 
         B     INVPSTX                                                          
*                                                                               
INVPST40 GOTO1 =V(TABIPOST),DMCB,(RC),EINVLVL                                   
         GOTO1 =V(TABIPOST),DMCB,(RC),EPOSTSR                                   
         GOTO1 =V(TABIPOST),DMCB,(RC),EPSTSJSV                                  
*                                                                               
INVPSTX  B     XIT                                                              
         DROP  R6                                                               
         EJECT                                                                  
YES      SR    RC,RC               SET CONDITION CODE                           
NO       LTR   RC,RC                                                            
*                                                                               
XIT      XIT1                                                                   
         SPACE 2                                                                
         GETEL R3,DATADISP,ELCODE                                               
         EJECT                                                                  
         LTORG                                                                  
         EJECT                                                                  
         SPACE                                                                  
COMPLM3  DC    X'FFFFFFFFFFFF'                                                  
         SPACE                                                                  
*                                                                               
*        TABLE OF CHECK ELEMENTS NOT ADDED TO SUBSIDIARY CHECKS                 
*                                                                               
CHKELTAB DS    0XL1                                                             
         DC    AL1(TACDELQ)                                                     
         DC    AL1(TACWELQ)                                                     
         DC    AL1(TADWELQ)                                                     
         DC    AL1(TALWELQ)                                                     
         DC    AL1(TAODELQ)                                                     
         DC    AL1(TACYELQ)                                                     
         DC    AL1(TAYEELQ)                                                     
         DC    AL1(TACXELQ)                                                     
         DC    X'FF'                                                            
         SPACE 2                                                                
         EJECT                                                                  
CURINV   DS    XL1                                                              
PINVNUM  DS    PL3                 PACKED INVOICE NUMBER                        
DUMMYHDR DS    CL8                 DUMMY SCREEN HEADER                          
         DS    CL6                                                              
RECTYP   DS    CL1                                                              
*                                                                               
SVEST    DS    CL(L'TBEST)         SAVED ESTIMATE NUMBER                        
SVIFCLR  DS    CL(L'IFCLR)         SAVED PROD CLIENT INTERFACE INFO             
*                                                                               
         DS    0F                                                               
SVTBTOT  DS    CL(L'TBTOT)         SAVED TBTOT                                  
SVPGEL   DS    XL(TAPGLNQ)         SAVED POSTING DETAILS ELEMENT                
         EJECT                                                                  
*        IF PAYMENT OPTION FEE, CHECK WHERE TO ADD                              
*        ADD TO HANDLING, CORP HANDLING, OR TAX                                 
*        RETURNS R5 ---> ADD FEE HERE                                           
*                                                                               
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
CKFEE    NTR1  BASE=*,LABEL=*                                                   
         XR    R5,R5                                                            
         TM    TBISTAT,TAPDSCAN    IF THIS IS A CANADIAN PAYMENT                
         BNO   CFEE10                                                           
         LA    R5,FRCHNDC          ADD THE FEE TO CANADIAN HANDLING             
         B     CFEEXIT                                                          
*                                                                               
CFEE10   CLI   GTYPE,TABRTY10      FOR TYPE 10'S                                
         BE    CFEE20                                                           
         CLI   GTYPE,TABRTY15      AND FOR TYPE 15'S                            
         BE    CFEE20                                                           
         CLI   GTYPE,TABRTY14      AND FOR TYPE 14'S                            
         BE    CFEE20                                                           
         TM    STAT2,STCORP        OR IF THERE IS A CORP ON INVOICE             
         BNO   CFEE30                                                           
CFEE20   LA    R5,FRCHNDC          ADD THE FEE TO CORP HANDLING                 
         B     CFEEXIT             DONE                                         
*                                                                               
CFEE30   CLI   GTYPE,TABRTY1       IF BILLING TYPE 1                            
         BE    CFEE40                                                           
         CLI   GTYPE,TABRTY2       OR 2                                         
         BE    CFEE40                                                           
         CLI   GTYPE,TABRTY16      OR 16                                        
         BE    CFEE40                                                           
         CLI   GTYPE,TABRTY20      OR 20                                        
         BNE   CFEE50                                                           
CFEE40   CLC   SVCKNUM,=H'1'       AND MORE THAN 1 PERFORMER PAID               
         BNH   CFEE50                                                           
         LA    R5,FRCTAX           ADD THE FEE TO TAX                           
         B     CFEEXIT                                                          
*                                                                               
CFEE50   LA    R5,FRCHND           ELSE ADD THE FEE TO IND HANLDING             
CFEEXIT  XIT1  REGS=(R5)                                                        
         LTORG                                                                  
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
*        ADDS TANUEL ELEMENTS TO RECORD IN AIO                                  
*             R6 POINTS TO CURRENT SUBSIDIARY INFORMATION                       
         SPACE                                                                  
         USING SITABD,R6                                                        
ADDTANU  NTR1  BASE=*,LABEL=*                                                   
         L     R5,AIO                                                           
         XC    ELEMENT,ELEMENT                                                  
         LA    R4,ELEMENT                                                       
         USING TANUD,R4                                                         
         MVI   TANUEL,TANUELQ           ELEMENT CODE                            
         MVI   TANUTYPE,TANUTSPL                                                
         MVI   TANULEN,L'TEMP+TANULNQ                                           
         MVC   TANUMBER(L'TEMP),TEMP    SET PRIMARY UNCOMPLEMENTED              
         XC    TANUMBER(L'TEMP),COMPLM4 INVOICE NUMBER                          
         GOTO1 ADDELEM                  ADD ELEMEMT                             
*                                                                               
         CLI   0(R5),TLCKCDQ                                                    
         BE    ADDTANUX                                                         
*                                                                               
         MVI   TANUTYPE,TANUTEST   ESTIMATE NUMBER                              
         MVI   TANULEN,L'SITBEST+TANULNQ                                        
         MVC   TANUMBER(L'SITBEST),SITBEST                                      
         GOTO1 ADDELEM             ADD ESTIMATE NUMBER ELEMENT                  
ADDTANUX J     XIT                                                              
COMPLM4  DC    X'FFFFFFFFFFFF'                                                  
         DROP  R4,R6                                                            
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*        CLEAR CUMMULATIVE BUCKET TOTALS                                        
*                                                                               
         SPACE                                                                  
CLRCUM   NTR1  BASE=*,LABEL=*                                                   
         L     RE,=V(CUMPDAMT)     CLEAR CUMMULATIVE AREAS                      
         XC    0(TABPDL,RE),0(RE)                                               
         L     RE,=V(CUMBDAMT)                                                  
         XC    0(TABBDL,RE),0(RE)                                               
         L     RE,=V(CUMPDAM2)                                                  
         XC    0(TABPDL,RE),0(RE)                                               
         L     RE,=V(CUMBDAM2)                                                  
         XC    0(TABBDL,RE),0(RE)                                               
         L     RE,=V(CUMCSFAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPSTAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMSIGAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPATAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPAHAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPACHA)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPAFAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPAGAM)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMPAFEE)                                                  
         XC    0(4,RE),0(RE)                                                    
         L     RE,=V(CUMP4AMT)                                                  
         XC    0(TABPDL,RE),0(RE)                                               
         L     RE,=V(CUMB4AMT)                                                  
         XC    0(TABBDL,RE),0(RE)                                               
         L     RE,=V(CUMPGAMT)                                                  
         XC    0(TAPGEND-TAPGHNDI,RE),0(RE)                                     
         L     RE,=V(CUMPGAM2)                                                  
         XC    0(TAPGEND-TAPGHNDI,RE),0(RE)                                     
         J     XIT                                                              
         EJECT                                                                  
*                                                                               
*        ROUTINE BREAKS UP PST FOR EACH INVOICE                                 
*                                                                               
BRKPST   NTR1  BASE=*,LABEL=*                                                   
***      XC    TBPSTSV,TBPSTSV                                                  
         LA    RF,TBILLD                                                        
         AHI   RF,TBPSTSV-TBILLD                                                
         XC    0(L'TBPSTSV,RF),0(RF)       CLEAR TBPSTSV                        
         OI    STAT3,STSPTAOS      SET SPLIT AOS STATUS                         
         TM    TBISTAT,TAPDSCAN    IF THIS IS A CANADIAN PAYMENT,               
         BNO   BKPST10                                                          
         OC    TBCPST,TBCPST       ANY PST?                                     
         JZ    XIT                                                              
         LA    R1,TBCPST                                                        
         B     BKPST20                                                          
BKPST10  OC    TBPSTU,TBPSTU       IF THIS IS US$, ANY PST?                     
         JZ    XIT                                                              
         LA    R1,TBPSTU                                                        
BKPST20  LA    RF,TBILLD                                                        
         AHI   RF,TBPSTSV-TBILLD                                                
         MVC   0(L'TBPSTSV,RF),0(R1)  SAVE PST                                  
***ST20  MVC   TBPSTSV,0(R1)       SAVE PST                                     
         L     R3,AIO                                                           
         USING TABDD,R3                                                         
         MVI   ELCODE,TABDELQ                                                   
         BRAS  RE,GETEL                                                         
         JNE   XIT                                                              
         MVC   0(4,R1),TABDPST                                                  
         J     XIT                                                              
         DROP  R3                                                               
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*        ROUTINE RESETS TOTAL PST AMOUNT                                        
*                                                                               
RESETPST NTR1  BASE=*,LABEL=*                                                   
***      OC    TBPSTSV,TBPSTSV                                                  
         LA    RF,TBILLD                                                        
         AHI   RF,TBPSTSV-TBILLD   RF -> TBPSTSV                                
         OC    0(L'TBPSTSV,RF),0(RF)                                            
         JZ    XIT                                                              
         TM    TBISTAT,TAPDSCAN    IF THIS IS A CANADIAN PAYMENT,               
         BNO   RSPST10                                                          
***      MVC   TBCPST,TBPSTSV      RESET CANADIAN PST                           
         MVC   TBCPST,0(RF)        RESET CANADIAN PST                           
         J     XIT                                                              
***ST10  MVC   TBPSTU,TBPSTSV      RESET US$ PST                                
RSPST10  MVC   TBPSTU,0(RF)        RESET US$ PST                                
         J     XIT                                                              
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*        ROUTINE CONVERTS CAN$ PST TO US$ AND RETURNS IN R1                     
*                                                                               
         USING TABDD,R3                                                         
GETUSPST NTR1  BASE=*,LABEL=*                                                   
         L     R3,TABDPST                                                       
         BAS   RE,SETCVT           SET CONV RATE INTO FULL                      
         GOTO1 MULT,DMCB,(R3),FULL CONVERT PST TO US$                           
         XIT1  REGS=(R1)                                                        
         DROP  R3                                                               
*                                                                               
*        SET TBGCVT (CONVERSION RATE) IN FULL (BINARY)                          
*                                                                               
SETCVT   ZAP   DUB,TBGCVT                                                       
         CVB   R1,DUB                                                           
         ST    R1,FULL                                                          
         BR    RE                                                               
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*        ROUTINE FIXES CAN$ BILL DETAILS ELEMENT TOTAL                          
*                                                                               
FIXBD4AM NTR1  BASE=*,LABEL=*                                                   
         L     R3,AIO                                                           
         MVI   ELCODE,TABDELQ4                                                  
         BRAS  RE,GETEL                                                         
         JNE   XIT                                                              
                                                                                
         MVI   ELCODE,TAPDELQ                                                   
         TM    TBISTAT,TAPDSCAN                                                 
         JO    FBD4AM10                                                         
         MVI   ELCODE,TAPDELQ4                                                  
                                                                                
         USING TAPDD,R3                                                         
FBD4AM10 L     R3,AIO                                                           
         BRAS  RE,GETEL                                                         
         JE    *+6                                                              
         DC    H'00'                                                            
         L     R2,TAPDGRS                                                       
         A     R2,TAPDAPPL                                                      
         A     R2,TAPDGUAR                                                      
         A     R2,TAPDREXP                                                      
         A     R2,TAPDPNH                                                       
         A     R2,TAPDDUES                                                      
         DROP  R3                                                               
                                                                                
         USING TABDD,R3                                                         
         L     R3,AIO                                                           
         MVI   ELCODE,TABDELQ4                                                  
         BRAS  RE,GETEL                                                         
         JE    *+6                                                              
         DC    H'00'                                                            
         LA    R1,TABDTAX                                                       
         LHI   R0,TABDAM2L/4                                                    
         SHI   R0,1                                                             
FBD4AM20 A     R2,0(R1)            ADD TABD AMOUNTS TO TAPD AMOUNTS             
         LA    R1,4(R1)                                                         
         BCT   R0,FBD4AM20                                                      
         ST    R2,TABDTOT          SAVE BILLING TOTAL                           
         J     XIT                                                              
         DROP  R3                                                               
         LTORG                                                                  
                                                                                
*                                                                               
*        ROUTINE CALCULATES PERCENTAGE OF A GIVEN AMOUNT                        
*                P1    =  AMOUNT                                                
*                TFULL =  PERCENTAGE                                            
*                                                                               
CALPCT   NTR1  BASE=*,LABEL=*                                                   
         L     R1,0(R1)            R1=A(AMOUNT)                                 
         LR    R2,R1                                                            
         L     R2,0(R2)            R2=AMOUNT                                    
         LTR   R2,R2                                                            
         JZ    CALPCTX                                                          
         L     RF,TFULL            FOUR DEC PLACES                              
         CVD   RF,DUB                                                           
         ZAP   PNUM(16),DUB                                                     
         CVD   R2,DUB                                                           
         MP    PNUM(16),DUB                                                     
         SRP   PNUM,64-6,5         DIVIDE BY 1000000 AND ROUND                  
         ZAP   DUB,PNUM+8(8)                                                    
         CVB   RF,DUB                                                           
         ST    RF,0(R1)            PARTIAL AMOUNT FOR INVOICE                   
*                                                                               
CALPCTX  XIT1                                                                   
PNUM     DS    PL16                                                             
                                                                                
         LTORG                                                                  
         EJECT                                                                  
*        ROUTINE MULTIPLIES AMOUNTS BY PROVIDED PERCENTAGE                      
*                P1 BYTE 0 = # OF AMOUNT FIELDS                                 
*                P1        = A(FIRST AMOUNT FIELD)                              
*                P2        = A(SPLIT PERCENTAGE)                                
                                                                                
MULTSPCT NTR1  BASE=*,LABEL=*                                                   
         ZICM  R3,1(R1),3          R3=A(FIRST AMOUNT FIELD)                     
         ZIC   R4,0(R1)            R4=# OF AMOUNT FIELDS                        
                                                                                
         L     R1,4(R1)                                                         
         L     RE,0(R1)            RE=PERCENTAGE                                
         ST    RE,TFULL                                                         
                                                                                
MSP10    GOTOR CALPCT,DMCB,0(R3)                                                
                                                                                
         LA    R3,4(R3)            BUMP TO NEXT AMOUNT                          
         BCT   R4,MSP10                                                         
         XIT1                                                                   
                                                                                
         LTORG                                                                  
         EJECT                                                                  
*        ADD A RECORD                                                           
*                                                                               
ADDIT    NTR1  BASE=*,LABEL=*                                                   
         GOTO1 ADDREC                                                           
         XIT1                                                                   
                                                                                
         LTORG                                                                  
         EJECT                                                                  
*              SPLIT EXTRA TAXES                                                
         SPACE 1                                                                
         USING TAXTD,R4            R4 = A(ELEMENT IN SUB RECORD)                
FIXTAXT  NTR1  BASE=*,LABEL=*                                                   
         LA    R2,TAXTTAXS         R2 = AMOUNT                                  
         GOTOR CALPCT,DMCB,0(R2)   GET SUBISIDIARY PORTION                      
         XIT1                                                                   
         DROP  R4                                                               
                                                                                
         LTORG                                                                  
         EJECT                                                                  
*        TURN OFF PRIMARY INVOICE STATUS                                        
         SPACE                                                                  
         USING TAIND,R4                                                         
FIXTAIN  NTR1  BASE=*,LABEL=*                                                   
         NI    TAINSTA2,X'FF'-TAINSPRM                                          
         XIT1                                                                   
         DROP  R4                                                               
                                                                                
         LTORG                                                                  
         EJECT                                                                  
*              CALUCATE TOTAL IN US DOLLARS FOR LATER POSTINGS                  
*              AND FOR LATER FORCE OF TABDTOT IN INVOICE RECORD                 
         SPACE                                                                  
         USING FRCTBLD,R6          RETURNS R6 = A(TABLE ENTRY)                  
CFTOT    NTR1  BASE=*,LABEL=*                                                   
         L     R1,FRCTOT                                                        
         A     R1,TABPAYI                                                       
         A     R1,TABPAYC                                                       
         A     R1,TABREXP                                                       
         A     R1,TABPNH                                                        
         A     R1,TABTAX                                                        
         A     R1,TABHND                                                        
         A     R1,TABHNDC                                                       
         A     R1,TABFICR                                                       
         A     R1,TABGST                                                        
         ST    R1,FRCTOT                                                        
         XIT1                                                                   
         DROP  R6                                                               
                                                                                
         LTORG                                                                  
         EJECT                                                                  
       ++INCLUDE TABIDSECT                                                      
         EJECT                                                                  
       ++INCLUDE TABILLD                                                        
         EJECT                                                                  
       ++INCLUDE TAINTERD                                                       
         EJECT                                                                  
*        OTHER DSECTS ARE HIDDEN IN HERE                                        
         SPACE 3                                                                
*TAREPFFD                                                                       
*DDGENTWA                                                                       
*DDSPOOLD                                                                       
*DDSPLWORKD                                                                     
*DDMASTD                                                                        
*TAGENFILE                                                                      
*CTGENFILE                                                                      
*ACGENBOTH                                                                      
*ACGENPOST                                                                      
*TASYSDSECT                                                                     
*TASYSEQUS                                                                      
*TAREPWORKD                                                                     
         PRINT OFF                                                              
       ++INCLUDE TAREPFFD                                                       
       ++INCLUDE DDGENTWA                                                       
       ++INCLUDE DDSPOOLD                                                       
       ++INCLUDE DDSPLWORKD                                                     
       ++INCLUDE DDMASTD                                                        
       ++INCLUDE TAGENFILE                                                      
       ++INCLUDE CTGENFILE                                                      
       ++INCLUDE ACGENBOTH                                                      
       ++INCLUDE ACGENPOST                                                      
       ++INCLUDE TASYSDSECT                                                     
       ++INCLUDE TASYSEQUS                                                      
       ++INCLUDE TAREPWORKD                                                     
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'040TABISPLT  03/19/14'                                      
         END                                                                    
