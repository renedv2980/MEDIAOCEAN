*          DATA SET FRLCM62S   AT LEVEL 138 AS OF 05/01/02                      
*CATALP FRLCM62                                                                 
         TITLE 'FRLCM62 - VTAM LU6.2 LINE CONTROL '                             
**                                                                              
**  THE LU6.2 SUPPORT CONTAINED HEREIN HAS THE FOLLOWING LIMITATIONS:           
**   1. CONVERSATIONS MUST BE ALLOCATED BY THE PARTNER.                         
**   2. AT MOST 1 SESSION IS SUPPORTED PER LU-ID.                               
**   3. THE DATA IS SENT AS LOGICAL RECORDS                                     
**   4. ONLY BASIC MODE CONVERSATIONS ARE SUPPORTED                             
**                                                                              
**  SOME DIFFERENCES AREA;                                                      
**    LU6.2 RPLS ALSO USE AN RPLEXTENSION                                       
**    THE LU6.2 RPL HAS THE UTLPTR RETURNED IN A DIFFERENT FIELD                
**    AN LU6.2 UTL ENTRY SHOULD NOT GET BROADCAST MESSAGES                      
**    SOME CONSIDERATION IS NEEDED REGARDING PASSWORDS                          
**    A UTL ENTRY SHOULD DO ONLY ONE LU TYPE DURING IT'S LIFE.                  
**                                                                              
**  A LARGE AMOUNT OF THE CODE IS IN THE SECTION STARTING AT THE                
**  LABEL DOLU62 WHICH HAS IT'S OWN BASE REGISTER                               
*==========================================================*                    
* TASK CONTROL ENTERS HERE TO PROCESS POSTED ECB'S         *                    
* CONTROL RETURNS WHEN ALL COMPLETIONS HAVE BEEN PROCESSED *                    
*==========================================================*                    
         SPACE 1                                                                
LCM      CSECT                                                                  
         ENTRY APPLID                                                           
         ENTRY LCMECB                                                           
         ENTRY RPLLST                                                           
*                                                                               
LCBUFFLN EQU   2048                                                             
*                                                                               
         PRINT NOGEN                                                            
         NMOD1 LCMWRKX-LCMWRK,**LCM**                                           
         PRINT GEN                                                              
         USING LCMWRK,RC                                                        
         LA    RA,2048(RB)                                                      
         LA    RA,2048(RA)                                                      
         USING LCM+4096,RA                                                      
*                                                                               
         L     R2,=V(SYSFAC)       R2=A(FACPAK SYSFAC LIST)                     
         USING SYSFACD,R2                                                       
*                                                                               
         L     R7,=A(RPLLST)                                                    
         USING FARPLD,R7                                                        
*                                                                               
         ICM   RF,15,0(R1)         GET ENTRY POINT INDEX                        
         SLL   RF,2                X 4                                          
         L     RF,LCBRTAB(RF)                                                   
         BASR  RE,RF               SET RE IN CASE OF BUG                        
         DC    H'0'                BUT NO RETURN EXPECTED                       
*                                                                               
LCBRTAB  DC    A(NXT0)             0  (=VTWAIT)                                 
         DC    A(LCW)              1  (=VTWRITE)                                
         DC    A(GETUTL)           2  (=VTGETUTL)                               
         DC    A(GETPRQ)           3  (=VTGETPRQ)                               
         DC    A(0)                SPARE                                        
         DC    A(OPN)              5  (=VTOPEN)                                 
         DC    A(CLS)              6  (=VTCLOSE)                                
         DC    A(STRTPR)           7  (=VTPRSTRT)                               
         DC    A(STOPPR)           8  (=VTPRSTOP)                               
         DC    A(SETADDR)          9  (=VTBUFFAD)                               
         DC    A(GETCID)           10 (=VTGETCID)                               
         DC    A(GETRPL)           11 (=VTGETRPL)                               
         DC    A(DELPRQ)           12 (=VTDELPRQ)                               
         DC    A(ADDPRQ)           13 (=VTADDPRQ)                               
         DC    4A(0)               SPARE                                        
         SPACE 2                                                                
NXT0     XC    LCMECB,LCMECB       MAKE SURE ECB IS CLEAR                       
         EJECT                                                                  
*=======================================================*                       
* CHECK FOR COMPLETIONS                                 *                       
*=======================================================*                       
         SPACE 1                                                                
         USING IFGRPL,R8                                                        
*                                                                               
NXT2     L     R8,FARPLRPL         POINT TO RPL                                 
         TM    RPLECB,RPLPOST      TEST VTAM COMPLETION POSTED                  
         BZ    NXT8                                                             
*                                                                               
         TM    FARPLFLG,FARPL62    IS THIS AN LU6.2 RPL                         
         BNO   NXT2A               NO, CONTINUE LU 2                            
         L     RF,=A(DOLU62)                                                    
         BASR  RE,RF               YES - GO DO LU6.2 PROCESSING                 
         B     NXTRPL              GO GET NEXT RPL                              
         SPACE 2                                                                
NXT2A    CHECK RPL=(R8)                                                         
         LTR   RF,RF                                                            
         BZ    NXT3                                                             
         CLI   RPLACTIV,X'FF'      TEST RPL STILL ACTIVE                        
         BNE   NXT3                                                             
         MVI   DDSFLAG,C'Z'        SET ERR NUM                                  
         ST    R0,ERRDATA          NEED TO PASS R0 AND RF                       
         ST    RF,ERRDATA+4        TO TRACE                                     
         BAS   RE,LCMTRC                                                        
*                                                                               
NXT3     NI    FARPLFLG,X'FF'-FARPLBSY    ESET BUSY FLAG                        
*                                                                               
         ICM   R3,15,RPLUSFLD      GET UTL POINTER                              
         BZ    NXT4                                                             
         USING UTLD,R3                                                          
         TM    TSTAT4,TST4TRC      TEST TRACE ACTIVE                            
         BZ    *+8                                                              
         BAS   RE,LCMTRC                                                        
*                                                                               
NXT4     CLI   RPLRTNCD,RPLNOERR   RETURN CODE = 0 ?                            
         BNE   LCERR                                                            
         CLI   RPLFDB2,0           CHECK FEEDBACK CODE                          
         BNE   LCERR                                                            
*                                                                               
         LTR   R3,R3               TEST UTL POINTER EXISTS                      
         BZ    NXT5                NO - BETTER NOT TEST IF PRINTER              
         OC    TPRNT,TPRNT         TEST PRINTER                                 
         BNZ   NXT5                YES                                          
         TM    RPLCNTDC,RPLLUS     TEST FOR TERMINAL STATUS MSG                 
         BO    LCERR               YES                                          
         EJECT                                                                  
NXT5     TM    FARPLFLG,FARPLRD    TEST A RECEIVE RPL                           
         BO    NXT10                                                            
*                                                                               
         TM    FARPLFLG,FARPLWRT   TEST A WRITE RPL                             
         BO    WRT                 YES - RELEASE BUFFER AND WRITE AGAIN         
*                                                                               
*                                                                               
         CLI   RPLREQ,RPLCLOSE     CONTROL RPL/ DID CLSDST COMPLETE             
         BNE   NXT5A                                                            
         NI    TSTAT4,X'FF'-TST4CLIP  RESET CLSDST IN PROCESS                   
         TM    TSTAT4,TST4TRC         TEST TRACE ACTIVE                         
         BO    *+8                    YES - DONE IT ALREADY                     
         BAS   RE,LCMTRC              ELSE TRACE THE CLSDST                     
         B     CTL                                                              
*                                                                               
NXT5A    CLI   RPLREQ,RPLOPNDS     CONTROL RPL/ DID OPNDST COMPLETE             
         BNE   CTL                 NO - CONTINUE                                
*                                                                               
         ICM   R3,15,RPLUSFLD      GET UTL POINTER FROM RPL                     
         USING UTLD,R3                                                          
*                                                                               
         TM    RPLEXTDS,RPLNIB     TEST RPL HAS NIB ADDRESS                     
         BO    *+10                IF SO, CAN'T USE IT AS CID                   
         MVC   TCID,RPLARG         USE CID FROM OPNDST                          
*                                                                               
         TM    TSTAT4,TST4TRC      TEST TRACE ACTIVE                            
         BO    *+8                 YES - DONE IT ALREADY                        
         BAS   RE,LCMTRC           ELSE, TRACE THE COMPLETION                   
*                                                                               
         OC    TPRNT,TPRNT         TEST PRINTER                                 
         BZ    NXT6                                                             
         NI    TSTAT4,X'FF'-TST4UNLG    RESET UNABLE TO LOGON                   
* RESET ERROR FLAGS IN PQHDR + SET PRINTER ACTIVE                               
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         MVI   PRSTAT-PRHDR(RE),PRSACTV                                         
         NI    PRSTAT2-PRHDR(RE),X'FF'-PRS2PATH-PRS2UNLG                        
         GOTO1 =A(LCM),P1,VTPRSTRT,(R3)   QUEUE PRINTER FOR WRITE               
         B     NXT8                                                             
         EJECT                                                                  
*======================================================*                        
* ATTEMPT TO SEND A LOGON CONFIRMATION TO TERMINAL     *                        
*======================================================*                        
         SPACE 1                                                                
NXT6     OC    TBUFF,TBUFF         TEST TRM HAS BUFFER                          
         BNZ   CTL                 YES - FORGET IT                              
         BAS   RE,GETBUFF                                                       
         LTR   R1,R1               TEST BUFFER AVAILABLE                        
         BZ    CTL                 IF NOT, FORGET IT                            
         ST    R1,TBUFF                                                         
*                                                                               
NXTSEND  L     R1,TBUFF                                                         
         MVC   0(5,R1),=X'115C6F1DE8' SBA/23/80/HI/UNP                          
         MVC   5(8,R1),TSYM        SET LUID                                     
         LA    R1,13(R1)                                                        
         MVC   0(18,R1),=C' SIGNED ON TO DDS '                                  
         LA    R1,18(R1)                                                        
         L     RE,VSSB                                                          
         MVC   0(8,R1),SSBVTID-SSBD(RE)  MOVE SYSTEM ID                         
         MVI   8(R1),ETX                                                        
         LA    R1,9(R1)                                                         
*                                                                               
         L     RE,TBUFF                                                         
         SH    RE,=H'8'            BACK UP TO BUFFER HEADER                     
         ST    R3,0(RE)            SET A(UTL ENTRY)                             
         S     R1,TBUFF                                                         
         ST    R1,4(RE)            SET 0000.LEN                                 
         MVI   5(RE),X'01'         SET ERASE WRITE                              
         GOTO1 =A(LCM),P1,VTWRITE,(R3),0                                        
         B     CTL                                                              
         DROP  R3                                                               
         EJECT                                                                  
*=====================================================================*         
* NO VTAM COMPLETION - MAKE SURE RPL IS BUSY                          *         
*=====================================================================*         
         SPACE 1                                                                
NXT8     TM    FARPLFLG,FARPLBSY                                                
         BO    NXTRPL                                                           
         TM    FARPLFLG,FARPLRD    TEST A RECEIVE RPL                           
         BO    RCV                                                              
         TM    FARPLFLG,FARPLWRT   TEST A WRITE RPL                             
         BO    WRT                                                              
***  DO WE NEED AN LU6.2 TEST HERE?                                             
         B     CTL                                                              
*                                                                               
NXTRPL   ICM   R7,15,FARPLNXT                                                   
         BNZ   NXT2                                                             
*                                                                               
         OC    PRTQLEN,PRTQLEN                                                  
         BNZ   PRT                                                              
*                                                                               
         OC    FMH5CTR,FMH5CTR                                                  
         BZ    EXIT                                                             
*NOP     MVC   WTO20+4(12),=C'FMH5CTR TEST'                                     
         L     R1,FMH5CTR                                                       
*NOP     STCM  R1,15,WTO20+16                                                   
*NOP     WTO   MF=(E,WTO20)                                                     
         L     RF,=A(DOFMH5)       GO ISSUE A RECEIVE FMH5                      
         BASR  RE,RF                                                            
*                                                                               
EXIT     SR    RF,RF                                                            
*                                                                               
EXITX    LTR   RF,RF               SET CC EQ                                    
         XIT1                                                                   
         EJECT                                                                  
*=====================================================================*         
* BSC BUFFER FORMAT AS FOLLOWS                                        *         
*                                                                     *         
* BYTES 0-3 UNUSED IN VTAM (AND NO ETX EITHER MIND YOU)               *         
*     ACCSBB        SBB        E                                      *         
* ....IAABUU..DATA..BUU..DATA..T   FOR ENTER/PF-KEYS                  *         
*     D12A11        A22        X                                      *         
* 01234567                                                            *         
* NSCDAE                                                              *         
* DTUVIT                           FOR CLEAR/PA-KEYS                  *         
* XXAADX                                                              *         
*=====================================================================*         
         SPACE 1                                                                
NXT10    DS    0H                                                               
         CLI   RPLREQ,RPLRCVCD     TEST A RECEIVE COMPLETED                     
         BNE   RCV                 NO - IGNORE AND ISSUE RECEIVE                
*                                                                               
         TM    RPLCHN,RPLLAST+RPLONLY                                           
         BNZ   NXT20                                                            
         SPACE 1                                                                
* NOT LAST BUFFER SO CONTINUE SPECIFIC                                          
         SPACE 1                                                                
         L     RE,RPLAREA          GET CURRENT BUFFER ADDRESS                   
         A     RE,RPLRLEN          GIVES NEW IOAREA ADDR                        
         ST    RE,RPLAREA                                                       
*                                                                               
         L     RE,RPLBUFL          CURRENT AREA LEN                             
         S     RE,RPLRLEN          LESS DATA LEN                                
         ST    RE,RPLBUFL          GIVES REMAINING AREA LEN (WE HOPE)           
         EJECT                                                                  
         RECEIVE RPL=(R8),OPTCD=(Q,ASY,CS,SPEC),ECB=INTERNAL                    
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         B     NXTRPL                                                           
         EJECT                                                                  
NXT20    TM    RPLSRTYP,RPLRRESP   TEST THIS IS A RESPONSE                      
         BZ    NXT22               NO - CONTINUE                                
         SPACE 1                                                                
*========================================================*                      
* WE HAVE A RESPONSE THAT IS NOT AN ERROR                *                      
* IGNORE IT IF IT IS NOT FROM A PRINTER                  *                      
*========================================================*                      
         SPACE 1                                                                
         ICM   R3,15,RPLUSFLD                                                   
         USING UTLD,R3                                                          
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         BZ    RCV                                                              
         TM    PRSTAT-PRHDR(RE),PRSERR    TEST IN ERROR STATUS                  
         BZ    *+8                        NO                                    
         MVI   PRSTAT-PRHDR(RE),PRSACTV   ELSE SET PRINTER ACTIVE               
         B     NXT40                                                            
         EJECT                                                                  
NXT22    TM    TSTAT5,TST5TBP      TEST TERMINAL BUILD PENDING                  
         BZ    NXT22X              NO                                           
         OC    TPRNT,TPRNT                                                      
         BNZ   NXT22X              DON'T SEND THIS TO A PRINTER                 
* NEED TIME TO EXECUTE INITIALIZE SERVICE REQUEST                               
* USE THE INPUT BUFFER TO RESPOND TO THE TERMINAL                               
         L     RE,FARPLIOA                                                      
         MVC   0(2,RE),=X'F5C3'    WRITE ERASE/WCC                              
         MVC   2(WAITMSGL,RE),WAITMSG                                           
         SH    RE,=H'8'            BACK UP TO HEADER                            
         ST    R3,0(RE)            SET UTL ENTRY ADDRESS                        
*                                                                               
         L     R5,FARPLIOA                                                      
         LA    R6,WAITMSGL+2                                                    
         ST    R6,FARPLIOL         SET MESSAGE LENGTH                           
         L     R0,TCID                                                          
         SEND  RPL=(R8),AREA=(R5),RECLEN=(R6),ARG=(R0),STYPE=REQ,      X        
               POST=SCHED,OPTCD=(ASY,LMPEO,CA),RESPOND=(EX,QRESP),     X        
               CHNGDIR=CMD                                                      
         OI    FARPLFLG,FARPLBSY                                                
         B     NXTRPL                                                           
*                                                                               
WAITMSG  DC    X'1140401D60'                                                    
         DC    C'SYSTEM NOT READY FOR INPUT'                                    
WAITMSGL EQU   *-WAITMSG                                                        
         EJECT                                                                  
NXT22X   DS    0H                                                               
         L     RE,FARPLIOA         POINT TO BUFFER START                        
         MVC   0(4,RE),=C'VTRD'    SET EYECATCHER WHERE STX USED TO BE          
         L     RE,RPLAREA          POINT TO CURRENT BUFFER ADDR                 
         A     RE,RPLRLEN          ADD RECORD LENGTH                            
         MVI   0(RE),ETX           SET AN ETX                                   
*                                                                               
         LA    RE,1(RE)            SET END ADDRESS + 1                          
         S     RE,FARPLIOA         LESS MESSAGE START ADDR                      
         ST    RE,FARPLIOL         GIVES LENGTH OF ENTIRE MESSAGE               
*                                                                               
NXT24    L     RE,FARPLIOA                                                      
         L     RF,=A(AIDTAB)       SEARCH TABLE OF VALID PF KEYS                
*                                                                               
NXT26    CLC   0(1,RF),4(RE)                                                    
         BE    NXT28                                                            
         LA    RF,1(RF)                                                         
         CLI   0(RF),X'FF'                                                      
         BE    NXT30               AID CODE NOT IN TABLE                        
         B     NXT26                                                            
*                                                                               
NXT28    L     R0,=A(AIDTAB)                                                    
         SR    RF,R0               CONVERT AID TO INTEGER 0 THRU 24             
         STC   RF,4(RE)                                                         
         B     NXT40                                                            
*                                                                               
NXT30    L     RE,FARPLIOA                                                      
         L     RF,=A(PAKTAB)       SEARCH TABLE OF VALID PA KEYS                
*                                                                               
NXT32    CLC   0(1,RF),4(RE)                                                    
         BE    NXT34                                                            
         LA    RF,L'PAKTAB(RF)                                                  
         CLI   0(RF),X'FF'                                                      
         BNE   NXT32                                                            
         L     RF,=A(PAKDATA0)                                                  
*                                                                               
NXT34    MVI   04(RE),0            SET AID TO ENTER                             
         MVC   05(2,RE),=X'407E'   SET CURSOR ADDRESS                           
         MVC   07(3,RE),=X'11407E' SET SCREEN LOCATION TO (01,63)               
         MVC   10(7,RE),1(RF)      SET DATA FROM PA-KEY TABLE                   
         MVI   17(RE),ETX                                                       
         LA    R0,18               FORCE INPUT LENGTH                           
         ST    R0,FARPLIOL         ADJUST COUNT FOR DATA                        
         EJECT                                                                  
*=====================================================================*         
* BUILD A BUFFER HEADER AT A(BUFFER)-8.                               *         
* BYTES 0-3 = UTL ENTRY ADDRESS                                       *         
*        4  = SPARE                                                   *         
*        5 =  DSP TO STX (SET BY MSGQIN) OR WRITE TYPE (LCWRITE)      *         
*       6-7 = MESSAGE LENGTH                                          *         
*=====================================================================*         
         SPACE 1                                                                
NXT40    ICM   R3,15,RPLUSFLD      PICK UP UTL ENTRY ADDRESS                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         USING UTLD,R3                                                          
*                                                                               
         TM    RPLEXTDS,RPLNIB     TEST RPL HAS NIB ADDRESS                     
         BO    NXT41               YES - CAN'T CHECK CID                        
         CLC   TCID,RPLARG         TEST CID'S MATCH                             
         BE    NXT41               YES - OK                                     
         TM    TSTAT4,TST4TRC      TEST TRACE ACTIVE                            
         BO    NXT41               YES - SO TRACED ALREADY                      
         BAS   RE,LCMTRC           RECORD THIS MARVELOUS EVENT                  
*                                                                               
NXT41    SR    R1,R1                                                            
         ICM   R1,7,TPRNT          TEST IF PRINTER                              
         BZ    NXT42               NO                                           
         TM    PRSTAT-PRHDR(R1),PRSACTV                                         
         BO    NXT42                                                            
         MVI   DDSFLAG,1           SET TRACE MSGNUM                             
         BAS   RE,LCMTRC                                                        
         B     RCV                 IGNORE NON-ACTIVE PRINTERS                   
*                                                                               
NXT42    OC    TBUFF,TBUFF         TEST TRM HAS BUFFER                          
         BZ    NXT54               NO TREAT THIS AS A NORMAL INPUT              
         L     RE,FARPLIOA         YES POINT TO THIS INPUT BUFFER               
*                                                                               
NXT46    TM    TTYPE,TTYPE327      TEST 3270 SPECIAL SERVICE REQUESTS           
         BZ    RCV                 IGNORE MESSAGE                               
         CLC   7(3,RE),=X'11407E'  TEST FIRST DATA AT (01,63)                   
         BNE   RCV                                                              
         LA    RE,10(RE)           POINT TO FIRST DATA BYTE                     
         L     RF,=A(EBCEBC)                                                    
         TR    0(7,RE),0(RF)       TRANSLATE TO UPPER CASE EBCDIC               
*                                                                               
NXT48    L     R1,=A(PAKKILL)                                                   
         CLC   0(5,RE),1(R1)       TEST FOR $KILL                               
         BNE   NXT50                                                            
         OI    TSTAT2,TSTATCAN     SET CANCEL PENDING                           
         B     RCV                                                              
*                                                                               
NXT50    L     R1,=A(PAKSTAT)                                                   
         CLC   0(7,RE),1(R1)       TEST FOR $STATUS                             
         BNE   RCV                 IGNORE MESSAGE                               
         B     RCV ================ NOP ======================                  
         TM    TSTAT3,TSTATWRT     TEST A WRITE PENDING                         
         BNZ   RCV                 YES- IGNORE REQUEST                          
         EJECT                                                                  
*=====================================================================*         
* BUILD $STATUS REPLY IN INPUT BUFFER                                 *         
*=====================================================================*         
         SPACE 1                                                                
         DC    H'0' ============ CODE SHOULD NEVER EXECUTE ===========          
         L     RE,FARPLIOA                                                      
         MVC   0(5,RE),=X'1140401D60'                                           
         LA    R1,5(RE)                                                         
         BAS   RE,BLDSTAT          SET STATUS MESSAGE                           
         L     RE,FARPLIOA                                                      
         MVI   65(RE),ETX                                                       
         SH    RE,=H'8'            BACK UP TO HEADER                            
         ST    R3,0(RE)            SET UTL ENTRY ADDRESS                        
         LA    RF,66                                                            
         ST    RF,4(RE)            STORE 0000.LEN                               
         L     R0,FARPLIOA                                                      
         GOTO1 =A(LCM),P1,VTWRITE,(R3),(R0)                                     
         XC    FARPLIOA,FARPLIOA   CLEAR RPL BUFFER ADDRESS                     
         B     NXT2                                                             
*                                                                               
NXT54    L     RE,FARPLIOA                                                      
         SH    RE,=H'8'            BACK UP TO HEADER                            
         ST    R3,0(RE)            SET UTL ENTRY ADDRESS                        
*                                                                               
         L     RF,FARPLIOL         BUFFER SIZE                                  
         ST    RF,4(RE)            STORE 0000.LEN                               
*                                                                               
         MVC   TBUFF,FARPLIOA      MOVE BUFFER ADDR TO TRM ENTRY                
         XC    FARPLIOA,FARPLIOA   CLEAR RPL BUFFER ADDRESS                     
         XC    FARPLIOL,FARPLIOL   CLEAR MSG LEN                                
         OC    TPRNT,TPRNT         TEST PRINTER                                 
         BNZ   NXT70                                                            
         EJECT                                                                  
*=====================================================================*         
* QUEUE INPUT TO PROPER SE                                            *         
*=====================================================================*         
         SPACE 1                                                                
NXT60    DS    0H                                                               
NXT70    L     R6,TBUFF            SET FLAG TO INDICATE REAL INPUT              
         SH    R6,=H'8'                                                         
         OI    4(R6),X'20'                                                      
*                                                                               
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE OF REG                 
         GOTO1 =V(MSGQIN),P1,(R2),TBUFF,(R3)                                    
*                                                                               
         NI    4(R6),X'FF'-X'20'   CLEAR REAL INPUT FLAG                        
         EJECT                                                                  
*=====================================================================*         
* ISSUE ANOTHER VTAM RECEIVE IF BUFFER AVAILABLE                      *         
*=====================================================================*         
         SPACE 1                                                                
RCV      L     RE,VSSB                                                          
         USING SSBD,RE                                                          
         TM    SSBSTAT1,SSBSEOJ    TEST EOJ PENDING                             
         BO    NXTRPL              YES - NO MORE READS                          
*                                                                               
         L     R1,FARPLRPL         POINT TO RPL                                 
         TM    69(R1),X'FF'        TEST SOMEHOW STILL BUSY                      
         BO    RCV12X              YES - GET OUT NOW                            
*                                                                               
         OC    FARPLIOA,FARPLIOA   TEST BUFFER ASSIGNED                         
         BNZ   RCV4                                                             
*                                                                               
         BAS   RE,GETBUFF          GET AN INPUT BUFFER                          
         LTR   R1,R1               TEST BUFFER OBTAINED                         
         BZ    NXTRPL              NO -                                         
         ST    R1,FARPLIOA         ELSE SET ADDRESS IN RPL                      
*                                                                               
RCV4     XC    FARPLIOL,FARPLIOL   RESET LENGTH                                 
         L     R1,FARPLIOA                                                      
         MVI   0(R1),C'*'                                                       
         MVC   1(15,R1),0(R1)      SET A FLAG FOR LATER                         
*                                                                               
         L     R8,FARPLRPL         POINT TO RPL                                 
*                                                                               
RCV10    DS    0H                                                               
         TM    RPLEXTDS,X'04'      IF THIS FLAG IS ON,                          
         BO    RCV12               RPLARG POINTS TO A NIB                       
         OC    RPLARG,RPLARG       ELSE IT IS A CID                             
         BZ    RCV12               SKIP RESETSR IF NO CID                       
         EJECT                                                                  
         RESETSR RPL=(R8),OPTCD=(CA,SYN)   THIS IS SYNCHRONOUS                  
         LTR   RF,RF               IF YOU CHANGE IT BE SURE TO FLAG             
         BZ    *+8                 THE RPL AS BUSY                              
         BAS   RE,LCMTRC           TRACE THE EVENT AND CONTINUE                 
         EJECT                                                                  
RCV12    L     R4,FARPLIOA         GET I/O AREA ADDRESS                         
         LA    R4,4(R4)            LEAVE TOP 4 BYTES OPEN                       
         LA    R5,LCBUFFLN         GET BUFFER LENGTH                            
         SH    R5,=H'5'            LEAVE ROOM FOR STX...ETX                     
         PRINT GEN                                                              
         RECEIVE RPL=(R8),AREA=(R4),AREALEN=(R5),OPTCD=(Q,ASY,ANY,CS), X        
               RTYPE=(DFSYN,RESP),ECB=INTERNAL                                  
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
*                                                                               
RCV12X   OI    FARPLFLG,FARPLBSY   SET BUSY                                     
         B     NXTRPL                                                           
         EJECT                                                                  
*=====================================================================*         
* A VTAM SEND RPL IS FREE - RELEASE BUFFER AND TEST SENDS PENDING     *         
* ON ENTRY R7 POINTS TO FARPL                                         *         
*          R8 POINTS TO RPL                                           *         
*=====================================================================*         
         SPACE 1                                                                
WRT      DS    0H                                                               
         L     R1,FARPLRPL                                                      
         TM    69(R1),X'FF'        TEST SOMEHOW RPL IS BUSY                     
         BO    WRT25X              YES - GET OUT                                
*                                                                               
         ICM   R3,15,FARPLUTL      GET UTL POINTER                              
         BZ    *+8                                                              
         NI    TSTAT3,X'FF'-TSTATWIP                                            
*                                                                               
         OC    FARPLIOA,FARPLIOA   TEST BUFFER ASSIGNED                         
         BZ    WRT2                NO                                           
*                                                                               
         L     R1,FARPLIOA                                                      
         BAS   RE,FREEBUFF                                                      
         XC    FARPLIOA,FARPLIOA                                                
*                                                                               
WRT2     ICM   R0,15,OUTQLEN       TEST ANY OUTPUT QUEUE                        
         BZ    NXTRPL                NO                                         
*                                                                               
         L     R3,OUTQFRST                                                      
         USING UTLD,R3                                                          
*                                                                               
         MVC   OUTQFRST+1(3),TNEXT   SET NEW HEAD OF QUEUE                      
         XC    TNEXT,TNEXT           CLEAR POINTER                              
         L     R0,OUTQLEN                                                       
         BCTR  R0,0                DECR QUEUE LEN                               
         ST    R0,OUTQLEN                                                       
         LTR   R0,R0               TEST ANY LEFT IN QUEUE                       
         BNZ   *+10                                                             
         XC    OUTQLAST,OUTQLAST                                                
*                                                                               
         NI    TSTAT3,X'FF'-TSTATWRT                                            
*                                                                               
         ICM   R0,15,TCID          TEST STILL LOGGED ON                         
         BZ    WRT50               NO                                           
*                                                                               
         TM    TSTAT3,TSTATWIP     TEST PREVIOUS WRITE STILL ACTIVE             
         BZ    WRT3                                                             
         OI    TSTAT4,TST4HUNG     SET FLAG THAT WRITE HUNG                     
         MVI   DDSFLAG,8           SET TRACE MESSAGE NUMBER                     
         BAS   RE,LCMTRC                                                        
*                                                                               
         TIME  DEC                                                              
         L     RE,VSSB                                                          
         STCM  R0,15,SSBVTHNG-SSBD(RE)                                          
         B     WRT2                                                             
*                                                                               
WRT3     OI    TSTAT3,TSTATWIP     SET WRITE IN PROCESS                         
         ST    R3,FARPLUTL         SET UTL POINTER                              
         ST    R3,RPLUSFLD         SET HERE FOR TRACE IF ERROR                  
*                                                                               
         LA    R5,TMSGBUFF         IF TMSGBUFF PRESENT, SEND IT                 
         OC    0(4,R5),0(R5)                                                    
         BNZ   *+8                                                              
         LA    R5,TBUFF                                                         
         OC    0(4,R5),0(R5)       TEST STILL HAVE BUFFER                       
         BNZ   WRT4                                                             
         MVI   DDSFLAG,2           SET TRACE MSGNUM                             
         BAS   RE,LCMTRC                                                        
         B     NXTRPL              AND GET OUT FAST                             
*                                                                               
WRT4     MVC   FARPLIOA,0(R5)      SAVE MESSAGE ADDRESS                         
         XC    0(4,R5),0(R5)       CLEAR BUFFER ADDRESS IN UTL                  
         L     RE,FARPLIOA                                                      
         SH    RE,=H'8'                                                         
         SR    R6,R6                                                            
         ICM   R6,3,6(RE)          GET MESSAGE LENGTH                           
         ST    R6,FARPLIOL         SET MESSAGE LENGTH                           
         BNZ   WRT8                                                             
* ZERO LENGTH MESSAGE IS SPECIAL FROM SRTOP                                     
**NOP**  MVI   DDSFLAG,3           SET TRACE MSGNUM                             
**NOP**  BAS   RE,LCMTRC                                                        
         L     R1,FARPLIOA         RELEASE BUFFER AND EXIT                      
         BAS   RE,FREEBUFF                                                      
         XC    FARPLIOA,FARPLIOA                                                
         B     NXTRPL                                                           
*                                                                               
WRT8     OC    TPRNT,TPRNT         TEST PRINTER                                 
         BNZ   WRT20                                                            
*                                                                               
         MVC   DUB(1),5(RE)        SAVE WRITE TYPE                              
*                                                                               
         MVC   4(4,RE),=X'0227F1C3'  MOVE STX/ESC/WRT/WCC TO BUFFHDR            
         TM    DUB,X'01'             TEST WRITE ERASE                           
         BZ    *+8                                                              
         MVI   6(RE),X'F5'                                                      
         TM    DUB,X'02'             TEST SOUND ALARM                           
         BZ    *+8                                                              
         MVI   7(RE),X'C7'                                                      
*                                                                               
         L     R5,FARPLIOA         POINT TO BUFFER                              
         SH    R5,=H'2'            FOR BSC START WITH WCC AT BUFF-2             
         L     R6,FARPLIOL         NET CHANGE TO LENGTH                         
         LA    R6,1(R6)            IS PLUS 1                                    
         MVI   RPLRH3,0            RESET BRACKET FLAGS                          
         TM    TSTAT3,TSTATBB      TEST BB SENT                                 
         BO    *+12                YES                                          
         OI    TSTAT3,TSTATBB      SET FLAG THAT BB SENT                        
         OI    RPLRH3,RPLBB        SET BB IN RPL CHAIN                          
         EJECT                                                                  
WRT10    DS    0H                                                               
         SEND  RPL=(R8),AREA=(R5),RECLEN=(R6),ARG=(R0),STYPE=REQ,      X        
               POST=SCHED,OPTCD=(ASY,LMPEO,CA),RESPOND=(EX,QRESP),     X        
               CHNGDIR=CMD                                                      
         ORG   *-2                 ORG OVER BALR 14,15                          
         TM    RPLRH3,RPLBB        TEST BB SET                                  
         BZ    *+8                                                              
         NI    20(R1),X'FB'        IF BB SET, SET RESPOND=NEX                   
         BASR  14,15                                                            
         B     WRT25                                                            
         EJECT                                                                  
*===========================================================*                   
* BUFFER FORMAT IS  STX/ESC/WCC/WCC ... EOM/ETX             *                   
* MUST SEND WCC                                             *                   
*===========================================================*                   
         SPACE 1                                                                
WRT20    MVI   RPLRH3,0            CLEAR PREVIOUS                               
*                                                                               
         L     R5,FARPLIOA         POINT TO BUFFER                              
         LA    R5,2(R5)            FOR BSC START WITH WCC                       
         L     R6,FARPLIOL         NET CHANGE TO LENGTH                         
         SH    R6,=H'3'            INCLUDES ETX                                 
*                                                                               
         TM    TSTAT3,TSTATBB      TEST BB SENT (FIRST BUFFER)                  
         BZ    WRT22               FIRST - LEAVE CTL CHARS IN MSG               
**NOP**  LA    R5,3(R5)            ELSE REMOVE THEM                             
**NOP**  SH    R6,=H'3'                                                         
         B     WRT24                                                            
*                                                                               
WRT22    OI    TSTAT3,TSTATBB      SET FLAG THAT BB SENT                        
         OI    RPLRH3,RPLBB        SET BB IN RPL CHAIN                          
*                                                                               
WRT24    SR    RF,RF                                                            
         ICM   RF,7,TPRNT                                                       
         TM    PNEX-PRQD(RF),PREXEOR   TEST E-O-R PENDING                       
         BZ    *+12                                                             
         NI    TSTAT3,X'FF'-TSTATBB    RESET BB SENT                            
         OI    RPLRH3,RPLEB                                                     
         EJECT                                                                  
         SEND  RPL=(R8),AREA=(R5),RECLEN=(R6),ARG=(R0),STYPE=REQ,      X        
               POST=SCHED,OPTCD=(ASY,LMPEO,CA),RESPOND=(NEX,FME,QRESP)          
         EJECT                                                                  
WRT25    LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
*                                                                               
WRT25X   OI    FARPLFLG,FARPLBSY                                                
         B     NXTRPL                                                           
         SPACE 2                                                                
*=====================================================*                         
* ABORT WRITE - TERMINAL NO LONGER CONNECTED          *                         
*=====================================================*                         
         SPACE 1                                                                
WRT50    MVI   DDSFLAG,4           SET TRACE MSGNUM                             
         BAS   RE,LCMTRC                                                        
         L     R1,TBUFF            RELEASE BUFFER                               
         BAS   RE,FREEBUFF                                                      
         XC    TBUFF,TBUFF                                                      
         B     NXTRPL                                                           
         EJECT                                                                  
*======================================================*                        
* PROCESS VTAM LOGON/SIMLOGON REQUESTS                 *                        
*======================================================*                        
         SPACE 1                                                                
CTL      DS    0H                                                               
         TM    FARPLFLG,FARPLLOG   TEST A LOGON RPL                             
         BZ    CTCLS               NO - MUST BE CLSDST RPL                      
*                                                                               
         L     R0,LOGQLEN                                                       
         A     R0,SIMQLEN                                                       
         LTR   R0,R0               IF NO LOG ACTIONS PENDING, EXIT              
         BZ    NXTRPL                                                           
         SPACE 1                                                                
*====================================================*                          
* FIND A  UTL ENTRY WITH A LOGON/SIMLOGON PENDING    *                          
*====================================================*                          
         SPACE 1                                                                
         L     R3,VUTL                                                          
         LH    R4,0(R3)                                                         
         L     R5,2(R3)                                                         
         LA    R3,6(R3)                                                         
         USING UTLD,R3                                                          
*                                                                               
CTLOG2   TM    TSTAT3,TSTATLOG+TSTATSIM       TEST ACTION PENDING               
         BNZ   CTLOG10                                                          
         BXLE  R3,R4,CTLOG2                                                     
         SPACE 1                                                                
*============================================================*                  
* NO ACTIONS PENDING IN UTL - MUST HAVE BAD COUNTER SO RESET *                  
*============================================================*                  
         SPACE 1                                                                
CTLOG4   L     R1,SIMQLEN                                                       
         SR    R0,R0                                                            
         CS    R1,R0,SIMQLEN                                                    
         BNZ   CTLOG4                                                           
*                                                                               
CTLOG6   L     R1,LOGQLEN                                                       
         SR    R0,R0                                                            
         CS    R1,R0,LOGQLEN                                                    
         BNZ   CTLOG6                                                           
*                                                                               
         B     CTLOGX                                                           
         EJECT                                                                  
*                                                                               
CTLOG10  DS    0H                                                               
         TM    TSTAT3,TSTATSIM     TEST SIMLOGON PENDING                        
         BZ    CTLOG20                                                          
*                                                                               
         L     R4,FARPLNIB                                                      
         USING ISTDNIB,R4                                                       
         MVC   NIBSYM,TSYM                                                      
         XC    NIBLMODE,NIBLMODE   CLEAR LOGMODE                                
         DROP  R4                                                               
*                                                                               
CTLOG12  OI    FARPLFLG,FARPLBSY   SET RPL BUSY                                 
*                                                                               
         ST    R3,RPLUSFLD         SET UTL ADDRESS IN RPL                       
*                                                                               
         SIMLOGON RPL=(R8),OPTCD=ASY,POST=SCHED,NIB=(R4)                        
*                                                                               
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         EJECT                                                                  
         NI    TSTAT3,X'FF'-TSTATSIM  RESET FLAG                                
         LA    R1,SIMQLEN                                                       
         BAS   RE,QDOWN                                                         
         B     CTLOGX                                                           
*                                                                               
CTLOG20  TM    TSTAT3,TSTATLOG     TEST LOGON PENDING                           
         BO    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         TM    TSTAT4,TST4LU62     IS IT A LU6.2 SESSION REQUEST?               
         BO    CTL62L1             YES, GO PROCESS AS SUCH                      
         L     R4,FARPLNIB                                                      
         USING ISTDNIB,R4                                                       
         MVC   NIBSYM,TSYM                                                      
         MVC   NIBCID,TCID         NEEDED DUE TO PARALLEL SESSIONS              
         XC    NIBLMODE,NIBLMODE   CLEAR LOGMODE                                
*                                                                               
CTLOG22  ST    R3,NIBUSER          SET UTL ADDRESS IN USER DATA                 
         MVC   WTO20C+4(10),=C' OPNDST =>'                                      
         MVC   WTO20C+14(8),NIBSYM                                              
         WTO   MF=(E,WTO20C)                                                    
         DROP  R4                                                               
         L     R8,FARPLRPL                                                      
         ST    R3,RPLUSFLD         SET IN RPL BECAUSE OPNDST DOESN'T            
*                                                                               
         OI    FARPLFLG,FARPLBSY   SET BUSY FLAG                                
         OPNDST RPL=(R8),NIB=(R4),OPTCD=(ASY,ACCEPT,CA,SPEC,NQ)                 
         LTR   RF,RF                                                            
         BZ    CTLOGXY                                                          
         DC    H'0'                                                             
WTO20C   WTO   '                    ',ROUTCDE=(11),MF=L                         
         SPACE 1                                                                
*======================================================*                        
* PROCESS LU6.2 LOGON REQUESTS                         *                        
* THIS PROCESSING IS DONE OUTSIDE OF THE RESTRICTIVE ENVIRONMENT                
* OF THE VTAM LOGON EXIT                                                        
*======================================================*                        
CTL62L1  ST    R7,FA62SAVE         SAVE CURRENT FARPL                           
         L     R7,=A(OPERFARP)     USE ONE AND ONLY ONE 6.2 FARPL               
         OI    FARPLFLG,FARPLBSY   SET BUSY FLAG                                
         L     R8,FARPLRPL         NOW GET THE RPL ADDRESS                      
         L     R5,TCID             GET THE CID FOR THIS SESSION                 
         L     R1,RPLAAREA                                                      
         USING ISTRPL6X,R1                                                      
         MVI   RPL6QUAL,RPL6ACT    HAVE VTAM ACCEPT THE SESSION                 
         DROP  R1                                                               
*NOP     MVC   WTO20+4(10),=C' ACTSESS B'                                       
*NOP     WTO   MF=(E,WTO20)                                                     
         PRINT GEN                                                              
         APPCCMD CONTROL=OPRCNTL,RPL=(R8),                             X        
               OPTCD=SYN,    ECB=INTERNAL,                             X        
               AREA=0,CONFTXT=NO,  NO OVERRIDES, CLEAR TEXT            X        
               ARG=(R5),           PASS CID OF SESSION TO BE ACCEPTED  X        
               USERFLD=(R3)        SET USER FIELD TO UTL ADDRESS                
         LTR   RF,RF               DID VTAM GET THIS REQUEST OK?                
         BZ    CTLOGXX             YES, TIDY UP AND GO ON TO NEXT ITEM          
         DC    H'0'                                                             
*                                                                               
CTLOGXX  L     R7,FA62SAVE                                                      
         MVC   WTO20C+4(13),=C' ACTSESS DONE'                                   
         WTO   MF=(E,WTO20C)                                                    
CTLOGXY  NI    TSTAT3,X'FF'-TSTATLOG                                            
         LA    R1,LOGQLEN                                                       
         BAS   RE,QDOWN                                                         
*                                                                               
CTLOGX   B     NXTRPL                                                           
FA62SAVE DS    F                                                                
         EJECT                                                                  
*======================================================*                        
* PROCESS VTAM CLSDST REQUESTS                         *                        
*======================================================*                        
         SPACE 1                                                                
CTCLS    DS    0H                                                               
         OC    CLSQLEN,CLSQLEN     IF NO CLS ACTIONS PENDING, EXIT              
         BZ    CTCLSX                                                           
         SPACE 1                                                                
*====================================================*                          
* FIND A  UTL ENTRY WITH A CLSDST PENDING            *                          
*====================================================*                          
         SPACE 1                                                                
         L     R3,VUTL                                                          
         LH    R4,0(R3)                                                         
         L     R5,2(R3)                                                         
         LA    R3,6(R3)                                                         
         USING UTLD,R3                                                          
         MVI   CLSFLAG,0           RESET CLSDST PENDING FOUND                   
*                                                                               
CTCLS2   TM    TSTAT3,TSTATCLS     TEST CLSDST PENDING                          
         BZ    CTCLS2X             NO                                           
         OC    TNEXTIN,TNEXTIN     IS ANYONE AFTER HIM                          
         BNZ   *+12                FOR FUCKSAKE DONT TAKE HIM OUT               
         TM    TSTAT2,TSTATTIP     TEST TERMINAL IN PROCESS                     
         BZ    CTCLS10             NO - ISSUE CLSDST                            
         MVI   CLSFLAG,C'Y'        SET FLAG FOR DEFERRED CLSDST FOUND           
*                                                                               
CTCLS2X  BXLE  R3,R4,CTCLS2                                                     
         SPACE 1                                                                
*============================================================*                  
* NO CLSDSTS PENDING IN UTL - RESET COUNTER UNLESS DEFERRED  *                  
*   CLSDSTS PENDING                                          *                  
*============================================================*                  
         SPACE 1                                                                
         CLI   CLSFLAG,0           TEST DEFERRED CLSDST PENDING                 
         BNE   CTCLSX              YES - DON'T RESET COUNTER YET                
*                                                                               
CTCLS4   L     R1,CLSQLEN                                                       
         SR    R0,R0                                                            
         CS    R1,R0,CLSQLEN                                                    
         BNZ   CTCLS4                                                           
         B     CTCLSX                                                           
         EJECT                                                                  
         PRINT NOGEN                                                            
CTCLS10  DS    0H                  BEFORE CLSDST, CHECK SESSION ACTIVE          
         GOTO1 =A(LCM),P1,VTGETCID,(R3),0                                       
         OC    12(2,R1),12(R1)     TEST RETURN CODE                             
         BNZ   CTCLS17             NON-ZERO ==> CLEAN UP AND GET OUT            
*                                                                               
         TM    TSTAT4,TST4CLIP     TEST CLSDST IN PROCESS ALREADY               
         BO    CTCLS16             YES - DROP DUPLICATE REQUEST                 
         TM    TSTAT3,TSTATNAM     TEST CLSDST BY NAME NECESSARY                
         BO    CTCLS14                                                          
         ICM   R0,15,TCID          TEST ALREADY DISCONNECTED                    
         BZ    CTCLS16                                                          
*                                                                               
         TM    TSTAT4,TST4SWAP     TEST CLS & SWAP REQUESTED                    
         BO    CTCLS11                                                          
CTCLS10A ST    R3,RPLUSFLD         SET UTL ADDRESS IN RPL                       
         OI    FARPLFLG,FARPLBSY                                                
         CLSDST RPL=(R8),ARG=(R0),OPTCD=(ASY,RELEASE)                           
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         B     CTCLS16                                                          
         EJECT                                                                  
* CLSDST AND SWAP *                                                             
CTCLS11  NI    TSTAT4,255-TST4SWAP CLR SWAP BIT                                 
*                                                                               
         L     RE,VSSB                                                          
         MVC   DUB(1),SSBSYSID-SSBD(RE)                                         
         CLI   TSWAPLID,0          LOOK FOR SWAP ID IN UTL                      
         BE    *+14                                                             
         MVC   DUB(1),TSWAPLID     USE IT IF THERE                              
         B     CTCLS11C                                                         
*                                                                               
         L     RE,=A(SWAPTAB2)                                                  
CTCLS11A CLI   0(RE),X'FF'         EOT DO NORMAL CLSDST                         
         BE    CTCLS10A                                                         
         CLC   0(1,RE),DUB         FIND THIS SYSTEM                             
         BE    CTCLS11B                                                         
         LA    RE,2(RE)                                                         
         B     CTCLS11A            TRY NEXT TABLE ENTRY                         
*                                                                               
CTCLS11B MVC   DUB(1),1(RE)        DUB=SYS TO SWAP TO                           
*                                                                               
CTCLS11C L     RE,=A(SWAPTAB)                                                   
CTCLS11D CLI   0(RE),X'FF'         EOT DO NORMAL CLSDST                         
         BE    CTCLS10A                                                         
         CLC   0(1,RE),DUB         FIND THIS APPLID                             
         BE    CTCLS11E                                                         
         LA    RE,9(RE)                                                         
         B     CTCLS11D            TRY NEXT TABLE ENTRY                         
*                                                                               
CTCLS11E MVC   SWAPLID,1(RE)       MOVE APPLID TO SWAPPLID                      
*                                                                               
         ST    R3,RPLUSFLD         SET UTL ADDRESS IN RPL                       
         OI    FARPLFLG,FARPLBSY                                                
         CLSDST RPL=(R8),ARG=(R0),OPTCD=(ASY,PASS),AAREA=SWAPLID,      X        
               PARMS=(THRDPTY=NONOTIFY)                                         
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         B     CTCLS16                                                          
SWAPLID  DC    CL8' '                                                           
         EJECT                                                                  
* CLSDST BY NAME *                                                              
         SPACE 1                                                                
CTCLS14  L     R4,FARPLNIB                                                      
         USING ISTDNIB,R4                                                       
         MVC   NIBSYM,TSYM                                                      
         ST    R3,RPLUSFLD         SET IN RPL IN CASE CLSDST DOESN'T            
         OI    FARPLFLG,FARPLBSY                                                
         CLSDST RPL=(R8),NIB=(R4),OPTCD=(ASY,RELEASE)                           
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
*                                                                               
CTCLS16  OI    TSTAT4,TST4CLIP     SET CLSDST IN PROCESS                        
*                                                                               
CTCLS17  NI    TSTAT3,X'FF'-TSTATCLS-TSTATNAM-TSTATBB                           
         XC    TCID,TCID           RESET CID                                    
         LA    R1,CLSQLEN          NOW ADJUST COUNT                             
         BAS   RE,QDOWN                                                         
*                                                                               
         TM    TSTAT3,TSTATLOG     TEST LOGON PENDING TOO                       
         BZ    CTCLS18                                                          
         NI    TSTAT3,X'FF'-TSTATLOG                                            
         LA    R1,LOGQLEN                                                       
         BAS   RE,QDOWN                                                         
*                                                                               
CTCLS18  TM    TSTAT3,TSTATSIM     TEST SIMLOGON PENDING TOO                    
         BZ    CTCLSX                                                           
         NI    TSTAT3,X'FF'-TSTATSIM                                            
         LA    R1,SIMQLEN                                                       
         BAS   RE,QDOWN                                                         
*                                                                               
CTCLSX   B     NXTRPL                                                           
         EJECT                                                                  
* AS OF 12 SEP 90 14.55 I WOULD HOPE THAT WE NEVER HAVE TO LOOK AT              
* THE STUPID FUCKING CLSDST INSTRUCTIONS AGAIN. CERTAINLY THE ONES THAT         
* FOLLOW THIS REMARK DO NOT WORK TOO WELL.                                      
*======================================================*                        
* CLSDEST PENDING ON DEVICE IN A QUEUE                 *                        
* PURGE DEVICE FROM INPUT OR OUTPUT QUEUE              *                        
* R3 POINTS TO UTL ENTRY OF TERMINAL TO BE PURGED      *                        
*======================================================*                        
         SPACE 1                                                                
CTCLS20  L     RE,OUTQFRST         GET POINTER TO FIRST IN Q                    
         CR    R3,RE               IS IT FIRST IN Q                             
         BNE   CTCLS22             NO                                           
         MVC   OUTQFRST+1(3),TNEXT SET NEW HEAD OF QUEUE                        
         B     CTCLS26                                                          
*                                                                               
CTCLS22  CLM   R3,7,TNEXT-UTLD(RE) IS IT NEXT IN QUEUE                          
         BE    CTCLS24                                                          
         ICM   RE,7,TNEXT-UTLD(RE)                                              
         BNZ   CTCLS22                                                          
         B     CTCLS30             NOT FOUND IN O/P QUEUE                       
*                                                                               
CTCLS24  MVC   TNEXT-UTLD(3,RE),TNEXT                                           
*                                                                               
CTCLS26  OC    TNEXT,TNEXT         WERE WE LAST IN QUEUE                        
         BNZ   *+14                                                             
         ST    RE,OUTQLAST         YES - SET NEW LAST                           
         XC    TNEXT,TNEXT                                                      
         L     R0,OUTQLEN                                                       
         BCTR  R0,0                DECR QUEUE LEN                               
         ST    R0,OUTQLEN                                                       
         LTR   R0,R0               TEST ANY LEFT IN QUEUE                       
         BNZ   *+10                                                             
         XC    OUTQLAST,OUTQLAST                                                
*                                                                               
CTCLS28  NI    TSTAT3,X'FF'-TSTATWRT                                            
         L     R1,TBUFF                                                         
         XC    TBUFF,TBUFF                                                      
         BAS   RE,FREEBUFF         FREE THE OUTPUT BUFFER                       
         B     CTCLS10             GO BACK AND ISSUE CLSDST                     
         EJECT                                                                  
*========================================================*                      
* NOT FOUND IN O/P QUEUES - SEARCH I/P QUEUES            *                      
*========================================================*                      
         SPACE 1                                                                
CTCLS30  SR    RF,RF                                                            
         ICM   RF,7,TASYS          POINT TO SELIST                              
         BZ    *+12                                                             
         BAS   RE,CHKSE            REMOVE FROM QUEUE  (IF THERE)                
         BE    CTCLS28                                                          
*                                                                               
         L     RF,VSELIST          NOT IN SYSTEM QUEUE SEARCH SE1               
         LA    RF,6(RF)                                                         
         BAS   RE,CHKSE            REMOVE FROM SE1 QUEUE (IF THERE)             
         B     CTCLS28                                                          
*                                                                               
         USING SELISTD,RF                                                       
CHKSE    L     R1,SEFIRST                                                       
         CR    R3,R1                   ARE WE FIRST IN QUEUE                    
         BNE   CHKSE2                                                           
         MVC   SEFIRST+1(3),TNEXTIN    SET NEW HEAD OF QUEUE                    
         B     CHKSE6                                                           
*                                                                               
CHKSE2   CLM   R3,7,TNEXTIN-UTLD(R1)   ARE WE NEXT IN QUEUE                     
         BE    CHKSE4                                                           
         ICM   R1,7,TNEXTIN-UTLD(R1)                                            
         BNZ   CHKSE2                                                           
         B     CHKSENQ                 NOT FOUND IN QUEUE                       
*                                                                               
CHKSE4   MVC   TNEXTIN-UTLD(3,R1),TNEXTIN                                       
*                                                                               
CHKSE6   OC    TNEXTIN,TNEXTIN         WERE WE LAST IN QUEUE                    
         BZ    *+14                                                             
         ST    R1,SELAST               YES - SET NEW LAST                       
         XC    TNEXTIN,TNEXTIN                                                  
*                                                                               
         LH    R0,SEQLEN                                                        
         BCTR  R0,0                DECR QUEUE LEN                               
         STH   R0,SEQLEN                                                        
         LTR   R0,R0               TEST ANY LEFT IN QUEUE                       
         BNZ   CHKSEQ                                                           
         XC    SELAST,SELAST                                                    
*                                                                               
CHKSEQ   CR    RE,RE               REMOVED FROM QUEUE OK                        
         BR    RE                                                               
CHKSENQ  LTR   RE,RE               NOT FOUND IN QUEUE                           
         BR    RE                                                               
         DROP  RF                                                               
         EJECT                                                                  
*========================================================*                      
* DECREMENT QUEUE COUNT AT 0(R1)                         *                      
* RE IS RETURN REG; R0 AND RF ARE MODIFIED               *                      
*========================================================*                      
         SPACE 1                                                                
QDOWN    DS    0H                                                               
         L     R0,0(R1)                                                         
         LR    RF,R0                                                            
         BCTR  RF,0                DECREMENT COUNT                              
         CS    R0,RF,0(R1)         DEAD GOOD THIS ONE                           
         BNZ   QDOWN                                                            
         BR    RE                                                               
         SPACE 2                                                                
*========================================================*                      
* INCREMENT QUEUE COUNT AT 0(R1)                         *                      
* RE IS RETURN REG; R0 AND RF ARE MODIFIED               *                      
*========================================================*                      
         SPACE 1                                                                
QUP      DS    0H                                                               
         L     RF,0(R1)                                                         
         LA    R0,1(RF)            BUMP COUNT                                   
         CS    RF,R0,0(R1)         DEAD GOOD THIS ONE                           
         BNZ   QUP                                                              
         BR    RE                                                               
         EJECT                                                                  
*==========================================================*                    
* QUEUE A PRINTER VIA MSGQIN IF OUTPUT BUFFER AVAILABLE    *                    
*==========================================================*                    
         SPACE 1                                                                
PRT      DS    0H                                                               
         ICM   R4,15,PRTQLEN       TEST PRINTER WRITE PENDING                   
         BZ    EXIT                NO - EXIT                                    
         OC    PRTQFRST,PRTQFRST   TEST HAVE A VALID QUEUE                      
         BNZ   PRT2                YES                                          
* IF NON-ZERO COUNTER WITH NO HEAD OF QUEUE, CLEAR COUNTER AND EXIT             
         XC    PRTQLEN,PRTQLEN                                                  
         XC    PRTQLAST,PRTQLAST   CAN'T HAVE LAST IF NO FIRST                  
         B     EXIT                                                             
*                                                                               
PRT2     BAS   RE,GETBUFF          GET A BUFFER                                 
         LTR   R1,R1               TEST AVAILABLE                               
         BZ    EXIT                NO - EXIT                                    
         BCTR  R4,0                DECREMENT Q LEN                              
         ST    R4,PRTQLEN                                                       
*                                                                               
         L     R3,PRTQFRST         GET FIRST UTL ENTRY ADDRESS                  
         LA    R3,0(R3)            CLEAR HOB                                    
         USING UTLD,R3                                                          
         ST    R1,TBUFF              SET BUFFER ADDRESS                         
         MVC   PRTQFRST+1(3),TNEXT   UPDATE FIRST IN QUEUE                      
         XC    TNEXT,TNEXT                                                      
         OC    PRTQFRST,PRTQFRST                                                
         BNZ   *+10                                                             
         XC    PRTQLAST,PRTQLAST                                                
*                                                                               
         GOTO1 =V(MSGQIN),P1,(R2),TBUFF,(R3)                                    
         B     PRT                                                              
         EJECT                                                                  
*===========================================*                                   
* ERROR PROCESSING ROUTINES                 *                                   
*===========================================*                                   
         SPACE 1                                                                
LCERR    DS    0H                                                               
         TM    TSTAT4,TST4TRC      TEST TRACE ACTIVE                            
         BO    *+8                 YES - EVENT ALREADY TRACED                   
         BAS   RE,LCMTRC           ELSE TRACE IT NOW                            
*                                                                               
         XC    RPLECB,RPLECB                                                    
         CLC   =X'2003',RPLSSEI    TEST BRACKET STATE ERROR                     
         BE    LCERR20             YES - IGNORE ERROR                           
*                                                                               
         ICM   R3,15,RPLUSFLD      POINT TO UTL ENTRY                           
         BZ    LCERR10                                                          
         USING UTLD,R3                                                          
*                                                                               
         NI    TSTAT3,X'FF'-TSTATWIP  RESET WRITE IN PROC BIT                   
         OC    TPRNT,TPRNT         TEST PRINTER                                 
         BZ    LCERR10             NO                                           
         CLI   RPLREQ,RPLOPNDS     TEST OPNDST REQUEST                          
         BE    LCERR2                                                           
         CLI   RPLREQ,RPLSMLGO     TEST SIMLOGON REQUEST                        
         BNE   LCERR10                                                          
*                                                                               
LCERR2   OI    TSTAT4,TST4UNLG     SET PRINTER UNABLE TO LOG ON                 
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         OI    PRSTAT2-PRHDR(RE),PRS2UNLG  SET FLAG IN PRTQUE TOO               
         MVI   PRSTAT-PRHDR(RE),PRSERR     SET MASTER ERROR FLAG                
*                                                                               
LCERR10  MVC   DUB(1),RPLRTNCD                                                  
         MVC   DUB+1(1),RPLFDB2                                                 
         L     R1,=A(ERRTAB)                                                    
*                                                                               
LCERR12  CLC   DUB(2),0(R1)        MATCH RETURN/FDBK2 CODES                     
         BE    LCERR14                                                          
         LA    R1,6(R1)                                                         
         CLI   0(R1),X'FF'                                                      
         BNE   LCERR12                                                          
         DC    H'0'                UBEXPECTED ERROR CODE                        
*                                                                               
LCERR14  CLC   2(4,R1),=A(IGNORE)                                               
         BE    LCERR20                                                          
         CLC   2(4,R1),=A(DUMP)                                                 
         BNE   *+6                                                              
         DC    H'0'                                                             
         EJECT                                                                  
*                                                                               
LCERR16  ICM   RF,15,2(R1)         GET PROCESSNG ROUTINE ADDRESS                
         BNZ   *+6                                                              
         DC    H'0'                NO WAY TO DEAL WITH IT                       
         ICM   R3,15,RPLUSFLD      MAKE SURE RPLUSFLD STILL VALID               
         BZ    LCERR20             IF NOT, LET'S GET OUT FAST                   
         BASR  RE,RF               DON'T EXPECT RETURN HERE                     
*                                                                               
LCERR20  TM    FARPLFLG,FARPLWRT   TEST A WRITE RPL                             
         BZ    LCERRX                                                           
         ICM   R1,15,FARPLIOA      TEST I/O AREA GIVEN                          
         BZ    LCERRX                                                           
         BAS   RE,FREEBUFF         RELEASE THE BUFFER                           
         XC    FARPLIOA,FARPLIOA                                                
*                                                                               
LCERRX   B     NXT8                RETURN TO MAINLINE                           
         EJECT                                                                  
*=================================================*                             
* SIMLOGON/OPNDST FAILED - SET ERROR IF PRINTER   *                             
*=================================================*                             
         SPACE 1                                                                
LC0008   DS    0H                                                               
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         BZ    LC0404                                                           
         CLC   =X'0805',RPLSSEI    TEST SESSION LIMIT EXCEEDED                  
         BE    LC2019B             YES - SHUT PREVIOUS SESSION DOWN             
         MVI   PRSTAT-PRHDR(RE),PRSERR      SET MASTER ERROR FLAG               
         OI    PRSTAT3-PRHDR(RE),PRS3FTS    SET FAILED TO START                 
         B     LC0404X                      AND CLSDST IF NECESSARY             
         SPACE 1                                                                
*=================================================*                             
* THIS IS A NEGATIVE RESPONSE FROM A 3270 PRINTER *                             
*=================================================*                             
         SPACE 1                                                                
LC0403   DS    0H                  EXCEPTION REQ RCVD                           
         CLC   RPLUSNSI,=X'0200'   TEST PURE DEVICE END POSTED                  
         BNE   LC0404              IF NOT, TREAT AS AN ERROR                    
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         BZ    LCERRX              IGNORE THIS                                  
         TM    PRSTAT-PRHDR(RE),PRSERR  TEST CURRENT STATUS = ERROR             
         BZ    *+12                     NO                                      
         NI    PRSTAT-PRHDR(RE),255-PRSERR  YES - RESET ERROR                   
         OI    PRSTAT-PRHDR(RE),PRSACTV        AND SET PRINTER ACTIVE           
         B     NXT40                                                            
         SPACE 2                                                                
*=================================================*                             
* THIS IS A NEGATIVE RESPONSE                     *                             
*=================================================*                             
         SPACE 1                                                                
LC0404   DS    0H                  NEGATIVE RESP RCVD                           
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT          TEST DEVICE IS A PRINTER                     
         BZ    LC0404C             NO                                           
         TM    RPLSSEI,X'80'       TEST PATH ERROR                              
         BZ    LC0404A             NO                                           
         OI    PRSTAT2-PRHDR(RE),PRS2PATH  SET PATH ERROR FLAG                  
*                                                                               
LC0404A  DS    0H                                                               
         CLC   =X'2003',RPLSSEI    TEST FAILED TO START BRACKET                 
         BNE   LC0404B                                                          
         NI    TSTAT3,X'FF'-TSTATBB       SET TO START NEXT TIME                
         OI    PRSTAT2-PRHDR(RE),PRS2RTB  SET RETRANSMIT FLAG                   
         GOTO1 =A(LCM),P1,VTPRSTRT,(R3)   QUEUE PRINTER FOR WRITE               
         B     LCERR20                                                          
*                                                                               
LC0404B  MVI   PRSTAT-PRHDR(RE),PRSERR                                          
         B     LCERR20                                                          
*                                                                               
LC0404C  CLC   =X'0813',RPLSSEI    TEST BRACKET BID REJECT                      
         BNE   LC0404D                                                          
         TM    TSTAT3,TSTATBRJ     TEST PREVIOUS BRACKET REJECT                 
         BO    LC0404X             YES - MAKE SURE NO LOOP                      
         OC    TBUFF,TBUFF         TEST BUFFER PRESENT                          
         BNZ   LCERR20             YES - IGNORE ERROR                           
         OI    TSTAT3,TSTATBRJ     NO - SET FLAG ON                             
         MVC   TBUFF,FARPLIOA      GIVE THE BUFFER TO THE TRM                   
         XC    FARPLIOA,FARPLIOA                                                
         B     NXTSEND             AND SEND WITHOUT START BRACKET               
*                                                                               
LC0404D  OI    TSTAT2,TSTATNIT     SET TRM NOT INITIALIZED                      
         CLC   =X'082B',RPLSSEI    TEST PRESENTATION SPACE LOST                 
         BE    LC0404X                                                          
         CLC   =X'0831',RPLSSEI                                                 
         BE    LC0404X                                                          
         B     LCERR20                                                          
         SPACE 1                                                                
*======================================================*                        
* CLSDST THE TERMINAL FOR SPECIAL ERROR SITUATIONS     *                        
*======================================================*                        
         SPACE 1                                                                
LC0404X  TM    TSTAT3,TSTATCLS     TEST CLSDST PENDING                          
         BO    LC0404X2                                                         
         TM    TSTAT2,TSTATTIP     TEST TRM IN PROCESS                          
         BO    LCERRX              IGNORE ERROR IF TRM IN PROCESS               
         OI    TSTAT3,TSTATCLS     SET CLSDST PENDING                           
         LA    R1,CLSQLEN                                                       
         BAS   RE,QUP                                                           
LC0404X2 DS    0H                                                               
         POST  LCMECB                                                           
         B     LCERR20                                                          
         EJECT                                                                  
*================================================*                              
* TEMPORARY STORAGE SHORTAGE - WAIT AND RETRY    *                              
*================================================*                              
         SPACE 1                                                                
LC0800   DS    0H                  TEMP STORAGE SHORTAGE                        
         STIMERM SET,ID=STIMERID,BINTVL=WAITTIME,WAIT=YES                       
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
* RETRY THE FAILING RPL                                                         
         L     R1,FARPLRPL                                                      
         OI    FARPLFLG,FARPLBSY                                                
         EXECRPL RPL=(1)                                                        
         B     LCERR20                                                          
         EJECT                                                                  
*========================================================*                      
* CID IS NOT VALID - SEE IF VTAM HAS A BETTER ONE        *                      
*========================================================*                      
         SPACE 1                                                                
LC2019   DS    0H                  INVALID CID - ASSUME LOST SESSION            
         L     R4,TCID             SAVE OLD CID                                 
         XC    TCID,TCID           MY CID IS NO GOOD SO CLEAR IT                
         GOTO1 =A(LCM),P1,VTGETCID,(R3),0                                       
         OC    12(2,R1),12(R1)     TEST RCFD=0                                  
         BZ    LC2019A             IF SO, TRY RESEND WITH NEW CID               
*                                  ELSE ASSUME LOST SESSION                     
         MVI   DDSFLAG,5           SET TRACE MSGNUM                             
         BAS   RE,LCMTRC                                                        
*                                                                               
         NI    TSTAT3,X'FF'-TSTATBB  RESET BRACKET CONTROL                      
         SR    RE,RE                                                            
         ICM   RE,7,TPRNT                                                       
         BZ    LCERR20                                                          
         TM    PRSTAT2-PRHDR(RE),PRS2PATH DID WE HAVE A PATH ERROR              
         BO    LCERR20                    YES - LEAVE STATUS FOR SRTIM          
         MVI   PRSTAT-PRHDR(RE),0                                               
         NI    PNEX-PRHDR(RE),X'FF'-PREXACTV                                    
         LA    RF,PRCIADDR-PRHDR(RE)                                            
         XC    0(4,RF),0(RF)                                                    
         B     LCERR20                                                          
*                                                                               
LC2019A  L     R0,8(R1)            PICK UP NEW CID                              
         ST    R0,TCID             SAVE IN UTL                                  
*                                                                               
         MVI   DDSFLAG,6           SET TRACE MSGNUM                             
         BAS   RE,LCMTRC                                                        
*                                                                               
         CR    R4,R0               TEST OLD CID = NEW CID                       
         BNE   LC2019D                                                          
         EJECT                                                                  
LC2019B  DS    0H                                                               
         OI    TSTAT3,TSTATNAM     SET CLSDST BY NAME REQUIRED                  
         TM    TSTAT3,TSTATCLS     TEST CLSDST ALREADY PENDING                  
         BO    LC2019C                                                          
         OI    TSTAT3,TSTATCLS     SET CLSDST PENDING                           
         LA    R1,CLSQLEN                                                       
         BAS   RE,QUP                                                           
LC2019C  DS    0H                                                               
         POST  LCMECB                                                           
         B     LCERR20                                                          
*                                                                               
LC2019D  CLI   RPLREQ,RPLSNDCD     TEST OPCODE = SEND                           
         BNE   LCERR20                                                          
*                                                                               
         SEND  RPL=(R8),ARG=(R0)   AND TRY AGAIN                                
         B     WRT25               AND GO POST RPL BUSY                         
*                                                                               
WAITTIME DC    F'100'              ONE SECOND                                   
STIMERID DC    F'0'                                                             
         EJECT                                                                  
*=====================================================================*         
* BUILD STATUS MESSAGE AT AREA POINTED TO BY R1                       *         
* NOTE R3 POINTS TO UTL ENTRY                                         *         
*=====================================================================*         
         SPACE 1                                                                
BLDSTAT  STM   RE,R1,BLDSTATR      SAVE REGISTERS                               
*                                                                               
         MVC   BLDSTATA(6),=6C'0'  SET OUTPUT COUNTS TO ZERO                    
         MVC   BLDSTATB(4),=6C'0'                                               
         MVC   BLDSTATC(2),=6C'0'                                               
*                                                                               
         L     R1,VTCB             SEARCH TCB FOR UTL ENTRY                     
         LH    RE,0(R1)                                                         
         L     RF,2(R1)                                                         
         LA    R1,6(R1)                                                         
         CLM   R3,7,TCBUTL+1-TCBD(R1)                                           
         BE    *+12                                                             
         BXLE  R1,RE,*-8                                                        
         B     BLDSTATX            IF NOT IN TASK THEN ZERO COUNTS              
*                                                                               
         L     RF,TCBCPUTM-TCBD(R1)                                             
         LA    RE,10                                                            
         MR    RE,RE                                                            
         LA    R0,1                                                             
         DR    RE,R0                                                            
         CVD   RF,BLDSTATD         CPU TIME (MILLISECONDS)                      
         OI    BLDSTATD+7,X'0F'                                                 
         UNPK  BLDSTATA(6),BLDSTATD                                             
*                                                                               
         LH    RF,TCBIOCNT-TCBD(R1)                                             
         CVD   RF,BLDSTATD         I/O COUNT                                    
         OI    BLDSTATD+7,X'0F'                                                 
         UNPK  BLDSTATB(4),BLDSTATD                                             
*                                                                               
         SR    RF,RF                                                            
         IC    RF,TCBPRTY-TCBD(R1)                                              
         CVD   RF,BLDSTATD         TASK PRIORITY                                
         OI    BLDSTATD+7,X'0F'                                                 
         UNPK  BLDSTATC(2),BLDSTATD                                             
*                                                                               
BLDSTATX LM    RE,R1,BLDSTATR                                                   
         MVC   0(60,R1),BLDSTATM   MOVE MESSAGE TO OUTPUT AREA                  
         BR    RE                                                               
         SPACE 1                                                                
BLDSTATM DC    C'**STATUS** TRANSACTION PROCESSING UNITS='                      
BLDSTATA DC    C'000000,'                                                       
BLDSTATB DC    C'0000,'                                                         
BLDSTATC DC    C'00      '                                                      
BLDSTATD DS    D                                                                
BLDSTATR DS    4F                                                               
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
*===========================================================*                   
* SEARCH BUFFER LIST FOR A FREE BUFFER                      *                   
* RETURN BUFFER ADDRESS IN R1 (0 IF NO BUFFER)              *                   
*===========================================================*                   
         SPACE 1                                                                
         PRINT NOGEN                                                            
GETBUFF  NTR1                                                                   
*                                                                               
GETBUFF2 ICM   RE,15,LCBUFFS       GET FREE BUFFER COUNT                        
         BNZ   GETBUFF4                                                         
         SR    R1,R1                                                            
         B     GETBUFFX                                                         
*                                                                               
GETBUFF4 LR    RF,RE                                                            
         BCTR  RF,0                                                             
         CS    RE,RF,LCBUFFS       DEAD GOOD (REALLY)                           
         BNZ   GETBUFF2                                                         
*                                                                               
         L     R5,VLCBUFFS         NOW FIND A FREE ENTRY                        
         LA    RE,4                                                             
         L     RF,VLCBUFFX                                                      
*                                                                               
         CLI   0(R5),0             TEST FREE                                    
         BE    *+10                YES                                          
         BXLE  R5,RE,*-8                                                        
         DC    H'0'                NOT WONDERFUL THIS                           
*                                                                               
         L     R1,0(R5)                                                         
         MVI   0(R5),1             FLAG BUFFER BUSY                             
*                                                                               
GETBUFFX DS    0H                                                               
         XIT1  REGS=(R1)                                                        
         EJECT                                                                  
*===========================================================*                   
* FREE BUFFER ADDRESS IN R1                                 *                   
*===========================================================*                   
         SPACE 1                                                                
FREEBUFF NTR1                                                                   
         LTR   R1,R1                                                            
         BZ    FREEBUFX            MUST HAVE A(BUFFER TO FREE)                  
*                                                                               
         L     R5,VLCBUFFS                                                      
         LA    RE,4                                                             
         L     RF,VLCBUFFX                                                      
*                                                                               
FREEBUF2 CLM   R1,7,1(R5)          MATCH ADDRESS                                
         BE    FREEBUF4                                                         
         BXLE  R5,RE,FREEBUF2                                                   
         DC    H'0'                                                             
*                                                                               
FREEBUF4 DS    0H                                                               
         CLI   0(R5),1             BUFFER SHOULD BE BUSY                        
         BE    *+6                                                              
         DC    H'0'                                                             
         MVI   0(R5),0             RESET 'BUSY' FLAG                            
*                                                                               
FREEBUF6 L     RE,LCBUFFS                                                       
         LA    RF,1(RE)                                                         
         CS    RE,RF,LCBUFFS                                                    
         BNZ   FREEBUF6                                                         
FREEBUFX XIT1                                                                   
         TITLE 'FALCM - START A PRINTER '                                       
*========================================================*                      
* STRTPR - START A PRINTER                               *                      
*          ON ENTRY R1 POINTS TO PRINTER UTL ENTRY       *                      
*========================================================*                      
         SPACE 1                                                                
STRTPR   DS    0H                                                               
*                                                                               
         L     R3,4(R1)            PICK UP UTL ENTRY ADDRESS                    
         LA    R3,0(R3)            CLEAR HOB                                    
         USING UTLD,R3                                                          
*                                                                               
STRTPR2  OC    TCID,TCID           TEST LOGGED ON                               
         BNZ   STRTPR6                                                          
         SPACE 1                                                                
*========================================================*                      
* PRINTER IS NOT LOGGED ON, ADD TO SIMLOGON QUEUE        *                      
*========================================================*                      
         SPACE 1                                                                
         OI    TSTAT3,TSTATSIM     SET SIMLOGON PENDING                         
*                                                                               
STRTPR4  LA    R1,SIMQLEN          BUMP THE CTL QUEUE LENGTH                    
         BAS   RE,QUP                                                           
         B     STRTPRX                                                          
         SPACE 1                                                                
*========================================================*                      
* PRINTER IS LOGGED ON - ADD TO PRINTER OUTPUT QUEUE     *                      
*========================================================*                      
         SPACE 1                                                                
STRTPR6  LA    R1,PRTQLEN                                                       
         BAS   RE,QUP                                                           
*                                                                               
         ICM   RE,15,PRTQLAST                                                   
         BNZ   STRTPR8                                                          
         ST    R3,PRTQFRST                                                      
         B     STRTPR10                                                         
*                                                                               
STRTPR8  STCM  R3,7,(TNEXT-UTLD)(RE)                                            
*                                                                               
STRTPR10 ST    R3,PRTQLAST                                                      
*                                                                               
STRTPRX  DS    0H                                                               
         POST  LCMECB                                                           
         XIT1                                                                   
         TITLE 'FALCM - STOP A PRINTER'                                         
*========================================================*                      
* STOPPR - CLSDST A DEVICE TO RELEASE IT                 *                      
*          ON ENTRY R1 POINTS TO UTL ENTRY               *                      
*========================================================*                      
         SPACE 1                                                                
STOPPR   DS    0H                                                               
         L     R3,4(R1)            PICK UP UTL ENTRY ADDRESS                    
         USING UTLD,R3                                                          
         SPACE 1                                                                
*========================================================*                      
* IF LU  IS LOGGED ON, ADD TO THE CLSDST QUEUE           *                      
*========================================================*                      
         SPACE 1                                                                
         TM    TSTAT3,TSTATCLS     TEST CLSDST PENDING                          
         BO    STOPPRX                                                          
         TM    TSTAT4,TST4CLIP     TEST CLSDST IN PROCESS                       
         BO    STOPPRX                                                          
         OI    TSTAT3,TSTATCLS     SET CLSDST PENDING                           
*                                                                               
         OC    TCID,TCID           TEST LOGGED ON                               
         BNZ   *+8                 YES                                          
         OI    TSTAT3,TSTATNAM     ELSE SET CLSDST BY NAME                      
         SPACE 1                                                                
         LA    R1,CLSQLEN                                                       
         BAS   RE,QUP                                                           
         POST  LCMECB                                                           
*                                                                               
STOPPRX  XIT1                                                                   
         EJECT                                                                  
*=====================================================================*         
* LCWRITE - MONITOR ENTERS HERE TO SEND A MESSAGE TO A TERMINAL       *         
*                                                                     *         
* P2 HAS UTL ENTRY ADDRESS.                                           *         
* P3 HAS BUFFER ADDRESS OR                       (FOR EXP FLOW MSG)   *         
*        0,IN WHICH CASE TBUFF POINTS TO BUFFER  (FOR NORMAL FLOW MSG)*         
* BUFFER IS PRECEDED BY AN EIGHT BYTE HEADER THAT CONTAINS            *         
*                                                                     *         
* BYTES 0-3    UTL ENTRY ADDRESS                                      *         
*         4    SPARE                                                  *         
*         5    X'01'=WRITE ERASE/X'02'=SOUND ALARM                    *         
*       6-7    MESSAGE LENGTH                                         *         
*=====================================================================*         
         SPACE 1                                                                
LCW      DS    0H                                                               
         LM    R3,R4,4(R1)         R3=A(UTL ENTRY)                              
         USING UTLD,R3             R4=ZERO IF TBUFF ELSE IS A(BUFFER)           
*                                                                               
         LTR   R4,R4               TEST NORMAL ENTRY                            
         BZ    *+12                YES                                          
*** DO WE NEED AN LU6.2 TEST HERE??                                             
         TM    TSTAT3,TSTATWRT     IS A WRITE ALREADY PENDING                   
         BO    LCW20                                                            
*                                                                               
         OI    TSTAT3,TSTATWRT     SET WRITE PENDING                            
         LTR   R4,R4               TEST FOR NORMAL FLOW MESSAGE                 
         BZ    LCW2                YES - ADDRESS IS IN TBUFF                    
         ST    R4,TMSGBUFF         SAVE EXP FLOW MSG ADDRESS                    
         B     LCW14                                                            
*                                                                               
LCW2     DS    0H                                                               
         OC    TCID,TCID           TEST TERMINAL LOGGED ON                      
         BNZ   LCW14               YES                                          
         SPACE 1                                                                
*==========================================*                                    
* IF TRM NOT LOGGED ON, RELEASE THE BUFFER *                                    
*==========================================*                                    
         SPACE 1                                                                
         LTR   R1,R4               TEST HAVE BUFFER ADDRESS                     
         BNZ   LCW4                                                             
         ICM   R1,15,TBUFF                                                      
         BZ    LCW6                TEST SOMEHOW IT HAS NO BUFFER                
*                                                                               
LCW4     BAS   RE,FREEBUFF                                                      
*                                                                               
LCW6     NI    TSTAT3,X'FF'-TSTATWRT                                            
         XC    TBUFF,TBUFF         CLEAR TERMINAL BUFFER ADDR                   
         B     LCWX                                                             
         EJECT                                                                  
         SPACE 1                                                                
*===========================================*                                   
* IF TRM LOGGED ON, ADD TO THE OUTPUT QUEUE *                                   
*===========================================*                                   
LCW14    L     R1,OUTQLEN                                                       
         LA    R1,1(R1)                                                         
         ST    R1,OUTQLEN                                                       
         ICM   RE,15,OUTQLAST                                                   
         BNZ   LCW16                                                            
         ST    R3,OUTQFRST                                                      
         B     LCW18                                                            
*                                                                               
LCW16    STCM  R3,7,(TNEXT-UTLD)(RE)   POINT CURRENT LAST TO ME                 
*                                                                               
LCW18    ST    R3,OUTQLAST             AND MAKE ME LAST                         
         POST  LCMECB                                                           
         B     LCWX                                                             
         EJECT                                                                  
*===========================================================*                   
* A WRITE IS PENDING -                                      *                   
* THIS MUST BE A NORMAL FLOW MSG WITH EXP FLOW IN QUEUE     *                   
* WE WILL ATTEMPT TO PURGE THE EXP FLOW BUFFER AND JUST     *                   
* WRITE THE NORMAL MESSAGE       (HA HA)                    *                   
*===========================================================*                   
         SPACE 1                                                                
LCW20    OC    TMSGBUFF+1(3),TMSGBUFF+1                                         
         BZ    LCWX                                                             
*                                                                               
         L     R5,VLCBUFFS                                                      
         LA    RE,4                                                             
         L     RF,VLCBUFFX                                                      
         CLC   TMSGBUFF+1(3),1(R5)                                              
         BE    *+10                                                             
         BXLE  R5,RE,*-10                                                       
         DC    H'0'                                                             
         MVI   0(R5),0             RESET BUSY FLAG                              
         XC    TMSGBUFF,TMSGBUFF   AND CLEAR EXP FLOW ADDRESS                   
*                                                                               
LCW25    L     RE,LCBUFFS          ADJUST AVAIL BUFFER COUNT                    
         LA    RF,1(RE)                                                         
         CS    RE,RF,LCBUFFS                                                    
         BNZ   LCW25                                                            
*                                                                               
LCWX     XIT1                                                                   
*                                                                               
         LTORG                                                                  
         TITLE 'FALCMV - VTAM LINE CONTROL - START-UP'                          
*===========================================================*                   
* VTAM OPEN/CLOSE ROUTINES                                  *                   
*===========================================================*                   
         SPACE 1                                                                
CLS      DS    0H                                                               
         CLOSE ACB                                                              
         B     EXIT                                                             
         SPACE 1                                                                
OPN      DS    0H                                                               
         L     RE,=V(SSB)                                                       
         LA    RE,SSBVTID-SSBD(RE)   POINT TO VTAM ID                           
         MVC   APPLID+1(8),0(RE)                                                
*                                                                               
         LA    R0,8                                                             
         LA    R1,APPLID+8         POINT TO LAST CHAR                           
         CLI   0(R1),C' '                                                       
         BH    *+10                                                             
         BCTR  R1,0                                                             
         BCT   R0,*-10                                                          
         STC   R0,APPLID           SET ACTUAL LENGTH                            
*                                                                               
OPN2     LA    R1,ACB                                                           
         USING IFGACB,R1                                                        
         L     RF,ACBTNIB          GET NIB POINTER                              
         USING ISTDNIB,RF                                                       
         MVC   NIBSYM,APPLID+1     MOVE APPL ID TO NIB                          
         DROP  RF                                                               
*                                                                               
         OPEN  ACB                                                              
*                                                                               
         LTR   RF,RF                                                            
         BNZ   OPNERR                                                           
         SPACE 1                                                                
* SET THE NUMBER OF BUFFERS *                                                   
         SPACE 1                                                                
         L     RF,VLCBUFFX                                                      
         LA    RF,1(RF)            ARITHMETIC                                   
         S     RF,VLCBUFFS                                                      
         SRL   RF,2                DIVIDE BY 4                                  
         ST    RF,LCBUFFS                                                       
         EJECT                                                                  
*==============================================================*                
* SET THE ACB ADDRESS IN EACH RPL                              *                
* AND MOVE THE 8 CHAR APPLID TO THE NIB                        *                
*==============================================================*                
         SPACE 1                                                                
         L     R7,=A(RPLLST)                                                    
         USING FARPLD,R7                                                        
*                                                                               
OPN10    L     R8,FARPLRPL         POINT TO RPL                                 
         USING IFGRPL,R8                                                        
         LA    R0,ACB                                                           
         ST    R0,RPLDACB          SET ACB ADDRESS                              
*                                                                               
         TM    FARPLFLG,FARPL62    IS THIS AN LU6.2 FARPL                       
         BO    OPNL62              YES, PROCESS DIFFERENTLY                     
         L     RF,RPLARG           GET NIB POINTER                              
         USING ISTDNIB,RF                                                       
         MVC   NIBSYM,APPLID+1                                                  
         DROP  RF                                                               
         B     OPNNXTR             GO GET NEXT RPL                              
OPNL62   DS    0H                                                               
R62LEN   EQU   RPL62AX-RPL62A                                                   
         LA    RF,R62LEN(,R8)      RPL EXTENSION RIGHT AFTER RPL                
         ST    RF,RPLAAREA         CHAIN IT TO THE RPL                          
*                                                                               
OPNNXTR  ICM   R7,15,FARPLNXT                                                   
         BNZ   OPN10                                                            
*                                                                               
         L     R7,=A(FMH5FARP)   USE THE DESIGNATED FARPL                       
*NOP     L     R4,AFMHAREA       READ FMH5 INTO THIS AREA                       
*                                                                               
*    NOW INITIALIZE THE DEDICATED FARPL'S FOR LATER USE                         
*                                                                               
*                                                                               
         L     R7,=A(RECVFARP)                                                  
OPN20    L     R8,FARPLRPL         POINT TO RPL                                 
*                                                                               
         BAS   RE,GETBUFF          GO GET BUFFER                                
         LTR   R1,R1               TEST BUFFER OBTAINED                         
         BNZ   *+6                                                              
         DC    H'0'                REAL WEIRD IF NONE AVAILABLE NOW             
         ST    R1,FARPLIOA         ELSE SET ADDRESS IN RPL                      
*NOP     MVC   WTOB20+4(12),=C' AT OPEN   '                                     
*NOP     STCM  R2,15,WTOB20+16     BUFFER ADDRESS                               
*NOP     WTO   MF=(E,WTOB20)                                                    
         ICM   R7,15,FARPLNXT      GET ADDRESS OF NEXT FARPL                    
         BNZ   OPN20               IF NON-ZERO THEN INTIALIZE IT                
         SPACE 1                                                                
*=================================================================*             
* NOW ALLOW LOGON REQUESTS TO PROCEED                             *             
*=================================================================*             
         SPACE 1                                                                
         SETLOGON RPL=LOGRPL,OPTCD=(SYN,START)                                  
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         B     EXIT                                                             
         EJECT                                                                  
* NOTE THERE IS A LITTLE PROBLEM HERE SINCE R2 POINTS TO SYSFACS                
* AND VWCTYPE, VRCTYPE, VSSB ARE ALL IN SYSFACS                                 
*                                                                               
OPNERR   DS    0H                                                               
         L     RE,VSSB                                                          
         MVC   BADOPEN+4(4),SSBSYSNA-SSBD(RE) MOVE NAME TO MESSAGE              
         MVC   BADOPEN+28(8),SSBVTID-SSBD(RE) MOVE ACB NAME                     
         L     RF,VDMOD000                                                      
         MVC   P1,VWCTYPE                                                       
         LA    R2,WORK             POINT TO FUCKING DUMMY DMCB                  
         GOTO1 (RF),P1,,BADOPEN,L'BADOPEN                                       
*                                                                               
         L     R2,=V(SYSFAC)                                                    
         L     RF,VDMOD000                                                      
         MVC   P1,VRCTYPE                                                       
         LA    R2,WORK             POINT TO FUCKING DUMMY DMCB                  
         GOTO1 (RF),(R1),,WORK,6                                                
         L     R2,=V(SYSFAC)       RESTORE R2 STUPID                            
         CLC   =C'GO',WORK                                                      
         BE    OPN2                                                             
         CLC   =C'CAN',WORK                                                     
         BNE   OPNERR                                                           
         LA    RF,16               SET FOR CC NEQ                               
         B     EXITX                                                            
*&&US                                                                           
BADOPEN  DC    C'*FACPAK* CANT OPEN VTAM ACB=???????? - GO OR CANCEL ?'         
WRTHUNG  DC    C'*FACPAK* VTAM WRITE HUNG ON ????????'                          
*&&                                                                             
*&&UK                                                                           
BADOPEN  DC    C'+FACPAK+ CANT OPEN VTAM ACB=???????? - GO OR CANCEL ?'         
WRTHUNG  DC    C'+FACPAK+ VTAM WRITE HUNG ON ????????'                          
*&&                                                                             
*                                                                               
LOGRPL   RPL   AM=VTAM,ACB=ACB,NIB=ACBNIB                                       
         LTORG                                                                  
         EJECT                                                                  
*===============================================================*               
* RETURN TRACE BUFFER ADDRESS TO USER                           *               
*===============================================================*               
         SPACE 1                                                                
SETADDR  L     R0,=A(TRCBUFF)                                                   
         ST    R0,4(R1)                                                         
         B     EXIT                                                             
         SPACE 2                                                                
*=======================================================*                       
* ASK VTAM FOR CID FOR THIS LU                          *                       
* P2 = A(UTL ENTRY)                                     *                       
* P3 = VTAM CID ON EXIT                                 *                       
*=======================================================*                       
         SPACE 1                                                                
GETCID   DS    0H                                                               
         LR    R4,R1               SAVE PARAM LIST POINTER                      
         L     R3,4(R1)            POINT TO UTL ENTRY                           
         USING UTLD,R3                                                          
*                                                                               
         L     R8,=A(INQRPL)                                                    
         L     RF,RPLARG                                                        
         USING ISTDNIB,RF                                                       
         MVC   NIBSYM,TSYM         SET LUID IN NIB                              
         DROP  RF                                                               
         XC    INQAREA,INQAREA                                                  
         INQUIRE RPL=(R8),ACB=ACB,OPTCD=CIDXLATE                                
*                                                                               
         MVC   8(4,R4),INQAREA       MOVE RESULT TO USER                        
         MVC   12(2,R4),RPLRTNCD     AND RETURN/FEEDBACK CODES                  
         B     EXIT                                                             
*                                                                               
         DS    0D                                                               
         DC    CL8'*INQRPL*'                                                    
INQRPL   RPL   AM=VTAM,NIB=INQNIB,AREA=INQAREA,AREALEN=4                        
INQNIB   NIB   MODE=RECORD                                                      
INQAREA  DS    F                                                                
         SPACE 2                                                                
GETRPL   ST    R7,4(R1)            RETURN RPLLST ADDRESS                        
         B     EXIT                                                             
         EJECT                                                                  
*=================================================================*             
* CONSTRUCT A NEW UTL ENTRY                                       *             
* ON EXIT R1 HAS NEW ENTRY ADDRESS OR 0 IF UTL FULL               *             
*=================================================================*             
         SPACE 1                                                                
GETUTL   DS    0H                                                               
         L     RE,VUTL                                                          
         SH    RE,=H'6'            BACK UP TO PRECEDING FLWD                    
*                                                                               
GETUTL2  L     R3,0(RE)            GET NUMBER SO FAR                            
         LA    R4,1(R3)            SET THIS TERMINAL NUMBER                     
         CH    R4,4(RE)            COMPARE TO UTL MAX                           
         BNH   GETUTL4                                                          
         SR    R1,R1               SET NO MORE ROOM                             
         B     GETUTLX                                                          
*                                                                               
GETUTL4  CS    R3,R4,0(RE)         DEAD GOOD                                    
         BNE   GETUTL2                                                          
*                                                                               
         L     RE,VUTL                                                          
         MH    R3,0(RE)            TNUM-1 X ENTRY LENGTH                        
         LA    R3,6(RE,R3)         POINT TO NEW ENTRY                           
         USING UTLD,R3                                                          
*                                                                               
         LH    R1,0(RE)            GET UTL ENTRY LENGTH                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         XC    TNUM(0),TNUM        CLEAR UTL ENTRY                              
         STH   R4,TNUM             SET UTL ENTRY NUMBER                         
         OI    TSTAT2,TSTATNIT     SET TRM NOT INITIALISED                      
*                                                                               
         LR    R1,R3               SAVE ENTRY ADDRESS IN R1                     
*                                                                               
         AH    R3,0(RE)            ADD ENTRY LENGTH                             
         BCTR  R3,0                                                             
         ST    R3,2(RE)            SET E-O-L ADDRESS                            
*                                                                               
         L     RE,VSSB                                                          
         USING SSBD,RE                                                          
         STH   R4,SSBTRMS          SET NUM OF TRMS IN SSB                       
         OI    SSBSTAT1,SSBSCHK1   SET SSB UPDATED IN CHKPNT1 AREA              
*                                                                               
GETUTLX  LTR   R1,R1                                                            
         XIT1  REGS=(R1)                                                        
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
*=================================================================*             
* CONSTRUCT A NEW PRQ ENTRY                                       *             
* ON ENTRY 4(R1) IS NUMBER OF QUEUE ENTRIES REQUIRED OR ZERO      *             
* NUMBER OF ENTRIES ALLOCATED IS BETWEEN 99 AND 255               *             
* ON EXIT R1 HAS ADDRESS OF NEW ENTRY OR 0 IF FULL                *             
*=================================================================*             
         SPACE 1                                                                
GETPRQ   ICM   RF,15,4(R1)         GET REQUESTED NUMBER OF ENTRIES              
         CH    RF,=H'99'                                                        
         BH    *+8                                                              
         LA    RF,99               SET DEFAULT MIN NUM OF ENTRIES               
         CH    RF,=H'255'                                                       
         BNH   *+8                                                              
         LA    RF,255              SET DEFAULT MAX NUM OF ENTRIES               
         ST    RF,4(R1)            RETURN TO CALLER                             
         LA    RF,PRQDL            RF=FIXED LEN PRQ ENTRY                       
         L     RE,VPRQ                                                          
         SH    RE,=H'6'            BACK UP TO PRECEDING FLWD                    
*                                                                               
GETPRQ2  L     R3,0(RE)            GET NUMBER SO FAR                            
         LA    R4,1(R3)            SET THIS TERMINAL NUMBER                     
         CH    R4,4(RE)            COMPARE TO PRQ MAX                           
         BNH   GETPRQ4                                                          
GETPRQ3  SR    R1,R1               SET NO MORE ROOM                             
         B     GETPRQX                                                          
*                                                                               
GETPRQ4  CS    R3,R4,0(RE)         DEAD GOOD                                    
         BNE   GETPRQ2                                                          
*                                                                               
         L     RE,VPRQ                                                          
         SH    RE,=H'10'                                                        
         L     R0,0(RE)            R0=A(MAX END OF PRQ LIST)                    
         L     RE,VPRQ                                                          
         L     RE,2(RE)                                                         
         LA    RE,1(RE)            POINT TO NEW LAST ENTRY                      
         LR    R3,RE                                                            
         USING PRQD,R3                                                          
         AR    RF,RE                                                            
         BCTR  RF,0                RF=A(NEW LAST-1)                             
         CR    RF,R0                                                            
         BH    GETPRQ3                                                          
         XC    PRHDR(PRQDL),PRHDR  INITIALISE NEW ENTRY                         
         MVC   PRHDR3(2),=X'FFFF'  FLAG NEW FORMAT                              
         L     R4,4(R1)                                                         
         STC   R4,PRQNEMAX                                                      
         LR    R1,R3               SAVE ENTRY ADDRESS IN R1                     
*                                                                               
         L     RE,VPRQ             SET NEW EOL-1                                
         ST    RF,2(RE)                                                         
*                                                                               
GETPRQX  LTR   R1,R1                                                            
         XIT1  REGS=(R1)                                                        
         EJECT                                                                  
*=============================================================*                 
* RECORD THIS EVENT IN VTAM TRACE BUFFER. WHEN BUFFER IS FULL *                 
* WRITE IT TO DISK, CLEAR IT, AND SAVE PREVIOUS REC ADDRESS   *                 
* ON ENTRY R8 POINTS TO RPL                                   *                 
*=============================================================*                 
         SPACE 1                                                                
LCMTRC   NTR1                                                                   
         ICM   R4,15,TRCNEXT       GET NEXT SLOT ADDRESS                        
         BNZ   LCMTRC4                                                          
* INITIALIZE BUFFER                                                             
         L     R4,=A(TRCBUFF)      SET 'TO' ADDRESS                             
         LA    R5,TRCBUFFX-TRCBUFF SET 'TO' LENGTH                              
         SR    RE,RE               SET 'FROM' ADDRESS = 0                       
         SR    RF,RF               SET 'FROM' LEN = 0                           
         MVCL  R4,RE                                                            
*                                                                               
         L     R4,=A(TRCBUFF)                                                   
         MVC   0(5,R4),=C'*VTAM'   SET BUFFER ID                                
         MVC   5(4,R4),TRCPRVDA    SET D/A OF PREVIOUS                          
         LA    R4,10(R4)                                                        
         ST    R4,TRCNEXT          SET NEXT SLOT ADDRESS                        
*                                                                               
         USING VTTRCD,R4                                                        
*                                                                               
LCMTRC4  MVC   VTTRCLU,=8C'?'                                                   
         TIME  DEC                                                              
         STCM  R0,15,VTTRCTIM      SET TIME AS HHMMSSTH                         
         STCM  R1,15,VTTRCDAT      SET DATE AS 00DDDYYF                         
*                                                                               
         CLI   DDSFLAG,0           TEST FOR SPECIAL EVENT                       
         BE    *+12                NO                                           
         CLI   DDSFLAG,X'C0'                                                    
         BNH   LCMTRC10            YES - GO LOOK UP MESSAGE                     
*                                                                               
         MVC   VTTRCRPL,0(R8)                                                   
         CLI   DDSFLAG,C'Y'        TEST INTERNAL TRACE                          
         BNE   *+8                                                              
         OI    VTTRCRPL+2,X'80'    SET FLAG IN RPL OPCODE                       
*                                                                               
***                                                                             
***   MAY NEED TO CHECK ON LU6.2 RPL HERE                                       
***                                                                             
         ICM   R3,15,RPLUSFLD      POINT TO UTL ENTRY                           
         BZ    *+10                                                             
         USING UTLD,R3                                                          
         MVC   VTTRCLU,TSYM        MOVE LUNAME TO TRACE                         
         SPACE 1                                                                
*==========================================================*                    
* IF WE HAVE A NON-ZERO RETURN/FEEDBACK CODE,              *                    
* TEST TO SEE IF CID IN UTL AGREES WITH CID IN RPL         *                    
*==========================================================*                    
         SPACE 1                                                                
         CLI   DDSFLAG,C'Z'        TEST BAD CHECK                               
         BE    LCMTRC12                                                         
         CLI   DDSFLAG,C'Y'        TEST INTERNAL TRACE FLAG                     
         BE    LCMTRC6             YES                                          
         CLI   RPLREQ,RPLCLOSE     TEST CLSDST                                  
         BE    LCMTRC6                                                          
         TM    RPLEXTDS,RPLNIB     TEST RPL HAS NIB ADDRESS                     
         BO    LCMTRC6             YES - CAN'T CHECK CID                        
         LTR   R3,R3               TEST UTL ADDRESS PRESENT                     
         BZ    LCMTRC6             NO - AND DON'T MOVE THIS INST AGAIN          
         CLC   TCID,RPLARG         TEST SAME CID                                
         BE    LCMTRC6                                                          
         MVC   VTTRCDTA(16),=C'*** BAD CID *** '                                
         MVC   VTTRCDTA+16(4),RPLARG                                            
         MVC   VTTRCDTA+20(4),TCID                                              
         B     LCMTRC20                                                         
*                                                                               
LCMTRC6  ICM   RE,15,RPLAREA       POINT TO I/O AREA                            
         BZ    *+10                                                             
         MVC   VTTRCDTA,0(RE)                                                   
         B     LCMTRC20                                                         
         SPACE 1                                                                
*======================================================*                        
* LOOK UP MESSAGE FOR SPECIAL EVENT TRACE              *                        
*======================================================*                        
         SPACE 1                                                                
LCMTRC10 MVC   VTTRCLU,TSYM       SET LUNAME                                    
*                                                                               
LCMTRC12 L     R1,=A(TRMSGTAB)    FIND THE MESSAGE IN TABLE                     
         ZIC   R0,DDSFLAG                                                       
         CLI   DDSFLAG,C'Z'       TEST BAD CHECK                                
         BNE   *+8                                                              
         LA    R0,7                USE MESSAGE 7                                
         BCTR  R0,0                                                             
         SLL   R0,4                X 16                                         
         AR    R1,R0                                                            
         MVC   VTTRCDTA(16),0(R1)                                               
         MVC   VTTRCDTA+16(16),ERRDATA  MOVE EXTRA ERR DATA IF ANY              
* PRINT WRITE HUNG MESSAGE FOR FRED ROE                                         
         CLI   DDSFLAG,8                                                        
         BNE   LCMTRC20                                                         
*                                                                               
         L     RE,VSSB                                                          
         MVC   WRTHUNG+4(3),SSBSYSNA-SSBD(RE)   MOVE ADV NAME                   
         MVC   WRTHUNG+28(8),VTTRCLU            MOVE LUID NAME                  
         L     RF,VDMOD000                                                      
         MVC   P1,VWCTYPE                                                       
         LA    R2,WORK             POINT TO FUCKING DUMMY DMCB                  
         GOTO1 (RF),P1,,WRTHUNG,L'WRTHUNG                                       
         L     R2,=V(SYSFAC)       RESTORE R2                                   
*                                                                               
LCMTRC20 MVI   DDSFLAG,0           RESET INTERNAL TRACE FLAG                    
         XC    ERRDATA,ERRDATA                                                  
         LA    R4,VTTRCLEN(R4)     POINT TO NEXT SLOT                           
         ST    R4,TRCNEXT                                                       
         LA    R0,VTTRCLEN(R4)     POINT TO END OF NEXT SLOT                    
         C     R0,=A(TRCBUFFX)     TEST GOES PAST END OF BUFFER                 
         BL    EXIT                NO - DONE                                    
         EJECT                                                                  
*=================================================================*             
* TRACE BUFFER IS FULL - WRITE TO DISK AND SET TO CLEAR NEXT TIME *             
*=================================================================*             
         SPACE 1                                                                
         XC    TRCNEXT,TRCNEXT     SET TO CLEAR NEXT TIME                       
         L     RF,VLOGGER                                                       
         L     R1,=A(TRCBUFF)      NOTE R1 POINTS TO BUFFER                     
         BASR  RE,RF               LOGGER INSERTS DISK ADDRESS AT +5            
         MVC   TRCPRVDA,5(R1)      SAVE THE PREVIOUS RECORD ADDRESS             
         B     EXIT                                                             
*                                                                               
TRCNEXT  DS    A                                                                
TRCPRVDA DS    F                                                                
*                                                                               
*====================================================================*          
         DROP  RB,RA     ============================================*          
*====================================================================*          
         SPACE 1                                                                
         LTORG                                                                  
         EJECT                                                                  
*=====================================================================*         
* VTAM LOGON EXIT  RUNS ASYNCHRONOUSLY AS AN MVS IRB                  *         
*  AS SUCH THIS MAY RESULT IN PREEMPTION OF THE MAINLINE AT ANY POINT *         
*=====================================================================*         
         SPACE 1                                                                
         USING *,RF                                                             
LOGXIT   DS    0H                                                               
         LR    RB,RF                                                            
         USING LOGXIT,RB                                                        
         DROP  RF                                                               
*                                                                               
         L     RD,=A(LOGXSAVE)                                                  
*                                                                               
         L     R2,=V(SYSFAC)                                                    
         USING SYSFACD,R2                                                       
*                                                                               
         ST    RE,LOGXITRE                                                      
*                                                                               
         LR    RA,R1               SAVE PARAM POINTER                           
         USING LOGONPRM,RA                                                      
*                                                                               
         L     R6,LOGONSYM         SYMBOLIC NAME                                
         SPACE 1                                                                
* FIND A FREE UTL ENTRY OR MATCH TO AN EXISTING ONE *                           
         SPACE 1                                                                
LOGXIT1  L     R3,VUTL                                                          
         LH    R4,0(R3)                                                         
         L     R5,2(R3)                                                         
         LA    R3,6(R3)                                                         
         USING UTLD,R3                                                          
*                                                                               
*        MVC   WTO20+4(16),=C' LOGXIT ENTERED '                                 
*        WTO   MF=(E,WTO20)                                                     
LOGXIT2  CLC   TSYM,0(R6)          TEST MATCH ON SYMBOLIC NAME(LUID)            
         BE    LOGXIT4                                                          
         BXLE  R3,R4,LOGXIT2                                                    
         B     LOGXIT6                                                          
*                                                                               
LOGXIT4  TM    TSTAT2,TSTATTIP     TEST IF STILL IN PROCESS                     
         BO    LOGXITX             YES IGNORE LOGON                             
         TM    TSTAT5,TST5TBP      TEST IF BUILD STILL PENDING                  
         BO    LOGXIT8             YES POST ALSO IN SSB                         
         B     LOGXIT10                                                         
*                                                                               
LOGXIT6  L     RF,=A(LCM)          GET NEW UTL ENTRY                            
         GOTO1 (RF),LOGXPARM,VTGETUTL                                           
         BNZ   *+6                                                              
         DC    H'0'    NOT NICE    NO MORE SPACE IN UTL                         
         LR    R3,R1               GET NEW ENTRY ADDRESS                        
         OI    TSTAT5,TST5TBP                                                   
*                                                                               
LOGXIT8  L     RE,VSSB             SET TERMINAL BUILD PENDING IN SSB            
         OI    SSBVTFL1-SSBD(RE),SSBVTTBP                                       
*                                                                               
LOGXIT10 MVC   TSYM,0(R6)          SET VTAM ID                                  
         OC    TPASSWD,TPASSWD     TEST USER PASSWORD ENTERED                   
         BZ    *+8                                                              
         OI    TSTAT5,TST5PSWD     SET PASSWORD REQUIRED FLAG                   
         MVC   TCID,LOGONCID       SAVE THE BLOODY CID                          
         ICM   R1,15,TBUFF         TEST IT SOMEHOW HAS A BUFFER                 
         BZ    LOGXIT12                                                         
         BAS   RE,LOGFREE                                                       
         XC    TBUFF,TBUFF                                                      
         SPACE 1                                                                
*============================================================*                  
* NOTE THAT THE NEXT INSTRUCTION CONSCIOUSLY OVERWRITES      *                  
* ANY OTHER STUPID FUCKING BITS THAT MAY BE ON IN TSTAT3,    *                  
* ESPECIALLY CLSDST PENDING. BAD QUEUE LENGTHS ARE RESET     *                  
* BY THE CONTROL RPL PROCESSING LOGIC.                       *                  
*============================================================*                  
         SPACE 1                                                                
LOGXIT12 MVI   TSTAT3,TSTATLOG     SET LOGON PENDING                            
         NI    TSTAT4,X'FF'-TST4CLIP-TST4UNLG   RESET FLAGS                     
         SPACE 1                                                                
*=====================================================*                         
* LOCATE THE BIND IMAGE AND SET TERMINAL TYPE         *                         
*=====================================================*                         
         SPACE 1                                                                
         L     R4,LOGONRPL               GET READ-ONLY RPL ADDRESS              
         L     R5,(RPLAREA-IFGRPL)(R4)   GET ADDRESS OF CINIT                   
** SEE HOW TO FIND CONTROL VECTORS APPENDED TO THE CINIT.                       
** SOME OF INTEREST ARE 0E & 15                                                 
         LA    R5,12(R5)                 GET ADDRESS OF BIND IMAGE              
         CLC   14(2,R5),=X'0602'   IS IT A 6.2 SESSION REQUEST?                 
         MVC   WTO20+4(8),TSYM                                                  
         MVC   WTO20+12(2),14(R5)  2 BYTES OF BIND IMAGE.                       
         WTO   MF=(E,WTO20)                                                     
         TM    (RPLCHN-IFGRPL)(R4),RPLVACS  APPC OR NOT ?                       
         BNO   LOG3270T                                                         
         OI    TSTAT4,TST4LU62     INDICATE WE HAVE AN LU62 SESSION             
         MVC   WTO20+4(8),TSYM                                                  
         MVC   WTO20+12(10),=C' LU62 UTL   '                                    
         WTO   MF=(E,WTO20)                                                     
         B     LOGXCTR                                                          
*                                                                               
LOG3270T OI    TTYPE,TTYPE327                                                   
         CLI   1(R5),2             TEST FM PROFILE 2 (LU 0/3270)                
         BE    *+8                                                              
         OI    TTYPE,TTYPESNA      SET SNA TERMINAL                             
*                                                                               
LOGXCTR  L     R1,LOGQLEN          BUMP THE INPUT QUEUE LENGTH                  
         LA    R0,1(R1)                                                         
         CS    R1,R0,LOGQLEN       THIS IS THE NUTS                             
*                                                                               
         POST  LCMECB              POST THE LOGON ECB                           
*                                                                               
LOGXITX  L     RE,LOGXITRE                                                      
         BR    RE                  RETURN TO FUCKING VTAM                       
*                                                                               
LOGXITRE DC    F'0'                                                             
LOGXPARM DC    4F'0'                                                            
         EJECT                                                                  
*===========================================================*                   
* FREE BUFFER ADDRESS IN R1                                 *                   
*===========================================================*                   
         SPACE 1                                                                
LOGFREE  NTR1                                                                   
         L     R5,VLCBUFFS                                                      
         LA    RE,4                                                             
         L     RF,VLCBUFFX                                                      
*                                                                               
LOGFREE2 CLM   R1,7,1(R5)          MATCH ADDRESS                                
         BE    LOGFREE4                                                         
         BXLE  R5,RE,LOGFREE2                                                   
         DC    H'0'                                                             
*                                                                               
LOGFREE4 DS    0H                                                               
         CLI   0(R5),1             BUFFER SHOULD BE BUSY                        
         BNE   LOGFREEX                                                         
*        DC    H'0'                                                             
         MVI   0(R5),0             RESET 'BUSY' FLAG                            
*                                                                               
LOGFREE6 L     RE,LCBUFFS                                                       
         LA    RF,1(RE)                                                         
         CS    RE,RF,LCBUFFS                                                    
         BNZ   LOGFREE6                                                         
LOGFREEX XIT1                                                                   
         DROP  R2                                                               
         LTORG                                                                  
         EJECT                                                                  
         DS    0D                                                               
         DC    CL8'LCBUFFS*'                                                    
LCBUFFS  DC    F'0'                                                             
         DS    0D                                                               
         DC    CL8'LOGQLEN*'                                                    
LOGQLEN  DC    F'0'                                                             
         DS    0D                                                               
         DC    CL8'CLSQLEN*'                                                    
CLSQLEN  DC    F'0'                                                             
         DS    0D                                                               
         DC    CL8'SIMQLEN*'                                                    
SIMQLEN  DC    F'0'                                                             
         DS    0D                                                               
         DC    CL8'OUTQLEN*'                                                    
OUTQLEN  DC    F'0'                                                             
OUTQFRST DC    A(0)                                                             
OUTQLAST DC    A(0)                                                             
         DS    0D                                                               
         DC    C'FMH5CTR*'                                                      
FMH5CTR  DC    F'0'               RUNNING COUNT OF OUTSTANDING FMH5S            
         DS    0D                                                               
         DC    C'PRTQLEN*'                                                      
PRTQLEN  DC    F'0'                                                             
PRTQFRST DC    A(0)                                                             
PRTQLAST DC    A(0)                                                             
*                                 INCREMENTED IN LU6.2 ATTENTION EXIT           
*                                 DECREMENTED BY THE RECEIVE FMH5 RTN           
         EJECT                                                                  
APPLID   DC    X'00',CL8'VTS'                                                   
         DS    0D                                                               
         DC    CL8'*LCMECB*'                                                    
LCMECB   DC    F'0'                                                             
         DS    0D                                                               
         SPACE 1                                                                
         DC    CL8'*LCMACB*'                                                    
ACB      ACB   AM=VTAM,APPLID=APPLID,EXLST=EXLST,MACRF=LOGON,          X        
               PARMS=(NIB=ACBNIB)                                               
ACBNIB   NIB   MODE=RECORD                                                      
*                                                                               
EXLST    EXLST AM=VTAM,LOGON=LOGXIT,                                   X        
               TPEND=TPENDXIT,LOSTERM=LSTXIT,NSEXIT=NSEXIT,            X        
               ATTN=ATTNXIT                                                     
WTO20    WTO   '12345678901234567890',ROUTCDE=(11),MF=L                         
         SPACE 2                                                                
TRMSGTAB DS    0H                                                               
         DC    CL16'INACTIVE PRINTER'  01                                       
         DC    CL16'NO UTL BUFFER   '  02                                       
         DC    CL16'ZERO LENGTH MSG '  03                                       
         DC    CL16'TCID = ZERO     '  04                                       
         DC    CL16'LOST SESSION    '  05                                       
         DC    CL16'NEW CID         '  06                                       
         DC    CL16'BAD CHECK       '  07                                       
TRMSG8   DC    CL16'WRITE HUNG      '  08                                       
TRMSGTBX EQU   *                                                                
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
*=================================================================*             
* VTAM RTNCD/FDBK2 ERRORS                                         *             
*=================================================================*             
         SPACE 1                                                                
DUMP     EQU   0                                                                
IGNORE   EQU   X'FFFFFFFF'                                                      
         SPACE 1                                                                
ERRTAB   DS    0D                                                               
         DC    AL1(00,00),AL4(LC0404)   FOR STATUS MESSAGE ERRORS               
         DC    AL1(00,05),AL4(IGNORE)   INPUT AREA TOO SMALL                    
         DC    AL1(00,06),AL4(IGNORE)   NO INPUT AVAILABLE                      
         DC    AL1(00,07),AL4(IGNORE)   INQUIRE INFORMATION NOT AVLBL           
         DC    AL1(00,08),AL4(LC0008)   OPENDST/SIMLOGON FAILED                 
         DC    AL1(00,09),AL4(IGNORE)   OPENDST OPTCD=ACCEPT DENIED             
         DC    AL1(04,03),AL4(LC0403)   EXCEPTION REQUEST RECEIVED              
         DC    AL1(04,04),AL4(LC0404)   NEGATIVE RESPONSE RECEIVED              
         DC    AL1(08,00),AL4(LC0800)   TEMPORARY STORAGE SHORTAGE              
         DC    AL1(12,10),AL4(IGNORE)   REQ CANCELED BY RESETSR                 
         DC    AL1(12,11),AL4(IGNORE)   REQ CANCELED - SESS TERMINATED          
         DC    AL1(12,12),AL4(IGNORE)   REQ CANCELED BY CLEAR REQ               
         DC    AL1(12,13),AL4(IGNORE)   PRIOR EXCPTN IN CHAIN DTCTD             
         DC    AL1(16,00),AL4(IGNORE)   LOGICAL UNIT NOT AVAILABLE              
         DC    AL1(16,01),AL4(LC0404X)  OPNDST FAILED                           
         DC    AL1(16,02),AL4(IGNORE)   LOGICAL UNIT INHIBITED FOR SESS         
         DC    AL1(16,03),AL4(IGNORE)   HALT ISSUED                             
         DC    AL1(16,05),AL4(IGNORE)   REQ OR RESP ENCRYPT FAILURE             
         DC    AL1(16,07),AL4(LC0404X)  REQUEST CANCELED BY VARY                
         DC    AL1(16,09),AL4(IGNORE)   UNCOND TERM OR LOGOFF RECEIVED          
         DC    AL1(16,10),AL4(IGNORE)   VTAM ERROR (RE-YNNYF4FP)                
         DC    AL1(16,13),AL4(DUMP)     VTAM INACTIVE FOR ACB                   
         DC    AL1(16,14),AL4(DUMP)     REQUEST ABORTED                         
         DC    AL1(16,15),AL4(DUMP)     BUFFERS FILLED                          
         DC    AL1(16,17),AL4(IGNORE)   SDT FAILURE ON OPENDST                  
         DC    AL1(16,18),AL4(DUMP)     MACRO INST FAILURE                      
         DC    AL1(20,02),AL4(DUMP)     ZERO EXIT FIELD                         
         DC    AL1(20,03),AL4(DUMP)     ZERO ECB FIELD                          
         DC    AL1(20,04),AL4(IGNORE)   INACTIVE RPL CHECKED                    
         DC    AL1(20,16),AL4(DUMP)     INVALID CONTROL BLOCK                   
         DC    AL1(20,17),AL4(IGNORE)   RTYPE INVALID                           
         DC    AL1(20,18),AL4(IGNORE)   CLSDST IN PROGRESS                      
         DC    AL1(20,19),AL4(LC2019)   INVALID CID                             
         DC    AL1(20,30),AL4(IGNORE)   INVALID ADDRESS OR DATA LEN             
         DC    AL1(20,35),AL4(IGNORE)   REQUEST TYPE INVALID                    
         DC    AL1(20,36),AL4(IGNORE)   REQUEST INVALID FOR ADDR SPACE          
         DC    AL1(20,59),AL4(DUMP)     NFME-NRRN RESPONSE                      
         DC    AL1(20,60),AL4(IGNORE)   PREVIOUS MACRO OUTSTANDING              
         DC    AL1(20,64),AL4(DUMP)     CONTROL INVALID                         
         DC    AL1(20,65),AL4(DUMP)     DATA TRAFFIC NOT ALLOWED                
         DC    AL1(20,66),AL4(DUMP)     INVALID STYPE FOR SESSIONC              
         DC    AL1(20,68),AL4(IGNORE)   RESPLIM EXCEEDED                        
         DC    AL1(20,71),AL4(IGNORE)   3270 SEND OPTION INVALID                
         DC    AL1(20,72),AL4(DUMP)     SESS-CTL PROTOCOL VIOLATION             
         DC    AL1(20,75),AL4(IGNORE)   INVALID BIND IMAGE                      
         DC    AL1(20,78),AL4(DUMP)     INVALID USE OF NIB LIST                 
         DC    AL1(20,79),AL4(DUMP)     ACQUIRE/ACCEPT OPTION INVALID           
         DC    AL1(20,80),AL4(IGNORE)   RPL FIELD INVALID                       
         DC    AL1(20,81),AL4(IGNORE)   SIMLOGON NOT ALLOWED                    
         DC    AL1(20,82),AL4(IGNORE)   NIB INVALID                             
         DC    AL1(20,83),AL4(IGNORE)   LU NOT FOUND                            
         DC    AL1(20,85),AL4(DUMP)     PROG NOT AUTHORIZED                     
         DC    AL1(20,87),AL4(DUMP)     INVALID MODE FIELD                      
         DC    AL1(20,94),AL4(IGNORE)   CLSDST/PASS NOT AUTH                    
         DC    AL1(20,96),AL4(IGNORE)   INVALID LU FOR CLSDST/SESSC             
         DC    AL1(20,97),AL4(DUMP)     INVALID SETLOGON                        
         DC    AL1(20,108),AL4(DUMP)    TOO MANY RCVCMD REQUESTS                
         DC    AL1(20,109),AL4(DUMP)    APPL NOT AUTH FOR CMDS                  
         DC    AL1(20,110),AL4(DUMP)    SYNTAX ERROR IN OPER REPLY              
         DC    AL1(20,111),AL4(DUMP)    CMD PROCESSOR INACTIVE                  
         DC    AL1(20,112),AL4(IGNORE)  PROG OPER CLOSING ACB                   
         DC    AL1(20,119),AL4(IGNORE)  FM DATA REQ UNIT REQ'D ???              
         DC    AL1(20,126),AL4(DUMP)    MACRO OPTCD CONFLICT                    
         DC    X'FF'                                                            
         EJECT                                                                  
AIDTAB   DC    X'7D'                                ENTER                       
         DC    X'F1F2F3F4F5F6F7F8F97A7B7C'          PF01-PF12                   
         DC    X'C1C2C3C4C5C6C7C8C94A4B4C'          PF13-PF24                   
         DC    X'FF'                                                            
         SPACE 2                                                                
PAKTAB   DS    0CL8                                 PA KEY EQUATES              
PAKSTAT  DC    X'6C',CL7'=STATUS'                   PA1                         
PAKKILL  DC    X'6E',CL7'=KILL  '                   PA2                         
         DC    X'6D',CL7'=CT    '                   CLEAR                       
PAKDATA0 DC    X'00',CL7'=NODATA'                   FOR BAD MSG LEN             
         DC    X'FF',CL7'       '                                               
         EJECT                                                                  
         CNOP  0,4       RECEIVE TABLE LOWER CASE EBC TO UPPER CASE EBC         
EBCEBC   EQU   *                                                                
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                               
         DC    X'000102030405060708090A0B0C0D0E0F'  0                           
         DC    X'101112131415161718191A1B1C1D1E1F'  1                           
         DC    X'202122232425262728292A2B2C2D2E2F'  2                           
         DC    X'303132333435363738393A3B3C3D3E3F'  3                           
         DC    X'404142434445464748494A4B4C4D4E4F'  4                           
         DC    X'505152535455565758595A5B5C5D5E5F'  5                           
         DC    X'606162636465666768696A6B6C6D6E6F'  6                           
         DC    X'707172737475767778797A7B7C7D7E7F'  7                           
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'  8                           
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'  9                           
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'  A                           
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'  B                           
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'  C                           
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'  D                           
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'  E                           
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'  F                           
         EJECT                                                                  
*&&UK                                                                           
SWAPTAB  DC    AL1(1),CL8'LTST '   SYSTEM NUMBER & LUID                         
         DC    AL1(2),CL8'LADV1'                                                
         DC    AL1(3),CL8'TTS  '                                                
         DC    AL1(4),CL8'LADV2'                                                
         DC    AL1(5),CL8'NEW  '                                                
         DC    AL1(6),CL8'LADV3'                                                
         DC    AL1(255)                                                         
         SPACE 2                                                                
SWAPTAB2 DC    AL1(1,3)            HARD SWAP SYSN TO SYSN                       
         DC    AL1(2,6)                                                         
         DC    AL1(3,1)                                                         
         DC    AL1(4,0)                                                         
         DC    AL1(5,0)                                                         
         DC    AL1(6,2)                                                         
         DC    AL1(255)                                                         
*&&                                                                             
*&&US                                                                           
SWAPTAB  DC    AL1(1),CL8'TST '    SYSTEM NUMBER & LUID                         
         DC    AL1(2),CL8'ADV1'                                                 
         DC    AL1(3),CL8'ADV5'                                                 
         DC    AL1(4),CL8'REP'                                                  
         DC    AL1(5),CL8'ADV2'                                                 
         DC    AL1(6),CL8'MEL'                                                  
         DC    AL1(7),CL8'ADV3'                                                 
         DC    AL1(8),CL8'ADV4'                                                 
         DC    AL1(9),CL8'LADV1'                                                
         DC    AL1(10),CL8'ADV6'                                                
         DC    AL1(255)                                                         
SWAPTAB2 DC    AL1(255)                                                         
*&&                                                                             
         EJECT                                                                  
*=================================================================*             
* VTAM LOSTERM EXIT                                               *             
*=================================================================*             
         SPACE 1                                                                
         USING *,RF                                                             
LSTXIT   DS    0H                                                               
         LR    RB,RF                                                            
         USING LSTXIT,RB                                                        
         DROP  RF                                                               
*                                                                               
         ST    RE,LSTXITRE                                                      
         LA    RD,SAVEXIT1     PROVIDE SAVE AREA                                
*                                                                               
         L     R2,=V(SYSFAC)                                                    
         USING SYSFACD,R2                                                       
*                                                                               
         LR    RA,R1               SAVE PARAM POINTER                           
         USING LSTXPRM,RA                                                       
*                                                                               
         MVC   WTOB40+4(15),=C'LOST TERM EXIT '                                 
         WTO   MF=(E,WTOB40)                                                    
         ICM   R3,15,LSTXUSER      GET UTL ENTRY ADDRESS                        
         BZ    LSTXITX             IF 0, HE NEVER LOGGED ON                     
         TM    TSTAT3,TSTATCLS     TEST CLSDST PENDING ALREADY                  
         BO    LSTXIT4                                                          
         OI    TSTAT3,TSTATCLS     SET CLSDST PENDING                           
*                                                                               
LSTXIT2  L     R2,=A(CLSQLEN)                                                   
         L     RE,0(R2)                                                         
         LA    RF,1(RE)                                                         
         CS    RE,RF,0(R2)         MORE OVERKILL  GOOD IF WE EVER               
         BNZ   LSTXIT2             HAVE ANOTHER TCB THOUGH!                     
*                                                                               
         L      R3,ALCMECB         GET ECB ADDRESS                              
LSTXIT4  POST  (R3)                POST THE ECB                                 
*                                                                               
LSTXITX  L     RE,LSTXITRE                                                      
         BR    RE                                                               
*                                                                               
LSTXITRE DC    F'0'                                                             
         EJECT                                                                  
         EJECT                                                                  
*=====================================================================*         
* VTAM ATTENTION EXIT  -- LU6.2 SPECIFIC                              *         
*=====================================================================*         
         USING *,RF                                                             
ATTNXIT  DS    0H                                                               
         LR    RB,RF                                                            
         DROP  RF                                                               
         USING ATTNXIT,RB                                                       
         ST    RE,ATTNRE       SAVE RETURN ADDRESS                              
         LR    R2,R1                                                            
         LA    RD,SAVEXIT1     PROVIDE SAVE AREA                                
         USING LOGONPRM,R2     MAP VTAM PARMS PASSED IN                         
         L     R8,LOGONACB     GET ACB ADDRESS (1ST WORD OF PLIST)              
         USING IFGACB,R8                                                        
         DROP  R8                                                               
         L     R7,XRORPL       GET READONLY RPL                                 
         USING IFGRPL,R7                                                        
         L     R6,RPLAAREA     GET READ-ONLY RPL EXTN                           
         USING ISTRPL6X,R6                                                      
         MVC   WTOB40+4(11),=C'ATTN EXIT= '                                     
         MVC   WTOB40+15(4),XREASON                                             
         WTO   MF=(E,WTOB40)                                                    
         CLC   XREASON,=C'FMH5'  ARE WE HERE FOR FMH5 ARRIVAL?                  
         BNE   ATTNRET                                                          
         L     R5,ACNTR                                                         
         L     R1,0(R5)            GET CURRENT FMH5 COUNT                       
         LA    R0,1(R1)            ADD 1                                        
         CS    R1,R0,0(R5)         THIS UPDATES IT WITH OVERKILL                
*                                  SUPPOSE TO TEST CC HERE                      
         L     R3,ALCMECB                                                       
         POST  (R3)                POST THE MAIN ECB                            
         PRINT NOGEN                                                            
*                                                                               
ATTNRET  EQU   *                                                                
         L     RE,ATTNRE                                                        
         BR    RE                                                               
         DROP  R2,R6,R7                                                         
*** NEED ESTAE AT SOME POINT MAYBE NOT WITH VTAMFRR=YES ON APPLID               
ACNTR    DC    A(FMH5CTR)          ADDRESS OF THE FMH5 OUTSTANDING CT           
ALCMECB  DC    A(LCMECB)                                                        
ATTNRE   DS    1F                  REG 14 SAVE AREA                             
         EJECT                                                                  
*=================================================================*             
* VTAM TPEND EXIT                                                 *             
*=================================================================*             
         SPACE 1                                                                
         USING *,RF                                                             
TPENDXIT DS    0H                                                               
         LR    RB,RF                                                            
         USING TPENDXIT,RB                                                      
         DROP  RF                                                               
*                                                                               
         ST    RE,TPENDXRE                                                      
*                                                                               
         L     R2,=V(SYSFAC)                                                    
         USING SYSFACD,R2                                                       
*                                                                               
         L     RE,VSSB                                                          
         USING SSBD,RE                                                          
*                                                                               
         OI    SSBSTAT1,SSBSEOJ    SET EOJ PENDING                              
         L     RE,TPENDXRE                                                      
         BR    RE                                                               
*                                                                               
TPENDXRE DC    F'0'                                                             
         LTORG                                                                  
         EJECT                                                                  
*=================================================================*             
* VTAM NETWORK SERVICES EXIT (NSEXIT)                             *             
*=================================================================*             
         SPACE 1                                                                
         USING *,RF                                                             
NSEXIT   DS    0H                                                               
         LR    RB,RF                                                            
         USING NSEXIT,RB                                                        
         DROP  RF                                                               
*                                                                               
         ST    RE,NSEXITRE                                                      
         LR    R2,R1                                                            
         LA    RD,SAVEXIT1     PROVIDE SAVE AREA                                
         USING NSXPRM,R2       MAP VTAM PARMS PASSED IN                         
         L     R5,NSXRORPL     GET READONLY RPL                                 
         USING IFGRPL,R5                                                        
         L     R7,RPLRLEN      GET LENGTH OF REQUEST UNIT                       
         CH    R7,=H'3'        IS IT AT LEAST 3 BYTES LONG?                     
         L     R6,RPLAREA      GET ADDRESS OF REQUEST UNIT                      
**  CHECK RH HEADER                                                             
         CLC   0(3,R6),NSHEADER    IS IT A CLEAN-UP REQUEST?                    
         BNE   NSXIT                                                            
*                                                                               
         MVC   WTOB40+4(31),=C'NET SRVCS EXIT ENTRD - CLEAN UP'                 
         WTO   MF=(E,WTOB40)                                                    
         MVC   WTOB40+5(38),0(R6)  COPY A PORTION OF IT                         
         WTO   MF=(E,WTOB40)                                                    
*                                                                               
** VTAM HAS ALREADY KILLED THE SESSION   CLSDST NOT NEEDED                      
** JUST NEED TO FIX UP THE UTL ENTRY                                            
         L     R2,NSXUSER          GET UTL ADDRESS                              
*                                                                               
         L     R2,=V(SYSFAC)                                                    
         USING SYSFACD,R2                                                       
*                                                                               
NSXIT    L     RE,NSEXITRE                                                      
         BR    RE                                                               
         DROP  R2,R5                                                            
*                                                                               
NSEXITRE DC    F'0'                                                             
SAVEXIT1 DS    20F                                                              
NSHEADER DS    X'810629'           CLEAN UP                                     
         DS    X'810620'           NSPE                                         
         DS    X'010604'           NOTIFY ?                                     
NSBYTE1  EQU   RHQS+RHECI                                                       
         LTORG                                                                  
         EJECT                                                                  
*=================================================================*             
* DELETE AN ENTRY FROM THE PRINTER QUEUE FROM POOL                *             
* NTR P2=INDEX NUMBER.                                            *             
* SET CC=NEQ IF BAD ENTRY NUMBER PASSED.                          *             
*=================================================================*             
         SPACE 1                                                                
         DROP  RA,RB                                                            
DELPRQ   LR    RB,RF               ESTABLISH LOCAL ADDRESSABILITY               
         USING DELPRQ,RB                                                        
         L     RE,VPRQENTS                                                      
         ICM   RF,15,4(R1)         LOCATE ENTRY IN POOL                         
         BZ    DELPRQE                                                          
         BCTR  RF,0                                                             
         MH    RF,=Y(L'PNTRY)                                                   
         LA    RF,6(RF)                                                         
         AR    RF,RE               RF=A(ENTRY IN POOL)                          
*                                                                               
         SH    RE,=H'10'           TEST WE HAVE NOT INDEXED TOO FAR             
         C     RF,0(RE)                                                         
         BNL   DELPRQE                                                          
         OC    0(L'PNTRY,RF),0(RF) AND THAT THE ENTRY IS IN USE                 
         BZ    DELPRQE                                                          
         XC    0(L'PNTRY,RF),0(RF) DELETE IT                                    
*                                                                               
DELPRQ1  L     R3,4(RE)            DECREMENT NUMBER OF IN USE ENTRIES           
         LR    R4,R3                                                            
         BCTR  R4,0                                                             
         CS    R3,R4,4(RE)         COUNTER AT VPRQENTS-6(4)                     
         BNE   DELPRQ1                                                          
         B     DELPRQX                                                          
*                                                                               
DELPRQE  LTR   RB,RB               EXIT WITH CC=NEQ ON ERROR                    
*                                                                               
DELPRQX  XMOD1                                                                  
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
*=================================================================*             
* ADD AN ENTRY TO THE PRINTER QUEUE FROM POOL                     *             
* NTR P2=A(PNTRY)                                                 *             
* XIT P3=FULLWORD CONTAINING INDEX NUMBER. SET TO ZERO IF FULL.   *             
*=================================================================*             
         SPACE 1                                                                
ADDPRQ   LR    RB,RF               ESTABLISH LOCAL ADDRESSABILITY               
         USING ADDPRQ,RB                                                        
         XC    8(4,R1),8(R1)                                                    
         L     RE,4(R1)            ERROR IF NULL ENTRY PASSED                   
         OC    0(L'PNTRY,RE),0(RE)                                              
         BZ    ADDPRQE                                                          
         L     RE,VPRQENTS                                                      
         SH    RE,=H'6'                                                         
*                                                                               
ADDPRQ1  L     R3,0(RE)            R3=NUMBER OF INUSE ENTRIES                   
         LA    R4,1(R3)                                                         
         CH    R4,4(RE)                                                         
         BH    ADDPRQE             ERROR IF ENTRY POOL FULL                     
         CS    R3,R4,0(RE)         UPDATE NUMBER IN USE                         
         BNE   ADDPRQ1                                                          
*                                                                               
         LH    R4,4(RE)            SAVE MAX IN R4                               
         LA    RE,12(RE)           RE=A(FIRST ENTRY)                            
         SR    RF,RF               RF=COUNT                                     
         L     R0,=F'-1'                                                        
ADDPRQ2  SR    R3,R3                                                            
         CS    R3,R0,0(RE)         SET X'FFFFFFFF' TO GRAB ENTRY                
         BE    ADDPRQ3                                                          
         LA    RE,L'PNTRY(RE)      TRY NEXT ENTRY                               
         LA    RF,1(RF)                                                         
         CR    RF,R4                                                            
         BNH   ADDPRQ2                                                          
         DC    H'0'                CAN'T FIND FREE ENTRY                        
*                                                                               
ADDPRQ3  L     R4,4(R1)            PUT ENTRY INTO POOL                          
         MVC   0(L'PNTRY,RE),0(R4)                                              
         LA    RF,1(RF)                                                         
         ST    RF,8(R1)            RETURN ENTRY NUMBER AT 8(R1)                 
         SR    RF,RF                                                            
         B     ADDPRQX                                                          
*                                                                               
ADDPRQE  LTR   RB,RB               EXIT WITH CC=NEQ ON ERROR                    
*                                                                               
ADDPRQX  XMOD1                                                                  
*                                                                               
         LTORG                                                                  
         TITLE 'FALCM62- VTAM LINE CONTROL - LU6.2 MAIN SECTION'                
*=================================================================*             
* PROCESS LU6.2 RPL/RPL EXTENSTIONS THAT HAVE BEEN POSTED COMPLETE              
*                                                                               
* THE PROCESSING IS DETERMINED BY THE CONTROL= VALUE RECORDED IN                
* THE RPL EXTENSION BY THE APPC MACRO.  THIS VALUE IS FOUND IN                  
* A TABLE AND THE ASSOCIATED ROUTINE IS CALLED.  AFTER THE RPL                  
* IS PROCESSED CONTROL IS RETURNED TO THE CALLER.  THUS THIS                    
* ROUTINE IS INDEPENDENT OF THE ALLOCATION OF RPLS TO VARIOUS                   
* PURPOSES.                                                                     
*                                                                               
*=================================================================*             
*  FARPL ENTRY IN R7   RPL ITSELF IS IN R8                                      
         USING FARPLD,R7                                                        
         USING IFGRPL,R8                                                        
         SPACE 1                                                                
DOLU62   DS    0H                                                               
         USING *,RF                                                             
         ST    RB,SAVE62                                                        
         ST    RE,SAVE62+4                                                      
         STM   R2,R6,SAVE62WK    SAVE WORK REGS                                 
         BASR  RB,0                                                             
         DROP  RF                                                               
         USING *,RB                                                             
         L     R6,RPLAAREA       GET RPL EXTENSION ADDRESS                      
         USING ISTRPL6X,R6                                                      
         ICM   R3,8,RPL6REQ       GET THE CONTROL= VALUE                        
         SRL   R3,24              MOVE TO LOW ORDER BYTE                        
*                                                                               
         APPCCMD CONTROL=CHECK,RPL=(R8)        OPERATION COMPLETE?              
         LTR   RF,RF             TEST FOR 1ST LEVEL ERROR                       
         BNZ   DOLU62ER                                                         
         LTR   R0,R0             TEST FOR 2ND LEVEL ERROR                       
         BZ    DOLU62B                                                          
DOLU62ER EQU   *                                                                
         CH    R0,HEX0B          DOES RPL EXTENTION HAVE ERROR DATA?            
         BNE   LU62ER1           NO, WEIRD TROUBLE                              
         ICM   R4,12,RPL6RCPR    PRIMARY ERROR REASON                           
         SRL   R4,16             GET INTO LOW ORDER TWO BYTES                   
**                      SENSE IN RPL6SNSI  SEC IN RPL6RCSC                      
         MVC   WTOB40+4(12),=C' AT DOLU62ER'                                    
         STCM  R3,15,WTOB40+16   CONTROL= VALUE                                 
         STCM  R4,15,WTOB40+20   PRI CODE                                       
         STCM  R6,15,WTOB40+24   EXTENSION ADDRESS                              
         WTO   MF=(E,WTOB40)                                                    
         B     XIT62             ABANDOND THIS RPL (FOR NOW)                    
DOLU62B  EQU   *                                                                
         LA    R4,TBL62                                                         
DOLU62C  EX    R3,TBL62CLI        COMPARE R3 WITH WHAT IS IN TBL                
         BE    DOLU62D            WE HAVE A MATCH                               
         LA    R4,TBL62LEN(,R4)   ADVANCE TO NEXT ENTRY                         
         CLI   0(R4),X'FF'        ARE WE AT END OF THE TABLE?                   
         BNE   DOLU62C            NOPE, GO TRY AGAIN                            
         CLI   RPL6REQ,0          IS RPL UNUSED, SO FAR?                        
         BE    XIT62              YES, BYPASS                                   
         DC    H'0'               NO MATCH IN THE TABLE                         
*                                                                               
DOLU62D  L     R2,4(,R4)          GET ROUTINE ADDRESS FROM TABLE                
         MVC   WTOB40+4(12),=C'62 TABLE ==>'                                    
         STCM  R3,15,WTOB40+16     CONTROL= VALUE                               
         STCM  R4,15,WTOB40+20     TABLE ENTRY ADDRESS                          
         STCM  R2,15,WTOB40+24     ROUTINE TO BE ENTERED                        
         MVC   WTOB40+30(16),0(R4) 16 BYTES OF THE TABLE                        
         WTO   MF=(E,WTOB40)                                                    
         BASR  RE,R2              GO TO SELECTED ROUTINE                        
**                                                                              
         MVC   WTOB20+4(12),=C' REQ UNKNOWN'                                    
         WTO   MF=(E,WTOB20)                                                    
         B     XIT62                                                            
*                                                                               
TBL62CLI CLI   0(R4),0          TARGET OF EXECUTE                               
*                                                                               
         DS    0F                                                               
TBL62    DC    AL1(RPL6ALLC),AL3(0),XL4'FF'          ALLOCATE                   
TBL62LEN EQU   *-TBL62                                                          
         DC    AL1(RPL6RSRV),AL3(0),XL4'FF'          RESETRCV                   
         DC    AL1(RPL6DEAL),AL3(0),XL4'FF'          DEALLOCATE                 
         DC    AL1(RPL6OPER),AL3(0),A(LU62OPER)      OPRCNTL                    
         DC    AL1(RPL6RFH5),AL3(0),A(LU62FMH5)      RECVFMH5                   
         DC    AL1(RPL6RCV),AL3(0),A(LU62RECV)       RECEIVE                    
         DC    AL1(RPL6RJCT),AL3(0),XL4'FF'          REJECT                     
         DC    AL1(RPL6SEND),AL3(0),A(LU62SEND)      SEND                       
         DC    AL1(RPL6SETS),AL3(0),XL4'FF'          SETSESS                    
         DC    AL1(0),AL3(0),A(XIT62)     ZERO       BYPASS                     
         DC    X'FF',A(0)                                                       
*                                                                               
         EJECT                                                                  
         NI    FARPLFLG,X'FF'-FARPLBSY    RESET BUSY FLAG                       
*=====================================================================          
*                                                                               
*=====================================================================          
LU62SEND DS    0H                                                               
         APPCCMD CONTROL=SEND,RPL=(R8),CONVID=(R0),                    X        
               OPTCD=ASY,ECB=INTERNAL,                                 X        
               RECLEN=(R6),AREA=(R5)                                            
         LTR   RF,RF                                                            
         EJECT                                                                  
*=====================================================================          
*   A  CONTROL=RECEIVE RPL HAS COMPLETED                                        
*    STEP 1 IS TO HANDLE THE BUFFER THAT HAS BEEN RECEIVED                      
*         2 IS TO THEN ISSUE ANOTHER RECEIVE                                    
*=====================================================================          
LU62RECV DS    0H                                                               
**  RPL EXTENSION IS IN REG 6                                                   
**  RPL ITSELF    IS IN REG 8                                                   
**  FARPL         IS IN REG 7                                                   
         CLI   RPL6REQ,RPL6RECV  MAKE SURE WE'RE HANDLING RECEIVES              
*NOP     BNE                                                                    
**                                                                              
**                               UTL ADDRESS IN DIFFERENT USER FIELD            
         ICM   R3,15,RPL6USR     GET FARPL ADDRESS                              
         CR    R3,R7                                                            
         BE    *+6                                                              
         DC    H'0'              SHOULD NOT OCCUR                               
         L     R3,FARPLUTL       GET THE UTL ADDRESS                            
         USING UTLD,R3                                                          
         MVC   WTOB40+4(12),=C' AT LU62RECV'                                    
         STCM  R3,15,WTOB40+16   UTL ADDRESS                                    
         MVC   WTOB40+25(8),RPL6LU   PARTNER LU NAME                            
         WTO   MF=(E,WTOB40)                                                    
*        MVC   TRTUNNI(1),RPL6RTUN   SAVE THE RETURNED INFO BYTE                
*        MVC   TWRMASK(2),RPL6RCV1   SAVE THE WHAT RECEIVED MASK                
**                                                                              
**    NEED BIG ANALYSIS OF WHAT RECEIVED MASK HERE                              
**                                                                              
         L     R4,RPLRLEN          SEE HOW MUCH DATA CAME IN                    
         L     R5,RPLAREA          GET THE DATA BUFFER ADDRESS                  
         STCM  R4,15,WTOB40+4      LENGTH VALUE                                 
         MVC   WTOB40+8(32),0(R5)  DATA ITSELF                                  
         WTO   MF=(E,WTOB40)                                                    
         L     R4,=V(SYSFAC)                                                    
         USING SYSFACD,R4                                                       
         L     RE,VSSB                                                          
         USING SSBD,RE                                                          
         TM    SSBSTAT1,SSBSEOJ    TEST EOJ PENDING                             
         DROP  R4,RE                                                            
         BO    XIT62               YES, WIND DOWN                               
         NI    FARPLFLG,X'FF'-FARPLBSY    RESET BUSY FLAG                       
         LR    R1,R7               PASS FARPL ADDRESS AS PARM                   
         L     RF,=A(DORECV)                                                    
         BASR  RE,RF               NO, GO DO ANOTHER RECEIVE                    
*                                                                               
**                                                                              
**                                                                              
         B     XIT62                                                            
         EJECT                                                                  
         USING UTLD,R3                                                          
         L     RE,FARPLIOA                                                      
         SH    RE,=H'8'            BACK UP TO HEADER                            
         ST    R3,0(RE)            SET UTL ENTRY ADDRESS                        
*                                                                               
         L     RF,FARPLIOL         BUFFER SIZE                                  
         ST    RF,4(RE)            STORE 0000.LEN                               
*                                                                               
         MVC   TBUFF,FARPLIOA      MOVE BUFFER ADDR TO TRM ENTRY                
         XC    FARPLIOA,FARPLIOA   CLEAR RPL BUFFER ADDRESS                     
         XC    FARPLIOL,FARPLIOL   CLEAR MSG LEN                                
         OC    TPRNT,TPRNT         TEST PRINTER                                 
         BNZ   NXT70L62                                                         
******  ???                                                                     
*=====================================================================*         
* QUEUE INPUT TO PROPER SE                                            *         
*=====================================================================*         
         SPACE 1                                                                
NXT60L62 DS    0H                                                               
NXT70L62 L     R6,TBUFF            SET FLAG TO INDICATE REAL INPUT              
         SH    R6,=H'8'                                                         
         OI    4(R6),X'20'                                                      
*                                                                               
         LA    R3,0(,R3)           CLEAR HIGH ORDER BYTE OF REG                 
*        GOTO1 =V(MSGQIN),P1,(R2),TBUFF,(R3)                                    
*                                                                               
*=====================================================================*         
* BUILD A BUFFER HEADER AT A(BUFFER)-8.                               *         
* BYTES 0-3 = UTL ENTRY ADDRESS                                       *         
*        4  = SPARE                                                   *         
*        5 =  DSP TO STX (SET BY MSGQIN) OR WRITE TYPE (LCWRITE)      *         
*       6-7 = MESSAGE LENGTH                                          *         
*=====================================================================*         
*                                                                               
         EJECT                                                                  
*=====================================================================          
*                                                                               
*   THIS ROUTINE HANDLES THE COMPLETION OF THE SPECIAL FMH5 RECEIVE             
*   MACRO. THE RESULT OF THIS IS THAT A                                         
*   CONVERSATION ID IS ASSIGNED AND THE CONTINUATION MODE OF THE                
*   CONVERSATION IS ESTABLISHED AS CONTINUE SPECIFIC.                           
*                                                                               
*   THE FMH5 ITSELF NEEDS TO BE ANALYZED.                                       
*                                                                               
*   ASSUMING WE LIKE THE FMH5 WE THEN NEED TO SETUP TO DO A SPECIFIC            
*   MODE RECEIVE.  THIS WILL BE DONE USING THE FARPL ASSIGNED IN                
*   THE DOFMH5 PROCESS.                                                         
*=====================================================================          
LU62FMH5 DS    0H                                                               
**  RPL EXTENSION IS IN REG 6                                                   
**  RPL ITSELF    IS IN REG 8                                                   
**  FARPL         IS IN REG 7                                                   
         CLI   RPL6REQ,RPL6RFH5  MAKE SURE WE'RE HANDLING AN FMH5               
**                                                                              
**   MAYBE WE SHOULD DECREMENT THE COUNT HERE.                                  
**                                                                              
**       ANALYSZE THE FMH5 THAT HAS BEEN RECEIVED                               
**       IF WE DON'T LIKE THE FMH5 THEN WHAT? DEALLOCATE, TBD                   
**                                                                              
**                   RPL6LU      PARTNER LU                                     
**                   RPL6MODE    PARTNER'S MODE                                 
         MVC   WTOB20+4(16),=C' AT LU62FMH5    '                                
         WTO   MF=(E,WTOB20)                                                    
         L     R2,=V(SYSFAC)                                                    
         USING SYSFACD,R2                                                       
         L     R3,VUTL                                                          
         DROP  R2                                                               
         LH    R4,0(R3)                                                         
         L     R5,2(R3)                                                         
         LA    R3,6(R3)                                                         
         USING UTLD,R3                                                          
FMH52    CLC   TSYM,RPL6LU         MATCH ON SYMBOLIC NAME(LUID)?                
         BE    FMH54               YES, THEN USE THIS ENTRY                     
         BXLE  R3,R4,FMH52         NO, TRY AGAIN                                
         B     FMH5ERR             NOT FOUND                                    
*                                                                               
FMH54    TM    TSTAT2,TSTATTIP    TEST IF STILL IN PROCESS                      
         ICM   R4,15,RPL6USR      GET THE FARPL ASSIGNED EARLIER                
         ST    R3,(FARPLUTL-FARPLD)(R4) SAVE THE UTL ADDRESS IN FARPL           
         ICM   R2,15,RPL6CNVD     GET ASSIGNED 6.2 CONVERSATION ID              
         ST    R2,TCID            SAVE IT.                                      
*                                 UP TO THIS POINT THIS FIELD HAD THE           
*                                 SESSION ID                                    
*                                                                               
         L     R2,RPLRLEN         HOW MUCH DATA CAME IN?                        
         L     R1,RPLAREA         THIS SHOULD BE WHERE IT IS                    
         USING ISTFM5,R1                                                        
         ICM   R5,8,FM5LENTH      GET LENGTH                                    
         MVC   WTOB40+4(21),0(R1) DISPLAY FMH5 FOR NOW                          
         WTO   MF=(E,WTOB40)      LATER ON PUT IT IN VTT TRACE                  
         DROP  R3                 DONE WITH UTL                                 
*        MVC   TWRMASK(2),RPL6RCV1   SAVE THE WHAT RECEIVED MASK                
*        MVC   TRTUNNI(1),RPL6RTUN   SAVE THE RETURNED INFO BYTE                
**                                                                              
         NI    FARPLFLG,X'FF'-FARPLBSY    RESET BUSY FLAG SO ANOTHER            
*                                       RECVFMH5 CAN BE ISSUED                  
**                                                                              
         LR    R1,R4               GET FARPL TO BE USED FOR RECEIVE             
         L     RF,=A(DORECV)                                                    
         BASR  RE,RF               GO ISSUE A RECEIVE TO GET DATA GOING         
         B     XIT62                                                            
FMH5ERR  MVC   WTOB40+4(15),=C'LU NOT IN UTL***'                                
         MVC   WTOB40+20(8),RPL6LU     HERE'S THE LU NAME                       
         WTO   MF=(E,WTOB40)                                                    
         B     XIT62                                                            
         DROP  R1                                                               
*                                                                               
         APPCCMD CONTROL=REJECT,QUALIFY=CONV,RPL=(R8)                           
         EJECT                                                                  
*=====================================================================          
*                                                                               
*  HANDLE COMPLETION OF CONTROL=OPER REQUESTS                                   
*                                                                               
*=====================================================================          
LU62OPER DS    0H                                                               
**  RPL EXTENSION IS IN REG 6                                                   
**  RPL ITSELF    IS IN REG 8                                                   
**  FARPL         IS IN REG 7                                                   
         CLI   RPL6REQ,RPL6OPER  MAKE SURE WE'RE HANDLING AN OPER               
         BNE   XIT62                                                            
         ICM   R3,15,RPL6USR     IS THIS UTL ADDRESS (WE HOPE)?                 
         USING UTLD,R3                                                          
**                   RPL6LU      PARTNER LU                                     
**                   RPL6MODE    PARTNER'S MODE                                 
         MVC   WTOB20+4(12),=C' AT LU62OPER'                                    
         STCM  R3,15,WTOB20+16   UTL ADDRESS                                    
         MVC   WTOB20+20(4),=C'    '                                            
         WTO   MF=(E,WTOB20)                                                    
         DROP  R3                DONE WITH UTL                                  
         B     XIT62                                                            
         SPACE 4                                                                
XIT62    LM    R2,R6,SAVE62WK    RESTORE WORK REGS                              
         DROP  R6                DONE WITH RPL EXTENSION                        
         L     RE,SAVE62+4       LOAD RETURN ADDRESS                            
         L     RB,SAVE62         RESTORE BASE REG                               
         BR    RE                                                               
LU62ER1  MVC   WTOB20+4(12),=C' AT LU62ER1'                                     
         B     XIT62                                                            
         SPACE 4                                                                
HEX0B    DC    H'11'                                                            
HEX48    DC    H'72'       SESSION TERMINATED                                   
HEX14    DC    H'20'       ABNORMAL DEALLOCATION BY PARTNER                     
HEX2C    DC    H'44'       CONV-ID MOST LIKELY BAD                              
HEX4C    DC    H'76'       RESOURCE FAILURE                                     
HEX60    DC    X'0060'     NO FMH5 AVAILABLE TO BE RECEIVED                     
         LTORG                                                                  
         EJECT                                                                  
DORECV   DS    0H                                                               
         USING *,RF                                                             
         ST    RB,SAVE62B                                                       
         ST    RE,SAVE62B+4                                                     
         STM   R2,R6,SAVE62BW    SAVE WORK REGS                                 
         BASR  RB,0                                                             
         DROP  RF                                                               
         USING *,RB                                                             
*    CALLER PASSES FARPL TO BE USED IN REG 1                                    
*        CONVID IS IN UTL                                                       
         LR    R7,R1               PUT FARPL ADDRESS IN STANDARD REG            
         TM    FARPLFLG,FARPLBSY   TEST IF BUSY FLAG                            
         OI    FARPLFLG,FARPLBSY   SET BUSY FLAG                                
         L     R8,FARPLRPL         POINT TO RPL                                 
         ICM   R2,15,FARPLIOA      TEST BUFFER ASSIGNED                         
         MVC   WTOB20+4(12),=C' AT RECVENT'                                     
         STCM  R7,15,WTOB20+16     FARPL  ADDRESS                               
         STCM  R2,15,WTOB20+20     BUFFER ADDRESS                               
         WTO   MF=(E,WTOB20)                                                    
         LTR   R2,R2                                                            
         BZ    RECVER2                                                          
         LA    R2,6(,R2)           ADVANCE TO LENGTH SECTION OF BUFFER          
         L     R4,FARPLUTL         GET UTL ENTRY POINTER                        
         USING UTLD,R4                                                          
         L     R3,TCID             GET CONVERSATION ID                          
**                                                                              
**                                                                              
         PRINT GEN                                                              
         APPCCMD CONTROL=RECEIVE,RPL=(R8),QUALIFY=SPEC,                X        
               FILL=LL,CONVID=(R3),                                    X        
               OPTCD=ASY,ECB=INTERNAL,CONMODE=SAME,                    X        
               AREA=(R2),AREALEN=82     LCBUFFLN                                
         DROP  R4                                                               
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   RECVER1                                                          
RECVXIT  LM    R2,R6,SAVE62BW    RESTORE WORK REGS                              
         MVC   WTOB20+4(12),=C' AT RECVEXI'                                     
         WTO   MF=(E,WTOB20)                                                    
         L     RE,SAVE62B+4      LOAD RETURN ADDRESS                            
         L     RB,SAVE62B        RESTORE BASE REG                               
         BR    RE                                                               
RECVER1  MVC   WTOB20+4(12),=C' AT RECVER1'                                     
         WTO   MF=(E,WTOB20)                                                    
         B     RECVXIT                                                          
RECVER2  MVC   WTOB20+4(12),=C' AT RECVER2'                                     
         WTO   MF=(E,WTOB20)                                                    
         B     RECVXIT                                                          
         DROP  RB                                                               
         EJECT                                                                  
DOFMH5   DS    0H                                                               
         USING *,RF                                                             
         ST    RB,SAVE62                                                        
         ST    RE,SAVE62+4                                                      
         STM   R2,R6,SAVE62WK    SAVE WORK REGS                                 
         BASR  RB,0                                                             
         DROP  RF                                                               
         USING *,RB                                                             
         L     R7,=A(FMH5FARP)   GET THE FMH5 FARPL                             
         TM    FARPLFLG,FARPLBSY IS IT ALREADY BUSY?                            
         BO    FMH5XIT           YES, WAIT TILL LATER                           
         OI    FARPLFLG,FARPLBSY SET BUSY FLAG                                  
         L     R8,FARPLRPL       POINT TO RPL                                   
         L     R4,AFMHAREA       READ FMH5 INTO THIS AREA                       
*                                                                               
*    ONCE THE FMH5 COMES IN WE ARE GOING TO DEDICATE AN FARPL/RPL               
*    TO THE CONVERSATION AND THE CONVERSATION WILL BE IN SPECIFIC MODE          
*    AND MOST OF THE TIME A SPECIFIC RECEIVE WILL BE OUTSTANDING FOR IT         
*                                                                               
         L     R7,=A(RECVFARP)   GET THE FIRST RECEIVE FARPL                    
DOFMH5A  TM    FARPLFLG,FARPL62A HAS THIS RPL BEEN ASSIGNED                     
         BNO   DOFMH5B           NO, THEN WE WILL USE IT.                       
         ICM   R7,15,FARPLNXT    YES, GET ADDRESS OF NEXT FARPL                 
         BNZ   DOFMH5A           IF NON-ZERO TRY THIS FARPL OUT                 
         B     FMH5ER2           WE ARE OUT OF FARPL'S                          
DOFMH5B  OI    FARPLFLG,FARPL62A INDICATE THIS RPL HAS BEEN ASSIGNED            
*NOP     LA    R6,FARPLUTL       THE LU62 USER FIELD WILL POINT HERE            
         PRINT GEN                                                              
         APPCCMD CONTROL=RCVFMH5,RPL=(R8),CONMODE=CS,                  X        
               USERFLD=(R7),                                           X        
               OPTCD=ASY,ECB=INTERNAL,AREA=(R4),AREALEN=255                     
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   FMH5ER1                                                          
         L     RF,=A(QDOWN)      GET SUBROUTINE ADDRESS                         
         L     R1,=A(FMH5CTR)    GET COUNTER ADDRESS                            
         BASR  RE,RF             GO DECREMENT COUNT OF FMH5'S WAITING           
FMH5XIT  LM    R2,R6,SAVE62WK    RESTORE WORK REGS                              
         MVC   WTOB20+4(12),=C' AT FMH5EXI'                                     
         STCM  R7,15,WTOB20+16   SAVE FARPL ADDRESS                             
         WTO   MF=(E,WTOB20)                                                    
         L     RE,SAVE62+4       LOAD RETURN ADDRESS                            
         L     RB,SAVE62         RESTORE BASE REG                               
         BR    RE                                                               
FMH5ER1  MVC   WTOB20+4(12),=C' AT FMH5ER1'                                     
         WTO   MF=(E,WTOB20)                                                    
         B     FMH5XIT                                                          
FMH5ER2  MVC   WTOB20+4(12),=C' AT FMH5ER2'                                     
         WTO   MF=(E,WTOB20)                                                    
         B     FMH5XIT                                                          
         DROP  RB                                                               
         SPACE 3                                                                
SAVE62   DS    2F                                                               
SAVE62WK DS    5F                                                               
SAVE62B  DS    2F                                                               
SAVE62BW DS    5F                                                               
AFMHAREA DC    A(FMH5AREA)                                                      
ALCMTRC  DC    A(LCMTRC)              TRACE ROUTINE ADDRESS                     
LU62LIST DC    8F'0'                                                            
WTOB20   WTO   '                    ',ROUTCDE=(11),MF=L                         
WTOB40   WTO   '                                        ',ROUTCDE=(11),X        
               MF=L                                                             
         LTORG                                                                  
         EJECT                                                                  
*============================================================*                  
* FARPLS                                                     *                  
*============================================================*                  
         SPACE 1                                                                
         DS    0D                                                               
         DC    CL8'*RPLLST*'                                                    
RPLLST   DS    0D                                                               
*                                                                               
W01      DC    CL3'W01',AL1(FARPLWRT)                                           
         DC    A(W02)                                                           
         DC    A(NIBW01)                                                        
         DC    A(RPLW01)                                                        
         DC    3A(0)                                                            
*                                                                               
W02      DC    CL3'W02',AL1(FARPLWRT)                                           
         DC    A(W03)                                                           
         DC    A(NIBW02)                                                        
         DC    A(RPLW02)                                                        
         DC    3A(0)                                                            
*                                                                               
W03      DC    CL3'W03',AL1(FARPLWRT)                                           
         DC    A(W04)                                                           
         DC    A(NIBW03)                                                        
         DC    A(RPLW03)                                                        
         DC    3A(0)                                                            
*                                                                               
W04      DC    CL3'W04',AL1(FARPLWRT)                                           
         DC    A(W05)                                                           
         DC    A(NIBW04)                                                        
         DC    A(RPLW04)                                                        
         DC    3A(0)                                                            
*                                                                               
W05      DC    CL3'W05',AL1(FARPLWRT)                                           
         DC    A(W06)                                                           
         DC    A(NIBW05)                                                        
         DC    A(RPLW05)                                                        
         DC    3A(0)                                                            
*                                                                               
W06      DC    CL3'W06',AL1(FARPLWRT)                                           
         DC    A(W07)                                                           
         DC    A(NIBW06)                                                        
         DC    A(RPLW06)                                                        
         DC    3A(0)                                                            
*                                                                               
W07      DC    CL3'W07',AL1(FARPLWRT)                                           
         DC    A(W08)                                                           
         DC    A(NIBW07)                                                        
         DC    A(RPLW07)                                                        
         DC    3A(0)                                                            
*                                                                               
W08      DC    CL3'W08',AL1(FARPLWRT)                                           
         DC    A(R01)                                                           
         DC    A(NIBW08)                                                        
         DC    A(RPLW08)                                                        
         DC    3A(0)                                                            
*                                                                               
R01      DC    CL3'R01',AL1(FARPLRD)                                            
         DC    A(R02)                                                           
         DC    A(NIBR01)                                                        
         DC    A(RPLR01)                                                        
         DC    3A(0)                                                            
*                                                                               
R02      DC    CL3'R02',AL1(FARPLRD)                                            
         DC    A(R03)                                                           
         DC    A(NIBR02)                                                        
         DC    A(RPLR02)                                                        
         DC    3A(0)                                                            
*                                                                               
R03      DC    CL3'R03',AL1(FARPLRD)                                            
         DC    A(R04)                                                           
         DC    A(NIBR03)                                                        
         DC    A(RPLR03)                                                        
         DC    3A(0)                                                            
*                                                                               
R04      DC    CL3'R04',AL1(FARPLRD)                                            
         DC    A(R05)                                                           
         DC    A(NIBR04)                                                        
         DC    A(RPLR04)                                                        
         DC    3A(0)                                                            
*                                                                               
R05      DC    CL3'R05',AL1(FARPLRD)                                            
         DC    A(R06)                                                           
         DC    A(NIBR05)                                                        
         DC    A(RPLR05)                                                        
         DC    3A(0)                                                            
*                                                                               
R06      DC    CL3'R06',AL1(FARPLRD)                                            
         DC    A(R07)                                                           
         DC    A(NIBR06)                                                        
         DC    A(RPLR06)                                                        
         DC    3A(0)                                                            
*                                                                               
R07      DC    CL3'R07',AL1(FARPLRD)                                            
         DC    A(R08)                                                           
         DC    A(NIBR07)                                                        
         DC    A(RPLR07)                                                        
         DC    3A(0)                                                            
*                                                                               
R08      DC    CL3'R08',AL1(FARPLRD)                                            
         DC    A(C01)                                                           
         DC    A(NIBR08)                                                        
         DC    A(RPLR08)                                                        
         DC    3A(0)                                                            
         EJECT                                                                  
C01      DC    CL3'C01',AL1(FARPLLOG)                                           
         DC    A(C02)                                                           
         DC    A(NIBC01)                                                        
         DC    A(RPLC01)                                                        
         DC    3A(0)                                                            
*                                                                               
C02      DC    CL3'C02',AL1(FARPLLOG)                                           
         DC    A(C03)                                                           
         DC    A(NIBC02)                                                        
         DC    A(RPLC02)                                                        
         DC    3A(0)                                                            
*                                                                               
C03      DC    CL3'C03',AL1(FARPLLOG)                                           
         DC    A(C04)                                                           
         DC    A(NIBC03)                                                        
         DC    A(RPLC03)                                                        
         DC    3A(0)                                                            
*                                                                               
C04      DC    CL3'C04',AL1(FARPLLOG)                                           
         DC    A(C05)                                                           
         DC    A(NIBC04)                                                        
         DC    A(RPLC04)                                                        
         DC    3A(0)                                                            
*                                                                               
C05      DC    CL3'C05',AL1(FARPLLOG)                                           
         DC    A(C06)                                                           
         DC    A(NIBC05)                                                        
         DC    A(RPLC05)                                                        
         DC    3A(0)                                                            
*                                                                               
C06      DC    CL3'C06',AL1(FARPLCLS)                                           
         DC    A(C07)                                                           
         DC    A(NIBC06)                                                        
         DC    A(RPLC06)                                                        
         DC    3A(0)                                                            
*                                                                               
C07      DC    CL3'C07',AL1(FARPLCLS)                                           
         DC    A(C08)                                                           
         DC    A(NIBC07)                                                        
         DC    A(RPLC07)                                                        
         DC    3A(0)                                                            
*                                                                               
C08      DC    CL3'C08',AL1(FARPLCLS)                                           
         DC    A(OPERFARP)                                                      
         DC    A(NIBC08)                                                        
         DC    A(RPLC08)                                                        
         DC    3A(0)                                                            
*                                                                               
OPERFARP DC    CL3'62B',AL1(FARPL62)     FARPL FOR CONTROL=OPER                 
         DC    A(FMH5FARP)                                                      
         DC    A(0)                                                             
         DC    A(RPL62A)                                                        
         DC    3A(0)                                                            
*                                                                               
FMH5FARP DC    CL3'62C',AL1(FARPL62)     FARPL FOR RECEIVE FMH5'S               
         DC    A(RECVFARP)                                                      
         DC    A(0)                                                             
         DC    A(RPL62B)                                                        
         DC    3A(0)                                                            
RECVFARP DC    CL3'62A',AL1(FARPL62)     FARPL                                  
         DC    A(RECVFAR2)                                                      
         DC    A(0)             NIB N/A                                         
         DC    A(RPL62C)                                                        
         DC    3A(0)                                                            
*                                                                               
RECVFAR2 DC    CL3'62A',AL1(FARPL62)     FARPL                                  
         DC    A(RECVFAR3)                                                      
         DC    A(0)             NIB N/A                                         
         DC    A(RPL62D)                                                        
         DC    3A(0)                                                            
*                                                                               
RECVFAR3 DC    CL3'62A',AL1(FARPL62)     FARPL                                  
         DC    A(RECVFAR4)                                                      
         DC    A(0)             NIB N/A                                         
         DC    A(RPL62E)                                                        
         DC    3A(0)                                                            
*                                                                               
RECVFAR4 DC    CL3'62A',AL1(FARPL62)     FARPL                                  
         DC    A(0)                                                             
         DC    A(0)             NIB N/A                                         
         DC    A(RPL62F)                                                        
         DC    3A(0)                                                            
*                                                                               
         SPACE 2                                                                
         DS    0D                                                               
         DC    C'LOGXSAVE'                                                      
LOGXSAVE DS    50D                                                              
         EJECT                                                                  
         DC    CL8'*RPLW01*'                                                    
RPLW01   RPL   AM=VTAM,NIB=NIBW01                                               
         DC    CL8'*NIBW01*'                                                    
NIBW01   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW02*'                                                    
RPLW02   RPL   AM=VTAM,NIB=NIBW02                                               
         DC    CL8'*NIBW02*'                                                    
NIBW02   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW03*'                                                    
RPLW03   RPL   AM=VTAM,NIB=NIBW03                                               
         DC    CL8'*NIBW03*'                                                    
NIBW03   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW04*'                                                    
RPLW04   RPL   AM=VTAM,NIB=NIBW04                                               
         DC    CL8'*NIBW04*'                                                    
NIBW04   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW05*'                                                    
RPLW05   RPL   AM=VTAM,NIB=NIBW05                                               
         DC    CL8'*NIBW05*'                                                    
NIBW05   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW06*'                                                    
RPLW06   RPL   AM=VTAM,NIB=NIBW06                                               
         DC    CL8'*NIBW06*'                                                    
NIBW06   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW07*'                                                    
RPLW07   RPL   AM=VTAM,NIB=NIBW07                                               
         DC    CL8'*NIBW07*'                                                    
NIBW07   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLW08*'                                                    
RPLW08   RPL   AM=VTAM,NIB=NIBW08                                               
         DC    CL8'*NIBW08*'                                                    
NIBW08   NIB   MODE=RECORD                                                      
*********************************                                               
         DC    CL8'*RPLR01*'                                                    
RPLR01   RPL   AM=VTAM,NIB=NIBR01                                               
         DC    CL8'*NIBR01*'                                                    
NIBR01   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR02*'                                                    
RPLR02   RPL   AM=VTAM,NIB=NIBR02                                               
         DC    CL8'*NIBR02*'                                                    
NIBR02   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR03*'                                                    
RPLR03   RPL   AM=VTAM,NIB=NIBR03                                               
         DC    CL8'*NIBR03*'                                                    
NIBR03   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR04*'                                                    
RPLR04   RPL   AM=VTAM,NIB=NIBR04                                               
         DC    CL8'*NIBR04*'                                                    
NIBR04   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR05*'                                                    
RPLR05   RPL   AM=VTAM,NIB=NIBR05                                               
         DC    CL8'*NIBR05*'                                                    
NIBR05   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR06*'                                                    
RPLR06   RPL   AM=VTAM,NIB=NIBR06                                               
         DC    CL8'*NIBR06*'                                                    
NIBR06   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR07*'                                                    
RPLR07   RPL   AM=VTAM,NIB=NIBR07                                               
         DC    CL8'*NIBR07*'                                                    
NIBR07   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLR08*'                                                    
RPLR08   RPL   AM=VTAM,NIB=NIBR08                                               
         DC    CL8'*NIBR08*'                                                    
NIBR08   NIB   MODE=RECORD                                                      
*************************************                                           
         DC    CL8'*RPLC01*'                                                    
RPLC01   RPL   AM=VTAM,NIB=NIBC01                                               
         DC    CL8'*NIBC01*'                                                    
NIBC01   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC02*'                                                    
RPLC02   RPL   AM=VTAM,NIB=NIBC02                                               
         DC    CL8'*NIBC02*'                                                    
NIBC02   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC03*'                                                    
RPLC03   RPL   AM=VTAM,NIB=NIBC03                                               
         DC    CL8'*NIBC03*'                                                    
NIBC03   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC04*'                                                    
RPLC04   RPL   AM=VTAM,NIB=NIBC04                                               
         DC    CL8'*NIBC04*'                                                    
NIBC04   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC05*'                                                    
RPLC05   RPL   AM=VTAM,NIB=NIBC05                                               
         DC    CL8'*NIBC05*'                                                    
NIBC05   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC06*'                                                    
RPLC06   RPL   AM=VTAM,NIB=NIBC06                                               
         DC    CL8'*NIBC06*'                                                    
NIBC06   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC07*'                                                    
RPLC07   RPL   AM=VTAM,NIB=NIBC07                                               
         DC    CL8'*NIBC07*'                                                    
NIBC07   NIB   MODE=RECORD                                                      
         DC    CL8'*RPLC08*'                                                    
RPLC08   RPL   AM=VTAM,NIB=NIBC08                                               
         DC    CL8'*NIBC08*'                                                    
NIBC08   NIB   MODE=RECORD                                                      
******* LU 6.2 RPLS & EXTENSIONS  (NIB NOT NEEDED) **                           
         DC    CL8'*RPL62A*'                                                    
RPL62A   RPL   AM=VTAM                                                          
RPL62AX  ISTRPL6  RPL EXTENSION                                                 
         DC    CL8'*RPL62B*'                                                    
RPL62B   RPL   AM=VTAM                                                          
RPL62BX  ISTRPL6  RPL EXTENSION                                                 
         DC    CL8'*RPL62C*'                                                    
         PRINT GEN                                                              
RPL62C   RPL   AM=VTAM                                                          
RPL62CX  ISTRPL6  RPL EXTENSION                                                 
         DC    CL8'*RPL62D*'                                                    
RPL62D   RPL   AM=VTAM                                                          
RPL62DX  ISTRPL6  RPL EXTENSION                                                 
         DC    CL8'*RPL62E*'                                                    
RPL62E   RPL   AM=VTAM                                                          
RPL62EX  ISTRPL6  RPL EXTENSION                                                 
         PRINT GEN                                                              
         DC    CL8'*RPL62F*'                                                    
RPL62F   RPL   AM=VTAM                                                          
RPL62FX  ISTRPL6  RPL EXTENSION                                                 
         PRINT NOGEN                                                            
         SPACE 2                                                                
*===============================================================*               
* VTAM CORE-RESIDENT TRACE BUFFER                               *               
*===============================================================*               
         SPACE 1                                                                
         DS    0D                                                               
         DC    CL8'*TRCBUFF'                                                    
TRCBUFF  DS    1900C                                                            
TRCBUFFX EQU   *                                                                
FMH5AREA DS    CL255                                                            
TEMPBUFF DS    CL100                                                            
         EJECT                                                                  
LCMWRK   DSECT                                                                  
P1       DS    A                                                                
P2       DS    A                                                                
P3       DS    A                                                                
P4       DS    A                                                                
P5       DS    A                                                                
P6       DS    A                                                                
DUB      DS    D                                                                
WORK     DS    6F                                                               
DDSFLAG  DS    C                                                                
CLSFLAG  DS    C                                                                
         DS    CL2                                                              
ERRDATA  DS    CL16                                                             
*                                                                               
LOGREC   DS    0CL38                                                            
LOGID    DS    CL4                                                              
LOGLINE  DS    CL4                                                              
LOGCUDV  DS    CL4                                                              
LOGTIME  DS    PL4                                                              
LOGDATA  DS    CL22                                                             
*                                                                               
LCMWRKX  EQU   *                                                                
         SPACE 2                                                                
LOGONPRM DSECT                                                                  
LOGONACB DS    A                   A(ACB)                                       
LOGONSYM DS    A                   A(EIGHT BYTE SYMBOLIC NAME)                  
LOGONUSR DS    A                   SIMLOGON DATA OR ZERO                        
LOGONLEN DS    F                   L'USER DATA FROM LU                          
LOGONRPL DS    A                   VTAM SUPPLIED READ ONLY RPL                  
LOGONCID DS    F                   NUMBER ASSIGNED TO SESSION                   
         ORG   LOGONLEN                                                         
XREASON  DS    CL4                 REASON FOR EXIT INVOKATION                   
XRORPL   DS    A                   READ ONLY RPL                                
         SPACE 2                                                                
LSTXPRM  DSECT                                                                  
LSTXACB  DS    A                   A(ACB)                                       
LSTXCID  DS    F                   CID                                          
LSTXUSER DS    F                   USERFLD OF NIB                               
LSTXWHY  DS    F                   LOSTERM REASON CODE                          
         SPACE 2                                                                
NSXPRM   DSECT                                                                  
NSXACB   DS    A        1          A(ACB)                                       
NSXCID   DS    F        2          CID   -- CLEANUP ONLY                        
NSXUSER  DS    F        3          USERFLD OF NIB  -- CLEANUP                   
         DS    F        4          RESERVED                                     
NSXRORPL DS    F        5          READ ONLY RPL                                
         DS    F        6          RESERVED                                     
         EJECT                                                                  
       ++INCLUDE FARPLD                                                         
FARPL62  EQU   X'10'            LU62 ENTRY                                      
FARPL62A EQU   X'20'            DEDICATED FARPL HAS BEEN ASSIGNED               
         SPACE 2                                                                
       ++INCLUDE VTTRCBUFF                                                      
         EJECT                                                                  
       ++INCLUDE FAUTL                                                          
         EJECT                                                                  
       ++INCLUDE FASSB                                                          
         EJECT                                                                  
       ++INCLUDE FATCB                                                          
         EJECT                                                                  
       ++INCLUDE FASCREQUS                                                      
         EJECT                                                                  
       ++INCLUDE FASYSFAC                                                       
         SPACE 1                                                                
         PRINT OFF                                                              
       ++INCLUDE FAPRQ                                                          
       ++INCLUDE FASELIST                                                       
         EJECT                                                                  
         ISTUSFBC                                                               
         EJECT                                                                  
         PRINT ON                                                               
         PRINT GEN                                                              
         IFGRPL DSECT=YES,AM=VTAM                                               
         EJECT                                                                  
**       ISTRPL6X                                                               
         ISTFM5                                                                 
         ISTRH                                                                  
         ISTDBIND                                                               
         EJECT                                                                  
         IFGACB AM=VTAM                                                         
         EJECT                                                                  
         ISTDNIB                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'138FRLCM62S  05/01/02'                                      
         END                                                                    
