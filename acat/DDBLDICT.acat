*          DATA SET DDBLDICT   AT LEVEL 004 AS OF 05/01/02                      
*CATALP DDBLDICT                                                                
*                                                                               
***********************************************************************         
*                                                                     *         
*  TITLE: DDBLDICT<==>RMDDBLDICT MODULE TO CONSTRUCT DICTIONARIES     *         
*                                                                     *         
*  COMMENTS: ONLY NEED TO READ MESSAGE RECORDS TO CREATE DICTIONARIES *         
*             SOME INSTRUCTIONS WILL NEED TO WORK WITH 31-BIT MODE    *         
*             WHEN CONSTRUCTING THE DICTIONARY ABOVE THE LINE         *         
*                                                                     *         
*  CALLED FROM: SRTIM00 - TO PUT DICTIONARY IN HIGH CORE              *         
*               DDGEN   - TO CREATE DICTIONARY LOAD MODULE            *         
*                                                                     *         
*  CALLS TO: DATAMGR                                                  *         
*                                                                     *         
*  INPUTS:  PARAMETER 1 @  0(R1) = A(PARAMETER BLOCK)                 *         
*                                  (DSECT IN DDBLDICTD)               *         
*                                                                     *         
*  OUTPUTS: PARMBLK+0 = A(PHASENAME)                                  *         
*           PARMBLK+4 = L(DICTIONARY)                                 *         
*           PARMBLK+8(2) = # OF "GOOD" RECORDS READ                   *         
*                                                                     *         
*  LOCALS: REGISTER USAGE                                             *         
*          R0 - WORK                                                  *         
*          R1 - WORK                                                  *         
*          R2 -                                                       *         
*          R3 - WORK                                                  *         
*          R4 - WORK                                                  *         
*          R5 - WORK                                                  *         
*          R6 - WORK                                                  *         
*          R7 -                                                       *         
*          R8 -                                                       *         
*          R9 -                                                       *         
*          RA - SECOND BASE                                           *         
*          RB - FIRST BASE                                            *         
*          RC - WORKING STORAGE                                       *         
*          RD - SYSTEM                                                *         
*          RE - SYSTEM/WORK                                           *         
*          RF - SYSTEM/WORK                                           *         
*                                                                     *         
***********************************************************************         
         TITLE 'DDBLDICT<==>RMDDBLDICT DICTIONARY CONSTRUCTION'                 
***********************************************************************         
*===================== LAYOUT OF DATA DICTIONARY =====================*         
*                                                                               
* +     0: __ __ __ __ __ __ __ __   (8)   PHASENAME                            
* +     8: __ __ __ __               (4)   SIZE OF TABLE                        
* +    12: __ __                     (2)   # OF "LOW" ENTRIES                   
* +    14: __ __                     (2)   # OF "HIGH" ENTRIES                  
* +    16: __ __ __ __               (4)   (NOT USED)                           
* +    20: __ __                     (2)   DISPL. TO "HIGH" INDICES             
* +    22: __ __                     (2)   MAX "LOW" MSG#                       
* +    24: __ __ __                  (3)   START OF "LOW" INDICES               
*   .       .  .  .                   "      "   "    "      "                  
*   .       .  .  .                   "      "   "    "      "                  
*   .       .  .  .                   "      "   "    "      "                  
* + LL+24: FF FF                     (2)   END OF "LOW" INDICES MARKER          
* + LL+26: __ __                     (2)   MAX "HIGH" MSG#                      
* + LL+28: __ __ __                  (3)   START OF "HIGH" INDICES              
*   .       .  .  .                   "      "   "    "      "                  
*   .       .  .  .                   "      "   "    "      "                  
*   .       .  .  .                   "      "   "    "      "                  
* + HH+28: FF FF                     (2)   END OF "HIGH" INDICES MARKER         
* + HH+30: __ __ __ __                     START OF DICT REFERENCES             
*                                                                               
* NOTE: LL = NUMLOWQ*INDXWDTH                                                   
*       HH = NUMHIQ*INDXWDTH                                                    
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
         PRINT NOGEN                                                            
DDBLDICT CSECT                                                                  
         ENTRY DICTBLD                                                          
DICTBLD  NMOD1 WORKQ-WORKD,*BLDICT*,RA,CLEAR=YES                                
         USING WORKD,RC                                                         
*                                                                               
         L     R1,4(RD)            GETTING A(DMCB OF CALLER)                    
         L     R1,24(R1)                                                        
         L     R1,0(R1)            DMCB+0(4) = A(PARAMETER BLOCK)               
         ST    R1,SAVEAPRM         SAVE A(PARAMETER BLOCK)                      
         MVC   P1ATAB(BLDICTDQ),0(R1)  MOVE PARAMETERS INTO MY FIELDS           
*                                                                               
MAIN     BRAS  RE,VALPARM          VALIDATE PARAMETERS                          
         BNE   MAINX                EXIT NOW IF NOT GOOD                        
                                                                                
         BRAS  RE,BLDSTAMP         BUILD LEVEL AND DATE STAMP                   
         BRAS  RE,BLDTABLE         BUILD DICTIONARY TABLE                       
*                                                                               
MAINX    DS    0H                                                               
         BRAS  RE,PREXIT           DO PRE-EXIT STUFF                            
                                                                                
         CLI   ERRFLG,0            WERE THERE ANY ERRORS?                       
         BNE   CCNEQUAL             YEP                                         
         B     CCEQUAL             EXIT MODULE                                  
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*======================= EXIT FOR NMOD1 & NTR1 =======================*         
CCEQUAL  SR    RF,RF                                                            
CCNEQUAL LTR   RF,RF                                                            
EXIT     XIT1                                                                   
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*=========================== PRE-EXIT TASKS ==========================*         
         DS    0H                                                               
PREXIT   NTR1                                                                   
         L     RF,SAVEAPRM         RETURN A(PHASENM) @ PARM 1                   
         XC    0(BLDICTDQ,RF),0(RF)                                             
         USING BLDICTD,RF                                                       
*                                                                               
         LA    R1,PHASENM                                                       
         ST    R1,P1OAPSNM                                                      
*                                                                               
         L     R1,AOBJTAB                                                       
         SPACE 1                                                                
         LA    RE,PRXT10                                                        
         TM    SWITCH1,SW1HCRQ     HIGH CORE?                                   
         BZR   RE                                                               
         O     RE,=X'80000000'                                                  
         BSM   0,RE                SWITCH TO 31-BIT MODE                        
         SPACE 1                                                                
PRXT10   MVC   P2ODCTLN,8(R1)      RETURN L(DICTIONARY) @ PARM 2                
         SPACE 1                                                                
         LA    RE,PRXT20           RETURN FROM 31-BIT MODE                      
         TM    SWITCH1,SW1HCRQ                                                  
         BZR   RE                                                               
         N     RE,=X'00FFFFFF'                                                  
         BSM   0,RE                                                             
         SPACE 1                                                                
PRXT20   MVC   P3ORDCNT,READCNT    RETURN READCNT @ PARM 3                      
*                                   READCNT IS A HALFWORD                       
** 4TH PARAMETER--ERROR CODE & MSG **                                           
*                                                                               
         CLI   ERRFLG,0            WERE THERE ANY ERRORS?                       
         BE    PRXT40               NO, DON'T PASS BACK 4TH PARM                
         LA    R1,ERRORMSG                                                      
         ST    R1,P4OAERMS                                                      
         MVC   P4OERRCD,ERROUT                                                  
*                                                                               
PRXT40   DS    0H                                                               
                                                                                
         DROP  RF                                                               
*                                                                               
PRXTX    DS    0H                                                               
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================== VALIDATE PARAMS ==========================*         
VALPARM  NTR1                                                                   
         MVI   SWITCH1,0           CLEAR FLAG                                   
*                                                                               
*------------------------------- SYSTEM ------------------------------*         
*                                                                               
VPSYS    LA    R6,SYSLST           R6-->TABLE OF SYSTEM NAMES                   
         USING SYSLSTD,R6                                                       
         LH    R2,0(R6)            R2=L(SYSTEM TABLE ENTRY)                     
         LA    R3,EXSYSLX-1        R3=A(END OF TABLE), EXTENDED                 
         LA    R6,6(R6)            R6-->FIRST ENTRY                             
*                                                                               
         MVI   ERROR,ERINVSYS      ASSUME INVALID SYSTEM # ERROR                
VPSYS10  CLC   SYSLNUM,P5SYST      COMPARE SYSTEM #                             
         BE    VPSYS20                                                          
         BXLE  R6,R2,VPSYS10                                                    
         BRAS  RE,ERRHAND          RETRIEVE ERROR MESSAGE AND EXIT              
         B     VPNOKX                                                           
*                                                                               
VPSYS20  MVC   SVBSYS,SYSLNUM      SAVE NATIVE SYSTEM NUMBER                    
         MVC   SVESYS,SYSLNUM      SAVE NATIVE SYSTEM NUMBER (EBCDIC)           
         SPACE 1                                                                
         CLI   SVESYS,X'09'        IF 00<= SYS# <=09                            
         BH    VPSYS30                                                          
         OI    SVESYS,X'F0'         THEN PUT ZONE FOR NUMERICS                  
         B     VPLNG                                                            
*                                                                               
VPSYS30  ZIC   R1,SVESYS                                                        
         SH    R1,=H'9'                                                         
         STCM  R1,1,SVESYS                                                      
         OI    SVESYS,X'C0'         ELSE, CONVERT TO EBCDIC FOR A..F            
         DROP  R6                                                               
*                                                                               
*------------------------------ LANGUAGE -----------------------------*         
*                                                                               
VPLNG    LA    R6,LANGTAB          R6-->TABLE OF LANGUAGES                      
         USING LANGTABD,R6                                                      
         LH    R2,0(R6)            R2=L(LENGTH OF TABLE ENTRY)                  
         LA    R3,LANGTABX-1       R3=A(END OF TABLE)                           
         LA    R6,6(R6)            R6-->FIRST ENTRY                             
*                                                                               
         MVI   ERROR,ERINVLNG                                                   
VPLNG10  CLC   LANGCODE,P2LANG     COMPARE AGAINST LANGUAGE CODE                
         BE    VPLNG50                                                          
         BXLE  R6,R2,VPLNG10                                                    
         BRAS  RE,ERRHAND          RETRIEVE ERROR MESSAGE AND EXIT              
         B     VPNOKX                                                           
*                                                                               
VPLNG50  MVC   SVBLNG,LANGCODE     LANGUAGE CODE                                
         XI    SVBLNG,X'FF'         CTGEN03 INVERTS IT                          
         MVC   SVELNG,LANGCODE     LANGUAGE CODE                                
         OI    SVELNG,X'F0'         TO BE SAVED IN EBCDIC                       
         DROP  R6                                                               
*                                                                               
*------------------------------ A(TABLE) -----------------------------*         
*                                                                               
VPATB    OI    P1ATAB,0            BUILD IN  HIGH CORE?                         
         BZ    VPLTB                NOPE                                        
         OI    SWITCH1,SW1HCRQ      YES, WILL NEED TO SWITCH MODES              
*                                                                               
*------------------------------ L(TABLE) -----------------------------*         
*                                                                               
VPLTB    OC    P4LTAB,P4LTAB       L(TABLE) SPECIFIED?                          
         BZ    VPTST                                                            
         OI    SWITCH1,SW1OVRQ      YES, OBLIGATED TO CHCK OVERFLOWS            
*                                                                               
*---------------------------- TEST VERSION ---------------------------*         
*                                                                               
VPTST    MVC   SVTEST,P3TEST       ASSUME TEST VERSION GIVEN                    
         CLI   P3TEST,0                                                         
         BNE   VPOKX                ASSUMPTION IS GOOD                          
         MVI   SVTEST,C'A'          ELSE, FORCE 'A' VERSION                     
         SPACE 2                                                                
VPOKX    B     CCEQUAL                                                          
VPNOKX   B     CCNEQUAL                                                         
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================== BUILD PHASE NAME =========================*         
BLDPHSNM MVC   PHASENM,BLANKS                                                   
         MVC   PHASENM(4),=C'T00D'                                              
         MVC   PHASENM+4(1),SVESYS   SYSTEM                                     
         MVC   PHASENM+5(1),SVELNG   LANGUAGE                                   
         MVC   PHASENM+6(1),SVTEST   ALWAYS PRODUCE TEST VERSION                
         BR    RE                                                               
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*============================ BUILD STAMPS ===========================*         
BLDSTAMP NTR1                                                                   
*                                                                               
         GOTO1 P2ADTCN,DMCB,(X'05',DATE),(10,DATE),0                            
*                                                                               
         XC    STAMPS,STAMPS                                                    
         MVC   STAMPS(15),=C'LEVEL=001 DATE='                                   
         MVC   STAMPS+15(L'DATE),DATE                                           
*                                                                               
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================= BUILD DICTIONARY TABLE ======================*         
BLDTABLE NTR1                                                                   
*                                                                               
         BRAS  RE,BLDPHSNM         BUILD PHASE NAME                             
         BRAS  RE,INITOBJ          INITIALIZE OBJECT TABLE                      
         BNE   BTNOKX               EXIT NOW IF NOT GOOD                        
*                                                                               
** BUILD KEY AND READ MESSAGE RECORD                                            
*                                                                               
         XC    KEY,KEY                                                          
         LA    R4,KEY                                                           
         USING GMSGD,R4                                                         
         MVI   GMKREC,GMKRECQ      RECORD TYPE                                  
         MVC   GMKSYS,SVBSYS       SYSTEM NUMBER                                
         MVI   GMKTYP,GMKTGDIC     DICTIONARY MESSAGES                          
         MVI   GMKMSG+1,1          MSG# 0 IS USED FOR ANOTHER PURPOSE           
         MVC   SVKEY,KEY                                                        
         SPACE 1                                                                
         GOTO1 P3ADMGR,DMCB,=C'DMRDHI',=C'GENDIR',SVKEY,KEY                     
         B     BT20                                                             
BT10     GOTO1 P3ADMGR,DMCB,=C'DMRSEQ',=C'GENDIR',SVKEY,KEY                     
BT20     MVI   ERROR,ERDATMGR      ASSUME ERROR FROM DATAMGR                    
         CLI   DMCB+8,0                                                         
         BE    BT30                                                             
         BRAS  RE,ERRHAND          STOP IF RETURNED W/. ERROR                   
         B     BTNOKX                                                           
*                                                                               
BT30     DS    0H                                                               
         CLC   SVKEY(GMKMSG-GMKEY),KEY                                          
         BNE   XBLDTAB                                                          
         MVC   SVKEY,KEY                                                        
         CLC   GMKLANG,SVBLNG      IF IT IS NOT THE CORRECT LANG                
         BNE   BT10                 THEN READ NEXT RECORD                       
*                                                                               
         GOTO1 P3ADMGR,DMCB,=C'GETREC',=C'GENFIL',GMDDA,MSGREC,DMWORK           
         CLI   DMCB+8,0                                                         
         BE    BT40                                                             
         BRAS  RE,ERRHAND                                                       
         B     BTNOKX                                                           
*                                                                               
BT40     DS    0H                                                               
         LA    R4,MSGREC                                                        
         SPACE 1                                                                
         LH    R1,READCNT          INCREMENT # OF RECORDS READ                  
         LA    R1,1(R1)             THAT WERE "GOOD"                            
         STH   R1,READCNT                                                       
         SPACE 1                                                                
         MVC   MSGNUM,GMKMSG       HOLD MESSAGE NUMBER                          
         ZIC   R1,GMSGELL          R1=L(MESSAGE ELEMENT)                        
         LA    R0,GMSGFXDL+1       R0=L(ELEMENT OVERHEAD)+1                     
         SR    R1,R0                                                            
         EXMVC R1,MESSAGE,GMSGTXT  GET THE MESSAGE!                             
         LA    R1,1(R1)            R1=L(MESSAGE)                                
         STC   R1,LMESSAGE                                                      
         DROP  R4                                                               
*                                                                               
         BRAS  RE,PUTOBJ           PUT IN OBJECT TABLE                          
         BNE   BTNOKX               EXIT NOW IF NOT GOOD                        
         LA    R4,KEY              RESTORE POINTER TO KEY                       
         B     BT10                GO BACK AND DO NEXT RECORD                   
*                                                                               
XBLDTAB  BRAS  RE,FINSOBJ          DO TABLE'S END PROCESSING                    
         BNE   BTNOKX                                                           
         SPACE 2                                                                
BTOKX    B     CCEQUAL                                                          
BTNOKX   B     CCNEQUAL                                                         
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*====================== INITIALIZE OBJECT TABLE ======================*         
INITOBJ  NTR1                                                                   
*                                                                               
         LA    RE,IOB05                                                         
         TM    SWITCH1,SW1HCRQ     HIGH CORE?                                   
         BZR   RE                                                               
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
*-------------------------- CLEAR OBJECT TABLE -----------------------*         
IOB05    TM    SWITCH1,SW1OVRQ     WAS L(TABLE GIVEN)?                          
         BZ    IOB10                NO, DON'T NEED TO CLEAR IT                  
         L     RE,P1ATAB           RE-->OBJECT TABLE                            
         L     RF,P4LTAB           RF=SIZE OF TABLE                             
         XCEF  (RE),(RF)                                                        
*                                                                               
*---------------------- INITIALIZE TABLE POINTERS --------------------*         
IOB10    L     RF,P1ATAB                                                        
         ST    RF,AOBJTAB                A(START OF OBJECT TABLE)               
         MVC   0(L'PHASENM,RF),PHASENM   STORE PHASENAME                        
         AH    RF,=H'20'                                                        
         ST    RF,AOBJTABL         A(START OF INDEX ENTRY)                      
*                                                                               
         TM    SWITCH1,SW1OVRQ     WAS SIZE OF TABLE GIVEN?                     
         BZ    IOB20                                                            
         L     RE,P4LTAB            IF YES, THEN COMPUTE THE                    
         A     RE,AOBJTAB                                                       
         ST    RE,AOBJEND           A(END OF OBJECT TABLE)                      
*                                                                               
IOB20    DS    0H                                                               
         AH    RF,=H'4'                                                         
         ST    RF,ALWXTAB          A(START OF LOW-INDICES)                      
         ST    RF,ALWXNXT          A(NEXT POS TO PUT LOW INDEX)                 
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    IOB30                NOPE                                        
         BRAS  RE,CHKOFLOW                                                      
         BNE   XIOBN                                                            
*                                                                               
IOB30    L     RE,=A(NUMLOWQ)      RE=MAX # OF LOW MSG#'S ALLOWED               
         MH    RE,INDXWDTH         EACH INDEX ENTRY IS 3-BYTES LONG             
         AR    RF,RE                                                            
         MVC   0(2,RF),END2        MARK END OF OBJTAB LOW-INDEX LIST            
         ST    RF,ALWXEND           AND SAVE ITS ADDRESS                        
         AH    RF,=H'2'            BUMP PASS  END2  MARKER                      
         ST    RF,AHINDEX          A(TO PUT MAX OF HI MSG#'S)                   
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    IOB40                NOPE                                        
         BRAS  RE,CHKOFLOW                                                      
         BNE   XIOBN                                                            
*                                                                               
IOB40    DS    0H                                                               
         AH    RF,=H'2'                                                         
         ST    RF,AHIXTAB          A(START OF HIGH-INDICES)                     
         ST    RF,AHIXNXT          A(NEXT POS TO PUT HIGH INDEX)                
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    IOB50                NOPE                                        
         BRAS  RE,CHKOFLOW                                                      
         BNE   XIOBN                                                            
*                                                                               
IOB50    L     RE,=A(NUMHIQ)       RE=MAX # OF HIGH ENTRIES ALLOWED             
         MH    RE,INDXWDTH                                                      
         AR    RF,RE                                                            
         MVC   0(2,RF),END2        MARK END OF OBJTAB HIGH-INDEX LIST           
         ST    RF,AHIXEND           AND SAVE ITS ADDRESS                        
         AH    RF,=H'2'            BUMP PASS  END2  MARKER                      
         ST    RF,ATXTTAB          A(START OF TEXT POOL)                        
         ST    RF,ATXTNXT          A(NEXT POS IN TEXT POOL)                     
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    XIOB                 NOPE                                        
         BRAS  RE,CHKOFLOW                                                      
         BNE   XIOBN                                                            
*                                                                               
XIOB     L     RE,AHINDEX          RE=A(TO PUT MAX OF HIGH MSG#S)               
         L     RF,AOBJTABL                                                      
         S     RE,AOBJTAB          RE=DISP OF HIGH-INDEX SECTION                
         STCM  RE,3,0(RF)          STORE DISP OF HIGH-INDEX SECTION             
         SPACE 2                                                                
XIOBY    LA    RE,IOBOKX                                                        
         B     *+8                                                              
XIOBN    LA    RE,IOBNOKX                                                       
         TM    SWITCH1,SW1HCRQ     WERE WE IN HIGH CORE?                        
         BZR   RE                                                               
         N     RE,=X'00FFFFFF'                                                  
         BSM   0,RE                                                             
*                                                                               
IOBOKX   B     CCEQUAL                                                          
IOBNOKX  B     CCNEQUAL                                                         
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================= PUT INTO OBJECT TABLE =======================*         
PUTOBJ   NTR1                                                                   
*                                                                               
         LA    RE,PUT05                                                         
         TM    SWITCH1,SW1HCRQ                                                  
         BZR   RE                                                               
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
*                                                                               
** PUT DISPLACEMENT INTO RESPECTIVE INDEX PORTION                               
*                                                                               
PUT05    L     R0,=A(BNDRYQ)      R0=BOUNDARY SEPARATING HI/LOW MSG#'S          
         ZICM  R1,MSGNUM,(3)                                                    
         CR    R1,R0                                                            
         BL    PUT10                                                            
         BH    PUT08                                                            
         BRAS  RE,ERRHAND                                                       
         B     PUT50N                                                           
*                                                                               
PUT08    DS    0H                                                               
         TM    ERRFLG,X'08'        ENCOUNTERED "HIGH" MSG# ERR BEFORE?          
         BO    PUT50Y               YEP, EXIT PUT ROUTINE                       
                                                                                
         LA    R4,HIMSGNUM                                                      
         LA    R5,HICOUNT                                                       
         SR    R1,R0                                                            
         L     RE,AHIXTAB          RE-->START OF HIGH INDICES                   
         L     RF,AHIXEND          RF-->END OF HIGH INDICES                     
         MVI   ERROR,ERMANYHI                                                   
         B     PUT20                                                            
*                                                                               
PUT10    DS    0H                                                               
         TM    ERRFLG,X'04'        ENCOUNTERED "LOW" MSG# ERR BEFORE?           
         BO    PUT50Y               YEP, EXIT PUT ROUTINE                       
                                                                                
         LA    R4,LWMSGNUM                                                      
         LA    R5,LWCOUNT                                                       
         L     RE,ALWXTAB          RE-->START OF LOW INDICES                    
         L     RF,ALWXEND          RF-->END OF LOW INDICES                      
         MVI   ERROR,ERMANYLO                                                   
*                                                                               
PUT20    BCTR  R1,0                                                             
         MH    R1,INDXWDTH         R1=DISP. INTO INDEX SECTION                  
         AR    RE,R1               RE-->LOCATION TO PUT DISP (OF TEXT)          
         CR    RE,RF               CAN'T GO PASS END-MARKERS                    
         BL    PUT25                                                            
         BRAS  RE,ERRHAND                                                       
         B     PUT50Y                                                           
*                                                                               
PUT25    DS    0H                                                               
         MVC   0(L'MSGNUM,R4),MSGNUM  R4-->UPDATE RESPECTIVE MAX MSG #          
         LH    R1,0(R5)            R5-->RESPECTIVE COUNTER                      
         LA    R1,1(R1)            INCREMENT IT                                 
         STH   R1,0(R5)                                                         
                                                                                
         L     R3,ATXTNXT                                                       
         L     R2,AOBJTAB                                                       
         SR    R3,R2               R3=DISP OF TEXT INTO DICTIONARY              
         LA    R1,DSMSKVAL         MASK VALUE FOR WIDTH OF INDEX ENTRY          
         EX    R1,*+8                                                           
         B     *+8                                                              
         STCM  R3,0,0(RE)          STICK DISPL INTO THE INDEX                   
*                                                                               
** MOVE TEXT INTO LITERAL POOL                                                  
*                                                                               
PUT30    AR    R3,R2               R3=ATXTNXT                                   
         ZIC   R1,LMESSAGE                                                      
         LR    R0,R1               HOLD ONTO L(MESSAGE)                         
         BCTR  R1,0                                                             
         EXMVC R1,0(R3),MESSAGE                                                 
         AR    R3,R0               R3=NEW ATXTNXT                               
         ST    R3,ATXTNXT                                                       
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    PUT50Y               NOPE                                        
         LR    RF,R3                                                            
         BRAS  RE,CHKOFLOW                                                      
         BNE   PUT50N                                                           
*                                                                               
PUT50Y   LA    RE,XPUTOK                                                        
         B     *+8                                                              
PUT50N   LA    RE,XPUTNOK                                                       
         TM    SWITCH1,SW1HCRQ                                                  
         BZR   RE                                                               
         N     RE,=X'00FFFFFF'                                                  
         BSM   0,RE                                                             
*                                                                               
XPUTOK   B     CCEQUAL                                                          
XPUTNOK  B     CCNEQUAL                                                         
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================== FINISH OBJECT TABLE ========================*         
FINSOBJ  NTR1                                                                   
*                                                                               
         LA    RE,FO10                                                          
         TM    SWITCH1,SW1HCRQ                                                  
         BZR   RE                                                               
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
*                                                                               
FO10     L     R4,AOBJTAB                                                       
         AH    R4,=H'12'                PUT COUNTS @ +12 AND +14                
         MVC   0(L'LWCOUNT,R4),LWCOUNT                                          
         MVC   L'LWCOUNT(L'HICOUNT,R4),HICOUNT                                  
         SPACE 1                                                                
         LH    R1,LWMSGNUM         PUT HIGHEST MSG#S ENCOUNTERED                
         L     R4,AOBJTABL                                                      
         STCM  R1,3,2(R4)                                                       
         LH    R1,HIMSGNUM                                                      
         L     R4,AHINDEX                                                       
         STCM  R1,3,0(R4)                                                       
*                                                                               
* COMPUTE LENGTH OF OBJECT TABLE, INCLUDING HALF-K BUFFER END REGION            
*                                                                               
         L     RF,ATXTNXT                                                       
         MVC   0(2,RF),END2        MARK END OF OBJECT TABLE LITERALS            
         LA    RF,2(RF)                                                         
         ST    RF,ATXTNXT                                                       
         L     R4,AOBJTAB                                                       
*                                                                               
*   HALF-K = (((((PANACEA+*-BASE)/512)+1)*512)-PANACEA)-(*-BASE))               
*                                                                               
         SR    RF,R4               RF = *, R4 = BASE                            
         ST    RF,RELLC            RELLC = *-BASE                               
         LA    R1,PANACEA                                                       
         AR    RF,R1                                                            
*                                                                               
         SRL   RF,9                RF = RF/512                                  
         LA    RF,1(RF)                                                         
         SLL   RF,9                RF = RF*512                                  
         SR    RF,R1                                                            
         S     RF,RELLC            RF = HALF-K                                  
         A     RF,ATXTNXT                                                       
         ST    RF,ABASEX           BASEX = RF                                   
*                                                                               
         TM    SWITCH1,SW1OVRQ     NEED TO CHECK FOR OVERFLOW?                  
         BZ    FO30                 NO                                          
         BRAS  RE,CHKOFLOW                                                      
         BNE   FONX                                                             
*                                                                               
FO30     DS    0H                                                               
         LA    RF,1(RF)                                                         
         MVC   0(L'STAMPS,RF),STAMPS                                            
         LA    RF,L'STAMPS(RF)                                                  
         MVI   0(RF),END1          MARK END OF OBJ. TABLE                       
         ST    RF,ADCTEND          RF-->END OF DICTIONARY                       
*                                                                               
         SR    RF,R4                                                            
         ST    RF,8(R4)            RF = L(TABLE)                                
*                                                                               
FOYX     DS    0H                                                               
         LA    RE,FOOKX                                                         
         B     *+8                                                              
FONX     LA    RE,FONOKX                                                        
                                                                                
         TM    SWITCH1,SW1HCRQ                                                  
         BZR   RE                                                               
         N     RE,=X'00FFFFFF'                                                  
         BSM   0,RE                                                             
*                                                                               
FOOKX    B     CCEQUAL                                                          
FONOKX   B     CCNEQUAL                                                         
XFINSOBJ B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=========================== CHECK OVERFLOW ==========================*         
         DS    0H                                                               
CHKOFLOW NTR1                                                                   
         MVI   ERROR,ERPTREOT                                                   
         CLM   RF,15,AOBJEND       RF CONTAINS POINTER IN CONCERN               
         BNH   COFX                 GOOD IF NOT HIGHER                          
         BRAS  RE,ERRHAND                                                       
         B     CCNEQUAL                                                         
*                                                                               
COFX     DS    0H                                                               
         B     CCEQUAL                                                          
***********************************************************************         
         SPACE 4                                                                
***********************************************************************         
*=========================== ERROR HANDLING ==========================*         
         DS    0H                                                               
ERRHAND  NTR1                                                                   
         CLI   ERROR,0                                                          
         BNE   *+6                                                              
         DC    H'0'                ERROR CODE OF ZERO IS UNDEFINED              
                                                                                
         LA    RE,ERRTAB                                                        
         ZIC   RF,ERROR                                                         
         BCTR  RF,0                COMPENSATE OFF-BY-ONE ERROR                  
         MH    RF,=Y(BDCTERTQ)                                                  
         AR    RE,RF                                                            
                                                                                
         USING BDCTERTB,RE                                                      
         MVC   ERRORMSG,BDCTEMSG                                                
         OC    ERROUT,BDCTETYP                                                  
         OC    ERRFLG,BDCTEFLG                                                  
         DROP  RE                                                               
*                                                                               
ERRHANDX XIT1                                                                   
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================= DEFINED CONSTANTS =========================*         
         SPACE 1                                                                
*------------------------------ INPUT DCB ----------------------------*         
DDTAPEIN DCB   DDNAME=DDTAPEIN,DSORG=PS,RECFM=VB,MACRF=(GM),           +        
               LRECL=4004,BUFNO=2,BLKSIZE=32760,EODAD=XBLDTAB                   
*--------------------------- MISCELLANEOUS ---------------------------*         
BLANKS   DC    CL80' '                                                          
INDXWDTH DC    H'3'                                                             
END2     DC    XL2'FFFF'                                                        
         SPACE 1                                                                
DSMSKVAL EQU   7                   MASK VALUE FOR STORING INDICES               
END1     EQU   X'FE'               END OF TABLE MARKER                          
DD#GEN   EQU   X'40'               2ND HIGH-ORDER BIT OF MSG#                   
PANACEA  EQU   24                  DDGEN HAS THIS TERM                          
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================= ERROR MSGS TABLE ==========================*         
                                                                                
ERRTAB   DS    0H                                                               
*                                                                               
ERMSG01  DC    AL1(BDCTEHRD),XL1'80'                                            
         DC    CL40'INVALID SYSTEM NUMBER'                                      
ERINVSYS EQU   (*-ERRTAB)/BDCTERTQ                                              
*                                                                               
ERMSG02  DC    AL1(BDCTEHRD),XL1'40'                                            
         DC    CL40'INVALID LANGUAGE NAME'                                      
ERINVLNG EQU   (*-ERRTAB)/BDCTERTQ                                              
*                                                                               
ERMSG03  DC    AL1(BDCTEHRD),XL1'20'                                            
         DC    CL40'DATAMGR ERROR'                                              
ERDATMGR EQU   (*-ERRTAB)/BDCTERTQ                                              
*                                                                               
ERMSG04  DC    AL1(BDCTEHRD),XL1'10'                                            
         DC    CL40'POINTER PAST EOTABLE'                                       
ERPTREOT EQU   (*-ERRTAB)/BDCTERTQ                                              
*                                                                               
ERMSG05  DC    AL1(BDCTESFT),XL1'08'                                            
         DC    CL40'TOO MANY "HIGH" INDICES'                                    
ERMANYHI EQU   (*-ERRTAB)/BDCTERTQ                                              
*                                                                               
ERMSG06  DC    AL1(BDCTESFT),XL1'04'                                            
         DC    CL40'TOO MANY "LOW" INDICES'                                     
ERMANYLO EQU   (*-ERRTAB)/BDCTERTQ                                              
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*============================ LITERAL POOL ===========================*         
         LTORG                                                                  
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*================ FACPAK'S SYSTEMS -- DSECT AND TABLE ================*         
*                                                                               
*------------------------------- DSECT -------------------------------*         
       ++INCLUDE FASYSLSTD                                                      
*                                                                               
*------------------------------- TABLE -------------------------------*         
DDBLDICT CSECT                                                                  
       ++INCLUDE FASYSLST                                                       
* EXTENDED FACPAK SYSTEM TABLE ENTRIES                                          
         ORG   SYSLSTX                                                          
         DC    X'0F0F',C'GENERALGEN',C'  ',X'0000'                              
EXSYSLX  DC    X'00'                                                            
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=============== FACPAK'S LANGUAGES -- DSECT AND TABLE ===============*         
*                                                                               
*------------------------------- DSECT -------------------------------*         
       ++INCLUDE FALANG                                                         
*                                                                               
*------------------------------- TABLE -------------------------------*         
DDBLDICT CSECT                                                                  
       ++INCLUDE FALANGTAB                                                      
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================== WORKING STORAGE ==========================*         
WORKD    DSECT                                                                  
*----------------------- DDBLDICT'S PARAMETERS -----------------------*         
P1ATAB   DS    A                   A(TABLE TO HOLD DICTIONARY)                  
P2LANG   DS    XL1                 LANGUAGE CODE                                
         ORG   P2LANG                                                           
P2ADTCN  DS    A                   A(DATCON)                                    
P3TEST   DS    CL1                 TEST VERSION A, B, OR C                      
         ORG   P3TEST                                                           
P3ADMGR  DS    A                   A(DATAMGR)                                   
P4LTAB   DS    F                   LENGTH OF TABLE                              
P5SYST   DS    XL1                 SYSTEM NUMBER                                
         DS    XL7                 SPARE, N/D                                   
*----------------------------- ADDRESSES -----------------------------*         
ABASEX   DS    A                                                                
AOBJTAB  DS    A                   A(OBJECT TABLE)                              
AOBJTABL DS    A                   A(START OF INDEX ENTRY)                      
ALWXTAB  DS    A                   A(START OF LOW-INDEX TABLE)                  
ALWXNXT  DS    A                   A(NEXT POS IN LOW-INDEX TABLE)               
ALWXEND  DS    A                   A(END OF LOW-INDEX TABLE)                    
AHINDEX  DS    A                   A(TO PUT COUNT OF HI MSG#'S)                 
AHIXTAB  DS    A                   A(START OF HIGH-INDEX TABLE)                 
AHIXNXT  DS    A                   A(NEXT POS IN HIGH-INDEX TABLE)              
AHIXEND  DS    A                   A(END OF HIGH-INDEX TABLE)                   
ATXTTAB  DS    A                   A(START OF TEXT POOL)                        
ATXTNXT  DS    A                   A(NEXT POS IN TEXT POOL)                     
AOBJEND  DS    A                   A(END OF OBJECT TABLE)                       
ADCTEND  DS    A                   A(END OF DICTIONARY)                         
*                                                                               
ADESTIN  DS    A                   A(MVC DESTINATION)                           
ASOURCE  DS    A                   A(MVC SOURCE)                                
*------------------------------- FLAGS -------------------------------*         
SWITCH1  DS    XL1                 CONTROL FLAGS                                
SW1HCRQ  EQU   X'80'               BUILD DICTIONARY IN HIGH CORE                
SW1OVRQ  EQU   X'40'               CHECK FOR TABLE OVERFLOW                     
*--------------------------- SAVE STORAGE ----------------------------*         
SAVEAPRM DS    A                   SAVE A(PARAMETERS PASSED IN)                 
SVBSYS   DS    XL1                 SYSTEM EQUATED NUMBER FROM FASYSLST          
SVESYS   DS    CL1                 EBCDIC SYSTEM CODE                           
SVBLNG   DS    XL1                 LANGUAGE CODE FROM FALANGTAB                 
SVELNG   DS    CL1                 EBCDIC LANGUAGE CODE                         
SVLANG   DS    CL3                 EBCDIC ABBREV OF LANGUAGE NAME               
SVTEST   DS    CL1                 TEST VERSION A, B, OR C                      
*------------------------------ COUNTERS -----------------------------*         
HICOUNT  DS    H                                                                
LWCOUNT  DS    H                                                                
READCNT  DS    H                                                                
*--------------------------- MISCELLANEOUS ---------------------------*         
DMCB     DS    6F                                                               
DMWORK   DS    12D                                                              
DATE     DS    CL8                                                              
ERROR    DS    XL1                 ERROR CODE                                   
ERROUT   DS    XL1                 ERROR CODE OUTPUTTED TO CALLER               
ERRFLG   DS    XL1                 KEEP LIST OF ERRORS DURING EXCUTION          
LMESSAGE DS    XL1                 LENGTH OF MSG TEXT FROM RECORD               
MSGNUM   DS    H                                                                
LWMSGNUM DS    H                   MAXIMUM LOW MSG# ENCOUNTERED                 
HIMSGNUM DS    H                   MAXIMUM HIGH MSG# ENCOUNTERED                
PHASENM  DS    CL8                 NAME OF DICTIONARY MODULE                    
RELLC    DS    A                   RELOCATION FACTOR                            
STAMPS   DS    CL23                LEVEL NUMBER AND DATE                        
MVCLEN   DS    XL1                 LEN FOR MVC INSTRUCTION                      
*------------------------------ BUFFERS ------------------------------*         
ERRORMSG DS    CL40                CONTAIN ERROR MESSAGE                        
KEY      DS    CL48                                                             
SVKEY    DS    CL(L'KEY)                                                        
MESSAGE  DS    CL256                                                            
MSGREC   DS    CL4004                                                           
*                                                                               
WORKQ    EQU   *                                                                
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*====================== MESSAGE RECORDS DSECT ========================*         
       ++INCLUDE GEGENMSG                                                       
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*====================== PARAMETER BLOCK DSECT ========================*         
       ++INCLUDE DDBLDICTD                                                      
***********************************************************************         
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'004DDBLDICT  05/01/02'                                      
         END                                                                    
