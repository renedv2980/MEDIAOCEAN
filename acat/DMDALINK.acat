*          DATA SET DMDALINK   AT LEVEL 008 AS OF 02/22/18                      
*CATALP DMDALINK                                                                
         TITLE 'DMDALINK - GETREC/PUTREC/ADDREC - DIRECT ACCESS FILES'          
                                                                                
***********************************************************************         
* R1 POINTS TO PARAM LIST                                             *         
* R2 POINTS TO DMCB                                                   *         
* DBCB1(1)=X'22' PASS BACK ACTIVITY DATA IN LINKAGE FIELD             *         
* DBCB1(1)=X'24' MAINTENANCE UPDATE - FLAG RECOVERY RECORD            *         
* DBCB1(1)=X'28' DO NOT CHANGE ACTIVITY DATA ON CHANGE                *         
***********************************************************************         
         PRINT NOGEN                                                            
DMDALINK CSECT                                                                  
         NMOD1 WRKX-WRKD,DMDALINK                                               
         USING WRKD,RC                                                          
         SAM24                                                                  
         LA    RE,RECIO            SET A(COPY RECORD I/O AREA)                  
         ST    RE,ARECIO                                                        
         ST    R1,APARMS                                                        
                                                                                
SETMODE  TM    MODE,MODEON         DO ONLY ONCE IF ONLINE                       
         BO    SETMX                                                            
         MVI   MODE,0              DO EACH CALL IF OFFLINE                      
         USING SSOOFF,RF                                                        
         ICM   RF,15,=V(SSB)                                                    
         BNZ   *+12                                                             
         OI    MODE,MODEOFF        SET OFFLINE IF NO SSB                        
         B     SETMX                                                            
         OC    SSOCNTL,SSOCNTL                                                  
         BZ    *+12                                                             
         OI    MODE,MODEON         SET ONLINE                                   
         B     SETMX                                                            
         OI    MODE,MODEOFF                                                     
         CLI   SSOXTND,X'FF'       TEST IF OFFLINE EXTENDED SSB                 
         BNE   SETMX                                                            
         TM    SSOSTAT2,SSOSRWRK                                                
         BZ    *+8                                                              
         OI    MODE,MODERWRK       SET RECOVERY TO FACWRK                       
SETMX    EQU   *                                                                
         DROP  RF                                                               
         EJECT                                                                  
GPA      L     RE,4(R2)            RE=A(FILE NAME)                              
         ICM   RF,15,LASTFIL       RF=A(FILE TABLE ENTRY)                       
         BZ    GPA0                                                             
         CLC   0(3,RF),0(RE)       TEST IF SAME FILE NAME AS LAST TIME          
         BNE   GPA0                                                             
         MVC   FILNAM(L'FILTAB),0(RF)                                           
         B     GPA2                                                             
*                                                                               
GPA0     LA    RF,FILTAB           SEARCH FILE NAME TABLE                       
         LA    R0,FILTABN                                                       
         CLC   0(3,RF),0(RE)                                                    
         BE    GPA1                                                             
         LA    RF,L'FILTAB(RF)                                                  
         BCT   R0,*-14                                                          
         DC    H'0'                DIE=INV FILE NAME                            
*                                                                               
GPA1     MVC   FILNAM(L'FILTAB),0(RF)                                           
         TM    MODE,MODEON         SAVE FILE DATA IF OFFLINE                    
         BNZ   GPA2                                                             
         ST    RF,LASTFIL          SAVE A(THIS FILE ENTRY)                      
         XC    LASTDTF(12),LASTDTF RESET SAVED DATA                             
*                                                                               
GPA2     L     R5,12(R2)           R5=A(RECORD)                                 
         LR    RE,R5                                                            
         AH    RE,FILDLEN                                                       
         MVC   FILLEN,0(RE)                                                     
         MVC   RECLEN,0(RE)        LOGICAL RECORD LENGTH                        
*                                                                               
GPA3     XC    P1(24),P1           BUILD PARAM LIST FOR I/O                     
         ST    R5,P2               SET I/O AREA ADDR                            
         MVC   P4(1),12(R1)        SET FILE NUMBER FOR DMOD000                  
         MVC   P5(4),8(R2)         SET DISK ADDRESS                             
         CLI   LASTSE,0                                                         
         BE    GPA3A               MUST FIND DTF IF NO SAVED SE NUM             
         ICM   RE,15,=V(UTL)                                                    
         BZ    GPA3A                                                            
         CLC   LASTSE,4(RE)        TEST SAME SE NUMBER AS SAVED                 
         BNE   GPA3A                                                            
         L     RE,4(R2)                                                         
         CLC   0(6,RE),LASTNAME    TEST SAME FILE NAME AS SAVED                 
         BNE   GPA3A                                                            
         MVC   P4(4),LASTDTF       YES THEN HAVE THE FILE NUM/A(DTF)            
         B     GPA3B                                                            
*                                                                               
GPA3A    MVC   P1(4),=V(DMEXT)     SET DTF ADDR                                 
         LA    R1,P1                                                            
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         TM    MODE,MODEON         SAVE FILE INFO IF OFFLINE                    
         BNZ   GPA3B                                                            
         ICM   RE,15,=V(UTL)                                                    
         BZ    GPA3B                                                            
         MVC   LASTSE,4(RE)        SAVE SE NUMBER                               
         L     RE,4(R2)                                                         
         MVC   LASTNAME,0(RE)      SAVE FILE NAME                               
         MVC   LASTDTF,P4          SAVE FILE NUMBER & DTF ADDRESS               
*                                                                               
GPA3B    MVC   FILNUM(4),P4        SAVE FILE NUMBER AND A(DTF)                  
         SR    R8,R8                                                            
         ICM   R8,7,FILNUM+1                                                    
         USING DTFPHD,R8                                                        
*                                  TEMP CODE TO SET ACTIVITY FOR FILE           
*PA3C    CLC   DTFDD,=C'XXXFIL1 '                                               
*        BE    GPA3C1                                                           
*        B     GPA4                                                             
*PA3C1   OI    FILFLAG,X'02'                                                    
*                                                                               
GPA4     L     RE,0(R2)            POINT TO COMMAND                             
         CLC   0(3,RE),=C'GET'                                                  
         BE    GETREC                                                           
         CLC   0(3,RE),=C'PUT'                                                  
         BE    PUTREC                                                           
         CLC   0(3,RE),=C'ADD'                                                  
         BE    ADDREC                                                           
         CLC   0(3,RE),=C'ADF'                                                  
         BE    ADDREC                                                           
         CLC   0(3,RE),=C'DMA'                                                  
         BE    ADDREC                                                           
         CLC   0(3,RE),=C'DMW'                                                  
         BE    PUTREC                                                           
         B     GETREC                                                           
                                                                                
EXIT     XMOD1 1                                                                
         EJECT                                                                  
***********************************************************************         
* GETREC AND BUILD WRITE ATTRIBUTE BLOCK AT DMCB5. WRITAB MIN LEN=32  *         
* FIRST 4 BYTES USED TO HOLD A(FULL TRACK BUFFER). LAYOUT FROM +04    *         
* +00(4) DISK ADDRESS OF 1ST RECORD                                   *         
* +04(4) ACTIVITY DATA OF 1ST RECORD                                  *         
* +10(2) PHYSICAL LENGTH OF 1ST RECORD                                *         
* +12(4) DISK ADDRESS OF 2ND RECORD OR ZERO IF NO EXTENSION           *         
* +16(4) ACTIVITY DATA OF 2ND RECORD                                  *         
* +22(2) PHYSICAL LENGTH OF 2ND RECORD                                *         
* +24(4) ZERO. PUTREC USES THIS FOR DISK ADDR OF 3RD RECORD           *         
***********************************************************************         
GETREC   LM    R5,R6,12(R2)        R5=A(RECORD) R6=A(WRITAB)                    
         TM    MODE,MODEON         ON-LINE                                      
         BZ    GET0                                                             
*&&UK*&& B     GET0                                                             
         ICM   RF,15,=V(SSB)                                                    
         USING SSBD,RF                                                          
         CLI   SSBMTIND,0          MULT-TASKING?                                
         BE    GET0                NO, MAY BE FASTART OR SOMETHING              
         TM    SSBSYSFL,SSBSYTST   TEST SYSTEM?                                 
         BO    *+8                 ALLWAYS ON FOR TEST SYSTEMS                  
         TM    SSBPROT,SSBPTSKQ    TASK PROTECTION FOR IOS                      
         BZ    GET0                NO, NOT ON                                   
*                                                                               
         ICM   R1,15,SSBTKADR      TEST IF IN A TASK                            
         BZ    GET0                                                             
         USING TCBD,R1                                                          
         CLM   R5,7,TCBWRKA+1      START OF TASK'S AREA                         
         JL    *+2                 DIE=LOW CORE ADR                             
         CLM   R5,7,TCBPGMX+1      END OF TASK'S AREA                           
         JH    *+2                 DIE=HIGH CORE ADR                            
         DROP  R1,RF                                                            
*                                                                               
GET0     MVC   P1,=V(READ)                                                      
         TM    0(R2),X'10'         TEST FULL TRACK READ                         
         BZ    *+16                                                             
         MVC   P1,=V(READTRB)                                                   
         MVC   P6,0(R6)            SET A(TRK BUFF)                              
         TM    0(R2),X'24'         TEST READ FLUSH                              
         BNO   *+10                                                             
         MVC   P1,=V(READFLS)                                                   
         LA    R1,P1                                                            
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST ERRORS                                  
         BNZ   ERR1                                                             
         LA    R6,4(R6)            R6=A(FIRST WRITAB ENTRY)                     
*                                                                               
         TM    FILFLAG,X'01'       IGNORE HEADER RECORD                         
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    EXIT                                                             
*                                                                               
         XC    0(28,R6),0(R6)      CLEAR WRITAB                                 
         L     RE,P5                                                            
         MVC   00(4,R6),0(RE)      SAVE DISK ADDRESS                            
         MVC   10(2,R6),P3+2       SAVE PHYSICAL LENGTH                         
         LR    RE,R5                                                            
         AH    RE,FILDLEN                                                       
         MVC   RECLEN,0(RE)        SAVE LOGICAL RECORD LENGTH                   
*                                                                               
GET1     LH    R3,FILDLNK          POINT TO LINKAGE FIELD                       
         AR    R3,R5                                                            
         TM    FILFLAG,X'02'       TEST FILE ACTIVITY SUPPORT                   
         BZ    GET1A                                                            
         TM    3(R3),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    GET1A                                                            
         LH    RE,P3+2             TEST PHYSICAL LENGTH BIG ENOUGH              
         SH    RE,RECLEN                                                        
         CHI   RE,ACTILEN                                                       
         BL    GET1A                                                            
         LH    RE,RECLEN           GET LOGICAL RECORD LENGTH                    
         AR    RE,R5                                                            
         OC    0(2,RE),0(RE)       TEST IF LOOKS LIKE ACTIVITY DATA             
         BNZ   GET1A               YES                                          
         MVC   4(4,R6),2(RE)       SAVE ACTIVITY DATA IN WRTRAB                 
         OC    0(3,R3),0(R3)       TEST RECORD LINKED                           
         BNZ   GET2A               YES                                          
         TM    0(R2),X'22'         TEST IF CALLER WANTS ACTIVITY                
         BNO   EXIT                                                             
         MVC   0(4,R3),2(RE)       MOVE ACTIVITY DATA TO LINK AREA              
         B     EXIT                                                             
GET1A    NI    3(R3),255-X'03'     SET NO ACTIVITY DATA                         
*                                                                               
GET2     OC    0(3,R3),0(R3)       TEST RECORD LINKED                           
         BZ    GETX                NO                                           
GET2A    LA    RE,12(R6)           YES POINT TO 2ND WRITAB ENTRY                
         MVC   0(3,RE),0(R3)       SAVE LINK ADDRESS                            
         ST    RE,P5               SET A(DISK ADDRESS)                          
*                                                                               
GET2B    TM    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         BZ    GET2E               16-BIT                                       
         BO    GET2D               22-BIT                                       
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    GET2E               18-BIT                                       
*                                                                               
GET2C    ICM   R0,15,0(R3)         20-BIT TTTTTRRX IN LINKAGE FIELD             
         SRDL  R0,12                                                            
         SLL   R0,4                00TTTTT0 RRX                                 
         SLDL  R0,8                                                             
         STCM  R0,15,0(RE)         TTTTT0RR IS DISK ADDR FOR 20-BIT             
         B     GET2E                                                            
*                                                                               
GET2D    ICM   R0,15,0(R3)         TTTTTTTTTTTTTTTTTTTTTTRRRRRRRRXX             
         SRDL  R0,10                                                            
         SRL   R1,2                0000000000TTTTTTTTTTTTTTTTTTTTTT 00R         
         SLDL  R0,10                                                            
         STCM  R0,15,0(RE)         TTTTTTTTTTTTTTTTTTTTTT00RRRRRRRR             
*                                                                               
GET2E    LA    R1,P1               READ UNBLOCKED LINKED RECORD                 
         MVC   P1,=V(READ)                                                      
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   ERR1                                                             
         MVC   22(2,R6),P3+2       SAVE PHYSICAL LENGTH                         
         LR    RE,R5                                                            
         AH    RE,FILDLEN                                                       
         MVC   RECLEN,0(RE)        SAVE LOGICAL RECORD LENGTH                   
*                                                                               
GET3     TM    FILFLAG,X'02'       TEST FILE ACTIVITY SUPPORT                   
         BZ    GET3A                                                            
         TM    3(R3),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    GET3A                                                            
         LH    RE,P3+2             TEST PHYSICAL LENGTH BIG ENOUGH              
         SH    RE,RECLEN                                                        
         CHI   RE,ACTILEN                                                       
         BL    GET3A                                                            
         LH    RE,RECLEN           GET LOGICAL RECORD LENGTH                    
         AR    RE,R5                                                            
         OC    0(2,RE),0(RE)       TEST IF LOOKS LIKE ACTIVITY DATA             
         BNZ   GET3A                                                            
         XC    0(3,R3),0(R3)       CLEAR LINK FIELD DISK ADDR                   
         NI    3(R3),X'03'                                                      
         MVC   16(4,R6),2(RE)      SAVE ACTIVITY DATA IN WRITAB                 
         TM    0(R2),X'22'         TEST IF CALLER WANTS ACTIVITY                
         BNO   EXIT                                                             
         MVC   0(4,R3),2(RE)       MOVE ACTIVITY DATA TO LINK FIELD             
         B     EXIT                                                             
GET3A    XC    0(4,R3),0(R3)       CLEAR LINK FIELD IF NO ACTIVITY              
*                                                                               
GETX     LH    RE,RECLEN           GET LOGICAL RECORD LENGTH                    
         AR    RE,R5                                                            
         XC    0(2,RE),0(RE)       SET LOGICAL END OF RECORD                    
         B     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* PUTREC - USE WRITAB BUILT BE GETREC TO WRITE RECORD BACK            *         
* IF REC GETS BIGGER THEN A NEW RECORD IS ADDED AND ITS DISK ADDRESS  *         
* IS SET IN LINKAGE AREA OF FIRST RECORD                              *         
***********************************************************************         
PUTREC   LM    R5,R6,12(R2)        R5=A(RECORD)                                 
         LA    R6,4(R6)            R6=A(WRITAB)                                 
         XC    ACTIDAT,ACTIDAT                                                  
         XC    SLACTI,SLACTI                                                    
*                                                                               
PR0      TM    FILFLAG,X'02'       TEST IF FILE HAS ACTIVITY DATA               
         BZ    PR0X                                                             
         TM    FILFLAG,X'01'       NOT FOR F/L HEADER RECORDS                   
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    PR0X                                                             
         BRAS  RA,ACTIGET          CREATE ACTIVITY DATA                         
         LH    R3,FILLEN                                                        
         AHI   R3,ACTILEN                                                       
         STH   R3,FILLEN                                                        
PR0X     EQU   *                                                                
*                                                                               
PR1      MVC   P1,=V(WRITE)        SET FOR WRITE                                
         MVI   FILCTL,0            CLEAR CONTROL FLAG                           
PR1A     CLC   RECLEN,FILRMIN                                                   
         JL    *+2                 DIE=PUT LEN < MIN                            
PR1B     CLC   FILLEN,FILRMAX                                                   
         BNH   PR1C                                                             
         CLC   RECLEN,FILRMAX                                                   
         JH    *+2                 DIE=PUT LEN > MAX                            
         XC    ACTIDAT,ACTIDAT     NO ROOM FOR ACTIVITY ELEMENT                 
         MVC   FILLEN,RECLEN                                                    
PR1C     MVC   P3+2(2),FILLEN                                                   
         TM    FILFLAG,X'01'       IGNORE HEADER RECORDS                        
         BZ    PR1D                                                             
         CLI   0(R5),0                                                          
         BNE   PR1D                                                             
         L     R6,P5               NO WRITAB SO POINT AT DISK ADDR              
         B     PR4                                                              
PR1D     EQU   *                                                                
*&&UK                                                                           
         L     RE,P5               TEST PUTREC D/A WITH GETREC D/A              
         CLC   0(4,RE),0(R6)                                                    
         JNE   *+2                 DIE=PUT D/A NEQ GET                          
*&&                                                                             
PR2      LR    RE,R5               SET ZERO EL CODE AT END OF RECORD            
         AH    RE,RECLEN                                                        
         MVI   0(RE),0                                                          
         LR    R7,R6               R7=A(ENTRY IN WRITAB)                        
*                                                                               
PR3      MVC   P3+2(2),10(R7)      SET LENGTH FROM WRITAB                       
         ST    R7,P5               SET A(DISK ADDRESS)                          
         MVC   SLACTI,4(R7)        SET LAST ACTIVITY DATA FROM WRITAB           
         OC    12(04,R7),12(R7)    TEST LAST REC IN WRITAB                      
         BZ    *+12                YES                                          
         LA    R7,12(R7)           NO BUMP TO NEXT ENTRY                        
         B     PR3                                                              
*                                                                               
PR4      MVC   P3(1),FILNUM        SET FILE NUMBER                              
         MVI   P3+1,1              SET COPY                                     
         TM    MODE,MODERWRK       TEST IF OFFLINE RECOVERY TO FACWRK           
         BZ    *+12                NO                                           
         ST    R6,P7               YES SET D/A OF FIRST REC IN P7               
         OI    P3+1,X'10'          AND SET P7 PARAM PRESENT                     
         BRAS  RA,RECOVER          READ COPY RECORD INTO RECIO                  
*                                                                               
PR4A     ST    R5,P2               SET RECORD ADDRESS                           
         TM    FILFLAG,X'01'       IGNORE HEADER RECORDS                        
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    PR9                                                              
*                                                                               
PR5      TM    DTFTYPE,DTFTKCL+DTFTKCR TEST IF FILE HAS KEY COMPRESSION         
         BZ    PR6                                                              
         LH    RF,DKEYLNC          GET KEY LENGTH FOR COMPRESSION               
         BCTR  RF,0                                                             
         L     RE,P6               POINT TO OLD COPY RECORD                     
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   0(0,R5),0(RE)       TEST IF KEY HAS CHANGED                      
         BE    PR6                 NO                                           
         CR    R6,R7               YES TEST IF FIRST KEY CHANGE                 
         BNE   PR6                 NO                                           
         OI    FILCTL,X'80'        YES SET ADD NEW REC FOR KEY CHANGE           
         B     PR7A                                                             
*                                                                               
PR6      CLC   FILLEN,10(R7)       TEST IF RECORD HAS GOT LONGER                
         BNH   PR8                 NO                                           
         TM    MODE,MODERWRK       TEST IF OFFLINE RECOVERY TO FACWRK           
         BO    PR8                 YES - DO NOT DO THE ADD!                     
         OI    FILCTL,X'40'        SET LONGER FLAG                              
         CR    R6,R7               TEST FIRST EXTENSION                         
         BNE   PR7                 NO                                           
*                                                                               
PR6A     SR    RF,RF               RF=A(DSKADR)                                 
         ICM   RF,7,P5+1                                                        
         TM    DTFTYPE,DTFTBIGF    TEST IF BLOCKED RECORD                       
         BZ    PR6B                                                             
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+16                                                             
         TM    2(RF),X'03'         22-BIT BLOCKED IF BLOCK BITS NONZERO         
         BZ    PR7A                                                             
         B     PR6C                                                             
         TM    2(RF),X'0F'         20-BIT BLOCKED IF BLOCK BITS NONZERO         
         BZ    PR7A                                                             
         B     PR6C                                                             
PR6B     CLI   3(RF),0             16/18 BLOCKED IF R OF TTBR NONZERO           
         BE    PR7A                                                             
*                                                                               
PR6C     ICM   RE,15,DBLK          RE=A(BLOCK)                                  
         BZ    PR7A                                                             
         SAM31                     BLOCK CAN BE IN XA STORAGE                   
         CLC   0(3,RE),0(RF)                                                    
         BNE   PR6X                BLOCK NOT IN CORE                            
         LH    R0,FILLEN                                                        
         SH    R0,10(R7)           R0=EXTRA LENGTH                              
         LH    R1,DBLKSZ                                                        
         SH    R1,4(RE)            R1=SPARE AT END OF BLOCK                     
         CR    R1,R0                                                            
         BNH   PR6X                NOT ENOUGH ROOM IN THE BLOCK                 
*                                                                               
PR6D     SR    R0,R0               SEARCH FOR RECORD IN BLOCK                   
         ICM   R0,1,3(RF)          R0=RECORD NUMBER                             
         BZ    PR6X                                                             
         LH    RF,4(RE)                                                         
         AR    RF,RE               RF=A(SPARE AREA AT END OF BLOCK)             
         LA    RE,6(RE)            RE=A(FIRST RECORD)                           
         B     PR6F                                                             
PR6E     AH    RE,0(RE)            BUMP TO NEXT RECORD                          
         CR    RE,RF                                                            
         BNL   PR6X                                                             
PR6F     BCT   R0,PR6E                                                          
         LH    R0,0(RE)            GET LENGTH OF RECORD IN BLOCK                
         AHI   R0,-2                                                            
         CH    R0,10(R7)           MAKE SURE LENGTH MATCHES                     
         BNE   PR6X                                                             
         ST    RE,FULL             SAVE A(RECORD)                               
*                                                                               
PR6H     AH    RE,0(RE)            RE=A(SOURCE)=END OF RECORD IN BUFFER         
         L     RF,DBLK                                                          
         AH    RF,4(RF)            RF=A(END OF DATA IN BUFFER)                  
         LR    R0,RF                                                            
         SR    R0,RE               R0=LENGTH OF DATA TO BE MOVED                
         BZ    PR6L                                                             
         LH    RF,FILLEN                                                        
         SH    RF,10(R7)                                                        
         AR    RF,RE               RF=A(DESTINATION)                            
*                                                                               
         LH    R1,FILLEN           SET R1 TO LENGTH OF MOVE CHUNK               
         SH    R1,10(R7)                                                        
         CHI   R1,256                                                           
         BNH   *+8                                                              
         LHI   R1,256                                                           
         AR    RE,R0               RE=A(END OF SOURCE)                          
         AR    RF,R0               RF=A(END OF DESTINATION)                     
*                                                                               
PR6J     CR    R0,R1               TEST RESIDUAL LEN WITH CHUNK LEN             
         BNL   *+6                                                              
         LR    R1,R0               IF LOW SET CHUNK LEN TO RESIDUAL LEN         
         SR    RE,R1                                                            
         SR    RF,R1               BACK ONE CHUNK LEN                           
         AHI   R1,-1                                                            
         EX    R1,PR6KMVE          MOVE ONE CHUNK                               
         AHI   R1,1                                                             
PR6K     SR    R0,R1               SUBTRACT CHUNK LEN FROM RESIDUAL LEN         
         BNZ   PR6J                                                             
         B     *+10                                                             
PR6KMVE  MVC   0(0,RF),0(RE)                                                    
*                                                                               
PR6L     L     RE,FULL             RE=A(RECORD)                                 
         LH    R0,FILLEN                                                        
         SH    R0,10(R7)           R0=EXTRA LENGTH                              
         LH    RF,0(RE)                                                         
         AR    RF,R0                                                            
         STH   RF,0(RE)            SET NEW RECORD LENGTH IN BUFFER              
         AHI   RF,-2                                                            
         STH   RF,10(R7)           SET NEW RECORD LENGTH IN WRITAB              
         STH   RF,P3+2                                                          
         L     RE,DBLK                                                          
         LH    RF,4(RE)                                                         
         AR    RF,R0                                                            
         STH   RF,4(RE)            SET NEW BYTES USED IN BUFFER                 
         SAM24                                                                  
         B     PR8                 NOW TREAT AS NON-EXTENDED RECORD             
*                                                                               
PR6X     SAM24                     CANT EXPAND RECORD IN BLOCK                  
         B     PR7A                ADD NEW RECORD AT END OF FILE                
*                                                                               
PR7      OI    FILCTL,X'20'        DELETE OLD EXTENSION RECORD                  
         L     RE,ARECIO           FLAG UNUSED LINK REC & DONT RECOVER          
         LH    R3,FILDLNK                                                       
         AR    R3,RE                                                            
         MVC   0(3,R3),=X'FFFFFF'                                               
         ST    RE,P2               SET REC ADDRESS                              
         GOTO1 =V(DMOD000),P1                                                   
         OC    P3(2),P3                                                         
         BNZ   ERR2                                                             
         ST    R5,P2               RESTORE REC ADDRESS                          
*                                                                               
PR7A     MVC   P1(4),=V(WRTGET)    ADD NEW EXTENSION RECORD AT EOF              
         LA    R0,12(R7)           NEXT WRITAB ENTRY                            
         ST    R0,P5               SET AS A(DISK ADDRESS)                       
         MVC   P3+2(2),FILLEN      SET LENGTH FROM REC                          
         CLC   P3+2(2),FILRMAX                                                  
         BH    ERR2                                                             
PR7B     LA    R1,P1               GET DISK ADDR OF NEW RECORD                  
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         MVC   P1(4),=V(WRTAFT)    SET COMMAND TO ADD                           
*                                                                               
PR8      LH    R3,FILDLNK          ZERO LINK FIELD                              
         AR    R3,R5                                                            
         XC    0(4,R3),0(R3)                                                    
PR8A     OC    ACTIDAT,ACTIDAT     TEST IF FILE HAS ACTIVITY DATA               
         BZ    PR8C                                                             
         TM    0(R2),X'28'         TEST IF CALLER WANTS OLD ACTIVITY            
         BNO   PR8B                                                             
         OC    SLACTI,SLACTI       TEST IF OLD ACTIVITY EXISTS                  
         BZ    PR8B                NO                                           
         MVC   ACTIDAT+2(4),SLACTI YES RESTORE OLD ACTIVITY DATA                
PR8B     LR    RE,R5                                                            
         AH    RE,RECLEN           POINT TO END OF LOGICAL RECORD               
         MVC   0(ACTILEN,RE),ACTIDAT                                            
         LH    RE,FILDLNK                                                       
         AR    RE,R5                                                            
         OI    3(RE),X'01'         SET ACTIVITY DATA PRESENT IN LINK            
PR8C     TM    MODE,MODERWRK       TEST IF OFFLINE RECOVERY TO FACWRK           
         BZ    *+10                                                             
         MVC   P3+2(2),FILLEN      SET LENGTH FROM REC FOR WORKER FILES         
*                                                                               
PR9      MVC   P3(1),FILNUM        SET FILE NUMBER                              
         MVI   P3+1,2              SET CHANGE                                   
         TM    0(R2),X'24'         TEST MAINTENANCE UPDATE                      
         BNO   *+8                                                              
         OI    P3+1,X'40'                                                       
         BRAS  RA,RECOVER          WRITE COPY AND CHANGE TO RECOVERY            
*                                                                               
         LA    R1,P1               WRITE/ADD CHANGED RECORD                     
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   ERR2                                                             
         TM    FILFLAG,X'01'       IGNORE HEADER RECORDS                        
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    PRX                                                              
*                                                                               
         OC    12(4,R7),12(R7)     EXIT IF RECORD NOT ADDED TO FILE             
         BZ    PRX                                                              
         MVC   P3(1),FILNUM        SET FILE NUMBER                              
         MVI   P3+1,X'81'          SET POINTER COPY                             
         MVC   P3+2(2),10(R6)      SET LEN FROM WRITAB                          
         ST    R6,P5               SET A(D/A)=START OF WRITAB                   
         MVC   P2(4),ARECIO                                                     
         CR    R6,R7               FIRST EXTENSION                              
         BE    *+8                 YES COPY IS POINTER COPY                     
         BRAS  RA,RECOVER          RECOVER ORIGINAL REC                         
*                                                                               
         L     RE,ARECIO           SET LINK DISK ADDR IN RECORD                 
         AH    RE,FILDLNK                                                       
         MVC   0(3,RE),12(R7)                                                   
*                                                                               
PR10     TM    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         BZ    PR13                16-BIT                                       
         BO    PR12                22-BIT                                       
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    PR13                18-BIT                                       
*                                                                               
PR11     ICM   R0,15,0(RE)         20-BIT TTTTT0?X                              
         SRDL  R0,4                                                             
         ICM   R0,1,15(R7)         0TTTTTRR                                     
         SLDL  R0,4                                                             
         STCM  R0,15,0(RE)         TTTTTRRX                                     
         OI    3(RE),X'08'         SET FLAG TO SHOW THIS IS 20-BIT D/A          
         B     PR13                                                             
*                                                                               
PR12     ICM   R0,15,0(RE)         TTTTTTTTTTTTTTTTTTTTTT00??????XX             
         SRDL  R0,2                                                             
         ICM   R0,1,15(R7)         00TTTTTTTTTTTTTTTTTTTTTTRRRRRRRR XX          
         SLDL  R0,2                                                             
         STCM  R0,15,0(RE)         TTTTTTTTTTTTTTTTTTTTTTRRRRRRRRXX             
*                                                                               
PR13     MVC   P3(1),FILNUM        SET FILE NUMBER                              
         MVI   P3+1,X'82'          SET POINTER CHANGE                           
         XC    P3(2),P3            DO NOT WRITE POINTER CHANGES                 
*                                                                               
         MVC   P1(4),=V(WRITE)     WRITE TO FILE                                
         LA    R1,P1                                                            
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   ERR2                                                             
*                                                                               
PRX      TM    0(R2),X'22'         TEST IF CALLER WANTS ACTIVITY                
         BNO   EXIT                                                             
         LH    RE,FILDLNK                                                       
         AR    RE,R5                                                            
         TM    3(RE),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    EXIT                                                             
         MVC   0(4,RE),ACTIDAT+2                                                
         B     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* ADDREC - ADD NEW UNBLOCKED RECORD AT END OF FILE                    *         
* LAST BYTE OF FOUR BYTE LINKAGE AREA SET TO X'01' IF ACTIVITY DATA   *         
***********************************************************************         
ADDREC   LM    R5,R6,12(R2)        R5=A(REC) R6=A(WRITAB)                       
         L     RE,8(R2)                                                         
         XC    0(4,RE),0(RE)       CLEAR RETURN DISK ADDR FIELD                 
         XC    ACTIDAT,ACTIDAT                                                  
*                                                                               
ADREC1   TM    FILFLAG,X'02'       TEST IF FILE HAS AUTO ACTIVITY DATA          
         BZ    ADREC1X                                                          
         TM    FILFLAG,X'01'       NOT FOR F/L HEADER RECORDS                   
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    ADREC1X                                                          
         BRAS  RA,ACTIGET          CREATE ACTIVITY DATA                         
*NOP*    OI    ACTIDAT+2,X'80'     SET ADD                                      
         LH    R3,FILLEN                                                        
         AHI   R3,ACTILEN                                                       
         STH   R3,FILLEN                                                        
ADREC1X  EQU   *                                                                
*&&US                                                                           
ADREC2   CLI   0(R5),0             TEST SPTFILE HEADER RECORD                   
         BNE   *+6                                                              
         SR    R6,R6                                                            
         LTR   R6,R6                                                            
         BZ    ADREC3                                                           
         LA    R6,4(R6)            POINT TO FIRST WRITAB ENTRY                  
         XC    0(28,R6),0(R6)      CLEAR WRITAB                                 
*&&                                                                             
ADREC3   LH    R3,FILDLNK          ZERO LINK FIELD                              
         AR    R3,R5                                                            
         XC    0(4,R3),0(R3)                                                    
ADREC3A  CLC   RECLEN,FILRMIN                                                   
         JL    *+2                 DIE=ADD LEN < MIN                            
ADREC3B  CLC   FILLEN,FILRMAX                                                   
         BNH   ADREC3C                                                          
         CLC   RECLEN,FILRMAX                                                   
         JH    *+2                 DIE=ADD LEN > MAX                            
         XC    ACTIDAT,ACTIDAT     NO ROOM FOR ACTIVITY ELEMENT                 
         MVC   FILLEN,RECLEN                                                    
*                                                                               
ADREC3C  LH    RF,FILLEN                                                        
         TM    FILFLAG,X'01'                                                    
         BZ    *+12                                                             
         CLI   0(R5),0                                                          
         BE    ADREC6                                                           
*                                                                               
ADREC4   LH    RE,FILRSPR          GET EXTRA SPARE BYTES ON ADD                 
         LTR   RE,RE                                                            
         BZ    ADREC5                                                           
         AR    RF,RE               ADD SPARE TO LEN                             
         CH    RF,FILRMAX          SEE IF STILL FITS                            
         BNH   ADREC4A             YES                                          
         SR    RF,RE               NO - RESTORE OLD LEN                         
         B     ADREC5                                                           
*                                                                               
ADREC4A  LR    R1,R5               POINT TO END OF RECORD                       
         AH    R1,FILLEN                                                        
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         XC    0(0,R1),0(R1)       CLEAR SPARE AREA                             
*                                                                               
ADREC5   OC    ACTIDAT,ACTIDAT     TEST IF FILE HAS ACTIVITY DATA               
         BZ    ADREC6                                                           
         LR    RE,R5                                                            
         AH    RE,RECLEN                                                        
         MVC   0(ACTILEN,RE),ACTIDAT                                            
         LH    RE,FILDLNK                                                       
         AR    RE,R5                                                            
         OI    3(RE),X'01'         SET ACTIVITY DATA PRESENT IN LINK            
*                                                                               
ADREC6   STH   RF,P3+2             SET REC LEN IN PARAM LIST                    
         ST    R5,P2               SET A(REC)                                   
         MVC   P1(4),=V(WRTGET)    GET AND LOCK DNEXT                           
         LA    R1,P1                                                            
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
*                                                                               
         MVC   P3(1),FILNUM        SET FILE NUMBER                              
         MVI   P3+1,3              SET ADD                                      
         TM    0(R2),X'24'         TEST MAINTENANCE UPDATE                      
         BNO   *+8                                                              
         OI    P3+1,X'40'                                                       
         BRAS  RA,RECOVER                                                       
*                                                                               
         MVC   P1(4),=V(WRTAFT)    ADD RECORD TO D/A FILE                       
         L     RF,=V(DMOD000)                                                   
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   ERR3                                                             
*&&US                                                                           
         LTR   R6,R6               TEST WRITAB PRESENT                          
         BZ    ADRECX                                                           
         MVC   10(2,R6),P3+2       SET RECORD LEN IN WRITAB                     
         L     RE,P5                                                            
         MVC   0(4,R6),0(RE)       MOVE DISK ADDRESS TO WRITAB                  
*&&                                                                             
ADRECX   TM    0(R2),X'22'         TEST IF CALLER WANTS ACTIVITY                
         BNO   EXIT                                                             
         LH    RE,FILDLNK                                                       
         AR    RE,R5                                                            
         TM    3(RE),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    EXIT                                                             
         MVC   0(4,RE),ACTIDAT+2                                                
         B     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* ERROR EXITS AND MISCELLANEOUS SUBROUTINES                           *         
***********************************************************************         
ERR1     OI    8(R2),X'10'         SET REC NOT FOUND                            
         B     EXIT                                                             
ERR2     OI    8(R2),X'40'         SET UNRECOVERABLE ERROR                      
         B     EXIT                                                             
ERR3     TM    P3+1,X'04'          TEST EOF                                     
         BZ    ERR1                                                             
         OI    8(R2),X'80'                                                      
         B     EXIT                                                             
                                                                                
RECOVER  LA    R1,P1               CHANGES/ADDS TO RECOVERY FILE                
         MVC   P6,ARECIO           SET I/O AREA FOR COPY READS                  
         L     RF,=V(DMRCVR)                                                    
         BASR  RE,RF                                                            
         XC    P3(2),P3                                                         
         BR    RA                                                               
                                                                                
ACTIGET  TIME  TU                  GET DATE AND TIME NOW                        
         ST    R1,FULL             0CYYDDD+                                     
         SRDL  R0,32                                                            
         D     R0,=F'38400'                                                     
         ST    R1,FULL1            SECONDS THIS DAY                             
*                                                                               
ACTIG1   XC    DUB(6),DUB          CONVERT P'DDD' TO BINARY SECONDS             
         MVC   DUB+6(2),FULL+2                                                  
         CVB   R1,DUB                                                           
         AHI   R1,-1                                                            
         M     R0,=F'86400'        R1=SECONDS TO START OF THIS DAY              
         A     R1,FULL1                                                         
         ST    R1,FULL1                                                         
*                                                                               
ACTIG2   L     R1,FULL             EXTRACT YEAR FROM DATE                       
         SLL   R1,8                                                             
         SRL   R1,24                                                            
         SLL   R1,4                R1=00000YY0                                  
         XC    DUB(4),DUB                                                       
         ST    R1,DUB+4                                                         
         OI    DUB+7,X'0C'                                                      
         CVB   R1,DUB              R1=BINARY YEAR FROM 2000                     
*                                                                               
ACTIG3   LR    RF,R1               COMPUTE NUMBER OF DAYS                       
         SR    RE,RE                                                            
         D     RE,=F'4'            RF=NUMBER OF LEAP YEARS                      
         LTR   RE,RE                                                            
         BZ    *+8                                                              
         AHI   RF,1                RF=NUMBER OF EXTRA DAYS                      
         MHI   R1,365                                                           
         AR    R1,RF                                                            
         M     R0,=F'86400'        R1=SECONDS TO START OF THIS YEAR             
         A     R1,FULL1                                                         
         ST    R1,FULL1                                                         
*                                                                               
ACTIGX   XC    ACTIDAT(2),ACTIDAT                                               
         MVC   ACTIDAT+2(4),FULL1                                               
         BR    RA                                                               
         EJECT                                                                  
         DS    0H                                                               
FILTAB   DS    0CL14                                                            
*&&UK                                                                           
         DC    C'MED',X'02',H'20',H'30',H'0034',H'2000',H'00'                   
         DC    C'ACC',X'00',H'42',H'52',H'0056',H'2000',H'00'                   
         DC    C'FEE',X'00',H'32',H'38',H'0042',H'4000',H'00'                   
         DC    C'DMN',X'00',H'20',H'30',H'0034',H'5000',H'00'                   
         DC    C'DMO',X'00',H'20',H'30',H'0034',H'5000',H'00'                   
         DC    C'DMG',X'00',H'20',H'30',H'0034',H'4000',H'00'                   
         DC    C'GEN',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
         DC    C'MBA',X'00',H'32',H'42',H'0046',H'2000',H'00'                   
         DC    C'MBU',X'00',H'32',H'42',H'0046',H'2000',H'00'                   
         DC    C'PER',X'02',H'36',H'40',H'0044',H'2000',H'00'                   
         DC    C'MPL',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
         DC    C'MPC',X'00',H'09',H'18',H'0022',H'2048',H'00'                   
*NOP*    DC    C'BUD',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
*NOP*    DC    C'CRA',X'00',H'08',H'15',H'0019',H'2000',H'00'                   
*NOP*    DC    C'MPQ',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
*NOP*    DC    C'MPR',X'00',H'19',H'30',H'0034',H'4000',H'00'                   
*&&                                                                             
*&&US                                                                           
         DC    C'SPT',X'01',H'13',H'16',H'0022',H'5972',H'60'                   
         DC    C'XSP',X'00',H'32',H'38',H'0042',H'5972',H'60'                   
         DC    C'PRT',X'00',H'25',H'29',H'0033',H'3000',H'00'                   
         DC    C'PUB',X'00',H'25',H'29',H'0033',H'4000',H'00'                   
         DC    C'ACC',X'00',H'42',H'52',H'0056',H'2000',H'00'                   
         DC    C'TAL',X'00',H'32',H'36',H'0040',H'4000',H'00'                   
         DC    C'CHK',X'00',H'32',H'36',H'0040',H'4000',H'00'                   
         DC    C'REP',X'00',H'27',H'30',H'0036',H'3972',H'00'                   
         DC    C'ROI',X'00',H'31',H'34',H'0040',H'2000',H'00'                   
         DC    C'GEN',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
         DC    C'MBA',X'00',H'32',H'42',H'0046',H'2000',H'00'                   
         DC    C'MBU',X'00',H'32',H'42',H'0046',H'2000',H'00'                   
         DC    C'UNT',X'02',H'20',H'23',H'0028',H'6000',H'00'                   
         DC    C'PER',X'02',H'36',H'40',H'0044',H'2000',H'00'                   
         DC    C'TRF',X'01',H'13',H'16',H'0022',H'5972',H'60'                   
*NOP*    DC    C'BUD',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
*NOP*    DC    C'MPL',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
*NOP*    DC    C'MPQ',X'00',H'32',H'38',H'0042',H'2000',H'00'                   
*NOP*    DC    C'MPR',X'00',H'19',H'30',H'0034',H'2000',H'00'                   
*&&                                                                             
FILTABN  EQU   (*-FILTAB)/L'FILTAB                                              
FILTABX  DC    X'0000'                                                          
                                                                                
MODE     DC    X'00'                                                            
MODERWRK EQU   X'80'               RECOVERY TO FACWRK                           
MODEON   EQU   X'02'               ONLINE                                       
MODEOFF  EQU   X'01'               OFFLINE                                      
                                                                                
LASTFIL  DC    A(0)                OFFLINE A(LAST USED ENTRY)                   
LASTDTF  DC    A(0)                OFFLINE A(LAST USED FILE)                    
LASTSE   DC    X'00'               OFFLINE LAST SE NUMBER                       
LASTNAME DC    XL7'00'             OFFLINE LAST FILE NAME                       
                                                                                
         LTORG                                                                  
         EJECT                                                                  
WRKD     DSECT                                                                  
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
P7       DS    F                                                                
*                                                                               
FULL     DS    F                                                                
DUB      DS    D                                                                
*                                                                               
FILNUM   DS    F                   FILE NUM AND A(DTF)                          
FILLEN   DS    H                                                                
FILCTL   DS    X                                                                
         DS    X                                                                
*                                  FILE TABLE ENTRY                             
FILNAM   DS    CL3                 NAME                                         
FILFLAG  DS    X                   FLAGS 01=HEADERS,02=ACTIVITY                 
FILDLEN  DS    H                   DISPLACEMENT OF LENGTH FLD                   
FILDLNK  DS    H                   DISPLACEMENT OF LINK FLD                     
FILRMIN  DS    H                   MIN RECORD LEN                               
FILRMAX  DS    H                   MAX RECORD LEN                               
FILRSPR  DS    H                   SPARE                                        
*                                                                               
ACTILEN  EQU   6                                                                
RECLEN   DS    XL2                                                              
ACTIDAT  DS    XL6                                                              
SLACTI   DS    XL4                                                              
HALF     DS    H                                                                
FULL1    DS    F                                                                
APARMS   DS    A                                                                
ARECIO   DS    A                                                                
RECHDRL  DS    XL4                                                              
RECHDR   DS    CL24                                                             
RECIO    DS    0C                  RECORD I/O AREA                              
*&&UK*&& DS    5100C                                                            
*&&US*&& DS    6200C                                                            
WRKX     DS    0C                                                               
                                                                                
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
*FASSBOFF                                                                       
       ++INCLUDE FASSBOFF                                                       
*FASSB                                                                          
       ++INCLUDE FASSB                                                          
*FATCB                                                                          
       ++INCLUDE FATCB                                                          
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'008DMDALINK  02/22/18'                                      
         END                                                                    
