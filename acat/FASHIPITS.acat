*          DATA SET FASHIPITS  AT LEVEL 040 AS OF 10/19/00                      
*CATALP SHIPITA                                                                 
         TITLE 'FACPAK INTERFACE TO COMPRESSION/STRUCTURED WRITES'              
         PRINT NOGEN                                                            
SHIPIT   CSECT                                                                  
         NMOD1 WORKL,*SHIPIT*,CLEAR=YES                                         
         STAR  CLEAR=ARZERO,ARS=OFF                                             
         USING WORKD,RC                                                         
         LTR   R1,R1               SPECIAL CALL FROM ABEND                      
         BZ    FORGETIT                                                         
*                                                                               
         MVC   PARMS,0(R1)                                                      
         MVC   PFLAG,PARMS         SAVE FLAG FOR PARMS                          
         MVI   PARMS,0                                                          
*                                                                               
         ICM   RA,15,ASHIP                                                      
         USING BTSAVED,RA          RA=A(SAVED STORAGE)                          
*                                                                               
         ICM   RF,15,ASSB                                                       
         USING SSBD,RF                                                          
         MVC   ALET,SSBTBLET       SET TABS ALET                                
         MVC   TASKING,SSBMTIND                                                 
*                                                                               
         L     RF,SSBTKADR                                                      
         USING TCBD,RF                                                          
         MVC   ATWA,TCBTWA         GET STUFF FROM TCB                           
         MVC   AUTL,TCBUTL                                                      
         MVC   AWRK,TCBWRKA                                                     
         MVC   BUFF24,TCBTBUFF                                                  
         MVC   BUFF31,TCBRBUFF                                                  
         DROP  RF                                                               
*                                                                               
         ICM   R9,15,AUTL                                                       
         USING UTLD,R9             R9=A(UTL)                                    
         BRAS  RE,INIT             INITIALISE VARIABLES                         
*                                                                               
         ICM   RF,15,BTANTRY       FIRST TIME CALL?                             
         BNZ   *+8                                                              
         BRAS  RE,GETNTRY          GET AN ENTRY IN DATASPACE                    
*                                                                               
         BRAS  RE,MOVEIT           MOVE THIS INFORMATION TO DATASPACE           
         BE    SHIPX               CAN ACCEPT ANOTHER SCREEN                    
*                                                                               
         BRAS  RE,ZIPIT            COMPRESS SCREENS IN BUFFER                   
         BRAS  RE,WAIT             WAIT UNTIL POSTED FROM PKZIP                 
         BRAS  RE,BLDTBUF          BUILD TBUFF                                  
*                                                                               
         XC    BTDISP,BTDISP       RESET DISPLACEMENT                           
         XC    BTANTRY,BTANTRY     RESET A(ENTRY)                               
         CLI   *,255               SET CC LOW FOR NO MORE DATA                  
*                                                                               
SHIPX    REAR  ARS=OFF                                                          
         XMOD1 ,                                                                
         EJECT                                                                  
***********************************************************************         
* INITIALISATION CODE                                                 *         
***********************************************************************         
         SPACE 1                                                                
INIT     NTR1  ,                                                                
         XC    MYTIOB,MYTIOB       EXTRACT TIOB                                 
         ICM   RF,15,AWRK                                                       
         CLC   =CL4'MNTR',0(RF)    MONITOR W/S                                  
         BNE   *+10                NO                                           
         MVC   MYTIOB,72(RF)       TIOB IS FIRST ITEM IN W/S                    
*                                                                               
         OI    TTYPE2,TTYPE2SC+TTYPE2CH                                         
         TM    TSTAT8,TST8RSLV     RESOLVED TTSCCNT?                            
         BO    *+12                YES                                          
         MVI   TTSCCNT,TTSCCNTQ                                                 
         OI    TSTAT8,TST8RSLV     YOU JUST DID                                 
*                                                                               
         TM    PFLAG,SHIPFEND      LAST TIME CALL?                              
         BZ    *+10                NO                                           
         XC    TTSCCNT,TTSCCNT     CLEAR CONVERSATION COUNTER                   
*                                                                               
         OC    TTSCCNT,TTSCCNT     END OF THIS CONVERSATION?                    
         BNZ   *+12                NO                                           
         NI    TTYPE2,255-TTYPE2CH RESET BRACKET                                
         NI    TSTAT8,255-TST8RSLV                                              
*                                                                               
         ICM   RF,15,ASIDFLD       ALREADY HAVE ASID?                           
         BNZ   EXITOK              YES                                          
*                                                                               
         L     R2,VCOMFACS         SELF MODIFYING - NEED PROTECT OFF            
         USING COMFACSD,R2                                                      
         L     RF,CPROTOFF                                                      
         GOTO1 (RF)                                                             
         EXTRACT ASIDFLD,'S',FIELDS=(ASID)                                      
         L     RF,CPROTON                                                       
         GOTO1 (RF)                                                             
         B     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* OBTAIN ENTRY WITHIN DATASPACE FOR THIS TASK                         *         
***********************************************************************         
         SPACE 1                                                                
GETNTRY  NTR1  ,                                                                
         ICM   RF,15,ASSB                                                       
         USING SSBD,RF                                                          
         MVC   FACPAK,SSBSYSN1     SET UP LOCKING TOKEN FAC/TASK/ASID           
         ICM   RF,15,SSBTKADR                                                   
         USING TCBD,RF                                                          
         MVC   TASK,TCBTASK                                                     
         L     R0,ASIDFLD                                                       
         STH   R0,ASID                                                          
         DROP  RF                                                               
*                                                                               
         LAM   R2,R2,ALET          GO INTO TABS DATASPACE                       
         XR    R2,R2                                                            
         SAC   512                                                              
*                                                                               
         ICM   R2,15,TABSZIP-FATABSD(R2)                                        
         AHI   R2,TABSID+TZIPDSP+TABSID                                         
         USING TZIPHDRD,R2                                                      
*                                                                               
         LA    R0,TZHNUM           NUMBER OF SLOTS IN DATASPACE                 
GETN02   XR    RE,RE               COMPARISON VALUE                             
         L     RF,LOCKID           REPLACEMENT VALUE IS LOCK TOKEN              
         CS    RE,RF,TZHID                                                      
         BE    GETN04              FILLED THIS SLOT                             
         LA    R2,TZHLENQ(,R2)                                                  
         BCT   R0,GETN02                                                        
         DC    H'0'                NEED TO FIND A WAY TO WAIT                   
*                                                                               
GETN04   ST    R2,BTANTRY          SAVE A(THIS HEADER)                          
         SAC   0                                                                
         XR    R2,R2                                                            
         SAR   R2,R2               CLEAN UP ACCESS REGISTERS                    
         B     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* TRANSLATE AND MOVE INFORMATION FROM TBUFF TO COMPRESSION BUFFER     *         
***********************************************************************         
         SPACE 1                                                                
MOVEIT   NTR1  ,                                                                
*                                                                               
         L     R1,ATWA                                                          
         AHI   R1,64               FIRST FIELD                                  
         XR    RF,RF                                                            
         USING FHD,R1                                                           
MVE02    ICM   RF,1,FHLN                                                        
         BZ    MVE04                                                            
         TM    FHAT,FHATPR                                                      
         BO    *+8                                                              
         OI    FHOI,FHOITR         HAVE TO TRANSMIT ALL FIELDS TO STOP          
         BXH   R1,RF,MVE02         NASTY LITTLE STEREO PROBLEM                  
         DC    H'0'                                                             
         DROP  R1                                                               
*                                                                               
MVE04    GOTO1 VTO3270,PLIST,ATWA,BUFF24,(R9),MYTIOB                            
*                                                                               
         LAM   R2,R2,ALET                                                       
         ICM   R2,15,BTANTRY          GET A(MY HEADER)                          
         SAC   512                                                              
         USING TZIPHDRD,R2                                                      
         MVI   TZHFLAG1,TZHF1CMP   ALWAYS COMPRESSING                           
         OI    TZHFLAG3,TZHF3BIG   USE BEST COMPRESSION                         
         L     RF,TZHBLEN                                                       
         ST    RF,BTMAX                                                         
*                                                                               
         ICM   RE,15,BUFF24        GET A(TRANSLATED OUTPUT)                     
         AHI   RE,-2                                                            
         LH    R1,0(RE)            R1=LENGTH OF SCREEN                          
         AHI   R1,2                   ALLOW FOR LENGTH ITSELF                   
         BCTR  R1,0                   REMOVE ETX FROM END                       
         STH   R1,0(RE)            SET NEW LENGTH                               
*                                                                               
         A     R1,BTDISP           SET NEXT DISPLACEMENT                        
         LH    RF,0(RE)                                                         
*                                                                               
         CPYA  R4,R2                                                            
         ICM   R4,15,TZHBODY                                                    
         A     R4,BTDISP                                                        
         LR    R5,RF                                                            
         MVCL  R4,RE               COPY DATA TO BODY OF THIS SLOT               
*                                                                               
         ST    R1,BTDISP           SET NEW DISPLACEMENT                         
         ST    R1,TZHULEN                                                       
         SAC   0                   CLEAN UP                                     
         XR    R2,R2                                                            
         SAR   R4,R2                                                            
         SAR   R2,R2                                                            
*                                                                               
         OC    TTSCCNT,TTSCCNT     END OF THIS CONVERSATION?                    
         BZ    EXITL               EXIT TO COMPRESS                             
*                                                                               
         ICM   RF,15,BTDISP           SEE IF WE ALLOW ANOTHER SCREEN            
         AHI   RF,TBUFFL                                                        
         C     RF,BTMAX                                                         
         BL    EXITOK              YES - EXIT CC EQUAL                          
         B     EXITL               NO  - EXIT TO COMPRESS                       
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* CALL PKZIP TO COMPRESS BUFFER IN DATASPACE                          *         
***********************************************************************         
         SPACE 1                                                                
ZIPIT    NTR1  ,                                                                
         LAM   R2,R2,ALET                                                       
         ICM   R2,15,BTANTRY       GET A(MY HEADER)                             
         SAC   512                                                              
         USING TZIPHDRD,R2                                                      
         LA    RF,ECB                                                           
         STCM  RF,15,TZHECB        SET COMPLETION ECB                           
         MVI   TZHFLAG2,TZHF2NEW   SET NEW WORK                                 
         DROP  R2                                                               
*                                                                               
         XR    R2,R2                                                            
         ICM   R2,15,TABSZIP-FATABSD(R2)                                        
         LA    R2,TABSID(,R2)      GO PAST HEADER TO TABLE                      
         USING TABSZIPD,R2                                                      
*                                                                               
         LA    R0,TAZNUM           NUMBER OF SLOTS IN DATASPACE                 
         MVI   POSTNUM,0           FLAG ENSURES ALWAYS AT LEAST 1 POST          
         XC    AFSTZIP,AFSTZIP     A(FIRST QUALIFYING ENTRY)                    
*                                                                               
ZIPIT02  OC    TAZJOB,TAZJOB       SLOT HAS JOB REGISTERED?                     
         BZ    ZIPIT08                                                          
         CLI   TAZFLAG,TAZFDED     SLOT HAS JOB THAT ABENDED?                   
         BE    ZIPIT08                                                          
         OC    AFSTZIP,AFSTZIP                                                  
         BNZ   *+8                                                              
         ST    R2,AFSTZIP          SET A(FIRST ZIP IMAGE)                       
         CLI   TAZFLAG,TAZFSLP     SLOT HAS JOB THAT SLEEPS?                    
         BNE   ZIPIT08                                                          
*                                                                               
ZIPIT04  L     R3,TAZPOST          SET A(WAKEUP ECB) IN R3                      
         LH    R5,TAZASID          GET ASCB FOR THE PKZIP IMAGE                 
         SAC   0                                                                
*                                                                               
         LOCASCB ASID=(R5)                                                      
         LTR   RF,RF               ASCB RETURNED IN R1 OK?                      
         BNZ   ZIPIT06             NO                                           
*                                                                               
         XR    RF,RF                                                            
         IC    RF,POSTNUM                                                       
         LA    RF,1(RF)                                                         
         STC   RF,POSTNUM                                                       
*                                                                               
         LR    R4,R1               SET ASCB IN R4                               
         POST (R3),99,ASCB=(R4),LINKAGE=SYSTEM,ECBKEY=8,MF=(E,POSTLF)           
         LTR   RF,RF                                                            
         BZ    ZIPITX              GOOD RETURN IS RF=ZERO                       
*                                                                               
ZIPIT06  SAC   512                                                              
         MVI   TAZFLAG,TAZFDED     SET IMAGE ABENDED (SO NO MORE POSTS)         
         CLI   POSTNUM,255                                                      
         BE    ZIPFUCK                                                          
*                                                                               
ZIPIT08  LA    R2,TZLENQ(,R2)      TRY NEXT IMAGE                               
         BCT   R0,ZIPIT02                                                       
         CLI   POSTNUM,0           POSTED ANYONE?                               
         BNE   ZIPITX              YES                                          
         ICM   R2,15,AFSTZIP       A(FIRST ZIP IMAGE) SET?                      
         BZ    ZIPFUCK             NO                                           
         MVI   POSTNUM,255                                                      
         B     ZIPIT04             GO POST FIRST ONE FOR GOOD MEASURE           
*                                                                               
ZIPITX   XR    RF,RF                                                            
         SAR   R2,RF                                                            
         B     EXITOK                                                           
*                                                                               
ZIPFUCK  DC    H'0',C'NO ZIP IMAGE TO POST'                                     
*                                                                               
POSTLF   POST  ERRET=UNZIPPED,ECBKEY=YES,MF=L                                   
         EJECT                                                                  
***********************************************************************         
* SET WAIT UNTIL POSTED                                               *         
***********************************************************************         
         SPACE 1                                                                
WAIT     ST    RE,SAVERE                                                        
         XC    ECB,ECB                                                          
         LA    R1,ECB                                                           
         CLI   TASKING,0           MULTITASKING?                                
         BE    WAIT02              NO                                           
         ICM   RF,15,=V(ADWAIT)    ADWAIT DEFINED?                              
         BZ    WAIT02              NO                                           
         BASSM RE,RF                                                            
         LAM   R0,RF,ARZERO                                                     
         L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
WAIT02   WAIT  ECB=ECB             DO A REAL WAIT                               
         L     RE,SAVERE                                                        
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD OUTPUT BUFFER IN STRUCTURED FIELD FORMAT                      *         
***********************************************************************         
         SPACE 1                                                                
BLDTBUF  NTR1  ,                                                                
         BRAS  RE,ON31             GET INTO XA                                  
*                                                                               
         L     R2,BUFF31                                                        
         MVI   0(R2),WSF           SET WRITE STRUCTURED FIELD                   
         LA    R2,1(R2)                                                         
         ST    R2,OVERALL          MOVE INSERT DATA INTO FIELD                  
         MVC   0(INSERTLN,R2),INSERTD  SET INSERT                               
         LA    R2,INSERTLN(R2)     R2 IS LENGTH OF THIS ELEMENT                 
*                                                                               
         LAM   R4,R4,ALET                                                       
         ICM   R4,15,BTANTRY                                                    
         SAC   512                                                              
         USING TZIPHDRD,R4                                                      
*                                                                               
         L     R1,TZHCLEN          COMPRESSED DATA LEN + OVERHEAD               
         AHI   R1,STRDATA-STREAMD                                               
         STCM  R1,3,0(R2)          SET LENGTH OF ELEMENT                        
         LA    R2,2(R2)            GO PAST LENGTH                               
         USING STREAMD,R2                                                       
*                                                                               
         XC    STRSEQN,STRSEQN     FIX THIS FOR CONVERSE                        
         TM    PFLAG,SHIPFEND      LAST TIME CALL                               
         BZ    *+8                                                              
         OI    STRSEQN,STRLAST                                                  
         TM    PFLAG,SHIPFFST      FRST TIME CALL                               
         BZ    *+8                                                              
         OI    STRSEQN,STRFRST                                                  
         OC    TTSCCNT,TTSCCNT     LAST IN BRACKET                              
         BNZ   *+8                                                              
         OI    STRSEQN,STRBRKT                                                  
*                                                                               
         L     R1,TZHCLEN          COMPRESSED LENGTH OF DATA                    
         AHI   R1,STRDATA-STREL                                                 
         STCM  R1,3,STRLEN                                                      
         LH    R1,BTFRAME                                                       
         LA    R1,1(R1)                                                         
         STH   R1,BTFRAME                                                       
         STCM  R1,3,STRSEQ         SET SEQUENCE NUMBERS                         
*                                                                               
         TM    PFLAG,SHIPFEND      LAST TIME CALL                               
         BZ    *+10                                                             
         XC    BTFRAME,BTFRAME     RESET FRAME NUMBER                           
*                                                                               
         MVI   STRFLAG1,STF1ZIP+STF13270                                        
         XC    STRFLAG2,STRFLAG2                                                
         XC    STRFLAG3,STRFLAG3                                                
         XC    STRFLAG4,STRFLAG4                                                
*                                                                               
         CPYA  R6,R4                                                            
         ICM   R6,15,TZHBODY                                                    
         L     R7,TZHCLEN                                                       
         LA    RE,STRDATA                                                       
         LR    RF,R7                                                            
         MVCL  RE,R6                   COPY IN COMPRESSED DATA                  
         XR    R6,R6                                                            
         SAR   R6,R6                   RESET AR6                                
*                                                                               
         LA    R2,STRDATA                                                       
         A     R2,TZHCLEN              GO ON TO NEXT ELEMENT AREA               
         XC    0(4,R2),0(R2)                                                    
*                                                                               
         LR    R1,R2                                                            
         L     RF,OVERALL                                                       
         SR    R1,RF                                                            
         STCM  R1,3,0(RF)                                                       
*                                                                               
         L     RE,BUFF31                                                        
         SR    R2,RE                 R2 HAS DATA LEN                            
         AHI   RE,-8                 BACK UP TO HEADER                          
         STH   R2,6(RE)              SET MESSAGE LENGTH                         
*                                                                               
         XC    TZHZIP,TZHZIP                                                    
         XC    TZHULEN,TZHULEN                                                  
         XC    TZHCLEN,TZHCLEN                                                  
         XC    TZHFLAG3,TZHFLAG3                                                
         XC    TZHCRC,TZHCRC                                                    
         XC    TZHECB,TZHECB                                                    
         XC    TZHID,TZHID         CLEAR THIS LAST!                             
         SAC   0                                                                
*                                                                               
BLDTBUFX BRAS  RE,OFF31                                                         
         B     EXITOK                                                           
         DROP  R4                                                               
         EJECT                                                                  
***********************************************************************         
* SPECIAL CALL TO CLEAR SELF OUT (ONLY FROM ABEND)                    *         
***********************************************************************         
         SPACE 1                                                                
FORGETIT ICM   RF,15,ASSB                                                       
         BZ    SHIPX                                                            
*                                                                               
         USING SSBD,RF                                                          
         MVC   FACPAK,SSBSYSN1     SET UP LOCKING TOKEN FAC/TASK/ASID           
         ICM   RF,15,SSBTKADR                                                   
         USING TCBD,RF                                                          
         MVC   TASK,TCBTASK                                                     
         L     R0,ASIDFLD                                                       
         STH   R0,ASID                                                          
         DROP  RF                                                               
*                                                                               
         LAM   R0,RF,ARZERO                                                     
         LAM   R2,R2,ALET          GO INTO TABS DATASPACE                       
         XR    R2,R2                                                            
         SAC   512                                                              
*                                                                               
         ICM   R2,15,TABSZIP-FATABSD(R2)                                        
         AHI   R2,TABSID+TZIPDSP+TABSID                                         
         USING TZIPHDRD,R2                                                      
*                                                                               
         LA    R0,TZHNUM           NUMBER OF SLOTS IN DATASPACE                 
FORG02   XR    RE,RE               COMPARISON VALUE                             
         L     RF,LOCKID           REPLACEMENT VALUE IS LOCK TOKEN              
         CS    RF,RE,TZHID                                                      
         BE    FORG04              CLEARED THIS SLOT                            
         LA    R2,TZHLENQ(,R2)                                                  
         BCT   R0,FORG02                                                        
*                                                                               
FORG04   SAC   0                                                                
         XR    R2,R2                                                            
         SAR   R2,R2               CLEAN UP ACCESS REGISTERS                    
         B     SHIPX                                                            
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* EXIT POINTS  AND USEFUL ROUTINES                                    *         
***********************************************************************         
         SPACE 1                                                                
ON31     O     RE,=XL4'80000000'                                                
         BSM   0,RE                                                             
*                                                                               
OFF31    N     RE,=XL4'7FFFFFFF'                                                
         BSM   0,RE                                                             
*                                                                               
EXITOK   CR    RB,RB               SET CC EQUAL                                 
         J     EXIT                                                             
*                                                                               
EXITL    CLI   *,255               SET CC LOW                                   
         J     EXIT                                                             
*                                                                               
EXIT     XIT1  ,                                                                
         EJECT                                                                  
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         SPACE 1                                                                
WSF      EQU   X'F3'               WSF                                          
*                                                                               
ASIDFLD  DC    D'0'                                                             
*                                                                               
ARZERO   DC    16F'0'                                                           
ASSB     DC    V(SSB)                                                           
VCOMFACS DC    V(SYSFAC0)                                                       
VTO3270  DC    V(TO3270)                                                        
*                                                                               
INSERTD  DC    AL2(0)                                                           
         DC    X'D04704C08061'                                                  
INSERTLN EQU   *-INSERTD                                                        
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ZIP ADDRESS SPACED IS NOT THERE - CLEAR ENTRY SOMEHOW               *         
***********************************************************************         
         SPACE 1                                                                
UNZIPPED NTR1  BASE=*,LABEL=*                                                   
         XIT1  ,                                                                
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* USEFUL DSECTS                                                       *         
***********************************************************************         
         SPACE 1                                                                
STREAMD  DSECT                                                                  
STRSEQN  DS    XL1                 CONVERSATION SEQUENCE NUMBER                 
STRLAST  EQU   X'80'               LAST OF CONVERSATION                         
STRBRKT  EQU   X'40'               LAST OF BRACKET                              
STRFRST  EQU   X'20'               FRST OF CONVERSATION                         
*                                                                               
STREL    DS    0X              *** REPEATED ELEMENTS                            
STRLEN   DS    XL2                 LENGTH OF THIS ELEMENT                       
STRSEQ   DS    XL2                 SEQUENCE NUMBER OF THIS ELEMENT              
STRFLAG1 DS    X                   FLAG BYTE 1                                  
STF1ZIP  EQU   X'80'               DATA HAS BEEN ZIPPED                         
STF13270 EQU   X'40'               DATA HAS 3270 TRANSLATION                    
STFSOFF  EQU   X'20'               DATA HAS SOFT FIELD TRANSLATION              
STF110   EQU   X'10'               UNDEFINED                                    
STF108   EQU   X'08'               UNDEFINED                                    
STF104   EQU   X'04'               UNDEFINED                                    
STF102   EQU   X'02'               UNDEFINED                                    
STF101   EQU   X'01'               UNDEFINED                                    
STRFLAG2 DS    X                   FLAG BYTE 2                                  
STRFLAG3 DS    X                   FLAG BYTE 3                                  
STRFLAG4 DS    X                   FLAG BYTE 4                                  
STRDATA  DS    0X              *** DATA STARTS HERE                             
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE                                                     *         
***********************************************************************         
         SPACE 2                                                                
WORKD    DSECT                                                                  
DUB      DS    D                                                                
CALLR1   DS    A                   A(CALLERS R1)                                
ALET     DS    A                   LOCAL SSBTBLET                               
LOCKID   DS    0A                  LOCKING TOKEN                                
FACPAK   DS    X                   (FACPAK/TASK/ASID)                           
TASK     DS    X                                                                
ASID     DS    H                                                                
SAVERE   DS    A                                                                
ECB      DS    A                   ECB TO POST COMPLETION/WAIT ON               
*                                                                               
PARMS    DS    0XL(SHIPLEN)                                                     
ASHIP    DS    A                   A(MY STORAGE)                                
         DS    3A                                                               
*                                                                               
ATWA     DS    A                   A(TWA)                                       
AUTL     DS    A                   A(UTL)                                       
AWRK     DS    A                   A(TCBWRK)                                    
BUFF31   DS    A                   31-BIT TBUFF                                 
BUFF24   DS    A                   24-BIT TBUFF                                 
*                                                                               
PLIST    DS    6F                                                               
AFSTZIP  DS    A                   A(FIRST ZIP IMAGE FOUND)                     
OVERALL  DS    A                                                                
MYTIOB   DS    XL16                TIOB FROM MONITOR W/S                        
POSTNUM  DS    X                   COUNT OF POSTS                               
TASKING  DS    X                   SSBMTIND                                     
COUNT    DS    X                   TTSCCNT                                      
PFLAG    DS    X                   FIRST BYTE OF PARAMS                         
WORKL    EQU   *-WORKD                                                          
         EJECT                                                                  
***********************************************************************         
* OTHER INCLUDED DSECTS                                               *         
***********************************************************************         
         SPACE 2                                                                
* FASHIPBLK                                                                     
         PRINT OFF                                                              
       ++INCLUDE FASHIPBLK                                                      
         PRINT ON                                                               
* FASYSFAC                                                                      
         PRINT OFF                                                              
       ++INCLUDE FASYSFAC                                                       
         PRINT ON                                                               
* DDCOMFACS                                                                     
         PRINT OFF                                                              
       ++INCLUDE DDCOMFACS                                                      
         PRINT ON                                                               
* DDFH                                                                          
         PRINT OFF                                                              
       ++INCLUDE DDFH                                                           
         PRINT ON                                                               
* FASSB                                                                         
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         PRINT ON                                                               
* FAUTL                                                                         
         PRINT OFF                                                              
       ++INCLUDE FAUTL                                                          
         PRINT ON                                                               
* FATCB                                                                         
         PRINT OFF                                                              
       ++INCLUDE FATCB                                                          
         PRINT ON                                                               
* FATABSD                                                                       
         PRINT OFF                                                              
       ++INCLUDE FATABSD                                                        
         PRINT ON                                                               
* FATABSZIP                                                                     
         PRINT OFF                                                              
       ++INCLUDE FATABSZIP                                                      
         PRINT ON                                                               
*DDZIPWRKD                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDZIPWRKD                                                      
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'040FASHIPITS 10/19/00'                                      
         END                                                                    
