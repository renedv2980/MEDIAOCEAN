*          DATA SET DMLDMOD    AT LEVEL 019 AS OF 11/16/20                      
*CATALP DMLDMOD                                                                 
         TITLE 'DMLDMOD - GENERALISED LOAD/DUMP FOR IS/DA FILES'                
         PRINT NOGEN                                                            
DMLDMOD  CSECT                                                                  
         ENTRY SVD1HDR                                                          
         ENTRY SVD2HDR                                                          
         ENTRY SVD3HDR                                                          
         ENTRY SVD4HDR                                                          
         ENTRY PARMCARD                                                         
         ENTRY UPSIVAL                                                          
         ENTRY ACTISAVE                                                         
         ENTRY ACTIDAT                                                          
         ENTRY EID                                                              
         ENTRY EMAILFLG                                                         
         ENTRY APPABND                                                          
         ENTRY APPWRN1                                                          
         ENTRY APPWRN2                                                          
         ENTRY APPCOND                                                          
         ENTRY LDCOND                                                           
         ENTRY LDSENA                                                           
         ENTRY LDSENO                                                           
         ENTRY LDFINOS                                                          
         ENTRY LDSPACE                                                          
         ENTRY LDDANA                                                           
         ENTRY LDISNA                                                           
         ENTRY LDCOUNTS                                                         
         ENTRY SMF                                                              
         ENTRY RECTYV                                                           
         ENTRY DATEVAL                                                          
         ENTRY MODE                                                             
         ENTRY INPUT                                                            
         ENTRY OUTPUT                                                           
         ENTRY LDWRITE                                                          
         ENTRY SVDAHDR                                                          
         ENTRY SVDBHDR                                                          
         ENTRY SSB                                                              
         ENTRY UTL                                                              
*                                                                               
         NBASE 0,DMLDMOD,RA,R8,R7,R6,WORK=A(DMLDWRK)                            
         ST    R1,SVMVSR1                                                       
         ST    RB,SAVERB                                                        
         L     RC,=V(CPRINT)       RC=PRINTER CONTROL REGISTER                  
         USING DPRINT,RC                                                        
*                                                                               
         L     RF,=A(INITPROG)     INITIALISE PROGRAM                           
         BASR  RE,RF                                                            
         EJECT                                                                  
***********************************************************************         
* SPECIAL PARMS (LIKE DSPACE= AND DDSIO=) COME FIRST ON SINGLE CARDS  *         
* MULTIPLE ACTIONS ARE SUPPORTED. EACH ACTION IS DEFINED BY A SET OF  *         
* PARMS STARTING WITH MODE= PARM AS FIRST PARM ON FIRST CARD OF SET   *         
***********************************************************************         
NXTPARM  MVI   ERRNUM,0            READ AND VALIDATE NEXT SET OF PARMS          
         L     RF,=A(GETPARM)                                                   
         BASR  RE,RF                                                            
         CLI   EOJFLAG,C'Y'        EXIT IF INVALID PARAMETER FOUND              
         BE    EOJ                                                              
*                                                                               
         L     RF,=A(INITMODE)     INITIALISE FOR MODE                          
         BASR  RE,RF                                                            
         BNE   EOJ                                                              
*                                                                               
         L     RF,=A(OPEN)         OPEN FILES FOR MODE                          
         BASR  RE,RF                                                            
*                                                                               
         L     RF,=A(INIXTRN)      INITIALISE FOR EXTERNAL                      
         BASR  RE,RF                                                            
*                                                                               
         TM    OUTPUT,DISK         GO TO LOAD OR DUMP ROUTINE                   
         BZ    DUMPFRST                                                         
         TM    MODE,DAFIL                                                       
         BO    LDDAFRST                                                         
         B     LDISFRST                                                         
*                                                                               
EOJ      GOTOR =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
*                                                                               
         OC    LDCOND,APPCOND      CREATE COMPOUND CONDITION CODE               
         XBASE RC=LDCOND,RL=2                                                   
         EJECT                                                                  
***********************************************************************         
* LOAD DIRECT ACCESS TO DISK                                          *         
***********************************************************************         
LDDAFRST EQU   *                   FIRST TIME CODE FOR LOAD TO DISK             
*                                                                               
LDDAFR1  TM    WDEL,NO             TEST IF LOAD FILE WARNING MSG WANTED         
         BO    LDDAFR1A                                                         
         LHI   R0,C'F'             SET LOADING FILE                             
         L     RF,=A(DALFCHK)                                                   
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDDAFR1A CLI   GLOBAL,C'N'         CHECK IF OK TO LOAD GLOBAL FILE              
         BE    LDDAFR2                                                          
         CLI   LDWRITE,C'N'                                                     
         BE    LDDAFR2                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    LDDAFR2                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSLCK'),DANAMF,DADTFA,(2,0)                 
         L     RE,12(R1)                                                        
         MVC   OPERMSG,0(RE)                                                    
         MVC   CSRESULT,12(R1)                                                  
         MVC   CSRESERR,16(R1)                                                  
         CLI   CSRESULT,2          0,1,2 OK TO LOAD IS FILE                     
         BH    CHKERR                                                           
*                                                                               
LDDAFR2  XC    SVD1HDR(SVDLHDR),SVD1HDR CLEAR HDR REC SAVE INFO                 
         L     R3,ADAREC           CREATE DA FILE HDR REC                       
         USING LDHDRD,R3                                                        
         XC    0(256,R3),0(R3)                                                  
         LR    RF,R3                                                            
         AH    RF,ISKEYL1                                                       
         MVI   0(RF),X'01'         KEY ALL ZEROS WITH X'01' LAST BYTE           
         LA    RE,LDHRECL          GET REC LEN                                  
         STC   RE,2(RF)                                                         
         SH    RE,DAELD            GET ELEMENT LEN                              
         L     RF,ADAREC                                                        
         AH    RF,DAELD                                                         
         MVI   0(RF),1             SET DUMMY ELEMENT CODE AND LENGTH            
         STC   RE,1(RF)                                                         
         MVC   LDHFILE,DANAMF      MOVE IN FILE NAME                            
         MVI   RECRFN,0                                                         
*                                                                               
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTIPLE DA FILES                  
         BNZ   LDDAFR2A                                                         
         LA    RF,LDDA             SET TO RETURN TO NORMAL LOAD                 
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR                                                   
         B     LDDAHAT             GO AND LOAD DA FILE HDR REC                  
*                                                                               
LDDAFR2A TM    MODE,FILE1          LOADING 1ST DA FILE (FILE1)                  
         BZ    LDDAFR2B            NO                                           
         L     RE,ADAREC           YES SET KEY OF FILE1 HDR REC                 
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'01'         KEY ALL ZEROS WITH X'01' LAST BYTE           
         MVC   LDHFILE,F1NAMF                                                   
         LA    RF,LDDA                                                          
         TM    MODE,FILE2+FILE3+FILE4                                           
         BZ    *+8                                                              
         LA    RF,LDDAFR2B         SET TO RETURN FOR FILE2 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE1                                             
         B     LDDAHAT             GO AND LOAD 1ST (FILE1) HDR REC              
*                                                                               
LDDAFR2B TM    MODE,FILE2          LOADING 2ND DA FILE (FILE2)                  
         BZ    LDDAFR2C                                                         
         L     RE,ADAREC           SET KEY OF FILE2 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'02'         KEY ALL ZEROS WITH X'02' LAST BYTE           
         MVC   LDHFILE,F2NAMF                                                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,1                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE2                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         TM    MODE,FILE3+FILE4                                                 
         BZ    *+8                                                              
         LA    RF,LDDAFR2C         SET TO RETURN FOR FILE3 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE2                                             
         B     LDDAHAT             GO AND LOAD 2ND (FILE2) HDR REC              
*                                                                               
LDDAFR2C TM    MODE,FILE3          LOADING 3RD DA FILE (FILE3)                  
         BZ    LDDAFR2D                                                         
         L     RE,ADAREC           SET KEY OF FILE3 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'03'         KEY ALL ZEROS WITH X'03' LAST BYTE           
         MVC   LDHFILE,F3NAMF                                                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,2                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE3                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         TM    MODE,FILE4                                                       
         BZ    *+8                                                              
         LA    RF,LDDAFR2D         SET TO RETURN FOR FILE4 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE3                                             
         B     LDDAHAT             GO AND LOAD 3RD (FILE3) HDR REC              
*                                                                               
LDDAFR2D TM    MODE,FILE4          LOADING 4TH DA FILE (FILE4)                  
         BZ    LDDA                                                             
         L     RE,ADAREC           SET KEY OF FILE3 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'04'         KEY ALL ZEROS WITH X'04' LAST BYTE           
         MVC   LDHFILE,F4NAMF                                                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,3                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE4                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE4                                             
         B     LDDAHAT             GO AND LOAD 4TH (FILE4) HDR REC              
         DROP  R3                                                               
*                                                                               
LDDARET  DC    A(*)                LOAD RETURN ADDRESS                          
*                                                                               
LDDADEL  TM    COUNT,YES+X'40'     COUNT=PURGED SPECIFIED                       
         BNO   LDDADELX                                                         
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LDDADELX                                                         
         L     RE,ADAREC           POINT TO DAREC                               
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'41'         SET PASSING PURGED DA RECORD                 
         STCM  RE,7,1(R1)                                                       
         MVC   4(1,R1),LDFINOS+1   PASS DA FILE NUMBER                          
         BASR  RE,RF               CALL DIRECTORY COUNTING ROUTINE              
         LA    RE,ISREC                                                         
         ST    RE,PLCOUNT                                                       
         MVC   PLCOUNT+4(1),LDFINOS+0                                           
*                                                                               
LDDADELX L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         CLI   PLPURGE+8,C'R'      TEST IF PURGE REQUESTED RETURN               
         BE    LDDA6                                                            
         EJECT                                                                  
***********************************************************************         
* GET NEXT INPUT RECORD FOR LOAD TO DISK                              *         
***********************************************************************         
LDDA     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    LDDA0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         B     LDDAXTRN                                                         
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    LDAEOF              EXTERNAL HAS FINISHED EOF RETURNS            
LDDA0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
*                                                                               
LDDA1    BAS   R9,RITAPE           READ D/A FILE RECORD INTO DAREC              
         TM    TAPETYP,X'01'                                                    
         BZ    LDDA1A                                                           
         TM    TAPETYP,DAFIL       TEST IF DA RECS ON TAPEIN                    
         BO    LDDA1A              YES                                          
         LHI   R0,C'E'             NO SET MODE ERROR                            
         L     RF,=A(DALMCHK)                                                   
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
LDDA1A   TM    RECFLAG,RECPTR+RECIPR                                            
         BZ    LDDA1K                                                           
         BM    LDDA1J                                                           
*                                                                               
LDDA1B   TM    XTRN,YES            TEST IF PASS INDIRECT TO EXTERNAL            
         BZ    LDDA1C                                                           
         TM    SVDFLAG1,LDDQXIPT                                                
         BZ    LDDA1C                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         OI    PLXTRN+4,X'10'      SET SPECIAL IS POINTER IN P9                 
         BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         NI    PLXTRN+4,255-X'10'                                               
         MVI   PLXTRN+8,0          NO RETURNS ALLOWED                           
         CLI   PLXTRN,X'FF'        TEST IF EXTERNAL DELETED RECORD              
         BE    LDDADEL                                                          
*                                                                               
LDDA1C   TM    SVDIPFLG,LDDQPIPT   TEST IF PASS INDIRECT TO LDPURGE             
         BZ    LDDA1J                                                           
         ICM   RF,15,VLDPURGE      PASS CONTROL TO PURGE TEST ROUTINE           
         BZ    LDDA1J                                                           
         LA    R1,PLPURGE                                                       
         MVI   0(R1),1             SET NORMAL CALL                              
         MVI   PLPURGE+8,0         SET NO RETURN                                
         OI    PLPURGE+16,X'10'    SET INDIRECT IS POINTER IN P5                
         BASR  RE,RF                                                            
         NI    PLPURGE+16,255-X'10'                                             
         MVI   PLPURGE+8,0         SET NO RETURN                                
LDDA1D   CLI   PLPURGE,X'FF'       TEST RETURN CODE TO DELETE REC               
         BE    LDDADEL                                                          
LDDA1E   EQU   *                                                                
*                                                                               
LDDA1J   TM    SVDMULTI,LDDQDPTR   TEST I/S POINTERS ALLOWED ON TAPE            
         BZ    LDDA1K                                                           
         L     R4,PLCPTRS+4        R4=A(POINTER BUFFER)                         
         L     RE,ADAREC                                                        
         LH    R1,ISRECL                                                        
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(RE)       MOVE KEY TO BUFFER                           
         AR    R1,R4                                                            
         MVC   0(1,R1),PLCPTRS+8   SET END OF BUFFER                            
         B     LDDAD4              PASS I/S POINTER TO SORT                     
*                                                                               
LDDA1K   TM    RECFLAG,RECHDR      TEST HEADER REC                              
         BZ    LDDA2                                                            
         BRASL RE,SAVEHDR                                                       
*                                                                               
LDDA2    TM    OPNINF,X'80'        TEST IF FIRST REC ON DA TAPE                 
         BZ    LDDA2X                                                           
         NI    OPNINF,X'7F'                                                     
         TM    RECFLAG,RECHDR      EXIT IF FIRST REC NOT A HDR                  
         BZ    LDDA2X                                                           
*                                                                               
LDDA2A   BRASL RE,DALXHDR          TEST IF EXTENDED HEADER RECORD               
*                                                                               
LDDA2B   CLI   OPNINF,1            SAVE FILE NAME IF FIRST INPUT TAPE           
         BNE   LDDA2C                                                           
         L     RE,ADAREC                                                        
         MVC   TAPEFILE,LDHFILE-LDHREC(RE)                                      
*                                                                               
LDDA2C   TM    WNAME,NO            TEST INPUT TAPE FILE NAME WARNING            
         BO    LDDA2D                                                           
         L     RF,=A(DALNCHK)      TEST IF FILE NAME ON TAPE MATCHES            
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDDA2D   TM    WMODE,NO            TEST INPUT TAPE LOAD MODE WARNING            
         BO    LDDA2E                                                           
         LHI   R0,C'F'             SET LOADING FILE                             
         L     RF,=A(DALMCHK)      TEST IF MODES COMPATIBLE                     
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDDA2E   TM    WAGE,NO             TEST INPUT TAPE AGE WARNING                  
         BO    LDDA2X                                                           
         L     RF,=A(DALACHK)      TEST IF TAPE IS TOO OLD                      
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDDA2X   EQU   *                                                                
*                                                                               
LDDAXTRN EQU   *                                                                
LDDA3    TM    XTRN,YES            PASS CONTROL TO EXTERNAL                     
         BZ    LDDA3X                                                           
         TM    RECOVER,YES         SAVE DAREC FOR RECOVERY                      
         BZ    LDDA3A                                                           
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    LDDA3A                                                           
         MVI   DARFLAG,DARLOADQ+DARXTRNQ                                        
         BRASL RE,DARBEF           COPY ORIGINAL INPUT RECORD                   
LDDA3A   L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    LDDA3D                                                           
LDDA3B   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    LDDA3C                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    LDDA3X                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     LDDA3R                                                           
LDDA3C   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    LDDA3D                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    LDDA3X                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     LDDA3R                                                           
LDDA3D   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   PLXTRN,X'FF'        TEST IF RETURN IS DELETE RECORD              
         BNE   LDDA3F                                                           
         TM    RECOVER,YES                                                      
         BZ    LDDA3E                                                           
         MVI   DARFLAG,DARLOADQ+DARXTRNQ+DARDELQ                                
         BRASL RE,DARAFT                                                        
LDDA3E   LA    R1,PLXTRN                                                        
         CLC   1(3,R1),=C'EOF'     TEST IF RETURN FORCES EOF                    
         BE    INPUTEOF                                                         
         B     LDDADEL                                                          
LDDA3F   CLI   PLXTRN,X'FE'        TEST IF RETURN IS CHANGED RECORD             
         BNE   LDDA3G                                                           
         TM    RECOVER,YES                                                      
         BZ    LDDA3G                                                           
         MVI   DARFLAG,DARLOADQ+DARXTRNQ+DARCHAQ                                
         BRASL RE,DARAFT                                                        
LDDA3G   CLI   PLXTRN,X'FD'        TEST IF RETURN IS ADDED RECORD               
         BNE   LDDA3R                                                           
         TM    RECOVER,YES         EXTERNAL ADDED FOR RECOVERY                  
         BZ    LDDA3R                                                           
         MVI   DARFLAG,DARLOADQ+DARXTRNQ+DARADDQ                                
         BRASL RE,DARAFT                                                        
LDDA3R   MVI   RECFLAG,0           RESET REC TYPE FLAG AFTER EXTERNAL           
         L     R1,ADAREC                                                        
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         TM    RECFLAG,RECHDR      TEST HEADER REC                              
         BZ    LDDA4                                                            
         BRASL RE,SAVEHDR                                                       
LDDA3X   EQU   *                                                                
*                                                                               
LDDA4    TM    RECFLAG,RECHDR      TEST HEADER                                  
         BO    LDDADEL                                                          
         TM    SVDMULTI,LDDQPTRL   TEST IF PURGE WANTS TRAILER                  
         BO    LDDA4X                                                           
         TM    RECFLAG,RECTRL      TEST TRAILER                                 
         BO    LDDADEL                                                          
LDDA4X   EQU   *                                                                
*                                                                               
LDDA5    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    LDDA5X                                                           
         L     RE,ADAREC           POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            ADJUST FOR REC LEN                           
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER (0-3)            
         CLI   RECRFN,0                                                         
         BE    LDDA5A                                                           
         CLI   RECRFN,1                                                         
         BE    LDDA5B                                                           
         CLI   RECRFN,2                                                         
         BE    LDDA5C                                                           
         CLI   RECRFN,3                                                         
         BE    LDDA5D                                                           
         B     LDDADEL             DELETE IF DONT KNOW WHICH FILE               
LDDA5A   OI    RECFLAG,FILE1       RECORD COMES FROM 1ST DAFILE                 
         TM    MODE,FILE1                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE1                  
         B     LDDA5X                                                           
LDDA5B   OI    RECFLAG,FILE2       RECORD COMES FROM 2ND DAFILE                 
         TM    MODE,FILE2                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE2                  
         B     LDDA5X                                                           
LDDA5C   OI    RECFLAG,FILE3       RECORD COMES FROM 3RD DAFILE                 
         TM    MODE,FILE3                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE3                  
         B     LDDA5X                                                           
LDDA5D   OI    RECFLAG,FILE4       RECORD COMES FROM 4TH DAFILE                 
         TM    MODE,FILE4                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE2                  
LDDA5X   EQU   *                                                                
*                                                                               
LDDA6    ICM   RF,15,VLDPURGE      PASS CONTROL TO PURGE TEST ROUTINE           
         BZ    LDDA6X                                                           
         CLI   PLPURGE+8,C'R'      TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLPURGE+8,C'Y'      YES SET REQUESTED RETURN CALL                
         B     LDDA6A                                                           
         MVI   PLPURGE+8,0         SET NORMAL CALL IN PARAM LIST                
         TM    RECOVER,YES                                                      
         BZ    LDDA6A                                                           
         MVI   DARFLAG,DARLOADQ+DARPRGEQ                                        
         BRASL RE,DARBEF                                                        
LDDA6A   ICM   RF,15,VLDPURGE                                                   
         LA    R1,PLPURGE                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
         NI    UPDTFLAG,255-UPDTUBLK                                            
         TM    RECFLAG,RECTRL      PURGE CONDITIONALLY GETS TRAILER             
         BZ    LDDA6B                                                           
         CLI   PLPURGE+8,C'R'      IF RETURNING THEN IT'S NOT A TRAILER         
         BNE   LDDADEL                                                          
LDDA6B   CLI   PLPURGE,X'FF'       TEST RETURN CODE TO DELETE REC               
         BNE   LDDA6C                                                           
         TM    RECOVER,YES                                                      
         BZ    LDDADEL                                                          
         MVI   DARFLAG,DARLOADQ+DARPRGEQ+DARDELQ                                
         BRASL RE,DARAFT                                                        
         B     LDDADEL                                                          
LDDA6C   CLI   PLPURGE,X'FE'       TEST RETURN CODE TO CHANGE REC               
         BNE   LDDA6D                                                           
         TM    RECOVER,YES         PURGE ROUTINE CHANGED FOR RECOVERY           
         BZ    LDDA6X                                                           
         MVI   DARFLAG,DARLOADQ+DARPRGEQ+DARCHAQ                                
         BRASL RE,DARAFT                                                        
         B     LDDA6X                                                           
LDDA6D   CLI   PLPURGE,X'FD'       TEST RETURN CODE TO ADD BLOCKED              
         BNE   LDDA6E                                                           
         TM    RECOVER,YES         PURGE ROUTINE ADD FOR RECOVERY               
         BZ    LDDA6X                                                           
         MVI   DARFLAG,DARLOADQ+DARPRGEQ+DARADDQ                                
         BRASL RE,DARAFT                                                        
         B     LDDA6X                                                           
LDDA6E   CLI   PLPURGE,X'FC'       TEST RETURN CODE TO ADD UNBLOCK              
         BNE   LDDA6X                                                           
         OI    UPDTFLAG,UPDTUBLK   SET TO SWITCH MODE TO UNBLOCKED              
         TM    RECOVER,YES         PURGE ROUTINE ADD FOR RECOVERY               
         BZ    LDDA6X                                                           
         MVI   DARFLAG,DARLOADQ+DARPRGEQ+DARADDQ                                
         BRASL RE,DARAFT                                                        
LDDA6X   EQU   *                                                                
*                                                                               
LDDA8    TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    LDDA8X                                                           
         BRASL RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    LDDA8X                                                           
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    LDDADEL             YES                                          
LDDA8X   EQU   *                                                                
*                                                                               
LDDAHAT  EQU   *                   LOAD HDR AND TRL RECS HERE                   
*                                                                               
LDDA9    XC    P1(24),P1           BUILD PARAM LIST FOR LOAD TO DISK            
         L     R1,ADAREC                                                        
         ST    R1,P2               R1=A(DAREC)                                  
         XC    LINKADR(8),LINKADR                                               
         LH    RF,DALINKD                                                       
         LTR   RF,RF               DOES REC HAVE A LINK FIELD                   
         BZ    LDDA9A              NO                                           
         AR    RF,R1               YES SAVE ADDRESS AND VALUE                   
         ST    RF,LINKADR                                                       
         MVC   LINKVAL,0(RF)                                                    
         XC    0(4,RF),0(RF)       CLEAR LINKAGE FIELD                          
LDDA9A   AH    R1,ISKEYL           POINT TO REC LEN FIELD                       
         MVC   P3+2(2),0(R1)                                                    
         MVC   P4,DADTFA                                                        
*                                                                               
LDDA10   ICM   RF,15,VLDSETL       POINT TO REC LEN SET/ADJUST ROUTINE          
         BZ    LDDA10X                                                          
         LA    R1,P1               LENGTH IS AT P3+2(2)                         
         BASR  RE,RF                                                            
LDDA10X  EQU   *                                                                
*                                                                               
LDDA12   ICM   RE,15,LINKADR       RE=A(LINK FIELD)                             
         BZ    LDDA12X                                                          
         TM    ACTIVITY,YES        TEST IF ACTIVITY DATA                        
         BZ    LDDA12X                                                          
         TM    ACTIVITY,X'10'      ACTIVITY=REMOVE                              
         BO    LDDA12X                                                          
         L     RF,ADAREC                                                        
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    *+12                NO                                           
         CLI   0(RF),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BE    LDDA12X                                                          
*                                                                               
LDDA12A  AH    RF,ISKEYL           EXTRACT LOGICAL RECORD LENGTH                
         MVC   DUB(2),0(RF)                                                     
         LH    RF,DUB              TEST IF RECORD TOO BIG FOR ACTIVITY          
         AHI   RF,ACTILNQ                                                       
         CH    RF,DAMAX                                                         
         BH    LDDA12X                                                          
         CH    RF,P3+2             SET PHYSICAL REC LEN FOR ACTIVITY            
         BNH   *+8                                                              
         STH   RF,P3+2                                                          
         AHI   RF,-(ACTILNQ)                                                    
         A     RF,ADAREC           RF=A(ACTIVITY DATA FIELD)                    
         ST    RF,ACTIADR                                                       
         XC    0(ACTILNQ,RF),0(RF)                                              
*                                                                               
LDDA12B  TM    LINKVAL+3,X'01'     ACTIVITY DATA IN RECORD                      
         BZ    LDDA12C                                                          
         TM    ACTIVITY,X'20'      TEST ACTIVITY=INITIALIZE                     
         BO    LDDA12D                                                          
         OI    3(RE),X'01'         SET SAVED INPUT ACTIVITY DATA                
         MVC   0(ACTILNQ,RF),ACTIDAT                                            
         OC    ACTIDAT,ACTIDAT                                                  
         BNZ   LDDA12X                                                          
         B     LDDA12D                                                          
*                                                                               
LDDA12C  EQU   *                   NO ACTIVITY DATA IN RECORD                   
         TM    ACTIVITY,X'20'      TEST ACTIVITY=INITIALIZE                     
         BO    LDDA12D                                                          
         TM    ACTIVITY,X'40'      ACTIVITY=FREEZE                              
         BZ    LDDA12D                                                          
         OI    3(RE),X'01'                                                      
         MVC   0(ACTILNQ,RF),ACTIDAT                                            
         OC    ACTIDAT,ACTIDAT                                                  
         BNZ   LDDA12X                                                          
*                                                                               
LDDA12D  OI    3(RE),X'01'         SET DATE/TIME NOW AS ACTIVITY                
         MVC   0(ACTILNQ,RF),NOWACTI                                            
*                                                                               
LDDA12X  EQU   *                                                                
*                                                                               
LDDAA    LA    R1,P1               LOAD RECORD TO DISK USING DALDDS             
         MVI   P3,0                SET SINGLE DA FILE                           
         MVI   P1+1,0              SET BLOCKED WRITE                            
         TM    UPDTFLAG,UPDTUBLK                                                
         BZ    *+12                                                             
         MVI   P1+1,1              SET UNBLOCKED WRITE                          
         NI    UPDTFLAG,255-UPDTUBLK                                            
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BNZ   LDDAA1                                                           
         L     RF,=V(DALDDS)       LOAD RECORD TO DISK                          
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDDAERR                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOF1             BUMP DISK OUT DA COUNTER                     
         BAS   R9,AGYTOT                                                        
         ST    R1,DACOUNT          SAVE COUNTER IN FILE INFO BLOCK              
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         B     LDDAAX                                                           
*                                                                               
LDDAA1   TM    RECFLAG,FILE1       TEST IF REC IS FILE1 RECORD                  
         BZ    LDDAA2                                                           
         MVI   P3,1                SET RELATIVE FILE NUMBER                     
         MVC   P4,DADTFA           POINT TO FILE1                               
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE1 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDDAERR                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOF1             BUMP DISK OUT DA COUNTER                     
         BAS   R9,AGYTOT                                                        
         ST    R1,F1COUNT          SAVE COUNTER IN FILE1 INFO                   
         MVC   F1LAST,P5                                                        
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         B     LDDAAX                                                           
*                                                                               
LDDAA2   TM    RECFLAG,FILE2       TEST IF REC IS FILE2 RECORD                  
         BZ    LDDAA3              NO                                           
         MVI   P3,2                SET RELATIVE FILE NUMBER                     
         MVC   P4,F2DTFA           POINT TO FILE2 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE2 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDDAERR                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOF2             BUMP DISK OUT DA COUNTER                     
         BAS   R9,AGYTOT                                                        
         ST    R1,F2COUNT          SAVE COUNTER IN FILE2 INFO                   
         MVC   F2LAST,P5                                                        
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         B     LDDAAX                                                           
*                                                                               
LDDAA3   TM    RECFLAG,FILE3       TEST IF REC IS FILE3 RECORD                  
         BZ    LDDAA4              NO                                           
         MVI   P3,3                SET RELATIVE FILE NUMBER                     
         MVC   P4,F3DTFA           POINT TO FILE3 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE3 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDDAERR                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOF3             BUMP DISK OUT DA COUNTER                     
         BAS   R9,AGYTOT                                                        
         ST    R1,F3COUNT          SAVE COUNTER IN FILE3 INFO                   
         MVC   F3LAST,P5                                                        
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         B     LDDAAX                                                           
*                                                                               
LDDAA4   TM    RECFLAG,FILE4       TEST IF REC IS FILE4 RECORD                  
         BZ    LDDAA5              NO                                           
         MVI   P3,4                SET RELATIVE FILE NUMBER                     
         MVC   P4,F4DTFA           POINT TO FILE4 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE4 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDDAERR                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOF4             BUMP DISK OUT DA COUNTER                     
         BAS   R9,AGYTOT                                                        
         ST    R1,F4COUNT          SAVE COUNTER IN FILE4 INFO                   
         MVC   F4LAST,P5                                                        
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         B     LDDAAX                                                           
*                                                                               
LDDAA5   B     LDDADEL             DONT KNOW WHERE TO LOAD THIS SUCKER          
*                                                                               
LDDAERR  L     R1,=A(ERRDA)        PRINT DA FILE RECORD                         
         MVC   P(15),0(R1)                                                      
         GOTO1 =V(HEXO24),DMCB,ADAREC,P+15,50                                   
         GOTO1 =V(PRINTER)                                                      
         LHI   R1,-12              DA DISK ON TRACK WRITE                       
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDDAAX   EQU   *                                                                
*                                                                               
LDDAB    TM    SIZE,YES            PASS CONTROL TO DA REC LEN ROUTINE           
         BZ    LDDABX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDDABX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         L     RE,ADAREC                                                        
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
LDDABX   EQU   *                                                                
*                                                                               
LDDAC    TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    LDDACX                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    LDDACX                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
LDDACX   EQU   *                                                                
*                                                                               
LDDAD    TM    DIRFLAG,DIROUT      CREATE DIRECTORY POINTERS                    
         BZ    LDDADX                                                           
         ICM   RF,15,VLDCPTRS                                                   
         BZ    LDDADX                                                           
         MVI   PLCPTRS+8,0         SET DEFAULT END OF LIST CHR                  
         LA    R1,PLCPTRS                                                       
         BASR  RE,RF                                                            
*                                                                               
         L     R4,4(R1)            POINT TO DIRECTORY LIST                      
         B     LDDAD2                                                           
LDDAD1   CLC   0(1,R4),PLCPTRS+8   TEST RETURNED END OF LIST CHR                
         BE    LDDADX              YES                                          
LDDAD2   LR    RF,R4               POINT TO DIRECTORY ITEM                      
         AH    RF,ISRECL                                                        
         AHI   RF,-4                                                            
         TM    SVDFLAG1,LDDQPDSK   CAN FILE CAN HAVE DATA IN DISK ADDR          
         BZ    LDDAD3              NO                                           
         OC    0(4,RF),0(RF)       YES TEST IF DATA IN DISK ADDR                
         BNZ   *+10                                                             
LDDAD3   MVC   0(4,RF),P5          MOVE IN DISK ADDRESS                         
*                                                                               
LDDAD4   TM    DIRFLAG,DIRSORT     TEST IF DIR REC TO SORTER                    
         BZ    LDDAD5                                                           
         ICM   RF,15,VLDSORT       USE SPECIAL SORT IF RESOLVED                 
         BNZ   *+8                                                              
         L     RF,=V(SORTER)       ELSE USE STANDARD SORT                       
         LA    R1,SORTPL                                                        
         XC    8(4,R1),8(R1)                                                    
         ST    R4,4(R1)                                                         
         OI    4(R1),X'80'         SET PASSING PARM IN P3                       
         OI    8(R1),X'40'         SET RETURN ABEND IN P3+3                     
         GOTO1 (RF),(R1),=C'PUT'                                                
         XR    R0,R0                                                            
         ICM   R0,1,11(R1)         TEST IF ABEND ON SORT PUT                    
         BZ    LDDAD4A                                                          
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR37)        MOVE SORTER ABEND TO MESSAGE                 
*&&US*&& L     RF,=A(ERR38)        USE ERROR WITH OLD U0684 ABEND CODE          
         UNPK  13(4,RF),DUB                                                     
         MVC   18(3,RF),=C'PUT'                                                 
         CHI   R0,16               TEST IF RUN OUT OF SORT WORK                 
         BNE   *+10                                                             
         MVC   21(24,RF),=C'/SORT CAPACITY EXCEEDED?'                           
         LHI   R1,-37              SORTER ABEND                                 
*&&US*&& LHI   R1,-38              SORTER ABEND USING OLD U0684 NUMBER          
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDDAD4A  L     R1,DIST                                                          
         AHI   R1,1                                                             
         ST    R1,DIST             BUMP SORTIN RECORD COUNTER                   
         AH    R4,ISRECL                                                        
         B     LDDAD1              BACK FOR NEXT DIRECTORY REC                  
*                                                                               
LDDAD5   TM    DIRFLAG,DIRTAPE     TEST IF DIR REC TO TAPE                      
         BZ    LDDADX              NO                                           
         BAS   R9,WODIR            YES WRITE TO DIRTAPE                         
         AH    R4,ISRECL                                                        
         B     LDDAD1              BACK FOR NEXT DIRECTORY REC                  
*                                                                               
LDDADX   CLI   PLPURGE+8,C'R'      TEST IF PURGE REQUESTED RETURN               
         BE    LDDA6                                                            
LDDADXX  L     RF,LDDARET          BACK FOR NEXT DA FILE RECORD                 
         BR    RF                                                               
         EJECT                                                                  
***********************************************************************         
* NO MORE INPUT DA FILE RECORDS TO LOAD                               *         
***********************************************************************         
LDAEOF   MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    LDAEOF3                                                          
LDAEOF01 TM    MODE,FILE1          TEST IF LOADING FILE1                        
         BZ    LDAEOF02                                                         
         MVC   DAINF,F1INFO                                                     
         B     LDAEOF3                                                          
LDAEOF02 TM    MODE,FILE2          TEST IF LOADING FILE2                        
         BZ    LDAEOF03                                                         
         MVC   DAINF,F2INFO                                                     
         B     LDAEOF3                                                          
LDAEOF03 TM    MODE,FILE3          TEST IF LOADING FILE3                        
         BZ    LDAEOF04                                                         
         MVC   DAINF,F3INFO                                                     
         B     LDAEOF3                                                          
LDAEOF04 TM    MODE,FILE4          TEST IF LOADING FILE4                        
         BZ    LDAEOF9X                                                         
         MVC   DAINF,F4INFO                                                     
         B     LDAEOF3                                                          
*                                                                               
LDAEOF3  L     R3,ADAREC           CREATE DA FILE TRAILER RECORD                
         USING LDHDRD,R3                                                        
         XC    0(256,R3),0(R3)                                                  
         LH    R1,ISKEYL                                                        
         AHI   R1,-2                                                            
         MVI   0(R3),X'FF'         FIRST BYTE OF KEY IS X'FF'                   
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   1(0,R3),0(R3)       MAKE REST OF KEY FF'S                        
         L     RF,ADAREC                                                        
         AH    RF,ISKEYL                                                        
         LA    RE,LDHRECL          GET REC LEN                                  
         STC   RE,1(RF)                                                         
         SH    RE,DAELD            GET ELEMENT LEN                              
         L     RF,ADAREC                                                        
         AH    RF,DAELD                                                         
         MVI   0(RF),1             SET DUMMY ELEMENT CODE AND LENGTH            
         STC   RE,1(RF)                                                         
         MVC   LDHFILE,DANAMF      MOVE IN FILE NAME                            
         CLC   TAPEDATE,SPACES                                                  
         BE    *+10                                                             
         MVC   LDHDATE(L'TAPEAGE),TAPEAGE SET DATE/TIME OF LOAD TAPE            
         L     RF,DACOUNT                                                       
         AHI   RF,1                                                             
         ST    RF,LDHRECS          MOVE IN RECORD COUNT                         
         LT    RF,DIST                                                          
         BNZ   *+8                                                              
         L     RF,TOIS                                                          
         LTR   RF,RF                                                            
         BZ    *+8                                                              
         AHI   RF,1                                                             
         ST    RF,LDHIRECS         MOVE IN I/S DIRECTORY COUNT                  
         LA    RF,LDAEOF4          SET TO RETURN TO LDAEOF4                     
         ST    RF,LDDARET                                                       
         CLI   DAFNUM,0                                                         
         BE    LDDAHAT                                                          
LDAEOF3A CLI   DAFNUM,1                                                         
         BNE   LDAEOF3B                                                         
         MVI   RECFLAG,RECTRL+FILE1                                             
         MVI   0(R3),X'FF'         FIRST BYTE OF KEY IS X'FF'                   
         B     LDDAHAT                                                          
LDAEOF3B CLI   DAFNUM,2                                                         
         BNE   LDAEOF3C                                                         
         MVI   RECFLAG,RECTRL+FILE2                                             
         MVI   0(R3),X'FE'         FIRST BYTE OF KEY IS X'FE'                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,1                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE2                   
         B     LDDAHAT                                                          
LDAEOF3C CLI   DAFNUM,3                                                         
         BNE   LDAEOF3D                                                         
         MVI   RECFLAG,RECTRL+FILE3                                             
         MVI   0(R3),X'FD'         FIRST BYTE OF KEY IS X'FD'                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,2                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE3                   
         B     LDDAHAT                                                          
LDAEOF3D CLI   DAFNUM,4                                                         
         BNE   LDAEOF3E                                                         
         MVI   RECFLAG,RECTRL+FILE4                                             
         MVI   0(R3),X'FC'         FIRST BYTE OF KEY IS X'FC'                   
         L     RE,ADAREC                                                        
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,3                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE4                   
         B     LDDAHAT                                                          
LDAEOF3E DC    H'0'                                                             
*                                                                               
LDAEOF4  MVI   P1,X'FF'            WRITE OUT LAST BLOCK                         
         MVC   P3(1),DAFNUM        SET RELATIVE FILE NUMBER                     
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)                                                    
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDDAERR                                                          
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         LA    RE,F1LAST           SAVE IN FILE1 INFO BLOCK                     
         CLI   DAFNUM,2                                                         
         BNE   *+8                                                              
         LA    RE,F2LAST           OR FILE2 INFO BLOCK                          
         CLI   DAFNUM,3                                                         
         BNE   *+8                                                              
         LA    RE,F3LAST           OR FILE3 INFO BLOCK                          
         CLI   DAFNUM,4                                                         
         BNE   *+8                                                              
         LA    RE,F4LAST           OR FILE4 INFO BLOCK                          
         MVC   0(L'DALAST,RE),DALAST                                            
*                                                                               
LDAEOF5  MVC   P1,=A(RDID)         UPDATE HEADER RECORD                         
         L     R3,ADAREC                                                        
         USING LDHDRD,R3                                                        
         ST    R3,P2                                                            
         MVC   P4,DADTFA                                                        
         LA    R1,P6                                                            
         ST    R1,P5                                                            
*                                                                               
         MVC   P6,=X'00010101'     DISK ADDR OF 16-BIT FILE HEADER REC          
         TM    DAFLAG,DTFTBIGF+DTFTBIG                                          
         BZ    LDAEOF5C            16-BIT                                       
         BO    LDAEOF5B            22-BIT                                       
         TM    DAFLAG,DTFTBIGF                                                  
         BO    LDAEOF5A            20-BIT                                       
         MVC   P6,=X'00004101'     DISK ADDR OF 18-BIT FILE HEADER REC          
         B     LDAEOF5C                                                         
LDAEOF5A MVC   P6,=X'00001101'     DISK ADDR OF 20-BIT FILE HEADER REC          
         B     LDAEOF5C                                                         
LDAEOF5B MVC   P6,=X'00000501'     DISK ADDR OF 22-BIT FILE HEADER REC          
*                                                                               
LDAEOF5C CLI   LDWRITE,C'N'        TEST WRITE=NO SET                            
         BE    LDAEOF5D                                                         
         LA    R1,P1               READ HEADER RECORD                           
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDAEOF5K            ERROR IF CANT READ HEADER REC                
         CLC   LDHFILE,DANAMF                                                   
         BNE   LDAEOF5K            ERROR IF NAMES DONT AGREE                    
*                                                                               
LDAEOF5D ICM   RE,15,DALAST        SET NEXT AVAIL TRACK IN HEADER REC           
         TM    DAFLAG,DTFTBIG+DTFTBIGF                                          
         BZ    LDAEOF5G            16-BIT                                       
         BO    LDAEOF5F            22-BIT                                       
         TM    DAFLAG,DTFTBIGF                                                  
         BO    LDAEOF5E            20-BIT                                       
         SRL   RE,14               18-BIT                                       
         B     LDAEOF5H                                                         
LDAEOF5E SRL   RE,12                                                            
         B     LDAEOF5H                                                         
LDAEOF5F SRL   RE,10                                                            
         B     LDAEOF5H                                                         
LDAEOF5G SRL   RE,16                                                            
LDAEOF5H ST    RE,FULL1            SAVE NUMBER OF TRACKS USED                   
         AHI   RE,1                PLUS ONE FOR NEXT AVAILABLE TRACK            
         STCM  RE,3,LDHTRKS        SET LOW ORDER 16 BITS                        
         STCM  RE,4,LDHTRKS1       SET HIGH ORDER 8 BITS                        
*                                                                               
LDAEOF5J MVC   LDHMODE,MODE        SET LOAD MODE VALUE IN HDR                   
         MVC   LDHDATE,DATEVAL     SET DATE LOADED IN HDR                       
         MVC   LDHTIME,NOWTIME     SET TIME LOADED IN HDR                       
         MVC   LDHACTDT,NOWACTI+2  SET ACTIVITY DATE/TIME IN HDR                
         MVC   LDHRECS,DACOUNT     SET RECORD COUNT IN HDR                      
         LT    RF,DIST                                                          
         BNZ   *+8                                                              
         L     RF,TOIS                                                          
         ST    RF,LDHIRECS         SET I/S DIRECTORY COUNT IN HDR               
*                                                                               
         LA    RF,SVD1HDR          RESTORE SAVED HEADER INFO                    
         CLI   DAFNUM,2                                                         
         BNE   *+8                                                              
         LA    RF,SVD2HDR                                                       
         CLI   DAFNUM,3                                                         
         BNE   *+8                                                              
         LA    RF,SVD3HDR                                                       
         CLI   DAFNUM,4                                                         
         BNE   *+8                                                              
         LA    RF,SVD4HDR                                                       
         MVC   LDHUSER,0(RF)                                                    
         DROP  R3                                                               
*                                                                               
         CLI   LDWRITE,C'N'        TEST WRITE=NO SET                            
         BE    LDAEOF5X                                                         
         MVC   P1,=A(WTID)         WRITE DA FILE HDR REC BACK                   
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BZ    LDAEOF5X                                                         
*                                                                               
LDAEOF5K L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         LHI   R1,-22              ERROR ON DA DISK HDR READ/WRITE              
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDAEOF5X EQU   *                                                                
*                                                                               
LDAEOF6  CLI   LDWRITE,C'N'        TEST WRITE=NO SET                            
         BE    LDAEOF6X                                                         
         MVC   P1,=A(WTERASE)      ERASE REST OF DA DISK FILE                   
         L     R1,AF1TRK                                                        
         ST    R1,P2                                                            
         MVI   P2,X'FF'                                                         
         XC    P3,P3                                                            
         MVC   P4,DADTFA                                                        
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DALAST                                                        
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         NI    P3+1,X'FB'          RESET EOF FLAG                               
         OC    P3(2),P3                                                         
         BZ    LDAEOF6X                                                         
LDAEOF6A L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         LHI   R1,-13              DA DISK ERASE FAILURE                        
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDAEOF6X EQU   *                                                                
*                                                                               
LDAEOF7  TM    BALCHECK,YES        FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    LDAEOF7X                                                         
         ICM   RF,15,VLDBALCK                                                   
         BZ    LDAEOF7X                                                         
         CLI   DONBALCK,C'Y'                                                    
         BE    LDAEOF7X                                                         
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
LDAEOF7X EQU   *                                                                
*                                                                               
LDAEOF8  MVC   INFOMSG1+8(L'DANAMF),DANAMF                                      
         MVC   INFOTRKA,SPACES                                                  
         MVC   INFOTRKU,SPACES                                                  
         MVC   INFOTRKL,SPACES                                                  
         MVC   INFOTRKF,SPACES                                                  
*                                                                               
         ICM   R2,15,DADTFA                                                     
         BZ    LDAEOF8E                                                         
         USING DTFPHD,R2                                                        
         LA    R1,DMTX                                                          
         USING EXTENTD,R1                                                       
         TM    DIND,DINDXAM        TEST HIGH CORE EXTENT MATRIX                 
         BZ    *+8                                                              
         ICM   R1,15,DMTX                                                       
         SAM31                                                                  
         SR    RF,RF               RF=NUM OF TRACKS ALLOCATED                   
         SR    RE,RE                                                            
LDAEOF8A CLI   0(R1),X'FF'                                                      
         BE    LDAEOF8B                                                         
         ICM   RE,3,EXT#TRKS       PICK UP NUMBER OF TRACKS                     
         AR    RF,RE                                                            
         LA    R1,EXTLNQ(R1)                                                    
         B     LDAEOF8A                                                         
         DROP  R1                                                               
*                                                                               
LDAEOF8B SAM24                                                                  
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKA,DUB        DA TRACKS ALLOCATED                          
         L     RE,FULL1                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKU,DUB        DA TRACKS USED                               
         SR    RF,RE                                                            
         BP    *+6                                                              
         SR    RF,RF                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKL,DUB        DA TRACKS AVAILABLE                          
*                                                                               
         MVC   INFOTRKF,=C'16-BIT'                                              
         TM    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         BZ    LDAEOF8E            16-BIT                                       
         BO    LDAEOF8D            22-BIT                                       
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    LDAEOF8C            20-BIT                                       
         MVC   INFOTRKF(2),=C'18'                                               
         B     LDAEOF8E                                                         
LDAEOF8C MVC   INFOTRKF(2),=C'20'                                               
         B     LDAEOF8E                                                         
LDAEOF8D MVC   INFOTRKF(2),=C'22'                                               
LDAEOF8E MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(INFOMS1L),INFOMSG1                                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
LDAEOF9  CLI   DAFNUM,1            JUST DONE EOF FOR FILE1                      
         BE    LDAEOF02                                                         
         CLI   DAFNUM,2            JUST DONE EOF FOR FILE2                      
         BE    LDAEOF03                                                         
         CLI   DAFNUM,3            JUST DONE EOF FOR FILE3                      
         BE    LDAEOF04                                                         
LDAEOF9X EQU   *                                                                
*                                                                               
LDAEOFA  TM    DIRFLAG,DIRSORT     TEST IF DIR RECS PUT TO SORTER               
         BZ    LDAEOFAX            NO                                           
         MVI   XTRN,NO             YES RESET NO EXTERNAL                        
         L     R0,=A(ISREC)        CLEAR DIR RECORD I/O AREAS                   
         L     R1,=A(ISRECX-ISREC)                                              
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         XC    LISREC(ISMAX),LISREC                                             
         B     LDISNXT             AND GET DIR RECS FROM SORTER                 
         TM    DIRFLAG,DIRTAPE     TEST IF DIR RECS PUT TO TAPE                 
         BZ    *+8                 NO                                           
         BAS   R9,CLSDIR           YES CLOSE UNSORTED DIRTAPE                   
LDAEOFAX EQU   *                                                                
*                                                                               
LDAEOFB  L     RF,=A(PRTCTRS)      PRINT DA LOAD COUNTERS                       
         BASR  RE,RF                                                            
         L     RF,=A(SMFDATA)      OUTPUT SMF RECORD COUNTS AND MONEY           
         BASR  RE,RF                                                            
*                                                                               
LDAEOFC  TM    SIZE,YES            FINAL CALL OF DA REC LEN ROUTINE             
         BZ    LDAEOFCX                                                         
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDAEOFCX                                                         
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
LDAEOFCX EQU   *                                                                
*                                                                               
LDAEOFD  CLI   GLOBAL,C'N'         CHECK IF NEED TO UNLOCK GLOBAL FILE          
         BE    NXTPARM                                                          
         CLI   LDWRITE,C'N'                                                     
         BE    NXTPARM                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    NXTPARM                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSUNL')                                     
         B     NXTPARM                                                          
         EJECT                                                                  
***********************************************************************         
* LOAD INDEX SEQUENTIAL FILE TO DISK                                  *         
***********************************************************************         
LDISFRST EQU   *                   FIRST TIME CODE FOR IS LOAD TO DISK          
*                                                                               
LDISFR1  TM    WDEL,NO             TEST IF LOAD FILE WARNING MSG WANTED         
         BO    LDISFR2                                                          
         LHI   R0,C'D'             SET LOADING DIRECTORY                        
         L     RF,=A(DALFCHK)                                                   
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDISFR2  CLI   GLOBAL,C'N'         CHECK IF OK TO LOAD GLOBAL FILE              
         BE    LDIS                                                             
         CLI   LDWRITE,C'N'                                                     
         BE    LDIS                                                             
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    LDIS                                                             
         GOTO1 (RF),DMCB,(X'00',=C'DMSLCK'),ISNAMF,ISDTFA,(2,0)                 
         L     RE,12(R1)                                                        
         MVC   OPERMSG,0(RE)                                                    
         MVC   CSRESULT,12(R1)                                                  
         MVC   CSRESERR,16(R1)                                                  
         CLI   CSRESULT,2          0,1,2 OK TO LOAD IS FILE                     
         BH    CHKERR                                                           
         EJECT                                                                  
***********************************************************************         
* GET NEXT IS FILE INPUT RECORD FOR LOAD TO DISK                      *         
***********************************************************************         
LDIS     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    LDIS0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         B     LDISXTRN                                                         
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    LISEOF              EXTERNAL HAS FINISHED EOF RETURNS            
LDIS0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
         MVI   LRECFLAG,X'80'      SAVE LAST IS REC AFTER LOAD TO DISK          
*                                                                               
LDIS1    BAS   R9,RITAPE           READ IS FILE RECORD INTO ISREC               
         TM    TAPETYP,X'01'                                                    
         BZ    LDIS2                                                            
         TM    TAPETYP,DAFIL       TEST IF DA RECS ON TAPEIN                    
         BZ    LDIS2               NO                                           
         TM    LDFIATS+0,VLISQ     YES OK FOR V/L IS FILE                       
         BO    LDIS2                                                            
         LHI   R0,C'D'             SET MODE ERROR                               
         L     RF,=A(DALMCHK)                                                   
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDISXTRN EQU   *                                                                
LDIS2    TM    XTRN,YES            PASS CONTROL TO IS EXTERNAL                  
         BZ    LDIS2X                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    LDIS2C                                                           
LDIS2A   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    LDIS2B                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    *+6                                                              
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     LDIS2X                                                           
LDIS2B   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    LDIS2C                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    *+6                                                              
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     LDIS2X                                                           
LDIS2C   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'         TEST IF RETURN IS DELETE RECORD              
         BNE   LDIS2X                                                           
         CLC   1(3,R1),=C'EOF'     TEST IF RETURN FORCES EOF                    
         BE    INPUTEOF                                                         
LDIS2D   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         B     LDIS                                                             
LDIS2X   EQU   *                                                                
*                                                                               
LDIS5    CLI   PLCOUNT,X'FF'       LDCOUNT HANDLING DUPLICATES ETC              
         BE    LDIS7                                                            
         LH    R1,ISKEYL1          CHECK LOAD IS SEQUENCE                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC                                                  
         BH    LDIS7                                                            
         BL    LDIS6B                                                           
*                                                                               
LDIS6    L     RF,=A(WARNDUPK)     DUPLICATE KEY                                
         MVC   WORK(60),0(RF)                                                   
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,DUPKEY                                                        
         AHI   R1,1                                                             
         ST    R1,DUPKEY                                                        
         C     R1,MAX_DUPK         TEST MAXIMUM VALUE                           
         BNE   LDIS6A                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR24)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,24               MAX DUPLICATE KEY ERRORS REACHED             
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDIS6A   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    LDIS6H                                                           
         B     LDIS6E                                                           
*                                                                               
LDIS6B   L     RF,=A(WARNSEQE)     SEQUENCE ERROR                               
         MVC   WORK(60),0(RF)                                                   
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,SEQERR                                                        
         AHI   R1,1                                                             
         ST    R1,SEQERR                                                        
         C     R1,MAX_SEQE         TEST MAXIMUM VALUE                           
         BNE   LDIS6C                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR25)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,25               MAX SEQUENCE ERRORS REACHED                  
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDIS6C   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    LDIS6H                                                           
*                                                                               
LDIS6E   LH    R0,ISRECL           HEX OUT IS REC (MAX 54 BYTES)                
         LTR   R0,R0               TEST V/L RECORDS                             
         BNZ   *+16                LEN IS 0 FOR V/L RECORDS                     
         LA    R1,ISREC            POINT TO RECORD                              
         AH    R1,ISKEYL           PLUS KEYLEN GIVES ADDRESS OF LENGTH          
         LH    R0,0(R1)            GET LENGTH IN REG                            
         CHI   R0,54                                                            
         BL    *+8                                                              
         LHI   R0,54                                                            
         MVC   P(60),WORK                                                       
         GOTO1 =V(HEXO24),DMCB,ISREC,P+17,(R0)                                  
         MVC   WORK(80),P                                                       
         GOTO1 =V(PRINTER)                                                      
         MVC   P(80),WORK                                                       
LDIS6F   CLC   P(3),=C'SEQ'        TEST SEQUENCE CHECK                          
         BNE   LDIS6H                                                           
         CLC   SEQERR,=F'1'        PRINT PREVIOUS KEY IF FIRST SEQ ERR          
         BE    LDIS6G                                                           
         MVC   P(80),SPACES                                                     
         B     LDIS6H                                                           
LDIS6G   MVC   P(7),=C'    PRV'                                                 
         GOTO1 =V(HEXO24),DMCB,LISREC,P+17,(R0)                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
LDIS6H   MVC   ISREC(ISMAX),LISREC RESET IS REC TO LAST IS REC LOADED           
         B     LDISNXT                                                          
*                                                                               
LDIS7    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    LDIS7X                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LDIS7X                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),1                                                          
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'                                                      
         BNE   LDIS7X                                                           
LDIS7A   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         B     LDISNXT                                                          
LDIS7X   EQU   *                                                                
*                                                                               
LDIS8    TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BZ    LDISA               NO JUST LOAD TO DISK                         
         CLI   LDFINOS+0,CTFILE#                                                
         BNE   LDIS16                                                           
         TM    RECFLAG,RECHDR                                                   
         BZ    LDIS14                                                           
         BRASL RE,DALXHDR          PROCESS CTFILE HEADER RECORD                 
*                                                                               
LDIS10   CLI   OPNINF,1            SAVE FILE NAME IF FIRST INPUT TAPE           
         BNE   LDIS11                                                           
         LA    RE,ISREC                                                         
         MVC   TAPEFILE,LDHFILE-LDHREC(RE)                                      
*                                                                               
LDIS11   TM    WNAME,NO            TEST INPUT TAPE FILE NAME WARNING            
         BO    LDIS12                                                           
         L     RF,=A(DALNCHK)      TEST IF FILE NAME ON TAPE MATCHES            
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDIS12   TM    WMODE,NO            TEST INPUT TAPE LOAD MODE WARNING            
         BO    LDIS13                                                           
         LHI   R0,C'F'             SET LOADING FILE                             
         L     RF,=A(DALMCHK)      TEST IF MODES COMPATIBLE                     
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
*                                                                               
LDIS13   TM    WAGE,NO             TEST INPUT TAPE AGE WARNING                  
         BO    LDIS16                                                           
         L     RF,=A(DALACHK)      TEST IF TAPE IS TOO OLD                      
         BASR  RE,RF                                                            
         BNE   EOJ                 EXIT IF OPERATOR ENTERED EOJ/CANCEL          
         B     LDIS16                                                           
*                                                                               
LDIS14   TM    RECFLAG,RECTRL      TEST IF CTFILE TRAILER RECORD                
         BZ    LDIS16                                                           
         BRASL RE,CTFTRL           BUILD NEW CTFILE TRAILER RECORD              
*                                                                               
LDIS16   ICM   RF,15,VLDPURGE      PASS CONTROL TO PURGE TEST ROUTINE           
         BZ    LDIS16X                                                          
         CLI   PLPURGE+8,C'R'      TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLPURGE+8,C'Y'      YES SET REQUESTED RETURN CALL                
         B     LDIS16A                                                          
         MVI   PLPURGE+8,0         SET NORMAL CALL IN PARAM LIST                
LDIS16A  ICM   RF,15,VLDPURGE                                                   
         LA    R1,PLPURGE                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
LDIS16B  CLI   PLPURGE,X'FF'       TEST RETURN CODE TO DELETE REC               
         BNE   LDIS16X                                                          
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         CLI   PLPURGE+8,C'R'      TEST IF RETURN REQUESTED                     
         BE    LDIS16                                                           
         B     LDISNXT                                                          
LDIS16X  EQU   *                                                                
*                                                                               
LDIS17   TM    CHECK,YES           PASS CONTROL TO IS REC CHECK ROUTINE         
         BZ    LDIS17X                                                          
         BRASL RE,RISVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    LDIS17X                                                          
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    LDIS7A              YES                                          
LDIS17X  EQU   *                                                                
*                                                                               
LDIS18   TM    SIZE,YES            PASS CONTROL TO IS REC LEN ROUTINE           
         BZ    LDIS18X                                                          
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDIS18X                                                          
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         LA    RE,ISREC                                                         
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
LDIS18X  EQU   *                                                                
*                                                                               
LDIS19   TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    LDIS19X                                                          
         ICM   RF,15,VLDBALCK                                                   
         BZ    LDIS19X                                                          
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
LDIS19X  EQU   *                                                                
*                                                                               
LDISA    XC    P1(24),P1           LOAD IS FILE RECORD                          
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,P1                                                            
         L     RF,=V(ISLDDS)       LOAD TO DISK                                 
         BASR  RE,RF                                                            
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   LDISERR                                                          
         LA    R1,ISREC            SET AGY/CPY RECORD TYPE FLAGS                
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOIS             BUMP DISK OUT IS COUNTER                     
         BAS   R9,AGYTOT                                                        
         B     LDISA1                                                           
LDISERR  L     R1,=A(ERRIS)        PRINT IS RECORD                              
         MVC   P(15),0(R1)                                                      
         LH    R0,ISRECL                                                        
         CHI   R0,54               ACCDIR=42+8+4 IS THE BIGGEST                 
         BL    *+8                                                              
         LHI   R0,54                                                            
         TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BZ    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXO24),DMCB,ISREC,P+15,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
         LHI   R1,-14              IS DISK WRITE ERROR                          
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDISA1   TM    LRECFLAG,X'80'      TEST SAVE IS REC AFTER WRITE                 
         BZ    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE LAST REC ACTUALLY LOADED                
LDISAX   EQU   *                                                                
*                                                                               
LDISNXT  CLI   PLCOUNT,X'FE'       SECOND LDCOUNT CALL REQUIRED                 
         BE    LDIS7                                                            
         TM    DIRFLAG,DIRSORT     TEST IF NEXT IS FILE REC FROM SORT           
         BZ    LDIS                NO GO GET IT FROM INPUT TAPE                 
*                                                                               
         TM    LRECFLAG,X'80'      TEST SAVE IS REC AFTER WRITE                 
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE IS REC BEFORE READ                      
         ICM   RF,15,VLDSORT       USE SPECIAL SORT IF RESOLVED                 
         BNZ   *+8                                                              
         L     RF,=V(SORTER)       ELSE USE STANDARD SORT                       
         LA    R1,SORTPL                                                        
         XC    4(8,R1),4(R1)                                                    
         OI    4(R1),X'80'         SET PASSING PARM IN P3                       
         OI    8(R1),X'40'         SET RETURN ABEND IN P3+3                     
         GOTO1 (RF),(R1),=C'GET'                                                
         XR    R0,R0                                                            
         ICM   R0,1,11(R1)         TEST IF ABEND ON SORT GET                    
         BZ    LDISNXT1                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR37)        MOVE SORTER ABEND TO MESSAGE                 
         UNPK  13(4,RF),DUB                                                     
         MVC   18(3,RF),=C'GET'                                                 
         LHI   R1,-37              SORTER ABEND                                 
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LDISNXT1 ICM   RF,15,4(R1)                                                      
         BZ    LDISNXT2            END OF SORT FILE                             
         LH    RE,ISRECL                                                        
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RF)      MOVE RECORD FROM SORT TO ISREC               
*                                                                               
         L     R1,DOST             BUMP SORT OUTPUT COUNTER                     
         AHI   R1,1                                                             
         ST    R1,DOST                                                          
*                                                                               
         TM    DIRFLAG,DIRTAPE     TEST IF SORTED DIRTAPE OUTPUT                
         BZ    LDIS5               NO                                           
         LA    R4,ISREC            YES POINT TO IS REC                          
         BAS   R9,WODIR                                                         
         TM    MODE,ISFIL          LOADING IS DISK FILE                         
         BO    LDIS5               YES                                          
         B     LDISNXT             NO GO GET NEXT IS REC FROM SORT              
*                                                                               
LDISNXT2 TM    DIRFLAG,DIRTAPE     TEST IF DIR RECS PUT TO TAPE                 
         BZ    LISEOF                                                           
         BAS   R9,CLSDIR                                                        
         TM    MODE,ISFIL          TEST IF LOADING IS DISK FILE                 
         BZ    LDAEOFB             NO BACK TO DA FILE EOF LOGIC                 
         EJECT                                                                  
***********************************************************************         
* NO MORE IS FILE RECORDS TO LOAD                                     *         
***********************************************************************         
LISEOF   MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         CLI   LISREC,X'FF'        CREATE EOF REC IF MISSING                    
         BE    LISEOF1                                                          
*                                                                               
LISEOF0  CLI   LDFINOS+0,CTFILE#                                                
         BNE   *+14                                                             
         BRASL RE,CTFTRL           BUILD NEW CTFILE TRAILER RECORD              
         B     LISEOF0A                                                         
         LH    R1,ISKEYL           BUILD EOF KEY                                
         AHI   R1,-2                                                            
         MVI   ISREC,X'FF'                                                      
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC+1(0),ISREC                                                 
         TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BZ    LISEOF0A                                                         
         LA    RE,ISREC+2(R1)      POINT TO RECORD LENGTH                       
         LA    R0,5(R1)                                                         
         STH   R0,0(RE)            SET LEN TO L'KEY+2+1                         
         XC    2(3,RE),2(RE)                                                    
*                                                                               
LISEOF0A XC    P1(24),P1           LOAD IS FILE EOF REC                         
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,P1                                                            
         L     RF,=V(ISLDDS)                                                    
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDISERR                                                          
         LA    R1,ISREC            SET RECORD TYPE FLAG                         
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         LA    R1,DOIS             BUMP DISK OUT IS COUNTER                     
         BAS   R9,AGYTOT                                                        
         L     RF,=A(WARNEOFI)     EOF REC IS WRITE ERROR                       
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
*                                                                               
LISEOF1  L     R5,ISDTFA                                                        
         USING ISDTF,R5                                                         
         MVC   INFOMSG2+8(8),ISNAMF                                             
         LA    R2,ISXTNTPD         POINT TO LAST PD EXTENT                      
         USING EXTENTD,R2                                                       
         TM    ISFTYPE,ISFTPDOV    TEST FOR IXPDOV FILE                         
         BZ    *+8                 NO                                           
         LA    R2,ISXTNT           POINT TO START OF EXTENTS                    
         SR    R1,R1                                                            
         SR    RF,RF                                                            
LISEOF1A CLI   0(R2),X'FF'                                                      
         BE    LISEOF1B                                                         
         ICM   R1,3,EXT#TRKS                                                    
         TM    ISFTYPE,ISFTBIGF    20-BIT HAS NUM OF TRACKS PER EXTENT          
         BO    *+6                                                              
         SR    RF,RF                                                            
         AR    RF,R1                                                            
         LA    R2,EXTLNQ(R2)                                                    
         B     LISEOF1A                                                         
         DROP  R2                                                               
*                                                                               
LISEOF1B CVD   RF,DUB              RF=NUM OF PD TRACKS ALLOCATED                
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTA,DUB        PD TRACKS ALLOCATED                          
         SR    RE,RE                                                            
         ICM   RE,3,ISPDLAST       16-BIT                                       
         TM    ISFTYPE,ISFTBIGF    20-BIT                                       
         BZ    LISEOF1C                                                         
         ICM   RE,15,=V(ISLEOFS)   SAVED EOFS FROM 20-BIT ISLDDS                
         ICM   RE,7,0(RE)          SVPDLAST                                     
         SRL   RE,4                                                             
*                                                                               
LISEOF1C CVD   RE,DUB              RE=NUM OF PD TRACKS USED                     
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTU,DUB        PD TRACKS USED                               
         SR    RF,RE                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTL,DUB        PD TRACKS AVAILABLE                          
         MVC   INFOPDTF,=C'16-BIT'                                              
         TM    ISFTYPE,ISFTBIGF                                                 
         BZ    *+10                                                             
         MVC   INFOPDTF(2),=C'20'                                               
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(INFOMS2L),INFOMSG2                                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         TM    ISFTYPE,ISFTBIGF    20-BIT                                       
         BZ    LISEOF1D                                                         
         ICM   RE,15,=V(ISLEOFS)   SAVED EOFS FROM 20-BIT ISLDDS                
         ICM   RE,7,4(RE)          SVIXLAST                                     
         SRL   RE,4                                                             
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTTTU,DUB        TOTAL TRACKS USED                            
         ICM   RE,15,=V(ISLEOFS)                                                
         SR    RF,RF                                                            
         SR    R1,R1                                                            
         ICM   R1,7,0(RE)          SVPDLAST                                     
         ICM   RE,7,4(RE)          SVIXLAST                                     
         SR    RE,R1                                                            
         SRL   RE,4                                                             
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOIXTU,DUB        INDEX TRACKS USED                            
         MVC   P(INFOMS4L),INFOMSG4                                             
         GOTO1 =V(PRINTER)                                                      
         B     LISEOF1E                                                         
*                                                                               
LISEOF1D MVC   INFOMC1L,=C'CYL'    SET CYL/MST INDEX SIZE                       
         MVC   INFOMC2L,=C'MST'                                                 
         TM    ISINDXTY,X'01'                                                   
         BZ    *+16                                                             
         MVC   INFOMC1L,=C'MST'                                                 
         MVC   INFOMC2L,=C'CYL'                                                 
         MVC   INFOMC1T,=C'BYTES'                                               
         TM    ISINDXTY,X'02'                                                   
         BZ    *+10                                                             
         MVC   INFOMC1T,=C'DUBWS'                                               
         MVC   INFOMC2T,INFOMC1T                                                
         SR    R0,R0                                                            
         ICM   R0,3,ISINDXLN                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC1U,DUB                                                     
         SR    R0,R0                                                            
         ICM   R0,3,ISCILN+2                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC2U,DUB                                                     
         MVC   P(INFOMS3L),INFOMSG3                                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
LISEOF1E L     RF,=A(PRTCTRS)      PRINT IS LOAD COUNTERS                       
         BASR  RE,RF                                                            
         L     RF,=A(SMFDATA)      OUTPUT SMF RECORD COUNTS AND MONEY           
         BASR  RE,RF                                                            
         DROP  R5                                                               
*                                                                               
LISEOF2  TM    SIZE,YES            FINAL CALL OF DA REC LEN ROUTINE             
         BZ    LISEOF2X                                                         
         ICM   RF,15,VLDSIZE                                                    
         BZ    LISEOF2X                                                         
         TM    MODE,DAFIL                                                       
         BO    *+12                                                             
         TM    LDFIATS+0,VLISQ     FINAL CALL FOR V/L IS FILE ALSO              
         BZ    LISEOF2X                                                         
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
LISEOF2X EQU   *                                                                
*                                                                               
LISEOF3  TM    BALCHECK,YES        FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    LISEOF3X                                                         
         TM    MODE,DAFIL                                                       
         BO    *+12                                                             
         TM    LDFIATS+0,VLISQ     FINAL CALL FOR V/L IS FILE ALSO              
         BZ    LISEOF3X                                                         
         CLI   DONBALCK,C'Y'                                                    
         BE    LISEOF3X                                                         
         ICM   RF,15,VLDBALCK                                                   
         BZ    LISEOF3X                                                         
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
LISEOF3X EQU   *                                                                
*                                                                               
LISEOF4  TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    LISEOF4X                                                         
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LISEOF4X                                                         
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'FF'                                                      
         LA    RE,ISNAMF                                                        
         ST    RE,4(R1)                                                         
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
LISEOF4X EQU   *                                                                
*                                                                               
LISEOF5  TM    DIRFLAG,DIRSORT     CHECK SORTIN EQ SORTOUT                      
         BZ    LISEOF5X                                                         
         CLC   DIST,DOST                                                        
         BE    LISEOF5X                                                         
         LHI   R1,-15              SORTIN NEQ SORTOUT                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
LISEOF5X EQU   *                                                                
*                                                                               
         CLI   GLOBAL,C'N'         CHECK IF NEED TO UNLOCK GLOBAL FILE          
         BE    NXTPARM                                                          
         CLI   LDWRITE,C'N'                                                     
         BE    NXTPARM                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    NXTPARM                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSUNL')                                     
         B     NXTPARM             BACK FOR NEXT SET OF PARAM CARDS             
                                                                                
CHKERR   L     RF,=A(ERR17)        OUTPUT DMSECHK ERROR MESSAGE                 
         MVC   0(48,RF),OPERMSG                                                 
         LHI   R1,-17              DMSECHK GLOBAL FILE ERROR MESSAGE            
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
         EJECT                                                                  
***********************************************************************         
* DUMP TO TAPE FROM DISK (OR TAPE)                                    *         
***********************************************************************         
DUMPFRST EQU   *                   FIRST TIME CODE FOR DUMP FROM DISK           
         XC    SVD1ACT(SVDLACT),SVD1ACT                                         
*                                                                               
DUMPFR1  XC    Q1(24),Q1           INITIALISE DA PARAM LIST                     
         MVC   Q1,=A(RDIDTRK)                                                   
         L     R1,ADAREC                                                        
         ST    R1,Q2                                                            
         MVC   Q4,DADTFA                                                        
         L     R1,AF1TRK                                                        
         ST    R1,Q6                                                            
         TM    TRACK,YES           TEST IF TRACK=NO INPUT                       
         BO    *+10                                                             
         MVC   Q1,=A(RDID)         SET FOR NO FULL TRACK I/O                    
*                                                                               
DUMPFR2  XC    P1(24),P1           INITIALISE IS PARAM LIST                     
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,LISREC           KEYARG FOR READ HI IS LISREC                 
         ST    R1,P5                                                            
         L     R1,AISTRK                                                        
         ST    R1,P6                                                            
         MVI   P6,X'FF'                                                         
         TM    TRACK,YES           TEST IF TRACK=NO INPUT                       
         BO    *+8                                                              
         MVI   P6,X'00'            SET FOR NO FULL TRACK I/O                    
*                                                                               
DUMPFR3  CLI   START,0             TEST START KEY INPUT                         
         BE    DUMPFR3X                                                         
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RE)      SET KEY FOR FIRST READ HIGH                  
DUMPFR3X EQU   *                                                                
         EJECT                                                                  
***********************************************************************         
* GET NEXT INPUT RECORD FOR DUMP FROM DISK                            *         
***********************************************************************         
DUMP     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    DUMP0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+20                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         TM    MODE,DAFIL                                                       
         BO    DPDAXTRN            EXTERNAL FOR DA INPUT                        
         B     DPISXTRN            EXTERNAL FOR IS INPUT                        
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    DUMPEOF             EXTERNAL HAS FINISHED EOF RETURNS            
DUMP0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
*                                                                               
DUMP1    TM    INPUT,TAPE          READ INPUT TAPE FILE                         
         BZ    DUMP2                                                            
         BAS   R9,RITAPE                                                        
         TM    MODE,DAFIL          TEST IF TAPE HAS IS FILE RECORDS             
         BZ    DUMP9               YES                                          
         TM    RECFLAG,RECPTR+RECIPR                                            
         BZ    DUMP1F                                                           
         MVI   TAPEFLAG,TAPEFPTR   ALWAYS DUMP SPECIAL IS POINTERS              
         B     DUMPC               TEST IF EXTERNAL DEFINED                     
DUMP1F   TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    DUMPG                                                            
         L     RE,ADAREC           POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         TM    RECFLAG,RECIPR                                                   
         BO    *+8                                                              
         LA    RE,2(RE)            ADJUST FOR DA FILE RECORD LENGTH             
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER                  
         CLI   RECRFN,0                                                         
         BE    DUMP1A                                                           
         CLI   RECRFN,1                                                         
         BE    DUMP1B                                                           
         CLI   RECRFN,2                                                         
         BE    DUMP1C                                                           
         CLI   RECRFN,3                                                         
         BE    DUMP1D                                                           
         B     DUMP1E                                                           
DUMP1A   OI    RECFLAG,FILE1       DA RECORD IS AN FILE1 RECORD                 
         TM    MODE,FILE1                                                       
         BO    DUMPG               TAPE HAS FILE1 DA REC                        
         B     DUMP1E                                                           
DUMP1B   OI    RECFLAG,FILE2       DA RECORD IS A FILE2 RECORD                  
         TM    MODE,FILE2                                                       
         BO    DUMPG               TAPE HAS FILE2 DA REC                        
         B     DUMP1E                                                           
DUMP1C   OI    RECFLAG,FILE3       DA RECORD IS AN FILE3 RECORD                 
         TM    MODE,FILE3                                                       
         BO    DUMPG               TAPE HAS FILE1 DA REC                        
         B     DUMP1E                                                           
DUMP1D   OI    RECFLAG,FILE4       DA RECORD IS A FILE4 RECORD                  
         TM    MODE,FILE4                                                       
         BO    DUMPG               TAPE HAS FILE2 DA REC                        
         B     DUMP1E                                                           
DUMP1E   L     R1,TIDEL                                                         
         AHI   R1,1                                                             
         ST    R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         B     DUMP                                                             
*                                                                               
DUMP2    TM    MODE,ISFIL          READ INPUT DA DISK FILE DIRECTLY             
         BO    DUMP4                                                            
         BAS   R9,RIDAFILE                                                      
         B     DUMPG                                                            
*                                                                               
DUMP4    TM    LRECFLAG,X'80'      TEST TO SAVE IS REC AFTER WRITE              
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE IS FILE REC BEFORE READ                 
         CLI   FRSTIO,0                                                         
         BNE   DUMP6                                                            
         MVC   P1,=A(ISREAD)       READ FIRST IS FILE RECORD                    
         GOTO1 =V(ISDDS),P1                                                     
         MVI   FRSTIO,1            RESET FIRST I/0 FLAG                         
         XC    LISREC(ISMAX),LISREC                                             
         B     DUMP7                                                            
*                                                                               
DUMP6    MVC   P1,=A(ISRDSEQ)      READ NEXT IS FILE RECORD                     
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
DUMP7    TM    P3+1,X'04'          TEST FOR IS FILE EOF                         
         BO    INPUTEOF                                                         
         OC    P3(2),P3            TEST FOR IS FILE READ ERROR                  
         BNZ   DUMP7A                                                           
         MVI   RECOK,0             CLEAR INVALID RECORD FLAG                    
         LA    R1,ISREC            SET RECORD TYPE FLAG                         
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         LA    R1,DIIS             BUMP DISK IN IS COUNTER                      
         BAS   R9,AGYTOT                                                        
         TM    MODE,DAFIL                                                       
         BO    DUMP7X                                                           
         C     R1,MAX_RECS         CHECK IS READ COUNTER                        
         BH    INPUTEOF                                                         
         B     DUMP7X                                                           
DUMP7A   L     RE,=A(IOBCCWL)      SAVE ISDDS IOB/CCWS                          
         MVC   0(2,RE),=C'IS'                                                   
         MVC   8(136,RE),72(RD)                                                 
DUMP7B   L     R1,=A(ERRIS)        PRINT IS RECORD                              
         MVC   P(15),0(R1)                                                      
         LH    R0,ISRECL                                                        
         CHI   R0,54               ACCDIR=42+8+4 IS THE BIGGEST                 
         BL    *+8                                                              
         LHI   R0,54                                                            
         TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BZ    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXO24),DMCB,ISREC,P+15,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
         LHI   R1,-16              IS DISK READ ERROR                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
DUMP7X   EQU   *                                                                
                                                                                
***********************************************************************         
* ISREC CONTAINS AN INDEX SEQ FILE RECORD                             *         
***********************************************************************         
DPISXTRN EQU   *                                                                
DUMP9    TM    XTRN,YES            PASS CONTROL TO EXTERNAL FOR ISREC           
         BZ    DUMP9X                                                           
         TM    MODE,DAFIL          UNLESS DA RECORD AS WELL                     
         BO    DUMP9X                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    DUMP9C                                                           
DUMP9A   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    DUMP9B                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMP9X                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     DUMP9E                                                           
DUMP9B   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    DUMP9C                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMP9X                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     DUMP9E                                                           
DUMP9C   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'                                                      
         BNE   DUMP9E              EXTERNAL RETURNS DELETE REC                  
         CLC   1(3,R1),=C'EOF'                                                  
         BE    INPUTEOF            EXTERNAL RETURNS FORCED EOF                  
         TM    INPUT,TAPE                                                       
         BO    DUMP9D                                                           
         L     R1,DIISD            BUMP DISK IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,DIISD                                                         
         B     DUMP                                                             
DUMP9D   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         B     DUMP                                                             
DUMP9E   MVI   RECFLAG,0           RESET REC TYPE FLAG AFTER EXTERNAL           
         L     R1,ADAREC                                                        
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
DUMP9X   EQU   *                                                                
*                                                                               
DUMP10   TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BO    DUMP11              YES                                          
         TM    CHECK,PRTALL        TEST TO PRINT F/L IS FILE RECORDS            
         BZ    DUMPA                                                            
         TM    MODE,DAFIL                                                       
         BO    DUMPA                                                            
         BRASL RE,RECVAL                                                        
DUMP10X  B     DUMPA                                                            
*                                                                               
DUMP11   LA    R2,ISREC            CHECK LENGTH OF V/L IS FILE RECORD           
         AH    R2,ISKEYL                                                        
         MVC   DUB(2),0(R2)                                                     
         MVI   RECOK,0             CLEAR INVALID RECORD FLAG                    
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   DUMP11A                                                          
         BRASL RE,RISVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   RECOK,1             SET HAVE PROCESSED INVALID REC LEN           
         B     DUMP11X                                                          
DUMP11A  LA    R2,ISREC                                                         
         AH    R2,DUB                                                           
         XC    0(2,R2),0(R2)       SET ZEROS AT END OF V/L IS RECORD            
DUMP11X  EQU   *                                                                
*                                                                               
DUMP12   TM    CHECK,YES           PASS CONTROL TO V/L IS RECORD CHECK          
         BZ    DUMP12X                                                          
         BRASL RE,RISVAL                                                        
DUMP12X  EQU   *                                                                
*                                                                               
DUMP13   TM    SIZE,YES            PASS CONTROL TO REC LEN ROUTINE              
         BZ    DUMP13X                                                          
         ICM   RF,15,VLDSIZE                                                    
         BZ    DUMP13X                                                          
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         LA    RE,ISREC                                                         
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
DUMP13X  EQU   *                                                                
*                                                                               
DUMP14   TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    DUMP14X                                                          
         ICM   RF,15,VLDBALCK                                                   
         BZ    DUMP14X                                                          
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
DUMP14X  EQU   *                                                                
*                                                                               
DUMPA    TM    SEQCHECK,YES        CHECK SEQUENCE OF IS RECS                    
         BZ    DUMPA9                                                           
         LH    R1,ISKEYL1          GET KEY LEN MINUS ONE                        
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC     CHECK SEQUENCE                               
         BH    DUMPA9                                                           
         BL    DUMPA2                                                           
         L     RF,=A(WARNDUPK)     DUPLICATE KEY                                
         MVC   WORK(60),0(RF)                                                   
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,DUPKEY                                                        
         AHI   R1,1                                                             
         ST    R1,DUPKEY                                                        
         C     R1,MAX_DUPK         TEST MAXIMUM VALUE                           
         BNE   DUMPA1                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR24)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,24               MAX DUPLICATE KEY ERRORS REACHED             
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
         B     DUMPA5                                                           
DUMPA1   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    DUMPA8                                                           
         BL    DUMPA5                                                           
*                                                                               
DUMPA2   L     RF,=A(WARNSEQE)     SEQUENCE ERROR                               
         MVC   WORK(60),0(RF)                                                   
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,SEQERR                                                        
         AHI   R1,1                                                             
         ST    R1,SEQERR                                                        
         C     R1,MAX_SEQE         TEST MAXIMUM VALUE                           
         BNE   DUMPA4                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR25)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,25               MAX SEQUENCE ERRORS REACHED                  
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
DUMPA4   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    DUMPA8                                                           
*                                                                               
DUMPA5   LH    R0,ISRECL           PRINT IS REC IN HEX (MAX 54 BYTES)           
         CHI   R0,54                                                            
         BL    *+8                                                              
         LHI   R0,54                                                            
         MVC   P(60),WORK                                                       
         GOTO1 =V(HEXO24),DMCB,ISREC,P+17,(R0)                                  
         MVC   WORK(80),P                                                       
         GOTO1 =V(PRINTER)                                                      
         MVC   P(80),WORK                                                       
DUMPA6   CLC   P(3),=C'SEQ'        TEST SEQUENCE CHECK                          
         BNE   DUMPA8                                                           
         CLC   SEQERR,=F'1'        PRINT PREVIOUS KEY IF FIRST SEQ ERR          
         BE    DUMPA7                                                           
         MVC   P(80),SPACES                                                     
         B     DUMPA8                                                           
DUMPA7   MVC   P(7),=C'    PRV'                                                 
         GOTO1 =V(HEXO24),DMCB,LISREC,P+17,(R0)                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
DUMPA8   MVC   ISREC(ISMAX),LISREC                                              
         B     DUMP                                                             
*                                                                               
DUMPA9   CLI   END,0               CHECK END KEY                                
         BE    DUMPAX                                                           
         L     RE,=A(ENDKEY)                                                    
         LH    R1,ISKEYL1          GET KEY LEN MINUS ONE                        
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RE)                                                   
         BNH   DUMPAX                                                           
         BAS   RE,SETNXT                                                        
         BE    INPUTEOF            IF GT END KEY SIMULATE EOF                   
         B     DUMP1                                                            
DUMPAX   EQU   *                                                                
*                                                                               
DUMPB    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DUMPBX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPBX                                                           
         LA    R1,PLCOUNT          SET NORMAL CALL IN PARAM LIST                
         MVI   0(R1),1                                                          
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
DUMPBX   EQU   *                                                                
*                                                                               
         TM    INPUT,TAPE          READING IS FILE FROM DISK                    
         BO    *+12                NO                                           
         TM    MODE,DAFIL          IS DA FILE BEING READ AS WELL                
         BO    DUMPC               YES GO TEST TO READ DA FILE                  
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         BAS   R9,WOTAPE           WRITE IS DUMP TAPE RECPRD                    
         B     DUMP                                                             
*                                                                               
DUMPC    TM    RECFLAG,RECPTR      TEST IF SPECIAL IS POINTER                   
         BZ    DUMPC0D                                                          
         MVI   TAPEFLAG,TAPEFPTR   ALWAYS DUMP SPECIAL IS POINTERS              
*                                                                               
DUMPC0A  TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    DUMPC0B                                                          
         TM    SVDFLAG1,LDDQXIPT   TEST IF PASS SPECIALS TO EXTERNAL            
         BZ    DUMPC0B                                                          
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         OI    PLXTRN+4,X'10'      SET SPECIAL IS POINTER IN P9                 
         BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         NI    PLXTRN+4,255-X'10'                                               
         MVI   PLXTRN+8,0          NO RETURNS ALLOWED                           
         CLI   PLXTRN,X'FF'        TEST IF EXTERNAL DELETED RECORD              
         BNE   DUMPC0B                                                          
         MVI   TAPEFLAG,0          RESET TAPE WRITE FLAG                        
         B     DUMP                SKIP DELETED POINTER                         
*                                                                               
DUMPC0B  TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DUMPC0C                                                          
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPC0C                                                          
         LA    R1,PLCOUNT          SET NORMAL CALL IN PARAM LIST                
         MVI   0(R1),1                                                          
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
DUMPC0C  B     DUMPP                                                            
*                                                                               
DUMPC0D  TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    DUMPD                                                            
         LA    RE,ISREC            POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER                  
         CLI   RECRFN,0                                                         
         BE    DUMPC1                                                           
         CLI   RECRFN,1                                                         
         BE    DUMPC2                                                           
         CLI   RECRFN,2                                                         
         BE    DUMPC3                                                           
         CLI   RECRFN,3                                                         
         BE    DUMPC4                                                           
         B     DUMPE                                                            
*                                                                               
DUMPC1   OI    RECFLAG,FILE1       ISFILE POINTS TO 1ST DAFILE                  
         TM    MODE,FILE1                                                       
         BO    DUMPC1A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT ISFILE POINTERS DUMPED             
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC1A  MVC   Q4,F1DTFA                                                        
         L     R1,AF1TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC2   OI    RECFLAG,FILE2       ISFILE POINTS TO 2ND DAFILE                  
         TM    MODE,FILE2                                                       
         BO    DUMPC2A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC2A  MVC   Q4,F2DTFA                                                        
         L     R1,AF2TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC3   OI    RECFLAG,FILE3       ISFILE POINTS TO 3RD DAFILE                  
         TM    MODE,FILE3                                                       
         BO    DUMPC3A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC3A  MVC   Q4,F3DTFA                                                        
         L     R1,AF3TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC4   OI    RECFLAG,FILE4       ISFILE POINTS TO 4TH DAFILE                  
         TM    MODE,FILE4                                                       
         BNZ   DUMPC4A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC4A  MVC   Q4,F4DTFA                                                        
         L     R1,AF4TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPD    ICM   RF,15,VLDTPTRS      PASS CONTROL TO TEST PASSIVE PTRS            
         BZ    DUMPDX                                                           
         TM    RECFLAG,RECPTR      SPECIAL POINTERS ARE PSEUDO PASSIVE          
         BNZ   DUMPDX                                                           
         LA    R1,PLTPTRS          SET PARAM LIST                               
         MVI   0(R1),0                                                          
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST IF PASSIVE POINTER                      
         BNE   DUMPDX              NO                                           
DUMPD1   TM    COUNT,YES           YES WAS THE RECORD COUNTED                   
         BZ    DUMPD2                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPD2                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'81'         REVERSE PREV CALL TO DIR COUNT               
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
         LA    R1,PLTPTRS                                                       
DUMPD2   CLI   4(R1),X'FF'         DID ROUTINE PASS NEW KEY                     
         BNE   DUMPE               NO                                           
         MVI   FRSTIO,0            YES SET TO DO A READ HIGH                    
         L     RE,4(R1)                                                         
         LH    RF,ISKEYL1                                                       
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RE)      EXTRACT RETURNED KEY                         
         L     R1,DIISS                                                         
         AHI   R1,1                                                             
         ST    R1,DIISS            BUMP PASSIVE PNTR SKIPS                      
         B     DUMP                                                             
DUMPDX   B     DUMPF                                                            
*                                                                               
DUMPE    L     R1,DIISD            BUMP INPUT IS DELETES                        
         AHI   R1,1                                                             
         ST    R1,DIISD                                                         
         B     DUMP                                                             
*                                                                               
DUMPF    MVC   Q1,=A(RDIDTRK)      READ DA REC POINTED TO BY IS REC             
         TM    TRACK,YES                                                        
         BO    *+10                                                             
         MVC   Q1,=A(RDID)         SET FOR NO FULL TRACK I/O                    
         LA    RE,ISREC                                                         
         AH    RE,ISRECL                                                        
         AHI   RE,-4                                                            
         ST    RE,Q5               SET A(DISK ADDR)                             
*                                                                               
DUMPF0   ICM   RE,15,0(RE)         VALIDATE DISK ADDRESS                        
         TM    DAFLAG,DTFTBIGF+DTFTBIG                                          
         BZ    DUMPF0D             16-BIT                                       
         BO    DUMPF0C             22-BIT                                       
         TM    DAFLAG,DTFTBIGF                                                  
         BO    DUMPF0B             20-BIT                                       
         SRDL  RE,14               18-BIT TRACK NUMBER                          
         SRL   RF,26               06-BIT BLOCK NUMBER                          
         B     DUMPF0F                                                          
*                                                                               
DUMPF0B  SRDL  RE,12               20-BIT TRACK NUMBER                          
         SRL   RF,28               04-BIT BLOCK NUMBER                          
         LTR   RF,RF                                                            
         BNZ   DUMPF0F                                                          
         L     R1,Q5               TTTTT0RR FOR UNBLOCKED RECORD                
         ICM   RF,1,3(R1)                                                       
         B     DUMPF0F                                                          
*                                                                               
DUMPF0C  SRDL  RE,10               22-BIT TRACK NUMBER                          
         SRL   RF,30               02-BIT BLOCK NUMBER                          
         LTR   RF,RF                                                            
         BNZ   DUMPF0F                                                          
         L     R1,Q5               TTTTT0RR FOR UNBLOCKED RECORD                
         ICM   RF,1,3(R1)                                                       
         B     DUMPF0F                                                          
*                                                                               
DUMPF0D  SRDL  RE,16               16-BIT TRACK NUMBER                          
         SRL   RF,24               08-BIT BLOCK NUMBER                          
*                                                                               
DUMPF0F  LTR   RE,RE               TRACK CANT BE ZERO                           
         BZ    DUMPF0G                                                          
         LTR   RF,RF               BLOCK CANT BE ZERO                           
         BNZ   DUMPF1                                                           
DUMPF0G  L     RF,=A(WARNADRF)     DISK ADDRESS FORMAT                          
         B     DUMPF8                                                           
*                                                                               
DUMPF1   LA    R1,Q1               READ DA RECORD                               
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         LH    RE,Q3+2             EXTRACT AND SAVE RECORD LENGTH               
         LA    RE,4(RE)                                                         
         SLL   RE,16                                                            
         L     RF,ADARECH                                                       
         ST    RE,0(RF)                                                         
         OC    Q3(2),Q3                                                         
         BNZ   DUMPF5                                                           
*                                                                               
DUMPF2   MVC   ACTISAVE,ACTIINI    CLEAR ACTIVITY DATA                          
         OC    DALINKD,DALINKD     DOES DA FILE HAVE LINKED RECORDS             
         BZ    DUMPFA              NO                                           
         L     R2,ADAREC                                                        
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    *+12                NO                                           
         CLI   0(R2),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BE    DUMPFA                                                           
         AH    R2,DALINKD          POINT TO LINK FIELD                          
         OC    0(3,R2),0(R2)       IF NONZERO POINTS TO LINKED RECORD           
         BZ    DUMPF3                                                           
         MVC   DSKADR(3),0(R2)                                                  
         MVI   DSKADR+3,0                                                       
*                                                                               
DUMPF2A  TM    DAFLAG,DTFTBIGF+DTFTBIG                                          
         BZ    DUMPF2E             16-BIT                                       
         BO    DUMPF2D             22-BIT                                       
         TM    DAFLAG,DTFTBIGF                                                  
         BZ    DUMPF2E             18-BIT                                       
*                                                                               
DUMPF2C  ICM   RE,15,0(R2)         TTTTTRRX IN LINKAGE FIELD                    
         SRDL  RE,12                                                            
         SLL   RE,4                00TTTTT0                                     
         SLDL  RE,8                                                             
         STCM  RE,15,DSKADR        TTTTT0RR IS DISK ADDR FOR 20-BIT             
         B     DUMPF2E                                                          
*                                                                               
DUMPF2D  ICM   RE,15,0(R2)         TTTTTTTTTTTTTTTTTTTTTTRRRRRRRRXX             
         SRDL  RE,10                                                            
         SRL   RF,2                0000000000TTTTTTTTTTTTTTTTTTTTTT 00R         
         SLDL  RE,10                                                            
         STCM  RE,15,DSKADR        TTTTTTTTTTTTTTTTTTTTTT00RRRRRRRR             
*                                                                               
DUMPF2E  MVC   Q1,=A(RDID)                                                      
         LA    RE,DSKADR                                                        
         ST    RE,Q5               SET A(LINK DISK ADDR)                        
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         LH    RE,Q3+2                                                          
         LA    RE,4(RE)                                                         
         SLL   RE,16                                                            
         L     RF,ADARECH                                                       
         ST    RE,0(RF)                                                         
         OC    Q3(2),Q3                                                         
         BNZ   DUMPF6                                                           
         XC    0(3,R2),0(R2)                                                    
*                                                                               
DUMPF3   TM    ACTIVITY,YES        DOES FILE HAVE ACTIVITY DATA                 
         BO    DUMPF3A                                                          
         NI    3(R2),X'FC'         NO CLEAR ACTIVITY PRESENT FLAG               
         B     DUMPF4                                                           
DUMPF3A  TM    3(R2),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    DUMPF4                                                           
         L     RE,ADAREC           GET RECORD LENGTH                            
         AH    RE,ISKEYL                                                        
         MVC   DUB(2),0(RE)                                                     
         LH    RE,Q3+2                                                          
         SH    RE,DUB                                                           
         CHI   RE,ACTILNQ                                                       
         BL    DUMPF3B                                                          
         L     RE,ADAREC                                                        
         AH    RE,DUB                                                           
         OC    0(2,RE),0(RE)                                                    
         BNZ   DUMPF3B                                                          
         MVC   ACTILOC,DUB         SAVE INPUT ACTIVITY LOCATION                 
         MVC   ACTIDAT,0(RE)       SAVE INPUT ACTIVITY DATA                     
         B     DUMPF4                                                           
DUMPF3B  NI    3(R2),X'FC'         SET NO ACTIVITY DATA                         
*                                                                               
DUMPF4   L     R2,ADAREC           SET ZEROS AT END OF DA RECORD                
         AH    R2,ISKEYL                                                        
         MVC   DUB(2),0(R2)                                                     
         MVI   RECOK,0             CLEAR INVALID RECORD FLAG                    
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   DUMPF4A                                                          
         BRASL RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVC   ACTISAVE,ACTIINI    CLEAR ACTIVITY DATA                          
         MVI   RECOK,1             SET HAVE PROCESSED INVALID REC LEN           
         B     DUMPFA                                                           
DUMPF4A  L     R2,ADAREC                                                        
         AH    R2,DUB                                                           
         XC    0(2,R2),0(R2)                                                    
         B     DUMPFA                                                           
*                                                                               
DUMPF5   L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         CLC   Q1,=A(RDIDTRK)      ERROR ON FULL TRACK READ                     
         BNE   *+14                                                             
         MVC   Q1,=A(RDID)         YES HAVE A SPECIFIC RETRY                    
         B     DUMPF+6                                                          
         L     RF,=A(WARNADRV)     ADDRESS VALUE                                
         B     *+8                                                              
DUMPF6   L     RF,=A(WARNADRL)     ADDRESS LINKAGE                              
*                                                                               
DUMPF8   MVC   WORK(60),0(RF)                                                   
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,BADADR           BUMP DA DISK BAD ADDR COUNTER                
         AHI   R1,1                                                             
         ST    R1,BADADR                                                        
         C     R1,MAX_BADA         TEST MAXIMUM VALUE                           
         BNE   DUMPF8A                                                          
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR26)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,26               MAX DA DISK BAD ADDRS REACHED                
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
DUMPF8A  CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    DUMP                                                             
         LH    R0,ISRECL                                                        
         CHI   R0,54                                                            
         BL    *+8                                                              
         LHI   R0,54                                                            
         MVC   P(60),WORK                                                       
         GOTO1 =V(HEXO24),DMCB,ISREC,P+17,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
         B     DUMP                                                             
*                                                                               
DUMPFA   TM    RECFLAG,FILE2+FILE3+FILE4                                        
         BNZ   DUMPFA2                                                          
DUMPFA1  L     R1,ADAREC           SET RECORD FLAGS                             
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         LA    R1,DIF1             BUMP DA FILE RECS READ (1ST DA FILE)         
         BAS   R9,AGYTOT                                                        
         CLC   ACTIDAT+2(4),SVD1ACT                                             
         BNH   DUMPFC                                                           
         L     R1,DIF1A                                                         
         AHI   R1,1                                                             
         ST    R1,DIF1A                                                         
         B     DUMPFC                                                           
DUMPFA2  TM    RECFLAG,FILE2       BUMP DA FILE RECS READ (2ND DA FILE)         
         BZ    DUMPFA3                                                          
         LA    R1,DIF2                                                          
         BAS   R9,AGYTOT                                                        
         CLC   ACTIDAT+2(4),SVD2ACT                                             
         BNH   DUMPFC                                                           
         L     R1,DIF2A                                                         
         AHI   R1,1                                                             
         ST    R1,DIF2A                                                         
         B     DUMPFC                                                           
DUMPFA3  TM    RECFLAG,FILE3       BUMP DA FILE RECS READ (3RD DA FILE)         
         BZ    DUMPFA4                                                          
         LA    R1,DIF3                                                          
         BAS   R9,AGYTOT                                                        
         CLC   ACTIDAT+2(4),SVD3ACT                                             
         BNH   DUMPFC                                                           
         L     R1,DIF3A                                                         
         AHI   R1,1                                                             
         ST    R1,DIF3A                                                         
         B     DUMPFC                                                           
DUMPFA4  TM    RECFLAG,FILE4       BUMP DA FILE RECS READ (4TH DA FILE)         
         BZ    DUMPFC                                                           
         LA    R1,DIF4                                                          
         BAS   R9,AGYTOT                                                        
         CLC   ACTIDAT+2(4),SVD4ACT                                             
         BNH   DUMPFC                                                           
         L     R1,DIF4A                                                         
         AHI   R1,1                                                             
         ST    R1,DIF4A                                                         
*                                                                               
DUMPFC   C     R1,MAX_RECS         CHECK DA READ COUNTER                        
         BH    INPUTEOF                                                         
         ST    R1,RCVSIN                                                        
         MVI   DARFLAG1,0          INIT FOR RECOVERY CONTROL                    
DUMPFX   EQU   *                                                                
         EJECT                                                                  
***********************************************************************         
* DAREC CONTAINS A DIRECT ACCESS FILE RECORD                          *         
***********************************************************************         
DUMPG    TM    RECFLAG,RECHDR      TEST HEADER REC                              
         BZ    DUMPH                                                            
         BRASL RE,SAVEHDR                                                       
*                                                                               
DPDAXTRN EQU   *                                                                
DUMPH    TM    XTRN,YES            PASS CONTROL TO EXTERNAL                     
         BZ    DUMPHX                                                           
         TM    RECOVER,YES         SAVE DAREC FOR RECOVERY                      
         BZ    DUMPH0                                                           
         CLI   PLXTRN+8,C'Y'                                                    
         BE    DUMPH0                                                           
         MVI   DARFLAG,DARDUMPQ+DARXTRNQ                                        
         BRASL RE,DARBEF                                                        
DUMPH0   L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    DUMPH3                                                           
DUMPH1   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    DUMPH2                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMPHX                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     DUMPH20                                                          
DUMPH2   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    DUMPH3                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMPHX                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     DUMPH20                                                          
DUMPH3   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   PLXTRN,X'FF'                                                     
         BNE   DUMPH10                                                          
         TM    RECOVER,YES                                                      
         BZ    DUMPH4                                                           
         MVI   DARFLAG,DARDUMPQ+DARXTRNQ+DARDELQ                                
         BRASL RE,DARAFT                                                        
DUMPH4   CLC   1(3,R1),=C'EOF'                                                  
         BE    INPUTEOF            EXTERNAL RETURNS FORCED EOF                  
DUMPH6   TM    INPUT,TAPE                                                       
         BO    DUMPH8                                                           
         TM    RECFLAG,FILE2+FILE3+FILE4                                        
         BNZ   DUMPH6B                                                          
DUMPH6A  L     R1,DIF1D            BUMP DA DISK IN DELETED (1ST FILE)           
         AHI   R1,1                                                             
         ST    R1,DIF1D                                                         
         B     DUMP                                                             
DUMPH6B  TM    RECFLAG,FILE2       BUMP DA DISK IN DELETES (2ND FILE)           
         BZ    DUMPH6C                                                          
         L     R1,DIF2D                                                         
         AHI   R1,1                                                             
         ST    R1,DIF2D                                                         
         B     DUMP                                                             
DUMPH6C  TM    RECFLAG,FILE3       BUMP DA DISK IN DELETES (3RD FILE)           
         BZ    DUMPH6D                                                          
         L     R1,DIF3D                                                         
         AHI   R1,1                                                             
         ST    R1,DIF3D                                                         
         B     DUMP                                                             
DUMPH6D  TM    RECFLAG,FILE4       BUMP DA DISK IN DELETES (4TH FILE)           
         BZ    DUMP                                                             
         L     R1,DIF4D                                                         
         AHI   R1,1                                                             
         ST    R1,DIF4D                                                         
         B     DUMP                                                             
DUMPH8   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         B     DUMP                                                             
DUMPH10  CLI   PLXTRN,X'FE'        TEST IF RETURN IS CHANGED RECORD             
         BNE   DUMPH11                                                          
         TM    RECOVER,YES                                                      
         BZ    DUMPH11                                                          
         MVI   DARFLAG,DARDUMPQ+DARXTRNQ+DARCHAQ                                
         BRASL RE,DARAFT                                                        
DUMPH11  CLI   PLXTRN,X'FD'        TEST IF RETURN IS ADDED RECORD               
         BNE   DUMPH20                                                          
         TM    RECOVER,YES                                                      
         BZ    DUMPH20                                                          
         MVI   DARFLAG,DARDUMPQ+DARXTRNQ+DARADDQ                                
         BRASL RE,DARAFT                                                        
DUMPH20  MVI   RECFLAG,0           RESET REC TYPE FLAG AFTER EXTERNAL           
         L     R1,ADAREC                                                        
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
DUMPHX   EQU   *                                                                
*                                                                               
DUMPI    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DUMPIX                                                           
         TM    MODE,ISFIL          UNLESS PREVIOUSLY DONE FOR IS REC            
         BO    DUMPIX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPIX                                                           
         LA    R1,PLCOUNT          SET NORMAL CALL IN PARAM LIST                
         MVI   0(R1),1                                                          
         MVC   4(1,R1),LDFINOS+0   PASS IS FILE NUMBER                          
         BASR  RE,RF                                                            
DUMPIX   EQU   *                                                                
*                                                                               
DUMPJ    TM    MODE,ISFIL          TEST CHANGE KEYS OF PASSIVE DELETES          
         BZ    DUMPJ2                                                           
         TM    SVDFLAG1,LDDQCKDP                                                
         BZ    DUMPJ2                                                           
         MVI   RECVKNEQ,0                                                       
DUMPJ1   LH    R1,DAKEYL           GET KEY COMPARE LEN                          
         L     RF,ADAREC                                                        
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RF)      TEST IS KEY WITH DA KEY                      
         BE    DUMPJ2                                                           
         LA    RE,ISREC+1(R1)                                                   
         TM    0(RE),X'80'         TEST IF DELETED IS REC                       
         BZ    DUMPJ2              NO                                           
         OI    RECVKNEQ,X'01'      YES SET DELETED IS REC KEY NOT EQUAL         
         EX    R1,*+8              AND COPY IS KEY OVER DA KEY                  
         B     DUMPJ2                                                           
         MVC   0(0,RF),ISREC                                                    
DUMPJ2   TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    DUMPJX                                                           
         BRASL RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    DUMPJX                                                           
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    DUMPH6              YES                                          
DUMPJX   EQU   *                                                                
*                                                                               
DUMPK    TM    MODE,ISFIL          SET CONTROL BYTES                            
         BZ    DUMPKX                                                           
         LA    RE,ISREC                                                         
         AH    RE,ISKEYL                                                        
         L     RF,ADAREC                                                        
         AH    RF,ISKEYL                                                        
         LH    R1,DACTLL                                                        
         AHI   R1,-1                                                            
         BM    DUMPKX                                                           
DUMPK1   EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   2(0,RF),0(RE)       TEST IS CONTROL SAME AS DA CONTROL           
         BE    DUMPKX                                                           
DUMPK2   STM   RE,R1,SAVERER1                                                   
         LH    R1,DAKEYL           GET KEY COMPARE LEN                          
         L     RF,ADAREC                                                        
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RF)      TEST IS KEY WITH DA KEY                      
         BNE   DUMPK4                                                           
         TM    RECVKNEQ,X'01'      TEST DELETED IS REC KEY NOT EQUAL            
         BO    DUMPK4                                                           
         L     R0,DIISO            SAME KEY AND DIFFERENT CONTROL BYTES         
         AHI   R0,1                                                             
         ST    R0,DIISO            BUMP IS CONTROL BYTES DIFFERS COUNT          
         C     R0,MAX_PERR                                                      
         BH    DUMPK4                                                           
DUMPK3   TM    STACHECK,YES        TEST PRINT IS REC STATUS CHECK               
         BZ    DUMPK4                                                           
         L     RF,=A(WARNSTAV)     STATUS VALUE                                 
         MVC   WORK(60),0(RF)                                                   
         LH    R0,ISRECL           HEX OUT IS REC (MAX 54 BYTES)                
         CHI   R0,54                                                            
         BL    *+8                                                              
         LHI   R0,54                                                            
         MVC   P(60),WORK                                                       
         GOTO1 =V(HEXO24),DMCB,ISREC,P+17,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
DUMPK4   LM    RE,R1,SAVERER1                                                   
         EX    R1,*+8                                                           
         B     *+10                                                             
         OC    2(0,RF),0(RE)       OR IS CONTROL INTO DA CONTROL                
DUMPKX   EQU   *                                                                
*                                                                               
DUMPM    TM    SIZE,YES            PASS CONTROL TO DA REC LEN ROUTINE           
         BZ    DUMPMX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    DUMPMX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         L     RE,ADAREC                                                        
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
DUMPMX   EQU   *                                                                
*                                                                               
DUMPN    TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    DUMPNX                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    DUMPNX                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         TM    BALCHECK,X'04'      MONTHLY IMPLIES YES AS WELL                  
         BZ    *+8                                                              
         MVI   0(R1),0             SWITCH ON COUNT-YES-MONTHLY                  
         BASR  RE,RF                                                            
DUMPNX   EQU   *                                                                
*                                                                               
DUMPP    TM    OUTPUT,TAPE         WRITE DA DUMP TAPE RECORD                    
         BZ    *+8                                                              
         BAS   R9,WOTAPE                                                        
         MVI   TAPEFLAG,0          RESET WOTAPE FLAG                            
         B     DUMP                BACK FOR NEXT INPUT RECORD                   
         EJECT                                                                  
***********************************************************************         
* NO MORE INPUT RECORDS LEFT TO DUMP                                  *         
***********************************************************************         
DUMPEOF  MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         BAS   R9,CLSOUT           CLOSE OUTPUT TAPE                            
         TM    RECOVER,YES                                                      
         BZ    *+8                                                              
         BAS   R9,CLSRCV           CLOSE RECOVERY TAPE                          
*                                                                               
DEOF1    TM    BALCHECK,YES        FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    DEOF1X                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    DEOF1X                                                           
         TM    MODE,DAFIL          ONLY VALID FOR DA FILE                       
         BO    *+12                                                             
         TM    LDFIATS+0,VLISQ     AND V/L IS FILE                              
         BZ    DEOF1X                                                           
         CLI   DONBALCK,C'Y'                                                    
         BE    DEOF1X                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         TM    BALCHECK,X'04'      MONTHLY IMPLIES YES AS WELL                  
         BZ    *+8                                                              
         MVI   0(R1),X'FE'         SET MONTHLY YES PRINT                        
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
DEOF1X   EQU   *                                                                
*                                                                               
DEOF2    MVC   P,SPACES            PRINT DUMP/LOAD ACTION MESSAGE               
         GOTO1 =V(PRINTER)                                                      
         MVC   P(8),INFOMSG1       SET DA FILE MSG                              
         MVC   P+8(8),DANAMF                                                    
         TM    MODE,DAFIL                                                       
         BO    DEOF3                                                            
         MVC   P(8),INFOMSG2       SET IS FILE MSG                              
         MVC   P+8(8),ISNAMF                                                    
*                                                                               
DEOF3    TM    INPUT,TAPE          SET TAPE IN MSG                              
         BZ    DEOF3X                                                           
         MVC   P+03(4),=C'TAPE'                                                 
         MVC   P+17(7),=C'READ   '                                              
         TM    OUTPUT,TAPE                                                      
         BZ    *+10                                                             
         MVC   P+17(7),=C'COPIED '                                              
         B     DEOF5                                                            
DEOF3X   EQU   *                                                                
*                                                                               
DEOF4    MVC   P+17(7),=C'DUMPED ' SET ACTION                                   
         TM    OUTPUT,TAPE                                                      
         BO    *+10                                                             
         MVC   P+17(7),=C'READ   '                                              
         TM    MODE,DAFIL                                                       
         BZ    DEOF4X                                                           
         MVC   P+25(8),=C'DIRECTLY'                                             
         TM    MODE,ISFIL                                                       
         BZ    DEOF4X                                                           
         MVC   P+24(5),=C'VIA  '                                                
         MVC   P+29(8),INFOMSG2                                                 
         MVC   P+37(8),ISNAMF                                                   
DEOF4X   EQU   *                                                                
*                                                                               
DEOF5    MVC   WORK(80),P          SAVE ACTION MESSAGE                          
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BNZ   DEOF5A                                                           
         GOTO1 =V(PRINTER)         PRINT SINGLE ACTION MESSAGE                  
         B     DEOFA                                                            
DEOF5A   TM    MODE,FILE1          TEST IF FILE 1 BEING DUMPED                  
         BZ    DEOF5B                                                           
         MVC   P(80),WORK          SET ACTION MSG FOR 1ST DA FILE               
         MVC   P+8(8),F1NAMF                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5B   TM    MODE,FILE2          TEST IF FILE 2 BEING DUMPED                  
         BZ    DEOF5C                                                           
         MVC   P(80),WORK          SET ACTION MSG FOR 2ND DA FILE               
         MVC   P+8(8),F2NAMF                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5C   TM    MODE,FILE3          TEST IF FILE 3 BEING DUMPED                  
         BZ    DEOF5D                                                           
         MVC   P(80),WORK          SET ACTION MSG FOR 3RD DA FILE               
         MVC   P+8(8),F3NAMF                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5D   TM    MODE,FILE4          TEST IF FILE 4 BEING DUMPED                  
         BZ    DEOFA                                                            
         MVC   P(80),WORK          SET ACTION MSG FOR 4TH DA FILE               
         MVC   P+8(8),F4NAMF                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
DEOFA    L     RF,=A(PRTCTRS)      PRINT DUMP COUNTERS                          
         BASR  RE,RF                                                            
         L     RF,=A(SMFDATA)      OUTPUT SMF RECORD COUNTS AND MONEY           
         BASR  RE,RF                                                            
*                                                                               
DEOFB    TM    SIZE,YES            FINAL CALL OF DA REC LEN ROUTINE             
         BZ    DEOFBX                                                           
         TM    MODE,DAFIL          ONLY VALID FOR DA FILE                       
         BO    *+12                                                             
         TM    LDFIATS+0,VLISQ     AND V/L IS FILE                              
         BZ    DEOFBX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    DEOFBX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
DEOFBX   EQU   *                                                                
*                                                                               
DEOFC    TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    DEOFCX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DEOFCX                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'FF'                                                      
         LA    RE,DANAMF           PASS NAME OF DA FILE IF NO IS FILE           
         MVC   4(1,R1),LDFINOS+1   PASS DA FILE NUMBER                          
         TM    MODE,ISFIL                                                       
         BZ    *+14                                                             
         LA    RE,ISNAMF           ELSE PASS NAME OF IS FILE                    
         MVC   4(1,R1),LDFINOS+0   AND IS FILE NUMBER                           
         STCM  RE,7,5(R1)                                                       
         BASR  RE,RF                                                            
DEOFCX   EQU   *                                                                
*                                                                               
         B     NXTPARM             DUMP COMPLETED - ANY MORE REQUIRED           
         EJECT                                                                  
***********************************************************************         
* END OF FILE ON INPUT                                                *         
* CAUSED BY A PHYSICAL EOF CONDITION ON TAPE=TAPEIN OR DISK=ISFILE    *         
* CONTROL PASSED HERE IF I/O COUNTS OR END KEY EXCEEDED               *         
* CONTROL PASSED HERE IF EXTERNAL MOVES C'EOF' TO ITS PLXTRN+1(3)     *         
***********************************************************************         
INPUTEOF CLI   EOFIN,C'Y'          MUST HAVE ONLY ONE EOF CALL                  
         BNE   *+6                                                              
         DC    H'0'                                                             
         TM    INPUT,TAPEPHYS      EOF ALREADY DONE FOR PHYSICAL TAPE           
         BNZ   INPEOF3                                                          
         TM    INPUT,TAPE          IF TAPE INPUT ASK IF ANY MORE TAPES          
         BZ    INPEOF3                                                          
         TM    MSG,YES             UNLESS MESSAGES SUPPRESSED                   
         B     INPEOF2             SUPPRESS CONSOLE MESSAGES                    
*NOP*    BZ    INPEOF2                                                          
         TM    XTRN,YES            UNLESS FORCED EOF BY EXTERNAL                
         BZ    *+14                                                             
         CLC   PLXTRN+1(3),=C'EOF'                                              
         BE    INPEOF2                                                          
*                                                                               
INPEOF0  L     RF,=A(QUEST1)       QUESTION - ANY MORE INPUT TAPES              
         MVC   OPERMSG(L'OPERMSG),0(RF)                                         
         BAS   R9,PAGMSGN                                                       
         CLI   OPERANS,C'N'        IF NO CLOSE TAPE AND SET EOF                 
         BE    INPEOF2                                                          
         CLI   OPERANS,C'Y'        IF YES CLOSE TAPE AND RE-OPEN                
         BNE   INPEOF0                                                          
*                                                                               
INPEOF1  BAS   R9,CLSIN            END OF INPUT VOLUME                          
         L     R9,=A(OPNIN)                                                     
         BASR  RE,R9                                                            
         NI    OPNINF,X'7F'                                                     
         IC    R1,OPNINF           BUMP NUMBER OF INPUT TAPES                   
         AHI   R1,1                                                             
         STC   R1,OPNINF                                                        
         OI    OPNINF,X'80'        SET FIRST RECORD ON TAPE FLAG                
         TM    OUTPUT,DISK                                                      
         BZ    DUMP                PASS CONTROL BACK TO DUMP                    
         TM    MODE,DAFIL                                                       
         BO    LDDA                PASS CONTROL BACK TO LOAD DA                 
         B     LDIS                PASS CONTROL BACK TO LOAD IS                 
*                                                                               
INPEOF2  BAS   R9,CLSIN            CLOSE INPUT TAPE FILE                        
*                                                                               
INPEOF3  MVI   EOFIN,C'Y'          SET END OF FILE ON INPUT DATA                
*                                                                               
INPEOF4  TM    XTRN,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    INPEOF4X                                                         
         CLC   PLXTRN+1(3),=C'EOF'                                              
         BNE   INPEOF4A                                                         
         LA    R1,PLXTRN           RESET EXTRNAL PARAM ON FORCED EOF            
         MVC   0(4,R1),ADAREC                                                   
         TM    MODE,DAFIL                                                       
         BO    *+10                                                             
         MVC   0(4,R1),AISREC                                                   
INPEOF4A L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET EOF CALL IN PARAM LIST                   
         MVI   PLXTRN+0,X'FF'                                                   
         MVI   PLXTRN+8,0                                                       
         BASR  RE,RF                                                            
         CLC   PLXTRN+1(3),=C'EOF' DONT FUCK ME AROUND EXTERNAL                 
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLI   PLXTRN+8,C'R'       REQUESTED RETURN FROM EOF                    
         BNE   INPEOF4X            NO                                           
         TM    OUTPUT,DISK                                                      
         BZ    DUMP                PASS CONTROL BACK TO DUMP                    
         TM    MODE,DAFIL                                                       
         BO    LDDA                PASS CONTROL BACK TO LOAD DA                 
         B     LDIS                PASS CONTROL BACK TO LOAD IS                 
INPEOF4X EQU   *                                                                
*                                                                               
INPEOF5  TM    RECOVER,YES         CLOSE RECOVERY TAPE                          
         BZ    INPEOF6                                                          
         BAS   R9,CLSRCV                                                        
*                                                                               
INPEOF6  TM    OUTPUT,DISK         PASS CONTROL TO DUMP DA/IS FILE EOF          
         BZ    DUMPEOF                                                          
         TM    MODE,DAFIL                                                       
         BO    LDAEOF              PASS CONTROL TO LOAD DA FILE EOF             
         B     LISEOF              PASS CONTROL TO LOAD IS FILE EOF             
         EJECT                                                                  
***********************************************************************         
* READ INPUT TAPE (TAPEIN)                                            *         
***********************************************************************         
RITAPE   ST    R9,SAVER9           SAVE RETURN ADDRESS                          
         MVI   RECFLAG,0           CLEAR RECORD FLAGS                           
         MVI   RECOK,0                                                          
         TM    MODE,DAFIL          TEST IF TAPE HAS ONLY IS RECORDS             
         BO    RIT4                NO                                           
         TM    LRECFLAG,X'80'      YES TEST SAVE IS REC AFTER WRITE             
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE LAST IS REC BEFORE READ                 
*                                                                               
RIT1     LA    R0,ISRECH           READ IS TAPE INTO ISREC                      
         L     R1,=A(TAPEIN)                                                    
         GET   (1),(0)                                                          
         LA    R1,ISRECH                                                        
         BAS   RE,RITSET           SET RECORD TYPES FOUND ON TAPE               
*                                                                               
RIT1A    CLI   START,0             CHECK FOR IS START KEY                       
         BE    RIT1B                                                            
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RE)                                                   
         BL    RITAPE+4                                                         
*                                                                               
RIT1B    CLI   END,0               CHECK FOR IS END KEY                         
         BE    RIT2                                                             
         L     RE,=A(ENDKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RE)                                                   
         BH    INPUTEOF                                                         
*                                                                               
RIT2     LA    R1,ISREC            SET IS RECORD FLAGS                          
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         LA    R1,TIIS             BUMP IS TAPE READ COUNTER                    
         BAS   R9,AGYTOT                                                        
         C     R1,MAX_RECS         CHECK IS READ COUNTER                        
         BH    INPUTEOF                                                         
*                                                                               
RIT3     TM    LDFIATS+0,VLISQ     TEST V/L IS FILE                             
         BZ    RITX                                                             
         LA    R1,ISREC            EXTRACT V/L IS RECORD LENGTH                 
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)                                                     
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   RIT3A                                                            
         BRASL RE,RISVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   RECOK,1             SET HAVE PROCESSED INVALID REC LEN           
         B     RITX                                                             
RIT3A    LA    R1,ISREC                                                         
         AH    R1,DUB                                                           
         XC    0(2,R1),0(R1)       SET ZEROS AT END OF REC                      
         B     RITX                                                             
*                                                                               
RIT4     TM    INPUT,TAPEPHYS      TEST IF DA FILE TAPE IS PHYSICAL             
         BNZ   RIT5                                                             
         L     R0,ADARECH          READ DA TAPE RECORD INTO DAREC               
         L     R1,=A(TAPEIN)                                                    
         GET   (1),(0)                                                          
         L     R1,ADARECH                                                       
         BAS   RE,RITSET           SET RECORD TYPES FOUND ON TAPE               
*                                                                               
RIT4A    LH    RE,ISRECL                                                        
         AHI   RE,4                                                             
         L     RF,ADARECH                                                       
         CH    RE,0(RF)            TEST FOR SPECIAL POINTER RECORD              
         BNE   RIT6                                                             
         BCTR  RE,0                YES - COPY RECORD TO ISREC                   
         EX    RE,*+8                                                           
         B     RIT6                                                             
         MVC   ISRECH(0),0(RF)                                                  
*                                                                               
RIT5     LA    R1,PLDBLK           READ PHYSICAL TAPE REC INTO DAREC            
         L     RF,=V(DBLKTAPE)                                                  
         BASR  RE,RF                                                            
         OC    0(4,R1),0(R1)       IF A(RECORD) IS ZERO THEN EOF                
         BZ    INPUTEOF                                                         
*                                                                               
RIT6     CLI   START,0             CHECK FOR START KEY                          
         BE    RIT7                                                             
         L     RF,ADAREC                                                        
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   0(0,RF),0(RE)                                                    
         BL    RITAPE+4                                                         
*                                                                               
RIT7     LH    R1,ISRECL           TEST RECORD IS AN I/S FILE POINTER           
         LA    RE,4(R1)                                                         
         L     RF,ADARECH                                                       
         CH    RE,0(RF)                                                         
         BNE   RIT8                                                             
         TM    SVDMULTI,LDDQDPTR   TEST I/S POINTERS ALLOWED ON TAPE            
         BZ    RIT8                                                             
         L     R1,ADAREC           SET RECORD FLAGS                             
         BAS   R9,RECTYPE                                                       
         LA    R1,ISREC                                                         
         BAS   R9,AGYTYPE                                                       
         LA    R1,TIIS             BUMP IS TAPE READ COUNTER                    
         BAS   R9,AGYTOT                                                        
         B     RITB                                                             
*                                                                               
RIT8     L     R1,ADAREC           SET RECORD FLAGS                             
         BAS   R9,RECTYPE                                                       
         BAS   R9,AGYTYPE                                                       
         LA    R1,TIDA             BUMP DA TAPE READ COUNTER                    
         BAS   R9,AGYTOT                                                        
         ST    R1,RCVSIN                                                        
         MVI   DARFLAG1,0          INIT FOR RECOVERY CONTROL                    
         C     R1,MAX_RECS         CHECK DA READ COUNTER                        
         BH    INPUTEOF                                                         
*                                                                               
RIT9     MVC   ACTISAVE,ACTIINI    CLEAR ACTIVITY DATA                          
         OC    DALINKD,DALINKD     DOES DA FILE HAVE LINKED RECORDS             
         BZ    RIT9X               NO                                           
         L     RE,ADAREC                                                        
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    *+12                NO                                           
         CLI   0(RE),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BE    RIT9X                                                            
         AH    RE,DALINKD          POINT TO LINK FIELD                          
         TM    ACTIVITY,YES        DOES FILE HAVE ACTIVITY DATA                 
         BZ    RIT9X                                                            
         L     RE,ADAREC           POINT TO LINK FIELD                          
         AH    RE,DALINKD                                                       
         XC    0(3,RE),0(RE)                                                    
         TM    3(RE),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    RIT9X                                                            
         L     RE,ADAREC           GET LOCICAL RECORD LENGTH                    
         AH    RE,ISKEYL                                                        
         MVC   DUB(2),0(RE)                                                     
         L     RF,ADARECH                                                       
         LH    RE,0(RF)                                                         
         AHI   RE,-4               GET PHYSICAL RECORD LENGTH                   
         SH    RE,DUB                                                           
         CHI   RE,ACTILNQ                                                       
         BL    RIT9A                                                            
         L     RE,ADAREC                                                        
         AH    RE,DUB                                                           
         OC    0(2,RE),0(RE)       TEST IF LOOKS LIKE ACTIVITY DATA             
         BNZ   RIT9A                                                            
         MVC   ACTILOC,DUB         SAVE INPUT ACTIVITY LOCATION                 
         MVC   ACTIDAT,0(RE)       SAVE INPUT ACTIVITY DATA                     
         B     RIT9X                                                            
RIT9A    L     RE,ADAREC           POINT TO LINK FIELD                          
         AH    RE,DALINKD                                                       
         NI    3(RE),X'FC'         SET NO ACTIVITY DATA                         
RIT9X    EQU   *                                                                
*                                                                               
RITA     L     R1,ADAREC           EXTRACT RECORD LENGTH                        
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)                                                     
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   RITA1                                                            
         BRASL RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVC   ACTISAVE,ACTIINI    CLEAR ACTIVITY DATA                          
         MVI   RECOK,1             SET HAVE PROCESSED INVALID REC LEN           
         B     RITA2                                                            
RITA1    L     R1,ADAREC                                                        
         AH    R1,DUB                                                           
         XC    0(2,R1),0(R1)       SET ZEROS AT END OF REC                      
RITA2    TM    MODE,ISFIL                                                       
         BO    RITB                                                             
         L     RF,ADAREC                                                        
         MVC   ISREC(ISMAX),0(RF)  COPY DAREC KEY INTO ISREC                    
         LA    R1,ISREC                                                         
         AH    R1,ISKEYL                                                        
         MVC   0(2,R1),2(R1)                                                    
*                                                                               
RITB     CLI   END,0               CHECK FOR END KEY                            
         BE    RITX                                                             
         L     RE,=A(ENDKEY)                                                    
         L     RF,ADAREC                                                        
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   0(0,RF),0(RE)                                                    
         BNH   RITX                                                             
         BAS   RE,SETNXT                                                        
         BE    INPUTEOF                                                         
         B     RITAPE+4                                                         
*                                                                               
RITX     L     R9,SAVER9           GET RETURN ADDRESS                           
         BR    R9                                                               
*                                                                               
RITSET   CLI   TAPECNT,5           CHECK FIRST 5 TAPEIN RECS                    
         BNL   RITSET1                                                          
         SR    RF,RF               BUMP RECORD COUNT                            
         IC    RF,TAPECNT                                                       
         AHI   RF,1                                                             
         STC   RF,TAPECNT                                                       
         LH    RF,ISRECL                                                        
         AHI   RF,4                RF=LEN OF IS FILE TAPE RECORD                
         CH    RF,0(R1)            R1=A(TAPEIN RECORD LEN HDR)                  
         BNE   *+12                                                             
         OI    TAPETYP,ISFIL       SET IS REC FOUND ON TAPEIN                   
         B     RITSETX                                                          
         OI    TAPETYP,DAFIL       SET DA REC FOUND ON TAPEIN                   
         B     RITSETX                                                          
RITSET1  OI    TAPETYP,X'01'       SET CHECK COMPLETED                          
RITSETX  BR    RE                                                               
         EJECT                                                                  
SETNXT   STM   RE,R1,12(RD)                                                     
         SR    R1,R1                                                            
         ICM   R1,1,START                                                       
         BZ    SETNXTX                                                          
         BCTR  R1,0                                                             
         STC   R1,START                                                         
         CLI   START,0                                                          
         BE    SETNXTX                                                          
         MH    R1,=Y(L'STRKEY+L'ENDKEY)                                         
         L     R0,=A(STRKEY)                                                    
         LR    RE,R0                                                            
         AH    RE,=Y(L'STRKEY+L'ENDKEY)                                         
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         L     R1,=A(STRKEY)                                                    
         MVC   ISREC(ISMAX),0(R1)                                               
         MVI   FRSTIO,0                                                         
         CLI   START,0                                                          
SETNXTX  LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* WRITE OUTPUT TAPE (TAPEOUT) AND ITS COPY (TAPECPY)                  *         
***********************************************************************         
WOTAPE   ST    R9,SAVER9           SAVE RETURN ADDRESS                          
         TM    TAPEFLAG,TAPEFPTR   TEST WRITE I/S POINTER TO D/A TAPE           
         BNZ   WOT1                                                             
         TM    MODE,DAFIL                                                       
         BO    WOT2                                                             
*                                                                               
WOT1     LH    R1,ISRECL           WRITE IS TAPE RECORD FROM ISREC              
         STH   R1,DUB                                                           
         LTR   R1,R1                                                            
         BNZ   WOT1B               LEN IS ZERO FOR V/L RECORDS                  
         LA    R1,ISREC                                                         
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        GET REC LEN FROM V/L ISREC                   
*                                                                               
WOT1A    CLI   LDFINOS+0,CTFILE#   TEST CTFILE                                  
         BNE   WOT1B                                                            
         OC    ISREC(4),ISREC      TEST IF THIS IS THE HEADER REC               
         BNZ   WOT1B                                                            
         CLC   DUB(2),=AL2(LDHRECL)                                             
         BE    *+14                                                             
         CLC   DUB(2),=AL2(LDHXRECL)                                            
         BNE   WOT1B                                                            
         BRASL RE,BLDXHDR          BUILD EXTENDED HEADER RECORD                 
*                                                                               
WOT1B    LH    R1,DUB              DUB HAS RECORD LENGTH                        
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         ST    R1,ISRECH           SET LENGTH OF TAPE RECORD                    
         LA    R0,ISRECH                                                        
         L     R1,=A(TAPEOUT)                                                   
         PUT   (1),(0)                                                          
         LA    R1,ISREC            SET AGY/CMP RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,TOIS             BUMP IS TAPE WRITE COUNTER                   
         BAS   R9,AGYTOT                                                        
*                                                                               
         TM    TCOPY,TAPE          TEST FOR SECOND TAPE OPTION                  
         BZ    WOTX                                                             
         LA    R0,ISRECH           WRITE SAME RECORD TO IS COPY TAPE            
         L     R1,=A(TAPECPY)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOCIS            BUMP IS COPY TAPE WRITE COUNTER              
         AHI   R1,1                                                             
         ST    R1,TOCIS                                                         
         B     WOTX                                                             
*                                                                               
WOT2     L     RE,ADAREC           WRITE DA TAPE RECORD FROM DAREC              
         USING LDHREC,RE                                                        
         LR    R1,RE                                                            
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        GET REC LEN FROM DAREC                       
*                                                                               
WOT2A    OC    0(4,RE),0(RE)       TEST IF THIS IS A HEADER RECORD              
         BNZ   WOT2B                                                            
         CLC   DUB(2),=AL2(LDHRECL)                                             
         BE    *+14                                                             
         CLC   DUB(2),=AL2(LDHXRECL)                                            
         BNE   WOT2B                                                            
         BRASL RE,BLDXHDR          BUILD EXTENDED HEADER RECORD                 
*                                                                               
WOT2B    L     R1,ADAREC           POINT TO LINK FIELD                          
         AH    R1,DALINKD                                                       
         TM    3(R1),X'01'         TEST ACTIVITY DATA PRESENT                   
         BZ    WOT3                                                             
         LH    R1,DUB                                                           
         AHI   R1,ACTILNQ          EXTRA FOR ACTIVITY DATA                      
         STH   R1,DUB                                                           
*                                                                               
WOT3     LH    R1,DUB              DUB HAS RECORD LENGTH                        
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         L     RF,ADARECH                                                       
         ST    R1,0(RF)                                                         
         LR    R0,RF                                                            
WOT3A    TM    LENREC,YES          TEST IF WANT REC LEN IN RECORD               
         BZ    WOT3B                                                            
         LR    RF,R0               BACK UP 4 BYTES                              
         AHI   RF,-4                                                            
         MVC   0(4,RF),4(RF)       COPY HEADER                                  
         LH    R1,0(RF)                                                         
         AHI   R1,4                MAKE RECORD 4 BYTES BIGGER                   
         STH   R1,0(RF)                                                         
         LR    R0,RF               R0 POINTS TO (L+8)(00)(L+4)(00)              
WOT3B    L     R1,=A(TAPEOUT)                                                   
         PUT   (1),(0)                                                          
         L     R1,ADAREC           SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,TODA             BUMP DA TAPE WRITE COUNTER                   
         BAS   R9,AGYTOT                                                        
*                                                                               
         TM    TCOPY,TAPE          TEST FOR SECOND TAPE OPTION                  
         BZ    WOTX                                                             
         L     R0,ADARECH          WRITE SAME RECORD TO DA COPY TAPE            
         L     R1,=A(TAPECPY)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOCDA            BUMP DA COPY TAPE WRITE COUNTER              
         AHI   R1,1                                                             
         ST    R1,TOCDA                                                         
*                                                                               
WOTX     L     R9,SAVER9           GET RETURN ADDRESS                           
         BR    R9                                                               
         EJECT                                                                  
* WRITE OUTPUT DIRECTORY TAPE (TAPEDIR) - R4 POINTS TO RECORD                   
*                                                                               
WODIR    ST    R9,SAVER9           SAVE RETURN ADDRESS                          
         LH    R1,ISRECL           GET IS FILE RECORD LENGTH                    
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         L     RF,=A(DIRRECH)                                                   
         ST    R1,0(RF)                                                         
         LA    RF,4(RF)            POINT TO TAPEDIR I/O AREA                    
         LR    RE,R4               POINT TO IS REC                              
         LH    R1,ISRECL                                                        
         MOVE  ((RF),(R1)),(R4)                                                 
         L     R0,=A(DIRRECH)                                                   
         L     R1,=A(TAPEDIR)                                                   
         PUT   (1),(0)                                                          
         LA    R1,ISREC            SET AGY/CPY RECORD FLAGS                     
         BAS   R9,AGYTYPE                                                       
         LA    R1,TOIS             BUMP IS TAPE WRITE COUNTER                   
         BAS   R9,AGYTOT                                                        
WOTAPEX  L     R9,SAVER9           GET RETURN ADDRESS                           
         BR    R9                                                               
         EJECT                                                                  
CLSIN    L     R2,=A(TAPEIN)                                                    
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
CLSOUT   L     R2,=A(TAPEOUT)                                                   
         CLOSE ((2))                                                            
         TM    TCOPY,TAPE                                                       
         BZR   R9                                                               
         L     R2,=A(TAPECPY)                                                   
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
OPNDIR   L     R2,=A(TAPEDIR)                                                   
         OPEN  ((2),OUTPUT)                                                     
         BR    R9                                                               
*                                                                               
CLSDIR   L     R2,=A(TAPEDIR)                                                   
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
OPNRCV   L     R2,=A(RCVTAPE)                                                   
         OPEN  ((2),OUTPUT)                                                     
         BR    R9                                                               
*                                                                               
CLSRCV   L     R2,=A(RCVTAPE)                                                   
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
RIDAFILE MVI   RECFLAG,0           READ DIRECT FILE DIRECTLY                    
         DC    H'0'                                                             
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* GET/PUT MESSAGE TO OPERATOR AND OPTIONALLY TO PRINTER               *         
* MESSAGE IS IN OPERMSG AND REPLY IS RETURNED IN OPERANS              *         
***********************************************************************         
PUTMSG   MVI   DMCB+16,X'01'       SET PUT FLAG                                 
         J     PAGM1                                                            
PUTMSGI  MVI   DMCB+16,X'09'       SET PUT IMMEDIATE FLAG                       
         J     PAGM1                                                            
PUTMSGP  MVI   DMCB+16,X'81'       SET PUT AND PRINT FLAG                       
         J     PAGM1                                                            
PUTMSGPI MVI   DMCB+16,X'89'       SET PUT IMMEDIATE AND PRINT FLAG             
         J     PAGM1                                                            
PUTMSGPO MVI   DMCB+16,X'80'       SET PUT MESSAGE TO PRINTER ONLY              
         J     PAGM1                                                            
GETMSG   MVI   DMCB+16,X'02'       SET GET FLAG                                 
         J     PAGM1                                                            
PAGMSG   MVI   DMCB+16,X'03'       SET PUT AND GET FLAGS                        
*NOP*    OI    DMCB+16,X'08'                                                    
         J     PAGM1                                                            
PAGMSGL  MVI   DMCB+16,X'23'       SET PUT AND GET FLAGS LONG MESSAGE           
*NOP*    OI    DMCB+16,X'08'                                                    
         J     PAGM1                                                            
PAGMSGN  MVI   DMCB+16,X'43'       SET PUT AND GET FLAGS (NO TEST)              
         J     PAGM1                                                            
PAGMSGP  MVI   DMCB+16,X'83'       SET PUT AND GET FLAGS AND PRINT              
         J     PAGM1                                                            
PAGMSGNP MVI   DMCB+16,X'C3'       SET PUT AND GET FLAGS (NO TEST) PRT          
*                                                                               
PAGM1    TM    ECHO,YES            TEST TO ECHO PRINT OPERATOR MESSAGES         
         JZ    *+8                                                              
         OI    DMCB+16,X'80'                                                    
PAGM1A   TM    DMCB+16,X'01'       PUT MSG IN OPERMSG TO CONSOLE                
         JZ    PAGM1B                                                           
         MVC   DMCB(4),=F'1'       SET WRITE TO CONSOLE                         
         TM    DMCB+16,X'08'                                                    
         JNO   *+8                                                              
         MVI   DMCB,X'FF'          SET TO WRITE IMMEDIATE                       
         LHI   R0,60                                                            
         TM    DMCB+16,X'20'       TEST LONG MESSAGE                            
         JZ    *+8                                                              
         LHI   R0,100                                                           
         GOTO1 =V(LOGIO),DMCB,,((R0),OPERMSG)                                   
PAGM1B   TM    DMCB+16,X'80'       AND SEE IF PRINTER ALSO                      
         JZ    PAGM1C                                                           
         TM    LDERRORF,X'05'      TEST IF ALREADY PRINTED                      
         JO    PAGM1C                                                           
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(120),OPERMSG                                                
         GOTO1 =V(PRINTER)                                                      
PAGM1C   SR    RF,RF               SET CC                                       
*                                                                               
PAGM2    TM    DMCB+16,X'02'       GET REPLY INTO OPERANS                       
         JZ    PAGMX                                                            
         MVC   OPERANS,SPACES                                                   
         CLI   OPERREP,C' '                                                     
         JE    PAGM2A                                                           
         MVC   OPERANS,OPERREP     SET REPLY FROM REPLY=XXXXX PARM              
         J     PAGM2B                                                           
PAGM2A   GOTO1 =V(LOGIO),DMCB,0,(8,OPERANS)                                     
PAGM2B   TM    DMCB+16,X'80'       TEST TO PRINT OPERATOR ANSWER                
         JZ    PAGM2D                                                           
         MVC   P(15),=C'CONSOLE INPUT: '                                        
         MVC   P+17(8),OPERANS                                                  
         CLI   OPERREP,C' '                                                     
         JE    *+10                                                             
         MVC   P+29(12),=C'<<AUTO REPLY'                                        
         GOTO1 =V(PRINTER)                                                      
         GOTO1 =V(PRINTER)                                                      
PAGM2D   TM    DMCB+16,X'40'                                                    
         JO    PAGMX               EXIT IF NO TEST OF REPLY                     
*                                                                               
PAGM3    LHI   RF,-1               CC=LOW FOR EOJ/CANCEL                        
         CLC   OPERANS(6),=C'CANCEL'                                            
         JE    PAGMX                                                            
         CLC   OPERANS(3),=C'EOJ'                                               
         JE    PAGMX                                                            
*                                                                               
         LHI   RF,0                CC=EQL FOR ERASE/IGNORE                      
         CLC   OPERANS(5),=C'ERASE'                                             
         JE    PAGMX                                                            
         CLC   OPERANS(6),=C'IGNORE'                                            
         JE    PAGMX                                                            
*                                                                               
         LHI   RF,1                CC=HIGH FOR OTHER VALUES                     
*                                                                               
PAGMX    LTR   RF,RF               EXIT WITH CC SET                             
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* SET RECORD TYPE FLAG - R1 POINTS TO RECORD                          *         
***********************************************************************         
RECTYPE  STM   RE,R2,12(RD)                                                     
         MVI   RECFLAG,0                                                        
*                                                                               
RECT1    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         JNZ   RECT1A                                                           
         OC    0(4,R1),0(R1)       TEST FILE HEADER RECORD                      
         JNZ   RECT2                                                            
         OI    RECFLAG,RECHDR                                                   
         J     RECT4                                                            
RECT1A   OC    0(4,R1),0(R1)       TEST MULTI FILE HEADER RECORD                
         JNZ   RECT2                                                            
         LR    RE,R1                                                            
         AH    RE,ISKEYL1          POINT TO LAST BYTE OF KEY                    
         CLI   0(RE),X'01'         TEST AND SET FILE1 REC                       
         JNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE1                                             
         J     RECT4                                                            
         CLI   0(RE),X'02'         TEST AND SET FILE2 REC                       
         JNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE2                                             
         J     RECT4                                                            
         TM    SVDMULTI,LDDQDA4                                                 
         JZ    RECT2                                                            
         CLI   0(RE),X'03'         TEST AND SET FILE3 REC                       
         JNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE3                                             
         J     RECT4                                                            
         CLI   0(RE),X'04'         TEST AND SET FILE4 REC                       
         JNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE4                                             
         J     RECT4                                                            
*                                                                               
RECT2    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         JNZ   RECT2A                                                           
         CLI   0(R1),X'FF'         TEST FILE TRAILER RECORD                     
         JNE   RECT4                                                            
         OI    RECFLAG,RECTRL                                                   
         J     RECT4                                                            
RECT2A   CLI   0(R1),X'FF'         TEST FILE1 TRAILER RECORD                    
         JNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE1                                             
         J     RECT4                                                            
         CLI   1(R1),X'FF'         TEST KEY STARTS WITH ??FF                    
         JNE   RECT4                                                            
         CLI   0(R1),X'FE'         TEST FILE2 TRAILER RECORD                    
         JNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE2                                             
         J     RECT4                                                            
         TM    SVDMULTI,LDDQDA4                                                 
         JZ    RECT4                                                            
         CLI   0(R1),X'FD'         TEST FILE3 TRAILER RECORD                    
         JNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE3                                             
         J     RECT4                                                            
         CLI   0(R1),X'FC'         TEST FILE4 TRAILER RECORD                    
         JNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE4                                             
         J     RECT4                                                            
*                                                                               
RECT4    LA    R0,ISREC            TEST ISREC PASSED                            
         CR    R0,R1                                                            
         JE    RECT6                                                            
*                                                                               
RECT5    LH    R0,ISRECL           TEST DAREC CONTAINS AN ISREC                 
         AHI   R0,4                                                             
         L     RF,ADARECH                                                       
         CH    R0,0(RF)                                                         
         JNE   RECT7                                                            
         OI    RECFLAG,RECPTR      SET DAREC IS A POINTER REC                   
*                                                                               
RECT6    TM    SVDMULTI,LDDQIPTR   TEST IF DIR HAS INDIRECT POINTERS            
         JZ    RECT7                                                            
         TM    RECFLAG,RECHDR+RECTRL                                            
         JNZ   RECT7                                                            
         LR    RE,R1                                                            
         AH    RE,SVDIPDSP         GET DISPLACEMENT TO I/S REC FIELD            
         SR    RF,RF                                                            
         ICM   RF,1,SVDIPLEN       ARGUMENT LENGTH MUST BE NON ZERO             
         JZ    RECT7                                                            
         BCTR  RF,0                                                             
         LR    R0,R1               SAVE A(RECORD)                               
         BASR  R1,0                                                             
         CLC   SVDIPARG(0),0(RE)   TEST INDIRECT POINTER RECORD                 
         EX    RF,0(R1)                                                         
         JNE   RECT7                                                            
         OI    RECFLAG,RECPTR+RECIPR                                            
*                                                                               
RECT7    EQU   *                                                                
*                                                                               
RECTX    LM    RE,R2,12(RD)                                                     
         BR    R9                                                               
*                                                                               
RECHDR   EQU   X'01'               HEADER RECORD                                
RECTRL   EQU   X'02'               TRAILER RECORD                               
RECPTR   EQU   X'04'               POINTER RECORD                               
RECIPR   EQU   X'08'               INDIRECT POINTER RECORD                      
         EJECT                                                                  
***********************************************************************         
* SET AGY/CPY CODE AND RECORD TYPE BY CALLING APPLICATION V(LDRECTY)  *         
* R1=A(RECORD)                                                        *         
***********************************************************************         
AGYTYPE  STM   RE,R1,SAVERER1                                                   
         ICM   RF,15,VLDRECTY      TEST IF RECORD TYPE EXTERNAL                 
         BZR   R9                                                               
         XC    RECTYV,RECTYV       CLEAR RECORD TYPE VALUES                     
         ZAP   RECTYVM,=P'0'                                                    
         LR    R0,R1               SAVE A(RECORD)                               
         MVC   RTYPMODE,MODE       PASS MODE                                    
         MVC   RTYPFLAG,RECFLAG    PASS RECORD TYPE FLAG                        
         LA    RE,ISREC            TEST ISREC PASSED                            
         CR    R1,RE                                                            
         JNE   AGYT2                                                            
AGYT1    MVI   RTYPDAIS,C'I'       SET I/S FILE RECORD                          
         MVC   RTYPFNUM,LDFINOS+0                                               
         LA    R1,PLRECTIS                                                      
         J     AGYT3                                                            
AGYT2    MVI   RTYPDAIS,C'D'       SET D/A FILE RECORD                          
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         LA    RE,LDFINOS+1(RE)                                                 
         MVC   RTYPFNUM,0(RE)                                                   
         LA    R1,PLRECTDA                                                      
AGYT3    BASR  RE,RF               PASS CONTROL TO V(LDRECTY)                   
         CLI   RTYRAGCO,0                                                       
         BNE   *+8                                                              
         MVI   RTYRAGCO,255        SET UNKNOWN AGY/CMP TO LAST SLOT             
         LM    RE,R1,SAVERER1                                                   
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* BUMP COUNTER POINTED TO BY R1 AND AGY/CPY COUNTER IF DEFINED        *         
* EXIT WITH R1 EQUAL TO NEW VALUE OF COUNTER                          *         
***********************************************************************         
AGYTOT   LR    RF,R1               SAVE A(COUNTER)                              
         XR    RE,RE               RE=ZERO IF NO MONEY FIELD RETURNED           
         L     R1,0(RF)            BUMP I/O COUNTER                             
         AHI   R1,1                                                             
         ST    R1,0(RF)                                                         
         TP    RECTYVM             TEST IF VALID MONEY FIELD RETURNED           
         JNE   AGYTOT1                                                          
         AP    4(8,RF),RECTYVM                                                  
         LR    RE,RF               SAVE A(COUNTER) FOR MONEY FIELD              
*                                                                               
AGYTOT1  ICM   RF,15,28(RF)        GET A(AGY/CPY TOTALS ARRAY)                  
         BZR   R9                                                               
         SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO       TEST IF AGY/CPY DEFINED                      
         BZR   R9                                                               
         SLL   R0,2                                                             
         AR    RF,R0               POSITION TO AGY/CPY TOTAL FIELD              
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP I/O COUNTER                             
*                                                                               
AGYTOT2  LTR   RF,RE               TEST IF VALID MONEY WAS RETURNED             
         BZR   R9                                                               
         ICM   RF,15,32(RF)        GET A(AGY/CPY MONEY ARRAY)                   
         BZR   R9                                                               
         SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO       TEST IF AGY/CPY DEFINED                      
         BZR   R9                                                               
         SLL   R0,3                                                             
         AR    RF,R0               POSITION TO AGY/CPY MONEY FIELD              
         AP    0(8,RF),RECTYVM                                                  
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* CONVERT R0 TO DECIMAL IN DUB                                        *         
***********************************************************************         
CVD      CVD   R0,DUB1                                                          
         UNPK  DUB,DUB1+3(5)                                                    
         OI    DUB+7,X'F0'                                                      
         BR    RE                                                               
                                                                                
***********************************************************************         
* CONVERT R0 TO DECIMAL IN DUB AND CLEAR LEADING ZEROS                *         
***********************************************************************         
CVDE     CVD   R0,DUB1                                                          
         MVC   DUB,=X'4020202020202021'                                         
         ED    DUB,DUB1+4                                                       
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         LTORG                                                                  
         DS    0F                                                               
*DMLDPARMS                                                                      
       ++INCLUDE DMLDPARMS                                                      
*                                                                               
EXTTABL  DS    0F                                                               
BALCNAME DC    CL8' ',A(VLDBALCK),CL8'BALC'                                     
CPTRNAME DC    CL8' ',A(VLDCPTRS),CL8'CPTR'                                     
DCNTNAME DC    CL8' ',A(VLDCOUNT),CL8'DCNT'                                     
PRGENAME DC    CL8' ',A(VLDPURGE),CL8'PRGE'                                     
SETLNAME DC    CL8' ',A(VLDSETL),CL8'SETL'                                      
SIZENAME DC    CL8' ',A(VLDSIZE),CL8'SIZE'                                      
SORTNAME DC    CL8' ',A(VLDSORT),CL8'SORT'                                      
TPTRNAME DC    CL8' ',A(VLDTPTRS),CL8'TPTR'                                     
DEFNNAME DC    CL8' ',A(VLDDEFN),CL8'DEFN'                                      
RECTNAME DC    CL8' ',A(VLDRECTY),CL8'RECT'                                     
         DC    XL2'00'                                                          
*                                                                               
MAX_RECS DC    F'0'                                                             
MAX_DUPK DC    F'0'                                                             
MAX_SEQE DC    F'0'                                                             
MAX_BADA DC    F'0'                                                             
MAX_KEYN DC    F'0'                                                             
MAX_BADR DC    F'0'                                                             
MAX_TERR DC    F'0'                                                             
MAX_PERR DC    F'0'                                                             
AGEHRS   DC    H'0'                                                             
DABLKSZ  DC    H'0'                                                             
ISBLKSZ  DC    H'0'                                                             
DAKEYLN  DC    H'0'                                                             
SRTFILSB DC    F'0'                                                             
SRTFILSA DC    CL10' '                                                          
GLOBALW  DC    X'00'               GLOBAL WARMING FLAG                          
LDERRORF DC    X'00'               SET TO X'01' IF PRINTING COUNTERS            
*                                                                               
AISRECH  DC    A(ISRECH)                                                        
AISREC   DC    A(ISREC)                                                         
ADARECH  DC    A(DARECH)                                                        
ADAREC   DC    A(DAREC)                                                         
*                                                                               
XTRNNAME DC    CL8' '                                                           
SYSNAME  DC    CL8' '                                                           
DAFILEID DC    CL8' '                                                           
DAFILEIX DC    CL8' '                                                           
D2FILEID DC    CL8' '                                                           
D2FILEIX DC    CL8' '                                                           
D3FILEID DC    CL8' '                                                           
D3FILEIX DC    CL8' '                                                           
D4FILEID DC    CL8' '                                                           
D4FILEIX DC    CL8' '                                                           
ISFILEID DC    CL8' '                                                           
ISFILEIX DC    CL8' '                                                           
PHFILEID DC    CL8' '                                                           
PHFILEIX DC    CL8' '                                                           
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE AND MORE CONSTANTS                                  *         
***********************************************************************         
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
FULL1    DS    F                                                                
HALF     DS    H                                                                
HALF1    DS    H                                                                
HALF2    DS    H                                                                
BYTE     DS    X                                                                
BYTE1    DS    X                                                                
SAVER9   DS    F                                                                
SAVERE   DS    F                                                                
SAVERER1 DS    4F                                                               
ERRNUM   DS    F                                                                
SVMVSR1  DS    A                                                                
SAVERB   DS    A                                                                
ALOADPT  DS    A                                                                
*                                                                               
NOWTHMS  DS    PL4                 TIME=P'0HHMMSS+'                             
NOWTIME  DS    CL6                 TIME=C'HHMMSS'                               
NOWACTI  DS    XL6                 TIME=SECONDS SINCE 1/1/2000                  
NOWMILLI DS    XL4                 TIME=MILLISECS                               
*                                                                               
NOWDATES DS    0CL22               DATE VALUES NOW                              
NOWDVAL  DS    CL8                 DD/MM/YY OR MM/DD/YY                         
NOWDYMD  DS    CL6                 YYMMDD                                       
NOWDPCK  DS    PL3                 SAME ORDER AS DATCON TYPE 31 CALL            
NOWDCMP  DS    XL2                                                              
NOWDBIN  DS    XL3                                                              
*                                                                               
USEDATES DS    0CL22               DATE VALUES FROM DATE=CARD                   
DATEVAL  DS    CL8                 DD/MM/YY OR MM/DD/YY                         
DATEYMD  DS    CL6                 YYMMDD                                       
DATEPCK  DS    PL3                 SAME ORDER AS DATCON TYPE 31 CALL            
DATECMP  DS    XL2                                                              
DATEBIN  DS    XL3                                                              
*                                                                               
CPYDTIME DS    0CL39               DATE/TIME VALUES FROM COPYTIME=CARD          
CPYDVAL  DC    CL8' '              DD/MM/YY OR MM/DD/YY                         
CPYDYMD  DC    CL6' '              YYMMDD                                       
CPYDPCK  DC    XL3'00'             SAME ORDER AS DATCON TYPE 31 CALL            
CPYDCMP  DC    XL2'00'                                                          
CPYDBIN  DC    XL3'00'                                                          
CPYTVAL  DC    CL8' '              HH:MM:SS                                     
CPYTBIN  DC    XL3'00'                                                          
CPYTACTI DC    XL6'00'                                                          
*                                                                               
FRSTTIME DC    C'N'                FIRST CARD READ AT TOP OF PROGRAM            
EOJFLAG  DC    C'N'                                                             
EOFIN    DC    C'N'                                                             
DONBALCK DC    C'N'                                                             
DIRFLAG  DC    X'00'               01=DIROUT,02=TAPEOUT,04=SORTER               
UPSIINP  DC    X'00'                                                            
UPSIVAL  DC    X'00'                                                            
*                                                                               
RECFLAG  DC    X'00'               RECORD TYPE FLAG                             
LRECFLAG DC    X'00'                                                            
FRSTIO   DC    X'00'                                                            
RECRFN   DC    X'00'               RECORD RELATIVE FILE NUMBER                  
*                                                                               
RECTYV   DS    0XL8                RECORD TYPE DATA SET BY V(LDRECTY)           
RTYPMODE DC    XL1'00'             MODE                                         
RTYPFLAG DC    XL1'00'             RECORD FLAGS INPUT                           
RTYPDAIS DC    CL1' '              DAFILE/ISFILE C'D'/C'I'                      
RTYPFNUM DC    XL1'00'             FILE NUMBER                                  
RTYRAGCO DC    XL1'00'             AGENCY/COMPANY                               
RTYRRTYP DC    XL1'00'             RECORD TYPE                                  
RTYRFLAG DC    XL1'00'             RECORD FLAGS RETURN                          
         DC    XL1'00'             N/D                                          
RECTYVM  DC    PL8'0'              RECORD TYPE MONEY RETURN FIELD               
         DC    XL3'00'             N/D                                          
*                                                                               
RECVKNEQ DC    X'00'               DELETED IS REC KEY NOT EQUAL                 
BADLEN   DC    H'0'                                                             
NEWLEN   DC    H'0'                                                             
FLAG1    DC    X'00'                                                            
RECOK    DC    X'00'                                                            
PEELDATE DC    XL2'00'             REMOVED ITEMS PEELED PRIOR TO DATE           
*                                                                               
SVDMULTI DC    X'00'               SAVED FLAGS FROM LDDEFN                      
SVDFLAG1 DC    X'00'                                                            
SVDFLAG2 DC    X'00'                                                            
SVDFLAG3 DC    X'00'                                                            
*                                                                               
SVDIDATA DS    0XL12               INDIRECT POINTER DATA                        
SVDIPDSP DC    AL2(0)              DISP TO CHARACTERS IN DIRECTORY REC          
SVDIPLEN DC    X'00'               LENGTH OF ARGUMENT                           
SVDIPARG DC    XL7'00'             ARG AT LDDIPDSP THAT SAYS INDIRECT           
         DC    X'00'               N/D                                          
SVDIPFLG DC    X'00'               INDIRECT POINTERS FLAGS                      
*                                                                               
TAPEFLAG DC    X'00'               WOTAPE ROUTINE FLAG                          
TAPEFPTR EQU   X'80'               WRITE I/S POINTER TO D/A TAPE                
*                                                                               
TOUTDSN  DC    X'00'               TAPEOUT DSN FLAG                             
TOUTDDS  EQU   X'80'               DSN=DDSDSN INPUT ON DD CARD                  
TOUTGEN  EQU   X'40'               DSN GENERATED WITH (+1)                      
TOUTLOC  EQU   X'20'               DSN GDG LOCATED                              
TOUTUSE  EQU   X'10'               DSN GDG USED IN OPEN                         
TOUTINVG EQU   X'04'               INVALID DSN GENERATION                       
TOUTINVL EQU   X'02'               INVALID GDG LOCATE                           
TOUTINVO EQU   X'01'               INVALID OPEN                                 
*                                                                               
TINPDSN  DC    X'00'               TAPEIN DSN FLAG                              
TINPDDS  EQU   X'80'               DSN=DDSDSN INPUT ON DD CARD                  
TINPGEN  EQU   X'40'               DSN GENERATED WITH (+1)                      
TINPLOC  EQU   X'20'               DSN GDG LOCATED                              
TINPUSE  EQU   X'10'               DSN GDG USED IN OPEN                         
TINPINVG EQU   X'04'               INVALID DSN GENERATION                       
TINPINVL EQU   X'02'               INVALID GDG LOCATE                           
TINPINVO EQU   X'01'               INVALID OPEN                                 
*                                                                               
DARFLAG  DC    X'00'               RECOVER ROUTINE FLAG                         
DARLOADQ EQU   X'80'               LOAD ACTION                                  
DARDUMPQ EQU   X'40'               DUMP ACTION                                  
DARXTRNQ EQU   X'20'               EXTERNAL ROUTINE                             
DARPRGEQ EQU   X'10'               PURGE ROUTINE                                
DARDELQ  EQU   X'08'               RECORD DELETED                               
DARCHAQ  EQU   X'04'               RECORD CHANGED                               
DARADDQ  EQU   X'02'               RECORD ADDED                                 
*                                                                               
DARFLAG1 DC    X'00'               RECOVER ROUTINE FLAG#1                       
DARCPYDQ EQU   X'80'               COPY RECORD IS DELETED                       
DARCPYWQ EQU   X'40'               COPY RECORD WRITTEN                          
DARCPYSQ EQU   X'01'               COPY RECORD SAVED                            
*                                                                               
UPDTFLAG DC    X'00'               UPDATE MODE FLAG                             
UPDTNONO EQU   X'80'               READ-ONLY MODE                               
UPDTUBLK EQU   X'01'               UNBLOCKED ADD MODE                           
*                                                                               
         DC    3X'00'              N/D                                          
         DS    0F                                                               
RCVHDR   DS    0CL24               RECOVERY RECORD HEADER                       
RCVFILTY DC    XL1'00'   +0        FILE NUMBER                                  
RCVRECTY DC    XL1'00'   +1        TRNS CODE (01=COPY,02=CHG,03=ADD)            
         DC    XL2'00'   +2                                                     
RCVSIN   DC    XL4'00'   +4        SYSTEM INPUT NUMBER                          
RCVTIME  DC    PL4'0'    +8        TIME 0HHMMSS+                                
RCVVCHR  DC    XL4'00'   +12       DISK ADDRESS                                 
RCVSYS   DC    XL1'00'   +16       SYSTEM NUMBER                                
RCVPRG   DC    XL1'00'   +17       PROGRAM NUMBER                               
RCVDATE  DC    XL3'00'   +18       YMD BINARY                                   
RCVAG    DC    XL1'00'   +21       AGENCY/COMPANY                               
RCVUSER  DC    XL2'00'   +22       USER ID NUMBER                               
                                                                                
RCXEXT   DS    0CL28               RECOVERY RECORD EXTENSION (TRAILER)          
RCXSAFE  DC    XL2'00'   +0        MUST BE X'0000' FOR SAFETY                   
RCXAGYS  DC    XL2'00'   +2        SECURITY AGENCY TO USE WITH RPERSON          
RCXSYSIX DC    XL1'00'   +4        COPY OF SSBSYSID                             
RCXSTAT  DC    XL1'20'   +5        FLAGS                                        
RCXSTTKT EQU   X'80'               DDS TICKET NUMBER REPLACES LUID              
RCXSTSUP EQU   X'40'               SPECIAL UPDATE ALLOWED                       
RCXSTOFL EQU   X'20'               OFFLINE RECOVERY RECORD                      
RCXSTDPE EQU   X'08'               DDS PERSON                                   
RCXSTDTE EQU   X'04'               DDS TERMINAL                                 
RCXSTPPS EQU   X'02'               PPS AGENCY                                   
RCXSTDPO EQU   X'01'               DDS PERSON OVERRIDE ON RAGYSEC               
RCXLUID  DC    0XL8      +6        TERMINAL LUID                                
RCXTICK  DC    XL8'00'   +6        TICKET NUMBER IF RCXSTAT=RCXSTTKT            
RCXGIN   DC    0XL8      +14       GLOBAL INPUT TRANSACION ID                   
RCXGINTS DC    XL4'00'   +14       F'GIN TIMESTAMP' (SECS SINCE 1900)           
RCXGINNM DC    XL4'00'   +18       F'GLOBAL INPUT TRANSACION #'                 
RCXTMS   DC    XL4'00'   +22       RCVTIME IN MILLISECS                         
RCXGEST  DC    XL1'00'   +26       GLOBAL FLAGS                                 
RCXSUSSS EQU   X'80'               RECORD WAS SENT TO USS EXTRACT               
RCXLEN   DC    AL1(28)   +27       LENGTH OF EXTENSION                          
RCXLENQ  EQU   *-RCXEXT                                                         
                                                                                
OPENDA   DC    A(0)                OPEN COMMAND AREA (DISP=SHR OR OLD)          
OPENIS   DC    A(0)                                                             
*                                                                               
P1       DS    F                   PARAM LIST FOR ISDDS                         
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
Q1       DS    F                   PARAM LIST FOR DADDS                         
Q2       DS    F                                                                
Q3       DS    F                                                                
Q4       DS    F                                                                
Q5       DS    F                                                                
Q6       DS    F                                                                
*                                                                               
DSKADR   DS    F                                                                
DMCB     DS    6F                                                               
PARA     DS    6F                                                               
SORTPL   DS    3F                                                               
*                                                                               
LINKADR  DS    A                   LINK ADDRESS                                 
LINKVAL  DS    F                   LINK VALUE                                   
ACTIADR  DS    A                   ACTIVITY ADDRESS                             
*                                                                               
ACTILNQ  EQU   6                                                                
ACTIINI  DC    XL3'00',AL1(ACTILNQ),(ACTILNQ)X'00'                              
*                                                                               
ACTISAVE DS    0XL10               ACTIVITY SAVE AREA                           
ACTILOC  DS    XL2                 ACTIVITY LOCATION                            
ACTIFLG  DS    XL1                 ACTIVITY FLAG                                
ACTILEN  DS    XL1                 ACTIVITY LENGTH                              
ACTIDAT  DS    XL6                 ACTIVITY DATA                                
*                                                                               
WORK     DS    CL256                                                            
STXLST   DS    CL128                                                            
C        DS    CL80                                                             
OPNOTF   DC    X'00'                                                            
OPNINF   DC    X'00'                                                            
TAPETYP  DC    X'00'                                                            
TAPECNT  DC    X'00'                                                            
TAPEFILE DC    CL8' '              FILE NAME FROM TAPEIN HEADER RECORD          
*                                                                               
TAPEAGE  DS    0CL18               AGE DATA FROM TAPEIN HEADER REC              
TAPEDATE DC    CL8' '                                                           
TAPETIME DC    CL6' '                                                           
TAPEACTI DC    XL4'00'                                                          
*                                                                               
TRKBUFLN EQU   60000                                                            
PTRBLKLN EQU   128000                                                           
*                                                                               
AISTRK   DC    A(0)                                                             
AF1TRK   DC    A(0)                                                             
AF2TRK   DC    A(0)                                                             
AF3TRK   DC    A(0)                                                             
AF4TRK   DC    A(0)                                                             
APTRBLK  DC    A(0)                                                             
                                                                                
SVD1HDR  DS    CL32                SAVED USER HEADER DATA                       
SVD2HDR  DS    CL32                                                             
SVD3HDR  DS    CL32                                                             
SVD4HDR  DS    CL32                                                             
SVDAHDR  EQU   SVD1HDR                                                          
SVDBHDR  EQU   SVD2HDR                                                          
SVDLHDR  EQU   *-SVD1HDR                                                        
                                                                                
SVD1ACT  DC    XL4'00'             SAVED ACTIVITY HEADER FIELD                  
SVD2ACT  DC    XL4'00'                                                          
SVD3ACT  DC    XL4'00'                                                          
SVD4ACT  DC    XL4'00'                                                          
SVDLACT  EQU   *-SVD1ACT                                                        
*                                                                               
DAINF    DS    0CL56               DA FILE INFO                                 
DANAME   DS    CL8                                                              
DADTFA   DS    A                                                                
DARECA   DS    A                                                                
DABLKL   DS    H                                                                
DAELD    DS    H                                                                
DALINKD  DS    H                                                                
DAKEYL   DS    H                                                                
DACTLL   DS    H                                                                
DAMIN    DS    H                                                                
DAMAX    DS    H                                                                
DAFNUM   DS    X                                                                
DAFLAG   DS    X                                                                
DADDDA   DS    A                                                                
DACOUNT  DS    F                                                                
DALAST   DS    XL4                                                              
DANAMF   DS    CL8                                                              
DAEXTNO  DS    XL1                                                              
DAFLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
F1INFO   DS    0CL56               DA FILE INFO FOR 1ST DA FILE                 
F1NAME   DS    CL8                                                              
F1DTFA   DS    A                                                                
F1RECA   DS    A                                                                
F1BLKL   DS    H                                                                
F1ELD    DS    H                                                                
F1LINKD  DS    H                                                                
F1KEYL   DS    H                                                                
F1CTLL   DS    H                                                                
F1MIN    DS    H                                                                
F1MAX    DS    H                                                                
F1FNUM   DS    X                                                                
         DS    X                                                                
F1DDDA   DS    A                                                                
F1COUNT  DS    F                                                                
F1LAST   DS    XL4                                                              
F1NAMF   DS    CL8                                                              
F1EXTNO  DS    XL1                                                              
F1FLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
F2INFO   DS    0CL56               DA FILE INFO FOR 2ND DA FILE                 
F2NAME   DS    CL8                                                              
F2DTFA   DS    A                                                                
F2RECA   DS    A                                                                
F2BLKL   DS    H                                                                
F2ELD    DS    H                                                                
F2LINKD  DS    H                                                                
F2KEYL   DS    H                                                                
F2CTLL   DS    H                                                                
F2MIN    DS    H                                                                
F2MAX    DS    H                                                                
F2FNUM   DS    X                                                                
         DS    X                                                                
F2DDDA   DS    A                                                                
F2COUNT  DS    F                                                                
F2LAST   DS    XL4                                                              
F2NAMF   DS    CL8                                                              
F2EXTNO  DS    XL1                                                              
F2FLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
F3INFO   DS    0CL56               DA FILE INFO FOR 3RD DA FILE                 
F3NAME   DS    CL8                                                              
F3DTFA   DS    A                                                                
F3RECA   DS    A                                                                
F3BLKL   DS    H                                                                
F3ELD    DS    H                                                                
F3LINKD  DS    H                                                                
F3KEYL   DS    H                                                                
F3CTLL   DS    H                                                                
F3MIN    DS    H                                                                
F3MAX    DS    H                                                                
F3FNUM   DS    X                                                                
         DS    X                                                                
F3DDDA   DS    A                                                                
F3COUNT  DS    F                                                                
F3LAST   DS    XL4                                                              
F3NAMF   DS    CL8                                                              
F3EXTNO  DS    XL1                                                              
F3FLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
F4INFO   DS    0CL56               DA FILE INFO FOR 4TH DA FILE                 
F4NAME   DS    CL8                                                              
F4DTFA   DS    A                                                                
F4RECA   DS    A                                                                
F4BLKL   DS    H                                                                
F4ELD    DS    H                                                                
F4LINKD  DS    H                                                                
F4KEYL   DS    H                                                                
F4CTLL   DS    H                                                                
F4MIN    DS    H                                                                
F4MAX    DS    H                                                                
F4FNUM   DS    X                                                                
         DS    X                                                                
F4DDDA   DS    A                                                                
F4COUNT  DS    F                                                                
F4LAST   DS    XL4                                                              
F4NAMF   DS    CL8                                                              
F4EXTNO  DS    XL1                                                              
F4FLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
ISINF    DS    0CL40               IS FILE INFO                                 
ISNAME   DS    CL8                                                              
ISDTFA   DS    A                                                                
ISKEYL   DS    H                                                                
ISKEYL1  DS    H                                                                
ISRECL   DS    H                                                                
ISFBYTE  DS    H                                                                
ISFBITS  DS    X                                                                
ISFSRL   DS    X                                                                
ISFLAG   DS    X                                                                
ISFILL   DS    X                                                                
ISDDDA   DS    A                                                                
ISNAMF   DS    CL8                                                              
ISEXTNO  DS    XL1                                                              
ISFLAG1  DS    XL1                                                              
         DS    XL2                                                              
*                                                                               
VLDDEFN  DC    V(LDDEFN)           FILE DEFINITION                              
VLDPURGE DC    V(LDPURGE)          PURGE TEST                                   
VLDCPTRS DC    V(LDCPTR)           CREATE DIRECTORY POINTERS                    
VLDTPTRS DC    V(LDTPTR)           TEST DIRECTORY POINTERS (PASSIVE)            
VLDCOUNT DC    V(LDCOUNT)          RECORD TYPE COUNT                            
VLDSIZE  DC    V(LDSIZE)           RECORD SIZE COUNT                            
VLDBALCK DC    V(LDBALCK)          MONEY/HASH TOTALS                            
VLDSETL  DC    V(LDSETLEN)         RECORD LENGTH SET/ADJUST                     
VLDSORT  DC    V(LDSORT)           SPECIAL DIRECTORY SORT ROUTINES              
VLDRECTY DC    V(LDRECTY)          RECORD TYPE                                  
*                                                                               
PLXTRN   DC    A(DAREC),A(TAPEOUT),A(PARMCARD),V(LDDEFN),V(PRINTER)             
         DC    V(CPRINT),V(CARDS),A(PEELDATE),A(ISREC),A(PARMTBL)               
         DC    A(ACTISAVE),A(USEDATES),A(SSB),V(DATAMGR)                        
PLDBLK   DC    A(DAREC),A(DABLKL),F'0',A(DANAMF)                                
PLCOUNT  DC    A(ISREC),A(ISNAMF),A(PEELDATE),A(0)                              
PLPURGE  DC    A(DAREC),A(PEELDATE),A(DALAST),A(0),A(0)                         
PLCPTRS  DC    A(DAREC),A(0),A(0),A(0),A(P5),A(PARMTBL)                         
PLTPTRS  DC    A(ISREC),A(WORK),A(0),A(0)                                       
PLSIZE   DC    A(0),A(DANAMF),A(0),A(0)                                         
PLBALCK  DC    A(DAREC),A(DANAMF),A(0),A(0),X'F9F90000',A(PARMTBL)              
PLRECTDA DC    A(DAREC),A(DANAMF),A(RECTYV),A(0)                                
PLRECTIS DC    A(ISREC),A(ISNAMF),A(RECTYV),A(0)                                
*                                                                               
CPUID    DS    CL4                 MVS CPUID                                    
CSRESULT DC    AL1(0)              RESULT OF SECHK ROUTINE                      
CSRESERR DC    AL1(0)              ERROR CODE FROM CSRESULT                     
*                                                                               
         DS    0D                                                               
         DC    C'*LDCOND*'                                                      
LDCOND   DC    AL2(0)              CONDITION CODE                               
APPCOND  DC    AL2(0)              CONDITION CODE FOR APPLICATION               
LDSENA   DC    CL5' '              SE NAME                                      
LDSENO   DC    XL1'00'             SE NUMBER                                    
*                                                                               
LDSEATS  DC    XL1'00'             SE ATTRIBUTES                                
LDFIATS  DC    XL5'00'             FILE ATTRIBUTES                              
FLASHQ   EQU   X'80'               FLASHABLE                                    
GLOBALQ  EQU   X'40'               GLOBAL                                       
VLISQ    EQU   X'20'               V/L INDEX SEQ FILE                           
DSNMATQ  EQU   X'80'               DSN MATCH                                    
*                                                                               
LDFINOS  DC    XL5'00'             FILE NUMBERS                                 
LDSPACE  DC    CL1' '              DSPACE=X INPUT VALUE                         
         DC    XL2'00'                                                          
*                                                                               
OPERMSG  DC    CL60' '             MESSAGE TO OPERATOR                          
OPERMSGX DC    CL60' '                                                          
OPERANS  DC    CL08' '             REPLY FROM OPERATOR                          
OPERREP  DC    CL08' '             REPLY FROM INPUT PARAM REPLY=                
*                                                                               
INFOMSG1 DC    C'DA FILE XXXXXXXX LOADED'                                       
         DC    C' TRKS ALLOC='                                                  
INFOTRKA DC    CL7' '                                                           
         DC    C',TRKS USED='                                                   
INFOTRKU DC    CL7' '                                                           
         DC    C',TRKS AVAIL='                                                  
INFOTRKL DC    CL7' '                                                           
         DC    C',TRK FORMAT='                                                  
INFOTRKF DC    CL6' '                                                           
INFOMS1L EQU   *-INFOMSG1                                                       
*                                                                               
INFOMSG2 DC    C'IS FILE XXXXXXXX LOADED'                                       
         DC    C' PDTK ALLOC='                                                  
INFOPDTA DC    CL7' '                                                           
         DC    C',PDTK USED='                                                   
INFOPDTU DC    CL7' '                                                           
         DC    C',PDTK AVAIL='                                                  
INFOPDTL DC    CL7' '                                                           
         DC    C',TRK FORMAT='                                                  
INFOPDTF DC    CL6' '                                                           
INFOMS2L EQU   *-INFOMSG2                                                       
*                                                                               
INFOMSG3 DC    CL(L'INFOMSG2)' ',C' '                                           
INFOMC1L DC    CL3' '                                                           
         DC    CL2' '                                                           
INFOMC1T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC1U DC    CL7' '                                                           
         DC    C','                                                             
INFOMC2L DC    CL3' '                                                           
         DC    CL1' '                                                           
INFOMC2T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC2U DC    CL7' '                                                           
INFOMS3L EQU   *-INFOMSG3                                                       
*                                                                               
INFOMSG4 DC    C'IS PDIXOV INDEX  LOADED '                                      
         DC    C'IXTK USED ='                                                   
INFOIXTU DC    CL7' '                                                           
         DC    C',TRKS USED='                                                   
INFOTTTU DC    CL7' '                                                           
INFOMS4L EQU   *-INFOMSG4                                                       
         EJECT                                                                  
***********************************************************************         
* TABLE OF LDCOUNTS,MONEY,DESCRIPTIONS PLUS AGENCY COUNTERS,MONEY     *         
***********************************************************************         
         DS    0F                                                               
LDCOUNTL DC    F'36'                                                            
LDCOUNTS DS    0CL36                                                            
TIIS     DC    F'0',PL8'0',CL16'IS TAPE READS   ',A(AGYTIIS),A(0)               
TIDA     DC    F'0',PL8'0',CL16'DA TAPE READS   ',A(AGYTIDA),A(AG$TIDA)         
TIDEL    DC    F'0',PL8'0',CL16'IN TAPE DELETES ',A(0),A(0)                     
DOF1     DC    F'0',PL8'0',CL16'DA DISK WRITES  ',A(AGYDOF1),A(AG$DOF1)         
DOF2     DC    F'0',PL8'0',CL16'D2 DISK WRITES  ',A(AGYDOF2),A(AG$DOF2)         
DOF3     DC    F'0',PL8'0',CL16'D3 DISK WRITES  ',A(AGYDOF3),A(AG$DOF3)         
DOF4     DC    F'0',PL8'0',CL16'D4 DISK WRITES  ',A(AGYDOF4),A(AG$DOF4)         
DIST     DC    F'0',PL8'0',CL16'SORTFIL INPUT   ',A(0),A(0)                     
DOST     DC    F'0',PL8'0',CL16'SORTFIL OUTPUT  ',A(0),A(0)                     
DOIS     DC    F'0',PL8'0',CL16'IS DISK WRITES  ',A(AGYDOIS),A(0)               
DIIS     DC    F'0',PL8'0',CL16'IS DISK READS   ',A(AGYDIIS),A(0)               
DIISD    DC    F'0',PL8'0',CL16'IS DISK DELETES ',A(0),A(0)                     
DIISS    DC    F'0',PL8'0',CL16'IS DISK SKIPS   ',A(0),A(0)                     
DIISO    DC    F'0',PL8'0',CL16'IS DISK STATUS  ',A(0),A(0)                     
DIF1     DC    F'0',PL8'0',CL16'DA DISK READS   ',A(AGYDIF1),A(AG$DIF1)         
DIF1A    DC    F'0',PL8'0',CL16'DA ACTIVITY     ',A(0),A(0)                     
DIF1D    DC    F'0',PL8'0',CL16'DA DISK DELETES ',A(0),A(0)                     
DIF2     DC    F'0',PL8'0',CL16'D2 DISK READS   ',A(AGYDIF2),A(AG$DIF2)         
DIF2A    DC    F'0',PL8'0',CL16'D2 ACTIVITY     ',A(0),A(0)                     
DIF2D    DC    F'0',PL8'0',CL16'D2 DISK DELETES ',A(0),A(0)                     
DIF3     DC    F'0',PL8'0',CL16'D3 DISK READS   ',A(AGYDIF3),A(AG$DIF3)         
DIF3A    DC    F'0',PL8'0',CL16'D3 ACTIVITY     ',A(0),A(0)                     
DIF3D    DC    F'0',PL8'0',CL16'D3 DISK DELETES ',A(0),A(0)                     
DIF4     DC    F'0',PL8'0',CL16'D4 DISK READS   ',A(AGYDIF4),A(AG$DIF4)         
DIF4A    DC    F'0',PL8'0',CL16'D4 ACTIVITY     ',A(0),A(0)                     
DIF4D    DC    F'0',PL8'0',CL16'D4 DISK DELETES ',A(0),A(0)                     
TOIS     DC    F'0',PL8'0',CL16'IS TAPE WRITES  ',A(AGYTOIS),A(0)               
TODA     DC    F'0',PL8'0',CL16'DA TAPE WRITES  ',A(AGYTODA),A(AG$TODA)         
TOCIS    DC    F'0',PL8'0',CL16'IS TAPE CPY WRTS',A(0),A(0)                     
TOCDA    DC    F'0',PL8'0',CL16'DA TAPE CPY WRTS',A(0),A(0)                     
RCTCPY   DC    F'0',PL8'0',CL16'RCVTAPE CPY RECS',A(0),A(0)                     
RCTCHG   DC    F'0',PL8'0',CL16'RCVTAPE CHG RECS',A(0),A(0)                     
RCTDEL   DC    F'0',PL8'0',CL16'RCVTAPE DEL RECS',A(0),A(0)                     
RCTADD   DC    F'0',PL8'0',CL16'RCVTAPE ADD RECS',A(0),A(0)                     
*        DC    F'0',PL8'0',CL16'                ',A(0),A(0)                     
DUPKEY   DC    F'0',PL8'0',CL16'IS DISK DUP KEY ',A(0),A(0)                     
SEQERR   DC    F'0',PL8'0',CL16'IS DISK SEQ ERR ',A(0),A(0)                     
BADADR   DC    F'0',PL8'0',CL16'DA DISK BAD ADR ',A(0),A(0)                     
KEYNEQ   DC    F'0',PL8'0',CL16'DA DISK KEY NEQ ',A(0),A(0)                     
BADREC   DC    F'0',PL8'0',CL16'DA DISK BAD REC ',A(0),A(0)                     
         DC    F'0',PL8'0',CL16'RESERVED        ',A(0),A(0)                     
*        DC    F'0',PL8'0',CL16'                ',A(0),A(0)                     
APPABND  DC    F'0',PL8'0',CL16'APP ABEND       ',A(0),A(0)                     
APPWRN1  DC    F'0',PL8'0',CL16'APP WARNING #1  ',A(0),A(0)                     
APPWRN2  DC    F'0',PL8'0',CL16'APP WARNING #2  ',A(0),A(0)                     
*                                                                               
COUNTERX DC    X'FFFFFFFF'                                                      
ERRTOT   DC    F'0',PL8'0',CL16'TOTAL WARNINGS  ',A(0),A(0)                     
         EJECT                                                                  
***********************************************************************         
* RECORD AND I/O AREAS - LAST ADDRESSABLE FIELD IS ISREC              *         
***********************************************************************         
ISMAX    EQU   64                                                               
LISREC   DS    64C                                                              
                                                                                
         DS    0D                                                               
         DC    C'ISISISIS'                                                      
ISRECH   DS    F                                                                
ISREC    DS    4096C                                                            
ISRECX   DS    0C                                                               
                                                                                
         DS    0D                                                               
         DC    C'DADADADA'                                                      
DARECH   DS    F                                                                
DAREC    DS    16384C                                                           
DARECX   DS    0C                                                               
                                                                                
         DC    C'DASAFETY'                                                      
         DS    16384C                                                           
                                                                                
         DC    C'DRDRDRDR'                                                      
DIRRECH  DS    F                                                                
DIRREC   DS    512C                                                             
                                                                                
         DS    0D                                                               
         DC    C'DADACOPY'                                                      
DACPYH   DS    F                                                                
DACPYR   DS    XL24                                                             
DACPY    DS    16384C                                                           
DACPYT   DS    XL28                                                             
DACPYX   DS    0C                                                               
DACPYK   DC    XL(ISMAX)'00'                                                    
         DS    0D                                                               
IOBCCWL  DC    C'XXIOBCCW'                                                      
         DC    XL136'00'                                                        
                                                                                
EMAILID  DS    CL72                                                             
PARMCARD DS    CL80                                                             
STRKEY   DS    XL(ISMAX)                                                        
ENDKEY   DS    XL(ISMAX)                                                        
         ORG   STRKEY                                                           
         DS    (MAXKEY)XL(L'STRKEY+L'ENDKEY)                                    
MAXKEY   EQU   16                                                               
                                                                                
QUEST1   DC    CL60'ANY MORE INPUT TAPES ?'                                     
WARNCC   EQU   0008                                                             
*                                                                               
WARNMSG  DC CL60'**WARNING** XXX.XXXXXXXX IS ABOUT TO BE DELETED   '            
WARNMSGX DC CL60'                                                  '            
WARNDSNS DC CL60'**WARNING** XXX.XXXXXXXX DOES NOT MATCH YYY.YYYYYYYY'          
*                                                                               
WARNMSG1 DC CL60'**WARNING** TAPE=XXXXXXXX NOT SAME DISK=XXXXXXXX  '            
WARNMSG2 DC CL60'**WARNING** TAPE=XXXXXXXX NOT SAME TAPE=XXXXXXXX  '            
WARNMSG3 DC CL60'**WARNING** LOAD=COPX     NOT COMPATL DUMP=COPX   '            
WARNMSG4 DC CL60'**WARNING** DATE=DD/MM/YY TIME=HHMMSS OLD TAPEIN  '            
*                                                                               
WARNMSGG DC CL60'**WARNING** GLOBAL=N PARAMETER HAS BEEN IGNORED   '            
*                                                                               
WARNEOFI DC    CL60'EOF REC IS     '                                            
WARNDUPK DC    CL60'DUP KEY IS KEY='                                            
WARNSEQE DC    CL60'SEQ ERR IS KEY='                                            
WARNSTAV DC    CL60'STA VAL IS KEY='                                            
WARNADRF DC    CL60'ADR FMT IS KEY='                                            
WARNADRV DC    CL60'ADR VAL IS KEY='                                            
WARNADRL DC    CL60'ADR LNK DA KEY='                                            
*                                                                               
EXTMSG1  DC    CL60'EXTERNL ........ IS ACTIVE'                                 
EXTMSG2  DC    CL60'EXTERNL ........ IS NO-OP'                                  
*                                                                               
EMAILDEF DC    CL72' '                                                          
         EJECT                                                                  
*DMLDEQUS                                                                       
       ++INCLUDE DMLDEQUS                                                       
                                                                                
MODEL    DC    X'0D',CL10'COPY '      COPY FILE        VIA DIR                  
         DC    X'09',CL10'COPYD'      COPY DIR                                  
         DC    X'09',CL10'COPD '      COPY DIR                                  
         DC    X'05',CL10'COPYF'      COPY FILE                                 
         DC    X'05',CL10'COPF '      COPY FILE                                 
         DC    X'1D',CL10'COPYA'      COPY FILE1       VIA DIR                  
         DC    X'2D',CL10'COPYB'      COPY FILE2       VIA DIR                  
         DC    X'3D',CL10'COPYC'      COPY FILE1/2     VIA DIR                  
*                                                                               
         DC    X'1D',CL10'COPY1'      COPY FILE1       VIA DIR                  
         DC    X'2D',CL10'COPY2'      COPY FILE2       VIA DIR                  
         DC    X'4D',CL10'COPY3'      COPY FILE3       VIA DIR                  
         DC    X'8D',CL10'COPY4'      COPY FILE4       VIA DIR                  
         DC    X'3D',CL10'COPY12'     COPY FILE1/2     VIA DIR                  
         DC    X'5D',CL10'COPY13'     COPY FILE1/3     VIA DIR                  
         DC    X'9D',CL10'COPY14'     COPY FILE1/4     VIA DIR                  
         DC    X'6D',CL10'COPY23'     COPY FILE2/3     VIA DIR                  
         DC    X'AD',CL10'COPY24'     COPY FILE2/4     VIA DIR                  
         DC    X'CD',CL10'COPY34'     COPY FILE3/4     VIA DIR                  
         DC    X'7D',CL10'COPY123'    COPY FILE1/2/3   VIA DIR                  
         DC    X'BD',CL10'COPY124'    COPY FILE1/2/4   VIA DIR                  
         DC    X'FD',CL10'COPY1234'   COPY FILE1/2/3/4 VIA DIR                  
*                                                                               
         DC    X'15',CL10'COPYF1'     COPY FILE1                                
         DC    X'15',CL10'COPYFA'     COPY FILE1                                
         DC    X'25',CL10'COPYF2'     COPY FILE2                                
         DC    X'25',CL10'COPYFB'     COPY FILE2                                
         DC    X'45',CL10'COPYF3'     COPY FILE3                                
         DC    X'85',CL10'COPYF4'     COPY FILE4                                
         DC    X'35',CL10'COPYF12'    COPY FILE1/2                              
         DC    X'35',CL10'COPYFC'     COPY FILE1/2                              
         DC    X'55',CL10'COPYF13'    COPY FILE1/3                              
         DC    X'95',CL10'COPYF14'    COPY FILE1/4                              
         DC    X'65',CL10'COPYF23'    COPY FILE2/3                              
         DC    X'A5',CL10'COPYF24'    COPY FILE2/4                              
         DC    X'C5',CL10'COPYF34'    COPY FILE3/4                              
         DC    X'75',CL10'COPYF123'   COPY FILE1/2/3                            
         DC    X'B5',CL10'COPYF124'   COPY FILE1/2/4                            
         DC    X'F5',CL10'COPYF1234'  COPY FILE1/2/3/4                          
*                                                                               
         DC    X'0E',CL10'REPORT'     REPORT FILE        VIA DIR                
         DC    X'06',CL10'REPORF '    REPORT FILE                               
         DC    X'0A',CL10'REPORD '    REPORT DIR                                
         DC    X'0A',CL10'REPORTD'    REPORT DIR                                
         DC    X'06',CL10'REPORTF'    REPORT FILE                               
         DC    X'1E',CL10'REPORTA'    REPORT FILE1       VIA DIR                
         DC    X'2E',CL10'REPORTB'    REPORT FILE2       VIA DIR                
         DC    X'3E',CL10'REPORTC'    REPORT FILE1/2     VIA DIR                
*                                                                               
         DC    X'1E',CL10'REPORT1'    REPORT FILE1       VIA DIR                
         DC    X'2E',CL10'REPORT2'    REPORT FILE2       VIA DIR                
         DC    X'4E',CL10'REPORT3'    REPORT FILE3       VIA DIR                
         DC    X'8E',CL10'REPORT4'    REPORT FILE4       VIA DIR                
         DC    X'3E',CL10'REPORT12'   REPORT FILE1/2     VIA DIR                
         DC    X'5E',CL10'REPORT13'   REPORT FILE1/3     VIA DIR                
         DC    X'9E',CL10'REPORT14'   REPORT FILE1/4     VIA DIR                
         DC    X'6E',CL10'REPORT23'   REPORT FILE2/3     VIA DIR                
         DC    X'AE',CL10'REPORT24'   REPORT FILE2/4     VIA DIR                
         DC    X'CE',CL10'REPORT34'   REPORT FILE3/4     VIA DIR                
         DC    X'7E',CL10'REPORT123'  REPORT FILE1/2/3   VIA DIR                
         DC    X'BE',CL10'REPORT124'  REPORT FILE1/2/4   VIA DIR                
         DC    X'FE',CL10'REPORT1234' REPORT FILE1/2/3/4 VIA DIR                
*                                                                               
         DC    X'16',CL10'REPORF1'    REPORT FILE1                              
         DC    X'26',CL10'REPORF2'    REPORT FILE2                              
         DC    X'46',CL10'REPORF3'    REPORT FILE3                              
         DC    X'86',CL10'REPORF4'    REPORT FILE4                              
         DC    X'36',CL10'REPORF12'   REPORT FILE1/2                            
         DC    X'56',CL10'REPORF13'   REPORT FILE1/3                            
         DC    X'96',CL10'REPORF14'   REPORT FILE1/4                            
         DC    X'66',CL10'REPORF23'   REPORT FILE2/3                            
         DC    X'A6',CL10'REPORF24'   REPORT FILE2/4                            
         DC    X'C6',CL10'REPORF34'   REPORT FILE3/4                            
         DC    X'76',CL10'REPORF123'  REPORT FILE1/2/3                          
         DC    X'B6',CL10'REPORF124'  REPORT FILE1/2/4                          
         DC    X'F6',CL10'REPORF1234' REPORT FILE1/2/3/4                        
MODELX   DC    X'FF'                                                            
*                                                                               
INPUTL   DC    X'01',CL10'DISK'                                                 
         DC    X'02',CL10'TAPE'                                                 
         DC    X'0A',CL10'WDUTAPE'                                              
INPUTLX  DC    X'FF'                                                            
*                                                                               
OUTPUTL  DC    X'01',CL10'DISK'                                                 
         DC    X'02',CL10'TAPE'                                                 
OUTPUTLX DC    X'FF'                                                            
*                                                                               
TCOPYL   DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'TAPE'                                                 
TCOPYLX  DC    X'FF'                                                            
*                                                                               
DIRL     DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'TAPE'                                                 
         DC    X'06',CL10'SORT'                                                 
DIRLX    DC    X'FF'                                                            
*                                                                               
NOYESL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
NOYESLX  DC    X'FF'                                                            
*                                                                               
NOYESTL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'0A',CL10'PRINT'                                                
         DC    X'8A',CL10'TEST'                                                 
NOYESTLX DC    X'FF'                                                            
*                                                                               
WARNL    DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'08',CL10'IGNORE'                                               
         DC    X'10',CL10'ABEND'                                                
WARNLX   DC    X'FF'                                                            
*                                                                               
WDELL    DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'08',CL10'IGNORE'                                               
         DC    X'10',CL10'ABEND'                                                
         DC    X'22',CL10'DSNNEQ'                                               
WDELLX   DC    X'FF'                                                            
*                                                                               
CHECKL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'06',CL10'DELETE'                                               
         DC    X'0A',CL10'PRINT'                                                
CHECKLX  DC    X'FF'                                                            
*                                                                               
COUNTL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'42',CL10'PURGE'                                                
COUNTLX  DC    X'FF'                                                            
*                                                                               
VERIFYL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'42',CL10'IGNORE'                                               
VERIFYLX DC    X'FF'                                                            
*                                                                               
BALCHKL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'06',CL10'MONTHLY'                                              
BALCHKLX DC    X'FF'                                                            
*                                                                               
WRITEL   DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
WRITELX  DC    X'FF'                                                            
*                                                                               
ABENDL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'OS '                                                  
ABENDLX  DC    X'FF'                                                            
*                                                                               
DISPL    DC    X'01',CL10'OLD'                                                  
         DC    X'02',CL10'SHR'                                                  
DISPLX   DC    X'FF'                                                            
*                                                                               
LOGOL    DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
LOGOLX   DC    X'FF'                                                            
*                                                                               
DABIGL   DC    C'N',CL10'NO'       16-BIT TRACK                                 
         DC    C'N',CL10'16BIT'                                                 
         DC    C'N',CL10'16-BIT'                                                
         DC    C'Y',CL10'YES'      18-BIT TRACK                                 
         DC    C'Y',CL10'18BIT'                                                 
         DC    C'Y',CL10'18-BIT'                                                
         DC    C'B',CL10'BIG'      20-BIT TRACK                                 
         DC    C'B',CL10'20BIT'                                                 
         DC    C'B',CL10'20-BIT'                                                
         DC    C'G',CL10'GRAND'    22-BIT TRACK                                 
         DC    C'G',CL10'22BIT'                                                 
         DC    C'G',CL10'22-BIT'                                                
         DC    C'D',CL10'DTF'                                                   
DABIGLX  DC    X'FF'                                                            
*                                                                               
DACMPRSL DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'Y',CL10'BOTH'                                                  
         DC    C'L',CL10'LEFT'                                                  
         DC    C'R',CL10'RIGHT'                                                 
DACMPRSX DC    X'FF'                                                            
*                                                                               
ISBIGL   DC    C'N',CL10'NO'       16-BIT                                       
         DC    C'N',CL10'16BIT'                                                 
         DC    C'N',CL10'16-BIT'                                                
         DC    C'Y',CL10'YES'      20-BIT TRACK                                 
         DC    C'B',CL10'BIG'      20-BIT TRACK                                 
         DC    C'B',CL10'20BIT'                                                 
         DC    C'B',CL10'20-BIT'                                                
         DC    C'D',CL10'DTF'                                                   
ISBIGLX  DC    X'FF'                                                            
*                                                                               
ISCMPRSL DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
ISCMPRSX DC    X'FF'                                                            
*                                                                               
ISPDOVL  DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
ISPDOVLX DC    X'FF'                                                            
*                                                                               
ISBLKIXL DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
ISBLKIXX DC    X'FF'                                                            
*                                                                               
EXTSORTL DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
EXTSORTX DC    X'FF'                                                            
*                                                                               
RECOVERL DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'42',CL10'TRAILERS'                                             
         DC    X'82',CL10'CHANGES'                                              
RECOVERX DC    X'FF'                                                            
*                                                                               
ACTIVITL DC    X'02',CL10'YES'                                                  
         DC    X'12',CL10'REMOVE'                                               
         DC    X'22',CL10'INIT'                                                 
         DC    X'42',CL10'FREEZE'                                               
ACTIVITX DC    X'FF'                                                            
         EJECT                                                                  
TAPEIN   DCB   DDNAME=TAPEIN,DSORG=PS,MACRF=(GM),EODAD=INPUTEOF,       X        
               RECFM=VB,BUFNO=2                                                 
*                                                                               
TAPEOUT  DCB   DDNAME=TAPEOUT,DSORG=PS,MACRF=(PM),EXLST=TOEXLST,       X        
               RECFM=VB,LRECL=8200,BUFNO=2,BLKSIZE=27648                        
TOEXLST  DS    0F                                                               
         DC    X'87'                                                            
         DC    AL3(TOJFCB)                                                      
TOJFCB   DC    176X'00'                                                         
*                                                                               
TAPECPY  DCB   DDNAME=TAPECPY,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=8200,BUFNO=2,BLKSIZE=27648                        
*                                                                               
TAPEDIR  DCB   DDNAME=TAPEDIR,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=8200,BUFNO=2,BLKSIZE=27648                        
*                                                                               
RCVTAPE  DCB   DDNAME=RCVTAPE,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=8200,BLKSIZE=27648                                
                                                                                
         DS    0D                                                               
         DC    C'WKWKWKWK'                                                      
DMLDWRK  DS    49152C                                                           
                                                                                
         DS    0D                                                               
         DC    C'*AGYCNT*'                                                      
AGYTIIS  DS    256F'0'                                                          
AGYTIDA  DS    256F'0'                                                          
AGYDOF1  DS    256F'0'                                                          
AGYDOF2  DS    256F'0'                                                          
AGYDOF3  DS    256F'0'                                                          
AGYDOF4  DS    256F'0'                                                          
AGYDOIS  DS    256F'0'                                                          
AGYDIIS  DS    256F'0'                                                          
AGYDIF1  DS    256F'0'                                                          
AGYDIF2  DS    256F'0'                                                          
AGYDIF3  DS    256F'0'                                                          
AGYDIF4  DS    256F'0'                                                          
AGYTOIS  DS    256F'0'                                                          
AGYTODA  DS    256F'0'                                                          
                                                                                
         DS    0D                                                               
         DC    C'*AGY$$$*'                                                      
AG$TIDA  DS    256PL8'0'                                                        
AG$DOF1  DS    256PL8'0'                                                        
AG$DOF2  DS    256PL8'0'                                                        
AG$DOF3  DS    256PL8'0'                                                        
AG$DOF4  DS    256PL8'0'                                                        
AG$DIF1  DS    256PL8'0'                                                        
AG$DIF2  DS    256PL8'0'                                                        
AG$DIF3  DS    256PL8'0'                                                        
AG$DIF4  DS    256PL8'0'                                                        
AG$TODA  DS    256PL8'0'                                                        
         EJECT                                                                  
***********************************************************************         
* INITIALISE SOME VARIABLES                                           *         
* SINGLE LINE CARDS                                                   *         
* DSPACE WILL BE REQUIRE WHEN RUNNING ON NON-PROD SYSTEM              *         
***********************************************************************         
INITPROG NTR1  BASE=*,LABEL=*                                                   
         GOTO1 =V(SETSPACE),DMCB,A(SSB)                                         
*                                                                               
         LA    RF,C                INITIALIZE ERROR INFO WORD                   
         ST    RF,ERRNUM                                                        
         MVI   ERRNUM,0                                                         
         GOTO1 =V(DATCON),DMCB,(5,DUB),(10,NOWDVAL)                             
         GOTO1 (RF),(R1),(4,NOWDVAL),(31,NOWDYMD)                               
         MVC   USEDATES,NOWDATES                                                
*                                                                               
INIP0    GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLI   C,C'*'                                                           
         BE    INIP0P                                                           
*                                                                               
         CLC   C(6),=C'DDSIO='     DDSIO=XXXXXX MUST BE FIRST CARD              
         BNE   INIP0A                                                           
         L     RF,=V(DDSIO)                                                     
         MVC   0(8,RF),C+6                                                      
         B     INIP0P                                                           
*                                  ** SETSPACE WILL HANDLE DSPACE= **           
         USING SSBD,RF             ** NO LONGER NEEDED **                       
INIP0A   CLC   C(7),=C'DSPACE='    DSPACE=X TO SET THE DATA SPACE               
         BNE   INIP0B              ** SETSPACE - LOOKS IN THE TIOT              
         L     RF,=A(SSB)          ** IT ALSO PRESCANS THE CARDS                
         MVC   SSODSPAC,C+7        ** SETSPACE HAS TO BE BEFORE                 
         B     INIP0P              ** ANY CALLS TO DMDMGRL (DDSIO)              
*                                                                               
INIP0B   CLC   C(5),=CL8'DATE='    FIRST CARD CAN BE DATE=DD/MM/YY              
         BNE   INIP0C                                                           
         ICM   RF,15,=V(DATVAL)                                                 
         BZ    INIP0B1                                                          
         GOTO1 (RF),DMCB,(0,C+5),DUB                                            
         OC    0(4,R1),0(R1)                                                    
         BNZ   INIP0B2                                                          
INIP0B1  L     RF,=A(ERR04)        INVALID DATE=CARD                            
         MVC   30(4,RF),C                                                       
         MVI   ERRNUM,4            INVALID VALUE FOR PARAMETER - DATE           
         B     INIP0ERR                                                         
*                                                                               
INIP0B2  MVC   DATEVAL,C+5         OVERRIDE SYSTEM DATE                         
         ICM   RF,15,=V(DATCON)                                                 
         BZ    INIP0B1                                                          
         GOTO1 (RF),DMCB,(4,DATEVAL),(31,DATEYMD)                               
         MVC   PLBALCK+16(2),DATECMP                                            
         MVC   SPECDATE(5),C       SPECIAL DATE=YYMMDD FOR V(PRINTER)           
         MVC   SPECDATE+5(6),DATEYMD                                            
         MVC   C+14(7),=C'ACTUAL=' SET ACTUAL DATE ON DATE=CARD                 
         MVC   C+21(8),NOWDVAL                                                  
         B     INIP0P                                                           
*                                                                               
INIP0C   CLC   C(4),=C'EID='       EID=CARD TO SET DEFAULT EMAIL LIST           
         BNE   INIP0E                                                           
         L     RF,=A(EMAILDEF)                                                  
         MVC   0(72,RF),C+4                                                     
         B     INIP0P                                                           
*                                                                               
INIP0E   CLC   C(4),=C'SYS='       SYS=SSSXX TO DEFINE SYSTEM                   
         BNE   INIP0E1                                                          
         MVC   WORK(11),C                                                       
         B     INIP0E2                                                          
                                                                                
INIP0E1  CLC   C(7),=C'SYSTEM='    SYSTEM=SSSXX IS ALSO VALID                   
         BNE   INIP0F                                                           
         MVC   WORK(4),=C'SYS='                                                 
         MVC   WORK+4(7),C+7                                                    
INIP0E2  CLC   WORK+4(4),=C'CON '  TEST CONTROL SYSTEM                          
         BE    INIP0E4                                                          
         CLC   WORK+4(7),=C'CONTROL'                                            
         BNE   INIP0E3                                                          
         MVC   WORK+7(4),SPACES                                                 
         B     INIP0E4                                                          
                                                                                
INIP0E3  CLI   WORK+7,C' '         SYSTEM NAME IS 4 OR 5 CHRS                   
         BE    INIP0E6                                                          
         CLI   WORK+9,C' '                                                      
         BNE   INIP0E6                                                          
INIP0E4  MVI   WORK+11,0                                                        
         GOTO1 =V(DMDDNAME),DMCB,(X'00',=C'DDNAME'),WORK,0                      
         CLI   8(R1),0                                                          
         BNE   INIP0E6                                                          
         L     RE,8(R1)            EXTRACT SENO FROM FILE INFO BLOCK            
         MVC   WORK+11(1),DDNASENO-DDNAD(RE)                                    
INIP0E5  L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         CLC   LDDDTFD1,=F'255'    FILES MUST BE DEFINED BY NUMBER              
         BH    INIP0E6                                                          
         CLC   LDDDTFIS,=F'255'                                                 
         BH    INIP0E6                                                          
         MVC   LDDSYSID,WORK+11    SET NEW SENO IN FILE DEFINITION              
         MVC   SYSNAME(5),WORK+4   SET SYSTEM NAME INPUT                        
         B     INIP0P                                                           
*                                                                               
INIP0E6  L     RF,=A(ERR04)        INVALID SYS=CARD                             
         MVC   30(3,RF),C                                                       
         MVI   ERRNUM,4            INVALID VALUE FOR PARAMETER - SYS            
         B     INIP0ERR                                                         
         DROP  R2                                                               
*                                                                               
INIP0F   CLC   C(9),=C'COPYTIME='  COPYTIME=DD/MM/YY-HH:MM:SS                   
         BNE   INIP0G                                                           
         ICM   RF,15,=V(DATVAL)                                                 
         BZ    INIP0F1                                                          
         MVC   WORK(8),C+9         EXTRACT DATE AND VAIDATE                     
         MVC   WORK+8(4),SPACES                                                 
         GOTO1 (RF),DMCB,(0,WORK),DUB                                           
         OC    0(4,R1),0(R1)                                                    
         BNZ   INIP0F2                                                          
INIP0F1  L     RF,=A(ERR04)        INVALID COPYTIME=CARD                        
         MVC   30(8,RF),C                                                       
         MVI   ERRNUM,4            INVALID VALUE FOR PARAM - COPYTIME           
         B     INIP0ERR                                                         
*                                                                               
INIP0F2  ICM   RF,15,=V(DATCON)                                                 
         BZ    INIP0F1                                                          
         MVC   CPYDVAL,C+9                                                      
         GOTO1 (RF),DMCB,(4,CPYDVAL),(31,CPYDYMD)                               
*                                                                               
INIP0F3  MVC   CPYTVAL,C+18        EXTRACT TIME                                 
         CLC   CPYTVAL+6(2),SPACES ALLOW HH:MM                                  
         BNE   INIP0F4                                                          
         MVC   CPYTVAL+5(1),CPYTVAL+2                                           
         MVC   CPYTVAL+6(2),=C'00'                                              
INIP0F4  CLC   CPYTVAL+0(2),=C'00' VALIDATE HOUR                                
         BL    INIP0F1                                                          
         CLC   CPYTVAL+0(2),=C'23'                                              
         BH    INIP0F1                                                          
         PACK  DUB,CPYTVAL+0(2)                                                 
         CVB   R0,DUB                                                           
         STC   R0,CPYTBIN                                                       
INIP0F5  CLC   CPYTVAL+3(2),=C'00' VALIDATE MINUTE                              
         BL    INIP0F1                                                          
         CLC   CPYTVAL+3(2),=C'59'                                              
         BH    INIP0F1                                                          
         PACK  DUB,CPYTVAL+3(2)                                                 
         CVB   R0,DUB                                                           
         STC   R0,CPYTBIN+1                                                     
INIP0F6  CLC   CPYTVAL+6(2),=C'00' VALIDATE SECOND                              
         BL    INIP0F1                                                          
         CLC   CPYTVAL+6(2),=C'59'                                              
         BH    INIP0F1                                                          
         PACK  DUB,CPYTVAL+6(2)                                                 
         CVB   R0,DUB                                                           
         STC   R0,CPYTBIN+2                                                     
INIP0F7  ICM   RF,15,=V(DATCON)    CONVERT TIME TO ACTIVITY UNITS               
         BZ    INIP0F1                                                          
         MVC   DUB+0(3),CPYDBIN                                                 
         MVC   DUB+3(3),CPYTBIN                                                 
         GOTO1 (RF),DMCB,(13,DUB),(24,CPYTACTI+2)                               
         B     INIP0P                                                           
*                                                                               
INIP0G   EQU   *                                                                
*                                                                               
INIP0H   CLC   C(2),MODE+4         AFTER SPECIALS MUST HAVE MODE=CARD           
         BE    INIP0X                                                           
         MVI   ERRNUM,2            INVALID PARAMETER CARD SYNTAX                
*                                                                               
INIP0ERR MVC   P(80),C             PRINT ERROR CARD                             
         GOTO1 =V(PRINTER)                                                      
INIP0ER1 SR    R1,R1                                                            
         IC    R1,ERRNUM                                                        
         LNR   R1,R1               FORCE AN ABEND                               
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
INIP0P   MVC   P(80),C             PRINT SPECIAL CARD                           
         GOTO1 =V(PRINTER)                                                      
         B     INIP0                                                            
INIP0X   EQU   *                                                                
*                                                                               
         L     R1,X'10'(,R0)       GET CPU ID                                   
         L     R1,X'C4'(R1)        R1=A(SMCA) FROM CVT                          
         MVC   CPUID,X'10'(R1)     CPU IS C'XXXX' FROM SMCASID                  
*                                                                               
         L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         L     RE,=A(UTL)                                                       
         MVC   4(1,RE),LDDSYSID    SET SYSTEM NUMBER IN UTL                     
         MVC   LDSENO,LDDSYSID                                                  
         MVC   RCVSYS,LDDSYSID                                                  
*                                                                               
         L     R0,=A(PTRBLKLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,APTRBLK                                                       
         L     RE,=A(PLCPTRS)                                                   
         ST    R1,4(RE)            SET IN PLCPTRS PARAM LIST                    
*                                                                               
         TM    LDDMULTI,LDDQDA2+LDDQDA4+LDDQIPTR                                
         BZ    *+8                                                              
         OI    LDDMULTI,LDDQDPTR   SET CAN HAVE I/S RECS ON D/A TAPE            
         TM    LDDFLAG1,LDDQXIPT                                                
         BZ    *+8                                                              
         OI    LDDIPFLG,LDDQXIPT   SET NEW BIT VALUE                            
         TM    LDDIPFLG,LDDQXIPT                                                
         BZ    *+8                                                              
         OI    LDDFLAG1,LDDQXIPT   SET OLD BIT VALUE-INDIRECTS TO XTRN          
*                                                                               
INIP1    L     R1,LDDDTFIS         GET DTFILE ADDRESS FOR IS FILE               
         BAS   RE,GETFILAD                                                      
         STC   R0,LDFINOS+0        SET FILE NUMBER                              
         CHI   R0,CTFILE#          CTFILE IS V/L                                
         BE    INIP1A                                                           
*&&US*&& CHI   R0,X'22'            STAFIL IS V/L                                
*&&US*&& BE    INIP1A                                                           
*&&US*&& CHI   R0,X'8A'            REVIEW IS V/L                                
*&&US*&& BE    INIP1A                                                           
         B     INIP1B                                                           
INIP1A   OI    LDFIATS+0,VLISQ     SET V/L IS FILE                              
         LA    RE,ISREC                                                         
         LA    RF,ISNAMF                                                        
         ST    RE,PLXTRN+0         CHANGE PARM LISTS FROM DA TO IS              
         ST    RE,PLPURGE+0                                                     
         ST    RF,PLSIZE+4                                                      
         ST    RE,PLBALCK+0                                                     
         ST    RF,PLBALCK+4                                                     
*                                                                               
INIP1B   ST    R1,LDDDTFIS         SET IS FILE DTF ADDRESS                      
         USING ISDTF,R1                                                         
         TM    ISFFLAG,ISFGLOB     SAVE FILE/SYSTEM ATTRIBUTES                  
         BZ    *+12                                                             
         OI    LDFIATS+0,GLOBALQ                                                
         OI    LDSEATS,GLOBALQ                                                  
         TM    ISFFLAG,ISFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS+0,FLASHQ                                                 
         OI    LDSEATS,FLASHQ                                                   
         TM    ISFTYPE,ISFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS+0,ISFTBIG                                                
         TM    ISFTYPE,ISFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS+0,ISFTBIGF                                               
         DROP  R1                                                               
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AISTRK                                                        
*                                                                               
         L     R1,LDDDTFD1         GET DAFILE ADDRESS                           
         BAS   RE,GETFILAD                                                      
         ST    R1,LDDDTFD1         SET DTF ADDRESS                              
         STC   R0,LDFINOS+1        SET FILE NUMBER                              
         STC   R0,RCVFILTY                                                      
         USING DTFPHD,R1                                                        
         TM    DTFFLAG,DTFGLOB     SAVE FILE/SYSTEM ATTRIBUTES                  
         BZ    *+12                                                             
         OI    LDFIATS+1,GLOBALQ                                                
         OI    LDSEATS,GLOBALQ                                                  
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS+1,FLASHQ                                                 
         OI    LDSEATS,FLASHQ                                                   
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS+1,DTFTBIG                                                
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS+1,DTFTBIGF                                               
         DROP  R1                                                               
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF1TRK                                                        
*                                                                               
         TM    LDDMULTI,LDDQDA2    TEST FILES 1/2 ALLOCATED                     
         BZ    INIP2               NO                                           
         L     R1,LDDDTFD2                                                      
         BAS   RE,GETFILAD                                                      
         ST    R1,LDDDTFD2         SET DTF ADDRESS                              
         STC   R0,LDFINOS+2        SET FILE NUMBER                              
         USING DTFPHD,R1                                                        
         TM    DTFFLAG,DTFGLOB     SAVE FILE/SYSTEM ATTRIBUTES                  
         BZ    *+12                                                             
         OI    LDFIATS+2,GLOBALQ                                                
         OI    LDSEATS,GLOBALQ                                                  
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS+2,FLASHQ                                                 
         OI    LDSEATS,FLASHQ                                                   
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS+2,DTFTBIG                                                
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS+2,DTFTBIGF                                               
         DROP  R1                                                               
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF2TRK                                                        
*                                                                               
         TM    LDDMULTI,LDDQDA4    TEST FILES 3/4 ALLOCATED                     
         BZ    INIP2               NO                                           
         L     R1,LDDDTFD3                                                      
         BAS   RE,GETFILAD                                                      
         ST    R1,LDDDTFD3         SET DTF ADDRESS                              
         STC   R0,LDFINOS+3        SET FILE NUMBER                              
         USING DTFPHD,R1                                                        
         TM    DTFFLAG,DTFGLOB     SAVE FILE/SYSTEM ATTRIBUTES                  
         BZ    *+12                                                             
         OI    LDFIATS+3,GLOBALQ                                                
         OI    LDSEATS,GLOBALQ                                                  
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS+3,FLASHQ                                                 
         OI    LDSEATS,FLASHQ                                                   
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS+3,DTFTBIG                                                
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS+3,DTFTBIGF                                               
         DROP  R1                                                               
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF3TRK                                                        
*                                                                               
         L     R1,LDDDTFD4                                                      
         BAS   RE,GETFILAD                                                      
         ST    R1,LDDDTFD4         SET DTF ADDRESS                              
         STC   R0,LDFINOS+4        SET FILE NUMBER                              
         USING DTFPHD,R1                                                        
         TM    DTFFLAG,DTFGLOB     SAVE FILE/SYSTEM ATTRIBUTES                  
         BZ    *+12                                                             
         OI    LDFIATS+4,GLOBALQ                                                
         OI    LDSEATS,GLOBALQ                                                  
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS+4,FLASHQ                                                 
         OI    LDSEATS,FLASHQ                                                   
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS+4,DTFTBIG                                                
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS+4,DTFTBIGF                                               
         DROP  R1                                                               
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF4TRK                                                        
         B     INIP2                                                            
*                                                                               
GETMAIN  NTR1                                                                   
         GETMAIN RU,LV=(0),BNDRY=PAGE                                           
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         XIT1  REGS=(R1)                                                        
         EJECT                                                                  
INIP2    XC    STXLST,STXLST       SET STXIT IF END OF MODULE CSECT             
         MVC   STXLST(4),SAVERB                                                 
         ICM   RE,15,=V(ENDOFMOD)                                               
         BNZ   *+12                                                             
         ICM   RE,15,=V(DUMMY)                                                  
         BZ    INIP10                                                           
         ST    RE,STXLST+4                                                      
*                                                                               
         LA    RE,STXLST+8         DUMP ALLOCATED BUFFERS AS WELL               
         ICM   R0,15,APTRBLK                                                    
         BZ    INIP2A                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(PTRBLKLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2A   ICM   R0,15,AISTRK                                                     
         BZ    INIP2B                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2B   ICM   R0,15,AF1TRK                                                     
         BZ    INIP2C                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2C   ICM   R0,15,AF2TRK                                                     
         BZ    INIP2D                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2D   ICM   R0,15,AF3TRK                                                     
         BZ    INIP2E                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2E   ICM   R0,15,AF4TRK                                                     
         BZ    INIP2X                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2X   AHI   RE,-4                                                            
         OI    0(RE),X'80'         SET EOL FLAG                                 
         EJECT                                                                  
INIP10   L     R1,SVMVSR1          SAVE MVS SUPV INFO                           
         L     R1,0(R1)                                                         
         LH    R2,0(R1)                                                         
         LTR   R2,R2               R2=L'PARM DATA                               
         BZ    INIP10C                                                          
         CHI   R2,8                                                             
         BNH   *+8                                                              
         LHI   R2,8                                                             
         LA    R1,2(R1)            R1=A(PARM DATA)                              
         LA    RF,UPSITAB                                                       
INIP10A  CLI   0(R1),C'0'                                                       
         BE    INIP10B                                                          
         CLI   0(R1),C'1'                                                       
         BNE   INIP10C                                                          
         OC    UPSIVAL,0(RF)                                                    
INIP10B  AHI   R1,1                                                             
         AHI   RF,1                                                             
         BCT   R2,INIP10A                                                       
INIP10C  MVC   UPSIINP,UPSIVAL     SAVE UPSI                                    
         XC    ALOADPT,ALOADPT     CLEAR EXTERNAL LOAD POINT ADDR               
         B     INIP10X                                                          
UPSITAB  DC    X'8040201008040201'                                              
INIP10X  EQU   *                                                                
                                                                                
INITP12  THMS                                                                   
         ST    R1,NOWTHMS          TIME NOW IN FORMAT P'0HHMMSS+'               
         UNPK  NOWTIME,NOWTHMS                                                  
         OI    NOWTIME+5,X'F0'     TIME NOW IN FORMAT C'HHMMSS'                 
         PACK  DUB,NOWTIME+0(2)    CONVERT C'HHMMSS' TO MILLISECS               
         CVB   R0,DUB                                                           
         MHI   R0,3600             HOURS TO SECONDS                             
         LR    R1,R0                                                            
         PACK  DUB,NOWTIME+2(2)                                                 
         CVB   R0,DUB                                                           
         MHI   R0,60               MINUTES TO SECONDS                           
         AR    R1,R0                                                            
         PACK  DUB,NOWTIME+4(2)                                                 
         CVB   R0,DUB              SECONDS                                      
         AR    R1,R0                                                            
         ST    R1,FULL1            SAVE TIME NOW IN SECONDS                     
         MHI   R1,1000                                                          
         STCM  R1,15,NOWMILLI      TIME NOW IN MILLISECS                        
*                                                                               
         TIME  TU                                                               
         ST    R1,FULL             P'0CYYDDD+'                                  
         L     R1,FULL1            SECONDS THIS DAY                             
*                                                                               
         XC    DUB(6),DUB          CONVERT P'DDD' TO BINARY SECONDS             
         MVC   DUB+6(2),FULL+2                                                  
         CVB   R1,DUB                                                           
         AHI   R1,-1                                                            
         M     R0,=F'86400'        R1=SECONDS TO START OF THIS DAY              
         A     R1,FULL1                                                         
         ST    R1,FULL1                                                         
*                                                                               
         L     R1,FULL             EXTRACT YEAR FROM DATE                       
         SLL   R1,8                                                             
         SRL   R1,24                                                            
         SLL   R1,4                R1=00000YY0                                  
         XC    DUB(4),DUB                                                       
         ST    R1,DUB+4                                                         
         OI    DUB+7,X'0C'                                                      
         CVB   R1,DUB              R1=BINARY YEAR FROM 2000                     
*                                                                               
         LR    RF,R1               COMPUTE NUMBER OF DAYS                       
         SR    RE,RE                                                            
         D     RE,=F'4'            RF=NUMBER OF LEAP YEARS                      
         LTR   RE,RE                                                            
         BZ    *+8                                                              
         AHI   RF,1                RF=NUMBER OF EXTRA DAYS                      
         MHI   R1,365                                                           
         AR    R1,RF                                                            
         M     R0,=F'86400'        R1=SECONDS TO START OF THIS YEAR             
         A     R1,FULL1                                                         
         ST    R1,FULL1                                                         
*                                                                               
         XC    NOWACTI(2),NOWACTI                                               
         MVC   NOWACTI+2(4),FULL1                                               
                                                                                
INIP20   MVC   TITLE(40),=CL40'SYS - LOAD/DUMP FOR IS/DA FILES'                 
         ICM   R2,15,VLDDEFN                                                    
         BNZ   *+6                                                              
         DC    H'0'                DIE IF NO FILE DEFINITION                    
         ICM   R2,15,4(R2)                                                      
         BZ    INIP20X             EXIT IF NO IS FILE DTF                       
         L     R3,=A(SYSLIST)                                                   
INIP20A  CLI   0(R3),0             SEARCH FOR IS FILE MATCH                     
         BE    INIP20X                                                          
         CLC   4(3,R3),22(R2)      MATCH ON FIRST 3 CHRS OF IS FILE             
         BE    *+12                                                             
         LA    R3,L'SYSLIST(R3)                                                 
         B     INIP20A                                                          
         MVC   LDSENA(4),0(R3)     SAVE SYSTEM GENERIC NAME                     
         MVC   TITLE(4),0(R3)      MOVE SYSTEM GENERIC NAME TO TITLE            
         MVC   TITLE+20(20),4(R3)  MOVE FILE NAMES TO TITLE                     
INIP20X  DS    0H                                                               
*                                                                               
INIP30   L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         MVC   SVDMULTI(4),LDDMULTI                                             
         L     R1,LDDDTFDA                                                      
         LTR   R1,R1                                                            
         BZ    *+10                                                             
         MVC   DAFILEIX(8),22(R1)  INITIALISE DA FILE ID                        
         L     R1,LDDDTFIS                                                      
         LTR   R1,R1                                                            
         BZ    *+10                                                             
         MVC   ISFILEIX(8),22(R1)  INITIALISE IS FILE ID                        
         TM    LDDMULTI,LDDQDA2+LDDQDA4                                         
         BZ    INIP30X                                                          
         ICM   R1,15,LDDDTFD2                                                   
         BNZ   *+6                 MUST HAVE 2ND DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D2FILEIX(8),22(R1)  INITIALISE DA FILE ID OF 2ND DA              
         TM    LDDMULTI,LDDQDA4                                                 
         BZ    INIP30X                                                          
         ICM   R1,15,LDDDTFD3                                                   
         BNZ   *+6                 MUST HAVE 3RD DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D3FILEIX(8),22(R1)  INITIALISE DA FILE ID OF 3RD DA              
         ICM   R1,15,LDDDTFD4                                                   
         BNZ   *+6                 MUST HAVE 4TH DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D4FILEIX(8),22(R1)  INITIALISE DA FILE ID OF 4TH DA              
INIP30X  EQU   *                                                                
*                                                                               
INIP32   TM    LDDMULTI,LDDQIPTR   TEST IF INDIRECT POINTER DATA                
         BZ    INIP32X                                                          
         MVC   SVDIDATA,LDDXTSN2   SET COPY IN LOCAL STORAGE                    
INIP32X  EQU   *                                                                
*                                                                               
INIP40   TM    LDDMULTI,LDDQMULT   TEST IF MULTI FILE SET                       
         BZ    INIP40X                                                          
         OC    LDDDTFDA,LDDDTFDA                                                
         BZ    *+8                                                              
         OI    DAFILE+2,X'90'      SET DAFILE NAME REQUIRED/MODEDEP             
         OC    LDDDTFIS,LDDDTFIS                                                
         BZ    *+8                                                              
         OI    ISFILE+2,X'90'      SET ISFILE NAME REQUIRED/MODEDEP             
INIP40X  EQU   *                                                                
*                                                                               
INIP50   TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BZ    INIP50X                                                          
         OI    ISFILE+2,X'90'      SET ISFILE NAME REQUIRED/MODEDEP             
         OI    DAFILE+2,X'90'      SET DA ONE NAME REQUIRED/MODEDEP             
         OI    D2FILE+2,X'90'      SET DA 2ND NAME REQUIRED/MODEDEP             
         TM    LDDMULTI,LDDQDA4                                                 
         BZ    INIP50X                                                          
         OI    D3FILE+2,X'90'      SET DA 3RD NAME REQUIRED/MODEDEP             
         OI    D4FILE+2,X'90'      SET DA 4TH NAME REQUIRED/MODEDEP             
INIP50X  EQU   *                                                                
*                                                                               
INIP60   MVC   MAX_DUPK,=F'050'    SET DEFAULT MAXIMUM ERROR COUNTERS           
         MVC   MAX_SEQE,=F'001'                                                 
         MVC   MAX_BADA,=F'001'                                                 
         MVC   MAX_KEYN,=F'050'                                                 
         MVC   MAX_BADR,=F'050'                                                 
         MVC   MAX_TERR,=X'7FFFFFFF'                                            
         MVC   MAX_PERR,=F'2000'                                                
         CLC   LDDERRS,=C'*MAXERR*' TEST IF VALUES DEFINED IN VLDDEFN           
         BNE   INIP70                                                           
         OC    LDDDUPK,LDDDUPK                                                  
         BZ    *+10                                                             
         MVC   MAX_DUPK,LDDDUPK                                                 
         OC    LDDSEQE,LDDSEQE                                                  
         BZ    *+10                                                             
         MVC   MAX_SEQE,LDDSEQE                                                 
         OC    LDDBADA,LDDBADA                                                  
         BZ    *+10                                                             
         MVC   MAX_BADA,LDDBADA                                                 
         OC    LDDKEYN,LDDKEYN                                                  
         BZ    *+10                                                             
         MVC   MAX_KEYN,LDDKEYN                                                 
         OC    LDDBADR,LDDBADR                                                  
         BZ    *+10                                                             
         MVC   MAX_BADR,LDDBADR                                                 
         OC    LDDTERR,LDDTERR                                                  
         BZ    *+10                                                             
         MVC   MAX_TERR,LDDTERR                                                 
         OC    LDDPERR,LDDPERR                                                  
         BZ    *+10                                                             
         MVC   MAX_PERR,LDDPERR                                                 
*                                                                               
INIP70   EQU   *                                                                
*                                                                               
INIPX    XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* GET FILE DTF ADDRESS FROM FILE NUMBER                               *         
***********************************************************************         
GETFILAD NTR1                                                                   
         LH    R0,GETFCALL         BUMP CALL NUMBER                             
         AHI   R0,1                                                             
         STH   R0,GETFCALL                                                      
         LTR   R0,R1               EXIT IF FILE NOT DEFINED                     
         BZ    GETFX                                                            
*                                                                               
         L     RE,=A(UTL)          EXTRACT SE NUM FROM UTL                      
         MVC   GETFSENO,4(RE)                                                   
         MVC   GETFDM3+3(1),GETFSENO                                            
         GOTO1 =V(DATAMGR),GETFDMCB,=C'DMREAD',=C'SYSFLES'                      
         L     RE,GETFDM4                                                       
         ST    RE,GETFSYSL         SAVE A(SYSTEM FILE LIST)                     
*                                                                               
         LR    R1,R0               R1=A(DTF) OR FILE NUMBER                     
         SR    RF,RF                                                            
         IC    RF,3(RE)            NUMBER OF FILES                              
         LA    RE,4(RE)            POINT TO FIRST FILE                          
         SR    R0,R0                                                            
         CHI   R1,255              TEST DTF ADDRESS PRESENT                     
         BH    GETF3                                                            
*                                                                               
GETF2    CLM   R1,1,3(RE)          MATCH FILE NUMBER                            
         BE    GETF2A                                                           
         LA    RE,8(RE)                                                         
         BCT   RF,GETF2                                                         
         DC    H'0'                                                             
GETF2A   L     R1,4(RE)            DTF ADDRESS IN R1                            
         ICM   R0,1,3(RE)          FILE NUMBER IN R0                            
         B     GETF4                                                            
*                                                                               
GETF3    CLM   R1,7,5(RE)          MATCH ON DTF ADDRESS IN R1                   
         BE    GETF3A                                                           
         LA    RE,8(RE)                                                         
         BCT   RF,GETF3                                                         
         DC    H'0'                                                             
GETF3A   ICM   R0,1,3(RE)          FILE NUMBER IN R0                            
*                                                                               
GETF4    STC   R0,DTFXNUM-DTF(R1)  SET FILE NUM AND SENUM IN DTF                
         MVC   DTFSNUM-DTF(1,R1),GETFSENO                                       
         LH    RF,GETFCALL                                                      
         AHI   RF,-1                                                            
         MHI   RF,L'GETFDTFS                                                    
         LA    RF,GETFDTFS(RF)                                                  
         ST    R1,0(RF)            SAVE A(DTF) AND ORIGINAL DDNAME              
         MVC   4(8,RF),DTFDD-DTF(R1)                                            
*                                                                               
GETFX    XIT1  REGS=(R0,R1)                                                     
*                                                                               
GETFDMCB DS    0F                                                               
GETFDM1  DC    A(0)                                                             
GETFDM2  DC    A(0)                                                             
GETFDM3  DC    A(0)                                                             
GETFDM4  DC    A(0)                                                             
GETFDM5  DC    A(0)                                                             
GETFDM6  DC    A(0)                                                             
*                                                                               
GETFCALL DC    H'0'                CALL NUMBER                                  
GETFSENO DC    X'00'               SE NUMBER                                    
         DC    X'00'                                                            
GETFSYSL DC    A(0)                A(SYSFLES)                                   
                                                                                
***********************************************************************         
* TABLE OF FILES LOCATED FROM V(DMLDDEFN)                             *         
* AL4    A(DTF)                                                       *         
* CL8    NAME OF FILE IN DTF+22                                       *         
***********************************************************************         
         DS    0D                                                               
         DC    C'**GETF**'                                                      
GETFDTFS DS    0XL12               LIST OF DTFS LOCATED                         
GETFADI  DC    A(0)                                                             
GETFDDI  DC    CL8' '                                                           
GETFAD1  DC    A(0)                                                             
GETFDD1  DC    CL8' '                                                           
GETFAD2  DC    A(0)                                                             
GETFDD2  DC    CL8' '                                                           
GETFAD3  DC    A(0)                                                             
GETFDD3  DC    CL8' '                                                           
GETFAD4  DC    A(0)                                                             
GETFDD4  DC    CL8' '                                                           
GETFDTFX DC    X'80000000'                                                      
                                                                                
***********************************************************************         
* TABLE OF SYSTEMS AND FILE NAMES                                     *         
* CL4    SYSTEM NAME WHERE FILES ARE RESIDENT                         *         
* CL20   IS FILE AND DA FILE(S) NAMES                                 *         
* XL5    FILE EXT NUMBERS                                             *         
* CL3    SYSTEM NAME TO USE FOR XXXTAPE IN DSN=DDSDSN GENERATION      *         
***********************************************************************         
SYSLIST  DS    0CL32                                                            
*&&UK                                                                           
         DC    C'ACC ',CL20'ACCDIR/ACCMST/ACCARC',X'696A6B0000',C'   '          
         DC    C'CON ',CL20'GENDIR/GENFIL       ',X'AEAF000000',C'   '          
         DC    C'CON ',CL20'CTFILE              ',X'A100000000',C'   '          
         DC    C'FEE ',CL20'FEEDIR/FEEFIL       ',X'7172000000',C'   '          
         DC    C'MBA ',CL20'MBADIR/MBAFIL       ',X'9192000000',C'   '          
         DC    C'MBA ',CL20'MBUDIR/MBUFIL       ',X'9697000000',C'   '          
         DC    C'MED ',CL20'MEDDIR/MEDFIL       ',X'4142000000',C'   '          
         DC    C'MEDZ',CL20'DMGDIR/DMGFIL       ',X'4647000000',C'DEM'          
         DC    C'MEDZ',CL20'DMNDIR/DMNNEW/DMNOLD',X'48494A0000',C'DEM'          
         DC    C'MEDZ',CL20'DMODIR/DMO1FL/2/3/4 ',X'4B4C4D4E4F',C'DEM'          
         DC    C'MEDZ',CL20'DMNDIR/DMNNEW/DMNOLD',X'4B4C4D4E4F',C'DEM'          
         DC    C'MPL ',CL20'MPLDIR/MPLFIL       ',X'5152000000',C'   '          
         DC    C'MPL ',CL20'MPCDRS/MPCFLS       ',X'5859000000',C'   '          
         DC    C'MPL ',CL20'MPCDRC/MPCFLC       ',X'5E5F000000',C'   '          
         DC    C'PER ',CL20'PERDIR/PERFIL       ',X'E1E2000000',C'   '          
*&&                                                                             
*&&US                                                                           
         DC    C'ACC ',CL20'ACCDIR/ACCMST/ACCARC',X'696A6B0000',C'   '          
         DC    C'CON ',CL20'GENDIR/GENFIL       ',X'AEAF000000',C'   '          
         DC    C'CON ',CL20'CTFILE              ',X'A100000000',C'   '          
         DC    C'NET ',CL20'UNTDIR/UNTFIL       ',X'272A000000',C'   '          
         DC    C'PER ',CL20'PERDIR/PERFIL       ',X'E1E2000000',C'   '          
         DC    C'PRT ',CL20'PRTDIR/PRTFIL       ',X'4042000000',C'   '          
         DC    C'PRT ',CL20'PUBDIR/PUBFIL       ',X'4143000000',C'   '          
         DC    C'REP ',CL20'REPDIR/REPFIL       ',X'8182000000',C'   '          
         DC    C'REP ',CL20'ROIDIR/ROIFIL       ',X'8788000000',C'   '          
         DC    C'REP ',CL20'RRGNEW              ',X'8900000000',C'   '          
         DC    C'REP ',CL20'REVIEW              ',X'8A00000000',C'   '          
         DC    C'SPT ',CL20'SPTDIR/SPTFIL       ',X'2321000000',C'   '          
         DC    C'SPT ',CL20'XSPDIR/XSPFIL       ',X'3637000000',C'   '          
         DC    C'SPT ',CL20'STAFIL              ',X'2200000000',C'   '          
         DC    C'STR ',CL20'TRFDIR/TRFFIL       ',X'3332000000',C'   '          
         DC    C'TAL ',CL20'TALDIR/TALFIL       ',X'7172000000',C'   '          
         DC    C'TAL ',CL20'CHKDIR/CHKFIL       ',X'7576000000',C'   '          
*&&                                                                             
SYSLISTX DC    XL4'00',CL20'XXXXXX/XXXXXX       ',X'0000000000',C'   '          
                                                                                
***********************************************************************         
* TABLE OF DSPACE=VALUES AND NAMES                                    *         
* CL1    DSPACE VALUE                                                 *         
* CL3    DSPACE NAME                                                  *         
***********************************************************************         
DSPLIST  DS    0CL4                                                             
         DC    C'A',C'PRD'                                                      
         DC    C'C',C'CSC'                                                      
         DC    C'Q',C'FQA'                                                      
         DC    C'R',C'REP'                                                      
         DC    C'T',C'TST'                                                      
DSPLISTX DC    C' ',C'PRD'                                                      
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* READ A SET OF INPUT PARAMETER CARDS                                 *         
***********************************************************************         
GETPARM  NTR1  BASE=*,LABEL=*                                                   
         CLI   ERRNUM,0                                                         
         BNE   GPERR                                                            
         CLI   FRSTTIME,C'X'       WAS LAST SET TERMINATED WITH /* CARD         
         BE    GPEOJ               YES EOJ                                      
         BH    *+10                                                             
         ZAP   LINE,=P'99'                                                      
         MVC   P(15),=C'PARAMETER CARDS'                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         L     RF,=A(VALPARM)                                                   
         BASR  RE,RF                                                            
         CLI   ERRNUM,0                                                         
         BNE   GPERR               ERROR FOUND IN CARD                          
         L     R2,VLDDEFN                                                       
*                                                                               
         LA    R4,PARMTBL          CHECK FOR REQUIRED & OPTIONAL PARMS          
GP2      TM    2(R4),X'80'                                                      
         BZ    GP2A                                                             
         CLI   0(R4),0             WAS REQUIRED PARM INPUT                      
         BNE   GP2B                YES                                          
         TM    2(R4),X'10'         WAS REQUIRED PARM MODE DEPENDENT             
         BO    GP2B                YES-DONT HAVE TO SET IT                      
         LA    R1,4(R4)                                                         
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,1            MISSING PARAMETER                            
         B     GPERR                                                            
GP2A     CLI   0(R4),0             WAS OPTIONAL PARM INPUT                      
         BNE   GP2B                YES                                          
         MVC   0(1,R4),1(R4)       NO- SET DEFAULT VALUE                        
GP2B     LA    R4,L'PARMTBL(R4)                                                 
         CLI   0(R4),X'FF'                                                      
         BNE   GP2                                                              
GP2C     CLI   LDSPACE,C' '        TEST IF DSPACE=CARD INPUT                    
         BNE   GP3                                                              
*&&US*&& B     GP3                                                              
         LA    R1,=CL8'DSPACE='                                                 
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,1            MISSING DSPACE=CARD                          
         B     GPERR                                                            
*                                                                               
GP3      OC    LDDDTFDA,LDDDTFDA   TEST MODE COMPATIBLE FOR FILES               
         BNZ   GP3A                                                             
         NI    MODE,255-DAFIL-ISFIL                                             
         OI    MODE,ISFIL          SET MODE IF NO DA FILE IN DEFN               
         B     GP3X                                                             
*                                                                               
GP3A     TM    INPUT,TAPE          ADJUST MODE IF TAPE COPY                     
         BZ    GP3B                                                             
         TM    OUTPUT,TAPE                                                      
         BZ    GP3B                                                             
         TM    MODE,DAFIL+ISFIL    ASSUME DA FILE UNLESS COPYD                  
         BNO   GP3B                                                             
         NI    MODE,255-ISFIL                                                   
*                                                                               
GP3B     TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST MODE FOR MULTI DA FILES            
         BZ    GP3X                                                             
         TM    MODE,DAFIL          CAN USE COPYD FOR ISFILE ONLY                
         BZ    GP3X                                                             
         TM    MODE,FILE1234                                                    
         BNZ   GP3B2                                                            
GP3B1    LA    R1,MODE+4           MUST USE COPYN ETC                           
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
GP3B2    TM    OUTPUT,DISK         LOADING TO DISK                              
         BZ    GP3X                NO                                           
         TM    MODE,FILE1234       YES TEST IF ONLY ONE DA FILE                 
         BNZ   GP3X                NO                                           
         TM    LDDMULTI,LDDQDPTR   TEST DA DUMP HAS IS RECORDS                  
         BO    GP3X                                                             
         NI    MODE,255-ISFIL      YES THEN DONT LOAD IS FILE                   
         TM    DIR,YES             AND REQUIRE A DIR COPY PARAMETER             
         BO    GP3X                                                             
         LA    R1,DIR+4            SET MISSING DIR= PARM                        
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,1                                                         
         B     GPERR                                                            
*                                                                               
GP3X     EQU   *                                                                
*                                                                               
GP4      TM    MODE,REPORT         MODE=REPORT INPUT/OUTPUT OPTIONS             
         BZ    GP4C                                                             
         TM    INPUT,TAPE          ADJUST MODE IF REPORT FROM TAPE              
         BZ    GP4A                                                             
         TM    MODE,DAFIL+ISFIL    ASSUME REPORTF FOR REPORT                    
         BNO   GP4A                                                             
         NI    MODE,255-ISFIL                                                   
GP4A     CLI   OUTPUT,0            CANT HAVE OUTPUT IF MODE=REPORT              
         BE    GP4E                                                             
GP4B     LA    R1,OUTPUT+4         SET ERROR IN OUTPUT= PARM                    
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
*                                                                               
GP4C     TM    INPUT,DISK          MODE=COPY INPUT/OUTPUT OPTIONS               
         BZ    GP4D                                                             
         TM    OUTPUT,DISK                                                      
         BO    GP4B                CANT HAVE OUTPUT=DISK IF INPUT=DISK          
         OI    OUTPUT,TAPE                                                      
         B     GP4E                                                             
GP4D     CLI   OUTPUT,0            SET DEFAULT OUTPUT FOR INPUT=TAPE            
         BNE   GP4E                                                             
         OI    OUTPUT,DISK                                                      
*                                                                               
GP4E     TM    INPUT,TAPEPHYS      CANT HAVE IS PHYSICAL TAPE INPUT             
         BZ    GP4F                                                             
         TM    MODE,DAFIL                                                       
         BZ    GP4G                                                             
GP4F     TM    INPUT,DISK          CANT HAVE DA DISK ONLY INPUT                 
         BZ    GP4X                                                             
         TM    MODE,ISFIL                                                       
         BO    GP4X                                                             
GP4G     LA    R1,INPUT+4          SET ERROR IN INPUT= PARM                     
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
GP4X     EQU   *                                                                
*                                                                               
GP5      CLI   SYSNAME,C' '        TEST IF SYSTEM NAME WAS INPUT                
         BE    GP5A                                                             
         CLC   ISFILEID,DEFNAME    CONVERT TO DEFAULT NAMES                     
         BNE   *+10                                                             
         MVC   ISFILEID,ISFILEIX                                                
         CLC   DAFILEID,DEFNAME                                                 
         BNE   *+10                                                             
         MVC   DAFILEID,DAFILEIX                                                
         CLC   D2FILEID,DEFNAME                                                 
         BNE   *+10                                                             
         MVC   D2FILEID,D2FILEIX                                                
         CLC   D3FILEID,DEFNAME                                                 
         BNE   *+10                                                             
         MVC   D3FILEID,D3FILEIX                                                
         CLC   D4FILEID,DEFNAME                                                 
         BNE   *+10                                                             
         MVC   D4FILEID,D4FILEIX                                                
GP5A     TM    DAFILE+2,X'80'      DA & IS NAMES MUST BE COMPATIBLE             
         BZ    GP5X                                                             
         TM    ISFILE+2,X'80'      NAMES MUST BE OF FORMAT XXX...X              
         BZ    GP5X                                                             
         CLC   DAFILEID(3),ISFILEID                                             
         BNE   GP5E                                                             
         CLC   DAFILEID+6(2),ISFILEID+6                                         
         BNE   GP5E                                                             
GP5B     TM    D2FILE+2,X'80'      TEST IF DA FILE 2 NAME REQUIRED              
         BZ    GP5C                                                             
         CLC   D2FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D2FILEID+6(2),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D2FILE+4                                                      
         B     GP5E+4                                                           
GP5C     TM    D3FILE+2,X'80'      TEST IF DA FILE 3 NAME REQUIRED              
         BZ    GP5D                                                             
         CLC   D3FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D3FILEID+6(2),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D3FILE+4                                                      
         B     GP5E+4                                                           
GP5D     TM    D4FILE+2,X'80'      TEST IF DA FILE 4 NAME REQUIRED              
         BZ    GP5X                                                             
         CLC   D4FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D4FILEID+6(2),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D4FILE+4                                                      
         B     GP5E+4                                                           
GP5E     LA    R1,DAFILE+4         SET ERROR IN DAFILE= PARM                    
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4            INVALID VALUE FOR PARM                       
         B     GPERR                                                            
GP5X     EQU   *                                                                
*                                                                               
GP6      CLI   TCOPY,0             COPY= PARM ONLY IF OUTPUT=TAPE               
         BE    GP6X                                                             
         TM    OUTPUT,TAPE                                                      
         BO    GP6X                                                             
         LA    R1,TCOPY+4                                                       
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,3            INVALID PARM                                 
         B     GPERR                                                            
GP6X     EQU   *                                                                
*                                                                               
GP7      CLI   DIR,0               DIR= PARM ONLY IF OUTPUT=DISK                
         BE    GP7X                                                             
         TM    OUTPUT,DISK                                                      
         BZ    GP7A                                                             
         TM    MODE,DAFIL          AND A DA FILE IS OUTPUT                      
         BO    GP7X                                                             
GP7A     LA    R1,DIR+4                                                         
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,3            INVALID PARM                                 
         B     GPERR                                                            
GP7X     EQU   *                                                                
*                                                                               
GP8      TM    LOGO,NO             LOGO=NO                                      
         BZ    GP8X                                                             
         ICM   RF,15,=V(LOGO)                                                   
         BZ    GP8X                                                             
         MVC   0(2,RF),=X'07FE'    NO-OP THE LOGOS                              
GP8X     EQU   *                                                                
*                                                                               
         B     GETPARMX                                                         
*                                                                               
GPERR    L     R1,ERRNUM           POINT TO ERROR INFO WORD                     
*                                                                               
GPERR1   CLI   ERRNUM,1            HIGH ORDER BYTE HAS ERR NUM                  
         BNE   GPERR2                                                           
         L     RF,=A(ERR01)        MISSING PARAMETER - ........                 
         MVC   20(8,RF),0(R1)                                                   
         B     GPERRA                                                           
*                                                                               
GPERR2   CLI   ERRNUM,2            INVALID PARAMETER CARD SYNTAX                
         BE    GPERRA                                                           
*                                                                               
GPERR3   CLI   ERRNUM,3            INVALID PARAMETER - ........                 
         BNE   GPERR4                                                           
         L     RF,=A(ERR03)                                                     
         MVC   20(8,RF),0(R1)                                                   
         B     GPERRA                                                           
*                                                                               
GPERR4   CLI   ERRNUM,4            INVALID VALUE FOR PARAMETER - ....           
         BNE   GPERR5                                                           
         L     RF,=A(ERR04)                                                     
         MVC   30(8,RF),0(R1)                                                   
         B     GPERRA                                                           
*                                                                               
GPERR5   DC    H'0'                DIE IF UNKNOWN ERROR                         
*                                                                               
GPERRA   GOTO1 =V(PRINTER)         PRINT CARD WITH INVALID PARAMETER            
         CLI   FRSTTIME,C'X'       FLUSH AND PRINT REMAINING CARDS              
         BE    GPERRX                                                           
*                                                                               
GPERRB   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLC   C(2),=C'/*'                                                      
         BE    GPERRX                                                           
         MVC   P(80),C                                                          
         GOTO1 =V(PRINTER)                                                      
         B     GPERRB                                                           
*                                                                               
GPERRX   SR    R1,R1               INVALID PARAMETER CARD 1,2,3,4               
         IC    R1,ERRNUM                                                        
         LNR   R1,R1                                                            
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
GPEOJ    MVI   EOJFLAG,C'Y'        SET NO MORE PARAMETER CARDS                  
*                                                                               
GETPARMX XIT1                                                                   
                                                                                
DEFNAME  DC    CL8'*       '       DEFAULT FILE NAME IS SYS= INPUT              
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* INITIALISE FOR MODE                                                 *         
***********************************************************************         
INITMODE NTR1  BASE=*,LABEL=*                                                   
         TM    ABEND,YES           TEST FOR DUMP=YES OR DUMP=OS                 
         BO    INIM0                                                            
         GOTO1 =V(STXITER),DMCB,STXLST                                          
INIM0    L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         CLC   LDDGLOBX,=CL8'*EXTRNS*'                                          
         BNE   INIM0A                                                           
         LA    R0,STXLST                                                        
         ST    R0,LSTXLST          SET STXITER DUMPLIST                         
*                                                                               
INIM0A   MVI   UPDTFLAG,0          SET READ-ONLY FLAG                           
         TM    INPUT,DISK                                                       
         BZ    INIM0B                                                           
         OI    UPDTFLAG,UPDTNONO                                                
         B     INIM1                                                            
INIM0B   CLI   LDWRITE,C'N'                                                     
         BNE   INIM1                                                            
         OI    UPDTFLAG,UPDTNONO                                                
*                                                                               
INIM1    XC    DAINF,DAINF         EXTRACT DA FILE INFO                         
         MVC   DANAME,SPACES                                                    
         MVC   DADDDA,=A(DA1DDN)   CL8'DDNAME',CL26'DSN'                        
         L     R1,ADAREC                                                        
         ST    R1,DARECA                                                        
         L     R1,LDDDTFDA         POINT TO DTF                                 
         USING DTFPHD,R1                                                        
         ST    R1,DADTFA                                                        
         MVC   DANAME(8),DAFILEID                                               
         MVC   DANAMF(8),DAFILEID                                               
         LTR   R1,R1                                                            
         BZ    INIM1C                                                           
         MVC   DTFDD(8),DAFILEID   FIX DA FILE NAME INTO DTF                    
         OC    DABLKSZ,DABLKSZ                                                  
         BZ    *+10                                                             
         MVC   DBLKSZ,DABLKSZ      FIX DA BLOCK SIZE INTO DTF                   
         MVC   DABLKL(2),DBLKSZ                                                 
         OC    DAKEYLN,DAKEYLN                                                  
         BZ    *+16                                                             
         MVC   DKEYLNC,DAKEYLN     FIX DA KEY LENGTH INTO DTF                   
         XC    DKEYSPC,DKEYSPC     SET SPARE TO ZERO                            
*                                                                               
INIM1A   TM    GLOBALW,X'80'       TEST IF IGNORED GLOBAL=X PARAM               
         BZ    INIM1B                                                           
         TM    LDSEATS,GLOBALQ     TEST IF SYSTEM DEFINED AS GLOBAL             
         BZ    INIM1B                                                           
         TM    OUTPUT,DISK         TEST IF LOADING SYSTEM                       
         BZ    INIM1B                                                           
         L     R1,=A(WARNMSGG)     WARN 'GLOBAL=N PARAMETER IGNORED'            
         MVC   OPERMSG,0(R1)                                                    
         TM    GLOBALW,YES         TEST IF TRYING TO SET GLOBAL=Y               
         BZ    *+8                                                              
         MVI   OPERMSG+19,C'Y'                                                  
         MVC   LDCOND,=AL2(WARNCC) SET WARNING ISSUED COND CODE                 
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         L     R1,LDDDTFDA         RESTORE DTF POINTER                          
*                                                                               
INIM1B   CLI   GLOBAL,C'Y'         FIX DA GLOBAL FILE INTO DTF                  
         BNE   *+8                                                              
         OI    DTFFLAG,DTFGLOB                                                  
         CLI   GLOBAL,C'N'                                                      
         BNE   *+8                                                              
         NI    DTFFLAG,255-DTFGLOB                                              
         TM    DTFFLAG,DTFGLOB                                                  
         BZ    *+8                                                              
         OI    DAFLAG,DTFGLOB      SET DA FILE IS GLOBAL                        
*                                                                               
         CLI   DABIG,C'Y'          FIX DA BIG/NORMAL FILE INTO DTF              
         BNE   *+12                                                             
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         OI    DTFTYPE,DTFTBIG                                                  
         CLI   DABIG,C'B'                                                       
         BNE   *+12                                                             
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         OI    DTFTYPE,DTFTBIGF                                                 
         CLI   DABIG,C'G'                                                       
         BNE   *+8                                                              
         OI    DTFTYPE,DTFTBIG+DTFTBIGF                                         
         CLI   DABIG,C'N'                                                       
         BNE   *+8                                                              
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         MVC   HALF(1),DTFTYPE                                                  
         NI    HALF,DTFTBIG+DTFTBIGF                                            
         OC    DAFLAG(1),HALF                                                   
         BAS   RE,INIMCBLK         CHECK VALID FILE BLOCK SIZE                  
*                                                                               
         CLI   DACMPRS,C'Y'        FIX DA COMPRESSION INTO DTF                  
         BNE   *+8                                                              
         OI    DTFTYPE,DTFTKCL+DTFTKCR                                          
         CLI   DACMPRS,C'N'                                                     
         BNE   *+8                                                              
         NI    DTFTYPE,255-DTFTKCL-DTFTKCR                                      
         CLI   DACMPRS,C'L'                                                     
         BNE   *+12                                                             
         NI    DTFTYPE,255-DTFTKCL-DTFTKCR                                      
         OI    DTFTYPE,DTFTKCL                                                  
         CLI   DACMPRS,C'R'                                                     
         BNE   *+12                                                             
         NI    DTFTYPE,255-DTFTKCL-DTFTKCR                                      
         OI    DTFTYPE,DTFTKCR                                                  
*                                                                               
         TM    FLASH,YES           FIX DA FLASH FILE INTO DTF                   
         BZ    *+8                                                              
         OI    DTFFLAG,DTFFLSH                                                  
         TM    FLASH,NO                                                         
         BZ    *+8                                                              
         NI    DTFFLAG,255-DTFFLSH                                              
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+8                                                              
         OI    DAFLAG,FLASHQ                                                    
*                                                                               
         NI    DTFOPEN,X'7F'       SET READ-ONLY BIT IN DTF                     
         TM    UPDTFLAG,UPDTNONO                                                
         BZ    *+8                                                              
         OI    DTFOPEN,X'80'                                                    
*                                                                               
INIM1C   MVC   DAELD,LDDELD                                                     
         MVC   DALINKD,LDDLINKD                                                 
         MVC   DAKEYL,LDDKEYL                                                   
         MVC   DACTLL,LDDCTLL      SET LENGTH OF CONTROL BYTES TO 'OR'          
         CLI   LDDCTLOR,0          TEST IF OVERRIDE LENGTH DEFINED              
         BE    INIM1D                                                           
         XC    DACTLL,DACTLL                                                    
         CLI   LDDCTLOR,X'FF'      TEST IF NO OR'ING REQUIRED                   
         BE    INIM1D                                                           
         MVC   DACTLL+1(1),LDDCTLOR                                             
INIM1D   MVC   DAMIN,LDDMIN                                                     
         OC    DAMIN,DAMIN         DEFAULT MIN REC LEN                          
         BNZ   *+10                                                             
         MVC   DAMIN,DAELD                                                      
         MVC   DAMAX,LDDMAX                                                     
*                                                                               
INIM2    XC    F1INFO,F1INFO       EXTRACT 2ND/3RD/4TH DA FILE INFO             
         XC    F2INFO,F2INFO                                                    
         XC    F3INFO,F3INFO                                                    
         XC    F4INFO,F4INFO                                                    
         TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    INIM3                                                            
         MVC   F1INFO,DAINF        SET 1ST DA FILE INFO                         
         MVI   F1FNUM,1                                                         
         MVC   F1DDDA,=A(DA1DDN)   CL8'DDNAME',CL26'DSN'                        
         MVC   F2INFO,DAINF        SET 2ND DA FILE INFO                         
         MVI   F2FNUM,2                                                         
         MVC   F2DDDA,=A(DA2DDN)   CL8'DDNAME',CL26'DSN'                        
         ICM   R1,15,LDDDTFD2      POINT TO 2ND FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         USING DTFPHD,R1                                                        
         ST    R1,F2DTFA                                                        
         MVC   F2NAME(8),D2FILEID                                               
         MVC   F2NAMF(8),D2FILEID                                               
         MVC   DTFDD(8),D2FILEID   FIX 2ND DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         OC    DTFTYPE,HALF                                                     
         NI    DTFOPEN,X'7F'       SET READ-ONLY BIT IN DTF                     
         TM    UPDTFLAG,UPDTNONO                                                
         BZ    *+8                                                              
         OI    DTFOPEN,X'80'                                                    
         OC    DABLKSZ,DABLKSZ                                                  
         BZ    *+10                                                             
         MVC   DBLKSZ,DABLKSZ      FIX DA BLOCK SIZE INTO DTF                   
         BAS   RE,INIMCBLK         CHECK VALID FILE BLOCK SIZE                  
         MVC   F2BLKL(2),DBLKSZ                                                 
         TM    LDDMULTI,LDDQDA4    TEST IF DA FILES 3 AND 4 DEFINED             
         BZ    INIM3                                                            
         MVC   F3INFO,DAINF        SET 3RD DA FILE INFO                         
         MVI   F3FNUM,3                                                         
         MVC   F3DDDA,=A(DA3DDN)   CL8'DDNAME',CL26'DSN'                        
         MVC   F4INFO,DAINF        SET 4TH DA FILE INFO                         
         MVI   F4FNUM,4                                                         
         MVC   F4DDDA,=A(DA4DDN)   CL8'DDNAME',CL26'DSN'                        
         ICM   R1,15,LDDDTFD3      POINT TO 3RD FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         ST    R1,F3DTFA                                                        
         MVC   F3NAMF(8),D3FILEID                                               
         MVC   DTFDD(8),D3FILEID   FIX 3RD DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         OC    DTFTYPE,HALF                                                     
         NI    DTFOPEN,X'7F'       SET READ-ONLY BIT IN DTF                     
         TM    UPDTFLAG,UPDTNONO                                                
         BZ    *+8                                                              
         OI    DTFOPEN,X'80'                                                    
         OC    DABLKSZ,DABLKSZ                                                  
         BZ    *+10                                                             
         MVC   DBLKSZ,DABLKSZ      FIX DA BLOCK SIZE INTO DTF                   
         BAS   RE,INIMCBLK         CHECK VALID FILE BLOCK SIZE                  
         MVC   F3BLKL(2),DBLKSZ                                                 
         ICM   R1,15,LDDDTFD4      POINT TO 4TH FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         ST    R1,F4DTFA                                                        
         MVC   F4NAMF(8),D4FILEID                                               
         MVC   DTFDD(8),D4FILEID   FIX 4TH DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG-DTFTBIGF                                     
         OC    DTFTYPE,HALF                                                     
         NI    DTFOPEN,X'7F'       SET READ-ONLY BIT IN DTF                     
         TM    UPDTFLAG,UPDTNONO                                                
         BZ    *+8                                                              
         OI    DTFOPEN,X'80'                                                    
         OC    DABLKSZ,DABLKSZ                                                  
         BZ    *+10                                                             
         MVC   DBLKSZ,DABLKSZ      FIX DA BLOCK SIZE INTO DTF                   
         BAS   RE,INIMCBLK         CHECK VALID FILE BLOCK SIZE                  
         MVC   F4BLKL(2),DBLKSZ                                                 
         B     INIM3                                                            
*                                                                               
INIMCBLK TM    DTFTYPE,DTFTBIGF+DTFTBIG                                         
         BNOR  RE                                                               
         CLC   DBLKSZ,=H'13683'    MIN VALUE FOR 22-BIT 3390 BLKSIZE            
         BNLR  RE                                                               
         LA    R1,=CL8'BLKSIZE'    DTF BLKSIZE=VALUE IS INVALID                 
         CLI   DABIG,C'G'                                                       
         BNE   *+8                                                              
         LA    R1,DABIG+4          DABIG=G IS INVALID                           
         OC    DABLKSZ,DABLKSZ                                                  
         BZ    *+8                                                              
         LA    R1,DABLKSZE+4       DABLKSZE=VALUE IS INVALID                    
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         LA    R1,PARMTBL          POINT TO W/S AND PRINTER                     
         LR    R0,RC                                                            
         L     RF,=A(GETPARM)                                                   
         BASR  RE,RF               PRINT ERROR MESSAGE                          
         B     INIME                                                            
*                                                                               
INIM3    XC    ISINF,ISINF         EXTRACT IS FILE INFO                         
         MVC   ISNAME,SPACES                                                    
         MVC   ISDDDA,=A(ISFDDN)   CL8'DDNAME',CL26'DSN'                        
         L     R1,LDDDTFIS                                                      
         USING ISDTF,R1                                                         
         ST    R1,ISDTFA                                                        
         MVC   ISNAME,ISFILEID                                                  
         MVC   ISNAMF,ISFILEID                                                  
         LTR   R1,R1                                                            
         BZ    INIM4                                                            
         MVC   22(8,R1),ISFILEID   FIX IS FILE NAME                             
*                                                                               
         CLI   GLOBAL,C'Y'         FIX IS GLOBAL FILE INTO DTF                  
         BNE   *+8                                                              
         OI    ISFFLAG,ISFGLOB                                                  
         CLI   GLOBAL,C'N'                                                      
         BNE   *+8                                                              
         NI    ISFFLAG,255-ISFGLOB                                              
         TM    ISFFLAG,ISFGLOB                                                  
         BZ    *+8                                                              
         OI    ISFLAG,ISFGLOB                                                   
*                                                                               
         OC    ISPDOV,IXPDOV       COPY IXPDOV TO ISPDOV                        
         CLI   ISPDOV,C'Y'         FIX IS IXPDOV/NORMAL FILE INTO DTF           
         BNE   *+8                                                              
         OI    ISFTYPE,ISFTPDOV                                                 
         CLI   ISPDOV,C'N'                                                      
         BNE   *+8                                                              
         NI    ISFTYPE,255-ISFTPDOV                                             
*                                                                               
         TM    FLASH,YES           FIX IS FLASH FILE INTO DTF                   
         BZ    *+8                                                              
         OI    ISFFLAG,ISFFLSH                                                  
         TM    FLASH,NO                                                         
         BZ    *+8                                                              
         NI    ISFFLAG,X'FF'-ISFFLSH                                            
         TM    ISFFLAG,ISFFLSH                                                  
         BZ    *+8                                                              
         OI    ISFLAG,FLASHQ                                                    
*                                                                               
         NI    ISFOPEN,X'7F'       SET READ-ONLY BIT IN DTF                     
         TM    UPDTFLAG,UPDTNONO                                                
         BZ    *+8                                                              
         OI    ISFOPEN,X'80'                                                    
*                                                                               
         CLI   ISBLKIX,C'Y'        FIX IS ISBLKIX FILE INTO DTF                 
         BNE   *+8                                                              
         OI    ISFFLAG,ISFBLKIX                                                 
         CLI   ISBLKIX,C'N'                                                     
         BNE   *+8                                                              
         NI    ISFFLAG,255-ISFBLKIX                                             
*                                                                               
         CLI   ISBIG,C'Y'          FIX DA BIG/NORMAL FILE INTO DTF              
         BNE   *+12                                                             
         NI    ISFTYPE,255-ISFTBIG-ISFTBIGF                                     
         OI    ISFTYPE,ISFTBIGF                                                 
         CLI   ISBIG,C'B'                                                       
         BNE   *+12                                                             
         NI    ISFTYPE,255-ISFTBIG-ISFTBIGF                                     
         OI    ISFTYPE,ISFTBIGF                                                 
         CLI   ISBIG,C'N'                                                       
         BNE   *+8                                                              
         NI    ISFTYPE,255-ISFTBIG-ISFTBIGF                                     
         MVC   HALF(1),ISFTYPE                                                  
         NI    HALF,ISFTBIG+ISFTBIGF                                            
         OC    ISFLAG(1),HALF                                                   
*                                                                               
         CLI   ISCMPRS,C'Y'        FIX IS COMPRESSION INTO DTF                  
         BNE   *+8                                                              
         OI    ISCMPRSW,X'01'                                                   
         CLI   ISCMPRS,C'N'                                                     
         BNE   *+8                                                              
         NI    ISCMPRSW,255-X'01'                                               
*                                                                               
         OC    ISBLKSZ,ISBLKSZ     FIX IS BLOCK SIZE INTO DTF                   
         BZ    *+10                                                             
         MVC   ISPDLN,ISBLKSZ                                                   
*                                                                               
         MVC   ISKEYL(2),ISKEYLN                                                
         MVC   ISKEYL1(2),ISKEYLN1                                              
         MVC   ISRECL(2),ISRECLN                                                
         TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    INIM4                                                            
         MVC   ISFBYTE,LDDFBYTE    SET BYTE NUMBER WHERE FILE DEFINED           
         MVC   ISFBITS,LDDFBIT     AND THE BIT MASK FOR BYTE                    
         MVI   ISFSRL,0            SET NUMBER OF BITS TO SHIFT RIGHT            
         TM    ISFBITS,X'01'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,1                                                         
         TM    ISFBITS,X'02'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,2                                                         
         TM    ISFBITS,X'04'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,3                                                         
         TM    ISFBITS,X'08'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,4                                                         
         TM    ISFBITS,X'10'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,5                                                         
         TM    ISFBITS,X'20'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,6                                                         
         TM    ISFBITS,X'40'                                                    
         BO    INIM4                                                            
         MVI   ISFSRL,7                                                         
         TM    ISFBITS,X'80'                                                    
         BO    INIM4                                                            
         DC    H'0'                GIVE ME A FUCKING BREAK                      
         DROP  R1,R2                                                            
*                                                                               
INIM4    LA    R2,EXTTABL          FIND EXTERNAL LOADS                          
INIM4A   OC    0(2,R2),0(R2)                                                    
         BZ    INIM4D              END OF TABLE                                 
         CLC   0(8,R2),SPACES      ANYTHING INPUT                               
         BNE   INIM4B                                                           
         LA    R2,20(R2)           NO TRY NEXT ENTRY                            
         B     INIM4A                                                           
*                                                                               
INIM4B   GOTO1 =V(LOADER),DUB,0(R2),0  LOAD MODULE                              
         ICM   RF,15,4(R1)                                                      
         BZ    INIM4C                                                           
         L     R1,8(R2)            R1=A(VMODULE)                                
         ST    RF,0(R1)            SET NEW ADDRESS                              
         LA    R2,20(R2)           NEXT ENTRY                                   
         B     INIM4A                                                           
*                                                                               
INIM4C   LA    R1,12(R2)           SET ERRNUM FOR EXTERNAL PARAM                
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         LA    R1,PARMTBL          POINT TO W/S AND PRINTER                     
         LR    R0,RC                                                            
         L     RF,=A(GETPARM)                                                   
         BASR  RE,RF               PRINT ERROR MESSAGE                          
         B     INIME                                                            
*                                                                               
INIM4D   L     R1,VLDDEFN          PASS A(LDDEFN) IN P4                         
         ST    R1,PLCOUNT+12                                                    
         ST    R1,PLPURGE+12                                                    
         ST    R1,PLCPTRS+12                                                    
         ST    R1,PLTPTRS+12                                                    
         ST    R1,PLSIZE+12                                                     
         ST    R1,PLBALCK+12                                                    
         ST    R1,PLRECTDA+12                                                   
         ST    R1,PLRECTIS+12                                                   
*                                                                               
INIM5    CLI   DISP,1              TEST DISP=OLD CARD                           
         BE    INIM5B                                                           
         CLI   DISP,2              TEST DISP=SHR CARD                           
         BE    INIM5A                                                           
         CLI   OUTPUT,1            TEST OUTPUT=DISK                             
         BE    INIM5B                                                           
*                                                                               
INIM5A   LA    R1,ISOPEN           SET DISP=SHR OPEN                            
         ST    R1,OPENIS                                                        
         LA    R1,DAOPEN                                                        
         ST    R1,OPENDA                                                        
         B     INIM6                                                            
*                                                                               
INIM5B   LA    R1,ISOPOLD          SET DISP=OLD OPEN                            
         ST    R1,OPENIS                                                        
         LA    R1,DAOPOLD                                                       
         ST    R1,OPENDA                                                        
*                                                                               
INIM6    MVI   RECFLAG,0           RESET FLAGS                                  
         MVI   LRECFLAG,0                                                       
         MVI   FRSTIO,0                                                         
         MVI   EOFIN,C'N'                                                       
         MVI   DONBALCK,C'N'                                                    
         MVI   FLAG1,0                                                          
         MVI   RECOK,0                                                          
         MVI   PLXTRN+8,0          CLEAR EXTERNAL RETURN FIELD                  
         MVI   OPNOTF,0                                                         
         MVI   OPNINF,0                                                         
         MVI   TAPETYP,0                                                        
         MVI   TAPECNT,0                                                        
         MVC   TAPEFILE,SPACES                                                  
         MVC   TAPEDATE,SPACES                                                  
*                                                                               
         XC    LISREC,LISREC       CLEAR RECORD I/O AREAS                       
         L     R0,=A(ISREC)                                                     
         L     R1,=A(ISRECX-ISREC)                                              
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         L     R0,=A(DAREC)                                                     
         L     R1,=A(DARECX-DAREC)                                              
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         L     R0,=A(DACPYR)                                                    
         L     R1,=A(DACPYX-DACPYR)                                             
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
*                                                                               
INIM7    L     R1,DARECA           SET DBLKTAPE PARAM LIST                      
         ST    R1,PLDBLK                                                        
         MVC   PLDBLK+4(1),DALINKD+1                                            
         LA    R1,DANAMF                                                        
         TM    PHFILE,YES          SET PHYSICAL NAME IF INPUT                   
         BZ    *+8                                                              
         LA    R1,PHFILEID                                                      
         ST    R1,PLDBLK+12                                                     
         TM    INPUT,WDU           SET PHYSICAL FILE TYPE                       
         BZ    *+8                                                              
         MVI   PLDBLK+12,C'W'                                                   
*                                                                               
INIM8    CLI   EXTISPTR,0          TEST PASS SPECIAL IS PTRS TO EXT             
         BE    INIM8A                                                           
         TM    EXTISPTR,YES                                                     
         BZ    *+8                                                              
         OI    SVDFLAG1,LDDQXIPT                                                
         TM    EXTISPTR,NO                                                      
         BZ    *+8                                                              
         NI    SVDFLAG1,255-LDDQXIPT                                            
INIM8A   CLI   EXTIHDR,0           TEST PASS HEADER RECORDS TO EXT              
         BE    INIM8B                                                           
         TM    EXTIHDR,YES                                                      
         BZ    *+8                                                              
         OI    SVDFLAG1,LDDQXHDR                                                
         TM    EXTIHDR,NO                                                       
         BZ    *+8                                                              
         NI    SVDFLAG1,255-LDDQXHDR                                            
INIM8B   CLI   EXTITRL,0           TEST PASS TRAILER RECORDS TO EXT             
         BE    INIM8C                                                           
         TM    EXTITRL,YES                                                      
         BZ    *+8                                                              
         OI    SVDFLAG1,LDDQXTRL                                                
         TM    EXTITRL,NO                                                       
         BZ    *+8                                                              
         NI    SVDFLAG1,255-LDDQXTRL                                            
INIM8C   CLI   PRGISPTR,0          TEST PASS SPECIAL IS PTRS TO LDPURGE         
         BE    INIM8D                                                           
         TM    PRGISPTR,YES                                                     
         BZ    *+8                                                              
         OI    SVDIPFLG,LDDQPIPT                                                
         TM    PRGISPTR,NO                                                      
         BZ    *+8                                                              
         NI    SVDIPFLG,255-LDDQPIPT                                            
INIM8D   EQU   *                                                                
*                                                                               
INIMA    LA    R3,LDCOUNTS         RESET RECORD COUNTERS                        
INIMA1   CLI   0(R3),X'FF'                                                      
         BE    INIMAX                                                           
         XC    0(4,R3),0(R3)                                                    
         ZAP   4(8,R3),=P'0'                                                    
         ICM   R0,15,28(R3)        TEST IF 256*4 COUNTER ARRAY DEFINED          
         BZ    INIMA2                                                           
         LHI   R1,1024                                                          
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
INIMA2   ICM   RF,15,32(R3)        TEST IF 256*8 MONEY ARRAY DEFINED            
         BZ    INIMA3                                                           
         LHI   R0,256                                                           
         ZAP   0(8,RF),=P'0'                                                    
         LA    RF,8(RF)                                                         
         BCT   R0,*-10                                                          
INIMA3   LA    R3,L'LDCOUNTS(R3)                                                
         B     INIMA1                                                           
INIMAX   XC    ERRTOT,ERRTOT       CLEAR ERROR TOTAL                            
*                                                                               
INIMB    TM    RECOVER,YES         BUILD RECOVERY RECORD HEADER                 
         BZ    INIMBX                                                           
         MVC   RCVSIN,=F'1'                                                     
         MVC   RCVDATE,DATEBIN                                                  
         MVC   RCVTIME,NOWTHMS                                                  
INIMB1   CLI   RCVSYS,X'0A'        CONTROL SYSTEM TIME=HHMMSS0+                 
         BNE   INIMB2                                                           
         ICM   R1,15,RCVTIME                                                    
         SRL   R1,4                SHIFT OUT SIGN                               
         SLL   R1,8                SHIFT OUT HIGH ORDER ZERO                    
         O     R1,=X'8000000C'     SET FLAG TO SHOW NEW STYLE TIME              
         STCM  R1,15,RCVTIME                                                    
INIMB2   TM    RECOVER,X'40'       TEST IF TRAILERS WANTED                      
         BZ    INIMBX                                                           
         OI    RCVTIME,X'40'                                                    
INIMB3   MVC   RCXTMS,NOWMILLI     TIME NOW IN MILLISECS IN TRAILER             
         ICM   RF,15,=V(GETGIN)                                                 
         BZ    INIMBX                                                           
         BASR  RE,RF               SET GLOBAL INPUT DATA IN SSB                 
         L     RF,=A(SSB)                                                       
         MVC   RCXGIN,SSOGIN-SSOOFF(RF)                                         
INIMBX   EQU   *                                                                
*                                                                               
INIMC    CLI   ACTIVITY,0          ACTIVITY PARAMETER INPUT                     
         BNE   INIMCX              YES USE THAT VALUE                           
*                                                                               
*NOP*    CLC   DANAMF,=C'MEDFIL1 ' CODE TO SET ACTIVITY FOR A FILE              
*NOP*    BE    INIMCX-4                                                         
*                                                                               
         TM    SVDFLAG1,LDDQACTI   TEST IF ACTIVITY SET IN FILE DEFN            
         BZ    INIMCX                                                           
         OI    ACTIVITY,YES        SET NORMAL ACTIVITY                          
INIMCX   EQU   *                                                                
*                                                                               
INIMD    GOTO1 =V(PRINTER)         PRINT ACTION MESSAGE HEADER                  
         MVC   P(15),=C'ACTION MESSAGES'                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
         B     INIMX                                                            
*                                                                               
INIME    CR    RB,RC               EXIT WITH CC NEQ IF ERROR                    
         B     *+6                                                              
*                                                                               
INIMX    CR    RB,RB               EXIT WITH CC EQL IF OK                       
         XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* OPEN ALL FILES REQUIRED FOR MODE AND INIT SORTER IF REQUIRED        *         
***********************************************************************         
OPEN     NTR1  BASE=*,LABEL=*                                                   
         MVC   WORK(1),INPUT       TEST IF ANY DISK FILES                       
         OC    WORK(1),OUTPUT                                                   
         TM    WORK,DISK                                                        
         BZ    OPEN8                                                            
         XC    P1(24),P1           INIT PARM LIST FOR OPEN                      
         MVI   BYTE1,0                                                          
*                                                                               
OPEN3    TM    MODE,DAFIL          OPEN DA FILE IF SPECIFIED                    
         BZ    OPEN6                                                            
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BNZ   OPEN4                                                            
         L     R2,DADTFA                                                        
         USING DTFPHD,R2                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET DA FILE DSN FROM DTF+22                  
         BNE   *+8                                                              
         OI    DAFLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   DAFDSN(26),DYNDSN                                                
         MVC   DAFDYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET DA FILE DDNAME/SENAME FROM DSN           
         MVC   DANAMF,DYNDDNA                                                   
         MVC   DAEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDF1NA,DYNDDNA      SET EXTERNAL DAFILE DDNAME/DSN               
         CLI   LDDANA,C' '                                                      
         BNE   *+10                                                             
         MVC   LDDANA,DYNDDNA                                                   
         B     OPEN6                                                            
*                                                                               
OPEN4    TM    MODE,FILE1          TEST IF 1ST DAFILE REQUIRED                  
         BZ    OPEN4A                                                           
         L     R2,F1DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET DA FILE DSN FROM DTF+22                  
         BNE   *+8                                                              
         OI    F1FLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   DA1DSN(26),DYNDSN                                                
         MVC   DA1DYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET DA FILE DDNAME/SENAME FROM DSN           
         MVC   F1NAMF,DYNDDNA                                                   
         MVC   F1EXTNO,DYNFINO                                                  
         CLI   BYTE1,0             TEST IF FIRST OPEN                           
         BNE   OPEN4A                                                           
         OI    BYTE1,FILE1                                                      
         MVC   DANAMF,DYNDDNA                                                   
         MVC   DAEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDF1NA,DYNDDNA      SET EXTERNAL DAFILE DDNAME/DSN               
         CLI   LDDANA,C' '                                                      
         BNE   *+10                                                             
         MVC   LDDANA,DYNDDNA                                                   
*                                                                               
OPEN4A   TM    MODE,FILE2          TEST IF 2ND DAFILE REQUIRED                  
         BZ    OPEN5                                                            
         L     R2,F2DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET DA FILE DSN FROM DTF+22                  
         BNE   *+8                                                              
         OI    F2FLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   DA2DSN(26),DYNDSN                                                
         MVC   DA2DYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET DA FILE DDNAME/SENAME FROM DSN           
         MVC   F2NAMF,DYNDDNA                                                   
         MVC   F2EXTNO,DYNFINO                                                  
         CLI   BYTE1,0             TEST IF FIRST OPEN                           
         BNE   OPEN5                                                            
         OI    BYTE1,FILE2                                                      
         MVC   DANAMF,DYNDDNA                                                   
         MVC   DAEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDF2NA,DYNDDNA      SET EXTERNAL DAFILE DDNAME/DSN               
         CLI   LDDANA,C' '                                                      
         BNE   *+10                                                             
         MVC   LDDANA,DYNDDNA                                                   
*                                                                               
OPEN5    TM    MODE,FILE3          TEST IF 3RD DAFILE REQUIRED                  
         BZ    OPEN5A                                                           
         L     R2,F3DTFA                                                        
         GOTO1 =V(DADDS),P1,A(DAOPEN),,,(R2)                                    
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET DA FILE DSN FROM DTF+22                  
         BNE   *+8                                                              
         OI    F3FLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   DA3DSN(26),DYNDSN                                                
         MVC   DA3DYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET DA FILE DDNAME/SENAME FROM DSN           
         MVC   F3NAMF,DYNDDNA                                                   
         MVC   F3EXTNO,DYNFINO                                                  
         CLI   BYTE1,0             TEST IF FIRST OPEN                           
         BNE   OPEN5A                                                           
         OI    BYTE1,FILE3                                                      
         MVC   DANAMF,DYNDDNA                                                   
         MVC   DAEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDF3NA,DYNDDNA      SET EXTERNAL DAFILE DDNAME/DSN               
         CLI   LDDANA,C' '                                                      
         BNE   *+10                                                             
         MVC   LDDANA,DYNDDNA                                                   
*                                                                               
OPEN5A   TM    MODE,FILE4          TEST IF 4TH DAFILE REQUIRED                  
         BZ    OPEN6                                                            
         L     R2,F4DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET DA FILE DSN FROM DTF+22                  
         BNE   *+8                                                              
         OI    F4FLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   DA4DSN(26),DYNDSN                                                
         MVC   DA4DYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET DA FILE DDNAME/SENAME FROM DSN           
         MVC   F4NAMF,DYNDDNA                                                   
         MVC   F4EXTNO,DYNFINO                                                  
         CLI   BYTE1,0             TEST IF FIRST OPEN                           
         BNE   OPEN6                                                            
         OI    BYTE1,FILE4                                                      
         MVC   DANAMF,DYNDDNA                                                   
         MVC   DAEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDF4NA,DYNDDNA      SET EXTERNAL DAFILE DDNAME/DSN               
         CLI   LDDANA,C' '                                                      
         BNE   *+10                                                             
         MVC   LDDANA,DYNDDNA                                                   
*                                                                               
OPEN6    TM    MODE,ISFIL          OPEN IS FILE IF SPECIFIED                    
         BZ    OPEN6X                                                           
         L     R2,ISDTFA                                                        
         USING ISDTF,R2                                                         
         GOTO1 =V(ISDDS),P1,OPENIS,,,(R2)                                       
         LA    R1,ISFADCB                                                       
         BAS   RE,SETCACHE                                                      
         BAS   RE,GETDSN           GET IS FILE DSN FROM DRF+22                  
         BNE   *+8                                                              
         OI    ISFLAG1,DSNMATQ     SET DSNS MATCH                               
         MVC   ISFDSN(26),DYNDSN                                                
         MVC   ISFDYN(26),DYNDYN                                                
         BAS   RE,GETDDN           GET IS FILE DDNAME/SENAME FROM DSN           
         MVC   ISNAMF,DYNDDNA                                                   
         MVC   ISEXTNO,DYNFINO                                                  
         MVC   LDSENA,DYNSENA                                                   
         MVC   LDSENO,DYNSENO                                                   
         MVC   LDISNA,DYNDDNA      SET EXTERNAL ISFILE DDNAME/DSN               
*                                                                               
OPN6A    TM    OUTPUT,DISK         TEST OUTPUT IS FILE EXTENTS                  
         BZ    OPEN6X                                                           
         TM    ISFDEVF,X'0C'                                                    
         BZ    OPEN6B                                                           
         LHI   R1,-10              INVALID IS FILE EXTENTS                      
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
OPEN6B   TM    ISFTYPE,ISFTBIGF    TEST LOADING 20-BIT IS FILE                  
         BZ    OPEN6X                                                           
         LT    R4,=V(ISLPDIXA)                                                  
         BZ    OPEN6X                                                           
         L     R5,0(R4)            GET A(PDIXOV) FILE IN V(ISLDDS)              
         OPEN  ((R5),OUTPUT)                                                    
         LTR   RF,RF                                                            
         BNZ   *+12                                                             
         MVI   4(R4),C'Y'          SET PDIXOV OPEN FLAG IN V(ISLDDS)            
         B     OPEN6X                                                           
         LHI   R1,-36              CANT OPEN PDIXOV TEMPORARY FILE              
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
OPEN6X   EQU   *                                                                
*                                                                               
OPEN8    TM    INPUT,TAPE          OPEN INPUT TAPE IF SPECIFIED                 
         BZ    OPEN9                                                            
         TM    INPUT,TAPEPHYS      DONT OPEN PHYSICAL TAPE HERE                 
         BNZ   OPEN8X                                                           
         MVI   TINPDSN,0           CLEAR TAPEIN DYNALLOC FLAGS                  
         MVI   INPDSNL,0                                                        
         MVC   INPDSN,SPACES                                                    
         TM    OUTPUT,TAPE         SKIP DYNALLOC IF TAPE TO TAPE                
         BO    OPEN8B                                                           
*                                                                               
OPEN8A   BRAS  RE,SETDSN           CREATE DSN FOR TAPEIN                        
         MVC   TINPDSN,0(R1)                                                    
         MVC   INPDSND,1(R1)                                                    
         TM    TINPDSN,TINPINVG    TEST INVALID GENERATED TAPEIN DSN            
         BO    OPEN8B                                                           
         LA    R1,INPDSND                                                       
         BRAS  RE,ALLOC            DYNAMICALLY ALLOCATE TAPEIN DD CARD          
         BE    OPEN8B                                                           
         BH    *+12                                                             
         OI    TINPDSN,TINPUSE     SET TAPEIN DD DYNALLOC DONE                  
         B     OPEN8B                                                           
         OI    TINPDSN,TINPINVL    SET TAPEIN DD DYNALLOC ERROR                 
*                                                                               
OPEN8B   MVC   P(8),=C'OPN INP '   PRINT TAPEIN OPENED DATA                     
         MVC   P+8(8),=C'TAPEIN  '                                              
         TM    TINPDSN,TINPUSE+TINPINVL                                         
         BZ    OPEN8C                                                           
         MVC   P+17(9),=C'DYNALLOC '                                            
         MVC   P+29(4),=C'DSN='                                                 
         MVC   P+33(44),INPDSN                                                  
OPEN8C   GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN8D   TM    TINPDSN,TINPINVL    TEST INVALID DYNAMIC ALLOCATION              
         BO    OPEN8E                                                           
         BAS   R9,OPNIN                                                         
         B     OPEN8X                                                           
OPEN8E   LHI   R1,-5               CANT OPEN INPUT TAPE                         
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
OPEN8X   MVI   OPNINF,X'81'        SET FIRST REC OF FIRST TAPE                  
*                                                                               
OPEN9    TM    OUTPUT,TAPE         OPEN OUTPUT TAPE IF SPECIFIED                
         BZ    OPENA                                                            
         BRAS  RE,SETDSN           CREATE DSN FOR TAPEOUT                       
         MVC   TOUTDSN,0(R1)                                                    
         MVC   OUTDSND,1(R1)                                                    
         BAS   RE,SETGDG           LOCATE TAPEOUT GDG                           
         BAS   R9,OPNOUT                                                        
         MVI   OPNOTF,X'81'        SET FIRST REC OF FIRST TAPE                  
         MVC   P(8),=C'OPN OUT '                                                
         MVC   P+8(8),=C'TAPEOUT '                                              
*                                                                               
OPEN9A   TM    TOUTDSN,TOUTDDS     TEST IF DSN=DDSDSN INPUT ON DD CARD          
         BO    OPEN9B                                                           
         TM    TOUTDSN,TOUTINVO    TEST ERROR ON NORMAL OPEN                    
         BO    OPEN9D                                                           
         MVC   P+29(4),=C'DSN='                                                 
         MVC   P+33(44),ODDDSN     SHOW DSN WITH GDG (+1)                       
         GOTO1 =V(PRINTER)                                                      
         B     OPENA                                                            
*                                                                               
OPEN9B   MVC   P+17(9),=C'FN=DDSDSN'                                            
         TM    TOUTDSN,TOUTUSE     TEST IF USED LOCATED DSN IN OPEN             
         BO    OPEN9C                                                           
         MVC   P+29(4),=C'???='    SET INVALID TAPEOUT DSN                      
         MVC   P+33(44),OUTDSN                                                  
         B     OPEN9D                                                           
OPEN9C   MVC   P+29(4),=C'DSN='                                                 
         MVC   P+33(44),OUTDSN     SHOW DSN WITH GDG (+1)                       
         SR    RE,RE                                                            
         ICM   RE,1,OUTDSNL                                                     
         BZ    OPEN9D                                                           
         LA    RE,LOCDSN(RE)                                                    
         MVC   P+71(8),1(RE)       G0000V00                                     
OPEN9D   GOTO1 =V(PRINTER)                                                      
         TM    TOUTDSN,TOUTINVG+TOUTINVL+TOUTINVO                               
         BZ    OPENA                                                            
         LHI   R1,-6               CANT OPEN OUTPUT TAPE                        
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
OPENA    TM    RECOVER,YES         TEST IF RECOVER=YES INPUT                    
         BZ    OPENB                                                            
         BAS   R9,OPNRCV                                                        
*                                                                               
OPENB    MVI   DIRFLAG,0           SET NO DIRECTORY OUTPUT                      
         TM    OUTPUT,DISK                                                      
         BZ    OPENX                                                            
         TM    MODE,DAFIL          TEST IF OUTPUT DISK DA FILE                  
         BZ    OPENX               NO                                           
         OI    DIRFLAG,DIROUT      YES SET DIRECTORY OUTPUT                     
         TM    MODE,ISFIL          TEST IF OUTPUT IS FILE ALSO                  
         BZ    OPENC               NO                                           
         OI    DIRFLAG,DIRSORT     YES DIR OUTPUT MUST BE SORTED                
*                                                                               
OPENC    CLI   DIR,0               TEST IF DIR= PARM INPUT                      
         BE    OPEND               NO                                           
         BAS   R9,OPNDIR           YES OPEN THE OUTPUT DIR TAPE                 
         OI    DIRFLAG,DIRTAPE                                                  
         TM    DIR,DIRSORT         TEST IF WANT SORTED TAPE                     
         BZ    *+8                 NO                                           
         OI    DIRFLAG,DIRSORT     YES DIR OUTPUT MUST BE SORTED                
*                                                                               
OPEND    TM    DIRFLAG,DIRSORT     INITIALISE SORTER                            
         BZ    OPENX                                                            
         CLI   EXTSORT,C'Y'        TEST IF EXTERNAL DOES SORT                   
         BE    OPENX               YES THEN LET EXTERNAL SORT FIRST             
         L     RF,=A(SETSORT)                                                   
         BASR  RE,RF                                                            
*                                                                               
OPENX    XIT1                                                                   
                                                                                
OPNIN    L     R2,=A(TAPEIN)                                                    
         OPEN  ((2),INPUT)                                                      
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         BOR   R9                                                               
         LHI   R1,-5               CANT OPEN INPUT TAPE                         
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
                                                                                
OPNOUT   L     R2,=A(TAPEOUT)      GET JFCB FOR TAPEOUT                         
         RDJFCB ((2))                                                           
         LTR   RF,RF                                                            
         JNZ   OPNOUT4                                                          
         L     R1,=A(TOJFCB)       POINT TO COPY OF JFCB                        
         USING INFMJFCB,R1                                                      
         MVC   ODDDSN,JFCBDSNM                                                  
         LA    RE,JFCBDSNM         TEST TAPEOUT DD HAS DSN=DDSDSN               
         LA    R0,38                                                            
         NI    TOUTDSN,255-TOUTDDS                                              
OPNOUT1  CLC   0(6,RE),=C'DDSDSN'                                               
         JE    OPNOUT2                                                          
         LA    RE,1(RE)                                                         
         JCT   R0,OPNOUT1                                                       
         J     OPNOUT3                                                          
OPNOUT2  OI    TOUTDSN,TOUTDDS     SET DSN=DDSDSN INPUT ON DD CARD              
         TM    TOUTDSN,TOUTLOC                                                  
         JZ    OPNOUT4                                                          
         L     RF,=A(LOCDSN)       SET DSN FROM LOCATED VALUE                   
         MVC   JFCBDSNM,0(RF)                                                   
         OI    JFCBMASK+4,X'80'                                                 
         OI    TOUTDSN,TOUTUSE     SET LOCATED DSN USED FOR TAPEOUT             
         DROP  R1                                                               
OPNOUT3  L     R2,=A(TAPEOUT)                                                   
         OPEN  ((2),OUTPUT),TYPE=J                                              
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         JO    OPNOUT5                                                          
OPNOUT4  OI    TOUTDSN,TOUTINVO    SET INVALID OPEN OF TAPEOUT                  
         BR    R9                                                               
OPNOUT5  TM    TCOPY,TAPE                                                       
         BZR   R9                                                               
*                                                                               
OPNCPY   L     R2,=A(TAPECPY)                                                   
         OPEN  ((2),OUTPUT)                                                     
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         BOR   R9                  YES                                          
         CLC   40(8,R2),=C'TAPECOPY'                                            
         JNE   OPNCPY1                                                          
         L     RF,=A(ERR06)                                                     
         MVC   22(4,RF),=C'COPY'                                                
         LHI   R1,-6               CANT OPEN OUTPUT TAPE COPY                   
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
OPNCPY1  MVC   40(8,R2),=C'TAPECOPY' TRY ALTERNATE DDNAME                       
         J     OPNCPY                                                           
                                                                                
SETCACHE ST    RE,SAVERE           SET OPTION FOR CACHE DISK                    
         LA    R0,2                SET 2 FOR LOAD                               
         TM    OUTPUT,DISK         TEST FOR LOAD TO DISK                        
         JO    *+8                                                              
         LA    R0,3                NO-SET 3 FOR DUMP                            
         LNR   R0,R0               NEGATIVE VALUE TO SUPERVISOR                 
*&&US*&& SVC   247                                                              
         L     RE,SAVERE                                                        
         BR    RE                                                               
                                                                                
         USING DTFPHD,R2                                                        
GETDSN   ST    RE,SAVERE           GET FILE DSN FROM FILE R2=A(DTF)             
         MVC   DYNDD,DTFDD         SAVE DDNAME FROM DTF                         
         MVC   DYNDSN,SPACES                                                    
         MVC   DYNDYN,SPACES                                                    
         LA    R1,DYNBLK2                                                       
         ST    R1,DYNBLK1                                                       
         OI    DYNBLK1,X'80'                                                    
         LA    R1,DYNBLK4                                                       
         ST    R1,DYNBLK3                                                       
         LA    R1,DYNBLK5                                                       
         ST    R1,DYNBLK3+4                                                     
         OI    DYNBLK3+4,X'80'                                                  
         MVC   DYNBLK2,=X'1407000000000000000000000000000018000000'             
         LA    R1,DYNBLK3                                                       
         ST    R1,DYNBLK2+8                                                     
         MVC   DYNBLK4(6),=X'000100010008'                                      
         MVC   DYNBLK4+6(8),DYNDD                                               
         MVC   DYNBLK5,SPACES                                                   
         MVC   DYNBLK5(6),=X'000500010020'                                      
         LA    R1,DYNBLK1                                                       
         DYNALLOC                                                               
         MVC   DYNDSN(26),DYNBLK5+6                                             
*                                                                               
         LT    RF,=V(DMDYNDD)      GET DSN FROM V(DMDYNDD)                      
         BZ    GETDSNX                                                          
         GOTO1 (RF),GETDSNP,0,DTFDD,(R2)                                        
         LLC   RF,0(R1)                                                         
         AHI   RF,-1               RF=L'DSN-1                                   
         BNP   GETDSNX                                                          
         SR    RE,RE                                                            
         ICM   RE,7,1(R1)          RE=A(DSN)                                    
         BZ    GETDSNX                                                          
         EX    RF,*+8                                                           
         B     GETDSNX                                                          
         MVC   DYNDYN(0),0(RE)                                                  
*                                                                               
GETDSNX  CLC   DYNDSN,DYNDYN       EXIT WITH CC EQL IF DSNS MATCH               
         L     RE,SAVERE                                                        
         BR    RE                                                               
GETDSNP  DC    4F'0'                                                            
                                                                                
GETDDN   ST    RE,SAVERE           GET FILE DDNAME AND SENAME FROM DSN          
         XC    DYNASFL,DYNASFL                                                  
         MVC   DYNDDNA,DYNDD       SET DEFAULTS                                 
         ST    R2,DYNADTF                                                       
         MVC   DYNSENA,LDSENA                                                   
         MVC   DYNSENO,LDSENO                                                   
         MVC   DYNFINO,DTFXNUM                                                  
         L     RE,=A(SYSLIST)      RE=A(SYSLIST TABLE ENTRY)                    
*                                                                               
GETDDN1  CLI   0(RE),0             TEST END OF SYSTEM LIST                      
         BE    GETDDN6                                                          
         MVI   FULL,C'.'           SET FULL TO FIRST 3 CHRS OF FILE DD          
         MVC   FULL+1(3),4(RE)                                                  
         LA    RF,DYNDSN           RF=A(FILE DSN)                               
         LHI   R0,12                                                            
*                                                                               
GETDDN2  CLC   0(4,RF),FULL        SEARCH DSN FOR .XXX                          
         BE    GETDDN3                                                          
         LA    RF,1(RF)                                                         
         BCT   R0,GETDDN2                                                       
         LA    RE,L'SYSLIST(RE)    BUMP TO NEXT TABLE ENTRY                     
         B     GETDDN1                                                          
*                                                                               
GETDDN3  LA    RF,1(RF)            RF=A(FILE DDNAME) EG ACCDIR11                
         MVC   DYNDDNA(8),0(RF)    FILE DDNAME                                  
*                                                                               
GETDDN3A CLC   DYNDDNA(3),=C'GEN'  CONTROL SYSTEM SPECIALS                      
         BE    *+14                                                             
         CLC   DYNDDNA(3),=C'CTF'                                               
         BNE   GETDDN3B                                                         
         CLI   DYNDDNA+6,C'.'      ALLOW FOR CON.XXXXXX.SOMETHING               
         BNE   GETDDN3X                                                         
         MVC   DYNDDNA+6(2),SPACES                                              
         MVC   DYNSENA,=CL5'CON  '                                              
         B     GETDDN5                                                          
GETDDN3B EQU   *                                                                
*&&UK                                                                           
GETDDN3C CLC   DYNDDNA(3),=C'DMG'  MEDZ SPECIALS                                
         BE    GETDDN3D                                                         
         CLC   DYNDDNA(3),=C'DMN'                                               
         BE    GETDDN3D                                                         
         CLC   DYNDDNA(3),=C'DMO'                                               
         BNE   GETDDN3X                                                         
GETDDN3D CLI   DYNDDNA+6,C'.'      ALLOW FOR MED.XXXYYY.SOMETHING               
         BNE   GETDDN3X                                                         
         MVC   DYNDDNA+6(2),SPACES                                              
         MVC   DYNSENA,=CL5'MEDZ '                                              
         B     GETDDN5                                                          
*&&                                                                             
GETDDN3X CLI   DYNDDNA+7,C'.'      ALLOW FOR SSS.XXXYYYZ.SOMETHING              
         BNE   *+8                                                              
         MVI   DYNDDNA+7,C' '                                                   
         MVC   DYNSENA+0(3),0(RE)     SENAME PART1 IS SYS NAME                  
         MVC   DYNSENA+3(2),DYNDDNA+6 SENAME PART2 IS SYS FILE SET ID           
*&&UK                                                                           
GETDDN4  CLC   DYNSENA,=CL5'CON0'  CON.GENFIL0 FIX                              
         BNE   *+12                                                             
         MVI   DYNSENA+3,C' '                                                   
         B     GETDDN4X                                                         
         CLC   DYNSENA,=CL5'FEE0'  FEE.FEEFIL0 FIX                              
         BNE   *+12                                                             
         MVI   DYNSENA+3,C'1'                                                   
         B     GETDDN4X                                                         
         CLC   DYNSENA,=CL5'MBA0'  MBA.MBAFIL0 FIX                              
         BNE   *+12                                                             
         MVI   DYNSENA+3,C'1'                                                   
         B     GETDDN4X                                                         
         CLC   DYNSENA,=CL5'MPL0'  MPL.MPLFIL0 FIX                              
         BNE   *+12                                                             
         MVI   DYNSENA+3,C'1'                                                   
         B     GETDDN4X                                                         
         CLC   DYNSENA,=CL5'PER0'  MPL.PERFIL0 FIX                              
         BNE   *+12                                                             
         MVI   DYNSENA+3,C'1'                                                   
         B     GETDDN4X                                                         
GETDDN4A CLC   DYNSENA,=CL5'MED0'  MED.DMGFIL0/DMNFIL0/DMO1FL0 FIX              
         BNE   GETDDN4X                                                         
         CLC   DYNDDNA(3),=C'DMG'                                               
         BE    GETDDN4B                                                         
         CLC   DYNDDNA(3),=C'DMN'                                               
         BE    GETDDN4B                                                         
         CLC   DYNDDNA(3),=C'DMO'                                               
         BNE   GETDDN4X                                                         
GETDDN4B MVI   DYNSENA+3,C'Z'                                                   
GETDDN4X EQU   *                                                                
*&&                                                                             
GETDDN5  L     RF,=A(GETFDTFS)     SEARCH FOR THIS DTF IN LIST                  
GETDDN5A C     R2,0(RF)                                                         
         BE    GETDDN5B                                                         
         LA    RF,L'GETFDTFS(RF)                                                
         CLI   0(RF),X'80'                                                      
         BNE   GETDDN5A                                                         
         B     GETDDN6                                                          
*                                                                               
GETDDN5B MVC   DYNSAVE(8),DTFDD    SAVE DDNAME AND RESTORE ORIGINAL             
         MVC   DTFDD,4(RF)                                                      
         NI    DTFOPEN,X'7F'       TURN OFF READ-ONLY BIT                       
         GOTO1 =V(DMDDNAME),DYNDMCB,(X'00',=C'DDNAME'),DYNDDNA,0                
         MVC   DTFDD,DYNSAVE       RESTORE DDNAME                               
         TM    UPDTFLAG,UPDTNONO   RESET READ-ONLY BIT                          
         BZ    *+8                                                              
         OI    DTFOPEN,X'80'                                                    
         CLI   8(R1),0                                                          
         BNE   GETDDN6                                                          
*                                                                               
GETDDN5C L     RE,8(R1)            POINT TO FILE INFO BLOCK                     
         USING DDNAD,RE                                                         
         MVC   DYNADTF,DDNAADTF    A(DTF)                                       
         MVC   DYNASFL,DDNAASFL    A(SYSFLES)                                   
         MVC   DYNSENO,DDNASENO    SE NUMBER                                    
         MVC   DYNSENA,DDNASENA    SE NAME                                      
         MVC   DYNFINO,DDNAFINO    FILE NUMBER                                  
         DROP  RE                                                               
*                                                                               
GETDDN6  CLI   DYNSENA+3,C' '      SET FULL SYSTEM NAME IN TITLE                
         BE    *+10                                                             
         MVC   TITLE(5),DYNSENA    SET CORRECT SYSTEM NAME IN TITLE             
*                                                                               
GETDDN7  MVC   P(8),=C'OPN R/O '   PRINT FILE OPENED ACTION MESSAGE             
         TM    DTFOPEN,X'80'                                                    
         BO    *+10                                                             
         MVC   P+4(3),=C'UPD'      SHOW READ-ONLY OR UPDATIVE                   
         MVC   P+8(8),DTFDD                                                     
         MVC   P+17(16),=C'FN=........ DSN='                                    
         MVC   P+20(08),DYNDDNA                                                 
         MVC   P+33(26),DYNDSN                                                  
         TM    OUTPUT,DISK         SHOW IF DSNS MATCH ON LOAD TO DISK           
         BZ    GETDDN7A                                                         
         CLC   DYNDSN,DYNDYN                                                    
         BE    GETDDN7A                                                         
         CLI   DYNDYN,C' '         TEST IF DMDYNDD VALUE DEFINED                
         BE    GETDDN7A                                                         
         MVI   P+32,C'>'                                                        
         CLI   P+46,C' '                                                        
         BNE   GETDDN7A                                                         
         MVC   P+46(12),DYNDYN                                                  
GETDDN7A TM    DYNFLAG,X'01'       SHOW SYSTEM DATA ON FIRST OPEN               
         BO    GETDDN7B                                                         
         OI    DYNFLAG,X'01'                                                    
         MVC   P+61(09),DYNSENS                                                 
         MVC   P+71(06),=C'SENUM='                                              
         GOTO1 =V(HEXO24),DYNDMCB,DYNSENO,P+77,1                                
         MVC   P+80(7),=C'DSPACE=' ALSO SHOW DSPACE DATA                        
         L     RF,=A(SSB)                                                       
         MVC   P+87(1),SSODSPAC-SSOOFF(RF)                                      
         CLI   P+87,C' '                                                        
         BH    *+8                                                              
         MVI   P+87,C'A'                                                        
         B     GETDDN7X                                                         
GETDDN7B TM    DYNFLAG,X'02'       SHOW DSPACE DATA ON SECOND OPEN              
         BO    GETDDN7X                                                         
         OI    DYNFLAG,X'02'                                                    
         MVC   P+71(7),=C'DSPACE='                                              
         L     RF,=A(SSB)                                                       
         MVC   P+78(1),SSODSPAC-SSOOFF(RF)                                      
         CLI   P+78,C' '                                                        
         BH    *+8                                                              
         MVI   P+78,C'A'                                                        
GETDDN7X GOTO1 =V(PRINTER)                                                      
*                                                                               
GETDDNX  OC    DYNASFL,DYNASFL     EXIT WITH CC EQL IF NOT FOUND                
         L     RE,SAVERE                                                        
         BR    RE                                                               
         DROP  R2                                                               
                                                                                
                                                                                
SETGDG   ST    RE,SAVERE           GET GDG GENERATION DATA                      
         MVC   LOCDSN,OUTDSN                                                    
         TM    TOUTDSN,TOUTGEN     EXIT IF FAILED TO GENERATE DSN               
         BZ    SETGDGX                                                          
         XC    LOCWRK(256),LOCWRK                                               
         XC    LOCWRK+256(16),LOCWRK+256                                        
         LOCATE LOCCAM                                                          
         LTR   RF,RF               EXIT WITH CC NEQ IF CANT LOCATE              
         BNZ   *+12                                                             
         OI    TOUTDSN,TOUTLOC     SET LOCATED GDG GENERATION                   
         B     SETGDGX                                                          
         OI    TOUTDSN,TOUTINVL    SET INVALID GDG LOCATE                       
SETGDGX  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
         LTORG                                                                  
                                                                                
         DS    0D                                                               
         DC    C'*DDNDSN*'                                                      
DDNDSN   DS    0C                  OPEN FILES DDNAME/DSN                        
*                                                                               
LDDANA   DS    0CL72               DAFILE DD/DSN - FIRST OR ONLY DAFILE         
DAFDDN   DC    CL8' '                                                           
DAFDSN   DC    CL32' '                                                          
DAFDYN   DC    CL32' '                                                          
*                                                                               
LDISNA   DS    0CL72               ISFILE DD/DSN                                
ISFDDN   DC    CL8' '                                                           
ISFDSN   DC    CL32' '                                                          
ISFDYN   DC    CL32' '                                                          
*                                                                               
LDF1NA   DS    0CL72                                                            
DA1DDN   DC    CL8' '                                                           
DA1DSN   DC    CL32' '                                                          
DA1DYN   DC    CL32' '                                                          
*                                                                               
LDF2NA   DS    0CL72                                                            
DA2DDN   DC    CL8' '                                                           
DA2DSN   DC    CL32' '                                                          
DA2DYN   DC    CL32' '                                                          
*                                                                               
LDF3NA   DS    0CL72                                                            
DA3DDN   DC    CL8' '                                                           
DA3DSN   DC    CL32' '                                                          
DA3DYN   DC    CL32' '                                                          
*                                                                               
LDF4NA   DS    0CL72                                                            
DA4DDN   DC    CL8' '                                                           
DA4DSN   DC    CL32' '                                                          
DA4DYN   DC    CL32' '                                                          
*                                                                               
DDNDSNX  EQU   *                                                                
*                                                                               
DYNBLK1  DS    F                   DYNALLOC BLOCK TO GET DSN                    
DYNBLK2  DS    XL20                                                             
DYNBLK3  DS    XL8                                                              
DYNBLK4  DS    XL14                                                             
DYNBLK5  DS    XL38                                                             
*                                                                               
DYNDMCB  DS    6F                                                               
DYNSAVE  DS    CL8                                                              
*                                                                               
DYNDATA  DS    0D                                                               
         DC    C'*DYNDAT*'                                                      
DYNDD    DC    CL8' '              DDNAME FROM DTF+22(8)                        
*                                                                               
DYNDDNA  DC    CL8' '              DDNAME FROM DSN                              
DYNDSN   DC    CL32' '             DSN                                          
DYNDYN   DC    CL32' '             DSN FROM V(DMDYNDD)                          
*                                                                               
DYNADTF  DC    A(0)                A(ACTUAL FILE DTF)                           
DYNASFL  DC    A(0)                A(SYSLFES LIST)                              
DYNSENO  DC    XL1'00'             SE NUMBER                                    
DYNFINO  DC    XL1'00'             FILE NUMBER                                  
DYNFLAG  DC    XL1'00'                                                          
DYNSENS  DC    CL4'SYS='                                                        
DYNSENA  DC    CL5' '              SE NAME                                      
*                                                                               
INPDSND  DS    0CL45               TAPEIN DSN DATA                              
INPDSNL  DC    XL1'00'             LENGTH OF TAPEIN DSN WITHOUT DDG             
INPDSN   DC    CL44' '             TAPEIN DSN                                   
*                                                                               
ODDDSN   DC    CL44' '             TAPEOUT DSN FROM DD CARD                     
OUTDSND  DS    0CL45               TAPEOUT DSN DATA                             
OUTDSNL  DC    XL1'00'             LENGTH OF TAPEOUT DSN WITHOUT DDG            
OUTDSN   DC    CL44' '             TAPEOUT DSN                                  
         DS    0F                                                               
LOCCAM   CAMLST NAME,LOCDSN,,LOCWRK                                             
LOCDSN   DS    CL44                                                             
         DS    0D                                                               
LOCWRK   DS    XL(256+16)                                                       
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* SET DSN FOR TAPEIN OR TAPEOUT FOR DYNAMIC ALLOCATION                *         
***********************************************************************         
SETDSN   NTR1  BASE=*,LABEL=*      SET DSN FOR TAPEIN OR TAPEOUT                
         MVI   TAPEDSNF,0                                                       
         MVI   TAPEDSNL,0                                                       
         MVC   TAPEDSN,SPACES                                                   
         LA    RE,TAPEDSN          ACCTAPE.PRD.ACC12.ACCMST.COPYA(+1)           
*                                                                               
SETDSN1  MVC   0(3,RE),LDSENA      XXXTAPE - WHERE XXX IS SYSTEM NAME           
         MVC   3(4,RE),=C'TAPE'                                                 
         MVI   7(RE),C'.'                                                       
         LA    RE,8(RE)                                                         
*                                                                               
SETDSN2  L     R1,=A(DSPLIST)      DATA SPACE NAME                              
SETDSN2A CLI   0(R1),C' '                                                       
         BE    SETDSN2B                                                         
         CLC   0(1,R1),LDSPACE                                                  
         BE    SETDSN2B                                                         
         LA    R1,L'DSPLIST(R1)                                                 
         B     SETDSN2A                                                         
SETDSN2B MVC   0(3,RE),1(R1)                                                    
         MVI   3(RE),C'.'                                                       
         LA    RE,4(RE)                                                         
*                                                                               
SETDSN3  MVC   0(5,RE),LDSENA      SE NAME                                      
         LA    RE,3(RE)                                                         
         CLI   0(RE),C' '          TEST 3 CHR NAME                              
         BE    SETDSN3A                                                         
         LA    RE,1(RE)                                                         
         CLI   0(RE),C' '          TEST 4 CHR NAME                              
         BE    SETDSN3A                                                         
         LA    RE,1(RE)                                                         
SETDSN3A MVI   0(RE),C'.'                                                       
         LA    RE,1(RE)                                                         
*                                                                               
SETDSN4  L     R1,=A(SYSLIST)      FILE NAME                                    
SETDSN4A LR    R0,R1               SAVE A(TABLE ENTRY)                          
         CLI   0(R1),0             TEST END OF SYSTEM LIST                      
         BNE   *+16                                                             
         LA    R1,4(R1)            CANT FIND FILE NAME                          
         OI    TAPEDSNF,TAPEINVG   SET INVALID TAPE DSN                         
         B     SETDSN4P                                                         
         TM    MODE,DAFIL          TEST IF DUMPING DIRECTORY ONLY               
         BO    SETDSN4B                                                         
         CLC   ISNAMF(6),4(R1)     MATCH ON IS FILE NAME                        
         BNE   SETDSN4N                                                         
         LA    R1,4(R1)            POINT TO IS FILE NAME                        
         B     SETDSN4P                                                         
SETDSN4B TM    SVDMULTI,LDDQDA2+LDDQDA4                                         
         BNZ   SETDSN4C                                                         
         CLC   DANAMF(6),11(R1)    MATCH ON DA FILE NAME                        
         BNE   SETDSN4N                                                         
         LA    R1,11(R1)           POINT TO DA FILE NAME                        
         B     SETDSN4P                                                         
SETDSN4C CLC   ISNAMF(6),4(R1)     MULTI DA FILES MUST MATCH ON IS NAME         
         BNE   SETDSN4N                                                         
SETDSN4D CLC   LDFINOS+1(1),25(R1) MATCH ON MULTI DA FILE NUMS                  
         BE    SETDSN4E                                                         
         CLC   LDFINOS+2(1),26(R1)                                              
         BE    SETDSN4E                                                         
         CLC   LDFINOS+3(1),27(R1)                                              
         BE    SETDSN4E                                                         
         CLC   LDFINOS+4(1),28(R1)                                              
         BNE   SETDSN4N                                                         
SETDSN4E LA    R1,11(R1)           POINT TO FIRST DA FILE NAME                  
         B     SETDSN4P                                                         
SETDSN4N LA    R1,L'SYSLIST(R1)    BUMP TO NEXT TABLE ENTRY                     
         B     SETDSN4A                                                         
SETDSN4P MVC   0(6,RE),0(R1)       EXTRACT FILE NAME FROM TABLE                 
         LR    R1,R0                                                            
         CLI   29(R1),C' '         TEST IF OVERRIDE FOR TAPE SYSTEM             
         BE    *+10                                                             
         MVC   TAPEDSN(3),29(R1)                                                
         MVI   6(RE),C'.'                                                       
         LA    RE,7(RE)                                                         
*                                                                               
SETDSN5  L     R1,=A(MODEL)        MODE                                         
         MVC   DUB,SPACES                                                       
SETDSN5A CLI   0(R1),X'FF'                                                      
         BE    SETDSN5B                                                         
         CLC   0(1,R1),MODE        MATCH ON MODE BITS                           
         BE    *+12                                                             
         LA    R1,11(R1)                                                        
         B     SETDSN5A                                                         
         MVC   DUB,1(R1)                                                        
         CLI   0(R1),COPY+ISFIL    USE TEXT "COPYD" IF IS FILE ONLY             
         BE    SETDSN5B                                                         
         TM    SVDMULTI,LDDQDA4    TEST IF 4 DA FILES IN SET                    
         BZ    SETDSN5B                                                         
         LA    R1,11(R1)           YES FIND ALTERNATIVE TEXT                    
         B     SETDSN5A                                                         
SETDSN5B CLI   DUB,C' '            TEST IF MODE TEXT FOUND                      
         BNE   *+14                                                             
         MVC   DUB,=C'XXXXXX  '                                                 
         OI    TAPEDSNF,TAPEINVG   SET INVALID TAPE DSN                         
         MVC   0(8,RE),DUB                                                      
         CLI   0(RE),C' '          POSITION TO END OF MODE TEXT                 
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         LR    R1,RE                                                            
         LA    RF,TAPEDSN                                                       
         SR    R1,RF                                                            
         STC   R1,TAPEDSNL         SET LEN OF DSN WITHOUT GDG                   
*                                                                               
SETDSN6  MVC   0(4,RE),=C'(+1)'    SET GDG                                      
         TM    TAPEDSNF,TAPEINVG                                                
         BO    *+8                                                              
         OI    TAPEDSNF,TAPEGEN    SET DSN GENERATED WITHOUT ERROR              
*                                                                               
SETDSNX  LA    R1,TAPEDSNF         RETURN DATA FLAG/LENGTH/TEST                 
         XIT1  REGS=(R1)                                                        
*                                                                               
         LTORG                                                                  
*                                                                               
TAPEDSNF DC    X'00'               TAPE DSN FLAG                                
TAPEDDS  EQU   X'80'               DSN=DDSDSN INPUT ON DD CARD                  
TAPEGEN  EQU   X'40'               DSN GENERATED WITH (+1)                      
TAPELOC  EQU   X'20'               DSN GDG LOCATED                              
TAPEUSE  EQU   X'10'               DSN GDG USED IN OPEN                         
TAPEINVG EQU   X'04'               INVALID DSN GENERATION                       
TAPEINVL EQU   X'02'               INVALID GDG LOCATE                           
TAPEINVO EQU   X'01'               INVALID OPEN                                 
*                                                                               
TAPEDSND DS    0CL45               TAPE DSN DATA                                
TAPEDSNL DC    XL1'00'             LENGTH OF TAPE DSN WITHOUT DDG               
TAPEDSN  DC    CL44' '             TAPE DSN                                     
         EJECT                                                                  
***********************************************************************         
* DYNAMICALLY ALLOCATE TAPEIN                                         *         
***********************************************************************         
ALLOC    NTR1  BASE=*,LABEL=*      DYNAMICALLY ALLOCATE TAPEIN                  
         ST    R1,ALCDSND          SAVE A(DSN DATA)                             
         LA    R1,RBLK                                                          
         ST    R1,ARBLK                                                         
         OI    ARBLK,X'80'                                                      
         MVI   RBLKLEN,20          SET UP REQ BLK LEN                           
         MVI   RBLKVERB,1          SET ALLOCATE BY DSN VERB CODE                
         LA    R1,ATXT                                                          
         ST    R1,RBLKATXT         SET POINTER TO TEXT POINTER LIST             
*                                                                               
ALLOC1   LA    R1,TXTDD            SET UP POINTER TO DDNAME TEXT                
         ST    R1,ATXTDD                                                        
         MVC   0(2,R1),=X'0001'    SET DDNAME TEXT CODE                         
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0006'    SET DDNAME LENGTH                            
         MVC   6(8,R1),=C'TAPEIN  '                                             
*                                                                               
ALLOC2   LA    R1,TXTDSN           SET UP POINTER TO DSN TEXT                   
         ST    R1,ATXTDSN                                                       
         MVC   0(2,R1),=X'0002'    SET DSN TEXT CODE                            
         MVC   2(2,R1),=X'0001'                                                 
         L     RE,ALCDSND                                                       
         SR    RF,RF                                                            
         IC    RF,0(RE)            GET LEN OF DSN                               
         STH   RF,4(R1)            SET DSN LENGTH                               
         LA    RF,1(RE,RF)                                                      
         MVC   0(4,RF),=C'(0) '    SET (0) GDG GENERATED                        
         MVC   6(44,R1),1(RE)                                                   
*                                                                               
ALLOC3   LA    R1,TXTGEN           SET UP RELATIVE GENERATION NUM               
         ST    R1,ATXTGEN                                                       
         MVC   0(2,R1),=X'0003'                                                 
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'    FOR (+1) SET TO X'0004' AND C'+001'          
         MVC   6(1,R1),=C'0'       SET (0) GDG GENERTATED                       
*                                                                               
ALLOC4   LA    R1,TXTDISP          SET UP POINTER TO DISP TEXT                  
         ST    R1,ATXTDISP                                                      
         MVC   0(2,R1),=X'0004'    SET DISP TEXT CODE                           
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'08'         SET DISP=SHR CODE                            
*                                                                               
ALLOC5   OI    ATXTLAST,X'80'      SET END OF TEXT POINTER LIST                 
         LA    R1,ARBLK                                                         
         DYNALLOC                                                               
         SR    R1,R1               SET ALLOCATE DONE RETURN CODE                
         LTR   RF,RF                                                            
         BZ    ALLOCX              EXIT IF NO ERRORS                            
         LHI   R1,2                SET ALLOCATE ERROR                           
*                                                                               
ALLOC6   CLC   RBLKERR,=X'0410'    OK IF DD CARD ALREADY EXISTS                 
         BNE   ALLOCX                                                           
         LHI   R1,1                SET DD CARD ALREADY EXISTS                   
*                                                                               
ALLOCX   CHI   R1,1                EXIT WITH CC HIGH IF ERROR                   
         XIT1  REGS=(R1)                                                        
*                                                                               
ALCDSND  DS    A                   A(DSN DATA)                                  
*                                                                               
ARBLK    DS    A                   REQUEST BLOCK POINTER                        
RBLK     DS    0XL20               REQUEST BLOCK                                
RBLKLEN  DS    XL1                                                              
RBLKVERB DS    XL1                                                              
         DS    XL2                                                              
RBLKERR  DS    XL2                                                              
RBLKINFO DS    XL2                                                              
RBLKATXT DS    A                                                                
         DS    XL8                                                              
ATXT     DS    0A                  DYNALLOC BLOCK FOR TAPEIN                    
ATXTDD   DS    A                                                                
ATXTDSN  DS    A                                                                
ATXTGEN  DS    A                                                                
ATXTDISP DS    A                                                                
         ORG   *-4                                                              
ATXTLAST DS    A                   LAST TEXT BLOCK POINTER                      
         ORG                                                                    
*                                                                               
TXTDD    DS    XL6,CL8             TEXT BLOCK DDNAME 0001                       
TXTDSN   DS    XL6,CL44            TEXT BLOCK DSN    0002                       
TXTGEN   DS    XL6,CL4             TEXT BLOCK GDG    0003                       
TXTDISP  DS    XL6,XL1             TEXT BLOCK DISP   0004                       
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* LOAD IN EXTERNAL ROUTINE AND PASS CONTROL FOR PRE-PROCESSING        *         
***********************************************************************         
INIXTRN  NTR1  BASE=*,LABEL=*                                                   
         CLC   =C'DUMMY',XTRNNAME                                               
         BE    *+10                LOAD=DUMMY USED FOR PROCS                    
         CLC   XTRNNAME,SPACES     LOAD EXTERNAL MODULE IF SPECIFIED            
         BNE   INIX0                                                            
         MVI   XTRN,0                                                           
         B     INIXX                                                            
                                                                                
INIX0    L     RF,ALOADPT                                                       
         GOTO1 =V(LOADER),DUB,XTRNNAME,(RF)                                     
         L     RF,4(R1)                                                         
         LA    RF,0(RF)                                                         
         ST    RF,ALOADPT          SAVE EXTERNAL MODULE LOAD ADDRESS            
         LTR   RF,RF                                                            
         BNZ   INIX1                                                            
         L     RF,=A(ERR07)                                                     
         MVC   9(8,RF),XTRNNAME                                                 
         LHI   R1,-7               EXTERNAL ........ NOT FOUND                  
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
INIX1    L     RF,ALOADPT          CHECK IF EXTERNAL NO-OP                      
         CLC   0(2,RF),=X'07FE'                                                 
         BNE   INIX2                                                            
INIX1A   L     RF,ALOADPT          SET EXTERNAL NO-OP                           
         MVC   0(2,RF),=X'07FE'                                                 
         L     RF,=A(EXTMSG2)      EXTERNAL IS NOP                              
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+08(8),XTRNNAME                                           
         BAS   R9,PUTMSGP                                                       
         MVI   XTRN,0                                                           
         B     INIXX                                                            
*                                                                               
INIX2    TM    VERIFY,YES          TEST IF VERIFY=YES/IGNORE                    
         BZ    INIXA                                                            
         L     RF,ALOADPT          LOOK FOR C'*VERIFY*'                         
         LA    R0,256                                                           
INIX2A   CLC   0(8,RF),=C'*VERIFY*'                                             
         BE    INIX2B                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,INIX2A                                                        
         B     INIXA                                                            
INIX2B   LA    RF,8(RF)            BUMP PAST VERIFY LABEL                       
         ST    RF,FULL             SAVE A(EXTERNAL VERIFY INFO)                 
*                                                                               
INIX3    CLC   0(6,RF),DATEYMD     CHECK START DATE                             
         BH    *+14                                                             
         CLC   6(6,RF),DATEYMD     CHECK END DATE                               
         BNL   INIX4                                                            
INIX3A   L     RF,=A(ERR08)        EXTERNAL ........ DATES OUT OF RANGE         
         MVC   9(8,RF),XTRNNAME                                                 
         LHI   R1,8                                                             
         TM    VERIFY,X'40'        TEST VERIFY=IGNORE                           
         BO    *+6                                                              
         LNR   R1,R1               NO SET TO ABEND                              
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
         B     INIX1A              SET NO-OP AND OUTPUT NO-OP MESSAGE           
*                                                                               
INIX4    MVC   DUB(2),ISFILEID+6   EXTRACT SYSTEM ID FROM FILE ID               
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(2),DAFILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(2),D2FILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(2),D3FILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(2),D4FILEID+6                                                
         CLI   DUB,C' '                                                         
         BE    INIX4X                                                           
INIX4A   L     RF,FULL             POINT TO SYSTEM VALID LIST                   
         LA    RF,12(RF)                                                        
         LHI   R0,40               R0=MAX NUMBER OF SYSTEMS                     
         CLI   0(RF),X'FF'         TEST EMPTY LIST                              
         BE    INIX4X                                                           
         CLI   0(RF),C'*'          TEST VALID FOR ALL SYSTEMS                   
         BE    INIX4X                                                           
         CLI   1(RF),X'FF'         TEST SINGLE CHR ENTRY                        
         BNE   INIX4B                                                           
         CLC   0(1,RF),DUB         ALLOW MATCH ON ONE SINGLE CHR SYSTEM         
         BE    INIX4X                                                           
         B     INIX4C                                                           
INIX4B   CLC   0(2,RF),DUB         TEST TWO CHR SYSTEM IN LIST                  
         BE    INIX4X                                                           
         CLI   0(RF),X'FF'                                                      
         BE    INIX4C                                                           
         LA    RF,2(RF)                                                         
         BCT   R0,INIX4B                                                        
INIX4C   L     RF,=A(ERR09)        EXTERNAL ........ SYSTEM=XX NOT IN           
         MVC   9(8,RF),XTRNNAME                                                 
         MVC   25(2,RF),DUB                                                     
         LHI   R1,9                                                             
         TM    VERIFY,X'40'        TEST VERIFY=IGNORE                           
         BO    *+6                                                              
         LNR   R1,R1               NO SET TO ABEND                              
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
         B     INIX1A              SET NO-OP AND OUTPUT NO-OP MESSAGE           
INIX4X   EQU   *                                                                
*                                                                               
INIXA    L     RF,=A(EXTMSG1)      EXTERNAL ACTIVE                              
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+08(8),XTRNNAME                                           
         BAS   R9,PUTMSGP                                                       
*                                                                               
INIXB    OI    XTRN,YES            SET EXTERNAL ROUTINE ACTIVE                  
         LA    R1,PLXTRN                                                        
         MVC   0(4,R1),=A(DAREC)   SET FIRST TIME CALL & A(RECORD)              
         TM    MODE,DAFIL                                                       
         BO    *+10                                                             
         MVC   0(4,R1),=A(ISREC)                                                
         MVI   4(R1),0                                                          
         TM    INPUT,TAPE          SET I/O DEVICE FLAGS                         
         BZ    *+8                                                              
         OI    4(R1),X'80'         SET TAPE INPUT FLAG                          
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         OI    4(R1),X'40'         SET TAPE OUTPUT FLAG                         
         TM    MODE,DAFIL                                                       
         BO    *+8                                                              
         OI    4(R1),X'20'         SET I/S FILE ONLY                            
*                                                                               
         L     RF,ALOADPT          PASS CONTROL TO EXTERNAL                     
         BASR  RE,RF                                                            
         MVI   PLXTRN+8,0          NO RETURN ALLOWED ON INIT CALL               
*                                                                               
         TM    DIRFLAG,DIRSORT     TEST IF NEED SORTER                          
         BZ    INIXX                                                            
         CLI   EXTSORT,C'Y'        TEST IF EXTERNAL DOES SORT                   
         BNE   INIXX                                                            
         L     RF,=A(SETSORT)                                                   
         BASR  RE,RF               NOW CAN INIT SORTER                          
*                                                                               
INIXX    XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* TEST IF DA FILE WARNING REQUIRED AND OUTPUT WARNING MESSAGE         *         
***********************************************************************         
DALFCHK  NTR1  BASE=*,LABEL=*                                                   
         L     R1,=A(WARNMSG)      WARN 'XXX.XXXXXXXX TO BE DELETED'            
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSGX,SPACES                                                  
         CHI   R0,C'F'             TEST IF DA OR IS FILE                        
         BE    DALFC3                                                           
*                                                                               
DALFC1   L     RF,=A(ISFDSN)       RF=A(IS FILE DSN)                            
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN ISFDYN EXISTS         
         BE    DALFC1B                                                          
         TM    ISFLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC1A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC1B                                                          
*                                                                               
DALFC1A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC1B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFCX                                                           
*                                                                               
DALFC1B  BAS   R9,PAGMSGL                                                       
         BL    DALFCE              EXIT IF REPLY IS EOJ/CANCEL                  
         BE    DALFCX              OK IF REPLY IS ERASE/IGNORE                  
         CLI   OPERREP,C' '                                                     
         BE    DALFC1              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALFCE                                                           
*                                                                               
DALFC3   TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTIPLE DA FILES                  
         BNZ   DALFC4                                                           
         L     RF,=A(DAFDSN)       RF=A(DA FILE DSN)                            
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN DAFDYN EXISTS         
         BE    DALFC3B                                                          
         TM    DAFLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC3A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC3B                                                          
*                                                                               
DALFC3A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC3B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFCX                                                           
*                                                                               
DALFC3B  BAS   R9,PAGMSGL          OUTPUT DA FILE NAME                          
         BL    DALFCE              EXIT IF REPLY IS EOJ OR CANCEL               
         BE    DALFCX              OK IF REPLY IS ERASE                         
         CLI   OPERREP,C' '                                                     
         BE    DALFC3              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALFCE                                                           
*                                                                               
DALFC4   TM    MODE,FILE1          TEST IF LOADING 1ST DA FILE                  
         BZ    DALFC5                                                           
         L     R1,=A(WARNMSG)      WARN 'XXX.XXXXXXXX TO BE DELETED'            
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSGX,SPACES                                                  
         L     RF,=A(DA1DSN)       RF=A(DA1 FILE DSN)                           
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN DAFDY1 EXISTS         
         BE    DALFC4B                                                          
         TM    F1FLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC4A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC4B                                                          
*                                                                               
DALFC4A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC4B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFC5                                                           
*                                                                               
DALFC4B  BAS   R9,PAGMSGL          OUTPUT 1ST DA FILE NAME (FILE1)              
         BL    DALFCE              EXIT IF REPLY IS EOJ OR CANCEL               
         BE    DALFC5              OK IF REPLY IS ERASE                         
         CLI   OPERREP,C' '                                                     
         BE    DALFC4              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALFCE                                                           
*                                                                               
DALFC5   TM    MODE,FILE2          TEST IF LOADING 2ND DA FILE                  
         BZ    DALFC6                                                           
         L     R1,=A(WARNMSG)      WARN 'XXX.XXXXXXXX TO BE DELETED'            
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSGX,SPACES                                                  
         L     RF,=A(DA2DSN)       RF=A(DA2 FILE DSN)                           
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN DAFDY2 EXISTS         
         BE    DALFC5B                                                          
         TM    F2FLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC5A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC5B                                                          
*                                                                               
DALFC5A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC5B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFC6                                                           
*                                                                               
DALFC5B  BAS   R9,PAGMSGL          OUTPUT 2ND DA FILE NAME (FILE2)              
         BL    DALFCE              EXIT IF REPLY IS EOJ OR CANCEL               
         BE    DALFC6              OK IF REPLY IS ERASE                         
         CLI   OPERREP,C' '                                                     
         BE    DALFC5              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALFCE                                                           
*                                                                               
DALFC6   TM    MODE,FILE3          TEST IF LOADING 3RD DA FILE                  
         BZ    DALFC7                                                           
         L     R1,=A(WARNMSG)      WARN 'XXX.XXXXXXXX TO BE DELETED'            
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSGX,SPACES                                                  
         L     RF,=A(DA3DSN)       RF=A(DA3 FILE DSN)                           
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN DAFDY3 EXISTS         
         BE    DALFC6B                                                          
         TM    F3FLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC6A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC6B                                                          
*                                                                               
DALFC6A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC6B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFC7                                                           
*                                                                               
DALFC6B  BAS   R9,PAGMSGL          OUTPUT 3RD DA FILE NAME (FILE3)              
         BL    DALFCE              EXIT IF REPLY IS EOJ OR CANCEL               
         BE    DALFC7              OK IF REPLY IS ERASE                         
         CLI   OPERREP,C' '                                                     
         BE    DALFC6              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALFCE                                                           
*                                                                               
DALFC7   TM    MODE,FILE4          TEST IF LOADING 4TH DA FILE                  
         BZ    DALFCX                                                           
         L     R1,=A(WARNMSG)      WARN 'XXX.XXXXXXXX TO BE DELETED'            
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSGX,SPACES                                                  
         L     RF,=A(DA4DSN)       RF=A(DA4 FILE DSN)                           
         MVC   OPERMSG+12(12),0(RF)                                             
         CLI   32(RF),C' '         TEST IF V(DMDYNDD) DSN DAFDY4 EXISTS         
         BE    DALFC7B                                                          
         TM    F4FLAG1,DSNMATQ     TEST IF DSNS MATCH                           
         BZ    DALFC7A                                                          
         TM    WDEL,WRNDSNNE       YES-TEST IF WDEL=DSNNEQ                      
         BO    DALFCX                                                           
         B     DALFC7B                                                          
*                                                                               
DALFC7A  MVC   WORK(60),OPERMSG    SET EXTENDED WARNING MESSAGE                 
         L     R1,=A(WARNDSNS)                                                  
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+12(12),00(RF)                                            
         MVC   OPERMSG+40(12),32(RF)                                            
         MVC   OPERMSG+54(35),WORK+12                                           
         TM    WDEL,WRNABEND       TEST TO ABEND                                
         BO    DALFCE                                                           
         TM    WDEL,WRNIGN         TEST TO IGNORE                               
         BZ    DALFC7B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALFCX                                                           
*                                                                               
DALFC7B  BAS   R9,PAGMSGL          OUTPUT 4TH DA FILE NAME (FILE4)              
         BL    DALFCE              EXIT IF REPLY IS EOJ OR CANCEL               
         BE    DALFCX              OK IF REPLY IS ERASE                         
         CLI   OPERREP,C' '                                                     
         BE    DALFC7              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
DALFCE   L     RF,=A(ERR11)        OPERATOR REPLIED EOJ/CANCEL                  
         MVC   WORK(120),OPERMSG                                                
         MVC   0(40,RF),OPERMSG+12                                              
         MVC   OPERMSG+52(8),SPACES                                             
         MVC   OPERMSGX,SPACES                                                  
         LHI   R1,-11                                                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
DALFCX   MVC   WORK(120),OPERMSG   SAVE AND CLEAR OPERATOR MESSAGE              
         MVC   OPERMSG,SPACES                                                   
         MVC   OPERMSGX,SPACES                                                  
         CR    RB,RB               EXIT WITH CC EQL IF OK                       
         XIT1                                                                   
         LTORG                                                                  
***********************************************************************         
* RECORD VALIDATION ROUTINE FOR DAREC WITH CHECK FOR ISKEY MATCH      *         
***********************************************************************         
RECVAL   NTR1  BASE=*,LABEL=*                                                   
         MVI   ERRNUM,0            SET RECORD OK                                
         MVI   RECVFL,0                                                         
         MVI   RECVKNEQ,0                                                       
         XC    BADLEN,BADLEN                                                    
         TM    RECOK,X'01'         TEST ALREADY DONE INVALID RECLEN             
         BO    RECVX                                                            
         TM    RECFLAG,RECPTR      BYPASS POINTER RECS                          
         BO    RECVX                                                            
         TM    MODE,DAFIL          TEST IF PRINTING IS RECS                     
         BO    RECV1                                                            
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         B     RECV3                                                            
*                                                                               
RECV1    TM    MODE,ISFIL          BYPASS KEY CHECK IF NO IS REC                
         BZ    RECV4                                                            
         TM    OUTPUT,DISK         BYPASS KEY CHECK ON LOAD                     
         BO    RECV4                                                            
*                                                                               
RECV2    LH    R1,DAKEYL           GET KEY COMPARE LEN                          
         L     RF,ADAREC                                                        
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RF)                                                   
         BE    RECV4                                                            
         LA    RE,ISREC+1(R1)                                                   
         TM    0(RE),X'80'         TEST IF DELETED IS REC                       
         BZ    RECV2A              NO                                           
         OI    RECVKNEQ,X'01'      SET DELETED IS REC KEY NOT EQUAL             
         EX    R1,*+8              YES PROBABLY A KEY CHANGE SO                 
         B     RECV4               COPY IS KEY TO DA KEY AND IGNORE             
         MVC   0(0,RF),ISREC                                                    
*                                                                               
RECV2A   L     R1,ERRTOT           BUMP TOTAL ERRORS COUNTER                    
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,KEYNEQ           BUMP KEYS NOT EQUAL COUNTER                  
         AHI   R1,1                                                             
         ST    R1,KEYNEQ                                                        
         C     R1,MAX_KEYN         TEST MAXIMUM VALUE                           
         BNE   RECV2B                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR27)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,27               MAX KEYS NOT EQUAL ERRORS REACHED            
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
RECV2B   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    RECV4                                                            
         MVC   P(16),=C'WARNING KEY NEQ '                                       
*                                                                               
RECV3    MVC   P+17(4),=C'IS ='    PRINT IS RECORD                              
         LH    R0,ISRECL                                                        
         CHI   R0,54               ACCDIR=42+8+4 IS THE BIGGEST                 
         BL    *+8                                                              
         LHI   R0,54                                                            
         GOTO1 =V(HEXO24),DMCB,ISREC,P+21,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
         OI    RECVFL,X'01'        SET PRINTED RECORD FLAG                      
         TM    MODE,DAFIL                                                       
         BZ    RECVX                                                            
         OI    RECOK,X'80'         SET KEY NEQ FLAG                             
*                                                                               
RECV4    XC    FULL,FULL           CHECK ELEMENT STRUCTURE                      
         L     RE,ADAREC                                                        
         AH    RE,ISKEYL                                                        
         MVC   FULL(2),0(RE)       FULL(2)=REC LEN TAKEN FROM RECORD            
         CLC   FULL(2),DAMAX                                                    
         BNH   RECV4A                                                           
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING MAX LEN '                                       
         OI    RECOK,X'40'                                                      
         MVC   FULL(2),DAMAX                                                    
         B     RECV4B                                                           
RECV4A   CLC   FULL(2),DAMIN                                                    
         BNL   RECV4B                                                           
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING MIN LEN '                                       
         OI    RECOK,X'20'                                                      
         MVC   FULL(2),DAMAX                                                    
RECV4B   L     RF,ADAREC                                                        
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECV4C              NO                                           
         CLI   0(RF),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BNE   RECV4C                                                           
         MVC   FULL+2(2),FULL                                                   
         B     RECVA                                                            
RECV4C   AH    RF,DAMAX            RF=MAX SCAN ADDR                             
         LA    RF,1(RF)                                                         
         SR    R0,R0                                                            
         L     RE,ADAREC                                                        
         AH    RE,DAELD            RE=A(ELEMENT)                                
*                                                                               
RECV6    CLI   0(RE),0             SKIP THRU ELEMENTS                           
         BE    RECV8                                                            
         CLI   1(RE),2             TEST INVALID LENGTH                          
         BNL   RECV7                                                            
         L     RF,ADAREC                                                        
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN TO INVALID ELEMENT         
         B     RECV9                                                            
RECV7    IC    R0,1(RE)                                                         
         AR    RE,R0                                                            
         CR    RE,RF                                                            
         BNH   RECV6                                                            
*                                                                               
RECV8    L     RF,ADAREC                                                        
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN FROM ELEMENT SUM           
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         LA    RE,1(RE)                                                         
         CH    RE,FULL                                                          
         BE    RECVA                                                            
RECV9    OI    RECOK,X'10'         INVALID RECORD LENGTH                        
         TM    RECOK,X'60'                                                      
         BNZ   RECVA                                                            
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING BAD LEN '                                       
*                                                                               
RECVA    TM    RECOK,X'F0'         TEST FOR ERRORS                              
         BNZ   RECVA2                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         TM    INPUT,DISK                                                       
         BZ    RECVB                                                            
         LA    R5,ISREC                                                         
         AH    R5,ISRECL                                                        
         AHI   R5,-4                                                            
         GOTO1 =V(HEXO24),DMCB,(R5),P+7,4                                       
         B     RECVB                                                            
RECVA2   MVI   ERRNUM,X'FF'                                                     
         TM    RECOK,X'70'                                                      
         BZ    RECVB                                                            
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,BADREC                                                        
         AHI   R1,1                                                             
         ST    R1,BADREC                                                        
         C     R1,MAX_BADR         TEST MAXIMUM VALUE                           
         BNE   RECVA3                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR28)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,28               MAX BAD RECORD ERRORS REACHED                
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
RECVA3   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    RECVE                                                            
*                                                                               
RECVB    MVC   P+17(4),=C'DA ='    PRINT DA FILE KEY                            
         L     R2,ADAREC                                                        
         LH    R0,ISKEYL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R2),P+21,(R0)                                   
         GOTO1 =V(PRINTER)                                                      
         OI    RECVFL,X'01'        SET PRINTED RECORD FLAG                      
*                                                                               
RECVB2   LH    R0,DAELD            PRINT DA FILE LEN/CTL                        
         SH    R0,ISKEYL                                                        
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECVB3              NO                                           
         CLI   0(R2),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BNE   RECVB3                                                           
         LA    R0,3                                                             
RECVB3   AH    R2,ISKEYL                                                        
         GOTO1 =V(HEXO24),DMCB,(R2),P+21,(R0)                                   
         MVC   P+17(4),=C'CTL='                                                 
         TM    RECOK,X'70'         TEST MAX/MIN/BAD LEN WARNING                 
         BZ    RECVB4                                                           
         TM    INPUT,DISK                                                       
         BZ    RECVB4                                                           
         MVC   P(7),=C'DSKADR='                                                 
         LA    RF,ISREC            OUTPUT DISK ADDRESS                          
         AH    RF,ISRECL                                                        
         AHI   RF,-4                                                            
         GOTO1 =V(HEXO24),DMCB,(RF),P+7,4                                       
RECVB4   GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVB5   L     R4,ADAREC           PRINT RECORD WITH NO ELEMENTS                
         TM    SVDFLAG1,LDDQNER    DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECVB8              NO                                           
         CLI   0(R4),X'00'         YES-NO EL RECS HAVE ZERO IN 1ST              
         BNE   RECVB8                                                           
         LA    R3,3(R2)            POSITION PAST LEN/STATUS FIELDS              
         AH    R4,FULL                                                          
         SR    R4,R3               R4=RESIDUAL LENGTH TO PRINT                  
         BNP   RECVX                                                            
RECVB6   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNP   RECVX                                                            
         LA    R3,50(R3)                                                        
         B     RECVB6                                                           
*                                                                               
RECVB8   LH    R5,FULL             SET UP TO PRINT ELEMENTS                     
         CH    R5,FULL+2                                                        
         BH    *+8                                                              
         LH    R5,FULL+2                                                        
         L     R2,ADAREC                                                        
         AR    R5,R2               R5=A(END OF RECORD PRINT AREA)               
         AH    R2,DAELD            R2=A(ELEMENT)                                
         SR    R0,R0                                                            
*                                                                               
RECVC    IC    R0,1(R2)            R0=ELEMENT LENGTH                            
         LR    R3,R2                                                            
         LR    R4,R0                                                            
         AR    R4,R2                                                            
         BAS   R9,RECVD            PRINT REC BETWEEN R3 AND R4                  
         LTR   R0,R0                                                            
         BZ    RECVE                                                            
         AR    R2,R0               BUMP TO NEXT ELEMENT                         
         B     RECVC                                                            
*                                                                               
RECVD    CR    R3,R5               PRINT ELEMENT START=R3,END=R4                
         BNL   RECVE                                                            
         CR    R4,R5                                                            
         BNH   *+6                                                              
         LR    R4,R5               ADJUST END IF GT MAX                         
         CLI   1(R3),2                                                          
         BNL   *+6                                                              
         LR    R4,R5               ADJUST END IF BAD EL LEN                     
         CR    R4,R5                                                            
         BNE   *+6                                                              
         SR    R0,R0               SET END IF BAD EL LEN                        
         SR    R4,R3               R4=PRINT CHR LEN                             
         GOTO1 =V(HEXO24),DMCB,(R3),P+17,2                                      
         LA    R3,2(R3)                                                         
         AHI   R4,-2                                                            
         BLR   R9                                                               
RECVD2   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNPR  R9                                                               
         LA    R3,50(R3)                                                        
         B     RECVD2                                                           
*                                                                               
RECVE    TM    RECOK,X'60'         TEST FOR MIN/MAX REC LEN ERRORS              
         BZ    RECVX                                                            
         L     R5,ADARECH                                                       
         LH    R5,0(R5)            GET PHYSICAL LEN OF REC                      
         AHI   R5,-4                                                            
RECVE1   CH    R5,DAMAX            TEST IF BIGGER THAN MAX                      
         BNH   RECVE2                                                           
         STH   R5,BADLEN                                                        
         MVC   FULL(2),DAMAX       SET TO MAX LEN                               
         B     RECVE3                                                           
RECVE2   CH    R5,DAMIN            TEST IF SMALLER THAN MIN                     
         BNL   RECVE3                                                           
         STH   R5,BADLEN                                                        
         CLC   FULL+2(2),DAMAX     TEST SUM OF ELEMENTS LESS THAN MAX           
         BH    *+14                                                             
         MVC   FULL(2),FULL+2      SET TO SUM OF ELEMENTS                       
         B     RECVE3                                                           
         MVC   FULL(2),DAMIN                                                    
RECVE3   LH    R5,FULL             R5=NEW RECORD LENGTH                         
         STH   R5,NEWLEN                                                        
         L     R1,ADAREC                                                        
         AR    R1,R5                                                            
         XC    0(2,R1),0(R1)                                                    
         L     R5,ADAREC                                                        
         AH    R5,ISKEYL                                                        
         MVC   0(2,R5),FULL                                                     
         TM    RECVFL,X'01'        TEST IF PRINTED RECORD                       
         BZ    RECVX                                                            
         MVC   P(16),=C'ALTERED REC LEN '                                       
         MVC   P+17(4),=C'CTL='                                                 
         LH    R0,DAELD                                                         
         SH    R0,ISKEYL                                                        
         GOTO1 =V(HEXO24),DMCB,(R5),P+21,(R0)                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVX    NI    RECOK,X'01'         RESET ERROR FLAGS                            
         XIT1                                                                   
RECVFL   DC    X'00'               FLAG BYTE                                    
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* VARIABLE LENGTH INDEX SEQ RECORD VALIDATION ROUTINE                 *         
***********************************************************************         
RISVAL   NTR1  BASE=*,LABEL=*                                                   
         MVI   ERRNUM,0            SET RECORD OK                                
         MVI   RISVFL,0                                                         
         XC    BADLEN,BADLEN                                                    
         TM    RECOK,X'01'         TEST ALREADY DONE INVALID RECLEN             
         BO    RISVX                                                            
*                                                                               
RISV4    XC    FULL,FULL           CHECK ELEMENT STRUCTURE                      
         LA    RE,ISREC                                                         
         AH    RE,ISKEYL                                                        
         MVC   FULL(2),0(RE)       FULL(2)=REC LEN TAKEN FROM RECORD            
         CLC   FULL(2),DAMAX                                                    
         BNH   RISV4A                                                           
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING MAX LEN '                                       
         OI    RECOK,X'40'                                                      
         MVC   FULL(2),DAMAX                                                    
         B     RISV4B                                                           
*                                                                               
RISV4A   CLC   FULL(2),DAMIN                                                    
         BNL   RISV4B                                                           
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING MIN LEN '                                       
         OI    RECOK,X'20'                                                      
         MVC   FULL(2),DAMAX                                                    
*                                                                               
RISV4B   LA    RF,ISREC                                                         
         OC    DAELD,DAELD         FILE HAS NO ELEMENTS                         
         BNZ   *+14                                                             
         MVC   FULL+2(2),FULL                                                   
         B     RISVA                                                            
*                                                                               
RISV4C   AH    RF,DAMAX            RF=MAX SCAN ADDR                             
         LA    RF,1(RF)                                                         
         SR    R0,R0                                                            
         LA    RE,ISREC                                                         
         AH    RE,DAELD            RE=A(ELEMENT)                                
*                                                                               
RISV6    CLI   0(RE),0             SKIP THRU ELEMENTS                           
         BE    RISV8                                                            
         CLI   1(RE),2             CHECK LENGTH LESS THEN 2                     
         BNL   RISV7                                                            
         LA    RF,ISREC                                                         
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN TO INVALID ELEMENT         
         B     RISV9                                                            
*                                                                               
RISV7    IC    R0,1(RE)                                                         
         AR    RE,R0                                                            
         CR    RE,RF                                                            
         BNH   RISV6                                                            
*                                                                               
RISV8    LA    RF,ISREC                                                         
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN FROM ELEMENT SUM           
         CH    RE,FULL                                                          
*        BE    RISV9               *GO HERE TO REPORT 1 BYTE ERRORS*            
         BE    RISVA                                                            
         LA    RE,1(RE)                                                         
         CH    RE,FULL                                                          
         BE    RISVA                                                            
RISV9    OI    RECOK,X'10'         INVALID RECORD LENGTH                        
         TM    RECOK,X'60'                                                      
         BNZ   RISVA                                                            
         MVC   BADLEN,FULL                                                      
         MVC   P(16),=C'WARNING BAD LEN '                                       
*                                                                               
RISVA    TM    RECOK,X'F0'         TEST FOR ERRORS                              
         BNZ   RISVA2                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RISVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         B     RISVB                                                            
RISVA2   MVI   ERRNUM,X'FF'                                                     
         TM    RECOK,X'70'                                                      
         BZ    RISVB                                                            
         L     R1,ERRTOT                                                        
         AHI   R1,1                                                             
         ST    R1,ERRTOT                                                        
         L     R1,BADREC                                                        
         AHI   R1,1                                                             
         ST    R1,BADREC                                                        
         C     R1,MAX_BADR         TEST MAXIMUM VALUE                           
         BNE   RISVA3                                                           
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR28)        MOVE MAXIMUM VALUE TO WARNING MSG            
         UNPK  21(5,RF),DUB                                                     
         LHI   R1,28               MAX BAD RECORD ERRORS REACHED                
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
RISVA3   CLC   ERRTOT,MAX_PERR     TEST MAXIMUM TO PRINT                        
         BH    RISVE                                                            
*                                                                               
RISVB    MVC   P+17(4),=C'KEY='    PRINT IS FILE KEY                            
         LA    R2,ISREC                                                         
         LH    R0,ISKEYL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R2),P+21,(R0)                                   
         GOTO1 =V(PRINTER)                                                      
         OI    RISVFL,X'01'        SET PRINTED RECORD FLAG                      
*                                                                               
RISVB2   LH    R0,DAELD            PRINT IS FILE LEN/CTL                        
         SH    R0,ISKEYL                                                        
         BP    *+8                                                              
         LA    R0,3                NON-ELEM RECS HAVE LEN AND 1 STATUS          
         AH    R2,ISKEYL                                                        
         GOTO1 =V(HEXO24),DMCB,(R2),P+21,(R0)                                   
         MVC   P+17(4),=C'CTL='                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RISVB4   LA    R4,ISREC            PRINT NON-ELEMENT RECORDS                    
         OC    DAELD,DAELD                                                      
         BNZ   RISVB8                                                           
         LA    R3,3(R2)            POSITION PAST LEN/STATUS FIELDS              
         AH    R4,FULL                                                          
         SR    R4,R3               R4=RESIDUAL LENGTH TO PRINT                  
         BNP   RISVX                                                            
RISVB6   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNP   RISVX                                                            
         LA    R3,50(R3)                                                        
         B     RISVB6                                                           
*                                                                               
RISVB8   LH    R5,FULL             SET UP TO PRINT ELEMENTS                     
         CH    R5,FULL+2                                                        
         BH    *+8                                                              
         LH    R5,FULL+2                                                        
         LA    R2,ISREC                                                         
         AR    R5,R2               R5=A(END OF RECORD PRINT AREA)               
         AH    R2,DAELD            R2=A(ELEMENT)                                
         SR    R0,R0                                                            
*                                                                               
RISVC    IC    R0,1(R2)            R0=ELEMENT LENGTH                            
         LR    R3,R2                                                            
         LR    R4,R0                                                            
         AR    R4,R2                                                            
         BAS   R9,RISVD            PRINT REC BETWEEN R3 AND R4                  
         LTR   R0,R0                                                            
         BZ    RISVE                                                            
         AR    R2,R0               BUMP TO NEXT ELEMENT                         
         B     RISVC                                                            
*                                                                               
RISVD    CR    R3,R5               PRINT ELEMENT START=R3,END=R4                
         BNL   RISVE                                                            
         CR    R4,R5                                                            
         BNH   *+6                                                              
         LR    R4,R5               ADJUST END IF GT MAX                         
         CLI   1(R3),2                                                          
         BNL   *+6                                                              
         LR    R4,R5               ADJUST END IF BAD EL LEN                     
         CR    R4,R5                                                            
         BNE   *+6                                                              
         SR    R0,R0               SET END IF BAD EL LEN                        
         SR    R4,R3               R4=PRINT CHR LEN                             
         GOTO1 =V(HEXO24),DMCB,(R3),P+17,2                                      
         LA    R3,2(R3)                                                         
         AHI   R4,-2                                                            
         BLR   R9                                                               
RISVD2   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),DMCB,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNPR  R9                                                               
         LA    R3,50(R3)                                                        
         B     RISVD2                                                           
*                                                                               
RISVE    TM    RECOK,X'60'         TEST FOR MIN/MAX REC LEN ERRORS              
         BZ    RISVX                                                            
         LA    R5,ISRECH                                                        
         LH    R5,0(R5)            GET PHYSICAL LEN OF REC                      
         AHI   R5,-4                                                            
RISVE1   CH    R5,DAMAX            TEST IF BIGGER THAN MAX                      
         BNH   RISVE2                                                           
         STH   R5,BADLEN                                                        
         MVC   FULL(2),DAMAX       SET TO MAX LEN                               
         B     RISVE3                                                           
RISVE2   CH    R5,DAMIN            TEST IF SMALLER THAN MIN                     
         BNL   RISVE3                                                           
         STH   R5,BADLEN                                                        
         CLC   FULL+2(2),DAMAX     TEST SUM OF ELEMENTS LESS THAN MAX           
         BH    *+14                                                             
         MVC   FULL(2),FULL+2      SET TO SUM OF ELEMENTS                       
         B     RISVE3                                                           
         MVC   FULL(2),DAMIN                                                    
RISVE3   LH    R5,FULL             R5=NEW RECORD LENGTH                         
         STH   R5,NEWLEN                                                        
         LA    R1,ISREC                                                         
         AR    R1,R5                                                            
         XC    0(2,R1),0(R1)                                                    
         LA    R5,ISREC                                                         
         AH    R5,ISKEYL                                                        
         MVC   0(2,R5),FULL                                                     
         TM    RISVFL,X'01'        TEST IF PRINTED RECORD                       
         BZ    RISVX                                                            
         MVC   P(16),=C'ALTERED REC LEN '                                       
         MVC   P+17(4),=C'CTL='                                                 
         LH    R0,DAELD                                                         
         SH    R0,ISKEYL                                                        
         GOTO1 =V(HEXO24),DMCB,(R5),P+21,(R0)                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RISVX    NI    RECOK,X'01'         RESET ERROR FLAGS                            
         XIT1                                                                   
RISVFL   DC    X'00'               FLAG BYTE                                    
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO BUILD CTFILE TRAILER RECORD                              *         
***********************************************************************         
CTFTRL   NTR1  BASE=*,LABEL=*                                                   
         MVC   ISREC(CTFIHTL+1),CTFILET                                         
         LA    RE,ISREC                                                         
         USING LDHDRD,RE                                                        
         MVC   LDHFILE,ISNAMF      SET FILE NAME                                
         CLC   TAPEDATE,SPACES                                                  
         BE    CTFTRL1                                                          
         MVC   LDHDATE(L'TAPEAGE),TAPEAGE SET DATE/TIME OF LOAD TAPE            
*                                                                               
CTFTRL1  L     R1,DOIS             SET RECORD COUNT                             
         AHI   R1,1                                                             
         ST    R1,LDHRECS                                                       
         LHI   R1,CTFIHTL+4        ADJUST TAPE RECORD LENGTH                    
         STH   R1,ISRECH                                                        
         MVI   RECFLAG,RECTRL      SET REC TYPE FLAG TO TRAILER                 
*                                                                               
CTFTRLX  XIT1                                                                   
         DROP  RE                                                               
*                                                                               
         LTORG                                                                  
*                                                                               
CTFILE#  EQU   X'A1'               CTFILE FILE NUMBER                           
CTFIHTL  EQU   128                 CTFILE HEADER/TRAILER RECORD LENGTH          
*                                                                               
CTFILEH  DC    XL25'01'            CTFILE HEADER RECORD                         
         DC    X'0080',X'00'                                                    
         DC    X'0164',XL98'00'                                                 
         DC    X'00'                                                            
*                                                                               
CTFILET  DC    25X'FF'             CTFILE TRAILER RECORD                        
         DC    X'0080',X'00'                                                    
         DC    X'0164',XL98'00'                                                 
         DC    X'00'                                                            
*&&UK                                                                           
CONCRTH  DC    XL25'01'            CONCRETE HEADER RECORD                       
         DC    X'0032',X'00'                                                    
         DC    X'0115',XL19'00'                                                 
         DC    X'00'                                                            
*                                                                               
CONCRTT  DC    25X'FF'             CONCRETE TRAILER RECORD                      
         DC    X'0038',X'00'                                                    
         DC    X'0105',XL03'00'                                                 
         DC    X'0216',XL20'00'                                                 
         DC    X'00'                                                            
*&&                                                                             
*&&US                                                                           
CONCRTH  DC    XL25'01'            CONCRETE HEADER RECORD                       
         DC    X'0039',X'00'                                                    
         DC    X'0105',XL03'00'                                                 
         DC    X'0217',XL21'00'                                                 
         DC    X'00'                                                            
*                                                                               
CONCRTT  DC    25X'FF'             CONCRETE TRAILER RECORD                      
         DC    X'0022',X'00'                                                    
         DC    X'0105',XL03'00'                                                 
         DC    X'00'                                                            
*&&                                                                             
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO SAVE HEADER RECORD INFORMATION                           *         
***********************************************************************         
SAVEHDR  NTR1  BASE=*,LABEL=*                                                   
         TM    RECFLAG,RECHDR      TEST HEADER REC                              
         BZ    SAVEHDRX                                                         
         L     RF,ADAREC                                                        
         TM    SVDMULTI,LDDQDA2+LDDQDA4    TEST IF MULTIPLE DA FILES            
         BNZ   SAVEHDR1                                                         
         CLC   SVD1HDR(3),LDHUSER-LDHREC(RF)                                    
         BNL   *+10                                                             
         MVC   SVD1HDR,LDHUSER-LDHREC(RF)  SAVE LATEST USER DATA                
         MVC   SVD1ACT,LDHACTDT-LDHREC(RF) SAVE DATE LOADED ACTV                
         B     SAVEHDRX                                                         
*                                                                               
SAVEHDR1 TM    RECFLAG,FILE1       TEST IF FILE1 HDR REC                        
         BZ    SAVEHDR2                                                         
         CLC   SVD1HDR(3),LDHUSER-LDHREC(RF)                                    
         BNL   *+10                                                             
         MVC   SVD1HDR,LDHUSER-LDHREC(RF)  SAVE LATEST USER DATA                
         MVC   SVD1ACT,LDHACTDT-LDHREC(RF) SAVE DATE LOADED ACTV                
         B     SAVEHDRX                                                         
*                                                                               
SAVEHDR2 TM    RECFLAG,FILE2       TEST IF FILE2 HDR REC                        
         BZ    SAVEHDR3                                                         
         CLC   SVD2HDR(3),LDHUSER-LDHREC(RF)                                    
         BNL   *+10                                                             
         MVC   SVD2HDR,LDHUSER-LDHREC(RF)    SAVE LATEST USER DATA              
         MVC   SVD2ACT,LDHACTDT-LDHREC(RF)   SAVE DATE LOADED ACTV              
         B     SAVEHDRX                                                         
*                                                                               
SAVEHDR3 TM    RECFLAG,FILE3       TEST IF FILE3 HDR REC                        
         BZ    SAVEHDR4                                                         
         CLC   SVD3HDR(3),LDHUSER-LDHREC(RF)                                    
         BNL   *+10                                                             
         MVC   SVD3HDR,LDHUSER-LDHREC(RF)    SAVE LATEST USER DATA              
         MVC   SVD3ACT,LDHACTDT-LDHREC(RF)   SAVE DATE LOADED ACTV              
         B     SAVEHDRX                                                         
*                                                                               
SAVEHDR4 TM    RECFLAG,FILE4       TEST IF FILE4 HDR REC                        
         BZ    SAVEHDRX                                                         
         CLC   SVD4HDR(3),LDHUSER-LDHREC(RF)                                    
         BNL   *+10                                                             
         MVC   SVD4HDR,LDHUSER-LDHREC(RF)    SAVE LATEST USER DATA              
         MVC   SVD4ACT,LDHACTDT-LDHREC(RF)   SAVE DATE LOADED ACTV              
*                                                                               
SAVEHDRX XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* IF CTFILE CONCRETE HEADER CONVERT TO STANDARD DMLDMOD DA HEADER     *         
* TEST IF FIRST HEADER RECORD IS EXTENDED                             *         
* SAVE DATE/TIME DATA IN EXTENDED HEADER AND REMOVE EXTENSION         *         
***********************************************************************         
DALXHDR  NTR1  BASE=*,LABEL=*                                                   
         L     RE,ADAREC           RE=A(HEADER RECORD)                          
         USING LDHDRD,RE                                                        
*                                                                               
DALX1    CLI   LDFINOS+0,X'A1'     TEST CTFILE                                  
         BNE   DALX3                                                            
         LA    RE,ISREC                                                         
         L     RF,=A(CTFILEH)                                                   
         CLC   0(25,RE),0(RF)      TEST VALID CTFILE HEADER RECORD              
         BNE   DALXX                                                            
         CLC   25(2,RE),25(RF)     TEST CTFILE STANDARD HEADER                  
         BE    DALX2                                                            
         L     RF,=A(CONCRTH)                                                   
         CLC   25(2,RE),25(RF)     TEST OLD STYLE CONCRETE HEADER               
         BNE   DALX3                                                            
*                                                                               
DALX2    L     RF,=A(CTFILEH)      CREATE CTFILE HDR FOR LOAD TO DISK           
         MVC   ISREC(CTFIHTL+1),0(RF)                                           
         MVC   LDHFILE,ISNAMF      MOVE IN FILE NAME                            
         MVC   LDHMODE,MODE        SET LOAD MODE VALUE IN HDR                   
         MVC   LDHDATE,DATEVAL     SET DATE IN HDR                              
         MVC   LDHTIME,NOWTIME     SET TIME IN HDR                              
         MVC   LDHACTDT,NOWACTI+2  SET ACTIVITY DATE/TIME IN HDR                
         LHI   R0,CTFIHTL+4                                                     
         STH   R0,ISRECH           ADJUST TAPE RECORD LENGTH                    
         B     DALXX                                                            
*                                                                               
DALX3    LR    R1,RE               TEST IF EXTENDED HEADER RECORD               
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        GET REC LEN FROM HEADER RECORD               
         CLC   DUB(2),=AL2(LDHXRECL)                                            
         BNE   DALXX                                                            
*                                                                               
DALX4    CLI   LDHXELID,2          CHECK EXTENSION ELEMENT VALID                
         BNE   DALXX                                                            
         CLI   LDHXELLN,L'LDHXEL                                                
         BNE   DALXX                                                            
         MVC   TAPEAGE,LDHXDATE    EXTRACT DATE/TIME TAPE CREATED               
         LH    RF,DUB              SAVE ACTIVITY DATA AT END OF REC             
         AR    RF,RE                                                            
         MVC   DUB1,0(RF)                                                       
         MVC   DUB(2),=AL2(LDHRECL)                                             
         MVC   0(2,R1),DUB         SET REC LEN FOR NORMAL HEADER                
         LH    RF,DUB                                                           
         AR    RF,RE                                                            
         MVC   0(8,RF),DUB1        RESTORE ACTIVITY DATA AT END OF REC          
         LR    RF,RE                                                            
         AHI   RF,-4                                                            
         LH    R0,0(RF)                                                         
         AHI   R0,-(LDHXTRAL)                                                   
         STH   R0,0(RF)            ADJUST TAPE RECORD LENGTH                    
*                                                                               
DALX5    MVC   P(8),=C'HEADER  '   PRINT TAPE CREATED ACTION MESSAGE            
         MVC   P+8(8),=C'TAPEIN  '                                              
         MVC   P+17(32),=C'CREATE TIME DD/MM/YY AT HH:MM:SS'                    
         MVC   P+29(08),TAPEDATE                                                
         MVC   P+41(02),TAPETIME                                                
         MVC   P+44(02),TAPETIME+2                                              
         MVC   P+47(02),TAPETIME+4                                              
         MVC   P+50(29),=C'TIME NOW DD/MM/YY AT HH:MM:SS'                       
         MVC   P+59(08),NOWDVAL                                                 
         MVC   P+71(02),NOWTIME                                                 
         MVC   P+74(02),NOWTIME+2                                               
         MVC   P+77(02),NOWTIME+4                                               
         GOTO1 =V(PRINTER)                                                      
*                                                                               
DALX6    CLI   LDFINOS+0,X'A1'     BUILD CTFILE HEADER FOR LOAD TO DISK         
         BNE   DALXX                                                            
         LA    RE,ISREC            SET DATE/TIME NOW IN CTFILE HEADER           
         BE    DALX2                                                            
*                                                                               
DALXX    XIT1                                                                   
*                                                                               
         LTORG                                                                  
         DROP  RE                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD EXTENDED TAPE FILE HEADER ON TAPEOUT                          *         
***********************************************************************         
BLDXHDR  NTR1  BASE=*,LABEL=*                                                   
         L     RE,ADAREC           RE=A(HEADER RECORD)                          
         USING LDHREC,RE                                                        
         CLI   LDFINOS+0,X'A1'     TEST CTFILE                                  
         BNE   *+8                                                              
         LA    RE,ISREC                                                         
         LR    R1,RE                                                            
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        GET REC LEN FROM RECORD                      
*                                                                               
BLDX1    OC    0(4,RE),0(RE)       TEST IF THIS IS A HEADER RECORD              
         BNZ   BLDXX                                                            
         CLC   DUB(2),=AL2(LDHRECL)                                             
         BE    BLDX3                                                            
         CLC   DUB(2),=AL2(LDHXRECL)                                            
         BNE   BLDXX                                                            
*                                                                               
BLDX2    TM    INPUT,TAPE          EXTENDED HEADER RECORD ON INPUT TAPE         
         BZ    BLDXX                                                            
         OI    LDHXFLG1,LDHXFTT    SET FLAG TO SHOW TAPE TO TAPE DATE           
         MVI   LDHXCCOD,C'C'       SET COPIED CODE AND ISO DATE                 
         MVC   LDHXCIDT,=C'20YY-MM-DD'                                          
         MVC   LDHXCIDT+2(2),NOWDVAL+6                                          
*&&UK*&& MVC   LDHXCIDT+5(2),NOWDVAL+3                                          
*&&UK*&& MVC   LDHXCIDT+8(2),NOWDVAL+0                                          
*&&US*&& MVC   LDHXCIDT+5(2),NOWDVAL+0                                          
*&&US*&& MVC   LDHXCIDT+8(2),NOWDVAL+3                                          
         MVI   LDHXCITT,C'T'       SET TIME CODE AND ISO TIME COPIED            
         MVC   LDHXCITI,=C'HH:MM:DD'                                            
         MVC   LDHXCITI+0(2),NOWTIME+0                                          
         MVC   LDHXCITI+3(2),NOWTIME+2                                          
         MVC   LDHXCITI+6(2),NOWTIME+4                                          
         MVC   LDHXCIAC,NOWACTI+2                                               
         B     BLDXX                                                            
*                                                                               
BLDX3    TM    INPUT,TAPE          HEADER RECORD - TEST IF COPYING TAPE         
         BO    BLDXX                                                            
         MVC   LDHMODE,MODE        SET DUMP MODE VALUE IN HDR                   
         TM    OPNOTF,X'80'        TEST FIRST HEADER RECORD                     
         BZ    BLDXX                                                            
         NI    OPNOTF,X'7F'                                                     
         LH    RF,DUB              SAVE ACTIVITY DATA AT END OF REC             
         AR    RF,RE                                                            
         MVC   DUB1,0(RF)                                                       
*                                                                               
BLDX4    MVC   DUB(2),=AL2(LDHXRECL)                                            
         MVC   0(2,R1),DUB         SET NEW EXTENDED LENGTH                      
         XC    LDHXELID(128),LDHXELID                                           
         MVI   LDHXELID,2          BUILD DUMP DATE/TIME EXTENSION EL            
         MVI   LDHXELLN,L'LDHXEL                                                
         MVC   LDHXDATE,NOWDVAL    DUMPED DATE/TIME                             
         MVC   LDHXTIME,NOWTIME                                                 
         MVC   LDHXACTI,NOWACTI+2                                               
*                                                                               
BLDX5    MVI   LDHXLCOD,C'L'       SET LOADED CODE AND ISO DATE                 
         MVC   LDHXLIDT,=C'20YY-MM-DD'                                          
         MVC   LDHXLIDT+2(2),LDHDATE+6                                          
*&&UK*&& MVC   LDHXLIDT+5(2),LDHDATE+3                                          
*&&UK*&& MVC   LDHXLIDT+8(2),LDHDATE+0                                          
*&&US*&& MVC   LDHXLIDT+5(2),LDHDATE+0                                          
*&&US*&& MVC   LDHXLIDT+8(2),LDHDATE+3                                          
         MVI   LDHXLITT,C'T'       SET TIME CODE AND ISO TIME LOADED            
         MVC   LDHXLITI,=C'HH:MM:DD'                                            
         MVC   LDHXLITI+0(2),LDHTIME+0                                          
         MVC   LDHXLITI+3(2),LDHTIME+2                                          
         MVC   LDHXLITI+6(2),LDHTIME+4                                          
         MVC   LDHXLIAC,LDHACTDT                                                
*                                                                               
BLDX6    MVI   LDHXDCOD,C'D'       SET DUMPED CODE AND ISO DATE                 
         MVC   LDHXDIDT,=C'20YY-MM-DD'                                          
         MVC   LDHXDIDT+2(2),NOWDVAL+6                                          
*&&UK*&& MVC   LDHXDIDT+5(2),NOWDVAL+3                                          
*&&UK*&& MVC   LDHXDIDT+8(2),NOWDVAL+0                                          
*&&US*&& MVC   LDHXDIDT+5(2),NOWDVAL+0                                          
*&&US*&& MVC   LDHXDIDT+8(2),NOWDVAL+3                                          
         MVI   LDHXDITT,C'T'       SET TIME CODE AND ISO TIME DUMPED            
         MVC   LDHXDITI,=C'HH:MM:DD'                                            
         MVC   LDHXDITI+0(2),NOWTIME+0                                          
         MVC   LDHXDITI+3(2),NOWTIME+2                                          
         MVC   LDHXDITI+6(2),NOWTIME+4                                          
         MVC   LDHXDIAC,NOWACTI+2                                               
*                                                                               
BLDX7    MVC   LDHXTCOD(24),LDHXDCOD    SET COPYTIME=DUMPED DATE/TIME           
         OC    CPYDBIN,CPYDBIN     TEST IF COPYTIME=DATE-TIME INPUT             
         BZ    BLDX9                                                            
         OI    LDHXFLG1,LDHXFCT    SET FLAG TO SHOW COPYTIME DATE/TIME          
*                                                                               
BLDX8    MVI   LDHXTCOD,C'T'       SET COPYTIME CODE AND ISO DATE               
         MVC   LDHXTIDT,=C'20YY-MM-DD'                                          
         MVC   LDHXTIDT+2(2),CPYDVAL+6                                          
*&&UK*&& MVC   LDHXTIDT+5(2),CPYDVAL+3                                          
*&&UK*&& MVC   LDHXTIDT+8(2),CPYDVAL+0                                          
*&&US*&& MVC   LDHXTIDT+5(2),CPYDVAL+0                                          
*&&US*&& MVC   LDHXTIDT+8(2),CPYDVAL+3                                          
         MVI   LDHXTITT,C'T'       SET TIME CODE AND ISO COPYTIME               
         MVC   LDHXTITI,=C'HH:MM:DD'                                            
         MVC   LDHXTITI+0(2),CPYTVAL+0                                          
         MVC   LDHXTITI+3(2),CPYTVAL+3                                          
         MVC   LDHXTITI+6(2),CPYTVAL+6                                          
         MVC   LDHXTIAC,CPYTACTI+2                                              
*                                                                               
BLDX9    LH    RF,DUB              RESTORE ACTIVITY DATA AT END OF REC          
         AR    RF,RE                                                            
         MVC   0(8,RF),DUB1                                                     
*                                                                               
BLDXX    XIT1                                                                   
*                                                                               
         LTORG                                                                  
         DROP  RE                                                               
         EJECT                                                                  
***********************************************************************         
* TEST IF DA FILE NAME ON TAPEIN LOAD TAPE MATCHES THE DISK NAME      *         
***********************************************************************         
DALNCHK  NTR1  BASE=*,LABEL=*                                                   
         MVC   NCAHDR,ADAREC       DA FILE HEADER                               
         MVC   NCNAMF,DANAMF                                                    
         CLI   LDFINOS+0,X'A1'                                                  
         BNE   *+16                                                             
         MVC   NCAHDR,AISREC       CTFILE HEADER                                
         MVC   NCNAMF,ISNAMF                                                    
         CLI   OPNINF,1            TEST IF FIRST INPUT TAPE                     
         BNE   DALNC2                                                           
*                                                                               
DALNC1   CLC   TAPEFILE,NCNAMF     FIRST TAPE NAME MUST MATCH DISK              
         BE    DALNCX                                                           
         CLC   TAPEFILE(3),NCNAMF                                               
         BNE   DALNC1A                                                          
         CLC   TAPEFILE+6(2),NCNAMF+6                                           
         BNE   DALNC1A                                                          
         TM    SVDMULTI,LDDQDA2+LDDQDA4                                         
         BNZ   DALNCX              IGNORE IF MULTI DA FILES                     
DALNC1A  L     RF,=A(WARNMSG1)                                                  
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(8),TAPEFILE                                           
         MVC   OPERMSG+40(8),NCNAMF                                             
         TM    WNAME,WRNABEND      TEST TO ABEND                                
         BO    DALNCA                                                           
         TM    WNAME,WRNIGN        TEST TO IGNORE                               
         BZ    DALNC1B                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALNCW                                                           
DALNC1B  BAS   R9,PAGMSG                                                        
         BL    DALNCA              ERROR IF REPLY EOJ/CANCEL                    
         BE    DALNCW              TEST OK TO REPLY ERASE/IGNORE                
         CLI   OPERREP,C' '                                                     
         BE    DALNC1              BACK AND ASK AGAIN IF INVALID REPLY          
         B     DALNCA                                                           
*                                                                               
DALNC2   CLC   TAPEFILE,SPACES     TEST IF FILE ID ON FIRST TAPE                
         BE    DALNCX                                                           
         L     RE,NCAHDR                                                        
         CLC   TAPEFILE,LDHFILE-LDHREC(RE) TEST IF SAME AS FIRST TAPE           
         BE    DALNCX                                                           
*                                                                               
DALNC3   L     RF,=A(WARNMSG2)     WARN 'TAPE NAME NOT SAME AS TAPE'            
         L     RE,NCAHDR                                                        
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(8),LDHFILE-LDHREC(RE)                                 
         MVC   OPERMSG+40(8),TAPEFILE                                           
         TM    WNAME,WRNABEND      TEST TO ABEND                                
         BO    DALNCA                                                           
         TM    WNAME,WRNIGN        TEST TO IGNORE                               
         BZ    DALNC3A                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALNCW                                                           
DALNC3A  BAS   R9,PAGMSG                                                        
         BL    DALNCA              ERROR IF REPLY EOJ/CANCEL                    
         BE    DALNCW              TEST OK TO REPLY ERASE/IGNORE                
         CLI   OPERREP,C' '                                                     
         BE    DALNC3              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
DALNCA   L     RF,=A(ERR18)        SET ERROR MSG FROM WARNING MSG               
         MVC   0(48,RF),OPERMSG+12                                              
         LHI   R1,-18                                                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
DALNCE   CR    RB,RC               EXIT WITH CC NEQ IF CANCEL/EOJ               
         B     DALNCXX                                                          
DALNCW   MVC   LDCOND,=AL2(WARNCC) SET WARNING ISSUED COND CODE                 
DALNCX   CR    RB,RB               EXIT WITH CC EQL IF OK                       
DALNCXX  XIT1                                                                   
*                                                                               
NCAHDR   DC    A(0)                                                             
NCNAMF   DC    CL8' '                                                           
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* TEST IF DA FILE LOAD MODE COMPATIBLE WITH DUMP TAPE MODE            *         
* HALF+0 IS LOAD MODE VALUE AND HALF+1 IS DUMP MODE (ON LOAD TAPE)    *         
***********************************************************************         
DALMCHK  NTR1  BASE=*,LABEL=*                                                   
         MVC   MCAHDR,ADAREC       DA FILE HEADER                               
         CLI   LDFINOS+0,X'A1'                                                  
         BNE   *+10                                                             
         MVC   MCAHDR,AISREC       CTFILE HEADER                                
         CHI   R0,C'E'             TEST CALL TYPE                               
         BL    DALMC8              MODE=COPYD AND DA RECS FOUND                 
         BH    DALMC0                                                           
         MVC   HALF+0(1),MODE      MODE=COPY? AND NO DA RECS FOUND              
         MVI   HALF+1,COPY+ISFIL                                                
         B     DALMC9                                                           
*                                                                               
DALMC0   MVC   HALF+0(1),MODE      EXTRACT LOAD AND DUMP MODES                  
         L     RF,MCAHDR                                                        
         MVC   HALF+1(1),LDHMODE-LDHREC(RF)                                     
         CLI   HALF+1,X'FF'        EXIT IF DUMP MODE NOT IN HEADER              
         BE    DALMCX                                                           
         TM    SVDMULTI,LDDQDA2+LDDQDA4                                         
         BNZ   DALMC2                                                           
*                                                                               
DALMC1   NI    HALF+0,255-FILE1234 TURN OFF MULTI FILE BITS                     
         NI    HALF+1,255-FILE1234                                              
         CLC   HALF+0(1),HALF+1    OK IF MODES ARE IDENTICAL                    
         BE    DALMCX                                                           
         TM    MODE,ISFIL          TEST IF LOADING WITH MODE=COPYF              
         BO    DALMC9                                                           
         NI    HALF+1,255-ISFIL    TURN OFF DIR FLAG ON DUMP MODE               
         CLC   HALF+0(1),HALF+1    TEST IF DA MODES ARE IDENTICAL               
         BNE   DALMC9                                                           
         TM    DIR,YES             VALID IF DIR=YES                             
         BO    DALMCX                                                           
         L     RF,MCAHDR                                                        
         MVC   HALF+1(1),LDHMODE-LDHREC(RF)                                     
         B     DALMC9              MODE MISMATCH                                
*                                                                               
DALMC2   CLC   HALF+0(1),HALF+1    OK IF MODES ARE IDENTICAL                    
         BE    DALMCX                                                           
         TM    MODE,ISFIL          TEST IF LOADING WITH MODE=COPYF              
         BO    DALMC9                                                           
         NI    HALF+1,255-ISFIL    TURN OFF DIR FLAG ON DUMP MODE               
         CLC   HALF+0(1),HALF+1    TEST IF DA MODES ARE IDENTICAL               
         BNE   DALMC9                                                           
         TM    DIR,YES             VALID IF DIR=YES                             
         BO    DALMCX                                                           
         L     RF,MCAHDR                                                        
         MVC   HALF+1(1),LDHMODE-LDHREC(RF)                                     
         B     DALMC9              MODE MISMATCH                                
*                                                                               
DALMC3   TM    HALF+0,DAFIL        BOTH MUST HAVE DA FILE RECORDS               
         BZ    *+12                                                             
         TM    HALF+1,DAFIL                                                     
         BZ    DALMC9                                                           
         TM    HALF+0,ISFIL        BOTH MUST HAVE IS FILE RECORDS               
         BZ    *+12                                                             
         TM    HALF+1,ISFIL                                                     
         BZ    DALMC9                                                           
*                                                                               
DALMC4   TM    HALF+0,FILE1        BOTH MUST HAVE MODE=COPY1 OR COPYA           
         BZ    DALMC5                                                           
         TM    HALF+1,FILE1                                                     
         BZ    DALMC9                                                           
*                                                                               
DALMC5   TM    HALF+0,FILE2        BOTH MUST HAVE MODE=COPY2 OR COPYB           
         BZ    DALMC6                                                           
         TM    HALF+1,FILE2                                                     
         BZ    DALMC9                                                           
*                                                                               
DALMC6   TM    HALF+0,FILE3        BOTH MUST HAVE MODE=COPY3                    
         BZ    DALMC7                                                           
         TM    HALF+1,FILE3                                                     
         BZ    DALMC9                                                           
*                                                                               
DALMC7   TM    HALF+0,FILE4        BOTH MUST HAVE MODE=COPY4                    
         BZ    DALMCX                                                           
         TM    HALF+1,FILE4                                                     
         BZ    DALMC9                                                           
         B     DALMCX                                                           
*                                                                               
DALMC8   L     RF,=A(WARNMSG3)     MODE=COPYD AND DA RECS FOUND                 
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(5),=C'COPYD'                                          
         MVC   OPERMSG+43(7),=C'COPY?  '                                        
         B     DALMCA              ABEND IS ONLY OPTION             '           
*                                                                               
DALMC9   L     RF,=A(WARNMSG3)     WARN 'LOAD MODE NOT COMPATL DUMP'            
         MVC   OPERMSG,0(RF)                                                    
         LA    RE,HALF             GET LOAD MODE TEXT                           
         LA    R1,OPERMSG+17                                                    
         BAS   R9,DALMCD                                                        
         LA    RE,HALF+1           GET DUMP MODE TEXT                           
         LA    R1,OPERMSG+43                                                    
         BAS   R9,DALMCD                                                        
         CHI   R0,C'E'             ABEND IF ERROR ALREADY FOUND                 
         BE    DALMCA                                                           
         TM    WMODE,WRNABEND      TEST TO ABEND                                
         BO    DALMCA                                                           
         TM    WMODE,WRNIGN        TEST TO IGNORE WARNING                       
         BZ    DALMC9A                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALMCW                                                           
DALMC9A  BAS   R9,PAGMSG                                                        
         BL    DALMCA              ERROR IF REPLY EOJ/CANCEL                    
         BE    DALMCW              TEST OK TO REPLY ERASE/IGNORE                
         CLI   OPERREP,C' '                                                     
         BE    DALMC9              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
DALMCA   L     RF,=A(ERR19)        SET ERROR MSG FROM WARNING MSG               
         MVC   0(48,RF),OPERMSG+12                                              
         LHI   R1,-19                                                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
         B     DALMCE                                                           
*                                                                               
DALMCD   L     RF,=A(MODEL)        FIND MODE=TEXT                               
DALMCD1  CLI   0(RF),X'FF'                                                      
         BER   R9                                                               
         CLC   0(1,RF),0(RE)       MATCH ON MODE BITS                           
         BE    *+12                                                             
         LA    RF,11(RF)                                                        
         B     DALMCD1                                                          
         MVC   0(8,R1),1(RF)                                                    
         TM    SVDMULTI,LDDQDA4    TEST IF 4 DA FILES IN SET                    
         BZR   R9                                                               
         LA    RF,11(RF)           YES FIND ALTERNATIVE TEXT                    
         B     DALMCD1                                                          
*                                                                               
DALMCE   CR    RB,RC               EXIT WITH CC NEQ IF CANCEL/EOJ               
         B     DALMCXX                                                          
DALMCW   MVC   LDCOND,=AL2(WARNCC) SET WARNING ISSUED COND CODE                 
DALMCX   CR    RB,RB               EXIT WITH CC EQL IF OK                       
DALMCXX  XIT1                                                                   
*                                                                               
MCAHDR   DC    A(0)                                                             
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* TEST IF DATE/TIME ON TAPEIN LOAD TAPE IS ACCEPTABLE                 *         
***********************************************************************         
DALACHK  NTR1  BASE=*,LABEL=*                                                   
         CLC   TAPEDATE,SPACES     EXIT IF NO DATE/TIME ON TAPEIN               
         BE    DALACX                                                           
         SR    RE,RE               COMPUTE AGE OF DUMP TAPE                     
         ICM   RF,15,NOWACTI+2                                                  
         ICM   R0,15,TAPEACTI                                                   
         SR    RF,R0               RF=AGE IN SECONDS                            
         D     RE,=F'3600'                                                      
         CH    RF,AGEHRS           RF=AGE IN HOURS                              
         BNH   DALACX                                                           
*                                                                               
DALAC1   L     RF,=A(WARNMSG4)     WARN 'OLD TAPEIN'                            
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(8),TAPEDATE                                           
         MVC   OPERMSG+31(6),TAPETIME                                           
         TM    WAGE,WRNABEND       TEST TO ABEND                                
         BO    DALACA                                                           
         TM    WAGE,WRNIGN         TEST TO PRINT AND IGNORE WARNING             
         BZ    DALAC1A                                                          
         BAS   R9,PUTMSGPO         JUST PRINT WARNING                           
         B     DALACW                                                           
DALAC1A  BAS   R9,PAGMSG                                                        
         BL    DALACA              ERROR IF REPLY EOJ/CANCEL                    
         BE    DALACW              TEST OK TO REPLY ERASE/IGNORE                
         CLI   OPERREP,C' '                                                     
         BE    DALAC1              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
DALACA   L     RF,=A(ERR20)        SET ABEND ERROR MSG FROM WARNING MSG         
         MVC   0(48,RF),OPERMSG+12                                              
         LHI   R1,-20                                                           
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
DALACE   CR    RB,RC               EXIT WITH CC NEQ IF CANCEL/EOJ               
         B     DALACXX                                                          
DALACW   MVC   LDCOND,=AL2(WARNCC) SET WARNING ISSUED COND CODE                 
DALACX   CR    RB,RB               EXIT WITH CC EQL IF OK                       
DALACXX  XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* SET KEY AND RECORD LENGTHS IN SORT CARDS                            *         
***********************************************************************         
SETSORT  NTR1  BASE=*,LABEL=*                                                   
         LA    R3,SORTC1                                                        
         LH    R0,ISRECL           INCLUDE DISK ADDRESS IN SORT KEY             
         BAS   RE,CVD                                                           
         MVC   16(2,R3),DUB+6                                                   
         LA    R4,SORTC2           SET REC LEN IN RECORD CARD                   
         LH    R0,ISRECL                                                        
         BAS   RE,CVD                                                           
         MVC   21(2,R4),DUB+6                                                   
*                                                                               
         MVC   SORTC1+24(18),SPACES                                             
         LT    R0,SRTFILSB         TEST IF SORT FILE SIZE INPUT                 
         JZ    SETSORT1                                                         
         MVC   SORTC1+24(08),=C',FILSZ=E'                                       
         MVC   SORTC1+32(10),SRTFILSA                                           
*                                                                               
SETSORT1 LA    R1,SORTPL           SET SORTER PARAM LIST                        
         STM   R3,R4,0(R1)                                                      
         XC    8(4,R1),8(R1)                                                    
         OI    4(R1),X'80'         SET PASSING PARM IN P3                       
         OI    8(R1),X'40'         SET RETURN ABEND IN P3+3                     
         TM    DFSMSG,YES                                                       
         JZ    *+8                                                              
         OI    8(R1),X'80'         SET WANT DFSMSG SYSOUT DATA                  
*                                                                               
SETSORT2 GOTO1 =V(SORTER),(R1)                                                  
         XR    R0,R0                                                            
         ICM   R0,1,11(R1)         TEST IF ABEND ON SORT INIT                   
         JZ    SETSORTX                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         L     RF,=A(ERR37)        MOVE SORTER ABEND TO MESSAGE                 
         UNPK  13(4,RF),DUB                                                     
         MVC   18(3,RF),=C'INI'                                                 
         LHI   R1,-37              SORTER ABEND                                 
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
SETSORTX XIT1                                                                   
*                                                                               
SORTC1   DC    CL80'SORT FIELDS=(01,NN,BI,A)'                                   
SORTC2   DC    CL80'RECORD TYPE=F,LENGTH=NN'                                    
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* READ/PRINT/VALIDATE A SET OF PARAMETER CARDS                        *         
***********************************************************************         
VALPARM  NTR1  BASE=*,LABEL=*                                                   
         LA    R1,MODE+4           CLEAR ERRNUM AND SET A(PARMTBL NTRY)         
         ST    R1,ERRNUM                                                        
         CLI   FRSTTIME,C'Y'       READ FIRST CARD                              
         BNE   VPARM1A                                                          
         MVI   FRSTTIME,C'N'                                                    
*                                                                               
VPARM1   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         MVC   P(80),C                                                          
         CLI   C,C'*'              IGNORE AND PRINT COMMENT CARDS               
         BE    VPARM1P                                                          
*                                                                               
VPARM1A  EQU   *                   CODE FOR SPECIAL CARDS HERE                  
*                                                                               
VPARM1C  B     VPARM2              NOT A SPECIAL CARD                           
*                                                                               
VPARM1P  GOTO1 =V(PRINTER)                                                      
         B     VPARM1                                                           
*                                                                               
VPARM2   CLC   C(2),MODE+4         FIRST CARD OF SET MUST BE MODE CARD          
         BE    *+12                                                             
         MVI   ERRNUM,1                                                         
         B     VPARMX                                                           
         LA    R1,PARMTBL          INITIALIZE VALUES                            
         CLI   0(R1),X'FF'                                                      
         BE    VPARM4                                                           
         MVI   0(R1),0                                                          
         LA    R1,L'PARMTBL(R1)                                                 
         B     *-16                                                             
VPARM4   L     RE,=A(STRKEY)                                                    
         XC    0(ISMAX,RE),0(RE)                                                
         L     RE,=A(ENDKEY)                                                    
         XC    0(ISMAX,RE),0(RE)                                                
         MVC   MAX_RECS,=X'7FFFFFFF'                                            
         MVC   MAX_DUPK,=F'050'                                                 
         MVC   MAX_SEQE,=F'001'                                                 
         MVC   MAX_BADA,=F'001'                                                 
         MVC   MAX_KEYN,=F'050'                                                 
         MVC   MAX_BADR,=F'050'                                                 
         MVC   MAX_TERR,=X'7FFFFFFF'                                            
         MVC   MAX_PERR,=F'2000'                                                
         MVC   AGEHRS,=H'5'                                                     
         XC    SRTFILSB,SRTFILSB                                                
         MVC   SRTFILSA,SPACES                                                  
         XC    DABLKSZ,DABLKSZ                                                  
         XC    ISBLKSZ,ISBLKSZ                                                  
         XC    DAKEYLN,DAKEYLN                                                  
         MVI   GLOBALW,0                                                        
         L     RE,=A(PARMCARD)                                                  
         MVC   0(L'PARMCARD,RE),SPACES                                          
         L     RE,=A(EMAILID)                                                   
         MVC   0(L'EMAILID,RE),SPACES                                           
         L     RF,=A(EMAILDEF)                                                  
         CLI   0(RF),C' '                                                       
         BE    *+14                                                             
         MVC   0(72,RE),0(RF)                                                   
         OI    EMAIL,YES                                                        
*                                                                               
         L     RE,=A(DDNDSN)       SET ALL DDNAMES AND DSNS TO SPACES           
         MVI   0(RE),C' '                                                       
         MVC   1(255,RE),0(RE)                                                  
         MVC   257(DDNDSNX-DDNDSN-256,RE),256(RE)                               
*                                                                               
         MVC   DAFILEID,DAFILEIX                                                
         MVC   D2FILEID,D2FILEIX                                                
         MVC   D3FILEID,D3FILEIX                                                
         MVC   D4FILEID,D4FILEIX                                                
         MVC   ISFILEID,ISFILEIX                                                
         MVC   PHFILEID,SPACES                                                  
         MVC   XTRNNAME,SPACES                                                  
         MVC   OPERREP,SPACES                                                   
         MVC   UPSIVAL,UPSIINP                                                  
         B     VPARM8                                                           
*                                                                               
VPARM6   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLI   C,C'*'              IGNORE AND PRINT COMMENT CARDS               
         BNE   *+14                                                             
         MVC   P(80),C                                                          
         B     VPARMP                                                           
         CLC   C(2),=C'/*'                                                      
         BNE   *+12                                                             
         MVI   FRSTTIME,C'X'       END OF FILE                                  
         B     VPARMR                                                           
         CLC   C(2),MODE+4                                                      
         BE    VPARMR                                                           
*                                                                               
VPARM8   MVI   FLAG1,0             BUILD SINGLE EXTENDED SCANNER BLOCK          
         MVC   P(80),C                                                          
         MVC   C+72(8),SPACES                                                   
         L     R2,ADAREC                                                        
         XC    0(12,R2),0(R2)                                                   
         MVC   12(90,R2),SPACES                                                 
         LA    RE,C                FIND FIRST PARAM                             
         LA    RF,9                                                             
         CLI   0(RE),C'='                                                       
         BE    VPARM8B                                                          
         LA    RE,1(RE)                                                         
         BCT   RF,*-12                                                          
VPARM8A  MVI   ERRNUM,2                                                         
         B     VPARMX                                                           
VPARM8B  LR    RF,RE                                                            
         LA    R1,C                                                             
         SR    RF,R1                                                            
         STC   RF,0(R2)                                                         
         AHI   RF,-1                                                            
         BNP   VPARM8A                                                          
         EX    RF,*+8              MOVE LEFT SIDE                               
         B     *+10                                                             
         MVC   12(0,R2),C                                                       
         LA    R1,69                                                            
         SR    R1,RF                                                            
         EX    R1,*+8              MOVE RIGHT SIZE                              
         B     *+10                                                             
         MVC   22(0,R2),1(RE)                                                   
         CLC   22(80,R2),SPACES                                                 
         BE    *+8                                                              
         MVI   1(R2),4                                                          
         LA    R0,1                                                             
         B     VPARMA                                                           
*                                                                               
VPARM9   MVI   FLAG1,1                                                          
         L     R2,ADAREC                                                        
         USING SCANBLKD,R2                                                      
         GOTO1 =V(SCANNER),DMCB,(C'C',C),(R2)                                   
         CLI   4(R1),0                                                          
         BNE   *+12                                                             
         MVI   ERRNUM,2            INVALID SYNTAX                               
         B     VPARMX                                                           
         SR    R0,R0                                                            
         IC    R0,4(R1)            R0=NUM OF PARMS ON CARD                      
*                                                                               
VPARMA   LA    R1,SC1STFLD         POINT TO KEYWORD NAME                        
         ST    R1,ERRNUM                                                        
         CLI   SC1STLEN,2          MUST BE 2 TO 8 CHRS LONG                     
         BNL   VPARMB1                                                          
VPARMB   MVI   ERRNUM,3                                                         
         B     VPARMX                                                           
*                                                                               
VPARMB1  CLI   SC1STLEN,8                                                       
         BH    VPARMB                                                           
         LA    R4,PARMTBL          SEARCH FOR KEYWORD IN TABLE                  
         SR    RF,RF                                                            
         IC    RF,SC1STLEN         MATCH ON 2 THRU N CHRS                       
         BCTR  RF,0                                                             
VPARMC   EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   SC1STFLD(0),4(R4)                                                
         BE    VPARMC1                                                          
         LA    R4,L'PARMTBL(R4)                                                 
         CLI   0(R4),X'FF'                                                      
         BE    VPARMB                                                           
         B     VPARMC                                                           
VPARMC1  TM    2(R4),X'03'         IS IT A SINGLE CARD OR KEYWRD=STRING         
         BNZ   VPARMC2             YES                                          
         CLI   FLAG1,0             NO RESCAN TO FETCH OTHERS                    
         BE    VPARM9                                                           
         B     VPARMD                                                           
VPARMC2  CLI   FLAG1,0             SINGLE MUST BE FIRST                         
         BNE   VPARMB                                                           
*                                                                               
VPARMD   TM    2(R4),X'02'         IF KEYWORD=STRING DEFAULT TO 70              
         BZ    *+8                                                              
         MVI   SC2NDLEN,70                                                      
         CLC   SC2NDLEN,3(R4)      KEYWORD VALUE MUST BE N THRU 10 CHRS         
         BNL   VPARME1                                                          
VPARME   MVI   ERRNUM,4                                                         
         B     VPARMX                                                           
*                                                                               
VPARME1  TM    2(R4),X'02'         IF KEYWORD=STRING DONT CHECK LENGTH          
         BO    *+12                                                             
         CLI   SC2NDLEN,10                                                      
         BH    VPARME                                                           
         SR    RE,RE                                                            
         IC    RE,SC2NDLEN         LEN OF 2ND PARM                              
         BCTR  RE,0                                                             
         L     RF,12(R4)                                                        
         TM    2(R4),X'40'         KEYWORD VALUE IN LIST                        
         BO    VPARMF              YES                                          
         TM    2(R4),X'20'         KEYWORD VALUE BY ROUTINE                     
         BO    VPARMG              YES                                          
         TM    2(R4),X'02'         LEAVE LEN ALONE IF KEYWORD=STRING            
         BO    *+8                                                              
         LA    RE,7                ELSE USE LEN=8                               
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),SC2NDFLD    KEYWORD VALUE BY VALUE                       
         MVI   0(R4),YES                                                        
         B     VPARMN                                                           
*                                                                               
VPARMF   CLI   0(RF),X'FF'         SEARCH VALUE LIST                            
         BE    VPARME                                                           
         EX    RE,*+8              MATCH ON N THRU 9 CHRS                       
         B     *+10                                                             
         CLC   1(0,RF),SC2NDFLD                                                 
         BE    *+12                                                             
         LA    RF,11(RF)                                                        
         B     VPARMF                                                           
         MVC   0(1,R4),0(RF)       SAVE VALUE IN PARMTBL                        
         B     VPARMN                                                           
*                                                                               
VPARMG   BASR  RE,RF               GO TO ROUTINE WITH R2=A(SCAN ENTRY)          
         CLI   ERRNUM,0                                                         
         BNE   VPARMX                                                           
*                                                                               
VPARMN   LA    R2,32(R2)           BUMP TO NEXT PARM ON THIS CARD               
         BCT   R0,VPARMA                                                        
*                                                                               
VPARMP   GOTO1 =V(PRINTER)         PRINT CARD                                   
         B     VPARM6              GO GET NEXT PARM CARD                        
*                                                                               
VPARMR   CLI   WARN,0              OK IF OLD WARN= WAS NOT INPUT                
         BE    VPARMX                                                           
         CLI   WDEL,0              TEST IF WDEL= WAS INPUT                      
         BNE   *+14                YES                                          
         MVC   WDEL(1),WARN        NO COPY WARN= INTO WDEL=                     
         B     VPARMX                                                           
         LA    R1,WARN+4           CANT HAVE BOTH OLD AND NEW PARMS             
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,3            INVALID PARAMETER WARN=                      
*                                                                               
VPARMX   XIT1                                                                   
         EJECT                                                                  
* PARAMETER VALIDATION ROUTINES                                                 
*                                                                               
VALD1F   MVC   DAFILEID,22(R2)     D1FILE IS SYNONYM FOR DAFILE                 
         MVI   DAFILE,YES                                                       
         BR    RE                                                               
                                                                                
VALDBF   MVC   D2FILEID,22(R2)     DBFILE IS SYNONYM FOR D2FILE                 
         MVI   D2FILE,YES                                                       
         BR    RE                                                               
                                                                                
VALP     L     RF,=A(PARMCARD)                                                  
         MVI   0(R4),YES                                                        
         MVC   0(80,RF),22(R2)                                                  
         BR    RE                                                               
                                                                                
VALBLKSZ ICM   R5,15,8(R2)         BLKSIZE= SHOULD BE NUMERIC                   
         BZ    BADBLKSZ                                                         
         C     R5,=F'32767'                                                     
         BH    BADBLKSZ                                                         
         L     R5,=A(TAPEOUT)                                                   
         MVC   62(2,R5),10(R2)     OVERRIDE DCB BLKSIZE                         
         L     R5,=A(TAPECPY)                                                   
         MVC   62(2,R5),10(R2)     OVERRIDE DCB BLKSIZE                         
         BR    RE                                                               
BADBLKSZ MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALDAKLN ICM   R5,15,8(R2)         DAKEYLEN= SHOULD BE NUMERIC                  
         BZ    BADDAKLN                                                         
         CHI   R5,64               MAX KEY LEN                                  
         BH    BADDAKLN                                                         
         STH   R5,DAKEYLN                                                       
         BR    RE                                                               
BADDAKLN MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALDABLK ICM   R5,15,8(R2)         DABLKSZ= SHOULD BE NUMERIC                   
         BZ    BADDABLK                                                         
         CHI   R5,27998            MAX FOR 3390 FOR 2 RECS/TRK                  
         BH    BADDABLK                                                         
         STH   R5,DABLKSZ                                                       
         BR    RE                                                               
BADDABLK MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALISBLK ICM   R5,15,8(R2)         ISBLKSZ= SHOULD BE NUMERIC                   
         BZ    BADISBLK                                                         
         CHI   R5,27998            MAX FOR 3390 FOR 2 RECS/TRK                  
         BH    BADISBLK                                                         
         STH   R5,ISBLKSZ                                                       
         BR    RE                                                               
BADISBLK MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALK     NTR1                                                                   
         SR    R5,R5                                                            
         IC    R5,0(R4)                                                         
         LA    RE,1(R5)                                                         
         STC   RE,0(R4)                                                         
         CLI   0(R4),MAXKEY                                                     
         BNH   *+12                                                             
         MVI   ERRNUM,3                                                         
         B     VALKX                                                            
         MH    R5,=Y(L'STRKEY+L'ENDKEY)                                         
         A     R5,=A(STRKEY)                                                    
         CLC   12(2,R2),=C'ST'                                                  
         BE    *+8                                                              
         LA    R5,L'STRKEY(R5)                                                  
         IC    R0,ISKEYL+1                                                      
         IC    RF,ISFILL                                                        
         GOTO1 =V(DECODE),DUB,((R0),22(R2)),((RF),(R5))                         
         CLI   4(R1),0                                                          
         BE    *+8                                                              
         MVI   ERRNUM,4                                                         
VALKX    XIT1                                                                   
                                                                                
VALMAX   TM    3(R2),X'80'         MAXIMUM RECORDS TO READ                      
         BZ    VALMAX2                                                          
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALMAX2                                                          
         ST    R5,MAX_RECS                                                      
         B     *+8                                                              
VALMAX2  MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALDUPK  TM    3(R2),X'80'         MAXIMUM DUPLICATE KEYS                       
         BZ    VALDUPK2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALDUPK2                                                         
         ST    R5,MAX_DUPK                                                      
         B     *+8                                                              
VALDUPK2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALSEQE  TM    3(R2),X'80'         MAXIMUM SEQUENCE ERRORS                      
         BZ    VALSEQE2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALSEQE2                                                         
         ST    R5,MAX_SEQE                                                      
         B     *+8                                                              
VALSEQE2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALBADA  TM    3(R2),X'80'         MAXIMUM DISK ADDRESSES                       
         BZ    VALBADA2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALBADA2                                                         
         ST    R5,MAX_BADA                                                      
         B     *+8                                                              
VALBADA2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALKEYN  TM    3(R2),X'80'         MAXIMUM KEY NOT EQUALS                       
         BZ    VALKEYN2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALKEYN2                                                         
         ST    R5,MAX_KEYN                                                      
         B     *+8                                                              
VALKEYN2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALBADR  TM    3(R2),X'80'         MAXIMUM BAD RECORDS                          
         BZ    VALBADR2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALBADR2                                                         
         ST    R5,MAX_BADR                                                      
         B     *+8                                                              
VALBADR2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALTERR  TM    3(R2),X'80'         MAXIMUM TOTAL ERRORS                         
         BZ    VALTERR2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALTERR2                                                         
         ST    R5,MAX_TERR                                                      
         B     *+8                                                              
VALTERR2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALPERR  TM    3(R2),X'80'         MAXIMUM PRINT ERRORS                         
         BZ    VALPERR2                                                         
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALPERR2                                                         
         ST    R5,MAX_PERR                                                      
         B     *+8                                                              
VALPERR2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALFLS   CLI   1(R2),3             FLASH=YES                                    
         BNE   *+18                                                             
         CLC   22(3,R2),=C'YES'                                                 
         BE    VALFLS3                                                          
         B     VALFLS4                                                          
         CLI   1(R2),2             FLASH=NO                                     
         BNE   *+18                                                             
         CLC   22(2,R2),=C'NO'                                                  
         BE    VALFLS2                                                          
         B     VALFLS4                                                          
VALFLS1  CLI   1(R2),1             FLASH=X                                      
         BNE   VALFLS4                                                          
         CLI   22(R2),C'A'         TEST IF VALID FLASH CHARACTER                
         BL    VALFLS4                                                          
         CLI   22(R2),C'N'         FLASH=N MEANS NO FLASH COPY                  
         BNE   VALFLS3                                                          
VALFLS2  MVI   0(R4),NO            CLEAR FLASH CHR IN SSB                       
         L     RF,=A(SSB)                                                       
         NI    SSOFLAG2-SSOOFF(RF),255-SSO2FLSH                                 
         MVI   SSOFLSHI-SSOOFF(RF),0                                            
         BR    RE                                                               
VALFLS3  MVI   0(R4),YES           SET FLASH CHR IN SSB                         
         L     RF,=A(SSB)                                                       
         OI    SSOFLAG2-SSOOFF(RF),SSO2FLSH                                     
         MVC   SSOFLSHI-SSOOFF(1,RF),22(R2)                                     
         CLI   22(R2),C'Y'         FLASH=Y IS DEFAULT SO SET TO FLASH=S         
         BNER  RE                  TO CAUSE DSN=FLS.XXX...                      
         MVI   SSOFLSHI-SSOOFF(RF),C'S'                                         
         BR    RE                                                               
VALFLS4  MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALAGE   TM    3(R2),X'80'         MAXIMUM AGE IN HOURS OF TAPEIN               
         BZ    VALAGE2                                                          
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALAGE2                                                          
         CH    R5,=AL2(24*7*12)                                                 
         BH    VALAGE2                                                          
         STH   R5,AGEHRS                                                        
         B     *+8                                                              
VALAGE2  MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALWORK  CLI   1(R2),1             SORT NUM OF WORK FILES (NOT USED)            
         BNE   VALWORK2                                                         
         CLI   22(R2),C'1'                                                      
         BL    VALWORK2                                                         
         CLI   22(R2),C'9'                                                      
         BH    VALWORK2                                                         
         MVC   0(1,R4),22(R2)      SET WORKF TO NUM OF WORK FILES               
         B     *+8                                                              
VALWORK2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALFSZ   TM    3(R2),X'80'         SORT ESTIMATED FILE SIZE                     
         BZ    VALFSZ2                                                          
         LT    R5,8(R2)                                                         
         BM    VALFSZ2             CAN'T BE MINUS                               
         BZR   RE                  IGNORE IF ZERO                               
         ST    R5,SRTFILSB         SAVE BINARY VALUE                            
         MVC   SRTFILSA,22(R2)     SAVE ALPHA VALUE - MAX=999999999             
         B     *+8                                                              
VALFSZ2  MVI   ERRNUM,4                                                         
         BR    RE                                                               
                                                                                
VALPEEL  NTR1                                                                   
         ICM   R5,15,8(R2)         PEEL=                                        
         BZ    VALPEEL2            NOT NUMERIC                                  
         LNR   R5,R5                                                            
         GOTO1 =V(DATCON),DMCB,(X'30',DATEYMD),(2,PEELDATE),(6,0),(R5)          
         B     *+8                                                              
VALPEEL2 MVI   ERRNUM,4                                                         
         XIT1                                                                   
                                                                                
VALGLOB  NTR1  ,                   GLOBAL=X/DATE                                
         CLI   22(R2),C'N'                                                      
         BE    VALGLO1                                                          
         CLC   22(2,R2),=C'NO'                                                  
         BE    VALGLO1                                                          
         CLI   22(R2),C'Y'                                                      
         BNE   VALGLO4                                                          
         OI    GLOBALW,YES                                                      
         CLI   1(R2),1                                                          
         BE    VALGLO3                                                          
         CLC   22(3,R2),=C'YES'    GLOBAL=Y IS ALWAYS VALID                     
         BNE   VALGLO1                                                          
         CLI   1(R2),3                                                          
         BE    VALGLO3                                                          
VALGLO1  LA    R5,22(R2)           GLOBAL=N REQUIRES A DATE FIELD               
         LA    R0,4                                                             
         CLI   0(R5),C'/'                                                       
         BE    *+16                                                             
         LA    R5,1(R5)                                                         
         BCT   R0,*-12                                                          
         B     VALGLO4                                                          
         LA    R5,1(R5)                                                         
         CLC   0(5,R5),=C'TODAY'   GLOBAL=N/TODAY IS VALID                      
         BE    VALGLO3                                                          
         ICM   RF,15,=V(DATVAL)                                                 
         BZ    VALGLO4                                                          
         GOTO1 (RF),DMCB,(0,(R5)),(0,DUB)                                       
         OC    0(4,R1),0(R1)                                                    
         BZ    VALGLO9                                                          
VALGLO2  CLC   DUB(6),DATEYMD      DATE MUST MATCH TODAYS DATE                  
         BNE   VALGLO9                                                          
VALGLO3  MVC   GLOBAL(1),22(R2)                                                 
         OI    GLOBALW,X'40'       SET VALID GLOBAL OVERRIDE INPUT              
         B     VALGLOX                                                          
VALGLO4  OI    GLOBALW,X'80'       SET INVALID GLOBAL OVERRIDE INPUT            
         B     *+8                                                              
VALGLO9  MVI   ERRNUM,4                                                         
VALGLOX  XIT1                                                                   
                                                                                
VALUPSI  NTR1                      UPSI IS A MAX OF 8 BINARY DIGITS             
         MVI   0(R4),YES                                                        
         MVI   UPSIVAL,0                                                        
         CLI   1(R2),8                                                          
         BH    VALUPSI3                                                         
         ZIC   R0,1(R2)            R0=NUM OF DIGITS                             
         SR    R1,R1               R1=REL DIGIT NUM                             
         LA    RE,22(R2)           RE=ADR DIGIT                                 
VALUPSI1 CLI   0(RE),C'0'                                                       
         BE    VALUPSI2                                                         
         CLI   0(RE),C'1'                                                       
         BNE   VALUPSI3                                                         
         IC    RF,VALUPSIT(R1)                                                  
         EX    RF,*+8                                                           
         B     *+8                                                              
         OI    UPSIVAL,X'00'                                                    
VALUPSI2 AHI   RE,1                                                             
         AHI   R1,1                                                             
         CR    R1,R0                                                            
         BL    VALUPSI1                                                         
         B     *+8                                                              
VALUPSI3 MVI   ERRNUM,4                                                         
         XIT1                                                                   
VALUPSIT DC    X'8040201008040201'                                              
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* PRINT COUNTER DESCRIPTIONS AND VALUES                               *         
***********************************************************************         
PRTCTRS  NTR1  BASE=*,LABEL=*                                                   
         GOTO1 =V(PRINTER)                                                      
         MVC   P(11),=C'I/O COUNTS '                                            
         MVC   P+11(5),LDSENA                                                   
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
         MVI   BYTE,0              SET AGY/CPY CODE TO ZERO                     
         LA    R2,LDCOUNTS         POINT TO COUNTERS TABLE                      
*                                                                               
PRTC1    CLI   0(R2),X'FF'         TEST END OF TABLE                            
         BE    PRTC6                                                            
         ICM   R0,15,0(R2)                                                      
         BZ    PRTC5               DONT PRINT ZERO COUNTERS                     
*                                                                               
PRTC2    MVC   P(16),12(R2)        BUILD COUNTER INFO IN P                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+16(10),DUB                                                     
         CLI   P+16,C'0'                                                        
         BNE   *+8                                                              
         MVI   P+16,C' '                                                        
         CP    4(8,R2),=P'0'       TEST IF ANY MONEY POSTED                     
         BE    PRTC3                                                            
         MVC   P+27(17),EDITMASK                                                
         EDMK  P+27(17),4(R2)                                                   
         BCTR  R1,0                                                             
         MVI   0(R1),C'$'                                                       
*                                                                               
PRTC3    NI    LDERRORF,255-X'04'  TEST/SET IF AN ERR/WARNING COUNTER           
         LA    R0,DUPKEY           TEST IF AN ERROR/WARNING COUNTER             
         CR    R2,R0                                                            
         BL    PRTC4                                                            
         MVC   OPERMSG,SPACES      BUILD CONSOLE WARNING MESSAGE                
         MVC   OPERMSG+12(26),P                                                 
         OI    LDERRORF,X'04'                                                   
         MVC   P+45(03),=C'<=='                                                 
         MVC   P+49(15),=C'CONSOLE OUTPUT:'                                     
         MVC   P+66(12),=C'**WARNING** '                                        
         GOTO1 =V(PRINTER)                                                      
PRTC3A   TM    LDERRORF,X'02'      TEST IF TOTAL ERRORS ENTRY                   
         BZ    PRTC3B                                                           
         L     RF,=A(ERR99)                                                     
         MVC   0(48,RF),OPERMSG+12                                              
         L     R0,0(R2)            R0=ERROR COUNTER                             
         LHI   R1,99               R1=ERROR NUMBER                              
         B     PRTC3C                                                           
PRTC3B   LR    R1,R2                                                            
         SR    R1,R0               R1 HAS DISPLACEMENT THIS-FIRST               
         SR    R0,R0                                                            
         LHI   RF,L'LDCOUNTS                                                    
         DR    R0,RF               R1 HAS RELATIVE ERROR NUMBER                 
         LR    RF,R1                                                            
         MHI   RF,L'ERR24                                                       
         A     RF,=A(ERR24)        RF=A(ERROR MESSAGE TABLE ENTRY)              
         MVC   0(48,RF),OPERMSG+12                                              
         L     R0,0(R2)            R0=ERROR COUNTER                             
         AHI   R1,24               R1=ERROR NUMBER                              
PRTC3C   OI    LDERRORF,X'01'      SET CALLED FROM PRINT COUNTERS               
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF               CONSOLE/EMAIL ERROR COUNTER                  
         B     PRTC5                                                            
*                                                                               
PRTC4    GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTC5    TM    LDERRORF,X'02'      TEST IF HERE TO PROCESS TOTAL ENTRY          
         BO    PRTC7                                                            
         LA    R2,L'LDCOUNTS(R2)   BUMP TO NEXT ENTRY                           
         B     PRTC1                                                            
*                                                                               
PRTC6    CLC   ERRTOT,MAX_TERR     TEST TOTAL ERRORS WITH MAXIMUM               
         BL    PRTC7                                                            
         TM    LDERRORF,X'80'      TEST IF ALREADY HAVE EMAILED ERRORS          
         BO    PRTC7                                                            
         OI    LDERRORF,X'02'      SET POINTING TO ERROR TOTAL ENTRY            
         LA    R2,ERRTOT                                                        
         ICM   R0,15,0(R2)                                                      
         B     PRTC2                                                            
*                                                                               
PRTC7    GOTOR =A(EMAILOUT),2      PRINT ANY EMAIL TEXTS OUTPUT                 
*                                                                               
PRTA     LLC   R4,BYTE             BUMP TO NEXT AGENCY                          
         AHI   R4,1                                                             
         STC   R4,BYTE             R4=A(AGY/CPY CODE)                           
         CHI   R4,255                                                           
         BE    PRTCX                                                            
         MVI   BYTE1,0             SET PRINT HEAD LINES FLAG                    
         MVI   LDERRORF,0                                                       
         LA    R2,LDCOUNTS         POINT TO COUNTERS TABLE                      
*                                                                               
PRTA1    CLI   0(R2),X'FF'         TEST END OF TABLE                            
         BE    PRTA                                                             
         ICM   R3,15,28(R2)        GET A(AGY/CPY COUNTERS)                      
         BZ    PRTA5                                                            
         LR    R0,R4               INDEX INTO XL4 ARRAY BY AGY/CPY              
         SLL   R0,2                                                             
         AR    R3,R0                                                            
         ICM   R0,15,0(R3)                                                      
         BZ    PRTA5               DONT PRINT ZERO COUNTERS                     
*                                                                               
         CLI   BYTE1,0             TEST IF PRINTED HEADING FOR AGY              
         BNE   PRTA2                                                            
         MVI   BYTE1,1                                                          
         GOTO1 =V(PRINTER)                                                      
         MVC   P(16),=CL16'I/O CNTS AGY XX '                                    
         CLC   LDSENA(3),=C'ACC'                                                
         BNE   *+10                                                             
         MVC   P+9(3),=C'CPY'                                                   
         GOTO1 =V(HEXO24),DMCB,BYTE,P+13,1                                      
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTA2    MVC   P(16),12(R2)        BUILD COUNTER INFO IN P                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+16(10),DUB                                                     
         CLI   P+16,C'0'                                                        
         BNE   *+8                                                              
         MVI   P+16,C' '                                                        
         ICM   R3,15,32(R2)        GET A(AGY/CPY MONEY)                         
         BZ    PRTA3                                                            
         LR    R0,R4               INDEX INTO PL8 ARRAY BY AGY/CPY              
         SLL   R0,3                                                             
         AR    R3,R0                                                            
         CP    0(8,R3),=P'0'       DONT PRINT ZERO MONEY                        
         BE    PRTA3                                                            
         MVC   P+27(17),EDITMASK                                                
         EDMK  P+27(17),0(R3)                                                   
         BCTR  R1,0                                                             
         MVI   0(R1),C'$'                                                       
*                                                                               
PRTA3    EQU   *                   TEST IF AN ERROR/WARNING COUNTER             
*                                                                               
PRTA4    GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTA5    LA    R2,L'LDCOUNTS(R2)                                                
         B     PRTA1                                                            
*                                                                               
PRTCX    XIT1                                                                   
                                                                                
EDITMASK DC    X'40202020202020202020202020214B2020'                            
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* OUTPUT SMF RECORD WITH DUMP/LOAD RECORD COUNTERS AND MONEY AMOUNTS  *         
***********************************************************************         
SMFDATA  NTR1  BASE=*,LABEL=*                                                   
         TM    SMF,YES             EXIT IF SMF DISABLED                         
         BZ    SMFDX                                                            
         ICM   RF,15,=V(SMFOUT)    EXIT IF SMF ROUTINE NOT LINKED IN            
         BZ    SMFDX                                                            
         TM    MODE,REPORT         EXIT IF MODE=REPORT                          
         BO    SMFDX                                                            
         LA    R3,SMFBAL           R3=A(SMF FILE BALANCING RECORD)              
         USING SMFBRECD,R3                                                      
         XC    SMFBLEN(SMFBCNTX-SMFBLEN),SMFBLEN                                
         LA    RF,SMFBCNTX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
*                                                                               
SMFD1    MVC   SMFBMODE,MODE       MODE                                         
         L     RF,=A(SSB)          DSPACE ID                                    
         MVC   SMFBDSPC,SSODSPAC-SSOOFF(RF)                                     
         CLI   SMFBDSPC,C' '                                                    
         BH    *+8                                                              
         MVI   SMFBDSPC,C'A'                                                    
         MVC   SMFBSENO,LDSENO     SE NUMBER                                    
         MVC   SMFBTXT,SPACES                                                   
         MVC   SMFBTXT1,SPACES                                                  
         MVC   SMFBTXT2,SPACES                                                  
         MVC   SMFBTXT1(5),LDSENA  SE NAME                                      
         MVC   SMFBFNOS+1(5),LDFINOS                                            
*                                                                               
SMFD2    TM    MODE,DAFIL          TEST IF NO DAFILE                            
         BZ    SMFD2A                                                           
         LA    R5,SMFCDDA          R5=A(DAFILE DUMP COUNTER LIST)               
         MVC   SMFBUSER,=C'FILE'                                                
         MVC   SMFBSRCE,=C'DUMP'                                                
         L     RE,=A(LDDANA)       DA FILE DD/DSN                               
         MVC   SMFBTXT,0(RE)       FILE NAME                                    
         LA    RF,SMFBTXT1+6                                                    
         MVI   0(RF),C'F'          SHOW FILE                                    
         TM    MODE,FILE1          SHOW FILE 1                                  
         BZ    *+12                                                             
         MVI   0(RF),C'1'                                                       
         LA    RF,1(RF)                                                         
         TM    MODE,FILE2          SHOW FILE 2                                  
         BZ    *+12                                                             
         MVI   0(RF),C'2'                                                       
         LA    RF,1(RF)                                                         
         TM    MODE,FILE3          SHOW FILE 3                                  
         BZ    *+12                                                             
         MVI   0(RF),C'3'                                                       
         LA    RF,1(RF)                                                         
         TM    MODE,FILE4          SHOW FILE 4                                  
         BZ    *+8                                                              
         MVI   0(RF),C'4'                                                       
         MVC   SMFBTXT2,8(RE)      FILE DSN                                     
         TM    OUTPUT,DISK                                                      
         BZ    *+14                                                             
         LA    R5,SMFCLDA          R5=A(DAFILE LOAD COUNTER LIST)               
         MVC   SMFBSRCE,=C'LOAD'                                                
         B     SMFD2B                                                           
SMFD2A   LA    R5,SMFCDIS          R5=A(ISFILE DUMP COUNTER LIST)               
         MVC   SMFBUSER,=C'DIR '                                                
         MVC   SMFBSRCE,=C'DUMP'                                                
         L     RE,=A(LDISNA)       IS FILE DD/DSN                               
         MVC   SMFBTXT,0(RE)       FILE NAME                                    
         MVI   SMFBTXT1+6,C'D'     SHOW DIRECTORY ONLY                          
         MVC   SMFBTXT2,8(RE)      FILE DSN                                     
         TM    OUTPUT,DISK                                                      
         BZ    *+14                                                             
         LA    R5,SMFCLIS          R5=A(ISFILE LOAD COUNTER LIST)               
         MVC   SMFBSRCE,=C'LOAD'                                                
SMFD2B   ST    R5,FULL             SAVE A(COUNTER LIST)                         
                                                                                
SMFCNT   MVI   BYTE,0              SET AGY/CPY CODE FOR COUNTERS RECORD         
         LA    RF,SMFBCNTX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
         MVI   SMFBTYPE,C'C'       SET COUNTERS RECORD                          
*                                                                               
SMFC1    LA    R4,SMFBCNT          R4=A(SMFREC COUNTERS)                        
         L     R5,FULL             R5=A(SMF COUNTERS LIST)                      
         MVI   BYTE1,0                                                          
         ZAP   SMFCTR,=P'1'        COUNTER NUMBER                               
*                                                                               
SMFC2    CP    SMFCTR,=P'7'        TEST ERROR COUNTER                           
         BNE   SMFC2A                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFC2E                                                           
         ICM   RF,15,0(R5)         GET A(ERROR COUNTER)                         
         BZ    SMFC2E                                                           
         MVC   SMFBWARN,0(RF)      SET IN SMF RECORD                            
         B     SMFC2E                                                           
*                                                                               
SMFC2A   CLI   0(R5),X'80'         TEST END OF LIST                             
         BE    SMFC3                                                            
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFC2B                                                           
         ICM   RF,15,0(R5)         GET A(COUNTER)                               
         BZ    *+8                                                              
         L     RF,0(RF)            GET COUNTER IF ADDRESS NON ZERO              
         CVD   RF,0(R4)                                                         
         B     SMFC2D                                                           
*                                                                               
SMFC2B   ICM   RF,15,0(R5)         GET A(COUNTER ARRAY FOR AGY/MED)             
         BZ    SMFC2D                                                           
         ICM   RF,15,28(RF)                                                     
         BZ    SMFC2D                                                           
         SR    R0,R0               INDEX INTO XL4 COUNTER ARRAY                 
         IC    R0,BYTE                                                          
         SLL   R0,2                                                             
         AR    RF,R0               POSITION TO COUNTER FOR AGY/MED              
         L     RF,0(RF)                                                         
*                                                                               
SMFC2D   CVD   RF,0(R4)            MOVE COUNTER TO SMF RECORD                   
         LTR   RF,RF               TEST IF COUNTER IS NON ZERO                  
         BZ    *+8                                                              
         MVI   BYTE1,1                                                          
SMFC2E   LA    R5,4(R5)            BUMP LIST POINTERS                           
         LA    R4,8(R4)                                                         
         AP    SMFCTR,=P'1'                                                     
         B     SMFC2                                                            
*                                                                               
SMFC3    CLI   BYTE1,0             TEST IF ALL COUNTERS ZERO                    
         BE    SMFC7                                                            
         MVC   SMFBAGY,BYTE        SET AGY/CPY CODE IN SMFREC                   
*                                                                               
SMFC4    MVC   DUB(4),=F'11'       SET FILE BALANCING COUNTERS SMF REC          
         TM    SMF,X'80'           SUPRESS WRITE IF SMF=TEST                    
         BZ    *+8                                                              
         MVI   DUB,X'80'                                                        
         GOTO1 =V(SMFOUT),DUB,,SMFBAL                                           
         L     R5,72(RD)                                                        
         MVC   SMFCOPY,0(R5)                                                    
         LA    R5,SMFCOPY          R5=A(COPY OF SMF REC FROM SMFOUT)            
*                                                                               
SMFC5    OC    DUB(4),DUB          TEST RETURN CODE FROM SMFOUT                 
         BZ    SMFC6                                                            
         L     RF,=A(ERR23)        SMF RECORD NOT WRITTEN RC=..                 
         LA    RF,26(RF)                                                        
         GOTO1 =V(HEXO24),DMCB,DUB+3,(RF),1                                     
         LHI   R1,23                                                            
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
SMFC6    BAS   R9,SMFPRT           PRINT SMF RECORD                             
*                                                                               
SMFC7    SR    R4,R4               BUMP TO NEXT AGY/CPY                         
         IC    R4,BYTE                                                          
         AHI   R4,1                                                             
         STC   R4,BYTE                                                          
         CHI   R4,255                                                           
         BNH   SMFC1                                                            
                                                                                
SMFMNY   TM    MODE,DAFIL          NO MONEY IF NO DAFILE                        
         BZ    SMFDX                                                            
         MVI   BYTE,0              SET AGY/CPY CODE FOR MONEY RECORDS           
         LA    RF,SMFBRECX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
         MVI   SMFBTYPE,C'M'       SET MONEY RECORD                             
*                                                                               
SMFM1    LA    R4,SMFBMNY          R4=A(SMFREC MONEY FIELDS)                    
         L     R5,FULL             R5=A(SMF COUNTERS LIST)                      
         MVI   BYTE1,0                                                          
         ZAP   SMFCTR,=P'1'        COUNTER NUMBER                               
*                                                                               
SMFM2    CP    SMFCTR,=P'7'        MONEY ENDS ON ERROR ENTRY                    
         BNE   SMFM2A                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFM3                                                            
         ICM   RF,15,0(R5)         GET A(ERROR COUNTER)                         
         BZ    SMFM3                                                            
         MVC   SMFBWARN,0(RF)      SET IN SMF RECORD                            
         B     SMFM3                                                            
*                                                                               
SMFM2A   CLI   0(R5),X'80'         TEST END OF LIST                             
         CLI   0(R5),X'80'         TEST END OF LIST                             
         BE    SMFM3                                                            
         ZAP   DUB,=P'0'                                                        
         ICM   RF,15,0(R5)         GET A(TABLE ENTRY)                           
         BZ    SMFM2D                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFM2B                                                           
         MVC   DUB,4(RF)           GET TOTAL MONEY FIELD                        
         B     SMFM2D                                                           
*                                                                               
SMFM2B   CP    4(8,RF),=P'0'       TEST IF TOTAL MONEY ZERO                     
         BZ    SMFM2D                                                           
         ICM   RF,15,32(RF)        SET A(MONEY ARRAY FOR AGY/MED)               
         BZ    SMFM2D                                                           
         SR    R0,R0               INDEX INTO PL8 MONEY ARRAY                   
         IC    R0,BYTE                                                          
         SLL   R0,3                                                             
         AR    RF,R0               POSITION TO MONEY FOR AGY/MED                
         MVC   DUB,0(RF)                                                        
*                                                                               
SMFM2D   MVC   0(8,R4),DUB         MOVE MONEY TO SMF RECORD                     
         CP    DUB,=P'0'           TEST IF MONEY IS NON ZERO                    
         BE    *+8                                                              
         MVI   BYTE1,1                                                          
         LA    R5,4(R5)            BUMP LIST POINTERS                           
         LA    R4,8(R4)                                                         
         B     SMFM2                                                            
*                                                                               
SMFM3    CLI   BYTE1,0             TEST IF ALL MONEY ZERO                       
         BE    SMFM7                                                            
         MVC   SMFBAGY,BYTE        SET AGY/CPY CODE IN SMFREC                   
*                                                                               
SMFM4    MVC   DUB(4),=F'12'       SET FILE BALANCING MONEY SMF REC             
         TM    SMF,X'80'           SUPRESS WRITE IF SMF=TEST                    
         BZ    *+8                                                              
         MVI   DUB,X'80'                                                        
         GOTO1 =V(SMFOUT),DUB,,SMFBAL                                           
         L     R5,72(RD)                                                        
         MVC   SMFCOPY,0(R5)                                                    
         LA    R5,SMFCOPY          R5=A(COPY OF SMF REC FROM SMFOUT)            
*                                                                               
SMFM5    OC    DUB(4),DUB          TEST RETURN CODE FROM SMFOUT                 
         BZ    SMFM6                                                            
         L     RF,=A(ERR23)        SMF RECORD NOT WRITTEN RC=..                 
         LA    RF,26(RF)                                                        
         GOTO1 =V(HEXO24),DMCB,DUB+3,(RF),1                                     
         LHI   R1,23                                                            
         L     RF,=A(LDERROR)                                                   
         BASR  RE,RF                                                            
*                                                                               
SMFM6    BAS   R9,SMFPRT           PRINT SMF RECORD HEADER                      
*                                                                               
SMFM7    SR    R4,R4               BUMP TO NEXT AGY/CPY                         
         IC    R4,BYTE                                                          
         AHI   R4,1                                                             
         STC   R4,BYTE                                                          
         CHI   R4,255                                                           
         BNH   SMFM1                                                            
                                                                                
SMFDX    XIT1                                                                   
                                                                                
SMFPRT   TM    SMF,X'08'           TEST IF WANT TO PRINT                        
         BZR   R9                                                               
         GOTO1 =V(PRINTER)         PRINT SMF RECORD                             
         MVC   P(17),=CL17'SMF CNTS'                                            
         TM    SMF,X'80'           INDICATE TEST SMF RECORD ONLY                
         BZ    *+10                                                             
         MVC   P+9(3),=C'TST'                                                   
         CLI   SMFBTYPE,C'M'       SET COUNTERS OR MONEY                        
         BNE   *+10                                                             
         MVC   P+4(4),=C'CASH'                                                  
         CLI   BYTE,0                                                           
         BE    SMFPRT0                                                          
         MVC   P+9(6),=CL6'AGY XX '                                             
         CLC   LDSENA(3),=C'ACC'                                                
         BNE   *+10                                                             
         MVC   P+9(3),=C'CPY'                                                   
         TM    SMF,X'80'           INDICATE TEST SMF RECORD ONLY                
         BZ    *+10                                                             
         MVC   P+9(3),=C'TST'                                                   
         GOTO1 =V(HEXO24),DMCB,BYTE,P+13,1                                      
SMFPRT0  GOTO1 =V(HEXO24),DMCB,(R5),P+17,24                                     
         ZAP   SMFPRTLN,=P'1'                                                   
         GOTO1 =V(PRINTER)                                                      
         ST    R5,SMFPRTA                                                       
         LH    R4,0(R5)            GET SMF RECORD LENGTH                        
         LA    R5,24(R5)           R5=A(SMF DATA)                               
         AHI   R4,-24              R4=RESIDUAL LENGTH                           
*                                                                               
SMFPRT1  LHI   R0,24               HEXOUT NEXT DATA PART OF RECORD              
         CR    R0,R4                                                            
         BL    *+6                                                              
         LR    R0,R4                                                            
         GOTO1 =V(HEXO24),DMCB,(R5),P+17,(R0)                                   
         AP    SMFPRTLN,=P'1'                                                   
SMFPRT2  CP    SMFPRTLN,=P'2'                                                   
         BNE   SMFPRT3                                                          
         L     RE,SMFPRTA                                                       
         MVC   P(8),32(RE)         JOB NAME                                     
         MVI   P+9,C'J'                                                         
         MVC   P+10(5),59(RE)      JOB NUMBER                                   
SMFPRT3  CP    SMFPRTLN,=P'3'                                                   
         BNE   *+10                                                             
         MVC   P(8),SMFBSRCE                                                    
SMFPRT4  CP    SMFPRTLN,=P'4'                                                   
         BNE   *+10                                                             
         MVC   P(8),SMFBTXT                                                     
SMFPRT5  CP    SMFPRTLN,=P'5'                                                   
         BNE   SMFPRT6                                                          
         MVC   P(12),SMFBTXT1                                                   
SMFPRT6  CP    SMFPRTLN,=P'6'                                                   
         BNE   SMFPRT7                                                          
         MVC   P(12),SMFBTXT2                                                   
SMFPRT7  GOTO1 =V(PRINTER)                                                      
         LA    R5,24(R5)                                                        
         AHI   R4,-24                                                           
         BP    SMFPRT1                                                          
         BR    R9                                                               
                                                                                
SMFPRTLN DC    PL2'0'                                                           
SMFCTR   DC    PL2'0'                                                           
SMFPRTA  DC    A(0)                                                             
                                                                                
SMFCDDA  DC    A(TODA),A(DIIS),A(DIF1),A(DIF2),A(DIF3),A(DIF4)                  
         DC    A(ERRTOT),X'80000000'                                            
SMFCLDA  DC    A(TIDA),A(DOIS),A(DOF1),A(DOF2),A(DOF3),A(DOF4)                  
         DC    A(ERRTOT),X'80000000'                                            
SMFCDIS  DC    A(TOIS),A(DIIS),A(0),A(0),A(0),A(0)                              
         DC    A(ERRTOT),X'80000000'                                            
SMFCLIS  DC    A(TIIS),A(DOIS),A(0),A(0),A(0),A(0)                              
         DC    A(ERRTOT),X'80000000'                                            
                                                                                
         DS    0D                                                               
         DC    C'*SMFBAL*'                                                      
SMFBAL   DC    XL255'00'                                                        
                                                                                
         DS    0D                                                               
         DC    C'*SMFCPY*'                                                      
SMFCOPY  DC    XL255'00'                                                        
                                                                                
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* DIRECT ACCESS FILE - RECOVERY FOR COPIES/CHANGES BY EXTERNAL        *         
***********************************************************************         
DARBEF   NTR1  BASE=*,LABEL=*                                                   
         L     RE,ADAREC           COPY DAREC AND SET RECOVERY HEADER           
         LR    RF,RE                                                            
         AH    RF,ISKEYL                                                        
         MVC   DUB(2),0(RF)                                                     
         CLC   DUB(2),DAMAX        RANGE CHECK RECORD LENGTH                    
         BNH   *+10                                                             
         MVC   DUB(2),DAMAX                                                     
         CLC   DUB(2),DAMIN                                                     
         BNL   *+10                                                             
         MVC   DUB(2),DAMIN                                                     
         LH    RF,DUB                                                           
         L     R0,=A(DACPY)                                                     
         LR    R1,RF                                                            
         MVCL  R0,RE               COPY RECORD                                  
         LH    RF,DUB                                                           
         AHI   RF,4+L'RCVHDR       INCREASE LEN FOR RECOVERY HEADER             
         SLL   RF,16                                                            
         L     RE,=A(DACPYH)                                                    
         ST    RF,0(RE)            SET NEW LENGTH                               
         SRL   RF,16                                                            
         MVI   RCVRECTY,1          SET COPY                                     
         MVC   RCVSIN,=F'1'        SET COPY/CHANGE PAIR                         
         MVC   4(L'RCVHDR,RE),RCVHDR                                            
         OI    DARFLAG1,DARCPYSQ   SET COPY RECORD SAVED                        
*                                                                               
DARBEF1  TM    RECOVER,X'40'       TEST IF TRAILERS WANTED                      
         BZ    DARBEF2                                                          
         AR    RF,RE               RF=A(END OF RECORD)                          
         MVC   0(L'RCXEXT,RF),RCXEXT                                            
         LH    RF,0(RE)                                                         
         AHI   RF,L'RCXEXT         RF=L'RECORD+L'TRAILER                        
         STH   RF,0(RE)                                                         
*                                                                               
DARBEF2  L     RE,=A(DACPY)        SAVE COPY RECORD KEY AND STATUS              
         L     RF,=A(DACPYK)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(RE)                                                    
         LA    RE,3(R1,RE)         RE=A(FIRST STATUS BYTE)                      
         TM    0(RE),X'80'                                                      
         BZ    *+8                                                              
         OI    DARFLAG1,DARCPYDQ   SET COPY RECORD IS DELETED                   
*                                                                               
DARBEFX  XIT1                                                                   
*                                                                               
         LTORG                                                                  
                                                                                
DARAFT   NTR1  BASE=*,LABEL=*                                                   
         TM    RECOVER,X'80'       RECOVERING CHANGES ONLY                      
         BO    DARAFT4                                                          
         TM    DARFLAG,DARADDQ     NO COPY FOR ACTION ADD                       
         BO    DARAFT4                                                          
         CLI   DARFLAG,DARLOADQ+DARPRGEQ+DARDELQ                                
         BNE   DARAFT3                                                          
         TM    DARFLAG1,DARCPYDQ   IF COPY RECORD WAS DELETED                   
         BO    DARAFTX             THEN NO RECOVERY IF LDPURGE DELETE           
*                                                                               
DARAFT3  L     R0,=A(DACPYH)       WRITE COPY RECORD                            
         L     R1,=A(RCVTAPE)                                                   
         PUT   (1),(0)                                                          
         L     R1,RCTCPY           RCVTAPE COPY RECORDS                         
         AHI   R1,1                                                             
         ST    R1,RCTCPY                                                        
         OI    DARFLAG1,DARCPYWQ   SET COPY RECORD WRITTEN                      
*                                                                               
DARAFT4  L     RE,ADAREC           COPY DAREC AND SET RECOVERY HEADER           
         LR    RF,RE                                                            
         AH    RF,ISKEYL                                                        
         MVC   DUB(2),0(RF)                                                     
         CLC   DUB(2),DAMAX        RANGE CHECK RECORD LENGTH                    
         BNH   *+10                                                             
         MVC   DUB(2),DAMAX                                                     
         CLC   DUB(2),DAMIN                                                     
         BNL   *+10                                                             
         MVC   DUB(2),DAMIN                                                     
         LH    RF,DUB                                                           
         L     R0,=A(DACPY)                                                     
         LR    R1,RF                                                            
         MVCL  R0,RE               COPY RECORD                                  
         LH    RF,DUB                                                           
         AHI   RF,4+L'RCVHDR       INCREASE LEN FOR RECOVERY HEADER             
         SLL   RF,16                                                            
         L     RE,=A(DACPYH)                                                    
         ST    RF,0(RE)            SET NEW LENGTH                               
         SRL   RF,16                                                            
*                                                                               
DARAFT5  TM    DARFLAG,DARADDQ     TEST WHAT HAPPENED TO RECORD                 
         BO    DARAFTA                                                          
         TM    DARFLAG,DARCHAQ                                                  
         BO    DARAFTC                                                          
         TM    DARFLAG,DARDELQ                                                  
         BO    DARAFTD                                                          
         DC    H'0'                                                             
*                                                                               
DARAFTA  MVI   RCVRECTY,3          SET ADD                                      
         MVC   RCVSIN,=F'0'                                                     
         L     R1,RCTADD                                                        
         AHI   R1,1                                                             
         ST    R1,RCTADD                                                        
         B     DARAFTR                                                          
*                                                                               
DARAFTC  MVI   RCVRECTY,2          SET CHANGE                                   
         MVC   RCVSIN,=F'0'                                                     
         TM    RECOVER,X'80'       TEST CHANGES ONLY                            
         BO    *+10                                                             
         MVC   RCVSIN,=F'1'        SET COPY/CHANGE PAIR                         
         L     R1,RCTCHG                                                        
         AHI   R1,1                                                             
         ST    R1,RCTCHG                                                        
         B     DARAFTR                                                          
*                                                                               
DARAFTD  MVI   RCVRECTY,2          SET CHANGE FOR DELETED RECORD                
         MVC   RCVSIN,=F'0'                                                     
         TM    RECOVER,X'80'       TEST CHANGES ONLY                            
         BO    *+10                                                             
         MVC   RCVSIN,=F'1'        SET COPY/CHANGE PAIR                         
         L     R1,RCTDEL                                                        
         AHI   R1,1                                                             
         ST    R1,RCTDEL                                                        
         L     RE,=A(DACPY)        SET ON DELETE FLAG                           
         AH    RE,ISKEYL                                                        
         LA    RE,2(RE)            POINT TO 1ST STATUS BYTE                     
         OI    0(RE),X'80'                                                      
*                                                                               
DARAFTR  L     RE,=A(DACPYH)       SET RECOVERY RECORD HEADER                   
         MVC   4(L'RCVHDR,RE),RCVHDR                                            
*                                                                               
DARAFTT  TM    RECOVER,X'40'       TEST IF TRAILERS WANTED                      
         BZ    DARAFTW                                                          
         AR    RF,RE               RF=A(END OF RECORD)                          
         MVC   0(L'RCXEXT,RF),RCXEXT                                            
         LH    RF,0(RE)                                                         
         AHI   RF,L'RCXEXT         RF=L'RECORD+L'TRAILER                        
         STH   RF,0(RE)                                                         
*                                                                               
DARAFTW  L     R0,=A(DACPYH)       WRITE CHANGE/ADD RECORD                      
         L     R1,=A(RCVTAPE)                                                   
         PUT   (1),(0)                                                          
*                                                                               
DARAFTX  XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* R1 HAS ERROR NUMBER. IF NEGATIVE ABEND WITH CODE IN TABLE.          *         
* LDERRORF SET TO X'01' IF CALLED FROM PRINTING COUNTERS ROUTINE      *         
* PRINT/DISPAY/EMAIL/ABEND OPTIONS                                    *         
***********************************************************************         
LDERROR  NTR1  BASE=*,LABEL=*                                                   
         MVI   LDERROPT,0                                                       
         TM    LDERRORF,X'01'      TEST IF CALLED FROM PRTCTRS                  
         BZ    *+8                                                              
         OI    LDERROPT,X'01'                                                   
         LTR   R1,R1               TEST IF NEGATIVE                             
         BP    *+10                                                             
         OI    LDERROPT,X'80'      SET FLAG TO ABEND                            
         LPR   R1,R1                                                            
         STH   R1,LDERRNUM         SAVE ERROR NUMBER                            
         CHI   R1,99                                                            
         BNE   *+12                                                             
         L     R3,=A(LDERR99)      R3=A(TOTAL ENTRY)                            
         B     LDERR0                                                           
         LR    R3,R1                                                            
         MHI   R3,L'LDERRTAB                                                    
         LA    R3,LDERRTAB(R3)     R3=A(TABLE ENTRY)                            
LDERR0   TM    4(R3),X'80'                                                      
         BZ    *+8                                                              
         OI    LDERROPT,X'80'      SET FLAG TO ABEND IF SET IN TABLE            
*                                                                               
LDERR1   MVC   OPERMSG,SPACES      BUILD OPERATOR MESSAGE                       
         MVC   OPERMSG(12),=C'***ERROR*** '                                     
         TM    LDERROPT,X'80'                                                   
         BO    *+10                                                             
         MVC   OPERMSG(12),=C'**WARNING** '                                     
         ICM   RF,15,0(R3)                                                      
         BNZ   *+8                                                              
         L     RF,=A(ERR00)                                                     
         MVC   OPERMSG+12(48),0(RF)                                             
         TM    4(R3),X'03'         TEST PUT TO CONSOLE AND PRINT                
         BNO   *+12                                                             
         BAS   R9,PUTMSGPI                                                      
         B     LDERR2                                                           
         TM    4(R3),X'02'         TEST PUT TO CONSOLE                          
         BNO   *+8                                                              
         BAS   R9,PUTMSGI                                                       
*                                                                               
LDERR2   SR    R0,R0               SET ERROR COUNT<MAX                          
         TM    LDERROPT,X'01'      TEST IF CALLED BY PRTCTRS                    
         BZ    LDERR2W                                                          
         LH    R1,LDERRNUM                                                      
LDERR2A  CHI   R1,24               NO EMAIL IF LESS THAN DUPKEY MAX             
         BNE   LDERR2B                                                          
         CLC   DUPKEY,MAX_DUPK                                                  
         BL    LDERR3                                                           
         B     LDERR2G                                                          
LDERR2B  CHI   R1,25               NO EMAIL IF LESS THAN SEQERR MAX             
         BNE   LDERR2C                                                          
         CLC   SEQERR,MAX_SEQE                                                  
         BL    LDERR3                                                           
         B     LDERR2G                                                          
LDERR2C  CHI   R1,26               NO EMAIL IF LESS THAN BADADR MAX             
         BNE   LDERR2D                                                          
         CLC   BADADR,MAX_BADA                                                  
         BL    LDERR3                                                           
         B     LDERR2G                                                          
LDERR2D  CHI   R1,27               NO EMAIL IF LESS THAN KEYNEQ MAX             
         BNE   LDERR2E                                                          
         CLC   KEYNEQ,MAX_KEYN                                                  
         BL    LDERR3                                                           
         B     LDERR2G                                                          
LDERR2E  CHI   R1,28               NO EMAIL IF LESS THAN BADREC MAX             
         BNE   LDERR2F                                                          
         CLC   BADREC,MAX_BADR                                                  
         BL    LDERR3                                                           
         B     LDERR2G                                                          
LDERR2F  CHI   R1,99               NO EMAIL IF LESS THAN TOTAL MAX              
         BNE   LDERR2W                                                          
         CLC   ERRTOT,MAX_TERR                                                  
         BL    LDERR3                                                           
LDERR2G  OI    LDERRORF,X'80'      SET HAVE DONE AT LEAST ONE ERROR             
         LHI   R0,1                SET ERROR COUNT>=MAX                         
*                                                                               
LDERR2W  TM    4(R3),X'04'         TEST EMAIL                                   
         BZ    LDERR3                                                           
         GOTOR =A(EMAILOUT),0      PREPARE AND/OR SEND EMAIL                    
*                                                                               
LDERR3   TM    LDERROPT,X'80'      TEST ABEND REQUESTED OR DEFINED              
         BO    LDERR4                                                           
         TM    4(R3),X'40'         TEST CONDITION CODE DEFINED                  
         BZ    LDERRX                                                           
         SR    R1,R1               GET CONDITION CODE VALUE                     
         ICM   R1,3,5(R3)                                                       
         LTR   R0,R0               TEST IF ERROR COUNT>=MAX                     
         BZ    *+8                                                              
         AHI   R1,4                YES INCREASE CONDITION CODE                  
         CH    R1,LDCOND                                                        
         BNH   LDERRX                                                           
         STH   R1,LDCOND           SET HIGHEST CONDITION CODE                   
         B     LDERRX                                                           
*                                                                               
LDERR4   GOTOR =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         SR    R1,R1               TEST IF ABEND CODE DEFINED                   
         ICM   R1,3,5(R3)                                                       
         BNZ   *+8                                                              
         ICM   R1,3,LDERRTAB+5     USE VALUE IN FIRST TABLE ENTRY               
         TM    4(R3),X'10'         TEST IF DUMP WANTED WITH ABEND               
         BO    LDERR3A                                                          
         ABEND (1)                                                              
LDERR3A  ABEND (1),DUMP                                                         
*                                                                               
LDERRX   XIT1                                                                   
                                                                                
LDERRNUM DC    H'0'                                                             
LDERROPT DC    X'00'                                                            
                                                                                
FRSTSYS  EQU   24                                                               
FRSTAPP  EQU   30                                                               
                                                                                
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* AL4 A(ERROR/WARNING MESSAGE)                                        *         
* XL1 80=ABEND,40=COND,20=N/D,10=DUMP,08=N/D,04=EMAIL,02=CONS,01=PRINT*         
* AL2 ABEND OR COND CODE                                              *         
* XL1 FLAGS                                                           *         
***********************************************************************         
         DS    0F                                                               
LDERRTAB DS    0XL8                                                             
         DC    A(ERR00),B'10010111',AL2(0200),XL1'00'                           
         DC    A(ERR01),B'10000111',AL2(0201),XL1'00'                           
         DC    A(ERR02),B'10000111',AL2(0202),XL1'00'                           
         DC    A(ERR03),B'10000111',AL2(0203),XL1'00'                           
         DC    A(ERR04),B'10000111',AL2(0204),XL1'00'                           
         DC    A(ERR05),B'10000111',AL2(0205),XL1'00'                           
         DC    A(ERR06),B'10000111',AL2(0206),XL1'00'                           
         DC    A(ERR07),B'10000111',AL2(0207),XL1'00'                           
         DC    A(ERR08),B'00000111',AL2(0208),XL1'00'                           
         DC    A(ERR09),B'00000111',AL2(0209),XL1'00'                           
         DC    A(ERR10),B'10010111',AL2(0210),XL1'00'                           
         DC    A(ERR11),B'10010111',AL2(0211),XL1'00'                           
         DC    A(ERR12),B'10010111',AL2(0212),XL1'00'                           
         DC    A(ERR13),B'10010111',AL2(0213),XL1'00'                           
         DC    A(ERR14),B'10010111',AL2(0214),XL1'00'                           
         DC    A(ERR15),B'10010111',AL2(0215),XL1'00'                           
         DC    A(ERR16),B'10010111',AL2(0216),XL1'00'                           
         DC    A(ERR17),B'10010111',AL2(0217),XL1'00'                           
         DC    A(ERR18),B'10010111',AL2(0218),XL1'00'                           
         DC    A(ERR19),B'10010111',AL2(0219),XL1'00'                           
         DC    A(ERR20),B'10010111',AL2(0220),XL1'00'                           
         DC    A(ERR21),B'10010111',AL2(0221),XL1'00'                           
         DC    A(ERR22),B'10010111',AL2(0222),XL1'00'                           
         DC    A(ERR23),B'00000111',AL2(0000),XL1'00'                           
*                                                                               
         DC    A(ERR24),B'01000110',AL2(0008),XL1'00' SYS DUP KEY               
         DC    A(ERR25),B'01000110',AL2(0008),XL1'00' SYS SEQ ERR               
         DC    A(ERR26),B'01000110',AL2(0008),XL1'00' SYS BAD ADR               
         DC    A(ERR27),B'01000110',AL2(0008),XL1'00' SYS KEY NEQ               
         DC    A(ERR28),B'01000110',AL2(0008),XL1'00' SYS BAD REC               
         DC    A(ERR29),B'01000110',AL2(0008),XL1'00' SYS N/D                   
*                                                                               
         DC    A(ERR30),B'10000110',AL2(0230),XL1'00' APP ABEND                 
         DC    A(ERR31),B'01000110',AL2(0008),XL1'00' APP WARNING#1             
         DC    A(ERR32),B'01000110',AL2(0008),XL1'00' APP WARNING#2             
         DC    A(ERR33),B'01000110',AL2(0008),XL1'00' APP N/D                   
         DC    A(ERR34),B'01000110',AL2(0008),XL1'00' APP N/D                   
         DC    A(ERR35),B'01000110',AL2(0008),XL1'00' APP N/D                   
*                                                                               
         DC    A(ERR36),B'10010111',AL2(0236),XL1'00' CANT OPEN PDIXOV          
         DC    A(ERR37),B'10010111',AL2(0237),XL1'00' ABEND IN SORTER           
         DC    A(ERR38),B'10010111',AL2(0684),XL1'00' ABEND PUT SORTER          
*                                                                               
LDERR99  DC    A(ERR99),B'01000110',AL2(0008),XL1'00' SYS TOT ERR               
                                                                                
ERR00    DC    CL48'UNKNOWN LOAD/DUMP ERROR'                                    
ERR01    DC    CL48'MISSING PARAMETER - ...     '                               
ERR02    DC    CL48'INVALID PARAMETER CARD SYNTAX'                              
ERR03    DC    CL48'INVALID PARAMETER - ...     '                               
ERR04    DC    CL48'INVALID VALUE FOR PARAMETER - ...     '                     
ERR05    DC    CL48'CANT OPEN INPUT TAPE'                                       
ERR06    DC    CL48'CANT OPEN OUTPUT TAPE     '                                 
ERR07    DC    CL48'EXTERNAL ...      NOTFOUND'                                 
ERR08    DC    CL48'EXTERNAL ...      DATES OUT OF RANGE'                       
ERR09    DC    CL48'EXTERNAL ...      SYSTEM=XX NOT IN LIST'                    
ERR10    DC    CL48'INVALID IS FILE EXTENTS'                                    
ERR11    DC    CL48'OPERATOR REPLIED EOJ OR CANCEL'                             
ERR12    DC    CL48'DA DISK ON TRACK WRITE'                                     
ERR13    DC    CL48'DA DISK ERASE FAILURE'                                      
ERR14    DC    CL48'IS DISK WRITE'                                              
ERR15    DC    CL48'SORTIN NEQ SORTOUT'                                         
ERR16    DC    CL48'IS DISK READ'                                               
ERR17    DC    CL48'................. FROM DMSECHK'                             
ERR18    DC    CL48'TAPE=XXXXXXXX NOT SAME DISK=XXXXXXXX'                       
ERR19    DC    CL48'LOAD=....     NOT COMPATL DUMP=....    '                    
ERR20    DC    CL48'DATE=........ TIME=...... OLD TAPEIN'                       
ERR21    DC    CL48' '                                                          
ERR22    DC    CL48'ERROR ON DA DISK HDR READ/WRITE'                            
ERR23    DC    CL48'SMF RECORD NOT WRITTEN RC=..'                               
ERR24    DC    CL48'IS DISK DUP KEY  MAX=     '                                 
ERR25    DC    CL48'IS DISK SEQ ERR  MAX=     '                                 
ERR26    DC    CL48'DA DISK BAD ADR  MAX=     '                                 
ERR27    DC    CL48'DA DISK KEY NEQ  MAX=     '                                 
ERR28    DC    CL48'DA DISK BAD REC  MAX=     '                                 
ERR29    DC    CL48'                          '                                 
ERR30    DC    CL48'APP ABEND                 '                                 
ERR31    DC    CL48'APP WARNING#1             '                                 
ERR32    DC    CL48'APP WARNING#2             '                                 
ERR33    DC    CL48'                          '                                 
ERR34    DC    CL48'                          '                                 
ERR35    DC    CL48'                          '                                 
ERR36    DC    CL48'CANT OPEN PDIXOV TEMPORARY FILE'                            
ERR37    DC    CL48'DFSORT ABEND 1234/XXX'                                      
ERR38    DC    CL48'DFSORT ABEND 1234/XXX'                                      
ERR99    DC    CL48'IS/DA TOTAL ERR  MAX=     '                                 
ERRDA    DC    CL48'***ERROR*** DA=           '                                 
ERRIS    DC    CL48'***ERROR*** IS=           '                                 
         EJECT                                                                  
***********************************************************************         
* EMAIL BASED ON EID=LIST IF EMAIL=Y. MESSAGE IN OPERMSG.             *         
* R1=0 EMAIL MESSAGE, R1=1 CLOSE SMTP, R1=2 PRINT EMAIL TEXT          *         
***********************************************************************         
EMAILOUT NTR1  BASE=*,LABEL=*                                                   
         TM    EMAIL,YES           EXIT IF EMAIL DISABLED                       
         BZ    EMAILX                                                           
         ICM   RF,15,=V(SMTP)      EXIT IF SMTP NOT LINKED IN                   
         BZ    EMAILX                                                           
         CHI   R1,1                                                             
         BE    EMAIL6              1=CLOSE REQUEST                              
         BH    EMAIL7              2=PRINT REQUEST                              
         TM    EMAILFLG,YES        TEST IF SMTP INITIALIZED                     
         BO    EMAIL4                                                           
*                                                                               
EMAIL1   L     RE,=A(EMAILID)      INITIALIZE LIST OF RECIPIENTS                
         MVC   RECEIPT1(L'EMAILID),0(RE)                                        
*                                                                               
EMAIL2   LA    R3,ATIOT            GET JOB AND STEP NAMES                       
         EXTRACT (3),'S',FIELDS=TIOT                                            
         L     R3,ATIOT                                                         
         MVC   SUBJOB,0(R3)        JOB                                          
         MVC   SUBSTEP,8(R3)       STEP                                         
         MVC   SUBTYPE,DUMPTXT     DUMP/LOAD                                    
         TM    OUTPUT,DISK                                                      
         BZ    *+10                                                             
         MVC   SUBTYPE,LOADTXT                                                  
         L     RF,=A(SSB)                                                       
         MVC   SUBDSPC,SSODSPAC-SSOOFF(RF)                                      
         OI    SUBDSPC,C' '        DSPACE CHR                                   
         MVC   SUBSENA,LDSENA      SENAME                                       
         L     RF,=A(LDISNA)                                                    
         MVC   SUBISNA,0(RF)       ISFILE NAME                                  
         L     RF,=A(LDDANA)                                                    
         MVC   SUBDANA,0(RF)       DAFILE NAME                                  
*                                                                               
EMAIL3   GOTOR =V(SMTP),PARA,('SMTPAINI',JESMAIL)                               
         GOTOR (RF),PARA,('SMTPAPRS',RECEIPT1),(L'SUBJECT,SUBJECT)              
         OI    EMAILFLG,YES        SMTP INIITIALIZED                            
         TM    LDERRORF,X'01'                                                   
         BO    EMAIL4              DONT PRINT IF CALLED BY PRINT CTRS           
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(17),=CL17'EMAIL SENT TO:'                                      
         MVC   P+17(L'RECEIPT1),RECEIPT1                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(17),=CL17'EMAIL SUBJECT:'                                      
         MVC   P+17(L'SUBJECT),SUBJECT                                          
         GOTO1 =V(PRINTER)                                                      
*                                                                               
EMAIL4   MVC   BODYTXT1(L'OPERMSG),OPERMSG COPY MESSAGE TO EMAIL BODY           
         GOTOR =V(SMTP),PARA,('SMTPAPTL',BODYTXT1)                              
         LLC   R1,EMAILCNT                                                      
         AHI   R1,1                                                             
         STC   R1,EMAILCNT         BUMP EMAIL TEXT COUNT                        
         CHI   R1,EMAILMAX                                                      
         BH    EMAIL5                                                           
         AHI   R1,-1                                                            
         MHI   R1,80                                                            
         LA    R1,EMAILTXT(R1)                                                  
         MVC   0(80,R1),BODYTXT1   SAVE EMAIL TEXT                              
         TM    LDERRORF,X'01'                                                   
         BZ    *+8                                                              
         MVI   79(R1),X'FF'        SET THIS TEXT OUTPUT BY PRINT CTRS           
*                                                                               
EMAIL5   TM    LDERRORF,X'01'      DONT PRINT IF CALLED BY PRINT CTRS           
         BZ    *+12                                                             
         OI    EMAILFLG,X'80'      SET EMAIL TEXT FROM PRINT CTRS               
         B     EMAILX                                                           
         MVC   P(17),=CL17'EMAIL MESSAGE:'                                      
         MVC   P+17(L'BODYTXT1),BODYTXT1                                        
         GOTO1 =V(PRINTER)                                                      
         B     EMAILX                                                           
*                                                                               
EMAIL6   TM    EMAILFLG,YES        CLOSE IF INITIALIZED                         
         BZ    EMAILX                                                           
         GOTOR =V(SMTP),PARA,('SMTPASND',0)                                     
         GOTOR (RF),PARA,('SMTPAEND',0) DETACH SMTP                             
         MVI   EMAILFLG,0                                                       
         MVI   EMAILCNT,0                                                       
         B     EMAILX                                                           
*                                                                               
EMAIL7   TM    EMAILFLG,YES        TEST IF SMTP INITIALIZED                     
         BZ    EMAILX                                                           
         TM    EMAILFLG,X'80'      TEST IF EMAILS FROM PRINT COUNTERS           
         BZ    EMAILX                                                           
         SR    R3,R3               R3=NUMBER OF EMAIL TEXTS OUTPUT              
         ICM   R3,1,EMAILCNT                                                    
         BZ    EMAILX                                                           
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(17),=CL17'EMAIL SENT TO:'                                      
         MVC   P+17(L'RECEIPT1),RECEIPT1                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(17),=CL17'EMAIL SUBJECT:'                                      
         MVC   P+17(L'SUBJECT),SUBJECT                                          
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R4,EMAILTXT         R4=A(EMAIL TEXT LIST)                        
EMAIL8   CLI   79(R4),X'FF'        TEST IF PRINT COUNTERS TEXT                  
         BNE   EMAIL8A                                                          
         MVC   P(17),=CL17'EMAIL MESSAGE:'                                      
         MVC   P+17(79),0(R4)                                                   
         GOTO1 =V(PRINTER)                                                      
EMAIL8A  LA    R4,80(R4)                                                        
         BCT   R3,EMAIL8                                                        
*                                                                               
EMAILX   XIT1                                                                   
                                                                                
EMAILFLG DC    X'00'                                                            
EMAILCNT DC    X'00'                                                            
ATIOT    DC    A(0)                                                             
DUMPTXT  DC    C'DUMP'                                                          
LOADTXT  DC    C'LOAD'                                                          
                                                                                
JESMAIL  DC    CL8'JESMAIL '                                                    
*                                                                               
RECEIPT1 DC    CL80' '                                                          
*                                                                               
SUBJECT  DC    CL80' '                                                          
         ORG   SUBJECT                                                          
         DC    C'JOB='                                                          
SUBJOB   DS    CL8                                                              
         DC    C'.'                                                             
SUBSTEP  DS    CL8                                                              
         DC    C' '                                                             
SUBTYPE  DS    CL4                                                              
         DC    C' SYS='                                                         
SUBDSPC  DS    CL1                                                              
         DC    C'/'                                                             
SUBSENA  DS    CL5                                                              
         DC    C'/'                                                             
SUBISNA  DS    CL8                                                              
         DC    C'/'                                                             
SUBDANA  DS    CL8                                                              
         ORG                                                                    
BODYTXT1 DC    CL80' '                                                          
*                                                                               
EMAILMAX EQU   20                                                               
EMAILTXT DC    (EMAILMAX)CL80' '                                                
         LTORG                                                                  
         EJECT                                                                  
         DS    0D                                                               
         DC    C'*SSB*SSB'                                                      
SSB      DC    XL2'00',X'FF',XL5'00',504X'00'                                   
         DS    0D                                                               
         DC    C'*UTL*UTL'                                                      
UTL      DC    384X'00'                                                         
         EJECT                                                                  
*DMLDHDR                                                                        
       ++INCLUDE DMLDHDR                                                        
         EJECT                                                                  
*DMLDDEFN                                                                       
       ++INCLUDE DMLDDEFN                                                       
         EJECT                                                                  
DDNAD    DSECT                                                                  
       ++INCLUDE DMDDNAMED                                                      
         EJECT                                                                  
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
         EJECT                                                                  
*DMDTFIS                                                                        
       ++INCLUDE DMDTFIS                                                        
         EJECT                                                                  
*DMXTNTD                                                                        
       ++INCLUDE DMXTNTD                                                        
         EJECT                                                                  
*DDSMTPD                                                                        
       ++INCLUDE DDSMTPD                                                        
         EJECT                                                                  
*DDSMFFBAL                                                                      
       ++INCLUDE DDSMFFBAL                                                      
         EJECT                                                                  
*FASSBOFF                                                                       
SSBD     DSECT                                                                  
       ++INCLUDE FASSBOFF                                                       
         EJECT                                                                  
*DDDPRINT                                                                       
       ++INCLUDE DDDPRINT                                                       
                                                                                
*DDSCANBLKD                                                                     
       ++INCLUDE DDSCANBLKD                                                     
                                                                                
*DMGREQUS                                                                       
       ++INCLUDE DMGREQUS                                                       
                                                                                
         IEFJFCBN LIST=YES                                                      
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'019DMLDMOD   11/16/20'                                      
         END                                                                    
