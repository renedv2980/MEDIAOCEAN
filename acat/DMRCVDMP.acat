*          DATA SET DMRCVDMP   AT LEVEL 011 AS OF 08/12/20                      
*CATALP RCVDMP                                                                  
*&&      SET   NOP=N                                                            
         TITLE 'ANY SYSTEM - RECOVERY DUMP'                                     
RCVDMP   CSECT                                                                  
         PRINT NOGEN                                                            
         ENTRY SSB                                                              
         ENTRY UTL                                                              
         ENTRY APPCOND                                                          
         ENTRY EID                                                              
         ENTRY INPUT                                                            
         ENTRY LDCOND                                                           
         ENTRY LDDANA                                                           
         ENTRY LDSENO                                                           
         ENTRY LDSENA                                                           
         ENTRY LDSPACE                                                          
         ENTRY LDWRITE                                                          
         ENTRY MODE                                                             
         ENTRY OUTPUT                                                           
         ENTRY PARMCARD                                                         
         ENTRY RECTYV                                                           
         ENTRY SMF                                                              
         ENTRY DATEVAL                                                          
         ENTRY UPSIVAL                                                          
         NBASE WORKX-WORKD,*RCVDMP*,RA,WORK=A(RCVWRK)                           
         L     R9,VCPRINT                                                       
         USING DPRINT,R9                                                        
         L     R7,=A(RCVREC)       R7=A(RECOVERY RECORD IN TAPE FORMAT)         
         USING RCVRECD,R7                                                       
         USING WORKD,RC                                                         
*                                                                               
RCVDMP1  L     RF,=A(NXTCRD)       READ AND VALIDATE PARAMETER CARDS            
         BASR  RE,RF                                                            
         BNE   EXIT                                                             
*                                                                               
RCVDMP2  L     RF,=A(INIT)         CHECK CARDS ARE CONSISTENT                   
         BASR  RE,RF                                                            
         TM    ACTV,X'80'          ACTV=PRINT/INIT ARE SINGLE ACTIONS           
         BZ    NXTSYS                                                           
         L     RF,=A(ACTPRT)                                                    
         BASR  RE,RF                                                            
         B     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* GET NEXT SYSTEM FROM INPUT LIST                                     *         
***********************************************************************         
NXTSYS   TM    INPUT,TAPE          TAPE INPUT                                   
         BZ    NXTSYS2                                                          
         CP    SYSCOUNT,=P'0'      WAS THE SYSTEM NAME INPUT                    
         BNE   NXTSYS2                                                          
         L     RF,=A(SYSTAB)       USE GENERIC SYSTEM                           
         MVC   SYSDATA,0(RF)                                                    
         MVC   DDNADDN,=CL8'FILE-ID'                                            
         B     NXTSYS9                                                          
*                                                                               
NXTSYS2  L     RE,ASYSNTAB         BUMP TO NEXT INPUT SYSTEM                    
         LA    RE,10(RE)                                                        
         ST    RE,ASYSNTAB                                                      
         MVC   SYSNAME,0(RE)                                                    
         CLI   SYSNAME,C' '        TEST END OF SYSTEM LIST                      
         BE    EOF                                                              
         CLI   SYSNAME,X'FF'                                                    
         BE    EOF                                                              
*                                                                               
NXTSYS3  GOTO1 =V(DMDDNAME),DMCB,(X'24',DMDDNAME),SYSNAME                       
         TM    8(R1),X'10'                                                      
         JNZ   *+2                 THIS WAS VALIDATED WHEN READ                 
         SR    RF,RF                                                            
         ICM   RF,7,9(R1)                                                       
         MVC   DDNADATA,0(RF)      EXTRACT SYSTEM & RECOVERY FILE INFO          
         MVC   LDSENO,DDNASENO                                                  
         MVC   LDSENA,DDNASENA                                                  
         MVI   LDSEATS,0                                                        
         MVC   LDFIXNUM,DDNAFINO                                                
         MVI   LDFIATS,0                                                        
*                                                                               
         LLC   R1,DDNASYNO         GET LOGICAL SYSTEM INFO                      
         MHI   R1,L'SYSTAB                                                      
         L     RF,=A(SYSTAB)                                                    
         AR    RF,R1                                                            
         MVC   SYSDATA,0(RF)                                                    
         TM    INPUT,TAPE                                                       
         BO    NXTSYS9                                                          
*                                                                               
         MVC   DMSYS(3),SYSNAM     SET UP DATAMGR VALUES                        
         MVC   DMRFILE(6),SYSRCVF                                               
         MVI   DMFLIST,C'N'                                                     
         MVC   DMFLIST+1(6),SYSRCVF                                             
         MVC   DMRFILNO,DDNAFINO                                                
*                                                                               
         L     RF,=A(UTL)          SET SE NUMBER IN UTL                         
         MVC   4(1,RF),LDSENO                                                   
*                                                                               
NXTSYS4  ICM   R2,15,DDNAADTF      R2=A(DTF) FOR RECOVERY FILE                  
         JZ    *+2                                                              
         USING DTFPHD,R2                                                        
         CLI   FLASH,C' '          SET FLASHABLE IN DTF                         
         BNH   *+8                                                              
         OI    DTFFLAG,DTFFLSH                                                  
         L     RF,=A(SETATT)       SAVE RCVFILE/SYSTEM ATTRIBUTES               
         BASR  RE,RF                                                            
         XC    DMDA,DMDA           SET TO OPEN AND READ A NEW FILE              
         L     RF,ATRKBUFF                                                      
         XC    0(16,RF),0(RF)                                                   
         MVC   DTFSNUM,LDSENO      SET SE NUM IN DTF                            
         MVC   DTFXNUM,LDFIXNUM    SET EXTERNAL FILE NUM IN DTF                 
         OI    DTFOPEN,DTF_RO                                                   
         CLI   ERASE,C'Y'          OPEN FOR UPDATE IF ERASE=Y                   
         BNE   NXTSYS5                                                          
         CLI   LDWRITE,C'N'        UNLESS WRITE=N                               
         BE    NXTSYS5                                                          
         NI    DTFOPEN,255-DTF_RO                                               
         MVI   DMFLIST,C'U'        SET TO OPEN FOR UPDATE                       
*                                                                               
NXTSYS5  CLI   USEDADDS,C'Y'       OPEN RECOVERY FILE                           
         BNE   NXTSYS5A                                                         
         GOTO1 VDADDS,PARA,A(DAOPEN),DAREC,0,(R2),PARA+20,0                     
         B     NXTSYS6                                                          
NXTSYS5A GOTO1 VDATAMGR,DMCB,DMOPEN,DMSYS,DMFLIST,DAREC                         
*                                                                               
NXTSYS6  MVC   DYNDD,DDNADDN       GET DSN OF RECOVERY FILE                     
         L     RF,=A(GETDSN)                                                    
         BASR  RE,RF                                                            
*                                                                               
NXTSYS7  XC    TRKSEOF,TRKSEOF     GET DNEXT/USED/ALLOCATED                     
         GOTO1 VDADDS,PARA,A(DAINFO),DAREC,0,(R2),TRKSEOF                       
*                                                                               
NXTSYS8  MVI   ERASEOPT,C'V'       VALIDATE IF OK TO ERASE                      
         BRAS  RE,ERASER                                                        
*                                                                               
NXTSYS9  L     RF,=A(OPEN)         DO NEXT SYSTEM INITIALISATION                
         BASR  RE,RF                                                            
*                                                                               
NXTSYSA  ICM   RF,15,=V(LDRCVD)    TEST IF SYSTEM SPECIFIC ROUTINE              
         BZ    NXTSYSB                                                          
         LA    R1,PLRCVD                                                        
         MVI   0(R1),0             SET INITIALIZE                               
         BASR  RE,RF                                                            
*                                                                               
NXTSYSB  B     READ                START TO READ THE RECOVERY FILE              
*                                                                               
NXTSYSX  MVC   LASTDA,DMDA         SAVE EOF DISK ADDR                           
         CLI   ERASE,C'Y'          DONT CLOSE YET IF ERASE REQUIRED             
         BE    PRTSYS                                                           
         CLI   USEDADDS,C'Y'       CLOSE RECOVERY FILE                          
         BNE   NXTSYSX1                                                         
         L     R2,DDNAADTF                                                      
         GOTO1 VDADDS,PARA,A(DACLOSE),DAREC,0,(R2),PARA+20,0                    
         B     PRTSYS                                                           
*                                                                               
NXTSYSX1 GOTO1 VDATAMGR,DMCB,DMCLSE,DMSYS,DMFLIST,DAREC                         
         B     PRTSYS                                                           
         EJECT                                                                  
***********************************************************************         
* PRINT TOTALS FOR THIS RECOVERY FILE ON DISK                         *         
***********************************************************************         
PRTSYS   MVI   FLAG,0              PRINT COUNTERS FOR THIS SYSTEM               
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         L     RF,=A(HEAD1L)                                                    
         MVC   0(8,RF),DDNADDN                                                  
         MVC   P(HEAD1LX-HEAD1L),0(RF)                                          
         GOTO1 =V(PRINTER)                                                      
         L     RF,=A(UNDR1L)                                                    
         MVC   P(UNDR1LX-UNDR1L),0(RF)                                          
         GOTO1 =V(PRINTER)                                                      
         ICM   R3,15,SYSAFTAB      TEST IF ANY COUNTERS FOR THIS SYSTEM         
         BZ    PRTSYS5                                                          
         USING FILETABD,R3                                                      
*                                                                               
PRTSYS1  CLI   FILENUM,X'FF'                                                    
         BE    PRTSYS4                                                          
         OC    FILETOTS,FILETOTS                                                
         BNZ   *+12                                                             
         TM    FLAG,X'80'          TEST TO PRINT ZERO COUNTERS                  
         BZ    PRTSYS3                                                          
         OI    FLAG,X'01'          SET ONE ROW OF COUNTERS PRINTED              
         MVC   P(7),FILENAME                                                    
         LA    R1,P+17                                                          
         LA    RE,FILECNTS         START OF COUNTERS                            
         LA    RF,FILECNTN         NUMBER OF COUNTERS                           
*                                                                               
PRTSYS2  CHI   RF,5                DONT PRINT DDS TOTAL                         
         BE    PRTSYS2B                                                         
         CHI   RF,1                DONT PRINT PASSIVE TOTAL                     
         BE    PRTSYS2B                                                         
         MVC   0(9,R1),=9C'.'      SET NULL COUNTER                             
         ICM   R0,15,0(RE)                                                      
         BZ    PRTSYS2A                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  0(9,R1),DUB                                                      
PRTSYS2A LA    R1,10(R1)                                                        
PRTSYS2B XC    0(4,RE),0(RE)       CLEAR COUNTER FOR NEXT SYSTEM                
         LA    RE,4(RE)                                                         
         BCT   RF,PRTSYS2                                                       
         GOTO1 VPRINTER                                                         
*                                                                               
PRTSYS3  LA    R3,FILETABL(R3)                                                  
         B     PRTSYS1                                                          
*                                                                               
PRTSYS4  TM    FLAG,X'01'          DID WE PRINT SOME COUNTERS                   
         BO    PRTSYS4X                                                         
         OI    FLAG,X'80'          SET TO PRINT A ROW OF ZEROS                  
         L     R3,=A(FILTABFF)     POINT TO ZERO COUNTERS TABLE                 
         B     PRTSYS1                                                          
PRTSYS4X GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTSYS5  BRAS  RE,SIZER            PRINT RCVFILE SIZE DATA                      
         LAY   RF,HEAD2L                                                        
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
         LAY   RF,UNDR2L                                                        
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R3,INCOUNTS         PRINT INPUT COUNTERS                         
         MVI   PASS,1                                                           
PRTSYS6  ICM   RE,15,0(R3)         DONT PRINT ZERO COUNTERS                     
         BZ    PRTSYS6D                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P(16),4(R3)                                                      
         UNPK  P+17(9),DUB                                                      
PRTSYS6A CLI   20(R3),C'E'         TEST ERROR COUNTER                           
         BNE   PRTSYS6B                                                         
         OC    LDCOND,=X'000C'                                                  
         MVC   P+27(9),=C'**ERROR**'                                            
         B     PRTSYS6C                                                         
*                                                                               
PRTSYS6B CLI   20(R3),C'W'         TEST WARNING COUNTER                         
         BNE   PRTSYS6C                                                         
         OC    LDCOND,=X'0008'                                                  
         MVC   P+27(9),=C'*WARNING*'                                            
*                                                                               
PRTSYS6C GOTO1 =V(PRINTER)                                                      
PRTSYS6D LA    R3,L'INCOUNTS(R3)   BUMP TO NEXT TABLE ENTRY                     
         CLC   0(4,R3),=4X'FF'     TEST END OF TABLE                            
         BNE   PRTSYS6                                                          
         CLI   PASS,1              TEST FIRST PASS                              
         BNE   PRTSYS6E                                                         
         MVI   PASS,2                                                           
         ICM   R3,15,=V(LDRCVDT)   TEST IF SYSTEM TABLE DEFINED                 
         BZ    PRTSYS6E                                                         
         CLC   0(4,R3),=4X'FF'     TEST EMPTY SYSTEM TABLE                      
         BNE   PRTSYS6                                                          
PRTSYS6E GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R3,INCOUNTS         CONSOLE/EMAIL ERRORS/WARNINGS                
         MVI   PASS,1                                                           
PRTSYS7  ICM   RE,15,0(R3)         IGNORE ZERO COUNTERS                         
         BZ    PRTSYS7D                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P(16),4(R3)                                                      
         UNPK  P+17(9),DUB                                                      
*                                                                               
         CLI   20(R3),C'E'         TEST ERROR COUNTER                           
         BNE   *+14                                                             
         MVC   P+27(9),=C'**ERROR**'                                            
         B     PRTSYS7A                                                         
         CLI   20(R3),C'W'         TEST WARNING COUNTER                         
         BNE   PRTSYS7C                                                         
         MVC   P+27(9),=C'*WARNING*'                                            
*                                                                               
PRTSYS7A MVC   OPERMSX,SPACES      CONSOLE/EMAIL ERRORS AND WARNINGS            
         MVC   OPERMSG+00(09),P+27                                              
         MVC   OPERMSG+10(08),DDNADDN                                           
         MVC   OPERMSG+19(26),P                                                 
         MVC   OPERMSG+46(30),DYNDSN                                            
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSX,OPERMSX)                      
PRTSYS7B MVC   P,SPACES                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSX),OPERMSX                                          
         GOTO1 VPRINTER                                                         
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),0      PREPARE AND/OR SEND EMAIL                    
*                                                                               
PRTSYS7C MVC   P,SPACES                                                         
PRTSYS7D LA    R3,L'INCOUNTS(R3)   BUMP TO NEXT TABLE ENTRY                     
         CLC   0(4,R3),=4X'FF'     TEST END OF TABLE                            
         BNE   PRTSYS7                                                          
         CLI   PASS,1              TEST FIRST PASS                              
         BNE   PRTSYS7E                                                         
         MVI   PASS,2                                                           
         ICM   R3,15,=V(LDRCVDT)   TEST IF SYSTEM TABLE DEFINED                 
         BZ    PRTSYS7E                                                         
         CLC   0(4,R3),=4X'FF'     TEST EMPTY SYSTEM TABLE                      
         BNE   PRTSYS7                                                          
PRTSYS7E EQU   *                                                                
*                                                                               
PRTSYS8  CLI   HOURS,C'Y'          PRINT HOURLY STATISTICS                      
         BNE   PRTSYS9                                                          
         L     RF,=A(PSTATS)                                                    
         BASR  RE,RF                                                            
*                                                                               
PRTSYS9  CLI   ACTV,0              PRINT USER ACTIVITY COUNTS                   
         BE    PRTSYSA                                                          
         L     RF,=A(ACTPRT)                                                    
         BASR  RE,RF                                                            
*                                                                               
PRTSYSA  ICM   RF,15,=V(LDCOUNT)   TEST IF SYSTEM DIR COUNT ROUTINE             
         BZ    PRTSYSB                                                          
         TM    COUNT,YES           TEST IF COUNT=Y                              
         BZ    PRTSYSB                                                          
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'FF'         CALL SYSTEM DIR COUNT TO PRINT               
         MVC   4(1,R1),RFILTY      PASS FILE NUMBER                             
         BASR  RE,RF                                                            
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
*                                                                               
PRTSYSB  TM    SMF,YES             OUTPUT SMF RECORDS FOR THIS SYSTEM           
         BZ    PRTSYSC                                                          
         L     RF,=A(SMFDATA)                                                   
         BASR  RE,RF                                                            
*                                                                               
PRTSYSC  XC    INPCNT,INPCNT       CLEAR COUNTERS FOR NEXT SYSTEM               
         XC    INPDEL,INPDEL                                                    
         XC    DELCNT,DELCNT                                                    
         XC    INPPTR,INPPTR                                                    
         XC    PTRDEL,PTRDEL                                                    
         XC    SYSCNT,SYSCNT                                                    
         XC    DTECNT,DTECNT                                                    
         XC    UNKCNT,UNKCNT                                                    
         XC    DSKERR,DSKERR                                                    
         XC    RCVBIG,RCVBIG                                                    
         XC    RCVLER,RCVLER                                                    
         XC    BADREC,BADREC                                                    
*                                                                               
PRTSYSX  TM    INPUT,TAPE          BACK FOR NEXT SYSTEM IF INPUT=DISK           
         BZ    NXTSYS                                                           
         B     PRTEOF8                                                          
         EJECT                                                                  
***********************************************************************         
* READ RECOVERY FILE & PUT RECORDS TO OUTPUT RECOVERY DUMP TAPE(S)    *         
***********************************************************************         
READ     TM    INPUT,TAPE          READ RECOVERY RECORD FROM TAPE               
         BZ    READDSK                                                          
READTPE  XC    RECDATA,RECDATA     SET VALID RECORD                             
         L     R1,=A(TAPEIN)                                                    
         GET   (1),(7)                                                          
*                                                                               
READTPE1 L     RE,INPCNT           BUMP TOTAL RECORDS READ                      
         AHI   RE,1                                                             
         ST    RE,INPCNT                                                        
         C     RE,MAXRECS          TEST WITH MAXIMUM                            
         BH    EOF                                                              
         CLC   RCVLEN,RCVMAX       TEST IF RECORD IS TOOBIG                     
         BNH   READ3                                                            
         MVC   RCVBAD,RCVLEN                                                    
         MVC   RCVLEN,RCVMAX       SET LEN TO MAXIMUM                           
         OI    RECOK,X'01'         SET TOOBIG FLAG                              
         B     READ3                                                            
*                                                                               
READDSK  L     R0,=A(DSKREC)       READ RECOVERY RECORD FROM DISK               
         XC    RECDATA,RECDATA     SET VALID RECORD                             
*                                                                               
READMVS  CLI   MVSIN,C'Y'          TEST READING MVSFILE                         
         BNE   READRCV                                                          
         L     RF,=A(HDRREC)                                                    
         MVI   HDRWHY,C'R'         SET READ NEXT MVSFILE RECORD                 
         BASR  RE,RF                                                            
         CLI   MVSIN,C'Y'                                                       
         BNE   READDSK             END-OF-FILE ON MVSFILE                       
         B     READTPE1                                                         
*                                                                               
READRCV  MVI   BYTE1,X'38'         38 READ FOR DELETES                          
         CLI   MVS,C'N'                                                         
         JNE   *+8                                                              
         MVI   BYTE1,X'3C'         3C READ FOR DELETES (NO MVS)                 
*                                                                               
         GOTO1 VDATAMGR,DMCB,(BYTE1,DMRSEQ),RECOVER,DMDA,(R0),ATRKBUFF          
         TM    8(R1),X'80'                                                      
         BO    NXTSYSX             END-OF-FILE ON RECOVERY FILE                 
*                                                                               
         CLC   DMDA,MVSTHIS        SAME DA AS AN MVS HEADER                     
         JE    *+10                                                             
         XC    MVSTHIS,MVSTHIS     CLEAR THIS WHEN DA UPDATES                   
         MVI   MVSHDR,C'N'         SET NOT AN MVS HEADER ANY MORE               
*                                                                               
READ1    L     RE,INPCNT           BUMP TOTAL RECORDS READ                      
         AHI   RE,1                                                             
         ST    RE,INPCNT                                                        
         C     RE,MAXRECS          TEST WITH MAXIMUM                            
         BH    NXTSYSX                                                          
         CLI   8(R1),0             TEST ERROR POSTED                            
         BNE   READ1A                                                           
*NOP*    L     RF,=A(DEBUG)        *DEBUG* CODE TO PATCH RECORD                 
*NOP*    BASR  RE,RF               *DEBUG*                                      
         B     READ2                                                            
*                                                                               
READ1A   MVI   DSKERRF,C'Y'        RECOVERY FILE DISK ERROR                     
         L     RE,DSKERR                                                        
         AHI   RE,1                                                             
         ST    RE,DSKERR                                                        
         LH    RE,PRTCNT           BUMP RECORDS PRINTED COUNT                   
         AHI   RE,1                                                             
         STH   RE,PRTCNT                                                        
         CH    RE,PRTMAX           TEST MAXIMUM RECORDS TO PRINT                
         BH    READ1D                                                           
*                                                                               
READ1B   MVC   P,SPACES            BUILD ERROR MESSAGE                          
         MVC   P(9),=C'**ERROR**'                                               
         MVC   P+10(08),DDNADDN                                                 
         MVC   P+19(15),=C'RCVFILE DSK ERR'                                     
         MVC   P+35(30),DYNDSN                                                  
         MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSX,OPERMSX)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSX),OPERMSX                                          
         GOTO1 VPRINTER                                                         
*                                                                               
READ1C   MVC   P(9),=C'**ERROR**'                                               
         MVC   P+10(21),=C'DA=XXXXXXXX,DMCB+8=XX'                               
         GOTO1 VHEXO24,PARA,DMDA,P+13,4                                         
         GOTO1 (RF),(R1),DMCB+8,P+29,1                                          
         MVC   P+32(22),=C'SKIPPING TO NEXT TRACK'                              
         MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 VPRINTER                                                         
*                                                                               
READ1D   L     R2,DDNAADTF         GET A(DTF) FOR RECOVERY FILE                 
         TM    DTFTYPE-DTF(R2),DTFTBIGF                                         
         BO    READ1F                                                           
*                                                                               
READ1E   L     RF,DMDA             16-BIT BUMP TO NEXT TRACK                    
         SRL   RF,16                                                            
         LA    RF,1(RF)                                                         
         SLL   RF,16                                                            
         ST    RF,DMDA                                                          
         OI    DMDA+2,1            TTTT0100                                     
         B     READ                                                             
*                                                                               
READ1F   L     RF,DMDA             20-BIT BUMP TO NEXT TRACK                    
         SRL   RF,12                                                            
         LA    RF,1(RF)                                                         
         SLL   RF,12                                                            
         ST    RF,DMDA                                                          
         OI    DMDA+2,1            TTTTT100                                     
         B     READ                                                             
*                                                                               
READ2    SR    R1,R1               GET RECORD LENGTH                            
         ICM   R1,3,DMCB+18                                                     
         AHI   R1,4                                                             
         STH   R1,RCVLEN           SET LEN+4 IN TAPE RECORD                     
         XC    RCVLEN+2(2),RCVLEN+2                                             
*                                                                               
READ2A   CH    R1,RCVMAX           TEST IF RECORD IS TOOBIG                     
         BNH   READ2B                                                           
         MVC   RCVBAD,RCVLEN                                                    
         LH    R1,RCVMAX                                                        
         STH   R1,RCVLEN           SET LEN TO MAXIMUM                           
         OI    RECOK,X'01'         SET TOOBIG FLAG                              
READ2B   LA    RE,RCVHDR                                                        
         AHI   R1,-4                                                            
         LR    RF,R1                                                            
         MVCL  RE,R0               MOVE RECORD TO TAPE BUFFER                   
*                                                                               
READ3    CLI   HOURS,C'Y'          TEST IF HOURLY STATISTICS WANTED             
         BNE   READ3A                                                           
         TM    RRECTY,X'80'        TEST IF RECORD IS A POINTER                  
         BO    READ3A                                                           
         L     RF,=A(STATS)                                                     
         BASR  RE,RF                                                            
*                                                                               
READ3A   CLI   RSIN,X'FF'          TEST IF RECORD IS DELETED                    
         BNE   READ3B                                                           
         OI    RECSPCL,X'80'                                                    
         CLI   RFILTY,X'FF'        TEST IF A HEADER RECORD                      
         BE    READ3H                                                           
         L     RE,INPDEL           BUMP DELETED RECORDS READ                    
         AHI   RE,1                                                             
         ST    RE,INPDEL                                                        
         CLI   DELETE,C'Y'         TEST IF WANT TO DUMP DELETED RECORDS         
         BE    READ3A1                                                          
         L     RE,DELCNT           BUMP DELETED RECORDS SKIPPED                 
         AHI   RE,1                                                             
         ST    RE,DELCNT                                                        
         B     READ                                                             
                                                                                
READ3A1  CLC   RCVLEN,RCVMIN       ENSURE ITS A VALID LOOKING RECORD            
         BNL   *+10                                                             
         MVC   RCVLEN,RCVMIN                                                    
         B     READ4               DUMP DELETED RECORD                          
*                                                                               
READ3B   TM    RRECTY,X'80'        TEST IF RECORD IS A POINTER                  
         BZ    READ3C                                                           
         OI    RECSPCL,X'40'                                                    
         L     RE,INPPTR           BUMP POINTER RECORDS READ                    
         AHI   RE,1                                                             
         ST    RE,INPPTR                                                        
         CLI   POINTER,C'Y'        TEST IF WANT TO DUMP POINTER RECORDS         
         BE    READ3B1                                                          
         L     RE,PTRDEL           BUMP POINTER RECORDS SKIPPED                 
         AHI   RE,1                                                             
         ST    RE,PTRDEL                                                        
         B     READ                                                             
*                                                                               
READ3B1  CLC   RCVLEN,RCVMIN       ENSURE ITS A VALID LOOKING RECORD            
         BNL   *+10                                                             
         MVC   RCVLEN,RCVMIN                                                    
         B     READ4               DUMP POINTER RECORD                          
*                                                                               
READ3C   CLC   RCVLEN,RCVMIN       IGNORE TOO SHORT RECORDS                     
         BNL   READ3C1                                                          
         LHI   R1,1                                                             
         B     READ3D                                                           
*                                                                               
READ3C1  CLI   RRECTY,1            IGNORE UNKNOWN RECORD TYPES                  
         BL    *+12                                                             
         CLI   RRECTY,3                                                         
         BNH   READ4                                                            
         LHI   R1,5                                                             
READ3D   L     RE,UNKCNT           BUMP UNKNOWN RECORDS READ                    
         AHI   RE,1                                                             
         ST    RE,UNKCNT                                                        
         LHI   R0,1                SET WRITE RECORD TO RCVCBAD TAPE             
         L     RF,=A(PRTBAD)                                                    
         BASR  RE,RF                                                            
         B     READ                                                             
*                                                                               
READ3H   L     RF,=A(HDRREC)       PROCESS HEADER AND TRAILER RECORDS           
         MVI   HDRWHY,C'P'                                                      
         BASR  RE,RF                                                            
         BNP   READ                DELETE OR INVALID HEADER RECORD              
*                                                                               
READ4    SR    R8,R8               R8=A(RECOVERY RECORD TRAILER)                
         STH   R8,LTRAIL                                                        
         ST    R8,ATRAIL                                                        
         TM    RTIME,X'40'                                                      
         BZ    READ4A              NO RECOVERY TRAILER FOR THIS RECORD          
         TM    RECOK,X'01'                                                      
         BO    READ4A              NO RECOVERY TRAILER IF TOOBIG                
         ICM   R8,3,RCVLEN                                                      
         AR    R8,R7                                                            
         AHI   R8,-1               POINT TO LAST BYTE                           
         LLC   R1,0(R8)            LENGTH IS IN LAST BYTE                       
         STH   R1,LTRAIL                                                        
         SR    R8,R1                                                            
         AHI   R8,1                                                             
         ST    R8,ATRAIL           SAVE A(TRAILER)                              
         USING RECVEXT,R8                                                       
READ4A   TM    RECSPCL,X'C0'       TEST IF DELETED OR POINTER RECORD            
         BNZ   READA                                                            
*                                                                               
READ5    CLI   TDYONLY,C'Y'        TODAY ONLY                                   
         BNE   READ5A                                                           
         CLC   TODAYB,RDATE                                                     
         BE    READ5A                                                           
         L     RE,DTECNT           BUMP NOT TODAY RECORDS SKIPPED               
         AHI   RE,1                                                             
         ST    RE,DTECNT                                                        
         B     READ                                                             
*                                                                               
READ5A   L     R1,SINOFF           BUMP SIN FOR RSIN OFFLINE                    
         AHI   R1,1                                                             
         ST    R1,SINOFF                                                        
*                                                                               
READ6    XC    FTABADR,FTABADR     LOCATE FILE BY ITS NUMBER                    
         MVI   FILTYP,0            SET UNKNOWN FILE                             
         MVI   ERRNUM,0                                                         
         MVC   DANAMF,SPACES                                                    
         MVC   ISNAMF,SPACES                                                    
         ICM   R3,15,SYSAFTAB      R3=A(FILE TABLE ENTRY)                       
         BZ    READ10                                                           
         USING FILETABD,R3                                                      
*                                                                               
READ6A   CLI   FILENUM,0           END OF FILE TABLE                            
         BE    READ6C                                                           
         CLC   FILENUM,RFILTY                                                   
         BE    READ6B                                                           
         LA    R3,FILETABL(R3)                                                  
         B     READ6A                                                           
*                                                                               
READ6B   ST    R3,FTABADR          SAVE A(FILE ENTRY)                           
         MVC   DANAMF(7),FILENAME                                               
         TM    FILESFL1,X'02'      TEST INDEX SEQ FILE                          
         BZ    READ7                                                            
         OI    FILTYP,TYPISF                                                    
         MVC   ISNAMF(7),FILENAME                                               
         MVC   DANAMF,SPACES                                                    
         B     READ7                                                            
*                                                                               
READ6C   ST    R3,FTABADR          SAVE A(UNKNOWN FILE ENTRY)                   
         MVC   DANAMF(7),FILENAME                                               
         TM    RECOK,X'01'         TEST IF TOOBIG RECORD                        
         BZ    READ6D                                                           
         L     RE,RCVBIG           BUMP RCVBIG COUNT                            
         AHI   RE,1                                                             
         ST    RE,RCVBIG                                                        
         LHI   R0,1                SET WRITE RECORD TO RCVCBAD TAPE             
         LHI   R1,2                SET LEN>8K RECORD                            
         L     RF,=A(PRTBAD)                                                    
         BASR  RE,RF                                                            
         B     READ                                                             
*                                                                               
READ6D   L     RE,UNKCNT           BUMP UNKNOWN RECORDS READ                    
         AHI   RE,1                                                             
         ST    RE,UNKCNT                                                        
         LHI   R0,1                SET WRITE RECORD TO RCVCBAD TAPE             
         LHI   R1,6                SET UNKNOWN FILE NUMBER                      
         L     RF,=A(PRTBAD)                                                    
         BASR  RE,RF                                                            
         B     READ                                                             
*                                                                               
READ7    ICM   RF,15,=V(LDRCVD)    TEST IF SYSTEM RCV DUMP ROUTINE              
         BZ    READ8                                                            
         LA    R1,PLRCVD                                                        
         MVI   0(R1),1             SET PROCESS RECOVERY RECORD                  
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST TO DELETE RECOVERY RECORD               
         BNE   READ8                                                            
         L     RE,SYSCNT           BUMP SYSTEM RECORDS SKIPPED                  
         AHI   RE,1                                                             
         ST    RE,SYSCNT                                                        
         B     READ                                                             
*                                                                               
READ8    ICM   RF,15,=V(LDCOUNT)   TEST IF SYSTEM DIR COUNT ROUTINE             
         BZ    READ9                                                            
         TM    COUNT,YES           TEST IF COUNT=Y                              
         BZ    READ9                                                            
         TM    FILESFL1,X'02'      TEST IF INDEX SEQ FILE                       
         BZ    READ9                                                            
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),1             SET PROCESS RECOVERY RECORD                  
         MVC   4(1,R1),RFILTY      PASS FILE NUMBER                             
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST TO DELETE RECOVERY RECORD               
         BNE   READ9                                                            
         L     RE,SYSCNT           BUMP SYSTEM RECORDS SKIPPED                  
         AHI   RE,1                                                             
         ST    RE,SYSCNT                                                        
         B     READ                                                             
*                                                                               
READ9    LLC   R1,RRECTY           UPDATE FILE ACCUMS                           
         SLL   R1,2                                                             
         LA    R1,FILECNTS-L'FILECNTS(R1)                                       
         ICM   RF,15,0(R1)                                                      
         AHI   RF,1                                                             
         STCM  RF,15,0(R1)                                                      
         ICM   RF,15,FILETOTS                                                   
         AHI   RF,1                                                             
         STCM  RF,15,FILETOTS                                                   
*                                                                               
READ9A   LTR   R8,R8               TEST CHANGE MADE BY DDS TERMINAL             
         BZ    READ10                                                           
         CLI   RSIN,X'FE'          OFFLINE COPY/CHANGE PAIR                     
         BE    READ10                                                           
         CLI   RSIN,X'FD'          OFFLINE CHANGE ONLY                          
         BE    READ10                                                           
         CLC   RSIN,=F'1'          OFFLINE RECOVERY RECORD                      
         BNH   READ10                                                           
         TM    RCTSTAT,RCTSTDTE    TEST DDS TERMINAL                            
         BZ    READ10                                                           
         TM    RCTSTAT,RCTSTTKT                                                 
         BO    *+14                                                             
         CLC   RLUID(5),=C'DUMMY'  TEST SCRIPTED TRANSACTION                    
         BE    READ10                                                           
         ICM   RF,15,16(R1)                                                     
         AHI   RF,1                                                             
         STCM  RF,15,16(R1)                                                     
         ICM   RF,15,FILDTOTS                                                   
         AHI   RF,1                                                             
         STCM  RF,15,FILDTOTS                                                   
*                                                                               
READ10   TM    ACTV,X'04'          COUNT ONLINE UPDATIVE TRANSACTIONS           
         BZ    READ10X                                                          
         CLI   RRECTY,1            COPY TRANSACTION                             
         BE    READ10X                                                          
         CLI   RSIN,X'FE'          OFFLINE COPY/CHANGE PAIR                     
         BE    READ10X                                                          
         CLI   RSIN,X'FD'          OFFLINE CHANGE ONLY                          
         BE    READ10X                                                          
         CLC   RSIN,=F'1'          OFFLINE RECOVERY RECORD                      
         BNH   READ10X                                                          
         OC    RUSER,RUSER         MUST HAVE A USER ID DEFINED                  
         BZ    READ10X                                                          
         SR    R3,R3                                                            
         ICM   R3,1,RSYS           GET AND CHECK SE NUM                         
         CHI   R3,1                                                             
         BNH   READ10X                                                          
         CHI   R3,(QMAXR)                                                       
         BH    READ10X                                                          
         MHI   R3,(QLEN)                                                        
         L     RF,=A(ACTVUSER)                                                  
         AR    R3,RF               R3=A(ROW FOR THIS SYSTEM)                    
         USING ACTVTABD,R3                                                      
         MVC   AHSEN+1(1),RSYS     SET SE NUMBER                                
         L     R1,AHTRANS          BUMP NUMBER OF UPDATIVE ACTIONS              
         AHI   R1,1                                                             
         ST    R1,AHTRANS                                                       
         MVC   AHDATTIM,TISNOW     SET ACTIVITY DATE/TIME                       
*                                                                               
         LA    RE,AENTRY           RE=A(ENTRY FOR THIS USER)                    
         LHI   R0,(QMAXE)                                                       
READ10A  OC    0(2,RE),0(RE)       TEST EMPTY ENTRY                             
         BZ    READ10C                                                          
         CLC   0(2,RE),RUSER       TEST MATCH ON USER                           
         BE    READ10D                                                          
         AHI   RE,(L'AENTRY)       BUMP TO NEXT ENTRY                           
         BCT   R0,READ10A                                                       
         OI    AHFLAG,AHFLFULL     ROW IS FULL                                  
         B     READ10X                                                          
READ10C  LH    R1,AHCNT            BUMP NUMBER OF USERS IN ROW                  
         AHI   R1,1                                                             
         STH   R1,AHCNT                                                         
         MVC   0(2,RE),RUSER       SET NEW USER                                 
READ10D  L     R1,4(RE)            BUMP UPDATIVE ACTIONS FOR THIS USER          
         AHI   R1,1                                                             
         ST    R1,4(RE)                                                         
READ10X  EQU   *                                                                
*                                                                               
READ11   TM    SMF,YES             TEST IF WRITING SMF RECS                     
         BO    READ11A                                                          
         TM    RECOK,X'01'         TEST IF RCVBIG RECORD                        
         BO    READ11A                                                          
         TM    CHECK,YES           TEST IF DOING RECCHECK                       
         BZ    READA                                                            
*                                                                               
READ11A  L     R0,=A(DAREC)        EXTRACT LOGICAL RECORD INTO DAREC            
         LH    R1,RCVLEN                                                        
         AHI   R1,-(4+24)          SUBTRACT VLRECHDR+RCVHDR                     
         SH    R1,LTRAIL           SUBTRACT RCVTRL                              
         STH   R1,RECLEN                                                        
         LA    RE,RCVDATA                                                       
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         LH    R1,RECLEN                                                        
         AHI   R1,4                                                             
         SLL   R1,16                                                            
         ST    R1,DARECH           SET LEN+4 IN HEADER                          
*                                                                               
READ11B  L     R0,=A(DAREC)        CLEAR AREA AT END OF DAREC                   
         AH    R0,RECLEN                                                        
         L     R1,=A(DARECX)                                                    
         SR    R1,R0                                                            
         BNP   READ12                                                           
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
*                                                                               
READ12   LLC   R6,RFILTY           INDEX INTO 32-BYTE FILE TABLE                
         SLL   R6,5                                                             
         A     R6,VFILTABL                                                      
         USING FILTABD,R6          R6=A(FILE TABLE ENTRY)                       
         CLC   DMFLNUM,RFILTY                                                   
         BNE   READ12A             TEST IF NO MATCH                             
         OC    DMFLMINI,DMFLMINI                                                
         BZ    READ12A             TEST ENTRY NOT FULLY DEFINED                 
         MVC   DANAMF(7),DMFLNAME                                               
         B     READ12B                                                          
*                                                                               
READ12A  B     READ6C              SKIP UNKNOWN OR TOOBIG RECORDS               
*                                                                               
READ12B  SR    R1,R1               GET MAX LOGICAL REC LEN FOR FILE             
         ICM   R1,3,DMFLMAXI                                                    
         BZ    READ13                                                           
         CLM   R1,3,DMFLMINI       TEST FIXED LENGTH RECORDS                    
         BNE   READ12C                                                          
         CLM   R1,3,RECLEN                                                      
         BE    READ13                                                           
         B     READ12F             INVALID FIXED LENGTH REC LEN                 
*                                                                               
READ12C  SR    R0,R0               R0=LEN OF ANY EXTRA DATA IN RCVREC           
         TM    DMFLSTYP,DMFLDAL                                                 
         BZ    *+8                                                              
         IC    R0,DMFLSPR          GET SPARE BYTES ADDED BY ADDREC              
         TM    DMFLFLG1,DMFLACTV                                                
         BZ    *+8                                                              
         AHI   R0,6                ADJUST FOR ANY ACTIVITY DATA                 
         LTR   R0,R0                                                            
         BZ    READ12E                                                          
         LH    RF,RECLEN           RESET LOGICAL RECORD LENGTH                  
         SR    RF,R0                                                            
         BNP   READ12E                                                          
         CH    RF,DMFLMINI         ENSURE GREATER THAN MINIMUM                  
         BNH   READ12E                                                          
         STH   RF,RECLEN                                                        
         AHI   RF,4                                                             
         SLL   RF,16                                                            
         ST    RF,DARECH           SET NEW LEN+4 IN HEADER                      
*                                                                               
READ12E  CLM   R1,3,RECLEN         TEST IF REC LEN GREATER THAN MAX             
         BNL   READ13                                                           
READ12F  TM    RECOK,X'01'         TEST IF TOOBIG RECORD                        
         BZ    READ12G                                                          
         L     RE,RCVBIG           BUMP RCVBIG COUNT                            
         AHI   RE,1                                                             
         ST    RE,RCVBIG                                                        
         LHI   R0,1                SET WRITE RECORD TO RCVCBAD TAPE             
         LHI   R1,3                SET LEN>8K RECORD                            
         L     RF,=A(PRTBAD)                                                    
         BASR  RE,RF                                                            
         B     READ13                                                           
READ12G  L     RE,RCVLER           BUMP RCVLER COUNT                            
         AHI   RE,1                                                             
         ST    RE,RCVLER                                                        
         LHI   R0,1                SET WRITE RECORD TO RCVCBAD TAPE             
         LHI   R1,4                SET INVALID RECOVERY LEN RECORD              
         L     RF,=A(PRTBAD)                                                    
         BASR  RE,RF                                                            
*                                                                               
READ13   TM    DMFLTYP,DMFLIS      TEST INDEX SEQ FILE                          
         BZ    READ14                                                           
         OI    FILTYP,TYPISF                                                    
         MVC   ISNAMF(7),DMFLNAME                                               
         TM    DMFLSTYP,DMFLFIX    TEST FIXED LEN                               
         BO    *+16                                                             
         CLI   DMFLNUM,X'A1'       CTFILE HAS V/L RECORDS AND ELEMENTS          
         BE    READ14A             VALIDATE RECORD LENGTH                       
         B     READ13C                                                          
         OI    FILTYP,TYPISFF                                                   
         LH    R1,DARECH           GET LEN OF DAREC                             
         CHI   R1,255                                                           
         BL    *+8                                                              
         LHI   R1,255                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISRECH(0),DARECH    COPY DAREC TO ISREC                          
*                                                                               
READ13A  ICM   RF,15,=V(LDTPTR)    TEST PASSIVE POINTER ROUTINE AVAIL           
         BZ    READ13C                                                          
         LA    R1,PLTPTRS          SET PARAM LIST                               
         MVI   0(R1),0                                                          
         MVC   4(1,R1),RFILTY      PASS FILE NUMBER                             
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST IF PASSIVE POINTER                      
         BNE   READ13C                                                          
         OI    FILTYP,TYPPAS       SET RECORD IS A PASSIVE FLAG                 
*                                                                               
READ13B  ICM   R3,15,FTABADR       R3=A(FILE ENTRY)                             
         BZ    READ13C                                                          
         USING FILETABD,R3                                                      
         LLC   R1,RRECTY           UPDATE FILE PASSIVE ACCUMS                   
         SLL   R1,2                                                             
         LA    R1,FILPCNTS-L'FILPCNTS(R1)                                       
         ICM   RF,15,0(R1)                                                      
         AHI   RF,1                                                             
         STCM  RF,15,0(R1)                                                      
         ICM   RF,15,FILPTOTS                                                   
         AHI   RF,1                                                             
         STCM  RF,15,FILPTOTS                                                   
*                                                                               
READ13C  B     READ20                                                           
*                                                                               
READ14   TM    DMFLSTYP,DMFLDAL    TEST DA LINKED                               
         BZ    READ20                                                           
         OI    FILTYP,TYPDAF                                                    
         LLC   R1,DMFLKEYL         MOVE KEY TO ISREC                            
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),DAREC                                                   
         AHI   R1,4                                                             
         SLL   R1,16                                                            
         ST    R1,ISRECH                                                        
*                                                                               
READ14A  CLC   RECLEN,DMFLMINI     TEST MIN REC LEN                             
         BNL   READ14B                                                          
         OI    RECOK,X'20'                                                      
         MVI   ERRNUM,2                                                         
         B     READ14C                                                          
READ14B  CLC   RECLEN,DMFLMAXI     TEST MAX REC LEN                             
         BNH   READ14C                                                          
         OI    RECOK,X'40'                                                      
         MVI   ERRNUM,1                                                         
*                                                                               
READ14C  TM    CHECK,YES           TEST RECCHECK=Y                              
         BO    *+12                                                             
         TM    RECOK,X'61'         TEST INVALID RECORD                          
         BZ    READ20                                                           
         CLI   RRECTY,1            NOT NEEDED FOR COPIES                        
         BE    READ20                                                           
*                                                                               
READ14D  XC    ISDAVALS,ISDAVALS   SET VALUES NEEDED BY RECVAL                  
         MVC   FLTYP(4),DMFLTYP                                                 
         MVC   ISKEYL+1(1),DMFLKEYL                                             
         MVC   ISRECL+1(1),DMFLKEYL                                             
         MVC   DAKEYL+1(1),DMFLKEYL                                             
         MVC   DAELD+1(1),DMFLELD                                               
         MVC   DAMIN,DMFLMINI                                                   
         MVC   DAMAX,DMFLMAXI                                                   
*                                                                               
READ14E  LA    RF,DAREC            GET REC LEN FROM RECORD                      
         LH    RE,DAKEYL                                                        
         AR    RE,RF                                                            
         SR    R0,R0                                                            
         ICM   R0,3,0(RE)                                                       
         STH   R0,LGLLEN           SAVE LOGICAL RECORD LENGTH                   
         XC    LGLEOR,LGLEOR                                                    
         CH    R0,DMFLMAXI                                                      
         BH    READ14F                                                          
         CH    R0,DMFLMINI                                                      
         BL    READ14F                                                          
         AR    RF,R0                                                            
         MVC   LGLEOR,0(RF)        SAVE TWO BYTES AT LOGICAL END                
         XC    0(2,RF),0(RF)       CLEAR TWO BYTES AT LOGICAL END               
*                                                                               
READ14F  MVI   MODE,DAFIL          SET FLAGS FOR RECVAL                         
         L     RF,=A(RECVAL)                                                    
         BASR  RE,RF                                                            
         BE    READ20              RECORD IS OK                                 
         TM    OUTPUT,X'10'        TEST IF WRITING BAD REC TAPE                 
         BZ    READ15                                                           
         CLI   OUT4,C'B'           =BOTH                                        
         JE    READ14F2                                                         
         OC    MVSTHIS,MVSTHIS     IS THIS FROM MVS                             
         JZ    READ14F1                                                         
         CLI   OUT4,C'M'           =MVS                                         
         JE    READ14F2                                                         
         CLI   MVSHDR,C'Y'         IS THIS AN MVS HEADER                        
         JE    READ14F1            MVS HEADERS COUNT AS BOTH                    
         J     READ15                                                           
*                                                                               
READ14F1 CLI   OUT4,C'Y'           =Y                                           
         JNE   READD                                                            
READ14F2 L     R1,=A(RCVCBAD)                                                   
         PUT   (1),(7)                                                          
         L     RE,O4COUNT          BUMP BAD RECORD TAPE COUNT                   
         AHI   RE,1                                                             
         ST    RE,O4COUNT                                                       
*                                                                               
READ15   SR    R1,R1               TEST IF WE CHANGED THE LOGICAL LEN           
         ICM   R1,3,NEWLEN                                                      
         BZ    READ20                                                           
         XC    WORK(32),WORK       SAVE TRAILER IF IT EXISTS                    
         ICM   RE,15,ATRAIL                                                     
         BZ    *+10                                                             
         MVC   WORK(32),0(RE)                                                   
*                                                                               
READ15A  LA    RF,RCVDATA          POINT TO LOGICAL RECORD                      
         LH    RE,DAKEYL                                                        
         AR    RE,RF                                                            
         STCM  R1,3,0(RE)          SET NEW LEN IN LOGICAL RECORD                
         LA    R0,4+24(R1)                                                      
         AH    R0,LTRAIL                                                        
         STH   R0,RCVLEN           SET NEW LEN IN RECOVERY RECORD               
*                                                                               
READ15B  OC    LTRAIL,LTRAIL       MOVE TRAILER TO NEW END OF RECORD            
         BZ    READ20                                                           
         LA    RE,RCVDATA(R1)                                                   
         MVC   0(32,RE),WORK                                                    
*                                                                               
READ20   TM    SMF,YES             TEST IF SMF RECORDS                          
         BZ    READA                                                            
         ICM   R3,15,FTABADR       R3=A(FTAB FOR THIS FILE)                     
         BZ    READA                                                            
         USING FILETABD,R3                                                      
         XC    SVSSET(4),SVSSET    EXTRACT AND SAVE SMF SET DATA                
         MVC   SVSTYP(4),SPACES                                                 
         MVC   SVSSET+1(1),FILESSET                                             
         MVC   SVSNDX+1(1),FILESNDX                                             
         MVC   SVSTYP(3),FILENAME                                               
         SR    R1,R1                                                            
         ICM   R1,3,SVSSET         EXIT IF NO SMF SET FOR THIS FILE             
         BZ    READA                                                            
         MHI   R1,L'SMFSETS*2      INDEX INTO SET TABLE NETRY                   
         L     RF,=A(SMFSETS)                                                   
         AR    RF,R1               RF=A(SMFSET TABLE ENTRY)                     
*                                                                               
READ21   SR    R1,R1               GET CHG OR ADD                               
         ICM   R1,1,RRECTY                                                      
         AHI   R1,-2                                                            
         BM    READA               EXIT IF CPY                                  
         MHI   R1,L'SMFSETS                                                     
         AR    RF,R1               RF=A(SMFSET CHG OR ADD ENTRY)                
         ICM   RE,15,8(RF)         RE=A(FILE COUNTERS FOR THIS SET)             
         BZ    READA                                                            
         ST    RE,TACCADR          SAVE A(TAPE ACCUMS)                          
         MVC   2(4,RF),SVSTYP      SAVE TYPE OF ENTRY IN SET                    
*                                                                               
READ30   ICM   RF,15,=V(LDRECTY)   TEST IF COUNTING BY AGENCY                   
         BNZ   READ40                                                           
         L     RF,0(RE)            RF=A(TAPE COUNTER)                           
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP TAPE COUNTER                            
READ30A  CLI   ERRNUM,0                                                         
         BE    READ30B                                                          
         L     RF,24(RE)           RF=A(ERROR COUNTER)                          
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP ERROR COUNTER                           
READ30B  LH    R1,SVSNDX                                                        
         SLL   R1,2                                                             
         AR    RE,R1                                                            
         L     RF,0(RE)            RF=A(DISK COUNTER)                           
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP DISK COUNTER                            
         B     READA                                                            
*                                                                               
READ40   LA    R1,DAREC            TEST IF DA OR IS FILE RECORD                 
         TM    DMFLTYP,DMFLIS                                                   
         BZ    *+8                                                              
         LA    R1,ISREC                                                         
         BAS   RE,AGYTYPE          CALL V(LDRECTY)                              
*                                                                               
READ41   L     RE,TACCADR          RE=A(TAPE ACCUMULATORS)                      
         L     RF,0(RE)            RF=A(TAPE COUNTER)                           
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP TAPE COUNTER                            
         AP    4(8,RF),RECTYVM     BUMP TAPE MONEY                              
READ41A  CLI   ERRNUM,0                                                         
         BE    READ41B                                                          
         L     RF,24(RE)           RF=A(ERROR COUNTER)                          
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP ERROR COUNTER                           
READ41B  SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO                                                    
         BZ    READ43              NO AGENCY DEFINED                            
         SLL   R0,2                                                             
         ICM   RF,15,28(RF)                                                     
         BZ    READ42              NO ARRAY OF TAPE AGENCY COUNTERS             
         AR    RF,R0               RF=A(COUNTER FOR AGENCY)                     
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP TAPE AGENCY COUNTER                     
*                                                                               
READ42   L     RE,TACCADR          RE=A(TAPE ACCUMULATORS)                      
         SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO                                                    
         SLL   R0,3                EACH ENTRY IS PL8                            
         L     RF,0(RE)                                                         
         ICM   RF,15,32(RF)                                                     
         BZ    READ43              RF=A(ARRAY OF AGY/CPY MONY COUNTERS)         
         AR    RF,R0                                                            
         AP    0(8,RF),RECTYVM     BUMP TAPE AGY/CPY MONEY                      
*                                                                               
READ43   L     RE,TACCADR          RE=A(LIST ACCUMULATORS FOR TAPE)             
         LH    R1,SVSNDX                                                        
         SLL   R1,2                                                             
         AR    RE,R1               RE=A(LIST ACCUMULATORS FOR DISK)             
         ST    RE,DACCADR                                                       
         L     RF,0(RE)            RF=A(DISK COUNTER)                           
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP DISK COUNTER                            
         AP    4(8,RF),RECTYVM     BUMP DISK MONEY                              
         SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO                                                    
         BZ    READ45              NO AGENCY DEFINED                            
         SLL   R0,2                                                             
         ICM   RF,15,28(RF)                                                     
         BZ    READ44              NO ARRAY OF DISK AGY/CPY COUNTERS            
         AR    RF,R0               RF=A(COUNTER FOR AGY/CPY)                    
         L     R0,0(RF)                                                         
         AHI   R0,1                                                             
         ST    R0,0(RF)            BUMP DISK AGY/CPY COUNTER                    
*                                                                               
READ44   L     RE,DACCADR          RE=A(LIST ACCUMULATORS FOR DISK)             
         SR    R0,R0                                                            
         ICM   R0,1,RTYRAGCO                                                    
         SLL   R0,3                                                             
         L     RF,0(RE)                                                         
         ICM   RF,15,32(RF)        RF=A(ARRAY OF AGY/CPY MONEY FIELDS)          
         BZ    READ45                                                           
         AR    RF,R0                                                            
         AP    0(8,RF),RECTYVM     BUMP DISK AGY/CPY MONEY                      
*                                                                               
READ45   EQU   *                                                                
*                                                                               
READA    TM    OUTPUT,X'02'        RCVTAPE REQUIRED                             
         BZ    READB                                                            
         CLI   OUT1,C'B'           =BOTH                                        
         JE    READA2                                                           
         OC    MVSTHIS,MVSTHIS     IS THIS FROM MVS                             
         JZ    READA1                                                           
         CLI   OUT1,C'M'           =MVS                                         
         JE    READA2                                                           
         CLI   MVSHDR,C'Y'         IS THIS AN MVS HEADER                        
         JE    READA1              MVS HEADERS COUNT AS BOTH                    
         J     READB                                                            
*                                                                               
READA1   CLI   OUT1,C'Y'           =Y                                           
         JNE   READB                                                            
*                                                                               
READA2   L     R1,=A(RCVTAPE)                                                   
         PUT   (1),(7)                                                          
         L     RE,O1COUNT                                                       
         AHI   RE,1                                                             
         ST    RE,O1COUNT                                                       
*                                                                               
READB    TM    OUTPUT,X'04'        RCVCOPY REQUIRED - EXTRA COPY                
         BZ    READC                                                            
         CLI   OUT2,C'B'           =BOTH                                        
         JE    READB2                                                           
         OC    MVSTHIS,MVSTHIS     IS THIS FROM MVS                             
         JZ    READB1                                                           
         CLI   OUT2,C'M'           =MVS                                         
         JE    READB2                                                           
         CLI   MVSHDR,C'Y'         IS THIS AN MVS HEADER                        
         JE    READB1              MVS HEADERS COUNT AS BOTH                    
         J     READC                                                            
*                                                                               
READB1   CLI   OUT2,C'Y'           =Y                                           
         JNE   READC                                                            
READB2   L     R1,=A(RCVCOPY)                                                   
         PUT   (1),(7)                                                          
         L     RE,O2COUNT                                                       
         AHI   RE,1                                                             
         ST    RE,O2COUNT                                                       
*                                                                               
READC    TM    OUTPUT,X'08'        RCVCDDS REQUIRED - DDS CHANGES ONLY          
         BZ    READD                                                            
         CLI   OUT3,C'B'           =BOTH                                        
         JE    READC2                                                           
         OC    MVSTHIS,MVSTHIS     IS THIS FROM MVS                             
         JZ    READC1                                                           
         CLI   OUT3,C'M'           =MVS                                         
         JE    READC2                                                           
         CLI   MVSHDR,C'Y'         IS THIS AN MVS HEADER                        
         JE    READC1              MVS HEADERS COUNT AS BOTH                    
         J     READD                                                            
*                                                                               
READC1   CLI   OUT3,C'Y'           =Y                                           
         JNE   READD                                                            
READC2   LTR   R8,R8               NO TRAILER ON THIS RECORD                    
         BZ    READD                                                            
         CLI   RSIN,X'FE'          OFFLINE COPY/CHANGE PAIR                     
         BE    READD                                                            
         CLI   RSIN,X'FD'          OFFLINE CHANGE ONLY                          
         BE    READD                                                            
         CLC   RSIN,=F'1'          OFFLINE RECOVERY RECORD                      
         BNH   READD                                                            
         TM    RCTSTAT,RCTSTDTE    TEST DDS TERMINAL                            
         BZ    READD                                                            
         TM    RCTSTAT,RCTSTSUP    TEST MAINTENANCE SPECIAL UPDATE              
         BO    READD                                                            
         TM    RCTSTAT,RCTSTTKT                                                 
         BO    *+14                                                             
         CLC   RLUID(5),=C'DUMMY'  TEST SCRIPTED TRANSACTION                    
         BE    READD                                                            
         CLI   RPRG,X'01'          TEST PFM                                     
         BE    *+12                                                             
         BAS   RE,TSTAGY           TEST IF DDS TEST AGENCY                      
         BE    READD                                                            
         L     R1,=A(RCVCDDS)                                                   
         PUT   (1),(7)                                                          
         L     RE,O3COUNT                                                       
         AHI   RE,1                                                             
         ST    RE,O3COUNT                                                       
*                                                                               
READD    B     READ                                                             
         EJECT                                                                  
***********************************************************************         
* PRINT INPUT TAPE COUNTERS AND OUTPUT TAPE TOTALS                    *         
***********************************************************************         
EOF      EQU   *                   END OF FILE ON INPUT TAPE                    
*                                                                               
PRTEOF   TM    INPUT,TAPE          PRINT INPUT TAPE COUNTERS                    
         BZ    PRTEOF8                                                          
         CP    SYSCOUNT,=P'1'      UNLESS A SYSTEM NAME WAS INPUT               
         BE    PRTSYS                                                           
         ICM   R3,15,=A(FTAB00)    POINT TO ALL FILES TABLE                     
         MVI   FLAG,0                                                           
         MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         L     RF,=A(HEAD1L)                                                    
         MVC   P(HEAD1LX-HEAD1L),0(RF)                                          
         GOTO1 =V(PRINTER)                                                      
         L     RF,=A(UNDR1L)                                                    
         MVC   P(UNDR1LX-UNDR1L),0(RF)                                          
         GOTO1 =V(PRINTER)                                                      
         USING FILETABD,R3                                                      
*                                                                               
PRTEOF1  CLI   FILENUM,X'FF'                                                    
         BE    PRTEOF4                                                          
         OC    FILECNTS(FILECNTL),FILECNTS                                      
         BNZ   *+12                                                             
         TM    FLAG,X'80'          TEST TO PRINT ZERO COUNTERS                  
         BZ    PRTEOF3                                                          
         OI    FLAG,X'01'          SET ONE ROW OF COUNTERS PRINTED              
         MVC   P(7),FILENAME                                                    
         LA    R1,P+17                                                          
         LA    RE,FILECNTS                                                      
         LA    RF,FILECNTN                                                      
*                                                                               
PRTEOF2  CHI   RF,5                DONT PRINT DDS TOTAL                         
         BE    PRTEOF2B                                                         
         CHI   RF,1                DONT PRINT PASSIVE TOTAL                     
         BE    PRTEOF2B                                                         
         MVC   0(9,R1),=9C'.'      SET NULL COUNTER                             
         ICM   R0,15,0(RE)                                                      
         BZ    PRTEOF2A                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  0(9,R1),DUB                                                      
PRTEOF2A LA    R1,10(R1)                                                        
PRTEOF2B LA    RE,4(RE)                                                         
         BCT   RF,PRTEOF2                                                       
         GOTO1 VPRINTER                                                         
PRTEOF3  LA    R3,FILETABL(R3)                                                  
         B     PRTEOF1                                                          
*                                                                               
PRTEOF4  TM    FLAG,X'01'          DID WE PRINT SOME COUNTERS                   
         BO    PRTEOF4X                                                         
         OI    FLAG,X'80'          SET TO PRINT A ROW OF ZEROS                  
         L     R3,=A(FILTABFF)     POINT TO ZERO COUNTERS TABLE                 
         B     PRTEOF1                                                          
PRTEOF4X GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTEOF5  LAY   RF,HEAD2L           PRINT INPUT COUNTERS                         
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
         LAY   RF,UNDR2L                                                        
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
         LA    R3,INCOUNTS         R3=A(INPUT COUNTERS)                         
         LA    R0,INCOUNTN                                                      
*                                                                               
PRTEOF6  ICM   RE,15,0(R3)         DONT PRINT ZERO COUNTERS                     
         BZ    PRTEOF6D                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P(16),4(R3)                                                      
         UNPK  P+17(9),DUB                                                      
PRTEOF6A CLI   20(R3),C'E'         TEST ERROR COUNTER                           
         BNE   PRTEOF6B                                                         
         OC    LDCOND,=X'000C'                                                  
         MVC   P+27(9),=C'**ERROR**'                                            
         B     PRTEOF6C                                                         
PRTEOF6B CLI   20(R3),C'W'         TEST WARNING COUNTER                         
         BNE   PRTEOF6C                                                         
         OC    LDCOND,=X'0008'                                                  
         MVC   P+27(9),=C'*WARNING*'                                            
*                                                                               
PRTEOF6C GOTO1 =V(PRINTER)                                                      
PRTEOF6D LA    R3,L'INCOUNTS(R3)                                                
         BCT   R0,PRTEOF6                                                       
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R3,INCOUNTS         CONSOLE/EMAIL ERRORS/WARNINGS                
         LA    R0,INCOUNTN                                                      
PRTEOF7  ICM   RE,15,0(R3)         DONT PRINT ZERO COUNTERS                     
         BZ    PRTEOF7D                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P(16),4(R3)                                                      
         UNPK  P+17(9),DUB                                                      
*                                                                               
         CLI   20(R3),C'E'         TEST ERROR COUNTER                           
         BNE   *+14                                                             
         MVC   P+27(9),=C'**ERROR**'                                            
         B     PRTEOF7A                                                         
         CLI   20(R3),C'W'         TEST WARNING COUNTER                         
         BNE   PRTEOF7C                                                         
         MVC   P+27(9),=C'*WARNING*'                                            
*                                                                               
PRTEOF7A MVC   OPERMSX,SPACES      CONSOLE/EMAIL ERRORS AND WARNINGS            
         MVC   OPERMSG+00(09),P+27                                              
         MVC   OPERMSG+10(08),DDNADDN                                           
         MVC   OPERMSG+19(26),P                                                 
         MVC   OPERMSG+46(30),DYNDSN                                            
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSX,OPERMSX)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSX),OPERMSX                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),0      PREPARE AND/OR SEND EMAIL                    
*                                                                               
PRTEOF7C MVC   P,SPACES                                                         
PRTEOF7D LA    R3,L'INCOUNTS(R3)                                                
         BCT   R0,PRTEOF7                                                       
         GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTEOF8  LAY   RF,HEAD3L           PRINT OUTPUT COUNTERS                        
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
         LAY   RF,UNDR3L                                                        
         MVC   P(26),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
         LA    R3,OTCOUNTS         R3=A(OUTPUT COUNTERS)                        
         LA    R0,OTCOUNTN                                                      
*                                                                               
PRTEOF9  ICM   RE,15,0(R3)         DONT PRINT ZERO COUNTERS                     
         BZ    PRTEOF9A                                                         
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P(16),4(R3)                                                      
         UNPK  P+17(9),DUB                                                      
         GOTO1 =V(PRINTER)                                                      
PRTEOF9A LA    R3,L'OTCOUNTS(R3)                                                
         BCT   R0,PRTEOF9                                                       
         GOTO1 =V(PRINTER)                                                      
         EJECT                                                                  
***********************************************************************         
* CLOSE ALL OUTPUT TAPES AND ERASE RECOVERY FILE IF REQUESTED         *         
***********************************************************************         
EOF10    TM    INPUT,TAPE          CLOSE TAPEIN                                 
         BZ    EOF11                                                            
         L     R2,=A(TAPEIN)                                                    
         CLOSE ((2))                                                            
*                                                                               
EOF11    TM    OUTPUT,X'02'        CLOSE RCVTAPE                                
         BZ    EOF12                                                            
         L     R2,=A(RCVTAPE)                                                   
         CLOSE ((2))                                                            
*                                                                               
EOF12    TM    OUTPUT,X'04'        CLOSE RCVCOPY                                
         BZ    EOF13                                                            
         L     R2,=A(RCVCOPY)                                                   
         CLOSE ((2))                                                            
*                                                                               
EOF13    TM    OUTPUT,X'08'        CLOSE RCVCDDS                                
         BZ    EOF14                                                            
         L     R2,=A(RCVCDDS)                                                   
         CLOSE ((2))                                                            
*                                                                               
EOF14    TM    OUTPUT,X'10'        CLOSE RCVCBAD                                
         BZ    EOF15                                                            
         L     R2,=A(RCVCBAD)                                                   
         CLOSE ((2))                                                            
*                                                                               
EOF15    TM    ACTV,X'02'          WRITE ACTIVITY TO DISK                       
         BZ    EOF16                                                            
         BRAS  RE,WTACTV                                                        
*                                                                               
EOF16    MVI   ERASEOPT,C'E'       PERFORM ERASE IF REQUESTED                   
         BRAS  RE,ERASER           AND PRINT RESULT                             
         CLI   ERASE,C'Y'                                                       
         BNE   EXIT                                                             
         CLI   USEDADDS,C'Y'       CLOSE RECOVERY FILE                          
         BNE   EOF16A                                                           
         L     R2,DDNAADTF                                                      
         GOTO1 VDADDS,PARA,A(DACLOSE),DAREC,0,(R2),PARA+20,0                    
         B     EXIT                                                             
EOF16A   GOTO1 VDATAMGR,DMCB,DMCLSE,DMSYS,DMFLIST,DAREC                         
*                                                                               
EXIT     GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
*                                                                               
         OC    LDCOND,APPCOND      CREATE COMPOUND CONDITION CODE               
         XBASE RC=LDCOND,RL=2      EXIT WITH CC SET IF ERRORS/WARNINGS          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO TEST IF THE AGENCY IS A DDS TEST AGENCY               *         
***********************************************************************         
TSTAGY   ST    RE,SAVERE           TEST IF AGENCY IS A DDS TEST AGENCY          
         L     RE,=A(AGYTAB)                                                    
TSTAGY1  CLI   0(RE),X'FF'                                                      
         BE    TSTAGYN                                                          
         CLC   0(2,RE),RAGYSEC                                                  
         BE    TSTAGYY                                                          
         LA    RE,2(RE)                                                         
         B     TSTAGY1                                                          
TSTAGYN  CR    RE,RB                                                            
         B     TSTAGYX                                                          
TSTAGYY  CR    RE,RE                                                            
TSTAGYX  L     RE,SAVERE           EXIT WITH CC EQL IF DDS TEST AGENCY          
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* SET AGY/CPY CODE AND RECORD TYPE BY CALLING APPLICATION V(LDRECTY)  *         
* R1=A(RECORD)                                                        *         
***********************************************************************         
AGYTYPE  STM   RE,R1,SAVERER1                                                   
         XC    RECTYV,RECTYV       CLEAR RECORD TYPE VALUES                     
         ZAP   RECTYVM,=P'0'                                                    
         ICM   RF,15,=V(LDRECTY)                                                
         BZR   RE                  EXIT IF NO AGYNUM/RECTYP EXTERNAL            
         LR    R0,R1               SAVE A(RECORD)                               
         MVC   RTYPMODE,MODE       PASS MODE                                    
         MVC   RTYPFLAG,RECFLAG    PASS RECORD TYPE FLAG                        
         MVC   RTYPFNUM,RFILTY     PASS FILE NUMBER                             
         LA    RE,ISREC            TEST ISREC PASSED                            
         CR    R1,RE                                                            
         JNE   AGYT2                                                            
AGYT1    MVI   RTYPDAIS,C'I'       SET I/S FILE RECORD                          
         LA    R1,PLRECTIS                                                      
         J     AGYT3                                                            
AGYT2    MVI   RTYPDAIS,C'D'       SET D/A FILE RECORD                          
         LA    R1,PLRECTDA                                                      
AGYT3    BASR  RE,RF               PASS CONTROL TO V(LDRECTY)                   
         LM    RE,R1,SAVERER1                                                   
         BR    RE                                                               
*                                                                               
PLRECTDA DC    A(DAREC),A(DANAMF),A(RECTYV),A(0)                                
PLRECTIS DC    A(ISREC),A(ISNAMF),A(RECTYV),A(0)                                
PLTPTRS  DC    A(ISREC),A(WORK),A(0),A(0)                                       
PLCOUNT  DC    A(RCVREC+28),A(ISNAMF),A(TODAYC),A(0)                            
PLRCVD   DC    A(RCVREC+04),A(0),A(0),A(0)                                      
         EJECT                                                                  
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         LTORG                                                                  
*NOP*    DS    (4096-(*-RCVDMP))X  MUST BE AT LEAST 4K TO HERE                  
*                                                                               
VCARDS   DC    V(CARDS)                                                         
VDATAMGR DC    V(DATAMGR)                                                       
VDADDS   DC    V(DADDS)                                                         
VDMOD000 DC    V(DMOD000)                                                       
VDATCON  DC    V(DATCON)                                                        
VDATTIM  DC    V(DATTIM)                                                        
VDATVAL  DC    V(DATVAL)                                                        
VPRINTER DC    V(PRINTER)                                                       
VCPRINT  DC    V(CPRINT)                                                        
VHEXO24  DC    V(HEXO24)                                                        
VLOGIO   DC    V(LOGIO)                                                         
VFILTABL DC    A(0)                                                             
ATRKBUFF DC    A(TRKBUFF)                                                       
ASYSNTAB DC    A(SYSNTAB)                                                       
*                                                                               
* OLD LOCATION OF DUB ->                                                        
*                                                                               
WORK     DS    XL64                                                             
DATEVAL  DS    CL8                                                              
TODAY    DS    CL6                 YYMMDD                                       
TODAYB   DS    XL3                 BINARY                                       
TODAYC   DS    XL2                 COMPREESED                                   
*                                                                               
INITF    DC    X'00'               INITIALIZATION FLAGS                         
SYSCOUNT DC    PL2'0'              COUNT OF SYSTEMS TO BE DUMPED                
SYSNAME  DC    CL10' '             SYSTEM TO BE DUMPED                          
DANAMF   DC    CL8' '              DA FILE NAME                                 
ISNAMF   DC    CL8' '              IS FILE NAME                                 
EID      DS    0C                                                               
EMAILID  DC    CL72' '                                                          
*                                                                               
OPERMSX  DS    0CL100              EXTENDED MESSAGE TO OPERATOR                 
OPERMSG  DC    CL64' '             MESSAGE TO OPERATOR                          
OPERMSG1 DC    CL36' '             EXTRA OPERATOR MESSAGE AREA                  
*                                                                               
PCTMIN   DC    H'10'               MINIMUM PCT AVAIL BEFORE WARNING             
PRTMAX   DC    H'50'               MAXIMUM RECORDS TO PRINT                     
PRTCNT   DC    H'0'                COUNTER RECORDS PRINTED                      
         DS    0D                                                               
         DC    C'*RECTYV*'                                                      
RECTYV   DS    0XL8                RECORD TYPE DATA SET BY V(LDRECTY)           
RTYPMODE DC    XL1'00'             MODE                                         
RTYPFLAG DC    XL1'00'             RECORD FLAGS INPUT                           
RTYPDAIS DC    CL1' '              DAFILE/ISFILE C'D'/C'I'                      
RTYPFNUM DC    XL1'00'             FILE NUMBER                                  
RTYRAGCO DC    XL1'00'             AGENCY/COMPANY                               
RTYRRTYP DC    XL1'00'             RECORD TYPE                                  
RTYRFLAG DC    XL1'00'             RECORD FLAGS RETURN                          
         DC    XL1'00'             N/D                                          
RECTYVM  DC    PL8'0'              RECORD TYPE MONEY RETURN FIELD               
*                                                                               
INPUT    DC    X'01'               01=DISKIN,02=TAPEIN                          
OUTPUT   DC    X'02'               02=TAPE,04=COPY,08=CDDS,10=CBAD              
ACTV     DC    X'00'               01=READ,02=WRITE,04=COLLATE,08=PRINT         
*                                                                               
MVSHDR   DC    C'N'                                                             
MVSTHIS  DC    F'0'                THIS DA IS AN MVS HEADER                     
OUT1     DC    C' '                CHR USED FOR OUTPUT TAPES                    
OUT2     DC    C'B'                CAN BE N/Y/M/B                               
OUT3     DC    C' '                N=NONE Y=DISK M=MVS B=BOTH                   
OUT4     DC    C' '                                                             
*                                                                               
RCVTDSN  DC    X'00'               RCVTAPE DSN FLAG                             
RCVTDDS  EQU   X'80'               DSN=DDSDSN INPUT ON DD CARD                  
RCVTGEN  EQU   X'40'               DSN GENERATED WITH (+1)                      
RCVTLOC  EQU   X'20'               DSN GDG LOCATED                              
RCVTUSE  EQU   X'10'               DSN GDG USED IN OPEN                         
RCVTINVG EQU   X'04'               INVALID DSN GENERATION                       
RCVTINVL EQU   X'02'               INVALID GDG LOCATE                           
RCVTINVO EQU   X'01'               INVALID OPEN                                 
*                                                                               
MAXRECS  DC    F'2147483647'       MAX RECORDS TO READ                          
USEDADDS DC    C'Y'                USE V(DADDS) TO OPEN/CLOSE                   
TDYONLY  DC    C'N'                                                             
LDWRITE  DC    C'Y'                                                             
FORCE    DC    C' '                                                             
EMAIL    DC    C' '                                                             
DELETE   DC    C' '                                                             
HEADER   DC    C' '                                                             
MVS      DC    C'Y'                                                             
POINTER  DC    C' '                                                             
FLASH    DC    C' '                                                             
HOURS    DC    C'Y'                                                             
UPDID    DC    CL2' '                                                           
*                                                                               
ERASE    DS    0C                                                               
*&&UK*&& DC    C'N'                UK DEFAULTS TO ERASE=N                       
*&&US*&& DC    C' '                US REQUIRES AN ERASE=N/Y IS INPUT            
*                                                                               
GLOBAL   DC    C' '                GLOBAL=Y/N AND N/DATE REQUIRED FOR N         
GLOBALW  DC    X'00'               GLOBAL WARMING FLAGS                         
*                                                                               
ERASEOPT DC    C' '                ERASE OPTION V=VALIDATE,E=ERASE              
ERASEOK  DC    C' '                SET TO C'Y' IF OK TO ERASE                   
ERASEACT DC    C' '                SET TO C'Y' IF FILE IS ERASED                
UPDEXT   DC    C' '                SET TO C'Y' IF DMUPDEXT IS CALLED            
SECHK    DC    C' '                SET TO C'Y' IF DMSECHK IS CALLED             
CSRESULT DC    X'00'               RESULT OF SECHK ROUTINE                      
CSRESERR DC    X'00'               ERROR CODE FROM CSRESULT                     
RCVGLOB  DC    C' '                SET TO C'Y' IF GLOBAL FILE                   
DSKERRF  DC    C' '                SET TO C'Y' IF DISK READ ERROR               
HDRWHY   DC    C' '                SET TO C'P' OR C'R' IF HEADER RECORD         
MVSIN    DS    C' '                SET TO C'Y' IF READING MVSFILE               
*                                                                               
ERRNUM   DC    X'00'                                                            
SMF      DC    X'00'                                                            
CHECK    DC    X'00'                                                            
COUNT    DC    X'00'                                                            
MODE     DC    X'05'                                                            
FILTYP   DC    X'00'                                                            
UPSIVAL  DC    X'00'                                                            
         DC    XL2'00'                                                          
*                                                                               
TYPDAF   EQU   X'01'               EQUATES FOR FILTYP                           
TYPISF   EQU   X'02'                                                            
TYPISFF  EQU   X'04'                                                            
TYPPAS   EQU   X'08'                                                            
*                                                                               
COPY     EQU   X'01'               EQUATES FOR MODE USED BY DMLDMOD             
REPORT   EQU   X'02'                                                            
DAFIL    EQU   X'04'                                                            
ISFIL    EQU   X'08'                                                            
*                                                                               
NO       EQU   X'01'               YES/NO VALUE EQUATES                         
YES      EQU   X'02'                                                            
*                                                                               
DISK     EQU   X'01'               EQUATES FOR INPUT/OUTPUT                     
TAPE     EQU   X'02'                                                            
*                                                                               
PRTERR   EQU   X'02'               EQUATES FOR ERROR PRINTING                   
PRTALL   EQU   X'08'                                                            
*                                                                               
RECHDR   EQU   X'01'               HEADER RECORD                                
RECTRL   EQU   X'02'               TRAILER RECORD                               
RECPTR   EQU   X'04'               POINTER RECORD                               
RECIPR   EQU   X'08'               INDIRECT POINTER RECORD                      
*                                                                               
KEYNEQ   DC    F'0'                                                             
DIIS     DC    F'0'                                                             
DIF1     DC    F'0'                                                             
DIF2     DC    F'0'                                                             
DIF3     DC    F'0'                                                             
DIF4     DC    F'0'                                                             
TIDA     DC    F'0'                                                             
TIIS     DC    F'0'                                                             
TIF1     DC    F'0'                                                             
TIF2     DC    F'0'                                                             
TIF3     DC    F'0'                                                             
TIF4     DC    F'0'                                                             
TODA     DC    F'0'                                                             
TOIS     DC    F'0'                                                             
DOIS     DC    F'0'                                                             
DOF1     DC    F'0'                                                             
DOF2     DC    F'0'                                                             
DOF3     DC    F'0'                                                             
DOF4     DC    F'0'                                                             
*                                                                               
ISDAVALS DS    0XL16               VALUES USED BY RECVAL ROUTINE                
FLTYP    DC    X'00'                                                            
FLSTYP   DC    X'00'                                                            
FLFLG1   DC    X'00'                                                            
FLFLG2   DC    X'00'                                                            
ISKEYL   DC    H'0'                                                             
ISRECL   DC    H'0'                                                             
DAKEYL   DC    H'0'                                                             
DAELD    DC    H'0'                                                             
DAMAX    DC    H'0'                                                             
DAMIN    DC    H'0'                                                             
*                                                                               
         DS    0D                                                               
         DC    C'*LDCOND*'                                                      
LDCOND   DC    AL2(0)              CONDITION CODE                               
APPCOND  DC    AL2(0)              CONDITION CODE FOR EXTERNAL APPS             
*                                                                               
LDSENA   DC    CL5' '              SYSTEM NAME                                  
LDSENO   DC    X'00'               SYSTEM NUMBER                                
LDSEATS  DC    XL1'00'             SYSTEM ATTRIBUTES                            
LDFIXNUM DC    X'00'               RECOVERY FILENUMBER                          
LDFIATS  DC    XL1'00'             RECOVERY FILE ATTRIBUTES                     
FLASHQ   EQU   X'80'               FLASHABLE                                    
GLOBALQ  EQU   X'40'               GLOBAL                                       
LDFINOS  DC    XL5'00'                                                          
LDSPACE  DC    CL1' '              DSPACE=X INPUT VALUE                         
         DC    XL1'00'                                                          
*                                                                               
LDISNA   DS    0CL40               ISFILE DD/DSN                                
ISFDDN   DC    CL8' '                                                           
ISFDSN   DC    CL32' '                                                          
LDDANA   DS    0CL40               DAFILE DD/DSN                                
DAFDDN   DC    CL8' '                                                           
DAFDSN   DC    CL32' '                                                          
*                                                                               
         DS    0F                                                               
INCOUNTS DS    0CL24                                                            
INPCNT   DC    F'0',CL16'RECORDS READ    ',C'I ',AL2(0)                         
INPDEL   DC    F'0',CL16'FLAGGED DELETED ',C'I ',AL2(0)                         
DELCNT   DC    F'0',CL16'SKIPPED DELETED ',C'I ',AL2(0)                         
INPHDR   DC    F'0',CL16'FLAGGED HEADER  ',C'I ',AL2(0)                         
DELHDR   DC    F'0',CL16'SKIPPED HEADER  ',C'I ',AL2(0)                         
INPDSN   DC    F'0',CL16'FLAGGED HDR DSN ',C'I ',AL2(0)                         
DELDSN   DC    F'0',CL16'SKIPPED HDR DSN ',C'I ',AL2(0)                         
INPTRL   DC    F'0',CL16'FLAGGED TRAILER ',C'I ',AL2(0)                         
DELTRL   DC    F'0',CL16'SKIPPED TRAILER ',C'I ',AL2(0)                         
INPPTR   DC    F'0',CL16'FLAGGED POINTER ',C'I ',AL2(0)                         
PTRDEL   DC    F'0',CL16'SKIPPED POINTER ',C'I ',AL2(0)                         
SYSCNT   DC    F'0',CL16'SKIPPED SYSTEM  ',C'I ',AL2(0)                         
DTECNT   DC    F'0',CL16'SKIPPED DATE    ',C'I ',AL2(0)                         
UNKCNT   DC    F'0',CL16'SKIPPED UNKNOWN ',C'E ',AL2(0)                         
DSKERR   DC    F'0',CL16'RCVFILE DSK ERR ',C'E ',AL2(0)                         
RCVBIG   DC    F'0',CL16'SKIPPED BIG >8K ',C'E ',AL2(0)                         
RCVLER   DC    F'0',CL16'RCVFILE LEN ERR ',C'W ',AL2(0)                         
BADREC   DC    F'0',CL16'DA FILE BAD REC ',C'W ',AL2(0)                         
INCOUNTX DC    4X'FF'                                                           
INCOUNTN EQU   (*-4-INCOUNTS)/L'INCOUNTS                                        
*                                                                               
         DS    0F                                                               
OTCOUNTS DS    0CL20                                                            
O1COUNT  DC    F'0',CL16'RCVTAPE'                                               
O2COUNT  DC    F'0',CL16'RCVCOPY'                                               
O3COUNT  DC    F'0',CL16'RCVCDDS'                                               
O4COUNT  DC    F'0',CL16'RCVCBAD'                                               
OTCOUNTX EQU   *                                                                
OTCOUNTN EQU   (*-OTCOUNTS)/L'OTCOUNTS                                          
*                                                                               
DMDA     DC    F'0'                                                             
LASTDA   DC    F'0'                                                             
LASTTRK  DC    F'0'                                                             
*                                                                               
TRKSEOF  DC    F'0'                DNEXT EOF VALUE FROM DAINFO                  
TRKSUSED DC    F'0'                TRACKS USED FROM DAINFO                      
TRKSALLC DC    F'0'                TRACKS ALLOCATED FROM DAINFO                 
         DC    F'0'                                                             
*                                                                               
SINOFF   DC    F'0'                                                             
DMOPEN   DC    CL8'DMOPEN'                                                      
DMCLSE   DC    CL8'DMCLSE'                                                      
DMRSEQ   DC    CL8'DMRSEQ'                                                      
DMDDNAME DC    CL8'DMDDNAME'                                                    
RECOVER  DC    CL8'RECOVER '                                                    
*                                                                               
LENMAX   DC    H'8000'             MAX LOGICAL REC LEN                          
RCVMAX   DC    H'8056'             MAX RECOVER REC LEN LOGICAL+4+24+28          
RCVMIN   DC    H'28'               MIN RECOVER REC LEN 4+24                     
*                                                                               
RECDATA  DS    0XL10               RECORD VALIDATION FIELDS                     
RCVBAD   DC    H'0'                                                             
BADLEN   DC    H'0'                                                             
NEWLEN   DC    H'0'                                                             
RECFLAG  DC    X'00'                                                            
RECOK    DC    X'00'                                                            
RECSPCL  DC    X'00'                                                            
         DC    X'00'                                                            
*                                                                               
DMRFILNO DC    X'00'                                                            
DMRFILE  DC    C'       '                                                       
DMFLIST  DC    C'N       X'                                                     
DMSYS    DC    C'       '                                                       
         DS    0D                                                               
DYNDD    DC    CL8' '                                                           
DYNDSN   DC    CL32'TAPEIN'                                                     
*                                                                               
*DMDDNAMED                                                                      
       ++INCLUDE DMDDNAMED                                                      
*                                                                               
         DS    0D                                                               
SYSDATA  DS    0XL40                                                            
SYSNUM   DS    XL1                 SYS NUMBER                                   
SYSNAM   DS    CL3                 SYS SHORT NAME                               
SYSRCVF  DS    CL8                 SYS RECOVERY FILE NAME                       
SYSAFTAB DS    A                   SYS A(FILE TAB)                              
         DS    XL4                 N/D                                          
SYSFNOS1 DS    XL5                 SYS SMF SET1 FILE NUMBERS                    
SYSFNOS2 DS    XL5                 SYS SMF SET2 FILE NUMBERS                    
SYSFNOS3 DS    XL5                 SYS SMF SET3 FILE NUMBERS                    
SYSFNOS4 DS    XL5                 SYS SMF SET4 FILE NUMBERS                    
*                                                                               
         DS    0D                                                               
         DC    C'**ISREC*'                                                      
ISRECH   DS    F                                                                
ISREC    DS    512C                                                             
         DS    0D                                                               
         DC    C'**DAREC*'                                                      
DARECH   DS    F                                                                
DAREC    DS    8192C                                                            
DARECX   DC    C'**DAREX*'                                                      
         DS    8192C                                                            
*                                                                               
HEAD1L   DC    C'FILE-ID          '                                             
         DC    C' ALL CPYS  ALL CHGS  ALL ADDS  ALL TOTS '                      
         DC    C' DDS CPYS  DDS CHGS  DDS ADDS '                                
         DC    C'PASV CPYS PASV CHGS PASV ADDS '                                
HEAD1LX  EQU   *                                                                
UNDR1L   DC    C'-------          '                                             
         DC    C'--------- --------- --------- --------- '                      
         DC    C'--------- --------- --------- '                                
         DC    C'--------- --------- --------- '                                
UNDR1LX  EQU   *                                                                
*                                                                               
HEAD2L   DC    C'INPUT            REC COUNT'                                    
UNDR2L   DC    C'------------     ---------'                                    
*                                                                               
HEAD3L   DC    C'OUTPUT           REC COUNT'                                    
UNDR3L   DC    C'-------          ---------'                                    
*                                                                               
PARMCARD DC    CL80' '             VALUE SET BY PARAM=XXX.. CARD                
         EJECT                                                                  
***********************************************************************         
* DCB'S FOR TAPE FILES & I/O BUFFERS                                  *         
***********************************************************************         
RCVTAPE  DCB   DDNAME=RCVTAPE,DSORG=PS,RECFM=VB,LRECL=8200,            X        
               BLKSIZE=27648,MACRF=(PM),EXLST=RTEXLST                           
RTEXLST  DS    0F                                                               
         DC    X'87'                                                            
         DC    AL3(RTJFCB)                                                      
RTJFCB   DC    176X'00'                                                         
                                                                                
RCVCOPY  DCB   DDNAME=RCVCOPY,DSORG=PS,RECFM=VB,LRECL=8200,            X        
               BLKSIZE=27648,MACRF=(PM)                                         
                                                                                
RCVCDDS  DCB   DDNAME=RCVCDDS,DSORG=PS,RECFM=VB,LRECL=8200,            X        
               BLKSIZE=27648,MACRF=(PM)                                         
                                                                                
RCVCBAD  DCB   DDNAME=RCVCBAD,DSORG=PS,RECFM=VB,LRECL=8200,            X        
               BLKSIZE=27648,MACRF=(PM)                                         
                                                                                
ACTVUSR  DCB   DDNAME=ACTVUSR,DSORG=PS,RECFM=FB,LRECL=12000,           X        
               BLKSIZE=24000,MACRF=(GM,PM),EODAD=RDACEOF                        
                                                                                
TAPEIN   DCB   DDNAME=TAPEIN,DSORG=PS,RECFM=VB,MACRF=(GM),EODAD=EOF,   X        
               BLKSIZE=0,LRECL=8200,BUFNO=2                                     
         EJECT                                                                  
***********************************************************************         
* READ INPUT PARAMETER CARDS AND SET OPTIONS                          *         
***********************************************************************         
NXTCRD   NTR1  BASE=*                                                           
         GOTO1 VDATCON,DMCB,(5,0),(0,TODAY)                                     
         GOTO1 (RF),DMCB,(5,0),(24,TISNOW)                                      
         GOTO1 (RF),DMCB,(12,TISNOW),(25,TIBNOW)                                
         MVC   DATNOW,TODAY                                                     
         MVI   ERRNUM,0             SET OK/ERROR FLAG                           
*                                                                               
NXTC     GOTO1 VCARDS,DMCB,CARD,=C'RE00'                                        
         CLC   CARD(2),=C'/*'                                                   
         BE    NXTCX                                                            
         MVC   P(72),CARD                                                       
         GOTO1 VPRINTER                                                         
*                                                                               
NXTC1    CLC   CARD(6),=CL8'DDSIO=' SET DDSIO LOAD MODULE                       
         BNE   NXTC2                                                            
         L     RF,=V(DDSIO)                                                     
         MVC   0(8,RF),CARD+6                                                   
         B     NXTC                                                             
*                                                                               
NXTC2    CLC   CARD(7),=CL8'DSPACE=' SET DSPACE ID                              
         BNE   NXTC3                                                            
         MVC   LDSPACE,CARD+7                                                   
         L     RF,=A(SSB)                                                       
         MVC   SSODSPAC-SSOOFF(1,RF),CARD+7                                     
         B     NXTC                                                             
*                                                                               
NXTC3    CLC   CARD(5),=C'DATE='   OVERRIDE SYSTEM DATE                         
         BNE   NXTC4                                                            
         MVC   DATEVAL,CARD+5                                                   
         GOTO1 VDATVAL,DMCB,(0,CARD+5),TODAY  DATE=MM/DD/YY                     
         OC    DMCB(4),DMCB                                                     
         BZ    NXTCERR1                                                         
         MVC   SPECDATE(5),=C'DATE='                                            
         MVC   SPECDATE+5(6),TODAY YYMMDD                                       
         B     NXTC                                                             
*                                                                               
NXTC4    CLC   CARD(6),=C'TODAY='  TODAY ONLY                                   
         BNE   NXTC5                                                            
         CLC   CARD+6(3),=C'YES'                                                
         BNE   NXTCERR1                                                         
         MVI   TDYONLY,C'Y'                                                     
         B     NXTC                                                             
*                                                                               
NXTC5    CLC   CARD(7),=C'TAPE=NO' OUTPUT TAPE COPY                             
         BNE   NXTC6                                                            
         MVI   OUTPUT,0                                                         
         B     NXTC                                                             
*                                                                               
NXTC6    CLC   CARD(6),=C'INPUT='  TAPE INPUT                                   
         BNE   NXTC7                                                            
         CLC   CARD+6(4),=C'TAPE'                                               
         BNE   *+12                                                             
         MVI   INPUT,TAPE                                                       
         B     NXTC                                                             
         CLC   CARD+6(4),=C'DISK'                                               
         BNE   NXTCERR1                                                         
         MVI   INPUT,DISK                                                       
         B     NXTC                                                             
*                                                                               
NXTC7    CLC   CARD(6),=C'ERASE='  ERASE RECOVERY FILE                          
         BNE   NXTC8                                                            
         CLI   CARD+6,C'N'                                                      
         BE    *+12                                                             
         CLI   CARD+6,C'Y'                                                      
         BNE   NXTCERR1                                                         
         MVC   ERASE,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC8    CLC   CARD(2),=C'1='      RCVTAPE MAIN TAPE                            
         BNE   *+12                                                             
         LA    RE,CARD+2                                                        
         B     NXTC8A                                                           
         CLC   CARD(8),=C'RCVTAPE='                                             
         BNE   NXTC9                                                            
         LA    RE,CARD+8                                                        
NXTC8A   CLI   0(RE),C'N'                                                       
         BNE   *+12                                                             
         NI    OUTPUT,255-X'02'                                                 
         B     NXTC                                                             
         OI    OUTPUT,X'02'                                                     
         MVC   OUT1,0(RE)                                                       
         B     NXTC                                                             
*                                                                               
NXTC9    CLC   CARD(2),=C'2='      RCVCOPY COPY TAPE                            
         BNE   *+12                                                             
         LA    RE,CARD+2                                                        
         B     NXTC9A                                                           
         CLC   CARD(8),=C'RCVCOPY='                                             
         BNE   NXTC10                                                           
         LA    RE,CARD+8                                                        
NXTC9A   CLI   0(RE),C'N'                                                       
         BNE   *+12                                                             
         NI    OUTPUT,255-X'04'                                                 
         B     NXTC                                                             
         OI    OUTPUT,X'04'                                                     
         MVC   OUT2,0(RE)                                                       
         B     NXTC                                                             
*                                                                               
NXTC10   CLC   CARD(2),=C'3='      RCVCDDS DDS CHANGES ONLY TAPE                
         BNE   *+12                                                             
         LA    RE,CARD+2                                                        
         B     NXTC10A                                                          
         CLC   CARD(8),=C'RCVCDDS='                                             
         BNE   NXTC11                                                           
         LA    RE,CARD+8                                                        
NXTC10A  CLI   0(RE),C'N'                                                       
         BNE   *+12                                                             
         NI    OUTPUT,255-X'08'                                                 
         B     NXTC                                                             
         OI    OUTPUT,X'08'                                                     
         MVC   OUT3,0(RE)                                                       
         B     NXTC                                                             
*                                                                               
NXTC11   CLC   CARD(2),=C'4='      RCVCBAD BAD RECORDS TO TAPE                  
         BNE   *+12                                                             
         LA    RE,CARD+2                                                        
         B     NXTC11A                                                          
         CLC   CARD(8),=C'RCVCBAD='                                             
         BNE   NXTC12                                                           
         LA    RE,CARD+8                                                        
NXTC11A  CLI   0(RE),C'N'                                                       
         BNE   *+12                                                             
         NI    OUTPUT,255-X'10'                                                 
         B     NXTC                                                             
         OI    OUTPUT,X'10'                                                     
         MVC   OUT4,0(RE)                                                       
         B     NXTC                                                             
*                                                                               
NXTC12   CLC   CARD(5),=C'ACTV='   USER ACTIVITY FILE                           
         BNE   NXTC13                                                           
         CLC   CARD+5(4),=C'INIT'  ACTV=INIT TO INITIALISE                      
         BNE   *+12                                                             
         MVI   ACTV,X'82'          SET SPECIAL WRITE/INIT FLAGS                 
         B     NXTC                                                             
         CLC   CARD+5(5),=C'PRINT' ACTV=INIT TO INITIALISE                      
         BNE   *+12                                                             
         MVI   ACTV,X'81'          SET SPECIAL READ/PRINT FLAGS                 
         B     NXTC                                                             
*                                                                               
         CLI   CARD+5,C'N'         ACTV=N TO SUPPRESS ACTIVITY                  
         BNE   *+12                                                             
         MVI   ACTV,0                                                           
         B     NXTC                                                             
         CLI   CARD+5,C'Y'         ACTV=Y TO UPDATE ACTIVITY FILE               
         BNE   *+12                                                             
         MVI   ACTV,X'07'          READ/WRITE/COLLATE                           
         B     NXTC                                                             
         CLI   CARD+5,C'P'         ACTV=P TO UPDATE AND PRINT                   
         BNE   *+12                                                             
         OI    ACTV,X'0F'          READ/WRITE/COLLATE/PRINT                     
         B     NXTC                                                             
         CLI   CARD+5,C'T'         ACTV=T TO TEST AND PRINT                     
         BNE   NXTCERR1                                                         
         OI    ACTV,X'0C'          COLLATE/PRINT                                
         B     NXTC                                                             
*                                                                               
NXTC13   CLC   CARD(4),=C'EID='    NAMES TO EMAIL IF ERRORS                     
         BNE   NXTC14                                                           
         MVC   EMAILID,CARD+4                                                   
         B     NXTC                                                             
*                                                                               
NXTC14   CLC   CARD(5),=C'EMAIL='  EMAIL=Y/N TO TURN ON/OFF                     
         BNE   NXTC15                                                           
         MVC   EMAIL,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC15   CLC   CARD(4),=C'SMF='    SMF OPTIONS                                  
         BNE   NXTC16                                                           
         CLI   CARD+4,C'N'         N=NO SMF RECORDS                             
         BNE   *+12                                                             
         MVI   SMF,X'01'                                                        
         B     NXTC                                                             
         CLI   CARD+4,C'Y'         Y=SMF RECORDS                                
         BNE   *+12                                                             
         MVI   SMF,X'02'                                                        
         B     NXTC                                                             
         CLI   CARD+4,C'P'         P=SMF RECORDS PLUS PRINT                     
         BNE   *+12                                                             
         MVI   SMF,X'0A'                                                        
         B     NXTC                                                             
         CLI   CARD+4,C'T'         T=TEST SMF ONLY PLUS PRINT                   
         BNE   NXTCERR1                                                         
         MVI   SMF,X'8A'                                                        
         B     NXTC                                                             
*                                                                               
NXTC16   CLC   CARD(9),=C'RECCHECK=' OPTION TO CHECK RECORD FORMATS             
         BNE   NXTC17                                                           
         CLI   CARD+9,C'N'                                                      
         BNE   *+12                                                             
         MVI   CHECK,X'01'                                                      
         B     NXTC                                                             
         CLI   CARD+9,C'Y'                                                      
         BNE   NXTCERR1                                                         
         MVI   CHECK,X'02'                                                      
         B     NXTC                                                             
*                                                                               
NXTC17   CLC   CARD(6),=C'CHECK='  OPTION TO CHECK RECORD FORMATS               
         BNE   NXTC18                                                           
         CLI   CARD+6,C'N'                                                      
         BNE   *+12                                                             
         MVI   CHECK,X'01'                                                      
         B     NXTC                                                             
         CLI   CARD+6,C'Y'                                                      
         BNE   NXTCERR1                                                         
         MVI   CHECK,X'02'                                                      
         B     NXTC                                                             
*                                                                               
NXTC18   CLC   CARD(7),=C'GLOBAL=' GLOBAL=Y/N OR N/DATE                         
         BNE   NXTC19                                                           
NXTC18A  CLI   CARD+7,C'N'         GLOBAL=N                                     
         BNE   NXTC18B                                                          
         OI    GLOBALW,NO                                                       
         CLI   CARD+8,C' '                                                      
         BE    NXTC18F             GLOBAL=N WITHOUT DATE IS SUSPECT             
         CLI   CARD+8,C'/'                                                      
         BE    NXTC18C                                                          
         CLI   CARD+8,C','                                                      
         BE    NXTC18C                                                          
         CLC   CARD+7(2),=C'NO'                                                 
         BNE   NXTCERR1                                                         
         CLI   CARD+9,C' '                                                      
         BE    NXTC18F             GLOBAL=NO WITHOUT DATE IS SUSPECT            
         CLI   CARD+9,C'/'                                                      
         BE    NXTC18C                                                          
         CLI   CARD+9,C','                                                      
         BE    NXTC18C                                                          
         B     NXTCERR1                                                         
*                                                                               
NXTC18B  CLI   CARD+7,C'Y'         GLOBAL=Y                                     
         BNE   NXTCERR1                                                         
         OI    GLOBALW,YES                                                      
         CLI   CARD+8,C' '                                                      
         BE    NXTC18E             GLOBAL=Y IS ALWAYS OK                        
         CLI   CARD+8,C'/'                                                      
         BE    NXTC18C                                                          
         CLI   CARD+8,C','                                                      
         BE    NXTC18C                                                          
         CLC   CARD+7(3),=C'YES'                                                
         BNE   NXTCERR1                                                         
         CLI   CARD+10,C' '                                                     
         BE    NXTC18E             GLOBAL=YES IS ALWAYS VALID                   
         CLI   CARD+10,C'/'                                                     
         BE    NXTC18C                                                          
         CLI   CARD+10,C','                                                     
         BNE   NXTCERR1                                                         
*                                                                               
NXTC18C  LA    R5,CARD+7           LOOK FOR /DATE OR ,DATE FILED                
         LA    R0,4                                                             
         CLI   0(R5),C'/'                                                       
         BE    NXTC18C1                                                         
         CLI   0(R5),C','                                                       
         BE    NXTC18C1                                                         
         LA    R5,1(R5)                                                         
         BCT   R0,*-12                                                          
         B     NXTCERR1                                                         
NXTC18C1 LA    R5,1(R5)                                                         
         CLC   0(5,R5),=C'TODAY'   GLOBAL=N/TODAY IS VALID                      
         BE    NXTC18D                                                          
         GOTO1 VDATVAL,DMCB,(0,(R5)),(0,DUB)                                    
         OC    0(4,R1),0(R1)                                                    
         BZ    NXTCERR1                                                         
         CLC   DUB(6),TODAY        DATE MUST MATCH TODAYS DATE                  
         BNE   NXTCERR1                                                         
NXTC18D  OI    GLOBALW,X'20'       SET TODAYS DATE SET ON GLOBAL                
*                                                                               
NXTC18E  MVC   GLOBAL(1),CARD+7                                                 
         OI    GLOBALW,X'40'       SET VALID GLOBAL OVERRIDE INPUT              
         B     NXTC                                                             
*                                                                               
NXTC18F  MVC   GLOBAL(1),CARD+7                                                 
         OI    GLOBALW,X'80'       SET SUSPECT GLOBAL OVERRIDE INPUT            
         B     NXTC                                                             
*                                                                               
NXTC19   CLC   CARD(6),=C'WRITE='  WRITE=N/Y                                    
         BNE   NXTC20                                                           
         MVC   LDWRITE,CARD+6                                                   
         B     NXTC                                                             
*                                                                               
NXTC20   CLC   CARD(6),=C'FORCE='  FORCE=Y/N                                    
         BNE   NXTC21                                                           
         MVC   FORCE,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC21   CLC   CARD(6),=C'UPDID='  UPDID=XX                                     
         BNE   NXTC22                                                           
         MVC   UPDID,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC22   CLC   CARD(6),=C'COUNT='  OPTION TO COUNT/PRINT DIRECTORY RECS         
         BNE   NXTC23                                                           
         CLI   CARD+6,C'N'                                                      
         BNE   *+12                                                             
         MVI   COUNT,X'01'                                                      
         B     NXTC                                                             
         CLI   CARD+6,C'Y'                                                      
         BNE   NXTCERR1                                                         
         MVI   COUNT,X'02'                                                      
         B     NXTC                                                             
*                                                                               
NXTC23   CLC   CARD(6),=C'PARAM='  PARAM=XXX.. MOVE XXX... TO PARMCARD          
         BNE   NXTC23A                                                          
         L     RF,=A(PARMCARD)                                                  
         MVC   0(60,RF),CARD+6                                                  
         B     NXTC                                                             
NXTC23A  CLC   CARD(5),=C'PARM='   PARM=XXX... IS ALSO VALID                    
         BNE   NXTC24                                                           
         L     RF,=A(PARMCARD)                                                  
         MVC   0(60,RF),CARD+5                                                  
         B     NXTC                                                             
*                                                                               
NXTC24   CLC   CARD(6),=C'DELETE'  DELETE=Y/N                                   
         BNE   NXTC25                                                           
         LA    RE,CARD+6                                                        
         CLI   0(RE),C'S'          DELETES=Y/N IS ALSO VALID                    
         BNE   *+8                                                              
         LA    RE,1(RE)                                                         
         CLI   0(RE),C'='                                                       
         BNE   NXTC25                                                           
         MVC   DELETE,1(RE)                                                     
         B     NXTC                                                             
*                                                                               
NXTC25   CLC   CARD(8),=C'MAXRECS=' MAXRECS=NN...                               
         BNE   NXTC26                                                           
         LA    RF,CARD+8                                                        
         LHI   R0,9                                                             
NXTC25A  CLI   0(RF),C' '          FIND END OF NUMBER                           
         BE    NXTC25B                                                          
         CLI   0(RF),C'0'                                                       
         BL    NXTCERR1                                                         
         CLI   0(RF),C'9'                                                       
         BH    NXTCERR1                                                         
         LA    RF,1(RF)                                                         
         BCT   R0,NXTC25A                                                       
         B     NXTCERR1                                                         
NXTC25B  LA    RE,CARD+8           CONVERT NUMBER TO BINARY                     
         SR    RF,RE                                                            
         BZ    NXTCERR1                                                         
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,RE)                                                      
         CVB   R0,DUB                                                           
         LTR   R0,R0                                                            
         BNP   NXTCERR1                                                         
         ST    R0,MAXRECS          SET MAXIMUM RECORDS TO READ                  
         B     NXTC                                                             
*                                                                               
NXTC26   CLC   CARD(7),=C'POINTER' POINTER=Y/N                                  
         BNE   NXTC27                                                           
         LA    RE,CARD+7                                                        
         CLI   0(RE),C'S'          POINTERS=Y/N IS ALSO VALID                   
         BNE   *+8                                                              
         LA    RE,1(RE)                                                         
         CLI   0(RE),C'='                                                       
         BNE   NXTC27                                                           
         MVC   POINTER,1(RE)                                                    
         B     NXTC                                                             
*                                                                               
NXTC27   CLC   CARD(6),=C'FLASH='  FLASH=X                                      
         BNE   NXTC28                                                           
         CLI   CARD+6,C'A'         TEST IF VALID FLASH CHARACTER                
         BL    NXTCERR1                                                         
         CLI   CARD+6,C'N'         FLASH=N MEANS NO FLASH COPY                  
         BE    NXTC                                                             
         L     RF,=A(SSB)                                                       
         OI    SSOFLAG2-SSOOFF(RF),SSO2FLSH                                     
         MVC   SSOFLSHI-SSOOFF(1,RF),CARD+6                                     
         CLI   CARD+6,C'Y'         FLASH=Y IS DEFAULT SO SET TO FLASH=S         
         BNE   *+8                 TO CAUSE DSN=FLS.XXX...                      
         MVI   SSOFLSHI-SSOOFF(RF),C'S'                                         
         MVC   FLASH,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC28   CLC   CARD(6),=C'HOURS='  HOURS=Y/N                                    
         BNE   NXTC29                                                           
         MVC   HOURS,CARD+6                                                     
         B     NXTC                                                             
*                                                                               
NXTC29   CLC   CARD(6),=C'HEADER'  HEADER=Y/N/F                                 
         BNE   NXTC30                                                           
         LA    RE,CARD+6                                                        
         CLI   0(RE),C'S'          HEADERS=Y/N/F IS ALSO VALID                  
         BNE   *+8                                                              
         LA    RE,1(RE)                                                         
         CLI   0(RE),C'='                                                       
         BNE   NXTC30                                                           
         MVC   HEADER,1(RE)                                                     
         CLI   HEADER,C'F'         HEADER=F NO LONGER NECESSARY                 
         JNE   *+8                                                              
         MVI   HEADER,C'Y'         SET TO HEADER=Y                              
         B     NXTC                                                             
*                                                                               
NXTC30   CLC   CARD(3),=C'MVS'     MVS=Y/N                                      
         BNE   NXTC31                                                           
         LA    RE,CARD+3                                                        
         CLI   0(RE),C'='                                                       
         BNE   NXTC31                                                           
         MVC   MVS,CARD+4                                                       
         B     NXTC                                                             
*                                                                               
NXTC31   CLC   CARD(4),=C'SYS='    NAME THE SYSTEM                              
         BE    *+14                                                             
         CLC   CARD(2),=C'S='                                                   
         BNE   NXTC33                                                           
         MVC   SYSNAME,CARD                                                     
         AP    SYSCOUNT,=P'1'                                                   
         L     RE,ASYSNTAB         SAVE IN NEXT SLOT IN THE TABLE               
         CLI   0(RE),X'FF'                                                      
         BE    NXTCERR3            TABLE IS FULL                                
         MVC   0(10,RE),SYSNAME                                                 
         LA    RE,10(RE)                                                        
         ST    RE,ASYSNTAB                                                      
         GOTO1 =V(DMDDNAME),DMCB,(X'24',DMDDNAME),SYSNAME                       
         TM    8(R1),X'10'                                                      
         BO    NEXCERR2                                                         
         B     NXTC                                                             
*                                                                               
NXTC33   CLC   CARD(4),=C'DUMP'    TAKE A DUMP                                  
         BNE   NXTC50                                                           
         DC    H'0'                                                             
*                                                                               
NXTC50   B     NXTCERR0            UNKNOWN/INVALID CONTROL CARD                 
*                                                                               
NXTCERR0 MVC   P(20),CARD                                                       
         MVC   P+20(20),=CL20'UNKNOWN CONTROL CARD'                             
         MVI   ERRNUM,3                                                         
         B     NXTCERRX                                                         
*                                                                               
NXTCERR1 MVC   P(20),CARD                                                       
         MVC   P+20(20),=CL20'INVALID PARAM VALUE'                              
         MVI   ERRNUM,4                                                         
         B     NXTCERRX                                                         
*                                                                               
NEXCERR2 MVC   P(9),SYSNAME                                                     
         MVC   P+20(20),=CL20'INVALID SYSTEM NAME'                              
         MVI   ERRNUM,4                                                         
         B     NXTCERRX                                                         
*                                                                               
NXTCERR3 MVC   P(20),CARD                                                       
         MVC   P+20(20),=CL20'TOO MANY SYSTEMS'                                 
         MVI   ERRNUM,2                                                         
         B     NXTCERRX                                                         
*                                                                               
NXTCERRX MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         SR    R1,R1               ABEND 201 THRU 204 IF INVALID                
         ICM   R1,1,ERRNUM                                                      
         AHI   R1,200                                                           
         ABEND (R1)                                                             
*                                                                               
NXTCX    CLI   ERRNUM,0            EXIT WITH CC EQL IF ALL CARDS VALID          
         XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* CHECK INPUT CARDS ARE CONSISTENT                                    *         
***********************************************************************         
INIT     NTR1  BASE=*                                                           
         CLI   ACTV,X'81'          ACTV=PRINT IS SINGLE FUNCTION                
         BNE   *+12                                                             
         BRAS  RE,RDACTV                                                        
         B     INITX                                                            
         CLI   ACTV,X'82'          ACTV=INIT IS SINGLE FUNCTION                 
         BNE   *+12                                                             
         BRAS  RE,WTACTV                                                        
         B     INITX                                                            
*                                                                               
INIT1    TM    INPUT,TAPE          TEST IF INPUT=TAPE                           
         BO    INIT2                                                            
         CLI   LDSPACE,C' '        INPUT=DISK NEEDS DSPACE=X CARD               
         BE    INIERR0                                                          
         CP    SYSCOUNT,=P'0'      INPUT=DISK NEEDS SYSTEM=XXXX CARD            
         BE    INIERR1                                                          
*                                                                               
INIT2    CLI   ERASE,C'Y'          TEST IF ERASE=Y INPUT                        
         BNE   INIT2A                                                           
         TM    INPUT,DISK          MUST BE DISK INPUT                           
         BZ    INIERR2                                                          
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BNE   INIERR2                                                          
         CLI   LDSPACE,C' '                                                     
         BE    INIERR2A            MUST HAVE DSPACE=CARD                        
         B     INIT3                                                            
INIT2A   CLI   ERASE,C' '          TEST IF ERASE=CARD IS REQUIRED               
         BNE   INIT3                                                            
         TM    INPUT,DISK                                                       
         BO    INIERR2B                                                         
*                                                                               
INIT3    CLC   UPDID,SPACES        TEST IF UPDID=XX INPUT                       
         BE    INIT4                                                            
         TM    INPUT,DISK          MUST BE DISK INPUT                           
         BZ    INIERR3                                                          
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BNE   INIERR3                                                          
         CLI   LDSPACE,C' '        MUST HAVE DSPACE=CARD                        
         BE    INIERR3A                                                         
         GOTO1 =V(DATAMGR),DMCB,=C'UPDID'                                       
         L     RE,12(R1)                                                        
         MVC   0(2,RE),UPDID                                                    
*                                                                               
INIT4    TM    INPUT,TAPE          TEST IF INPUT=TAPE                           
         BZ    INIT5                                                            
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BH    INIERR4                                                          
*                                                                               
INIT5    CLI   GLOBAL,C' '         TEST IF GLOBAL= INPUT                        
         BE    INIT6                                                            
         TM    INPUT,DISK          MUST BE DISK INPUT                           
         BZ    INIERR5                                                          
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BH    INIERR5                                                          
         CLI   LDSPACE,C' '        MUST HAVE DSPACE=CARD                        
         BE    INIERR5A                                                         
*                                                                               
INIT6    CLI   FORCE,C'Y'          TEST IF FORCE=Y INPUT                        
         BNE   INIT7                                                            
         TM    INPUT,DISK          MUST BE DISK INPUT                           
         BZ    INIERR6                                                          
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BH    INIERR6                                                          
         CLI   LDSPACE,C' '        MUST HAVE DSPACE=CARD                        
         BE    INIERR6A                                                         
*                                                                               
INIT7    CLI   FLASH,C' '          TEST IF FLASH=X INPUT                        
         BNH   INIT8                                                            
         TM    INPUT,DISK          MUST BE DISK INPUT                           
         BZ    INIERR7                                                          
         CP    SYSCOUNT,=P'1'      CAN ONLY BE ONE FILE SPECIFIED               
         BH    INIERR7                                                          
*                                                                               
INIT8    CLI   HEADER,C' '         TEST IF HEADER=X INPUT                       
         BH    INIT9                                                            
         MVC   HEADER,DELETE       NO-SET TO SAME VALUE AS DELETE=              
*                                                                               
*&&UK*&& MVI   HEADER,C'Y'         HEADER=Y IS DEFAULT FOR UK - WAS F           
*                                                                               
INIT9    L     RE,=A(SYSNTAB)      POSITION BACK TO FIRST SYSTEM                
         AHI   RE,-10                                                           
         ST    RE,ASYSNTAB                                                      
*                                                                               
INIT10   GOTO1 VDATCON,DMCB,(0,TODAY),(3,TODAYB)                                
         GOTO1 VDATCON,DMCB,(0,TODAY),(2,TODAYC)                                
         B     INITX                                                            
*                                                                               
INIERR0  MVC   P(8),=C'DSPACE=?'                                                
         MVC   P+20(20),=CL20'MISSING DSPACE=CARD'                              
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR1  MVC   P(8),=C'SYS=????'                                                
         MVC   P+20(20),=CL20'MISSING SYS=CARD'                                 
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR2  MVC   P(20),=CL20'ERASE=Y'                                             
         MVC   P+20(20),=CL20'ONLY ONE SYS=CARD'                                
         MVI   ERRNUM,3                                                         
         B     INIERRX                                                          
INIERR2A MVC   P(20),=CL20'ERASE=?'                                             
         MVC   P+20(20),=CL20'MISSING DSPACE=CARD'                              
         MVI   ERRNUM,1                                                         
INIERR2B MVC   P(20),=CL20'ERASE=?'                                             
         MVC   P+20(20),=CL20'MISSING ERASE=CARD'                               
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR3  MVC   P(20),=CL20'UPDID=??'                                            
         MVC   P+20(20),=CL20'INVALID UPDID=CARD'                               
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
INIERR3A MVC   P(20),=CL20'UPDID=??'                                            
         MVC   P+20(20),=CL20'MISSING DSPACE=CARD'                              
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR4  MVC   P(20),=CL20'INPUT=T'                                             
         MVC   P+20(20),=CL20'ONLY ONE SYS=CARD'                                
         MVI   ERRNUM,4                                                         
         B     INIERRX                                                          
*                                                                               
INIERR5  MVC   P(20),=CL20'GLOBAL=?'                                            
         MVC   P+20(20),=CL20'ONLY ONE SYS=CARD'                                
         MVI   ERRNUM,4                                                         
         B     INIERRX                                                          
INIERR5A MVC   P(20),=CL20'GLOBAL=?'                                            
         MVC   P+20(20),=CL20'MISSING DSPACE=CARD'                              
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR6  MVC   P(20),=CL20'FORCE=Y'                                             
         MVC   P+20(20),=CL20'ONLY ONE SYS=CARD'                                
         MVI   ERRNUM,4                                                         
         B     INIERRX                                                          
INIERR6A MVC   P(20),=CL20'FORCE=Y'                                             
         MVC   P+20(20),=CL20'MISSING DSPACE=CARD'                              
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERR7  MVC   P(20),=CL20'FLASH=X'                                             
         MVC   P+6(1),FLASH                                                     
         MVC   P+20(20),=CL20'ONLY ONE SYS=CARD'                                
         MVI   ERRNUM,4                                                         
         B     INIERRX                                                          
INIERR7A MVC   P(20),=CL20'FLASH=X'                                             
         MVC   P+6(1),FLASH                                                     
         MVC   P+20(20),=CL20'MUST BE PROD SYSTEM'                              
         MVI   ERRNUM,1                                                         
         B     INIERRX                                                          
*                                                                               
INIERRX  MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         SR    R1,R1               ABEND 201 THRU 204 IF INVALID                
         ICM   R1,1,ERRNUM                                                      
         AHI   R1,200                                                           
         ABEND (R1)                                                             
*                                                                               
INITX    GOTO1 =V(DATAMGR),DMCB,=C'FILTAB'                                      
         MVC   VFILTABL,4(R1)                                                   
         XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* INITIALIZE FOR SYSTEM AND OPEN ALL TAPE FILES                       *         
***********************************************************************         
OPEN     NTR1  BASE=*                                                           
         ZAP   LINE,=P'99'                                                      
         MVC   TITLE+00(21),=CL23'RECOVERY FILE DUMP - '                        
         CLI   RCVGLOB,C'Y'                                                     
         BNE   *+8                                                              
         MVI   TITLE+19,C'='                                                    
         MVC   TITLE+21(32),DYNDSN                                              
*                                                                               
OPEN0    TM    INITF,X'01'         TEST/SET FIRST SYSTEM                        
         NOP   OPEN1                                                            
         OI    INITF,X'01'                                                      
         MVC   P(16),=CL16'ACTION MESSAGES '                                    
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=CL16'----------------'                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN1    TM    INPUT,TAPE          TAPE INPUT - NOT DISK                        
         BZ    OPEN2                                                            
         TM    INITF,X'02'         TEST/SET OPEN INPUT TAPE                     
         BO    OPEN3                                                            
         OI    INITF,X'02'                                                      
         MVC   TD,=C'TAPEIN  '                                                  
         L     R2,=A(TAPEIN)                                                    
         OPEN  ((2),INPUT)                                                      
         MVC   P(16),=CL16'OPN INP TAPEIN'                                      
         GOTO1 =V(PRINTER)                                                      
         B     OPEN3                                                            
*                                                                               
OPEN2    MVC   P(8),=C'OPN R/O '   PRINT FILE OPENED ACTION MESSAGE             
         TM    DTFOPEN,X'80'                                                    
         BO    *+10                                                             
         MVC   P+4(3),=C'UPD'      SHOW READ-ONLY OR UPDATIVE                   
         MVC   P+8(8),DTFDD                                                     
         MVC   P+17(16),=C'FN=........ DSN='                                    
         MVC   P+20(08),DYNDD                                                   
         MVC   P+33(26),DYNDSN                                                  
         MVC   P+61(04),=C'SYS='                                                
         MVC   P+65(05),LDSENA                                                  
         MVC   P+71(06),=C'SENUM='                                              
         GOTO1 =V(HEXO24),DMCB,LDSENO,P+77,1                                    
         MVC   P+80(7),=C'DSPACE=' ALSO SHOW DSPACE DATA                        
         L     RF,=A(SSB)                                                       
         MVC   P+87(1),SSODSPAC-SSOOFF(RF)                                      
         CLI   P+87,C' '                                                        
         BH    *+8                                                              
         MVI   P+87,C'A'                                                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN3    TM    INITF,X'04'         TEST AND SET OPEN OUTPUT TAPE(S)             
         BO    OPENX                                                            
         OI    INITF,X'04'                                                      
         TM    OUTPUT,X'02'        TEST IF OUTPUT RCVTAPE TAPE REQUIRED         
         BZ    OPEN4                                                            
         MVC   TD,=C'RCVTAPE '                                                  
         BAS   RE,SETDSN           CREATE RCVTAPE DSN                           
         BAS   RE,SETGDG           LOCATE RCVTAPE GDG                           
         BAS   RE,OPNRCV           OPEN RCVTAPE                                 
         MVC   P(8),=C'OPN OUT '                                                
         MVC   P+8(8),TD                                                        
OPEN3A   TM    RCVTDSN,RCVTDDS     TEST IF DSN=DDSDSN INPUT ON DD CARD          
         BO    OPEN3B                                                           
         TM    RCVTDSN,RCVTINVO    TEST ERROR ON NORMAL OPEN                    
         BO    OPEN3D                                                           
         MVC   P+29(4),=C'DSN='                                                 
         MVC   P+33(44),IDDDSN     SHOW DSN VALUE INPUT ON DD CARD              
         TM    INPUT,TAPE                                                       
         BO    OPEN3A1                                                          
         CLC   P+70(9),SPACES                                                   
         BNE   OPEN3A1                                                          
         MVC   P+71(7),=C'DSPACE=' SHOW DSPACE DATA IF AREA FREE                
         L     RF,=A(SSB)                                                       
         MVC   P+78(1),SSODSPAC-SSOOFF(RF)                                      
         CLI   P+78,C' '                                                        
         BH    *+8                                                              
         MVI   P+78,C'A'                                                        
OPEN3A1  GOTO1 =V(PRINTER)                                                      
         B     OPEN4                                                            
OPEN3B   MVC   P+17(9),=C'FN=DDSDSN'                                            
         TM    RCVTDSN,RCVTUSE     TEST IF USED LOCATED DSN IN OPEN             
         BO    OPEN3C                                                           
         MVC   P+29(4),=C'???='    SET INVALID RCVTAPE DSN                      
         MVC   P+33(44),RCVDSN                                                  
         B     OPEN3D                                                           
OPEN3C   MVC   P+29(4),=C'DSN='                                                 
         MVC   P+33(44),RCVDSN     SHOW DSN WITH GDG (+1)                       
         SR    RE,RE                                                            
         ICM   RE,1,RCVDSNL                                                     
         BZ    OPEN3D                                                           
         LA    RE,LOCDSN(RE)                                                    
         MVC   P+71(8),1(RE)       G0000V00                                     
OPEN3D   GOTO1 =V(PRINTER)                                                      
         TM    RCVTDSN,RCVTINVG+RCVTINVL+RCVTINVO                               
         BNZ   OPNERR1                                                          
*                                                                               
OPEN4    TM    OUTPUT,X'04'        TEST IF TAPE COPY REQUIRED                   
         BZ    OPEN5                                                            
         MVC   TD,=C'RCVCOPY '                                                  
         L     R2,=A(RCVCOPY)                                                   
         OPEN  ((2),OUTPUT)                                                     
         MVC   P(8),=C'OPN OUT '                                                
         MVC   P+8(8),TD                                                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN5    TM    OUTPUT,X'08'        TEST IF DDS COPY REQUIRED                    
         BZ    OPEN6                                                            
         MVC   TD,=C'RCVCDDS '                                                  
         L     R2,=A(RCVCDDS)                                                   
         OPEN  ((2),OUTPUT)                                                     
         MVC   P(8),=C'OPN OUT '                                                
         MVC   P+8(8),TD                                                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN6    TM    OUTPUT,X'10'        TEST IF BAD COPY REQUIRED                    
         BZ    OPEN7                                                            
         MVC   TD,=C'RCVCBAD '                                                  
         L     R2,=A(RCVCBAD)                                                   
         OPEN  ((2),OUTPUT)                                                     
         MVC   P(8),=C'OPN OUT '                                                
         MVC   P+8(8),TD                                                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
OPEN7    TM    ACTV,X'01'          TEST IF READING ACTIVITY FILE                
         BZ    OPEN8                                                            
         BRAS  RE,RDACTV           OPEN AND READ ACTVUSR                        
*                                                                               
OPEN8    EQU   *                                                                
         B     OPENX                                                            
*                                                                               
OPNERR1  MVC   P(40),=CL40'ERROR ON OPEN OF RCVTAPE '                           
         MVC   P+17(8),TD                                                       
         MVI   ERRNUM,6                                                         
         B     OPNERRX                                                          
*                                                                               
OPNERRX  MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         SR    R1,R1               ABEND 200+ERRNUM                             
         ICM   R1,1,ERRNUM                                                      
         AHI   R1,200                                                           
         ABEND (R1)                                                             
*                                                                               
OPENX    XIT1                                                                   
*                                                                               
SETDSN   ST    RE,SAVERE           SET DSN FOR RCVTAPE                          
         MVI   RCVTDSN,0                                                        
         MVC   RCVDSN,SPACES                                                    
         MVI   RCVDSNL,0                                                        
         LA    RE,RCVDSN           ACCTAPE.PRD.ACC12.ACCRCV.COPY(+1)            
*                                                                               
SETDSN1  MVC   0(3,RE),LDSENA      XXXTAPE - WHERE XXX IS SYSTEM NAME           
         MVC   3(4,RE),=C'TAPE'                                                 
         MVI   7(RE),C'.'                                                       
         LA    RE,8(RE)                                                         
*                                                                               
SETDSN2  L     R1,=A(DSPLIST)      DATA SPACE NAME                              
SETDSN2A CLI   0(R1),C' '                                                       
         BE    SETDSN2B                                                         
         CLC   0(1,R1),LDSPACE                                                  
         BE    SETDSN2B                                                         
         LA    R1,L'DSPLIST(R1)                                                 
         B     SETDSN2A                                                         
SETDSN2B MVC   0(3,RE),1(R1)                                                    
         MVI   3(RE),C'.'                                                       
         LA    RE,4(RE)                                                         
*                                                                               
SETDSN3  MVC   0(5,RE),LDSENA      SE NAME                                      
         LA    RE,3(RE)                                                         
         CLI   0(RE),C' '          TEST 3 CHR NAME                              
         BE    SETDSN3A                                                         
         LA    RE,1(RE)                                                         
         CLI   0(RE),C' '          TEST 4 CHR NAME                              
         BE    SETDSN3A                                                         
         LA    RE,1(RE)                                                         
SETDSN3A MVI   0(RE),C'.'                                                       
         LA    RE,1(RE)                                                         
*                                                                               
SETDSN4  MVC   0(3,RE),LDSENA      XXXRCV - RECOVERY FILE NAME                  
         MVC   3(3,RE),=C'RCV'                                                  
         MVI   6(RE),C'.'                                                       
         LA    RE,7(RE)                                                         
*                                                                               
SETDSN5  MVC   0(4,RE),=C'COPY'    MODE                                         
         LA    RE,4(RE)                                                         
         LR    R1,RE                                                            
         LA    RF,RCVDSN                                                        
         SR    R1,RF                                                            
         STC   R1,RCVDSNL          SET LEN OF DSN WITHOUT GDG                   
*                                                                               
SETDSN6  MVC   0(4,RE),=C'(+1)'    SET GDG                                      
         TM    RCVTDSN,RCVTINVG                                                 
         BO    *+8                                                              
         OI    RCVTDSN,RCVTGEN     SET DSN GENERATED WITHOUT ERROR              
*                                                                               
SETDSNX  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
SETGDG   ST    RE,SAVERE           GET GDG GENERATION DATA                      
         MVC   LOCDSN,RCVDSN                                                    
         TM    RCVTDSN,RCVTGEN     EXIT IF FAILED TO GENERATE DSN               
         BZ    SETGDGX                                                          
         XC    LOCWRK(256),LOCWRK                                               
         XC    LOCWRK+256(16),LOCWRK+256                                        
         LOCATE LOCCAM                                                          
         LTR   RF,RF               EXIT WITH CC NEQ IF CANT LOCATE              
         BNZ   *+12                                                             
         OI    RCVTDSN,RCVTLOC     SET LOCATED GDG GENERATION                   
         B     SETGDGX                                                          
         OI    RCVTDSN,RCVTINVL    SET INVALID GDG LOCATE                       
SETGDGX  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
OPNRCV   ST    RE,SAVERE           GET JFCB FOR RCVTAPE                         
         L     R2,=A(RCVTAPE)                                                   
         RDJFCB ((2))                                                           
         LTR   RF,RF                                                            
         JNZ   OPNRCV4                                                          
         L     R1,=A(RTJFCB)       POINT TO COPY OF JFCB                        
         USING INFMJFCB,R1                                                      
         MVC   IDDDSN,JFCBDSNM                                                  
         LA    RE,JFCBDSNM         TEST RCVTAPE DD HAS DSN=DDSDSN               
         LA    R0,38                                                            
         NI    RCVTDSN,255-RCVTDDS                                              
OPNRCV1  CLC   0(6,RE),=C'DDSDSN'                                               
         JE    OPNRCV2                                                          
         LA    RE,1(RE)                                                         
         JCT   R0,OPNRCV1                                                       
         J     OPNRCV3                                                          
OPNRCV2  OI    RCVTDSN,RCVTDDS     SET DSN=DDSDSN INPUT ON DD CARD              
         TM    RCVTDSN,RCVTLOC                                                  
         JZ    OPNRCV4                                                          
         L     RF,=A(LOCDSN)       SET DSN FROM LOCATED VALUE                   
         MVC   JFCBDSNM,0(RF)                                                   
         OI    JFCBMASK+4,X'80'                                                 
         OI    RCVTDSN,RCVTUSE     SET LOCATED DSN USED FOR RCVTAPE             
         DROP  R1                                                               
OPNRCV3  L     R2,=A(RCVTAPE)                                                   
         OPEN  ((2),OUTPUT),TYPE=J                                              
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         JO    OPNRCV5                                                          
OPNRCV4  OI    RCVTDSN,RCVTINVO    SET INVALID OPEN OF RCVTAPE                  
OPNRCV5  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
TD       DS    CL8                 TAPE DCB NAME                                
IDDDSN   DS    CL44                TAPE DSN NAME INPUT ON DD CARD               
*                                                                               
RCVDSND  DS    0CL45               RCVTAPE DSN DATA                             
RCVDSNL  DC    XL1'00'             LENGTH OF RCVTAPE DSN WITHOUT DDG            
RCVDSN   DC    CL44' '             RCVTAPE DSN                                  
         DS    0F                                                               
LOCCAM   CAMLST NAME,LOCDSN,,LOCWRK                                             
LOCDSN   DS    CL44                                                             
         DS    0D                                                               
LOCWRK   DS    XL(256+16)                                                       
*                                                                               
DSPLIST  DS    0CL4                TABLE OF DSPACE VALUES/NAMES                 
         DC    C'A',C'PRD'                                                      
         DC    C'C',C'CSC'                                                      
         DC    C'Q',C'FQA'                                                      
*&&US*&& DC    C'R',C'REP'                                                      
         DC    C'T',C'TST'                                                      
DSPLISTX DC    C' ',C'PRD'                                                      
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE PROCESS RECOVERY FILE HEADER AND TRAILER RECORDS            *         
* IF HEADER RECORD NAMES A DSN OPEN FILE TO READ IF HEADER=F          *         
* EXIT WITH CC EQL TO DELETE THE HEADER RECORD                        *         
***********************************************************************         
HDRREC   NTR1  BASE=*                                                           
         CLI   HDRWHY,C'R'         TEST IF READING MVSFILE                      
         JE    *+2                 NO LONGER VALID                              
*NOP     BE    MVSREAD                                                          
*                                                                               
HDR1     CLC   RCVHTYP,=C'**EJOB**' TEST END-OF-JOB TRAILER RECORD              
         BNE   HDR2                                                             
         L     RE,INPTRL           BUMP TRAILER RECORDS READ                    
         AHI   RE,1                                                             
         ST    RE,INPTRL                                                        
         CLI   HEADER,C'Y'         TEST IF WANT TO DUMP TRAILER RECS            
         BE    HDRKEEP                                                          
         L     RE,DELTRL           BUMP DELETED TRAILERS SKIPPED                
         AHI   RE,1                                                             
         ST    RE,DELTRL                                                        
         B     HDRDEL                                                           
*                                                                               
HDR2     CLC   RCVHTYP,=C'XXSJOBXX' TEST START-OF-JOB HEADER RECORD             
         BE    *+14                                                             
         CLC   RCVHTYP,=C'**SJOB**' TEST START-OF-JOB HEADER RECORD             
         BNE   HDRDEL                                                           
         CLC   RCVLEN,=Y(RCVHDSNL) TEST IF DSN IS PRESENT IN HEADER             
         BE    HDR4                                                             
*                                                                               
HDR3     MVC   P(8),=C'HDR REC '   BUILD HEADER RECORD DSN MESSAGE              
         MVC   P+08(08),=C'FOUND   '                                            
         CLI   HEADER,C'Y'         TEST IF WANT TO DUMP HEADER RECS             
         JE    *+10                                                             
         MVC   P+08(08),=C'DROPPED '                                            
         BAS   RE,HDRDT            DATE/TIME MMDD@HHMM                          
         MVC   P+29(24),RCVHTYP                                                 
         GOTO1 =V(PRINTER)                                                      
HDR3A    L     RE,INPHDR           BUMP HEADER RECORDS READ                     
         AHI   RE,1                                                             
         ST    RE,INPHDR                                                        
         CLI   HEADER,C'Y'         TEST IF WANT TO DUMP HEADER RECS             
         BE    HDRKEEP                                                          
         L     RE,DELHDR           BUMP DELETED HEADERS SKIPPED                 
         AHI   RE,1                                                             
         ST    RE,DELHDR                                                        
         B     HDRDEL                                                           
*                                                                               
HDR4     MVC   P(8),=C'HDR REC '   BUILD HEADER RECORD DSN MESSAGE              
         BAS   RE,HDRDT            DATE/TIME MMDD@HHMM                          
         MVC   P+29(24),RCVHTYP                                                 
         MVC   P+54(04),=C'DSN='                                                
         MVC   P+58(44),RCVHDSN                                                 
         MVC   MVSTHIS,DMDA        SAVE DA OF MVS HEADER                        
         MVI   MVSHDR,C'Y'         SET THIS IS AN MVS HEADER                    
         L     RE,INPDSN           BUMP HEADER DSN RECORDS READ                 
         AHI   RE,1                                                             
         ST    RE,INPDSN                                                        
         CLI   HEADER,C'N'         TEST IF WANT TO DUMP HEADER RECS             
         BE    *+12                                                             
         CLI   HEADER,C' '                                                      
         BNE   HDR5                                                             
         L     RE,DELDSN           BUMP DELETED HEADER DSN RECS SKIPPED         
         AHI   RE,1                                                             
         ST    RE,DELDSN                                                        
         MVC   P+08(08),=C'DROPPED '                                            
         GOTO1 =V(PRINTER)                                                      
         B     HDRDEL                                                           
*                                                                               
HDR5     CLI   HEADER,C'Y'         TEST TO DUMP FILE NAMED BY DSN               
         BNE   HDR7                                                             
HDR6     MVC   P+08(08),=C'FOUND   '                                            
         GOTO1 =V(PRINTER)                                                      
         B     HDRKEEP                                                          
*                                                                               
HDR7     CLI   HEADER,C'F'         TEST IF HEADER=F TO READ MVSFILE             
         JE    *+2                 NO LONGER VALID                              
         BE    MVSALLOC                                                         
         B     HDR6                UNKNOWN HEADER ACTION                        
*                                                                               
HDRINV   LHI   R0,-1               SER CC=NEG IF INVALID                        
         B     HDRX                                                             
HDRDEL   XR    R0,R0               SET CC=EQL IF DELETE                         
         B     HDRX                                                             
HDRKEEP  LHI   R0,1                SET CC=POS IF KEEP                           
         B     HDRX                                                             
HDREXIT  LHI   R0,1                SET CC=POS IF NORMAL EXIT                    
*                                                                               
HDRX     LTR   R0,R0                                                            
         XIT1                                                                   
                                                                                
***********************************************************************         
* ROUTINE TO OUTPUT HEADER RECORD DATE AND TIME MMDD@HHMM             *         
***********************************************************************         
HDRDT    LLC   RF,RDATE+1          MONTH                                        
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+17(2),DUB+6(2)                                                 
         LLC   RF,RDATE+2          DAY                                          
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+19(2),DUB+6(2)                                                 
         MVC   P+21(5),=C'@????'                                                
*                                                                               
HDRDT1   L     RF,RTIME            FORMAT P'HHMMSSI+' IF X'80' BIT ON           
         TM    RTIME,X'80'                                                      
         BZ    HDRDT2                                                           
         SLL   RF,2                                                             
         SRL   RF,18                                                            
         SLL   RF,4                                                             
         OILL  GRF,X'000C'                                                      
         B     HDRDT3                                                           
*                                                                               
HDRDT2   SLL   RF,4                FORMAT P'0HHMMSS+'                           
         SRL   RF,16                                                            
         SLL   RF,4                                                             
         OILL  GRF,X'000C'                                                      
*                                                                               
HDRDT3   ST    RF,DUB+4            RF=P'000HHMM+'                               
         OI    DUB+7,X'0F'                                                      
         TP    DUB+4(4)                                                         
         BNZR  RE                                                               
         UNPK  P+22(4),DUB+4(4)    HHMM                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* PROCESS MVS DATASET MVSFILE - DYNAMIC ALLOCATE/UNALLOCATE           *         
***********************************************************************         
MVSALLOC EQU   *                                                                
*&&NOP                                                                          
MVSALLOC MVC   TXTDSN+6(44),RCVHDSN                                             
         LA    R1,ARBLKCTA         DYNAMIC ALLOCATION PARAMETER BLOCK           
         DYNALLOC                                                               
         LTR   RF,RF               ERROR IF DATASET NOT ALLOCATED               
         BZ    MVSOPEN                                                          
         MVC   P+08(08),=C'ALO ERR '                                            
         B     MVSERR1                                                          
*                                                                               
MVSOPEN  OPEN  (MVSFILE,INPUT)     OPEN MVSFILE                                 
         LTR   RF,RF               ERROR IF CANT OPEN MVSFILE                   
         BNZ   MVSERR                                                           
         MVC   P(8),=C'OPN INP '                                                
         MVC   P+08(08),=C'MVSFILE '                                            
         GOTO1 =V(PRINTER)                                                      
         MVI   MVSIN,C'Y'          SET SWITCH TO READ MVSFILE RECORDS           
         B     HDRDEL              AND DELETE DSN HEADER RECORD                 
*                                                                               
MVSERR   MVC   P+08(08),=C'OPN ERR '                                            
MVSERR1  GOTO1 =V(PRINTER)                                                      
         B     HDRINV              ERROR IF CANT ALLOCATE/OPEN MVSFILE          
*                                                                               
MVSREAD  LA    R1,MVSFILE          READ MVSFILE                                 
         GET   (1),(7)                                                          
         B     HDREXIT                                                          
*                                                                               
MEOF     MVI   MVSIN,C' '          SET SWITCH TO READ RECOVERY FILE             
         CLOSE (MVSFILE)           CLOSE MVSFILE                                
         LTR   RF,RF               ERROR IF CANT CLOSE MVSFILE                  
         BNZ   MEOFERR                                                          
         LA    R1,ARBLKUNA         DYNAMIC UNALLOCATION PARAMETER BLOCK         
         DYNALLOC                                                               
         BZ    HDREXIT             ERROR IF CANT UNALLOCATE MVSFILE             
         MVC   P(8),=C'UNA ERR '                                                
         B     MEOFERR1                                                         
MEOFERR  MVC   P(8),=C'CLO ERR '                                                
MEOFERR1 MVC   P+08(08),=C'MVSFILE '                                            
         GOTO1 =V(PRINTER)                                                      
         B     HDRINV                                                           
*                                                                               
         LTORG                                                                  
                                                                                
MVSFILE  DCB   DDNAME=MVSFILE,DSORG=PS,RECFM=VB,MACRF=(GM),EODAD=MEOF, X        
               BLKSIZE=0,LRECL=8200,BUFNO=2                                     
                                                                                
         DS    0F                                                               
ARBLKCTA DC    X'80',AL3(RBLKCATA) DYNALLOC BLK TO ALLOCATE MVSFILE             
*                                                                               
RBLKCATA DC    X'1401000000000000',A(ACATALLT),X'0000000000000000'              
*                                                                               
ACATALLT DC    X'00',AL3(TXTDD)                                                 
         DC    X'00',AL3(TXTDSN)                                                
         DC    X'00',AL3(TXTDISPS)                                              
         DC    X'00',AL3(TXTRLSE)                                               
         DC    X'80',AL3(TXTUNIT)                                               
                                                                                
         DS    0F                                                               
ARBLKUNA DC    X'80',AL3(RBLKUNA)  DYNALLOC BLK TO UNALLOCATE MVSFILE           
*                                                                               
RBLKUNA  DC    X'1402000000000000',A(ACATUNT),X'0000000000000000'               
*                                                                               
ACATUNT  DC    X'80',AL3(TXTUNDD)                                               
                                                                                
TXTDD    DC    AL2(DALDDNAM),X'00010008',CL8'MVSFILE'  DDNAME=........          
TXTDSN   DC    AL2(DALDSNAM),X'0001002C',CL44' '       DSN=............         
TXTDISPS DC    AL2(DALSTATS),X'0001000108'             DISP=(SHR,.....)         
TXTRLSE  DC    AL2(DALRLSE),X'0000'                        = ...,RLSE)          
TXTUNIT  DC    AL2(DALUNIT),X'00010005',C'SYSDA'       UNIT=SYSDA               
TXTUNDD  DC    AL2(DUNDDNAM),X'00010008',CL8'MVSFILE'  DDNAME=........          
*&&                                                                             
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO EXTRACT RECOVERY FILE AND SYSTEM ATTRIBUTES              *         
* IF SYSTEM IS GLOBAL EXTRA CHECKING IS REQUIRED OF INPUT PARAMS      *         
* R2=A(RECOVERY FILE DTF)                                             *         
***********************************************************************         
         USING DTFPHD,R2                                                        
SETATT   NTR1  BASE=*                                                           
         TM    DTFFLAG,DTFGLOB     SAVE RCVFILE/SYSTEM ATTRIBUTES               
         BZ    *+12                                                             
         OI    LDFIATS,GLOBALQ                                                  
         OI    LDSEATS,GLOBALQ                                                  
         TM    DTFFLAG,DTFFLSH                                                  
         BZ    *+12                                                             
         OI    LDFIATS,FLASHQ                                                   
         OI    LDSEATS,FLASHQ                                                   
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    LDFIATS,DTFTBIG                                                  
         TM    DTFTYPE,DTFTBIGF                                                 
         BZ    *+8                                                              
         OI    LDFIATS,DTFTBIGF                                                 
*                                                                               
SETATT1  TM    LDSEATS,GLOBALQ     TEST IF SYSTEM IS GLOBAL                     
         BZ    SETATT5                                                          
         CLI   LDSPACE,C' '        YES - MUST HAVE DSPACE=CARD                  
         BE    SETERR1                                                          
         CLI   GLOBAL,C' '         TEST IF TRIED TO OVERRIDE                    
         BE    SETATT5                                                          
*                                                                               
SETATT2  TM    GLOBALW,X'81'       WAS GLOBAL=N INPUT WITHOUT A DATE            
         BNO   SETATT3                                                          
         CLI   FORCE,C'Y'          NO - OK IF FORCE=Y                           
         BE    SETATT5                                                          
         B     SETATT4                                                          
*                                                                               
SETATT3  TM    GLOBAL,X'41'        WAS GLOBAL=N INPUT WITH TODAYS DATE          
         BNO   SETATT5                                                          
         MVI   FORCE,C'Y'          YES - SET FORCE=Y                            
         B     SETATT5                                                          
*                                                                               
SETATT4  MVI   GLOBAL,C' '         IGNORE GLOBAL=N PARAMETER                    
         MVC   P(21),=C'DSPACE=N CARD IGNORED'                                  
         MVC   P+27(9),=C'*WARNING*'                                            
         GOTO1 VPRINTER                                                         
*                                                                               
SETATT5  CLI   GLOBAL,C'Y'         SET GLOBAL OVERRIDE IF INPUT                 
         BNE   *+8                                                              
         OI    DTFFLAG,DTFGLOB                                                  
*                                                                               
         CLI   GLOBAL,C'N'                                                      
         BNE   *+8                                                              
         NI    DTFFLAG,255-DTFGLOB                                              
*                                                                               
         MVI   RCVGLOB,C'N'                                                     
         TM    DTFFLAG,DTFGLOB                                                  
         BZ    SETATTX                                                          
         MVI   RCVGLOB,C'Y'        SET RCV FILE IS GLOBAL                       
         CLI   LDSPACE,C' '                                                     
         BNE   SETATTX             MUST HAVE DSPACE=CARD FOR GLOBAL             
*                                                                               
SETERR1  MVC   P(8),=C'DSPACE=?'                                                
         MVC   P+20(20),=CL20'GLOBAL NEEDS DSPACE'                              
         MVI   ERRNUM,1                                                         
         B     SETERRX                                                          
*                                                                               
SETERRX  MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         SR    R1,R1               ABEND 201 THRU 204 IF INVALID                
         ICM   R1,1,ERRNUM                                                      
         AHI   R1,200                                                           
         ABEND (R1)                                                             
*                                                                               
SETATTX  XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* PRINT ACTIVE USER TOTALS FOR EACH ACTIVE SYSTEM                     *         
***********************************************************************         
ACTPRT   NTR1  BASE=*              PRINT USER ACTIVITY COUNTS                   
         MVI   FLAG,0                                                           
*                                                                               
ACTPRT1  CLI   ACTV,X'81'          ACTV=PRINT                                   
         BNE   ACTPRT2                                                          
         MVC   TITLE+00(40),=CL40'RECOVERY ACTIVITY REPORT'                     
         ZAP   LINE,=P'99'                                                      
         B     ACTPRT4                                                          
*                                                                               
ACTPRT2  CLI   ACTV,X'82'          ACTV=INIT                                    
         BNE   ACTPRT3                                                          
         MVC   TITLE+00(40),=CL40'RECOVERY ACTIVITY REPORT'                     
         ZAP   LINE,=P'99'                                                      
         MVC   P(24),=C'ACTVUSR FILE INITIALIZED'                               
         GOTO1 =V(PRINTER)                                                      
         B     ACTPRTX                                                          
*                                                                               
ACTPRT3  TM    ACTV,X'08'          TEST IF PRINTING ACTIVE ENTRY                
         BZ    ACTPRTX                                                          
*                                                                               
ACTPRT4  L     R3,=A(ACTVUSER)     R3=A(NEXT ROW IN TABLE)                      
         USING ACTVTABD,R3                                                      
         LHI   R0,(QMAXR)          R0=NUM OF ROWS                               
         B     ACTPRTN             SKIP FIRST ROW                               
*                                                                               
ACTPRTA  AHI   R3,(QLEN)           BUMP TO NEXT ROW                             
         OC    AHSEN,AHSEN         TEST ANY ACTIVITY ON THIS SYSTEM             
         BZ    ACTPRTN                                                          
*                                                                               
ACTPRTA1 CLI   ACTV,X'81'          TEST IF ACTV=PRINT                           
         BNE   ACTPRTA2                                                         
         TM    FLAG,X'01'          TEST/SET FIRST TIME FLAG                     
         BO    *+12                                                             
         OI    FLAG,X'01'                                                       
         B     ACTPRTA3                                                         
         GOTO1 =V(PRINTER)                                                      
         B     ACTPRTA3                                                         
*                                                                               
ACTPRTA2 CLC   AHSEN+1(1),LDSENO   FILTER ON THIS SYSTEM                        
         BNE   ACTPRTN                                                          
*                                                                               
ACTPRTA3 OI    FLAG,X'80'          SET ACTIVITY ENTRY FOUND                     
         CLC   AHDATTIM,TISNOW                                                  
         BNE   *+8                                                              
         OI    FLAG,X'40'          SET ACTIVITY FROM THIS RUN                   
         GOTO1 VDATCON,DMCB,(12,AHDATTIM),(26,DUB)                              
         MVC   P(8),DUB                                                         
         MVC   P+10(6),DUB+8                                                    
         TM    FLAG,X'40'          TEST ACTIVITY THIS RUN                       
         BZ    ACTPRTA4                                                         
         MVC   P(8),=C'ACTIVITY'                                                
         TM    ACTV,X'02'                                                       
         BZ    *+10                                                             
         MVC   P+17(7),=C'UPDATED'                                              
         B     ACTPRTA5                                                         
*                                                                               
ACTPRTA4 TM    ACTV,X'80'          TEST ACTV=PRINT                              
         BO    ACTPRTA5                                                         
         MVC   P(16),=CL16'NO ACTIVITY'                                         
         GOTO1 =V(PRINTER)                                                      
         GOTO1 =V(PRINTER)                                                      
         B     ACTPRTX                                                          
*                                                                               
ACTPRTA5 GOTO1 =V(PRINTER)                                                      
         MVC   P(16),=CL16'----------------'                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
ACTPRTB  SR    R1,R1               SYSTEM ID                                    
         ICM   R1,3,AHSEN                                                       
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P+00(3),=C'SE#'                                                  
         UNPK  P+03(3),DUB                                                      
*                                                                               
ACTPRTC  LH    R2,AHCNT            R2=NUMBER OF ACTIVE USERS                    
         CVD   R2,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         MVC   P+07(5),=C'ACTV='                                                
         UNPK  P+12(4),DUB                                                      
         TM    AHFLAG,AHFLFULL     TEST IF ROW IS FULL                          
         BZ    *+8                                                              
         MVI   P+11,C'>'                                                        
         LTR   R2,R2               COUNT SHOULD NOT BE ZERO                     
         BZ    ACTPRTN                                                          
*                                                                               
ACTPRTD  LA    RE,P+17             RE=NEXT SLOT ON PRINT LINE                   
         LHI   R1,5                R1=NUMBER OF ENTRIES PER LINE                
         CR    R1,R2                                                            
         BL    *+6                                                              
         LR    R1,R2                                                            
         LA    R4,AENTRY           R4=A(USER ENTRY)                             
*                                                                               
ACTPRTE  SR    RF,RF                                                            
         ICM   RF,3,0(R4)          USER ID NUMBER                               
         BNZ   ACTPRTE1                                                         
         MVC   0(5,RE),=C'*****'   SHOW SOMETHING FUNNY HAPPENED                
         GOTO1 =V(PRINTER)                                                      
         B     ACTPRTN                                                          
ACTPRTE1 CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  0(5,RE),DUB                                                      
         MVI   5(RE),C'='                                                       
         L     RF,4(R4)            NUMBER OF UPDATES/ADDS                       
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  6(6,RE),DUB                                                      
         LA    RE,13(RE)           BUMP PRINT LINE SLOT                         
         AHI   R4,(L'AENTRY)       BUMP TO NEXT ENTRY                           
         BCT   R1,ACTPRTE                                                       
         GOTO1 =V(PRINTER)                                                      
         LA    RE,P+17                                                          
*                                                                               
ACTPRTF  AHI   R2,-5               DECR NUMBER OF USERS                         
         BNP   ACTPRTN                                                          
         LHI   R1,5                SET NUMBER TO PRINT ON LINE                  
         CR    R1,R2                                                            
         BL    ACTPRTE                                                          
         LR    R1,R2                                                            
         B     ACTPRTE                                                          
*                                                                               
ACTPRTN  BCT   R0,ACTPRTA          BACK FOR NEXT ROW TO PRINT                   
         MVC   P,SPACES                                                         
         TM    FLAG,X'80'          TEST IF ANY ACTIVE ENTRY FOUND               
         BO    ACTPRTN1                                                         
         MVC   P(16),=CL16'NO ACTIVITY'                                         
         GOTO1 =V(PRINTER)                                                      
ACTPRTN1 GOTO1 =V(PRINTER)                                                      
*                                                                               
ACTPRTX  XIT1                                                                   
         LTORG                                                                  
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PRINT OUT BAD RECORDS ON RECOVERY FILE                   *         
* R0=NON ZERO TO WRITE BAD RECORD TO RCVCBAD TAPE                     *         
* R1=REASON CODE                                                      *         
***********************************************************************         
PRTBAD   NTR1  BASE=*                                                           
         STC   R0,PRTOPT           SAVE OPTION CODE                             
         STC   R1,PRTWHY           SAVE REASON CODE                             
*                                                                               
PRTB1    LH    RE,PRTCNT           BUMP RECORDS PRINTED COUNT                   
         AHI   RE,1                                                             
         STH   RE,PRTCNT                                                        
         CH    RE,PRTMAX           TEST MAXIMUM RECORDS TO PRINT                
         BH    PRTB6                                                            
         AHI   R1,-1                                                            
         MHI   R1,L'PRTTXT                                                      
         LA    R1,PRTTXT(R1)       R1=A(REASON TEXT)                            
*                                                                               
PRTB2    MVC   P+00(16),0(R1)      MOVE TEXT MESSAGE TO PRINT LINE              
         MVC   P+17(04),=C'HDR='                                                
         GOTO1 VHEXO24,PARA,RCVHDR,P+21,24                                      
         MVC   P+70(29),=C'LEN=..... ON TAPEIN          '                       
         SR    R0,R0                                                            
         ICM   R0,3,RCVBAD                                                      
         BNZ   *+8                                                              
         ICM   R0,3,RCVLEN                                                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+74(5),DUB+5(3)                                                 
         TM    INPUT,TAPE                                                       
         BO    *+10                                                             
         MVC   P+83(30),DYNDSN                                                  
         MVC   OPERMSX,P                                                        
*NOP*    GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSX,OPERMSX)                      
*NOP*    MVC   P,SPACES                                                         
*NOP*    MVC   P(15),=C'CONSOLE OUTPUT:'                                        
*NOP*    MVC   P+17(L'OPERMSX),OPERMSX                                          
         GOTO1 VPRINTER                                                         
*                                                                               
PRTB3    CLI   PRTOPT,0            TEST IF WRITING TO RCVCDDS                   
         BE    PRTB3A                                                           
         TM    OUTPUT,X'10'                                                     
         BZ    PRTB3A                                                           
         MVC   P+00(16),=C'RCVCBAD WRITTEN '                                    
PRTB3A   MVC   P+17(04),=C'REC='                                                
         LHI   R0,39               THIS MAKES 99 CHR LINE                       
         CLI   PRTWHY,1            DONT PRINT IF LEN LESS THAN MIN              
         BE    PRTB5                                                            
         CLI   PRTWHY,4            TEST RECOVERY REC LEN ERROR                  
         BE    *+12                                                             
         CLI   PRTWHY,3                                                         
         BNE   PRTB4                                                            
         CLC   DMFLMINI,DMFLMAXI   TEST FIXED LEN RECORDS                       
         BNE   PRTB4                                                            
         CH    R0,DMFLMINI                                                      
         BL    PRTB4                                                            
         OC    DMFLMINI,DMFLMINI   TEST WELL DEFINED ENTRY                      
         BZ    PRTB4                                                            
         LH    R0,DMFLMINI         SET TO DEFINED LEN                           
*                                                                               
PRTB4    GOTO1 VHEXO24,PARA,RCVDATA,P+21,(R0)                                   
PRTB5    MVC   OPERMSX,P                                                        
*NOP*    GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSX,OPERMSX)                      
*NOP*    MVC   P,SPACES                                                         
*NOP*    MVC   P(15),=C'CONSOLE OUTPUT:'                                        
*NOP*    MVC   P+17(L,OPERMSX),OPERMSX                                          
         GOTO1 VPRINTER                                                         
*                                                                               
PRTB6    CLI   PRTOPT,0            TEST IF WANT TO WRITE TO RCVCBAD             
         BE    PRTBX                                                            
         TM    OUTPUT,X'10'        TEST IF WRITING BAD REC TAPE                 
         BZ    PRTBX                                                            
         CLI   OUT4,C'B'           =BOTH                                        
         JE    PRTB62                                                           
         OC    MVSTHIS,MVSTHIS     IS THIS FROM MVS                             
         JZ    PRTB61                                                           
         CLI   OUT4,C'M'           =MVS                                         
         JE    PRTB62                                                           
         CLI   MVSHDR,C'Y'         IS THIS AN MVS HEADER                        
         JE    PRTB61              MVS HEADERS COUNT AS BOTH                    
         J     PRTBX                                                            
*                                                                               
PRTB61   CLI   OUT4,C'Y'           =Y                                           
         JNE   PRTBX                                                            
PRTB62   L     R1,=A(RCVCBAD)                                                   
         PUT   (1),(7)                                                          
         L     RE,O4COUNT          BUMP BAD RECORD TAPE COUNT                   
         AHI   RE,1                                                             
         ST    RE,O4COUNT                                                       
*                                                                               
PRTBX    GOTO1 =V(PRINTER)         BLANK LINE AFTER BAD RECORD PRINT            
         XIT1                                                                   
*                                                                               
PRTOPT   DC    AL1(0)              NON ZERO MEANS WRITE TO RCVBBAD              
PRTWHY   DC    AL1(0)              REASON WHY RECORD IS BAD                     
*                                                                               
PRTTXT   DC    CL16'IGNORED RCV <25 ' 01                                        
         DC    CL16'IGNORED RCV >8K ' 02                                        
         DC    CL16'INVALID RCV >8K ' 03                                        
         DC    CL16'INVALID RCV LEN ' 04                                        
         DC    CL16'IGNORED INV TYP ' 05                                        
         DC    CL16'IGNORED INV FIL ' 06                                        
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* CODE TO SIMULATE INVALID RECORDS ON RECOVERY FILE                   *         
* SPTFIL/K,01/A,0,99 ADD ONE ELEMENT RECLEN=X'0064' ELEMENT=X'014B'   *         
***********************************************************************         
DEBUG    NTR1  BASE=*              ADJUST RECORD IN DSKREC                      
         L     RE,=A(DSKREC)                                                    
         LA    RF,24(RE)                                                        
DEBUG1   TM    DEBUGF,X'01'        SPTFILE TESTING                              
         BO    DEBUG2                                                           
         CLI   0(RE),X'21'         TEST SPTFILE                                 
         BNE   DEBUG2                                                           
         CLI   1(RE),X'03'         TEST ADD                                     
         BNE   DEBUG2                                                           
         CLI   00(RF),X'01'        TEST X'01' RECORD                            
         BNE   DEBUG2                                                           
         CLC   13(2,RF),=X'0064'   TEST RECORD LENGTH                           
         BNE   DEBUG2                                                           
         OI    DEBUGF,X'01'                                                     
*NOP*    MVC   24(2,RF),=X'014D'   FIRST ELEMENT FROM 014B TO 014D              
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   24(2,RF),=X'0101'   FIRST ELEMENT FROM 014B TO 0101              
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   13(2,RF),=X'0100'   LENGTH FROM 0064 TO 0100                     
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   13(2,RF),=X'0060'   LENGTH FROM 0064 TO 0060                     
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   13(2,RF),=X'0010'   LENGTH FROM 0064 TO 0010 < MIN=22            
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   13(2,RF),=X'1800'   LENGTH FROM 013E TO 1800 > MAX=5972          
*NOP*    B     DEBUGX                                                           
*NOP*    MVI   0(RE),X'20'         SET UNKNOWN FILE NUM                         
*NOP*    B     DEBUGX                                                           
*NOP*    MVI   1(RE),4             SET UNKNOWN RECORD TYPE                      
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   DMCB+18(2),=X'1800' PHYSICAL LEN > 1754 SPTFIL MAX 5972          
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   DMCB+18(2),=X'2100' PHYSICAL LEN > 201C RCVMAX FOR >8K           
*NOP*    B     DEBUGX                                                           
*NOP*    MVC   DMCB+18(2),=X'0014' PHYSICAL LEN < 001C MIMIMUM                  
*NOP*    B     DEBUGX                                                           
*                                                                               
DEBUG1A  SR    R1,R1               CHANGE PHYSICAL LENGTH                       
         ICM   R1,3,13(RF)                                                      
         LA    R1,24(R1)                                                        
         STH   R1,DMCB+18          SET ADJUSTED RECORD LENGTH                   
         B     DEBUGX                                                           
*                                                                               
DEBUG2   TM    DEBUGF,X'02'        SPTDIR TESTING                               
         BO    DEBUGX                                                           
         CLI   0(RE),X'23'         TEST SPTDIR                                  
         BNE   DEBUGX                                                           
         CLI   1(RE),X'03'         TEST ADD                                     
         BNE   DEBUGX                                                           
         OI    DEBUGF,X'02'                                                     
*NOP*    LH    R1,DMCB+18          SET RCV REC LENGTH WRONG                     
*NOP*    AHI   R1,-2                                                            
*NOP*    STH   R1,DMCB+18                                                       
DEBUGX   B     *+6                                                              
DEBUGF   DC    X'0000'             TURN OFF X'0300' BITS TO ACTIVATE            
*                                                                               
         XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* GET DSN OF RECOVERY FILE                                            *         
***********************************************************************         
GETDSN   NTR1  BASE=*              GET FILE DSN                                 
         MVC   DYNDSN,SPACES                                                    
         LA    R1,DYNBLK2                                                       
         ST    R1,DYNBLK1                                                       
         OI    DYNBLK1,X'80'                                                    
         LA    R1,DYNBLK4                                                       
         ST    R1,DYNBLK3                                                       
         LA    R1,DYNBLK5                                                       
         ST    R1,DYNBLK3+4                                                     
         OI    DYNBLK3+4,X'80'                                                  
         MVC   DYNBLK2,=X'1407000000000000000000000000000018000000'             
         LA    R1,DYNBLK3                                                       
         ST    R1,DYNBLK2+8                                                     
         MVC   DYNBLK4(6),=X'000100010008'                                      
         MVC   DYNBLK4+6(8),DYNDD                                               
         MVC   DYNBLK5,SPACES                                                   
         MVC   DYNBLK5(6),=X'000500010020'                                      
         LA    R1,DYNBLK1                                                       
         DYNALLOC                                                               
         MVC   DYNDSN(26),DYNBLK5+6                                             
*                                                                               
         MVC   DAFDSN(26),DYNDSN                                                
         MVI   FULL,C'.'           SET FULL TO FIRST 3 CHRS OF FILE DD          
         MVC   FULL+1(3),SYSNAM                                                 
         LA    RF,DYNDSN           RF=A(FILE DSN)                               
         LHI   R0,12                                                            
*                                                                               
GETDSN2  CLC   0(4,RF),FULL        SEARCH DSN FOR .XXX                          
         BE    GETDSN3                                                          
         LA    RF,1(RF)                                                         
         BCT   R0,GETDSN2                                                       
         MVC   DAFDDN,DDNADDN      NON-STANDARD RECOVERY FILE NAME              
         B     GETDSNX                                                          
*                                                                               
GETDSN3  LA    RF,1(RF)            RF=A(FILE DDNAME) EG ACCRCV11                
         MVC   DAFDDN(8),0(RF)     FILE DDNAME                                  
         CLI   DAFDDN+7,C'.'       ALLOW FOR SSS.XXXYYYZ.SOMETHING              
         BNE   *+8                                                              
         MVI   DAFDDN+7,C' '                                                    
*                                                                               
GETDSNX  XIT1                                                                   
*                                                                               
DYNBLK1  DS    F                   DYNALLOC BLOCK TO GET DSN                    
DYNBLK2  DS    XL20                                                             
DYNBLK3  DS    XL8                                                              
DYNBLK4  DS    XL14                                                             
DYNBLK5  DS    XL38                                                             
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* RECORD VALIDATION ROUTINE                                           *         
***********************************************************************         
RECVAL   NTR1  BASE=*,LABEL=*                                                   
         NI    RECOK,X'01'         01 MEANS RECORD > 8K                         
         MVI   ERRNUM,0                                                         
         MVI   RECVFL,0                                                         
         TM    RECFLAG,RECPTR      BYPASS POINTER RECS                          
         BO    RECVX                                                            
         TM    MODE,DAFIL          TEST IF PRINTING IS RECS                     
         BO    RECV1                                                            
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         MVC   P+17(4),=C'HDR='    PRINT RECOVERY FILE HEADER                   
         GOTO1 =V(HEXO24),PARA,RCVHDR,P+21,24                                   
         MVC   P+70(9),=C'LEN=.....'                                            
         SR    R0,R0                                                            
         ICM   R0,3,RCVBAD                                                      
         BNZ   *+8                                                              
         ICM   R0,3,RCVLEN                                                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+74(5),DUB+5(3)                                                 
         GOTO1 =V(PRINTER)                                                      
         B     RECV3                                                            
RECV1    TM    MODE,ISFIL          BYPASS KEY CHECK IF NO IS REC                
         BZ    RECV4                                                            
         TM    OUTPUT,DISK         BYPASS KEY CHECK ON LOAD                     
         BO    RECV4                                                            
*                                                                               
RECV2    LH    RE,DAKEYL           GET KEY COMPARE LEN                          
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),DAREC                                                   
         BE    RECV4                                                            
         LA    RF,ISREC+1(RE)                                                   
         TM    0(RF),X'80'         TEST IF DELETED IS REC                       
         BZ    RECV2A              NO                                           
         EX    RE,*+8              YES PROBABLY A KEY CHANGE SO                 
         B     RECV4               COPY IS KEY TO DA KEY AND IGNORE             
         MVC   DAREC(0),ISREC                                                   
RECV2A   L     R1,KEYNEQ           BUMP KEYS NOT EQUAL COUNTER                  
         AHI   R1,1                                                             
         ST    R1,KEYNEQ                                                        
         MVC   P(16),=C'WARNING KEY NEQ '                                       
*                                                                               
RECV3    MVC   P+17(4),=C'I/S='    PRINT IS RECORD                              
         LH    R0,ISRECL                                                        
         CHI   R0,54               ACCDIR=42+8+4 IS THE BIGGEST                 
         BL    *+8                                                              
         LHI   R0,54                                                            
         GOTO1 =V(HEXO24),PARA,ISREC,P+21,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
         TM    MODE,DAFIL                                                       
         BZ    RECVX                                                            
         OI    RECOK,X'80'         SET KEY NEQ FLAG                             
*                                                                               
RECV4    XC    FULL,FULL           CHECK ELEMENT STRUCTURE                      
         LA    RE,DAREC                                                         
         AH    RE,ISKEYL                                                        
         MVC   FULL(2),0(RE)       FULL(2)=REC LEN TAKEN FROM RECORD            
         CLC   FULL(2),DAMAX                                                    
         BNH   RECV4A                                                           
         MVC   P(16),=C'WARNING MAX LEN '                                       
         MVI   ERRNUM,1                                                         
         OI    RECOK,X'40'                                                      
         MVC   BADLEN,FULL                                                      
         MVC   FULL(2),DAMAX                                                    
         B     RECV4B                                                           
RECV4A   CLC   FULL(2),DAMIN                                                    
         BNL   RECV4B                                                           
         MVC   P(16),=C'WARNING MIN LEN '                                       
         MVI   ERRNUM,2                                                         
         OI    RECOK,X'20'                                                      
         MVC   BADLEN,FULL                                                      
         MVC   FULL(2),DAMAX                                                    
RECV4B   TM    FLFLG1,DMFLNER      DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECV4C              NO                                           
         CLI   DAREC,X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BNE   RECV4C                                                           
         MVC   FULL+2(2),FULL                                                   
         B     RECVA                                                            
RECV4C   LA    RF,DAREC            RF=MAX SCAN ADDR                             
         AH    RF,DAMAX                                                         
         LA    RF,1(RF)                                                         
         SR    R0,R0                                                            
         LA    RE,DAREC                                                         
         AH    RE,DAELD            RE=A(ELEMENT)                                
*                                                                               
RECV6    CLI   0(RE),0             SKIP THRU ELEMENTS                           
         BE    RECV8                                                            
         CLI   1(RE),2                                                          
         BNL   RECV7                                                            
         LA    RF,DAREC                                                         
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN TO INVALID ELEMENT         
         B     RECV9                                                            
RECV7    IC    R0,1(RE)                                                         
         AR    RE,R0                                                            
         CR    RE,RF                                                            
         BNH   RECV6                                                            
*                                                                               
RECV8    LA    RF,DAREC            LAST ELEMENT FOUND                           
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN FROM ELEMENT SUM           
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         LA    RE,1(RE)                                                         
         CH    RE,FULL                                                          
         BE    RECVA                                                            
*                                                                               
RECV9    OI    RECOK,X'10'         INVALID RECORD LENGTH                        
         TM    RECOK,X'60'                                                      
         BNZ   RECVA                                                            
         MVC   P(16),=C'WARNING BAD LEN '                                       
         MVI   ERRNUM,3                                                         
*                                                                               
RECVA    TM    RECOK,X'F0'         TEST FOR ERRORS                              
         BNZ   RECVA2                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         TM    INPUT,DISK                                                       
         BZ    RECVB                                                            
         LA    R5,ISREC                                                         
         AH    R5,ISRECL                                                        
         AHI   R5,-4                                                            
         GOTO1 =V(HEXO24),PARA,(R5),P+7,4                                       
         B     RECVB                                                            
RECVA2   EQU   *                                                                
         TM    RECOK,X'70'         TEST LENGTH/ELEMENT ERRORS                   
         BZ    RECVB                                                            
         L     R1,BADREC                                                        
         AHI   R1,1                                                             
         ST    R1,BADREC                                                        
*                                                                               
RECVB    LH    RE,PRTCNT           BUMP BAD RECORDS PRINTED COUNT               
         AHI   RE,1                                                             
         STH   RE,PRTCNT                                                        
         CH    RE,PRTMAX           TEST MAXIMUM RECORDS TO PRINT                
         BH    RECVE                                                            
         OI    RECVFL,X'01'        PRINT RECOVERY FILE HEADER                   
         MVC   P+17(4),=C'HDR='                                                 
         GOTO1 =V(HEXO24),PARA,RCVHDR,P+21,24                                   
         MVC   P+70(9),=C'LEN=.....'                                            
         SR    R0,R0                                                            
         ICM   R0,3,RCVBAD                                                      
         BNZ   *+8                                                              
         ICM   R0,3,RCVLEN                                                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+74(5),DUB+5(3)                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVB1   MVC   P+17(4),=C'KEY='    PRINT DA FILE KEY                            
         LH    R0,ISKEYL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXO24),PARA,DAREC,P+21,(R0)                                  
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVB2   LH    R0,DAELD            PRINT DA FILE LEN/CTL                        
         SH    R0,ISKEYL                                                        
         TM    FLFLG1,DMFLNER      DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECVB3              NO                                           
         CLI   DAREC,X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BNE   RECVB3                                                           
         LA    R0,3                                                             
RECVB3   LA    R2,DAREC                                                         
         AH    R2,ISKEYL                                                        
         MVC   P+17(4),=C'CTL='                                                 
         GOTO1 =V(HEXO24),PARA,(R2),P+21,(R0)                                   
         MVC   P+00(6),DMFLNAME                                                 
         GOTO1 =V(HEXO24),PARA,RVCHR,P+7,4                                      
RECVB4   GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVB5   TM    FLFLG1,DMFLNER      DOES DA FILE HAVE NO ELEMENT RECORDS         
         BZ    RECVB8              NO                                           
         CLI   DAREC,X'00'         YES-NO EL RECS HAVE ZERO IN 1ST BYTE         
         BNE   RECVB8                                                           
         LA    R3,3(R2)            POSITION PAST LEN/STATUS FIELDS              
         LA    R4,DAREC                                                         
         AH    R4,FULL                                                          
         SR    R4,R3               R4=RESIDUAL LENGTH TO PRINT                  
         BNP   RECVX                                                            
RECVB6   LR    RF,R4               PRINT NON-ELEMENTAL FIXED LEN RECORD         
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),PARA,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNP   RECVX                                                            
         LA    R3,50(R3)                                                        
         B     RECVB6                                                           
*                                                                               
RECVB8   LH    R5,FULL             SET UP TO PRINT ELEMENTS                     
         CH    R5,FULL+2                                                        
         BH    *+8                                                              
         LH    R5,FULL+2                                                        
         LA    R2,DAREC                                                         
         AR    R5,R2               R5=A(END OF RECORD PRINT AREA)               
         AH    R2,DAELD            R2=A(ELEMENT)                                
         SR    R0,R0                                                            
*                                                                               
RECVC    IC    R0,1(R2)            R0=ELEMENT LENGTH                            
         LR    R3,R2                                                            
         LR    R4,R0                                                            
         AR    R4,R2                                                            
         BAS   RE,RECVD            PRINT REC BETWEEN R3 AND R4                  
         LTR   R0,R0                                                            
         BZ    RECVE                                                            
         AR    R2,R0               BUMP TO NEXT ELEMENT                         
         B     RECVC                                                            
*                                                                               
RECVD    ST    RE,RECVRE           PRINT ELEMENT START=R3,END=R4                
         CR    R3,R5                                                            
         BNL   RECVE                                                            
         CR    R4,R5                                                            
         BNH   *+6                                                              
         LR    R4,R5               ADJUST END IF GT MAX                         
         CLI   1(R3),2                                                          
         BNL   *+6                                                              
         LR    R4,R5               ADJUST END IF BAD EL LEN                     
         CR    R4,R5                                                            
         BNE   *+6                                                              
         SR    R0,R0               SET END IF BAD EL LEN                        
         SR    R4,R3               R4=PRINT CHR LEN                             
         GOTO1 =V(HEXO24),PARA,(R3),P+17,2                                      
         LA    R3,2(R3)                                                         
         AHI   R4,-2                                                            
         BL    RECVDX                                                           
RECVD2   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXO24),PARA,(R3),P+21,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         AHI   R4,-50                                                           
         BNP   RECVDX                                                           
         LA    R3,50(R3)                                                        
         B     RECVD2                                                           
RECVDX   L     RE,RECVRE                                                        
         BR    RE                                                               
*                                                                               
RECVE    TM    RECOK,X'60'         TEST FOR REC LEN ERRORS                      
         BZ    RECVX                                                            
         LH    R5,DARECH           GET PHYSICAL LEN OF REC                      
         AHI   R5,-4                                                            
RECVE1   CH    R5,DAMAX            TEST IF BIGGER THAN MAX                      
         BNH   RECVE2                                                           
         STH   R5,BADLEN                                                        
         MVC   FULL(2),DAMAX       SET TO MAX LEN                               
         B     RECVE3                                                           
RECVE2   CH    R5,DAMIN            TEST IF SMALLER THAN MIN                     
         BNL   RECVE3                                                           
         STH   R5,BADLEN                                                        
         CLC   FULL+2(2),DAMAX     TEST SUM OF ELEMENTS LESS THAN MAX           
         BH    *+14                                                             
         MVC   FULL(2),FULL+2      SET TO SUM OF ELEMENTS                       
         B     RECVE3                                                           
         MVC   FULL(2),DAMIN                                                    
RECVE3   LH    R5,FULL             R5=NEW RECORD LENGTH                         
         STH   R5,NEWLEN                                                        
         LA    R1,DAREC(R5)                                                     
         XC    0(2,R1),0(R1)                                                    
         LA    R5,DAREC                                                         
         AH    R5,ISKEYL                                                        
         MVC   0(2,R5),FULL                                                     
*                                                                               
RECVE4   TM    RECVFL,X'01'        PRINT NEW LENGTH                             
         BZ    RECVX                                                            
         MVC   P(16),=C'ALTERED REC LEN '                                       
         MVC   P+17(4),=C'CTL='                                                 
         LH    R0,DAELD                                                         
         SH    R0,ISKEYL                                                        
         GOTO1 =V(HEXO24),PARA,(R5),P+21,(R0)                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVX    CLI   ERRNUM,0            EXIT WITH CC EQL IF ALL OK                   
         BE    RECVXX                                                           
         GOTO1 =V(PRINTER)         BLANK LINE AFTER ERROR PRINT                 
RECVXX   XIT1                                                                   
*                                                                               
RECVRE   DS    F                                                                
RECVFL   DS    X                                                                
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO POPULATE ACTVUSER FROM DISK FILE                      *         
***********************************************************************         
RDACTV   NTR1  BASE=*                                                           
         L     R0,=A(ACTVUSER)     FORCE TABLE TO BE ALL ZEROS                  
         L     R1,=A(QTABLEN)                                                   
         XR    RF,RF                                                            
         MVCL  R0,RE                                                            
         MVI   FLAG,0              SET READ FLAG                                
*                                                                               
RDAC01   L     R2,=A(ACTVUSR)      OPEN AS AN INPUT FILE                        
         OPEN  ((2),INPUT)                                                      
*                                                                               
RDAC02   L     R1,=A(ACTVUSR)      GET NEXT LINE                                
         L     R3,=A(USRREC)                                                    
         GET   (1),(3)                                                          
         USING ACTVTABD,R3         R3=A(TABLE ENTRY) RECORD                     
         XR    R0,R0                                                            
         ICM   R0,3,AHSEN          GET SE NUMBER                                
         BNZ   RDAC04                                                           
         TM    FLAG,X'01'          TEST IF FIRST SE NUM ZERO REC                
         BO    RDAC02              NO IGNORE                                    
         OI    FLAG,X'01'          YES FIRST SE NUM ZERO IS HDR REC             
RDAC04   CHI   R0,AEMAXR                                                        
         JH    *+2                 MAX SE CHANGED - YOU MUST RELINK             
*                                                                               
RDAC06   MHI   R0,AELEN            INDEX INTO TABLE FOR SE NUM                  
         A     R0,=A(ACTVUSER)                                                  
         LHI   R1,AELEN                                                         
         LR    RE,R3                                                            
         LR    RF,R1                                                            
         MVCL  R0,RE               MOVE RECORD INTO CORRECT SE SLOT             
         B     RDAC02                                                           
*                                                                               
RDACEOF  L     R2,=A(ACTVUSR)                                                   
         CLOSE ((2))                                                            
         XIT1                                                                   
         LTORG                                                                  
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO WRITE ACTVUSER TO DISK FILE                           *         
* NOTE - USES DSKREC AS SCRATCH STORAGE                               *         
***********************************************************************         
WTACTV   NTR1  BASE=*                                                           
         L     R2,=A(ACTVUSR)      OPEN AS AN OUTPUT FILE)                      
         OPEN  ((2),OUTPUT)                                                     
*                                                                               
WTAC01   L     R3,=A(ACTVUSER)     R3=A(NEXT TABLE ENTRY)                       
         USING ACTVTABD,R3                                                      
         LH    R0,AHCNT            BUMP ACTIVITY COUNT IN 1ST REC               
         AHI   R0,1                                                             
         STH   R0,AHCNT                                                         
         TM    ACTV,X'82'          TEST IF INITIALISING                         
         BNO   *+10                                                             
         XC    AHCNT,AHCNT                                                      
         MVC   AHDATTIM,TISNOW     SET ACTIVITY DATE/TIME IN 1ST REC            
         MVC   AENTRY(6),DATNOW                                                 
         MVC   AENTRY+2*L'AENTRY(6),AENTRY+L'AENTRY                             
         MVC   AENTRY+L'AENTRY(6),TIBNOW                                        
         LHI   R2,AEMAXR           R2=LOOP COUNTER                              
*                                                                               
WTAC02   L     R0,=A(USRREC)                                                    
         L     R1,=A(USRRECL)                                                   
         LR    RE,R3                                                            
         LHI   RF,AELEN                                                         
         MVCL  R0,RE               COPY DATA INTO USRREC (CLEARS EXTRA)         
*                                                                               
         L     R4,=A(USRREC)       PUT RECORD TO FILE                           
         L     R1,=A(ACTVUSR)                                                   
         PUT   (1),(4)                                                          
*                                                                               
         AHI   R3,AELEN            NEXT ROW IN TABLE                            
         BCT   R2,WTAC02           FOR ALL ENTRIES                              
         XIT1                                                                   
         LTORG                                                                  
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO VALIDATE,ERASE,AND PRINT RESULT OF ERASE=CARD.           *         
* 1ST CALL SET ERASEOPT=V TO VALIDATE IF OK TO ERASE THE FILE.        *         
* 2ND CALL SET ERASEOPT=E TO PERFORM ERASE.                           *         
***********************************************************************         
ERASER   NTR1  BASE=*,LABEL=*                                                   
         L     R2,DDNAADTF         GET A(DTF) FOR RECOVERY FILE                 
         CLI   ERASEOPT,C'E'       TEST IF CALL TO DO ERASE                     
         BE    ERASE4                                                           
*                                                                               
ERASE1   MVI   ERASEOK,C'N'        VALIDATE CALL - SET NOT OK TO ERASE          
         MVI   SECHK,C'N'          SET DID NOT CALL DMSECHK                     
         MVI   UPDEXT,C'N'         SET DID NOT CALL DMUPDEXT                    
         MVI   ERASEACT,C'N'       SET DID NOT ERASE FILE                       
         CLI   ERASE,C'Y'                                                       
         BNE   ERASE8                                                           
         CLI   LDWRITE,C'N'                                                     
         BE    ERASE4                                                           
         CLI   RCVGLOB,C'Y'                                                     
         BNE   ERASE2                                                           
         ICM   RF,15,=V(DMSECHK)                                                
         BNZ   ERASE3                                                           
         B     ERASE4                                                           
*                                                                               
ERASE2   CLI   FORCE,C'Y'          LOCAL - TEST IF FORCE=Y INPUT                
         BE    ERASE2A                                                          
         MVI   UPDEXT,C'Y'         SET CALLED DMUPDEXT FOR CONCURRENT           
         LR    R0,R2                                                            
         LA    R2,DMCB                                                          
         GOTO1 VDMOD000,PARA,A(DMODUEXT),0,0,(R0),PARA+20,0                     
         LR    R2,R0                                                            
ERASE2A  MVI   ERASEOK,C'Y'                                                     
         B     ERASEX                                                           
*                                                                               
ERASE3   LA    R0,0                GLOBAL - TEST IF FORCE=Y INPUT               
         CLI   FORCE,C'Y'                                                       
         BNE   *+8                                                              
         LA    R0,X'20'                                                         
         GOTO1 (RF),DMCB,((R0),=C'DMSLCK'),DDNADDN,(R2),(1,0)                   
         MVI   SECHK,C'Y'                                                       
         L     RE,12(R1)           POINT TO RETURNED ERROR MESSAGE              
         MVC   P,SPACES                                                         
         MVC   P(9),=C'**ABEND**'                                               
         MVC   P+10(08),DDNADDN                                                 
         MVC   P+19(60),0(RE)                                                   
         MVC   CSRESULT,12(R1)                                                  
         MVC   CSRESERR,16(R1)                                                  
         CLI   CSRESULT,2          0,1,2 OK TO ERASE RECOVERY FILE              
         BH    ERASE3A                                                          
         MVI   ERASEOK,C'Y'        SET OK TO ERASE                              
         MVC   P,SPACES                                                         
         B     ERASEX                                                           
ERASE3A  MVC   OPERMSX,P                                                        
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         CLI   SECHK,C'Y'          CALL V(DMSECHK) TO RELEASE LOCK              
         BNE   ERASE3B                                                          
         GOTO1 =V(DMSECHK),DMCB,(X'00',=C'DMSUNL')                              
         MVI   SECHK,C'N'                                                       
ERASE3B  GOTO1 =A(EMAILOUT),0      PREPARE AND/OR SEND EMAIL                    
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         ABEND 661                                                              
*                                                                               
ERASE4   CLI   ERASE,C'Y'          DONT ERASE UNLESS ERASE=Y                    
         BNE   ERASE7                                                           
         CLI   LDWRITE,C'N'        DONT ERASE IF WRITE=N                        
         BE    ERASE7                                                           
         CLI   DSKERRF,C'Y'        DONT ERASE IF RECOVERY FILE ERRORS           
         BE    ERASE7                                                           
         CLI   ERASEOK,C'Y'        DONT ERASE UNLESS VALID TO DO SO             
         BNE   ERASE7                                                           
*                                                                               
ERASE5   GOTO1 VDADDS,PARA,A(WTERASE),DAREC,0,(R2),PARA+20,0                    
         MVI   ERASEACT,C'Y'                                                    
         MVC   HALF,8(R1)          SAVE ERROR RETURN BITS                       
         NI    HALF+1,X'FB'        TURN OFF EOF (WHICH IS NORMAL)               
         OC    HALF,HALF           TEST FOR ERRORS ON ERASE                     
         BZ    ERASE7                                                           
         MVI   ERASEACT,C'E'                                                    
         MVC   P(34),=C'**ABEND** XXXXXXXX ERASE ERR=XXXX '                     
         MVC   P+10(08),DDNADDN                                                 
         MVC   P+34(16),DYNDSN                                                  
         GOTO1 VHEXO24,PARA,HALF,P+29,2                                         
*                                                                               
ERASE6   MVC   OPERMSX,P           OUTPUT ERROR MESSAGE                         
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         CLI   SECHK,C'Y'          CALL V(DMSECHK) TO RELEASE LOCK              
         BNE   ERASE6A                                                          
         GOTO1 =V(DMSECHK),DMCB,(X'00',=C'DMSUNL')                              
         MVI   SECHK,C'N'                                                       
ERASE6A  GOTO1 =A(EMAILOUT),0      PREPARE AND SEND EMAIL                       
         GOTO1 =A(EMAILOUT),1      CLOSE EMAIL SUB TASK IF USED                 
         ABEND 661                                                              
*                                                                               
ERASE7   CLI   SECHK,C'Y'          CALL V(DMSECHK) TO RELEASE LOCK              
         BNE   ERASE8                                                           
         CLI   ERASEACT,C'Y'       RESET EOF POINTER IF ERASED                  
         BNE   ERASE7A                                                          
         MVC   DNEXT-DTF(4,R2),=X'FFFFFFFF'                                     
         GOTO1 VDADDS,PARA,A(CHKEOF)                                            
ERASE7A  GOTO1 =V(DMSECHK),DMCB,(X'00',=C'DMSUNL')                              
         MVI   SECHK,C'N'                                                       
*                                                                               
ERASE8   CLI   ERASEOPT,C'E'       EXIT IF VALIDATE CALL                        
         BNE   ERASEX                                                           
         TM    INPUT,TAPE          EXIT IF INPUT=TAPE                           
         BO    ERASEX                                                           
         CP    SYSCOUNT,=P'1'      EXIT IF MULTIPLE FILES                       
         BNE   ERASEX                                                           
         MVC   P(8),DDNADDN        PRINT RESULT OF ERASE OPTION                 
         CLI   ERASE,C'Y'                                                       
         BNE   ERASE8A                                                          
         CLI   LDWRITE,C'N'                                                     
         BE    ERASE8B                                                          
         CLI   ERASEOK,C'Y'                                                     
         BNE   ERASE8C                                                          
         CLI   DSKERRF,C'Y'                                                     
         BE    ERASE8D                                                          
         MVC   P+09(06),=CL6'ERASED'                                            
         MVC   P+16(16),DYNDSN                                                  
         CLI   P+7,C' '                                                         
         BNE   *+10                                                             
         MVC   P+7(22),P+8                                                      
         GOTO1 =V(PRINTER)                                                      
         B     ERASEX                                                           
*                                                                               
ERASE8A  MVC   P+09(20),=CL20'NOT ERASED (ERASE=N)'                             
         MVC   P+30(30),DYNDSN                                                  
         GOTO1 =V(PRINTER)                                                      
         B     ERASEX                                                           
*                                                                               
ERASE8B  MVC   P+09(20),=CL20'NOT ERASED (WRITE=N)'                             
         MVC   P+30(30),DYNDSN                                                  
         GOTO1 =V(PRINTER)                                                      
         B     ERASEX                                                           
*                                                                               
ERASE8C  MVC   P+09(20),=CL20'NOT ERASED (INVALID)'                             
         MVC   P+30(30),DYNDSN                                                  
         GOTO1 =V(PRINTER)                                                      
         MVC   OPERMSX,P           OUTPUT ERROR MESSAGE                         
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),0      PREPARE AND SEND EMAIL                       
         OC    LDCOND,=X'0008'     SET CONDITION CODE                           
         B     ERASEX                                                           
*                                                                               
ERASE8D  MVC   P+09(20),=CL20'NOT ERASED (DSK ERR)'                             
         MVC   P+30(30),DYNDSN                                                  
         CLI   P+7,C' '                                                         
         BNE   *+10                                                             
         MVC   P+7(36),P+8                                                      
         GOTO1 =V(PRINTER)                                                      
         MVI   DSKERRF,C' '                                                     
         B     ERASE6              SEND CONSOLE/EMAIL MSG AND ABEND             
*                                                                               
ERASEX   XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PRINT TRACKS ALLOCATED AND TRACKS USED.                  *         
***********************************************************************         
SIZER    NTR1  BASE=*,LABEL=*                                                   
         TM    INPUT,TAPE          EXIT IF INPUT=TAPE                           
         BO    SIZEX                                                            
         L     R2,DDNAADTF         GET A(DTF) FOR RECOVERY FILE                 
         USING DTFPHD,R2                                                        
         MVC   SIZEMSG(8),DDNADDN  DISPLAY RECOVERY FILE NAME                   
         MVC   SIZEMSG+8(8),=C' TRACKS '                                        
         CLI   SIZEMSG+7,C' '                                                   
         BNE   *+10                                                             
         MVC   SIZEMSG+7(8),SIZEMSG+8                                           
         MVC   SIZEDSN,DYNDSN      DISPLAY RECOVERY FILE DSN                    
*                                                                               
SIZE1    L     RF,TRKSALLC         RF=TRACKS ALLOCATED                          
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SIZEALLC,DUB                                                     
*                                                                               
SIZE2    L     R0,LASTDA           LAST DISK ADDR ON EOF                        
         TM    DTFTYPE,DTFTBIGF                                                 
         BO    SIZE2A                                                           
         SRL   R0,16               16-BIT TRACK                                 
         B     *+8                                                              
SIZE2A   SRL   R0,12               20-BIT TRACK                                 
         ST    R0,LASTTRK                                                       
         L     R0,TRKSUSED         R0=TRACKS USED                               
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SIZEUSED,DUB                                                     
*                                                                               
SIZE3    SR    RF,R0               RF=TRACKS AVAILABLE                          
         BNM   *+6                                                              
         SR    RF,RF                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SIZEAVAL,DUB                                                     
*                                                                               
SIZE4    SR    RE,RE               COMPUTE PERCENTAGE AVAILABLE                 
         MHI   RF,100                                                           
         D     RE,TRKSALLC                                                      
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SIZEPCTA,DUB                                                     
*                                                                               
SIZE5    CH    RF,PCTMIN           TEST IF PCT AVAIL LESS THAN MINIMUM          
         BH    SIZE6                                                            
         MVC   P(SIZEMSGL),SIZEMSG PRINT SIZE LINE                              
         GOTO1 =V(PRINTER)                                                      
         MVC   OPERMSX,SPACES      OUTPUT WARNING MESSAGE                       
         MVC   OPERMSG(9),=C'*WARNING*'                                         
         MVC   OPERMSG+10(8),DDNADDN                                            
         MVC   OPERMSG+18(7),=C' TRACKS '                                       
         MVC   OPERMSG+25(35),SIZEWRN                                           
         GOTO1 VLOGIO,PARA,X'FF000001',(L'OPERMSG,OPERMSG)                      
         MVC   P,SPACES                                                         
         GOTO1 VPRINTER                                                         
         MVC   P(15),=C'CONSOLE OUTPUT:'                                        
         MVC   P+17(L'OPERMSG),OPERMSG                                          
         GOTO1 VPRINTER                                                         
         GOTO1 =A(EMAILOUT),0      PREPARE AND/OR SEND EMAIL                    
         B     SIZEX                                                            
*                                                                               
SIZE6    MVC   P(SIZEMSGL),SIZEMSG PRINT SIZE LINE                              
         GOTO1 =V(PRINTER)                                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
SIZEX    XIT1                                                                   
         LTORG                                                                  
*                                                                               
SIZEMSG  DC    CL16'XXXXXXXX        '                                           
         DC    C' SZ='                                                          
SIZEALLC DC    CL6' '                                                           
         DC    C' US='                                                          
SIZEUSED DC    CL6' '                                                           
*                                                                               
SIZEWRN  DC    C' AV='                                                          
SIZEAVAL DC    CL6' '                                                           
         DC    C' AVAL%='                                                       
SIZEPCTA DC    CL3' '                                                           
         DC    C' '                                                             
SIZEDSN  DC    CL16' '                                                          
*                                                                               
SIZEWRNL EQU   *-SIZEWRN                                                        
SIZEMSGL EQU   *-SIZEMSG                                                        
         EJECT                                                                  
***********************************************************************         
* NOTIFY BASED ON EID=LIST IF EMAIL=Y. MESSAGE IN OPERMSG.            *         
***********************************************************************         
EMAILOUT NTR1  BASE=*,LABEL=*                                                   
         CLI   EMAIL,C'N'          EXIT IF EMAIL DISABLED                       
         BE    EMAILX                                                           
         ICM   RF,15,=V(SMTP)      EXIT IF EMAIL NOT LINKED IN                  
         BZ    EMAILX                                                           
         LTR   R1,R1               TEST IF CLOSE REQUEST                        
         BNZ   EMAIL6                                                           
         TM    EMAILFLG,YES        TEST IF SMTP INITIALIZED                     
         BO    EMAIL4                                                           
*                                                                               
EMAIL1   L     RE,=A(EMAILID)      INITIALIZE LIST OF RECIPIENTS                
         MVC   RECEIPT1(L'EMAILID),0(RE)                                        
*                                                                               
EMAIL2   LA    R3,ATIOT            GET JOB AND STEP NAMES                       
         EXTRACT (3),'S',FIELDS=TIOT                                            
         L     R3,ATIOT                                                         
         MVC   SUBJOB,0(R3)        JOB                                          
         MVC   SUBSTEP,8(R3)       STEP                                         
         MVC   SUBTYPE,RCVRTXT     RCVD                                         
         L     RF,=A(SSB)                                                       
         MVC   SUBDSPC,SSODSPAC-SSOOFF(RF)                                      
         OI    SUBDSPC,C' '        DSPACE CHR                                   
         MVC   SUBSENA,LDSENA      SENAME                                       
         MVC   SUBDANA,DDNADDN     RECOVERY FILE DDNAME                         
*                                                                               
EMAIL3   GOTO1 =V(SMTP),PARA,('SMTPAINI',JESMAIL)                               
         GOTO1 (RF),PARA,('SMTPAPRS',RECEIPT1),(L'SUBJECT,SUBJECT)              
         OI    EMAILFLG,YES        SMTP INIITIALIZED                            
         MVC   P,SPACES                                                         
         MVC   P(17),=CL17'EMAIL SENT TO:'                                      
         MVC   P+17(L'RECEIPT1),RECEIPT1                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(17),=CL17'EMAIL SUBJECT:'                                      
         MVC   P+17(L'SUBJECT),SUBJECT                                          
         GOTO1 =V(PRINTER)                                                      
*                                                                               
EMAIL4   MVC   BODYTXT1,OPERMSX    COPY MESSAGE TO EMAIL BODY                   
         GOTO1 =V(SMTP),PARA,('SMTPAPTL',BODYTXT1)                              
         MVC   P(17),=CL17'EMAIL MESSAGE:'                                      
         MVC   P+17(L'BODYTXT1),BODYTXT1                                        
         GOTO1 =V(PRINTER)                                                      
         GOTO1 =V(PRINTER)                                                      
         B     EMAILX                                                           
*                                                                               
EMAIL6   TM    EMAILFLG,YES        CLOSE IF INITIALIZED                         
         BZ    EMAILX                                                           
         GOTO1 =V(SMTP),PARA,('SMTPASND',0)                                     
         GOTO1 (RF),PARA,('SMTPAEND',0) DETACH SMTP                             
         NI    EMAILFLG,X'FF'-YES                                               
*                                                                               
EMAILX   XIT1                                                                   
*                                                                               
EMAILFLG DC    X'00'                                                            
         DC    X'00'                                                            
ATIOT    DC    A(0)                                                             
RCVRTXT  DC    C'RCVD'                                                          
*                                                                               
JESMAIL  DC    CL8'JESMAIL '                                                    
*                                                                               
RECEIPT1 DC    CL80' '                                                          
*                                                                               
SUBJECT  DC    CL80' '                                                          
         ORG   SUBJECT                                                          
         DC    C'JOB='                                                          
SUBJOB   DS    CL8                                                              
         DC    C'.'                                                             
SUBSTEP  DS    CL8                                                              
         DC    C' '                                                             
SUBTYPE  DS    CL4                                                              
         DC    C' SYS='                                                         
SUBDSPC  DS    CL1                                                              
         DC    C'/'                                                             
SUBSENA  DS    CL5                                                              
         DC    C'/'                                                             
SUBDANA  DS    CL8                                                              
         ORG                                                                    
BODYTXT1 DC    CL80' '                                                          
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* COUNT BY HOUR TOTAL BYTES OUTPUT AND NUMBER OF RECORDS              *         
***********************************************************************         
STATS    NTR1  BASE=*,LABEL=*                                                   
         USING TOTLD,R6                                                         
T        USING TOTLD,TIMETABT                                                   
         LLC   RE,RFILTY           INDEX INTO 32-BYTE FILE TABLE                
         SLL   RE,5                                                             
         A     RE,VFILTABL                                                      
         USING FILTABD,RE          RE=A(DMFILTAB ENTRY)                         
*                                                                               
STAT0    TM    DMFLTYP,DMFLIS      IGNORE INDEX SEQUENTIAL FILES                
         BZ    STAT0A                                                           
         CLI   DMFLNUM,X'A1'       UNLESS ITS CTFILE                            
         BE    STAT0B                                                           
         B     STATXIT                                                          
STAT0A   TM    DMFLSTYP,DMFLREQ    IGNORE REQUEST FILES                         
         BO    STATXIT                                                          
         DROP  RE                                                               
*                                                                               
STAT0B   XC    DUB(4),DUB          EXTRACT HOUR FROM DATE                       
         L     RF,RTIME                                                         
         TM    RTIME,X'80'         FORMAT P'HHMMSSI+' IF X'80' BIT ON           
         BZ    STAT0C                                                           
         SLL   RF,2                                                             
         SRL   RF,26                                                            
         SLL   RF,4                                                             
         OILL  GRF,X'000C'                                                      
         B     STAT0D                                                           
STAT0C   SLL   RF,4                FORMAT P'0HHMMSS+'                           
         SRL   RF,24                                                            
         SLL   RF,4                                                             
         OILL  GRF,X'000C'                                                      
STAT0D   ST    RF,DUB+4                                                         
         CVB   R6,DUB                                                           
         CHI   R6,24               IGNORE IF OUT OF RANGE                       
         BNL   STATXIT                                                          
         MHI   R6,TOTLLNQ                                                       
         A     R6,=A(TIMETAB)      R6=A(TIMETAB ENTRY)                          
*                                                                               
STAT0E   CLI   RRECTY,RRECTCPY     TEST COPY/CHANGE/ADD                         
         BE    STAT1                                                            
         CLI   RRECTY,RRECTCHG                                                  
         BE    STAT2                                                            
         CLI   RRECTY,RRECTADD                                                  
         BE    STAT3                                                            
         B     STATXIT                                                          
*                                                                               
STAT1    LA    R0,1                BUMP COPY COUNTER                            
         A     R0,TOTCPYS                                                       
         ST    R0,TOTCPYS                                                       
         LA    R0,1                                                             
         A     R0,T.TOTCPYS                                                     
         ST    R0,T.TOTCPYS                                                     
         B     STAT10                                                           
*                                                                               
STAT2    LA    R0,1                BUMP CHANGE COUNTER                          
         A     R0,TOTCHGS                                                       
         ST    R0,TOTCHGS                                                       
         LA    R0,1                                                             
         A     R0,T.TOTCHGS                                                     
         ST    R0,T.TOTCHGS                                                     
         B     STAT10                                                           
*                                                                               
STAT3    LA    R0,1                BUMP ADD COUNTER                             
         A     R0,TOTADDS                                                       
         ST    R0,TOTADDS                                                       
         LA    R0,1                                                             
         A     R0,T.TOTADDS                                                     
         ST    R0,T.TOTADDS                                                     
*                                                                               
STAT10   LA    R0,1                BUMP TOTAL RECORDS                           
         A     R0,TOTRECS                                                       
         ST    R0,TOTRECS                                                       
         LA    R0,1                                                             
         A     R0,T.TOTRECS                                                     
         ST    R0,T.TOTRECS                                                     
*                                                                               
STAT11   LH    R0,RCVLEN           BUMP TOTAL BYTES                             
         A     R0,TOTBYTES                                                      
         ST    R0,TOTBYTES                                                      
         LH    R0,RCVLEN                                                        
         A     R0,T.TOTBYTES                                                    
         ST    R0,T.TOTBYTES                                                    
*                                                                               
STATXIT  XIT1                                                                   
         DROP  R6,T                                                             
         LTORG                                                                  
         DS    0D                                                               
TIMETAB  DS    0XL36                                                            
         DC    CL16'00:00-00:59',5F'0'                                          
         DC    CL16'01:00-01:59',5F'0'                                          
         DC    CL16'02:00-02:59',5F'0'                                          
         DC    CL16'03:00-03:59',5F'0'                                          
         DC    CL16'04:00-04:59',5F'0'                                          
         DC    CL16'05:00-05:59',5F'0'                                          
         DC    CL16'06:00-06:59',5F'0'                                          
         DC    CL16'07:00-07:59',5F'0'                                          
         DC    CL16'08:00-08:59',5F'0'                                          
         DC    CL16'09:00-09:59',5F'0'                                          
         DC    CL16'10:00-10:59',5F'0'                                          
         DC    CL16'11:00-11:59',5F'0'                                          
         DC    CL16'12:00-12:59',5F'0'                                          
         DC    CL16'13:00-13:59',5F'0'                                          
         DC    CL16'14:00-14:59',5F'0'                                          
         DC    CL16'15:00-15:59',5F'0'                                          
         DC    CL16'16:00-16:59',5F'0'                                          
         DC    CL16'17:00-17:59',5F'0'                                          
         DC    CL16'18:00-18:59',5F'0'                                          
         DC    CL16'19:00-19:59',5F'0'                                          
         DC    CL16'20:00-20:59',5F'0'                                          
         DC    CL16'21:00-21:59',5F'0'                                          
         DC    CL16'22:00-22:59',5F'0'                                          
         DC    CL16'23:00-23:59',5F'0'                                          
TIMETABT DC    CL16'GRAND TOTAL',5F'0'                                          
         EJECT                                                                  
***********************************************************************         
* PRINT OUT TOTAL HOURLY STATISTICS                                   *         
***********************************************************************         
         USING TOTLD,R6                                                         
PSTATS   NTR1  BASE=*,LABEL=*                                                   
         MVC   P(TIMELN1X-TIMELN1),TIMELN1                                      
         GOTO1 =V(PRINTER)                                                      
         MVC   P(TIMELN2X-TIMELN2),TIMELN2                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R2,24               24 HOURS TO REPORT                           
         XR    R0,R0               TOTAL BYTE HIGH WATER MARK                   
         XR    R1,R1               TOTAL RECORD HIGH WATER MARK                 
         LARL  R6,TIMETAB                                                       
PSTAT1   C     R0,TOTBYTES         FIND ONE WITH MOST BYTES                     
         BNL   PSTAT2                                                           
         L     R0,TOTBYTES         SAVE HIGHEST VALUE                           
         ST    R6,BYTEHI                                                        
*                                                                               
PSTAT2   C     R1,TOTRECS                                                       
         BNL   PSTAT3                                                           
         L     R1,TOTRECS          SAVE HIGHEST VALUE                           
         ST    R6,RECHI                                                         
*                                                                               
PSTAT3   LA    R6,TOTLLNQ(R6)                                                   
         BCT   R2,PSTAT1                                                        
*                                                                               
         LA    R2,25               24 HOURS TO REPORT PLUS TOTAL                
         LARL  R6,TIMETAB                                                       
PSTAT4   MVC   P(16),0(R6)                                                      
         EDIT  (B4,TOTCPYS),(10,P+16),0,ZERO=NOBLANK                            
         EDIT  (B4,TOTCHGS),(10,P+26),0,ZERO=NOBLANK                            
         EDIT  (B4,TOTADDS),(10,P+36),0,ZERO=NOBLANK                            
         EDIT  (B4,TOTRECS),(10,P+46),0,ZERO=NOBLANK                            
         EDIT  (B4,TOTBYTES),(10,P+56),0,ZERO=NOBLANK                           
         C     R6,RECHI                                                         
         BNE   *+8                                                              
         MVI   P+56,C'*'                                                        
         C     R6,BYTEHI                                                        
         BNE   *+8                                                              
         MVI   P+66,C'*'                                                        
         GOTO1 =V(PRINTER)                                                      
         LA    R6,TOTLLNQ(R6)                                                   
         BCT   R2,PSTAT4                                                        
*                                                                               
PSTAT5   GOTO1 =V(PRINTER)                                                      
         XIT1                                                                   
         DROP  R6                                                               
RECHI    DC    A(0)                                                             
BYTEHI   DC    A(0)                                                             
         LTORG                                                                  
*                                                                               
TIMELN1  DC    CL17'HH:MM-HH:MM      '                                          
         DC    CL63' RCV CPYS  RCV CHGS  RCV ADDS  RCV TOTS RCV BYTES'          
TIMELN1X EQU   *                                                                
TIMELN2  DC    CL17'-----------      '                                          
         DC    CL63'--------- --------- --------- --------- ---------'          
TIMELN2X EQU   *                                                                
         EJECT                                                                  
***********************************************************************         
* OUTPUT SMF RECORD WITH DUMP/LOAD RECORD COUNTERS AND MONEY AMOUNTS  *         
***********************************************************************         
SMFDATA  NTR1  BASE=*,LABEL=*                                                   
         TM    SMF,YES             EXIT IF SMF DISABLED                         
         BZ    SMFDATAX                                                         
         ICM   RF,15,=V(SMFOUT)    EXIT IF SMF ROUTINE NOT LINKED IN            
         BZ    SMFDATAX                                                         
         L     R5,=A(SMFSETS)                                                   
         ST    R5,SMFSETSA         INIT SMFSETS TABLE ADDRESS                   
*                                                                               
SMFD1    L     R5,SMFSETSA         BUMP TO NEXT SMFSET                          
         LA    R5,L'SMFSETS(R5)                                                 
         C     R5,SMFSETSX                                                      
         BNL   SMFRST              END OF SETS - RESET COUNTS/MONEY             
         ST    R5,SMFSETSA                                                      
         CLI   2(R5),C' '          TEST IF ANY DATA IN THIS ENTRY               
         BE    SMFD1                                                            
*                                                                               
         MVC   SVSTYP,2(R5)        SAVE ENTRY TYPE                              
         MVC   SVSAOC,=C'ADDS'                                                  
         CLI   0(R5),C'A'          TEST IF ADD ENTRY                            
         BE    *+10                                                             
         MVC   SVSAOC,=C'CHGS'                                                  
         MVC   2(4,R5),SPACES      CLEAR ENTRY TYPE                             
         XC    LDFINOS,LDFINOS     GET FILE NUMBERS FOR THIS SET                
         LH    RF,6(R5)                                                         
         AHI   RF,-1                                                            
         BM    SMFD1A                                                           
         MHI   RF,5                                                             
         LA    RF,SYSFNOS1(RF)                                                  
         MVC   LDFINOS(5),0(RF)                                                 
SMFD1A   ICM   R5,15,8(R5)         R5=A(RCVR DUMP COUNTER LIST)                 
         BZ    SMFD1                                                            
         ST    R5,FULL             SAVE A(RCVR DUMP COUNTER LIST)               
*                                                                               
SMFD2    LA    R3,SMFBAL           R3=A(SMF FILE BALANCING RECORD)              
         USING SMFBRECD,R3                                                      
         XC    SMFBLEN(SMFBCNTX-SMFBLEN),SMFBLEN                                
         LA    RF,SMFBCNTX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
*                                                                               
SMFD3    MVC   SMFBMODE,MODE       MODE                                         
         L     RF,=A(SSB)          DSPACE ID                                    
         MVC   SMFBDSPC,SSODSPAC-SSOOFF(RF)                                     
         MVC   SMFBSENO,LDSENO     SE NUMBER                                    
         MVC   SMFBTXT,DDNADDN     FILE NAME                                    
         MVC   SMFBTXT1,SPACES                                                  
         MVC   SMFBTXT1(5),LDSENA  SE NAME                                      
         MVC   SMFBTXT2,DYNDSN                                                  
         MVC   SMFBFNOS+1(5),LDFINOS                                            
*                                                                               
         MVC   SMFBSRCE,=C'RCVD'   RCVD                                         
         MVC   SMFBUSER,SVSAOC     ADDS/CHGS                                    
         CLC   SMFBTXT1(3),SVSTYP  TEST IF MASTER FILE SET FOR SYSTEM           
         BE    *+10                                                             
         MVC   SMFBTXT1+6(3),SVSTYP                                             
*                                                                               
SMFCNT   MVI   BYTE,0              SET AGY/CPY CODE FOR COUNTERS RECORD         
         LA    RF,SMFBCNTX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
         MVI   SMFBTYPE,C'C'       SET COUNTERS RECORD                          
*                                                                               
SMFC1    LA    R4,SMFBCNT          R4=A(SMFREC COUNTERS)                        
         L     R5,FULL             R5=A(SMF COUNTERS LIST)                      
         MVI   BYTE1,0                                                          
         ZAP   SMFCTR,=P'1'        COUNTER NUMBER                               
*                                                                               
SMFC2    CP    SMFCTR,=P'7'        TEST ERROR COUNTER                           
         BNE   SMFC2A                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFC2E                                                           
         ICM   RF,15,0(R5)         GET A(ERROR COUNTER)                         
         BZ    SMFC2E                                                           
         MVC   SMFBWARN,0(RF)      SET IN SMF RECORD                            
         B     SMFC2E                                                           
*                                                                               
SMFC2A   CLI   0(R5),X'80'         TEST END OF LIST                             
         BE    SMFC3                                                            
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFC2B                                                           
         ICM   RF,15,0(R5)         GET A(COUNTER)                               
         BZ    *+8                                                              
         L     RF,0(RF)            GET COUNTER IF ADDRESS NON ZERO              
         STCM  RF,15,0(R4)                                                      
         B     SMFC2D                                                           
*                                                                               
SMFC2B   ICM   RF,15,0(R5)         GET A(COUNTER ARRAY FOR AGY/MED)             
         BZ    SMFC2D                                                           
         ICM   RF,15,28(RF)                                                     
         BZ    SMFC2D                                                           
         LLC   R0,BYTE             INDEX INTO XL4 COUNTER ARRAY                 
         SLL   R0,2                                                             
         AR    RF,R0               POSITION TO COUNTER FOR AGY/MED              
         L     RF,0(RF)                                                         
*                                                                               
SMFC2D   CVD   RF,0(R4)            MOVE COUNTER TO SMF RECORD                   
         LTR   RF,RF               TEST IF COUNTER IS NON ZERO                  
         BZ    *+8                                                              
         MVI   BYTE1,1                                                          
SMFC2E   LA    R5,4(R5)            BUMP LIST POINTERS                           
         LA    R4,8(R4)                                                         
         AP    SMFCTR,=P'1'                                                     
         B     SMFC2                                                            
*                                                                               
SMFC3    CLI   BYTE1,0             TEST IF ALL COUNTERS ZERO                    
         BE    SMFC7                                                            
         MVC   SMFBAGY,BYTE        SET AGY/CPY CODE IN SMFREC                   
*                                                                               
SMFC4    MVC   DUB(4),=F'11'       SET FILE BALANCING COUNTERS SMF REC          
         TM    SMF,X'80'           SUPRESS WRITE IF SMF=TEST                    
         BZ    *+8                                                              
         MVI   DUB,X'80'                                                        
         GOTO1 =V(SMFOUT),DUB,,SMFBAL                                           
         L     R5,72(RD)                                                        
         MVC   SMFCOPY,0(R5)                                                    
         LA    R5,SMFCOPY          R5=A(COPY OF SMF REC FROM SMFOUT)            
*                                                                               
SMFC5    OC    DUB(4),DUB          TEST RETURN CODE FROM SMFOUT                 
         BZ    SMFC6                                                            
         LA    RF,SMFERR           SMF RECORD NOT WRITTEN RC=..                 
         LA    RF,26(RF)                                                        
         GOTO1 =V(HEXO24),DMCB,DUB+3,(RF),1                                     
         LA    RF,SMFERR                                                        
         MVC   P(48),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
SMFC6    BAS   RE,SMFPRT           PRINT SMF RECORD                             
*                                                                               
SMFC7    LLC   R4,BYTE             BUMP TO NEXT AGY/CPY                         
         AHI   R4,1                                                             
         STC   R4,BYTE                                                          
         CHI   R4,255                                                           
         BL    SMFC1                                                            
*                                                                               
SMFMNY   TM    MODE,DAFIL          NO MONEY IF NO DAFILE                        
         BZ    SMFRST                                                           
         MVI   BYTE,0              SET AGY/CPY CODE FOR MONEY RECORDS           
         LA    RF,SMFBRECX-SMFBLEN                                              
         STH   RF,SMFBLEN                                                       
         MVI   SMFBTYPE,C'M'       SET MONEY RECORD                             
*                                                                               
SMFM1    LA    R4,SMFBMNY          R4=A(SMFREC MONEY FIELDS)                    
         L     R5,FULL             R5=A(SMF COUNTERS LIST)                      
         MVI   BYTE1,0                                                          
         ZAP   SMFCTR,=P'1'        COUNTER NUMBER                               
*                                                                               
SMFM2    CP    SMFCTR,=P'7'        MONEY ENDS ON ERROR ENTRY                    
         BNE   SMFM2A                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFM3                                                            
         ICM   RF,15,0(R5)         GET A(ERROR COUNTER)                         
         BZ    SMFM3                                                            
         MVC   SMFBWARN,0(RF)      SET IN SMF RECORD                            
         B     SMFM3                                                            
*                                                                               
SMFM2A   CLI   0(R5),X'80'         TEST END OF LIST                             
         BE    SMFM3                                                            
         ZAP   DUB,=P'0'                                                        
         ICM   RF,15,0(R5)         GET A(TABLE ENTRY)                           
         BZ    SMFM2D                                                           
         CLI   BYTE,0              TEST IF SMF REC FOR AGY/CPY                  
         BNE   SMFM2B                                                           
         MVC   DUB,4(RF)           GET TOTAL MONEY FIELD                        
         B     SMFM2D                                                           
*                                                                               
SMFM2B   CP    4(8,RF),=P'0'       TEST IF TOTAL MONEY ZERO                     
         BZ    SMFM2D                                                           
         ICM   RF,15,32(RF)        SET A(MONEY ARRAY FOR AGY/MED)               
         BZ    SMFM2D                                                           
         LLC   R0,BYTE             INDEX INTO PL8 MONEY ARRAY                   
         SLL   R0,3                                                             
         AR    RF,R0               POSITION TO MONEY FOR AGY/MED                
         MVC   DUB,0(RF)                                                        
*                                                                               
SMFM2D   MVC   0(8,R4),DUB         MOVE MONEY TO SMF RECORD                     
         CP    DUB,=P'0'           TEST IF MONEY IS NON ZERO                    
         BE    *+8                                                              
         MVI   BYTE1,1                                                          
SMFM2E   LA    R5,4(R5)            BUMP LIST POINTERS                           
         LA    R4,8(R4)                                                         
         AP    SMFCTR,=P'1'                                                     
         B     SMFM2                                                            
*                                                                               
SMFM3    CLI   BYTE1,0             TEST IF ALL MONEY ZERO                       
         BE    SMFM7                                                            
         MVC   SMFBAGY,BYTE        SET AGY/CPY CODE IN SMFREC                   
*                                                                               
SMFM4    MVC   DUB(4),=F'12'       SET FILE BALANCING MONEY SMF REC             
         TM    SMF,X'80'           SUPRESS WRITE IF SMF=TEST                    
         BZ    *+8                                                              
         MVI   DUB,X'80'                                                        
         GOTO1 =V(SMFOUT),DUB,,SMFBAL                                           
         L     R5,72(RD)                                                        
         MVC   SMFCOPY,0(R5)                                                    
         LA    R5,SMFCOPY          R5=A(COPY OF SMF REC FROM SMFOUT)            
*                                                                               
SMFM5    OC    DUB(4),DUB          TEST RETURN CODE FROM SMFOUT                 
         BZ    SMFM6                                                            
         LA    RF,SMFERR           SMF RECORD NOT WRITTEN RC=..                 
         LA    RF,26(RF)                                                        
         GOTO1 =V(HEXO24),DMCB,DUB+3,(RF),1                                     
         LA    RF,SMFERR                                                        
         MVC   P(48),0(RF)                                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
SMFM6    BAS   RE,SMFPRT           PRINT SMF RECORD HEADER                      
*                                                                               
SMFM7    LLC   R4,BYTE             BUMP TO NEXT AGY/CPY                         
         AHI   R4,1                                                             
         STC   R4,BYTE                                                          
         CHI   R4,255                                                           
         BL    SMFM1                                                            
*                                                                               
SMFMX    B     SMFD1               BUMP TO NEXT SET OF RECORDS                  
*                                                                               
SMFRST   L     R5,=A(SMFLIST)      RESET ALL SMF COUNTERS FOR NEXT SYS          
*                                                                               
SMFR1    XC    0(4,R5),0(R5)       CLEAR COUNT                                  
         ZAP   4(8,R5),=P'0'       CLEAR MONEY                                  
*                                                                               
SMFR2    ICM   RE,15,28(R5)        RE=A(AGENCY COUNT FIELDS FOR FILE)           
         BZ    SMFR3                                                            
         LA    R0,255                                                           
SMFR2A   XC    0(4,RE),0(RE)       CLEAR COUNT FIELD                            
         LA    RE,4(RE)                                                         
         BCT   R0,SMFR2A                                                        
*                                                                               
SMFR3    ICM   RE,15,32(R5)        RE=A(AGENCY MONEY FIELDS FOR FILE)           
         BZ    SMFR4                                                            
         LA    R0,255                                                           
SMFR3A   ZAP   0(8,RE),=P'0'       CLEAR MONEY FIELD                            
         LA    RE,8(RE)                                                         
         BCT   R0,SMFR3A                                                        
*                                                                               
SMFR4    LA    R5,L'SMFLIST(R5)    BUMP TO NEXT ENTRY                           
         C     R5,=A(SMFLISTX)                                                  
         BL    SMFR1                                                            
         B     SMFDATAX                                                         
*                                                                               
SMFPRT   ST    RE,SMFPRTRE         TEST IF WANT TO PRINT                        
         TM    SMF,X'08'                                                        
         BZ    SMFPRTX                                                          
         MVC   P(17),=CL17'SMF CNTS'                                            
         TM    SMF,X'80'           INDICATE TEST SMF RECORD ONLY                
         BZ    *+10                                                             
         MVC   P+9(3),=C'TST'                                                   
         CLI   SMFBTYPE,C'M'       SET COUNTERS OR MONEY                        
         BNE   *+10                                                             
         MVC   P+4(4),=C'CASH'                                                  
         CLI   BYTE,0                                                           
         BE    SMFPRT1                                                          
         MVC   P+9(6),=CL6'AGY XX '                                             
         CLC   LDSENA(3),=C'ACC'                                                
         BNE   *+10                                                             
         MVC   P+9(3),=C'CPY'                                                   
         TM    SMF,X'80'           INDICATE TEST SMF RECORD ONLY                
         BZ    *+10                                                             
         MVC   P+9(3),=C'TST'                                                   
         GOTO1 =V(HEXO24),DMCB,BYTE,P+13,1                                      
SMFPRT1  GOTO1 =V(HEXO24),DMCB,(R5),P+17,24                                     
         ZAP   SMFPRTLN,=P'1'                                                   
         GOTO1 =V(PRINTER)                                                      
         LH    R4,0(R5)            GET SMF RECORD LENGTH                        
         LA    R5,24(R5)           R5=A(SMF DATA)                               
         AHI   R4,-24              R4=RESIDUAL LENGTH                           
*                                                                               
SMFPRT2  LHI   R0,24               HEXOUT NEXT DATA PART OF RECORD              
         CR    R0,R4                                                            
         BL    *+6                                                              
         LR    R0,R4                                                            
         GOTO1 =V(HEXO24),DMCB,(R5),P+17,(R0)                                   
         AP    SMFPRTLN,=P'1'                                                   
SMFPRT3  CP    SMFPRTLN,=P'3'                                                   
         BNE   *+10                                                             
         MVC   P(8),SMFBSRCE                                                    
SMFPRT4  CP    SMFPRTLN,=P'4'                                                   
         BNE   *+10                                                             
         MVC   P(8),SMFBTXT                                                     
SMFPRT5  CP    SMFPRTLN,=P'5'                                                   
         BNE   SMFPRT6                                                          
         MVC   P(12),SMFBTXT1                                                   
SMFPRT6  CP    SMFPRTLN,=P'6'                                                   
         BNE   SMFPRT7                                                          
         MVC   P(12),SMFBTXT2                                                   
SMFPRT7  GOTO1 =V(PRINTER)                                                      
         LA    R5,24(R5)                                                        
         AHI   R4,-24                                                           
         BP    SMFPRT2                                                          
         GOTO1 =V(PRINTER)         BLANK LINE AFTER SMF RECORD PRINT            
*                                                                               
SMFPRTX  L     RE,SMFPRTRE                                                      
         BR    RE                                                               
*                                                                               
SMFDATAX XIT1                                                                   
         LTORG                                                                  
*                                                                               
SMFPRTRE DC    A(0)                                                             
SMFPRTLN DC    PL2'0'                                                           
SMFCTR   DC    PL2'0'                                                           
SMFSETSA DC    A(SMFSETS)                                                       
SMFSETSX DC    A(SMFSETX)                                                       
SMFERR   DC    CL48'SMF RECORD NOT WRITTEN RC=..'                               
*                                                                               
SMFSETS  DS    0CL12                                                            
         DC    C'  ',C'    ',AL2(0),A(0)                                        
         DC    C'  ',C'    ',AL2(0),A(0)                                        
SMFSET1  DC    C'C ',C'    ',AL2(1),A(0)                                        
         DC    C'A ',C'    ',AL2(1),A(SMFADD1)                                  
SMFSET2  DC    C'C ',C'    ',AL2(2),A(0)                                        
         DC    C'A ',C'    ',AL2(2),A(SMFADD2)                                  
SMFSET3  DC    C'C ',C'    ',AL2(3),A(0)                                        
         DC    C'A ',C'    ',AL2(3),A(SMFADD3)                                  
SMFSET4  DC    C'C ',C'    ',AL2(4),A(0)                                        
         DC    C'A ',C'    ',AL2(4),A(SMFADD4)                                  
SMFSETX  EQU   *                                                                
*                                                                               
SMFADD1  DC    A(TA1),A(DA1IS),A(DA1F1),A(DA1F2),A(DA1F3),A(DA1F4)              
         DC    A(EA1),X'80000000'                                               
SMFADD2  DC    A(TA2),A(DA2IS),A(DA2F1),A(DA2F2),A(DA2F3),A(DA2F4)              
         DC    A(EA2),X'80000000'                                               
SMFADD3  DC    A(TA3),A(DA3IS),A(DA3F1),A(DA3F2),A(DA3F3),A(DA3F4)              
         DC    A(EA3),X'80000000'                                               
SMFADD4  DC    A(TA4),A(DA4IS),A(DA4F1),A(DA4F2),A(DA4F3),A(DA4F4)              
         DC    A(EA4),X'80000000'                                               
*                                                                               
SMFLIST  DS    0CL36                                                            
*                                                                               
TA1      DC    F'0',PL8'0',CL16'TAPE            ',A(AGY1TA),A(AG$1TA)           
DA1IS    DC    F'0',PL8'0',CL16'IS FILE         ',A(AGY1IS),A(AG$1IS)           
DA1F1    DC    F'0',PL8'0',CL16'DA FILE 1       ',A(AGY1F1),A(AG$1F1)           
DA1F2    DC    F'0',PL8'0',CL16'DA FILE 2       ',A(AGY1F2),A(AG$1F2)           
DA1F3    DC    F'0',PL8'0',CL16'DA FILE 3       ',A(AGY1F3),A(AG$1F3)           
DA1F4    DC    F'0',PL8'0',CL16'DA FILE 4       ',A(AGY1F4),A(AG$1F4)           
EA1      DC    F'0',PL8'0',CL16'ERRORS          ',A(0),A(0)                     
*                                                                               
TA2      DC    F'0',PL8'0',CL16'TAPE            ',A(AGY2TA),A(AG$2TA)           
DA2IS    DC    F'0',PL8'0',CL16'IS FILE         ',A(AGY2IS),A(AG$2IS)           
DA2F1    DC    F'0',PL8'0',CL16'DA FILE 1       ',A(AGY2F1),A(AG$2F1)           
DA2F2    DC    F'0',PL8'0',CL16'DA FILE 2       ',A(AGY2F2),A(AG$2F2)           
DA2F3    DC    F'0',PL8'0',CL16'DA FILE 3       ',A(AGY2F3),A(AG$2F3)           
DA2F4    DC    F'0',PL8'0',CL16'DA FILE 4       ',A(AGY2F4),A(AG$2F4)           
EA2      DC    F'0',PL8'0',CL16'ERRORS          ',A(0),A(0)                     
*                                                                               
TA3      DC    F'0',PL8'0',CL16'TAPE            ',A(AGY3TA),A(AG$3TA)           
DA3IS    DC    F'0',PL8'0',CL16'IS FILE         ',A(AGY3IS),A(AG$3IS)           
DA3F1    DC    F'0',PL8'0',CL16'DA FILE 1       ',A(AGY3F1),A(AG$3F1)           
DA3F2    DC    F'0',PL8'0',CL16'DA FILE 2       ',A(AGY3F2),A(AG$3F2)           
DA3F3    DC    F'0',PL8'0',CL16'DA FILE 3       ',A(AGY3F3),A(AG$3F3)           
DA3F4    DC    F'0',PL8'0',CL16'DA FILE 4       ',A(AGY3F4),A(AG$3F4)           
EA3      DC    F'0',PL8'0',CL16'ERRORS          ',A(0),A(0)                     
*                                                                               
TA4      DC    F'0',PL8'0',CL16'TAPE            ',A(AGY4TA),A(AG$4TA)           
DA4IS    DC    F'0',PL8'0',CL16'IS FILE         ',A(AGY4IS),A(AG$4IS)           
DA4F1    DC    F'0',PL8'0',CL16'DA FILE 1       ',A(AGY4F1),A(AG$4F1)           
DA4F2    DC    F'0',PL8'0',CL16'DA FILE 2       ',A(AGY4F2),A(AG$4F2)           
DA4F3    DC    F'0',PL8'0',CL16'DA FILE 3       ',A(AGY4F3),A(AG$4F3)           
DA4F4    DC    F'0',PL8'0',CL16'DA FILE 4       ',A(AGY4F4),A(AG$4F4)           
EA4      DC    F'0',PL8'0',CL16'ERRORS          ',A(0),A(0)                     
*                                                                               
SMFLISTX EQU   *                                                                
*                                                                               
         DS    0D                                                               
         DC    C'*SMFBAL*'                                                      
SMFBAL   DC    XL255'00'                                                        
*                                                                               
         DS    0D                                                               
         DC    C'*SMFCPY*'                                                      
SMFCOPY  DC    XL255'00'                                                        
         EJECT                                                                  
         DS    0D                                                               
         DC    C'*SYSNTAB'                                                      
SYSNTAB  DC    256CL10' '                                                       
         DC    10X'FF'                                                          
*&&US                                                                           
         DS    0D                                                               
AGYTAB   DS    0CL2                US TABLE OF DDS TEST SECURITY AGYS           
         DC    C'HD'                                                            
         DC    C'SJ'                                                            
         DC    C'SX'                                                            
         DC    C'TG'                                                            
         DC    C'T1'                                                            
         DC    C'XD'                                                            
         DC    C'3S'                                                            
AGYTABX  DC    X'FFFF'                                                          
*                                                                               
         DS    0D                  US TABLE OF SYSTEMS AND FILE SETS            
SYSTAB   DS    0XL40                                                            
         DC    X'00',C'ANY',C'        ',A(FTAB00),XL4'00'                       
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'01',C'SER',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'02',C'SPO',C'RECV    ',A(FTAB02),XL4'00'                       
         DC    X'2321000000',X'3637000000'                                      
         DC    X'272A000000',X'2200000000'                                      
         DC    X'03',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'04',C'PRI',C'PRECV   ',A(FTAB04),XL4'00'                       
         DC    X'4042000000',X'4143000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'05',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'06',C'ACC',C'ACCRCV  ',A(FTAB06),XL4'00'                       
         DC    X'696A6B0000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'07',C'TAL',C'TALRCV  ',A(FTAB07),XL4'00'                       
         DC    X'7172000000',X'7576000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'08',C'REP',C'REPRCV  ',A(FTAB08),XL4'00'                       
         DC    X'8182000000',X'8788000000'                                      
         DC    X'8900000000',X'8A00000000'                                      
         DC    X'09',C'MBA',C'MBARCV  ',A(FTAB09),XL4'00'                       
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0A',C'CON',C'CTRCVR  ',A(FTAB0A),XL4'00'                       
         DC    X'AEAF000000',X'A100000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0B',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0C',C'DEM',C'DEMRCV  ',A(FTAB0C),XL4'00'                       
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0D',C'STR',C'TRFRCV  ',A(FTAB0D),XL4'00'                       
         DC    X'3334000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0E',C'PER',C'PERRCV  ',A(FTAB0E),XL4'00'                       
         DC    X'E1E2000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0F',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
*                                                                               
         DS    0D                  US TABLE OF FILES                            
FTAB00   DS    0XL64                                                            
         DC    X'21',C'SPTFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'22',C'STAFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'23',C'SPTDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'25',C'SPTREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'26',C'DEMFILN',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'27',C'UNTDIR ',12F'0',AL1(0,0),X'02000000000'                  
         DC    X'28',C'DEMFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'29',C'NTIFILQ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2A',C'UNTFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'2B',C'DEMFILW',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2C',C'PAVDIR ',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'2D',C'DEMDIRN',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'2E',C'PAVFIL ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2F',C'DEMDIRA',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'30',C'DEMDIRR',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'31',C'DEMFILR',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'33',C'TRFDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'32',C'TRFFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'35',C'TRFREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'36',C'XSPDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'37',C'XSPFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'38',C'NTIDIR ',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'3A',C'NTIFILW',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'39',C'NTIFILN',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3B',C'DEMFILO',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3C',C'NTIFILO',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3D',C'DEMFILP',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3E',C'NTIFILP',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3F',C'DEMFILQ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'40',C'PRTDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'41',C'PUBDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'42',C'PRTFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'43',C'PUBFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'45',C'PUBREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'47',C'NTIFILY',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'48',C'DEMFILU',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'49',C'DEMFILV',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4A',C'DEMFILY',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4B',C'DEMFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4C',C'DEMFILC',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4D',C'DEMFILD',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4E',C'DEMFILE',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4F',C'NTIFILZ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'51',C'DEMFLTN',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'52',C'DEMFLTA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'53',C'DEMFLTR',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'54',C'NTIFLTA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'55',C'PAVFLTA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'56',C'DEMFIL6',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'57',C'DEMFIL7',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'58',C'DEMFIL8',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'59',C'DEMFIL9',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5A',C'NTIFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5B',C'NTIFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5C',C'NTIFILC',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5E',C'NTIFILE',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5F',C'DEMFIL4',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'63',C'ACCREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'66',C'ACCDAY ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'69',C'ACCDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'6A',C'ACCMST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'6B',C'ACCARC ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'6C',C'ACCHST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'71',C'TALDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'72',C'TALFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'73',C'TALREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'75',C'CHKDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'76',C'CHKFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'81',C'REPDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'82',C'REPFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'83',C'REPREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'87',C'ROIDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'88',C'ROIFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'89',C'RRGNEW ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'8A',C'REVIEW ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'91',C'MBADIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'92',C'MBAFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'93',C'MBAREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'95',C'MBANDX ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'96',C'MBUDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'97',C'MBUFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'A1',C'CTFILE ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'A3',C'CTREQ  ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'AE',C'GENDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'AF',C'GENFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'C0',C'PAVFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C1',C'DEMFIL1',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C2',C'DEMFIL2',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C3',C'DEMFIL3',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C4',C'DEMFIL5',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C5',C'PAVFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C6',C'DEMFILF',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C7',C'DEMFILG',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C8',C'DEMFILH',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C9',C'DEMFILI',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CA',C'DEMFILJ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CB',C'DEMFILK',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CC',C'DEMFILL',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CD',C'DEMFILM',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CE',C'DEMFILS',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CF',C'DEMFILZ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'E1',C'PERDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'E2',C'PERFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'E3',C'PERREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB00X DC    X'FF'                                                            
         DS    0D                                                               
FTAB02   DS    0XL64                                                            
         DC    X'21',C'SPTFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'22',C'STAFIL ',12F'0',AL1(4,1),X'000000000000'                 
         DC    X'23',C'SPTDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'25',C'SPTREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'27',C'UNTDIR ',12F'0',AL1(3,1),X'020000000000'                 
         DC    X'2A',C'UNTFIL ',12F'0',AL1(3,2),X'000000000000'                 
         DC    X'36',C'XSPDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'37',C'XSPFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB02X DC    X'FF'                                                            
         DS    0D                                                               
FTAB04   DS    0XL64                                                            
         DC    X'40',C'PRTDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'41',C'PUBDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'42',C'PRTFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'43',C'PUBFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'45',C'PUBREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB04X DC    X'FF'                                                            
         DS    0D                                                               
FTAB06   DS    0XL64                                                            
         DC    X'63',C'ACCREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'66',C'ACCDAY ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'69',C'ACCDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'6A',C'ACCMST ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'6B',C'ACCARC ',12F'0',AL1(1,3),X'000000000000'                 
         DC    X'6C',C'ACCHST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB06X DC    X'FF'                                                            
         DS    0D                                                               
FTAB07   DS    0XL64                                                            
         DC    X'71',C'TALDIR ',12F'0',AL1(1,1),X'02000000000'                  
         DC    X'72',C'TALFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'73',C'TALREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'75',C'CHKDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'76',C'CHKFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB07X DC    X'FF'                                                            
         DS    0D                                                               
FTAB08   DS    0XL64                                                            
         DC    X'81',C'REPDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'82',C'REPFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'83',C'REPREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'87',C'ROIDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'88',C'ROIFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'89',C'RRGNEW ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'8A',C'REVIEW ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB08X DC    X'FF'                                                            
         DS    0D                                                               
FTAB09   DS    0XL64                                                            
         DC    X'91',C'MBADIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'92',C'MBAFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'93',C'MBAREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'95',C'MBANDX ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'96',C'MBUDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'97',C'MBUFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB09X DC    X'FF'                                                            
         DS    0D                                                               
FTAB0A   DS    0XL64                                                            
         DC    X'A1',C'CTFILE ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'A3',C'CTREQ  ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'AE',C'GENDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'AF',C'GENFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0AX DC    X'FF'                                                            
         DS    0D                                                               
FTAB0C   DS    0XL64                                                            
         DC    X'26',C'DEMFILN',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'28',C'DEMFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'29',C'NTIFILQ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2B',C'DEMFILW',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2C',C'PAVDIR ',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'2D',C'DEMDIRN',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'2E',C'PAVFIL ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'2F',C'DEMDIRA',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'30',C'DEMDIRR',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'31',C'DEMFILR',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'38',C'NTIDIR ',12F'0',AL1(0,0),X'020000000000' USDEMO          
         DC    X'39',C'NTIFILN',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3A',C'NTIFILW',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3B',C'DEMFILO',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3C',C'NTIFILO',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3D',C'DEMFILP',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3E',C'NTIFILP',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3F',C'DEMFILQ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'3D',C'DEMFILP',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'47',C'NTIFILY',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'49',C'DEMFILV',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4A',C'DEMFILY',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4B',C'DEMFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4C',C'DEMFILC',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4D',C'DEMFILD',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4E',C'DEMFILE',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'4F',C'NTIFILZ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'56',C'DEMFIL6',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'57',C'DEMFIL7',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'58',C'DEMFIL8',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'59',C'DEMFIL9',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5A',C'NTIFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5B',C'NTIFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5C',C'NTIFILC',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5E',C'NTIFILE',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'5F',C'DEMFIL4',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C0',C'PAVFILB',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C1',C'DEMFIL1',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C2',C'DEMFIL2',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C3',C'DEMFIL3',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C4',C'DEMFIL5',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C5',C'PAVFILA',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C6',C'DEMFILF',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C7',C'DEMFILG',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C8',C'DEMFILH',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'C9',C'DEMFILI',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CA',C'DEMFILJ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CB',C'DEMFILK',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CC',C'DEMFILL',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CD',C'DEMFILM',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CE',C'DEMFILS',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'CF',C'DEMFILZ',12F'0',AL1(0,0),X'000000000000' USDEMO          
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0CX DC    X'FF'                                                            
         DS    0D                                                               
FTAB0D   DS    0XL64                                                            
         DC    X'21',C'SPTFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'22',C'STAFIL ',12F'0',AL1(0,0),X'02000000000'                  
         DC    X'23',C'SPTDIR ',12F'0',AL1(1,1),X'02000000000'                  
         DC    X'33',C'TRFDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'32',C'TRFFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'35',C'TRFREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0DX DC    X'FF'                                                            
         DS    0D                                                               
FTAB0E   DS    0XL64                                                            
         DC    X'E1',C'PERDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'E2',C'PERFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'E3',C'PERREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0EX DC    X'FF'                                                            
         DS    0D                                                               
FILTABFF DS    0XL64                                                            
         DC    X'00',C'NOTHING',12F'0',AL1(0,0),X'000000000000'                 
FILTBFFX DC    X'FF'                                                            
*&&                                                                             
         EJECT                                                                  
*&&UK                                                                           
         DS    0D                                                               
AGYTAB   DS    0CL2                UK TABLE OF DDS TEST SECURITY AGYS           
         DC    C'++'                                                            
         DC    C'+&&'                                                           
         DC    C'&&+'                                                           
         DC    C'&&&&'                                                          
         DC    C'*A'                                                            
         DC    C'*F'                                                            
         DC    C'*G'                                                            
         DC    C'*H'                                                            
         DC    C'*K'                                                            
         DC    C'*M'                                                            
         DC    C'*N'                                                            
         DC    C'*O'                                                            
         DC    C'*P'                                                            
         DC    C'*U'                                                            
         DC    C'*V'                                                            
         DC    C'*X'                                                            
         DC    C'*Z'                                                            
         DC    C'*0'                                                            
         DC    C'*1'                                                            
         DC    C'*2'                                                            
         DC    C'%9'                                                            
         DC    C'#1'                                                            
         DC    C'AJ'                                                            
         DC    C'A6'                                                            
         DC    C'CA'                                                            
         DC    C'CJ'                                                            
         DC    C'CN'                                                            
         DC    C'CP'                                                            
         DC    C'DB'                                                            
         DC    C'DW'                                                            
         DC    C'DY'                                                            
         DC    C'D1'                                                            
         DC    C'D2'                                                            
         DC    C'D2' ????                                                       
         DC    C'D4'                                                            
         DC    C'D5'                                                            
         DC    C'D6'                                                            
         DC    C'D7'                                                            
         DC    C'D8'                                                            
         DC    C'D9'                                                            
         DC    C'GM'                                                            
         DC    C'G0'                                                            
         DC    C'J6'                                                            
         DC    C'NU'                                                            
         DC    C'OH'                                                            
         DC    C'OI'                                                            
         DC    C'ON'                                                            
         DC    C'PJ'                                                            
         DC    C'P6'                                                            
         DC    C'XC'                                                            
         DC    C'XD'                                                            
         DC    C'XE'                                                            
         DC    C'XU'                                                            
         DC    C'YP'                                                            
         DC    C'1F'                                                            
         DC    C'1W'                                                            
         DC    C'3A'                                                            
         DC    C'3B'                                                            
         DC    C'3G'                                                            
         DC    C'3I'                                                            
         DC    C'4A'                                                            
         DC    C'8A'                                                            
         DC    C'9A'                                                            
AGYTABX  DC    X'FFFF'                                                          
*                                                                               
         DS    0D                  UK TABLE OF SYSTEMS AND FILE SETS            
SYSTAB   DS    0XL40                                                            
         DC    X'00',C'ANY',C'        ',A(FTAB00),XL4'00'                       
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'01',C'SER',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'02',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'03',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'04',C'MED',C'MEDRCV  ',A(FTAB04),XL4'00'                       
         DC    X'4142000000',X'4647000000'                                      
         DC    X'48494A0000',X'4B4C4D4E4F'                                      
         DC    X'05',C'MPL',C'MPLRCV  ',A(FTAB05),XL4'00'                       
         DC    X'5152000000',X'5859000000'                                      
         DC    X'5E5F000000',X'0000000000'                                      
         DC    X'06',C'ACC',C'ACCRCV  ',A(FTAB06),XL4'00'                       
         DC    X'696A6B0000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'07',C'FEE',C'FEERCV  ',A(FTAB07),XL4'00'                       
         DC    X'7172000000',X'5859000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'08',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'09',C'MBA',C'MBARCV  ',A(FTAB09),XL4'00'                       
         DC    X'9192000000',X'9697000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0A',C'CON',C'CTRCVR  ',A(FTAB0A),XL4'00'                       
         DC    X'AEAF000000',X'A100000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0B',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0C',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0D',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0E',C'PER',C'PERRCV  ',A(FTAB0E),XL4'00'                       
         DC    X'E1E2000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0F',C'   ',C'        ',A(0),XL4'00'                            
         DC    X'0000000000',X'0000000000'                                      
         DC    X'0000000000',X'0000000000'                                      
*                                                                               
         DS    0D                  UK TABLE OF FILES                            
FTAB00   DS    0XL64                                                            
         DC    X'41',C'MEDDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'42',C'MEDFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'43',C'MEDREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'46',C'DMGDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'47',C'DMGFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'48',C'DMNDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'49',C'DMNNEW ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'4A',C'DMNOLD ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'4B',C'DMODIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'4C',C'DMO1FL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'4D',C'DMO2FL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'4E',C'DMO3FL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'4F',C'DMO4FL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'51',C'MPLDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'52',C'MPLFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'53',C'MPLREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'58',C'MPCDRS ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'59',C'MPCFLS ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'5E',C'MPCDRC ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'5F',C'MPCFLC ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'63',C'ACCREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'66',C'ACCDAY ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'69',C'ACCDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'6A',C'ACCMST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'6B',C'ACCARC ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'6C',C'ACCHST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'71',C'FEEDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'72',C'FEEFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'73',C'FEEREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'A1',C'CTFILE ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'A3',C'CTREQ  ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'AE',C'GENDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'AF',C'GENFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'E1',C'PERDIR ',12F'0',AL1(0,0),X'020000000000'                 
         DC    X'E2',C'PERFIL ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'E3',C'PERREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB00X DC    X'FF'                                                            
         DS    0D                                                               
FTAB04   DS    0XL64                                                            
         DC    X'41',C'MEDDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'42',C'MEDFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'43',C'MEDREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'46',C'DMGDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'47',C'DMGFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'48',C'DMNDIR ',12F'0',AL1(3,1),X'020000000000'                 
         DC    X'49',C'DMNNEW ',12F'0',AL1(3,2),X'000000000000'                 
         DC    X'4A',C'DMNOLD ',12F'0',AL1(3,3),X'000000000000'                 
         DC    X'4B',C'DMODIR ',12F'0',AL1(4,1),X'020000000000'                 
         DC    X'4C',C'DMO1FL ',12F'0',AL1(4,2),X'000000000000'                 
         DC    X'4D',C'DMO2FL ',12F'0',AL1(4,3),X'000000000000'                 
         DC    X'4E',C'DMO3FL ',12F'0',AL1(4,4),X'000000000000'                 
         DC    X'4F',C'DMO4FL ',12F'0',AL1(4,5),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB04X DC    X'FF'                                                            
         DS    0D                                                               
FTAB05   DS    0XL64                                                            
         DC    X'51',C'MPLDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'52',C'MPLFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'53',C'MPLREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'58',C'MPCDRS ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'59',C'MPCFLS ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'5E',C'MPCDRC ',12F'0',AL1(3,1),X'020000000000'                 
         DC    X'5F',C'MPCFLC ',12F'0',AL1(3,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB05X DC    X'FF'                                                            
         DS    0D                                                               
FTAB06   DS    0XL64                                                            
         DC    X'63',C'ACCREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'66',C'ACCDAY ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'69',C'ACCDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'6A',C'ACCMST ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'6B',C'ACCARC ',12F'0',AL1(1,3),X'000000000000'                 
         DC    X'6C',C'ACCHST ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB06X DC    X'FF'                                                            
         DS    0D                                                               
FTAB07   DS    0XL64                                                            
         DC    X'71',C'FEEDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'72',C'FEEFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'73',C'FEEREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB07X DC    X'FF'                                                            
         DS    0D                                                               
FTAB09   DS    0XL64                                                            
         DC    X'91',C'MBADIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'92',C'MBAFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'93',C'MBAREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'95',C'MBANDX ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'96',C'MBUDIR ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'97',C'MBUFIL ',12F'0',AL1(2,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB09X DC    X'FF'                                                            
         DS    0D                                                               
FTAB0A   DS    0XL64                                                            
         DC    X'A1',C'CTFILE ',12F'0',AL1(2,1),X'020000000000'                 
         DC    X'A3',C'CTREQ  ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'AE',C'GENDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'AF',C'GENFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0AX DC    X'FF'                                                            
         DS    0D                                                               
FTAB0E   DS    0XL64                                                            
         DC    X'E1',C'PERDIR ',12F'0',AL1(1,1),X'020000000000'                 
         DC    X'E2',C'PERFIL ',12F'0',AL1(1,2),X'000000000000'                 
         DC    X'E3',C'PERREQ ',12F'0',AL1(0,0),X'000000000000'                 
         DC    X'00',C'UNKNOWN',12F'0',AL1(0,0),X'000000000000'                 
FILTB0EX DC    X'FF'                                                            
         DS    0D                                                               
FILTABFF DS    0XL64                                                            
         DC    X'00',C'NOTHING',12F'0',AL1(0,0),X'000000000000'                 
FILTBFFX DC    X'FF'                                                            
*&&                                                                             
         EJECT                                                                  
AGY1TA   DC    256F'0'                                                          
AGY1IS   DC    256F'0'                                                          
AGY1F1   DC    256F'0'                                                          
AGY1F2   DC    256F'0'                                                          
AGY1F3   DC    256F'0'                                                          
AGY1F4   DC    256F'0'                                                          
*                                                                               
AGY2TA   DC    256F'0'                                                          
AGY2IS   DC    256F'0'                                                          
AGY2F1   DC    256F'0'                                                          
AGY2F2   DC    256F'0'                                                          
AGY2F3   DC    256F'0'                                                          
AGY2F4   DC    256F'0'                                                          
*                                                                               
AGY3TA   DC    256F'0'                                                          
AGY3IS   DC    256F'0'                                                          
AGY3F1   DC    256F'0'                                                          
AGY3F2   DC    256F'0'                                                          
AGY3F3   DC    256F'0'                                                          
AGY3F4   DC    256F'0'                                                          
*                                                                               
AGY4TA   DC    256F'0'                                                          
AGY4IS   DC    256F'0'                                                          
AGY4F1   DC    256F'0'                                                          
AGY4F2   DC    256F'0'                                                          
AGY4F3   DC    256F'0'                                                          
AGY4F4   DC    256F'0'                                                          
*                                                                               
AG$1TA   DC    256PL8'0'                                                        
AG$1IS   DC    256PL8'0'                                                        
AG$1F1   DC    256PL8'0'                                                        
AG$1F2   DC    256PL8'0'                                                        
AG$1F3   DC    256PL8'0'                                                        
AG$1F4   DC    256PL8'0'                                                        
*                                                                               
AG$2TA   DC    256PL8'0'                                                        
AG$2IS   DC    256PL8'0'                                                        
AG$2F1   DC    256PL8'0'                                                        
AG$2F2   DC    256PL8'0'                                                        
AG$2F3   DC    256PL8'0'                                                        
AG$2F4   DC    256PL8'0'                                                        
*                                                                               
AG$3TA   DC    256PL8'0'                                                        
AG$3IS   DC    256PL8'0'                                                        
AG$3F1   DC    256PL8'0'                                                        
AG$3F2   DC    256PL8'0'                                                        
AG$3F3   DC    256PL8'0'                                                        
AG$3F4   DC    256PL8'0'                                                        
*                                                                               
AG$4TA   DC    256PL8'0'                                                        
AG$4IS   DC    256PL8'0'                                                        
AG$4F1   DC    256PL8'0'                                                        
AG$4F2   DC    256PL8'0'                                                        
AG$4F3   DC    256PL8'0'                                                        
AG$4F4   DC    256PL8'0'                                                        
         EJECT                                                                  
         DS    0D                                                               
         DC    CL8'*SSBSSB*'                                                    
SSB      DC    X'0000FF',X'40',4X'00',CL8' ',32X'00',A(0),204X'00'              
         DS    0D                                                               
         DC    CL8'*UTLUTL*'                                                    
UTL      DC    F'0',X'00',XL251'00'                                             
         DC    C'*RCVREC*'                                                      
RCVREC   DS    2000D               TAPE RECOVERY RECORD                         
         DS    0D                                                               
         DC    C'*DSKREC*'                                                      
DSKREC   DS    2000D               DISK RECOVERY RECORD                         
DSKRECL  EQU   *-DSKREC                                                         
         DS    0D                                                               
         DC    C'*USRREC*'                                                      
USRREC   DS    12000C              ACTVUSR FILE RECORD                          
USRRECL  EQU   *-USRREC                                                         
         DS    0D                                                               
         DC    C'*TRKBUF*'                                                      
TRKBUFF  DS    8000D               TRACK BUFFER                                 
         DS    0D                                                               
         DC    C'*WRKWRK*'                                                      
RCVWRK   DS    10000D              WORKING STORAGE                              
         DS    0D                                                               
         DC    C'*USRACT*'                                                      
ACTVUSER DC    (QTABLEN)X'00'      ACTIVE USER TABLE                            
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE                                                     *         
***********************************************************************         
WORKD    DSECT                                                                  
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
HALF1    DS    H                                                                
RECLEN   DS    H                   PHYSICAL REC LEN FROM RECOVERY REC           
LGLLEN   DS    H                   LOGICAL REC LEN FROM REC                     
LGLEOR   DS    XL2                 END OF LOGICAL REC DATA                      
LTRAIL   DS    H                                                                
ATRAIL   DS    A                                                                
BYTE     DS    X                                                                
BYTE1    DS    X                                                                
FLAG     DS    X                                                                
PASS     DS    X                                                                
*                                                                               
FTABADR  DS    A                   ADDRESS OF FTAB ENTRY                        
TACCADR  DS    A                   ADDRESS OF TAPE ACCUMS                       
DACCADR  DS    A                   ADDRESS OF DISK ACCUMS                       
SVSSET   DS    H                   SAVED SMF SET NUMBER                         
SVSNDX   DS    H                   SAVED SMF NDX NUMBER                         
SVSTYP   DS    CL4                 SAVED SMF TYPE                               
SVSAOC   DS    CL4                 SAVED CHGS OR ADDS                           
*                                                                               
CARD     DS    CL80                                                             
SAVERE   DS    F                                                                
SAVERER1 DS    4F                                                               
DMCB     DS    6F                                                               
PARA     DS    6F                                                               
TISNOW   DS    F                   TIME IN SECONDS SINCE 1/1/00                 
TIBNOW   DS    CL6                 DATE/TIME BINARY X'YYMMDDHHMMSS'             
DATNOW   DS    CL6                 DATE IN C'YYMMDD'YMDHMS                      
WORKX    EQU   *                                                                
***********************************************************************         
* DSECT TO COVER RECOVERY HEADER                                      *         
***********************************************************************         
RCVRECD  DSECT                                                                  
RCVLEN   DS    XL2                 RECOVERY RECORD LENGTH                       
         DS    XL2                 N/D                                          
RCVHDR   DS    0XL24                                                            
*DMRCVRHDR                         RECOVERY HEADER                              
       ++INCLUDE DMRCVRHDR                                                      
*                                                                               
RCVHTYP  DS    CL8                 HEADER TYPE **SJOB** OR **EJOB**             
RCVHJOB  DS    CL8                 JOBNAME                                      
RCVHJES  DS    CL8                 JESNAME                                      
RCVHDSN  DS    CL44                DSN                                          
RCVHDSNL EQU   *-RCVLEN            HEADER LENGTH WITH DSN                       
         ORG   RCVHTYP                                                          
*                                                                               
RCVDATA  DS    8192X               RECOVERY DATA                                
*DMRCVREXT                         RECOVERY TRAILER                             
       ++INCLUDE DMRCVREXT                                                      
                                                                                
***********************************************************************         
* DSECT TO COVER RECOVERY FILES TABLE                                 *         
***********************************************************************         
FILETABD DSECT                                                                  
FILENUM  DS    XL1                 FILE NUMBER                                  
FILENAME DS    CL7                 FILE NAME                                    
*                                                                               
FILECNTS DS    0XL4                                                             
FILECPYS DS    XL4                 N'COPIES                                     
FILECHAS DS    XL4                 N'CHANGES                                    
FILEADDS DS    XL4                 N'ADDS                                       
FILETOTS DS    XL4                 TOTAL N'RECORDS                              
FILECNTX EQU   *                                                                
*                                                                               
FILDCNTS DS    0XL4                                                             
FILDCPYS DS    XL4                 DDS N'COPIES                                 
FILDCHAS DS    XL4                 DDS N'CHANGES                                
FILDADDS DS    XL4                 DDS N'ADDS                                   
FILDTOTS DS    XL4                 DDS TOTAL N'RECORDS                          
FILDCNTX EQU   *                                                                
*                                                                               
FILPCNTS DS    0XL4                                                             
FILPCPYS DS    XL4                 PASSIVE N'COPIES                             
FILPCHAS DS    XL4                 PASSIVE N'CHANGES                            
FILPADDS DS    XL4                 PASSIVE N'ADDS                               
FILPTOTS DS    XL4                 PASSIVE TOTAL N'RECORDS                      
FILPCNTX EQU   *                                                                
*                                                                               
FILESSET DS    AL1                 SET NUMBER FOR SMF COUNTERS                  
FILESNDX DS    AL1                 NDX NUMBER FOR SMF COUNTERS                  
FILESFL1 DS    XL1                 X'02'INDEX SEQ                               
         DS    XL5                                                              
*                                                                               
FILECNTN EQU   (FILPCNTX-FILECNTS)/L'FILECNTS                                   
FILECNTL EQU   FILPCNTX-FILECNTS                                                
FILETABL EQU   *-FILETABD                                                       
                                                                                
TOTLD    DSECT                                                                  
TOTTEXT  DS    CL16                TEXT ENTRY DEFINING TIME PERIOD              
TOTCPYS  DS    F                   TOTAL COPIES                                 
TOTCHGS  DS    F                   TOTAL CHANGES                                
TOTADDS  DS    F                   TOTAL ADDS                                   
TOTRECS  DS    F                   TOTAL RECORDS                                
TOTBYTES DS    F                   TOTAL BYTES                                  
TOTLLNQ  EQU   *-TOTLD                                                          
                                                                                
*DMFILTABD                                                                      
       ++INCLUDE DMFILTABD                                                      
                                                                                
*DMRCVACTV                                                                      
       ++INCLUDE DMRCVACTV                                                      
QLEN     EQU   AELEN                                                            
QMAXE    EQU   AEMAX               MAX NUMBER OF ENTRIES PER ROW                
QMAXR    EQU   AEMAXR              MAX NUMBER OF ROWS                           
QTABLEN  EQU   QLEN*QMAXR          LEN OF TABLE                                 
                                                                                
*DMGREQUS                                                                       
       ++INCLUDE DMGREQUS                                                       
                                                                                
*DDDPRINT                                                                       
       ++INCLUDE DDDPRINT                                                       
                                                                                
SSOOFFD  DSECT                                                                  
*FASSBOFF                                                                       
       ++INCLUDE FASSBOFF                                                       
                                                                                
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
                                                                                
*DDSMFFBAL                                                                      
       ++INCLUDE DDSMFFBAL                                                      
                                                                                
*DDSMTPD                                                                        
       ++INCLUDE DDSMTPD                                                        
                                                                                
         IEFJFCBN LIST=YES                                                      
                                                                                
         IEFZB4D2                  NEEDED FOR TXTDD ETC DEFINITIONS             
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'011DMRCVDMP  08/12/20'                                      
         END                                                                    
