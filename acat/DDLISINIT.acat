*          DATA SET DDLISINIT  AT LEVEL 094 AS OF 05/01/02                      
*CATALP LISINIT                                                                 
*                                                                               
         SPACE 2                                                                
*                                                                               
* THIS SUBROUTINE INITIALIZES THE LIST  PROGRMS.                                
* PARAM1: ADDR OF LISTERD.                                                      
*                                                                               
* IT READS A SET OF CONTROL CARDS WHICH TELL                                    
* WHAT IS TO BE PRINTED, FILTERS, TOTALS ETC. IT ALSO GIVES THE NAME OF         
* A PANVALET FILE WHICH IS A SLIGHTLY MODIFIED DSECT OF THE                     
* RECORDS TO BE READ. THESE MODIFICATIONS ARE TO IDENTIFY ELEMENT               
* CODES, ELIMINATE ORGS ETC.                                                    
*                                                                               
         TITLE 'LIST INITIALIZATION'                                            
LISINIT  CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKX-WORKD,**LISINIT,R8                                         
         USING WORKD,RC                                                         
         USING LISINIT+4096,R8                                                  
         USING LISTERD,R9                                                       
         L     R9,0(R1)                                                         
         L     RA,CPRINT                                                        
         USING DPRINT,RA                                                        
*                                                                               
         ZAP   LINE,=PL2'99'       FORCE PAGE BREAK                             
         MVC   TITLE+10(30),=CL30'CONTROL CARD PRINT'                           
         BAS   RE,PREPRNT                                                       
         SPACE                                                                  
         MVC   P+10(13),=CL13'CONTROL CARDS'                                    
         BAS   RE,PREPRNT                                                       
         MVI   P+10,C'-'                                                        
         MVC   P+11(12),P+10                                                    
         BAS   RE,PREPRNT                                                       
         BAS   RE,PREPRNT                                                       
*                                                                               
         BAS   RE,CARDREAD         READ DATA CARDS                              
*                                                                               
         CLC   DIAGS,=C'OFF'       CHECK IF TABLES ARE TO BE PRINTED            
         BE    MAIN2                                                            
         BAS   RE,PRNTTBL          PRINT TABLES                                 
*                                                                               
MAIN2    EQU   *                                                                
* INITIALIZE PRINT HEADERS, BUFFALO                                             
         ZAP   LINE,=PL2'99'                                                    
         MVC   TITLE+10(30),=CL30'PRINT OF FILE:'                               
         MVC   TITLE+30(L'BOOKNAME),BOOKNAME                                    
         BAS   RE,PREPRNT                                                       
*                                                                               
         USING BUFFALOD,R4         INITIALIZE BUFFALO                           
         L     R4,BUFFBUFF                                                      
         MVC   BUFFLKEY(4),TOTKEYL   SET BUFFALO KEY LENGTH                     
         MVC   BUFFLIST(1),TOTKEYL+3                                            
         MVC   BUFFLALL(4),TOTRECL   SET BUFFALO RECORD LENGTH                  
         MVC   BUFFCOLS,PTOTCNT    SET NUM OF BUFFALO COLS                      
         L     R3,BUFFCOLS                                                      
         SLL   R3,2                SET LENGTH OF COL FIELDS                     
         ST    R3,BUFFWROW         EACH COL IS 1 FULLWORD                       
         ST    R3,BUFFLDTA                                                      
*                                                                               
         GOTO1 BUFFALO,DMCB,=C'SET',BUFFBUFF                                    
         DROP  R4                                                               
*                                                                               
*                                                                               
ENDMAIN  XBASE                                                                  
         EJECT                                                                  
*************************************************************8                  
* SUBROUTINE CARDREAD - READS USER SUPPLIED CONTROL CARDS                       
*                                                                               
*  FILE=BOOKNAME    REQUIRED AS FIRST CARD. BOOKNAME IS THE NAME                
*                    OF THE PANVALET MODIFIED DSECT WHICH DIRECTS               
*                    THE PRINTING FORMAT.                                       
*                                                                               
* EFILT=XXYY        OPTIONAL. FILTERS ON THE ELEMENT. XX,YY ARE                 
*                    LOWER AND UPPER HEX LIMITS. YY MUST BE SPECIFIED.          
*                                                                               
* PRINT=(ON OR OFF) OPTIONAL. IF ON, ALL FIELDS ARE PRINTED EXCEPT              
*                     THOSE WHICH ARE SPECIFIED.                                
*                     IF OFF, ONLY THOSE FIELDS SPECIFI ARE PRINTED.            
*                     DEFAULT=ON                                                
*                                                                               
* RFILT=CCLLXX...XYY...Y                                                        
*                   FILTERS ON RAW DATA. FILTERS ON COLUMN CC FOR               
*                   LL COLUMNS. THE LENGTH DETERMINES THE LENGTH OF             
*                   XX...X AND YY...Y WHICH ARE THE LOWER AND                   
*                   UPPER LIMITS FOR THE FIELD IN HEX. ALL FIELDS               
*                   SHOULD BE ACCURATE AS NO CHECKING IS DONE.                  
*                                                                               
* DIAGS=(ON OR OFF) OPTIONAL. IF ON, PRINTS TABLES FROM DSECT.                  
*                                                                               
* SUPPRESS          WILL NOT PRINT VALUES WHICH ARE BINARY ZERO.                
*                                                                               
* TYPE=XX           OPTIONAL. THE HEX VALUE OF THE RECORD TYPE TO BE            
*                     PRINTED. THIS OCCURS AS THE FIRST BYTE OF THE             
*                     RECORD. (00 WILL NOT WORK)                                
*                                                                               
* FIELDS            THE NAME OF THOSE FIELDS WHICH ARE (NOT) TO BE              
*                     PRINTED (DEPENDING ON PRINT CARD). THESE MUST BE          
*                     THE SAME NAMES WHICH APEAR IN THE LABEL FIELD OF          
*                     THE MODIFIED DSECT.                                       
*                                                                               
* /*                REQUIRED LAST CONTROL CARD.                                 
*                                                                               
***************************************************************                 
*                                                                               
CARDREAD NTR1                                                                   
********* SET DEFAULTS, INITIALIZE                                              
         MVI   OVERRIDE,X'00'                                                   
         MVI   UNDRRIDE,X'40'                                                   
         MVI   ELFILTLO,X'00'                                                   
         MVI   ELFILTHI,X'FF'                                                   
         MVI   RECTYPE,X'00'                                                    
         MVC   LIMIT,=F'200'                                                    
         MVC   DIAGS,=C'OFF'                                                    
         MVC   OFFTOTAL,=F'0'                                                   
         LA    R3,FTBLBEG                                                       
         ST    R3,FTNEXT                                                        
         LA    R3,KTOTBEG                                                       
         ST    R3,KTOTNEXT                                                      
         XC    TOTHEAD,TOTHEAD     CLEAR TOTAL HEADER LINE                      
         LA    R3,TOTHEAD+10                                                    
         ST    R3,NXTTHLOC                                                      
*                                                                               
         GOTO1 CARDS,DMCB,CARD,=C'RE00'                                         
         CLC   CARD(4),=C'FILE'    FILE CARD MUST BE FIRST                      
         BE    FILECARD                                                         
         MVC   P+10,=C'CTL CARDS MUST BEGIN WITH FILECARD'                      
         GOTO1 PREPRNT                                                          
         B     XITRCARD                                                         
*                                                                               
READIT   MVC   P+10(80),CARD       PRINT CONTROL CARD                           
         BAS   RE,PREPRNT                                                       
         GOTO1 CARDS,DMCB,CARD,=C'RE00'                                         
         CLC   CARD(2),=C'/*'                                                   
         BE    XITRCARD                                                         
         CLC   CARD(5),=C'PRINT'                                                
         BE    PRINTCRD                                                         
         CLC   CARD(5),=C'EFILT'                                                
         BE    EFILTCRD                                                         
         CLC   CARD(4),=C'TYPE'                                                 
         BE    TYPECARD                                                         
         CLC   CARD(5),=C'DIAGS'                                                
         BE    DIAGCARD                                                         
         CLC   CARD(4),=C'KTOT'                                                 
         BNE   CK2                                                              
         BAS   RE,KTOTCARD                                                      
         B     READIT                                                           
CK2      CLC   CARD(4),=C'PTOT'                                                 
         BNE   CK3                                                              
         BAS   RE,PTOTCARD                                                      
         B     READIT                                                           
CK3      CLC   CARD(5),=C'RFILT'                                                
         BNE   CK4                                                              
         BAS   RE,RFILTCRD                                                      
         B     READIT                                                           
CK4      CLC   CARD(8),=C'SUPPRESS'                                             
         BE    SUPCARD                                                          
CK5      EQU   *                                                                
*                                                                               
         LA    R6,TBL1BEG          FIND FIELD IN TABLE                          
RCLOOP1  CLC   CARD(L'TBLHEAD1),HEAD1OFF(R6)                                    
         BE    RCFOUND                                                          
         CLC   HEAD1OFF(3,R6),=C'END'                                           
         BE    RCERR                                                            
         LA    R6,TBL1RECL(R6)                                                  
         B     RCLOOP1                                                          
*                                                                               
RCFOUND  NC    CTL1OFF(1,R6),=X'BF'    ZERO PRINT BIT                           
         OC    CTL1OFF(1,R6),UNDRRIDE                                           
         B     READIT                                                           
*                                                                               
RCERR    MVC   LSMSG,=C'COULD NOT FIND THIS FIELD IN DSECT'                     
         BAS   RE,DCARDERR                                                      
         B     XITRCARD                                                         
*                                                                               
FILECARD MVC   BOOKNAME(L'BOOKNAME),CARD+5                                      
*                                                                               
         GOTO1 PANIC,DMCB,=C'READ',=C'DIRECTORY',BOOKNAME,CARD                  
         CLI   DMCB+8,0                                                         
         BNE   FILERR                                                           
         BAS   RE,READDATA                                                      
         B     READIT                                                           
*                                                                               
FILERR   MVC   LSMSG(30),=CL30'BOOKNAME NOT FOUND'                              
         BAS   RE,DCARDERR                                                      
         B     XITRCARD                                                         
*                                                                               
PRINTCRD CLC   CARD+6(2),=C'ON'                                                 
         BNE   CKOFF                                                            
         MVI   OVERRIDE,X'00'      SET VALUES FOR PRINT                         
         MVI   UNDRRIDE,X'40'                                                   
         B     FILLTBL                                                          
CKOFF    CLC   CARD+6(3),=C'OFF'                                                
         BE    GOTOFF                                                           
         MVC   LSMSG,=CL30'BAD ARG ON PRINT CARD'                               
         BAS   RE,DCARDERR                                                      
         B     XITRCARD                                                         
*                                                                               
GOTOFF   MVI   OVERRIDE,X'40'      SET VALUES FOR NO PRINT                      
         MVI   UNDRRIDE,X'00'                                                   
*                                                                               
FILLTBL  LA    R6,TBL1BEG          DO FOR EACH IN TABLE1                        
FTLOOP   CLC   HEAD1OFF(3,R6),=C'END'                                           
         BE    READIT                                                           
         OC    CTL1OFF(1,R6),OVERRIDE     SET OVERRIDE BIT                      
         LA    R6,TBL1RECL(R6)                                                  
         B     FTLOOP                                                           
*                                                                               
TYPECARD GOTO1 HEXIN,DMCB,CARD+5,RECTYPE,2,FULL                                 
         CLC   DMCB+12,=F'0'                                                    
         BNE   READIT                                                           
         MVC   LSMSG(30),=CL30'BAD TYPE CARD'                                   
         BAS   RE,DCARDERR                                                      
         B     XITRCARD                                                         
EFILTCRD EQU   *                   CONVERT TO INTERNAL HEX                      
         GOTO1 HEXIN,DMCB,CARD+6,ELFILTLO,2,FULL                                
         CLC   DMCB+12,=F'0'                                                    
         BE    FILTERR                                                          
         GOTO1 HEXIN,DMCB,CARD+8,ELFILTHI,2,FULL                                
         CLC   DMCB+12,=F'0'                                                    
         BE    FILTERR                                                          
         B     READIT                                                           
*                                                                               
DIAGCARD MVC   DIAGS(3),CARD+6                                                  
         B     READIT                                                           
*                                                                               
SUPCARD  MVI   SUPPRESS,C'Y'                                                    
         B     READIT                                                           
*                                                                               
FILTERR  MVC   LSMSG(30),=CL30'ERROR IN EFILT CARD'                             
         BAS   RE,DCARDERR                                                      
         B     XITRCARD                                                         
*                                                                               
XITRCARD L     R3,KTOTNEXT                                                      
         MVC   KNAMOFF(3,R3),=C'END'                                            
         L     R3,FTNEXT                                                        
         MVI   0(R3),X'FF'         MARK END OF TABLES                           
         XIT1                                                                   
***********************************************************                     
         EJECT                                                                  
**********************************************************                      
* SUBROUTINE RFILTCRD -PROCESS A RFILT CARD AND FILL IN THE FILTER              
*                       TABLE.                                                  
************************************************************                    
*                                                                               
RFILTCRD NTR1                                                                   
         L     R6,FTNEXT           NEXT AVAILABLE SPOT IN TABLE                 
         XC    DUB,DUB                                                          
         PACK  DUB,CARD+6(2)       GET COLUMN                                   
         CVB   R3,DUB                                                           
         ST    R3,FCOLOFF(R6)                                                   
         XC    DUB,DUB                                                          
         PACK  DUB,CARD+8(2)       GET LENGTH                                   
         CVB   R3,DUB                                                           
         ST    R3,FLNGOFF(R6)                                                   
         LR    R2,R3                                                            
         SLL   R2,1                LENGTH OF HEX STRING ON CARD                 
         GOTO1 HEXIN,DMCB,CARD+10,FLIMOFF(R6),(R2)   GET LOW LIMIT              
         LA    R6,FLIMOFF(R6,R3)   POINT TO HI LIMIT AREA IN TABLE              
         LA    R5,CARD+10(R2)      ADDR OF HI LIMIT ON CARD                     
         GOTO1 HEXIN,DMCB,0(R5),0(R6),(R2)     GET HI LIMIT                     
         LA    R6,0(R6,R3)         POINT TO NEXT SPO IN TABLLE                  
         ST    R6,FTNEXT                                                        
         MVI   0(R6),X'FF'         MARK END OF TABLE                            
         XIT1                                                                   
******************************************************8                         
         EJECT                                                                  
*********************************************************                       
*  SUBROUTINE KTOTCARD - PROCESS A KTOT CARD.                                   
*                       FILL KTOT TABLE.                                        
*                                                                               
*  CALLED FROM: CARDREAD - READS CONTROL CARDS                                  
*                                                                               
*  INPUTS : CARD - CONTAINS THE CONTROL CARD KTOT=XXXXXXXXX                     
*                                                                               
*  I/O S  : KTOTNEXT - THE NEXT AVAILABLE LOCATION IN KTOT TABLE                
*           NXTTHLOC - THE NEXT AVAILABLE LOCATION IN TOTAL HEADER              
*                       (THE HEADER USED FOR TOTAL PRINTOUTS)                   
*                                                                               
* LOCALS : R7 - CURRENT ENTRY  IN TABLE 1                                       
*          R6 - CUMULATIVE LENGTH OF FIELDS IN TABLE1                           
*******************************************************                         
KTOTCARD NTR1                                                                   
         SR    R6,R6               R6=0                                         
         LA    R7,TBL1BEG          START WITH BEGINNING OF TABLE1               
*                                                                               
KTLOOP   CLI   CTL1OFF(R7),X'01'   IF GET HERE, KTOT NAME WAS NOT VALID         
         BE    KTNOFIND                                                         
         CLC   HEAD1OFF(L'TBLHEAD1,R7),CARD+5                                   
         BE    KTFIND              KTOT NAME MATCHES TABLE1NAME                 
         L     R2,VAL1OFF(R7)                                                   
         AR    R6,R2               INCREMENT R6                                 
         LA    R7,TBL1RECL(R7)     NEXT ENTRY  IN TABLE1                        
         B     KTLOOP                                                           
*                                                                               
KTFIND   L     R4,KTOTNEXT         FILL IN KTOT                                 
         MVC   KNAMOFF(L'KTOTNAME,R4),HEAD1OFF(R7)                              
         ST    R6,KCOLOFF(R4)                                                   
*                                                                               
         L     R2,NXTTHLOC                                                      
         MVC   0(L'KTOTNAME,R2),HEAD1OFF(R7)                                    
         LA    R2,4+L'KTOTNAME(R2)                                              
         ST    R2,NXTTHLOC                                                      
*                                                                               
         MVC   KCTLOFF(L'KCTL,R4),CTL1OFF(R7)                                   
         MVC   KLENOFF(L'KLENGTH,R4),VAL1OFF(R7)                                
*                                                                               
         LA    R4,KTOTRECL(R4)     UPDATE NEW NEXT                              
         ST    R4,KTOTNEXT                                                      
         MVC   KNAMOFF(3,R4),=C'END'  MARK CURRENT END OF TABLE                 
*                                                                               
         L     R5,TOTKEYL          INCREMENT TOTAL KEY LENGTH                   
         A     R5,VAL1OFF(R7)        FOR USE BY BNSRCH                          
         ST    R5,TOTKEYL                                                       
         L     R5,TOTRECL          INCREMENT TOTAL RECORD LENGTH                
         A     R5,VAL1OFF(R7)         FOR USE BY BUFFALO                        
         ST    R5,TOTRECL                                                       
         B     KTXIT                                                            
*                                                                               
KTNOFIND MVC   LSMSG(30),=CL30'BAD NAME ON KTOT CARD'                           
         BAS   RE,DCARDERR                                                      
*                                                                               
KTXIT    XIT1                                                                   
***********************************************************                     
         EJECT                                                                  
**********************************************************                      
*    SUBROUTINE PTOTCARD - PROCESS A PTOT CARD.                                 
*                MODIFY TABLE1 CONTROL WORD AND INCREMENT                       
*                BUFFALO RECORD LENGTH.                                         
*                                                                               
* CALLED FROM : CARDREAD - READS CONTROL CARDS                                  
*                                                                               
* INPUTS: CARD - THE PTOT CONTROL CARD                                          
*                                                                               
* I / O S:TOTRECL - THE TOTAL RECORD LENGTH OF THE BUFFALO RECORD               
*         NXTTHLOC - THE LOCATION OF NEXT FIELD IN TOTAL HEADER                 
*                                                                               
* LOCALS: R6 - CURRENT ENTRY IN  TABLE1                                         
*         PTOTCNT - THE NUMBR OF PTOT CARDS (AND TOTALS TO BE PERFORMD)         
********************************************************                        
PTOTCARD NTR1                                                                   
         LA    R6,TBL1BEG                                                       
PTLOOP   CLC   HEAD1OFF(L'TBLHEAD1,R6),CARD+5                                   
         BE    PTFIND                                                           
         CLC   HEAD1OFF(3,R6),=C'END'                                           
         BE    PTNOFIND                                                         
         LA    R6,TBL1RECL(R6)     NEXT ENTRY  IN TABLE1                        
         B     PTLOOP                                                           
*                                                                               
PTFIND   L     R2,VAL1OFF(R6)      MAKE SURE FIELD IS A FULL WORD               
         C     R2,=F'4'                                                         
         BE    PT2                                                              
         MVC   LSMSG(30),=CL30'PTOT FIELD NOT A FULL WORD'                      
         BAS   RE,DCARDERR                                                      
         B     PTXIT                                                            
*                                                                               
PT2      L     R2,NXTTHLOC         FILL IN TOTAL HEADER                         
         MVC   0(L'TBLHEAD1,R2),HEAD1OFF(R6)                                    
         LA    R2,4+L'TBLHEAD1(R2)                                              
         ST    R2,NXTTHLOC                                                      
*                                                                               
         L     R5,PTOTCNT          INCREMENT PTOT COUNT                         
         LA    R5,1(R5)                                                         
         ST    R5,PTOTCNT                                                       
         STC   R5,CTL1OFF+1(R6)    MODIFY CONTROL WORD IN TABLE1                
         L     R4,TOTRECL          INCREASE TOTAL REC LENTH BY 1 WORD           
         LA    R4,4(R4)                                                         
         ST    R4,TOTRECL                                                       
         B     PTXIT                                                            
*                                                                               
PTNOFIND MVC   LSMSG(30),=CL30'BAD NAME ON PTOT CARD'                           
         BAS   RE,DCARDERR                                                      
*                                                                               
PTXIT    XIT1                                                                   
*********************************************************                       
         EJECT                                                                  
*********************************************************                       
*  SUBROUTINE READDATA    - READS PANVALET FILE WHICH IS A MODIFIED             
*      DSECT OF THE RECORD TO BE PRINTED. MODIFICATIONS REQUIRED                
*      ARE THE INCLUSION OF THE KEY IN HEX AS THE COMMENT OF THE                
*      ELEMENT DSECT.                                                           
*                                                                               
* OUTPUTS:  TBL1 - TABLE OF FIELDS TO PRINT.                                    
*           NUMT1NTR - THE NUMBER OF ENTRIES IN TABLE1.                         
*           TBL2 - TABLE OF ELEMENT KEY AND ITS BEGINNING IN TBL1.              
*           NUMT2NTR - THE NUMBER OF ENTRIES IN TABLE2..                        
*                                                                               
* LOCALS:   R6 - THE NEXT USABLE LOCATION IN TABLE1.                            
*           R7 - THE NEXT USABLE LOCATION IN TABLE2.                            
*                                                                               
* CALLS FROM:  CARDREAD - READS CTL CARDS. GETS NAME OF PANVALET FILE           
*                                                                               
* CALLS TO:  PRDS - PROCESS DS CARD.                                            
*            PRDSECT - PROCESS DSECT CARD.                                      
*            DCARDERR - REPORTS ERROR MESSAGE AND PRINTS CARD                   
*                                                                               
*                                                                               
**************************************************************                  
READDATA NTR1                                                                   
         LA    R6,TBL1BEG          INITIALIZATON                                
         LA    R7,TBL2BEG                                                       
*                                                                               
DCARDRD  GOTO1 PANIC,DMCB,=C'READ',=C'PAN',BOOKNAME,CARD                        
         CLI   DMCB+8,0                                                         
         BE    RDCNTINU                                                         
         MVC   LSMSG(30),=CL30'PANIC PANICKED'                                  
         BAS   RE,DCARDERR                                                      
         B     XITDCARD                                                         
RDCNTINU CLC   CARD(2),=C'/*'                                                   
         BE    XITDCARD                                                         
         SPACE                                                                  
         CLI   CARD,C'*'           IGNORE COMMENT CARDS                         
         BE    DCARDRD                                                          
*                                                                               
         CLC   CDOP(5),=CL5'SPACE'                                              
         BE    DCARDRD             IGNORE SPACE CARD                            
         CLC   CDOP(5),=CL5'DSECT'                                              
         BNE   DCARD5                                                           
         BAS   RE,PRDSECT          PROCESS DSECT CARD                           
         B     DCARDRD                                                          
DCARD5   CLC   CDOP(2),=CL2'DS'                                                 
         BNE   DCARD6              PROCESS DS CARD                              
         BAS   RE,PRDS                                                          
         B     DCARDRD                                                          
DCARD6   CLC   CDOP(5),=CL5'EJECT'                                              
         BE    DCARDRD                                                          
DCARD7   CLC   CDOP(4),=CL4'DUMP'                                               
         BNE   DCARD99                                                          
         DC    F'0'                                                             
DCARD99  MVC   LSMSG(30),=CL30'DONT HANDLE THIS OP'                             
         BAS   RE,DCARDERR                                                      
         B     DCARDRD                                                          
*                                                                               
XITDCARD MVI   CTL1OFF(R6),X'01'   MARK END OF TABLES                           
         MVC   HEAD1OFF(3,R6),=C'END'                                           
         MVC   KEY2OFF(L'TBLKEY2,R7),=X'FF'                                     
         GOTO1 PANIC,DMCB,=C'CLOSE',=C'PAN'                                     
         XIT1                                                                   
*******************************************************************             
         EJECT                                                                  
*****************************************************************               
*    SUBROUTINE PRDS -  FILL TABLE1 WITH VALUES OF DS CARD.                     
*                                                                               
* INPUTS: CARD - CONTAINS DS CARD FIELDS.                                       
*         R6 - NEXT AVAILABLE ENTRY IN TABLE1.                                  
*                                                                               
* OUTPUTS: R6 - UPDATED NEXT AVAILABLE ENTRY IN TABLE1.                         
*          TABLE1 - AN ENTRY IS ADDED.                                          
*                                                                               
* CALLED FROM : READDATA                                                        
*                                                                               
* CALLS TO :   DCARDERR - PRINTS ERROR MESSAGE AND CURRENT CARD.                
*                                                                               
* LOCALS :  R4 - THE LENGTH IN BYTES SPECIFIED BY THE OPERAND                   
****************************************************************                
*                                                                               
PRDS     NTR1                                                                   
         LA    R4,0                                                             
         CLI   CDOPRAND,C'0'       IF A DUMMY THEN SET LENGTH TO 0              
         BE    PRDSNEXT                                                         
*                                                                               
         MVI   CTL1OFF(R6),X'10'                                                
         CLC   CDOPRAND(2),=2C'CL'  IF CHARACTER FORMAT                         
         BE    PRDS2                                                            
         CLC   CDOPRAND(2),=2C'XL'   OR HEX FORMAT THEN                         
         BE    PRDS1                                                            
         CLI   CDOPRAND,C'D'         OR DOUBLEWORD                              
         BE    DUBLWORD                                                         
         CLI   CDOPRAND,C'F'         OR FULLWORD                                
         BE    FULLWORD                                                         
         CLI   CDOPRAND,C'A'                                                    
         BE    FULLWORD                                                         
         CLI   CDOPRAND,C'V'                                                    
         BE    FULLWORD                                                         
         CLI   CDOPRAND,C'H'          OR HALFWORD                               
         BE    HALFWORD                                                         
         B     PRDSERR                                                          
*                                                                               
HALFWORD L     R4,=F'2'             LENGTH OF HALFWORD                          
         MVI   CTL1OFF(R6),X'20'   MAKE REAL FIELD PRINT IN HEX                 
         TM    OFFTOTAL+3,X'01'                                                 
         BZ    PRDSNEXT            IF ALREADY ON HALFWORD BOUNDRY               
         L     R5,OFFTOTAL                                                      
         LR    R3,R5                                                            
         SRL   R5,1                GET NEXT HALFWORD IN R5                      
         LA    R5,1(R5)               (SAME)                                    
         SLL   R5,1                   (SAME)                                    
         ST    R5,OFFTOTAL         UPDATE TOTAL OFFSET TO THIS HALFWORD         
         SR    R5,R3               NUMBER OF BYTES TO HALFWORD BOUNDARY         
         ST    R5,VAL1OFF(R6)      CREATE DUMMY FIELD OF THIS LENGTH            
         MVI   CTL1OFF(R6),X'40'   DONT PRINT DUMMY FIELD                       
         LA    R6,TBL1RECL(R6)     NEXT ENTRY IN TABLE                          
         MVI   CTL1OFF(R6),X'20'   MAKE REAL FIELD PRINT IN HEX                 
         L     R5,NUMT1NTR                                                      
         LA    R5,1(R5)                                                         
         ST    R5,NUMT1NTR                                                      
         B     PRDSNEXT            NOW PROCESS REAL FIELD                       
*                                                                               
FULLWORD L     R4,=F'4'             LENGTH OF FULLWORD                          
         MVI   CTL1OFF(R6),X'20'   MAKE REAL FIELD PRINT IN HEX                 
         TM    OFFTOTAL+3,X'03'                                                 
         BZ    PRDSNEXT            IF ALREADY ON FULLWORD BOUNDRY               
         L     R5,OFFTOTAL                                                      
         LR    R3,R5                                                            
         SRL   R5,2                GET NEXT FULLWORD IN R5                      
         LA    R5,1(R5)               (SAME)                                    
         SLL   R5,2                   (SAME)                                    
         ST    R5,OFFTOTAL         UPDATE TOTAL OFFSET TO THIS FULLWORD         
         SR    R5,R3               NUMBER OF BYTES TO FULLWORD BOUNDARY         
         ST    R5,VAL1OFF(R6)      CREATE DUMMY FIELD OF THIS LENGTH            
         MVI   CTL1OFF(R6),X'40'   DONT PRINT DUMMY FIELD                       
         LA    R6,TBL1RECL(R6)     NEXT ENTRY IN TABLE                          
         MVI   CTL1OFF(R6),X'20'   MAKE REAL FIELD PRINT IN HEX                 
         L     R5,NUMT1NTR                                                      
         LA    R5,1(R5)                                                         
         ST    R5,NUMT1NTR                                                      
         B     PRDSNEXT            NOW PROCESS REAL FIELD                       
*                                                                               
DUBLWORD L     R4,=F'8'             LENGTH OF DUBLWORD                          
         MVI   CTL1OFF(R6),X'00'   MAKE REAL FIELD PRINT IN CHARS               
         TM    OFFTOTAL+3,X'07'                                                 
         BZ    PRDSNEXT            IF ALREADY ON DUBLWORD BOUNDRY               
         L     R5,OFFTOTAL                                                      
         LR    R3,R5                                                            
         SRL   R5,3                GET NEXT DUBLWORD IN R5                      
         LA    R5,1(R5)               (SAME)                                    
         SLL   R5,3                   (SAME)                                    
         ST    R5,OFFTOTAL         UPDATE TOTAL OFFSET TO THIS DUBLWORD         
         SR    R5,R3               NUMBER OF BYTES TO DUBLWORD BOUNDARY         
         ST    R5,VAL1OFF(R6)      CREATE DUMMY FIELD OF THIS LENGTH            
         MVI   CTL1OFF(R6),X'40'   DONT PRINT DUMMY FIELD                       
         LA    R6,TBL1RECL(R6)     NEXT ENTRY IN TABLE                          
         MVI   CTL1OFF(R6),X'20'   MAKE REAL FIELD PRINT IN HEX                 
         L     R5,NUMT1NTR                                                      
         LA    R5,1(R5)                                                         
         ST    R5,NUMT1NTR                                                      
         B     PRDSNEXT            NOW PROCESS REAL FIELD                       
*                                                                               
PRDS1    MVI   CTL1OFF(R6),X'20'                                                
*                                                                               
PRDS2    SR    R3,R3                  GET LENGTH OF STRING IN R3                
         LA    R2,CDOPRAND+2                                                    
         CLI   0(R2),C' '             IF FIRST IS BLANK THEN ERROR              
         BNE   PRDSLOOP                                                         
         MVC   LSMSG(30),=CL30'INVALID CL LENGTH'                               
         BAS   RE,DCARDERR               ERROR                                  
         B     XITPRDS                                                          
*                                                                               
PRDSLOOP CLI   0(R2),C' '          DO UNTIL A BLANK IS FOUND                    
         BE    PRDS3                 IF NOT BLANK                               
         LA    R3,1(R3)                INCREMENT CHARACTER COUNT                
         LA    R2,1(R2)                TRY NEXT CHARACTER                       
         B     PRDSLOOP            OD                                           
*                                                                               
VARPACK  PACK  DUB,CDOPRAND+2(0)      *** DUMMY INSTRUCTION *****               
*                                                                               
PRDS3    BCTR  R3,0                                                             
         EX    R3,VARPACK             MAKE IT A NUMBER IN R4                    
         CVB   R4,DUB                                                           
         B     PRDSNEXT                                                         
PRDSERR  MVC   LSMSG(30),=CL30'UNABLE TO PROCESS OPERAND'                       
         BAS   RE,DCARDERR                                                      
         B     XITPRDS                                                          
*                                                                               
PRDSNEXT EQU   *                   FILL TABLE                                   
         ST    R4,VAL1OFF(R6)      FILL IN LENGTH OF FIELD                      
         MVC   HEAD1OFF(L'TBLHEAD1,R6),CDLABEL                                  
         L     R5,OFFTOTAL         INCREMENT OFFTOTAL                           
         AR    R5,R4                                                            
         ST    R5,OFFTOTAL                                                      
*                                                                               
INCRTBL  LA    R6,TBL1RECL(R6)     POINT R6 TO NEXT IN TABLE                    
         L     R5,NUMT1NTR         INCREMENT NUMBER OF ENTRIES IN TABLE         
         LA    R5,1(R5)                                                         
         ST    R5,NUMT1NTR                                                      
         LA    R3,TBL1SIZE                                                      
         CR    R5,R3               CK FOR TABLE OVERFLOW                        
         BL    XITPRDS                                                          
         MVC   LSMSG(30),=CL30'TABLE1 OVERFLOW'                                 
         BAS   RE,DCARDERR                                                      
*                                                                               
XITPRDS  XIT1  REGS=(R6)                                                        
********************************************************                        
         EJECT                                                                  
*****************************************************************               
*    SUBROUTINE PRDSECT - PROCESS DSECT CARD. FILL TABLE2.                      
*                                                                               
* INPUTS: CARD - CONTAINS DSECT CARD FIELDS.                                    
*         R6 - NEXT AVAILABLE ENTRY IN TABLE1.                                  
*         R7 - NEXT AVAILABLE ENTRY IN TABLE2.                                  
*                                                                               
* OUTPUTS: R7 - UPDATED NEXT AVAILABLE ENTRY IN TABLE2.                         
*          R6 - UPDATED NEXT AVAILABLE ENTRY IN TABLE1.                         
*          TABLE2 - AN ENTRY IS ADDED.                                          
*                                                                               
* CALLED FROM : READDATA                                                        
*                                                                               
* CALLS TO :   DCARDERR - PRINTS ERROR MESSAGE AND CURRENT CARD.                
*                                                                               
* LOCALS :  R4 - THE LENGTH IN BYTES SPECIFIED BY THE OPERAND                   
****************************************************************                
*                                                                               
PRDSECT  NTR1                                                                   
*                                  ****** CONVERT TO HEX AND STORE IN           
DSEC1    GOTO1 HEXIN,DMCB,CDOPRAND,KEY2OFF(R7),2,FULL         TABLE2            
*                                                                               
         CLC   DMCB+12,=F'0'       CHECK FOR ERROR IN HEXIN                     
         BNE   DSEC2                                                            
         MVC   LSMSG(30),=CL30'BAD KEY ON DSECT'                                
         BAS   RE,DCARDERR                                                      
         B     XITDSEC                                                          
*                                                                               
DSEC2    ST    R6,ADDR2OFF(R7)     PUT NEXT ENTRY  OF TABLE1 IN TABLE2          
         LA    R7,TBL2RECL(R7)     POINT R6 TO NEXT AVAILABLE ENTRY             
         L     R5,NUMT2NTR         INCREMENT NUMBER OF TABLE2 ENTRIES           
         LA    R5,1(R5)                                                         
         ST    R5,NUMT2NTR                                                      
         LA    R3,TBL2SIZE                                                      
         CR    R5,R3                                                            
         BL    DSEC4                                                            
         MVC   LSMSG(30),=CL30'TABLE2 OVERFLOW'                                 
         BAS   RE,DCARDERR                                                      
*                                                                               
****** UPDATE TABLE 1                                                           
DSEC4    MVI   CTL1OFF(R6),X'01'                                                
         MVC   VAL1OFF(L'TBLVAL1,R6),=XL4'00000000'                             
         MVC   HEAD1OFF(L'TBLHEAD1,R6),CDLABEL                                  
         LA    R6,TBL1RECL(R6)                                                  
         L     R5,NUMT1NTR                                                      
         LA    R5,1(R5)                                                         
         ST    R5,NUMT1NTR                                                      
*                                                                               
XITDSEC  XIT1  REGS=(R6,R7)                                                     
***************************************************************                 
         EJECT                                                                  
********************************************************                        
* SUBROUTINE  DCARDERR - PRINTS ERROR MESSAGE AND OFFENDING CARD                
*                                                                               
* INPUTS: LSMSG - MESSAGE TO PRINT                                              
* OUTPUTS: MESSAGE, CARD TO PRINTER                                             
* CALLED FROM: MOST DCARD ROUTINES                                              
********************************************************                        
DCARDERR NTR1                                                                   
         BAS   RE,PREPRNT          PRINT BLANK LINE                             
         MVC   P+10(30),LSMSG                                                   
         BAS   RE,PREPRNT                                                       
         MVC   P+10(L'CARD),CARD                                                
         BAS   RE,PREPRNT                                                       
XITDERR  XIT1                                                                   
*******************************************************                         
         EJECT                                                                  
*******************************************************                         
*  SUBROUTINE PRNTTBL - DIAGNOSTIC PROGRAM WHICH PRINTS TABLE1 AND              
*                       TABLE2                                                  
******************************************************8                         
PRNTTBL  NTR1                                                                   
         ZAP   LINE,=PL2'99'       FORCE PAGE BREAK                             
         MVC   TITLE+10(30),=CL30'TABLE 1 LISTING'                              
         MVC   MID1+10(10),=CL10'CONTROL'                                       
         MVC   MID1+30(10),=CL10'HEADING'                                       
         MVC   MID1+50(10),=CL10'VALUE'                                         
         BAS   RE,PREPRNT                                                       
         BAS   RE,PREPRNT          PRINT HEADER                                 
         CLC   NUMT1NTR,=F'0'                                                   
         BNE   PRN2                IF TABLE 1 EMPTY                             
         MVC   P+10(20),=CL20'TABLE 1 EMPTY'                                    
         BAS   RE,PREPRNT                                                       
         B     PTABLE2                                                          
*                                                                               
PRN2     L     R5,NUMT1NTR         DO FOR EACH ENTRY  IN TABLE                  
         LA    R4,TBL1BEG          R4= ADDR OF CURRENT ENTRY                    
LOOP1    GOTO1 HEXOUT,DMCB,CTL1OFF(R4),P+10,4                                   
         MVC   P+30(L'TBLHEAD1),HEAD1OFF(R4)                                    
         L     R2,VAL1OFF(R4)                                                   
         CVD   R2,DUB                                                           
         UNPK  P+50(16),DUB                                                     
         MVZ   P+65(1),P+64                                                     
         BAS   RE,PREPRNT                                                       
         LA    R4,TBL1RECL(R4)                                                  
         BCT   R5,LOOP1                                                         
*                                                                               
PTABLE2  ZAP   LINE,=PL2'99'       PRINT TABLE 2                                
         MVC   TITLE+10(30),=CL30'TABLE 2 LISTING'                              
         MVC   MID1+30(80),=CL80'OFFSET TO 1'                                   
         MVC   MID1+10(10),=CL10'KEY'                                           
         BAS   RE,PREPRNT                                                       
         BAS   RE,PREPRNT                                                       
         CLC   NUMT2NTR,=F'0'                                                   
         BNE   PRN4                                                             
         MVC   P+10(20),=CL20'TABLE 2 EMPTY'                                    
         BAS   RE,PREPRNT                                                       
         B     KTABLE                                                           
*                                                                               
PRN4     L     R5,NUMT2NTR          DO FOR EACH ENTRY                           
         LA    R4,TBL2BEG           R4= ADDRESS OF CURRENT ENTRY                
         LA    R3,TBL1BEG           R3=BEGINNING OF TABLE1                      
LOOP2    GOTO1 HEXOUT,DMCB,KEY2OFF(R4),P+10,1                                   
         L     R2,ADDR2OFF(R4)                                                  
         SR    R2,R3                CALCULATE OFFSET IN TABLE1                  
         CVD   R2,DUB                                                           
         UNPK  P+30(16),DUB(8)      CONVERT IT AND PACK IT                      
         MVZ   P+45(1),P+44                                                     
         BAS   RE,PREPRNT                                                       
         LA    R4,TBL2RECL(R4)                                                  
         BCT   R5,LOOP2                                                         
*                                                                               
KTABLE   ZAP   LINE,=PL2'99'       FORCE PAGE BREAK                             
         MVC   TITLE+10(30),=CL30'KTOT TABLE LISTING'                           
         MVC   MID1+10(10),=CL10'HEADING'                                       
         MVC   MID1+30(10),=CL10'COLUMN'                                        
         MVC   MID1+50(10),=CL10'LENGTH'                                        
         BAS   RE,PREPRNT                                                       
         BAS   RE,PREPRNT                                                       
         LA    R5,KTOTBEG          DO FOR ALL IN TABLE                          
P3LOOP   CLC   KNAMOFF(3,R5),=C'END'                                            
         BE    FTABLE                                                           
         MVC   P+10(L'KTOTNAME),KNAMOFF(R5)                                     
         MVC   P+30(L'KCOLUMN),KCOLOFF(R5)                                      
         MVC   P+50(L'KLENGTH),KLENOFF(R5)                                      
         BAS   RE,PREPRNT                                                       
         LA    R5,KTOTRECL(R5)                                                  
         B     P3LOOP                                                           
*                                                                               
FTABLE   ZAP   LINE,=PL2'99'                                                    
         MVC   TITLE+10(30),=CL30'FILTER TABLE LISTING'                         
         XC    MID1,MID1                                                        
         MVC   MID1+10(10),=CL10'COLUMN'                                        
         MVC   MID1+30(10),=CL10'LENGTH'                                        
         MVC   MID1+50(10),=CL10'LOWLIMIT'                                      
         MVC   MID1+70(10),=CL10'HI LIMIT'                                      
         BAS   RE,PREPRNT                                                       
         BAS   RE,PREPRNT                                                       
         LA    R5,FTBLBEG                                                       
P4LOOP   CLI   0(R5),X'FF'                                                      
         BE    XITPRN                                                           
         GOTO1 HEXOUT,DMCB,FCOLOFF(R5),P+10,4                                   
         GOTO1 HEXOUT,DMCB,FLNGOFF(R5),P+30,4                                   
         L     R4,FLNGOFF(R5)                                                   
         GOTO1 HEXOUT,DMCB,FLIMOFF(R5),P+50,(R4)                                
         LA    R5,FLIMOFF(R5,R4)                                                
         GOTO1 HEXOUT,DMCB,0(R5),P+70,(R4)                                      
         BAS   RE,PREPRNT                                                       
         LA    R5,0(R5,R4)                                                      
         B     P4LOOP                                                           
*                                                                               
XITPRN   MVI   MID1,C' '           CLEAR MID-LINE                               
         MVC   MID1+1(L'MID1-1),MID1                                            
         XIT1                                                                   
****************************************************                            
         EJECT                                                                  
****************************************************                            
* SUBROUTINE PREPRINT -MONITOR PRINTER CALLS                                    
***************************************************8                            
PREPRNT  NTR1                                                                   
         GOTO1 PRINTER                                                          
         CP    PAGE,=PL2'70'                                                    
         BL    XITPP                                                            
         DC    F'0'                                                             
XITPP    XIT1                                                                   
***********************************************                                 
         EJECT                                                                  
         LTORG                                                                  
*                                                                               
* WORKING STORAGE                                                               
*                                                                               
WORKD    DSECT                                                                  
*                                                                               
         DS    0D                                                               
CARD     DS    0CL80               BUFFER FOR CONTROL, DSECT CARDS              
CDLABEL  DS    CL9                 LABEL FIELD ON DSECT CARD                    
CDOP     DS    CL6                 OPCODE FIELD ON DSECT CARD                   
CDOPRAND DS    CL20                OPERAND FIELD ON DSECT CARD                  
CDCOMM   DS    CL45                COMMENT FIELD ON DSECT CARD                  
OFFTOTAL DS    F                   TOTAL OFFSET UP TO CURR FLD IN TBL1          
*                                                                               
DUB      DS    D                   DOUBLEWORD WORK                              
DMCB     DS    6F                  BUFFER FOR PARAMETERS IN GOTO1S              
FULL     DS    F                                                                
HALF     DS    H                                                                
*                                                                               
WORKX    EQU   *                                                                
*                                                                               
LISTERD  DSECT                                                                  
** INCLUDE LISTERD                                                              
       ++INCLUDE LISTERD                                                        
*                                                                               
** INCLUDE DDDPRINT                                                             
       ++INCLUDE DDDPRINT                                                       
*                                                                               
** INCLUDE DDBUFFALOD                                                           
       ++INCLUDE DDBUFFALOD                                                     
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'094DDLISINIT 05/01/02'                                      
         END                                                                    
