*          DATA SET DENTIPRG   AT LEVEL 121 AS OF 11/10/20                      
*PROCESS USING(WARN(15))                                                        
*CATALP DENTIPRG                                                                
* *********************************************************************         
* THIS MODULE CONTAINS A VARIETY OF ROUTINES TO HELP PROCESS NTI PRGM           
* NUMBER ASSIGNMENTS.  CALL MUST CONTAIN THE FOLLOWING VARIABLES:               
* INPUT:   PARM1 = ACTN: 'BLDM' BLDS BITMAP FROM PPPP RECDS ON FILE             
*                        'MARK' INPUT A DDS# IT SETS BIT--REGARDLESS            
*                        'TEST' INPUT A DDS#: RETURN STATUS VIA CC              
*                        'LKUP' GETS A DDS PRG# FOR 10 CHAR NTI#                
*                        'WRTM' WRITES BITMAP AS PPPP RECS TO FILE              
*                        'JREC' GENERATES J-RECD PTRS FROM NTIDDS TBL           
*          PARM2 = BYTE 0    STATION =C'N', C'S', C'H' (BLD REQ ONLY)           
*                  BYTE 1-3  A(BITMAP)                                          
*          PARM3 = NTI#   - 10 CHAR NTI PRG NUMBER FROM TAPE                    
* OUTPUT:  PARM1 = DDSNUM  NTI-> DDS PRG NUMBER FOR ACTN LKUP, ELSE=0           
*                                                                               
* !!!*NOTE*!!! - SOME ROUTINES USE THE SREC BUFFER.  CONTENTS WILL BE           
*     ****       CLOBBERED.                                                     
* *********************************************************************         
DENTIPRG CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKX-WORKD,*DENTIPRG,RR=RE,CLEAR=YES                            
         USING WORKD,RC                                                         
         USING DEMCOND,R8                                                       
         ST    RE,RELO                                                          
         ST    R1,APARMS           INPUT PARAMETERS                             
         MVC   PARMS,0(R1)                                                      
                                                                                
*SET PARMS                                                                      
         L     RF,0(R1)            1) PARM1 = ACTION                            
         LA    RF,0(RF)            CLEAR HIGH ORDER BYTE                        
         MVC   ACTION,0(RF)                                                     
*                                                                               
         IF (CLC,ACTION,NE,=C'BLDM'),AND,                                       
            (CLC,ACTION,NE,=C'MARK'),AND,                                       
            (CLC,ACTION,NE,=C'TEST'),AND,                                       
            (CLC,ACTION,NE,=C'LKUP'),AND,                                       
            (CLC,ACTION,NE,=C'WRTM'),AND,                                       
            (CLC,ACTION,NE,=C'JREC')                                            
           J *+2                   INVALID ACTION IN PARM1                      
         ENDIF ,                                                                
*                                                                               
         MVC   STATN,4(R1)         2) PARM2 = (STATN,A(BITMAP))                 
         L     RF,4(R1)                                                         
         LA    RF,0(RF)                                                         
         CLC   ACTION,=C'BLDM'     REQUEST MUST HAVE STATN IF ACTN BLD          
         BNE   *+10                                                             
         MVC   0(1,RF),STATN       SAVE IN 1ST CHAR OF BITMAP                   
         MVC   STATN,0(RF)         1ST BYTE OF BITMAP = STATN                   
         LA    RF,1(RF)                                                         
         ST    RF,ABITMAP                                                       
*                                                                               
         XC    DDSNUM,DDSNUM                                                    
         SR    RF,RF               **PARM 3**: NTI NUMBER (10 CHARS)            
         OC    8(4,R1),8(R1)                                                    
         BZ    PARM20                                                           
         L     RF,8(R1)                                                         
         LA    RF,0(RF)                                                         
         MVC   NTITEN,0(RF)                                                     
         MVC   DDSNUM,0(RF)        FOR ACTION =C'MARK'                          
         B     MAIN                                                             
*                                                                               
PARM20   DS    0H                                                               
         CLC   ACTION,=C'LKUP'     NTI# NOT PASSED -> I NEED IT                 
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLC   ACTION,=C'MARK'     NTI# NOT PASSED -> I NEED IT                 
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLC   ACTION,=C'TEST'                                                  
         JE    *+2                 NTI# NOT PASSED -> I NEED IT                 
                                                                                
*MAIN CNTL                                                                      
MAIN     DS    0H                                                               
         CLC   ACTION,=C'BLDM'     READ FILE AND BUILD BIT MAP                  
         BNE   *+12                                                             
         BAS   RE,BLDMAP                                                        
         B     EXIT                                                             
*                                                                               
         CLC   ACTION,=C'MARK'     MARK DDS# IN BITMAP UNCONDITIONALLY?         
         BE    *+14                YES                                          
         CLC   ACTION,=C'TEST'     TEST DDS# AVAILABILITY?                      
         BNE   MAIN10              NO                                           
*                                                                               
         OC    DDSNUM,DDSNUM       MAKE SURE WE HAVE A VALID#                   
         BNZ   *+6                                                              
         DC    H'0'                                                             
         XC    CMD,CMD                                                          
         BAS   RE,FNDNTI                                                        
         B     EXIT                                                             
*                                                                               
MAIN10   CLC   ACTION,=C'LKUP'     LK UP 10 CHAR NTI# ON FILE & IN TBL          
         BNE   *+12                                                             
         BAS   RE,LKUP                                                          
         B     EXIT                                                             
*                                                                               
         CLC   ACTION,=C'WRTM'     WRITE OUT MAP AS RECDS TO FILE               
         BNE   *+12                                                             
         BAS   RE,WRTMAP                                                        
         B     EXIT                                                             
*                                                                               
         CLC   ACTION,=C'JREC'     CREATE J-RECS FOR ENTRIES IN NTIDDS          
         BNE   *+12                                                             
         BAS   RE,CRJREC                                                        
         B     EXIT                                                             
*                                                                               
         DC    H'0'                INVALID ACTION                               
*                                                                               
EXIT     XC    0(4,R1),0(R1)                                                    
         CLC   ACTION,=C'LKUP'     IF ACTN=LKUP, RETURN DDS PRG NUMBER          
         BNE   *+10                                                             
         MVC   0(2,R1),DDSNUM                                                   
*                                                                               
         IF (CLC,ACTION,EQ,=C'TEST')  TEST AVAILABILITY OF DDS NTI# ?           
           IF (CLI,AVAIL,EQ,0)                                                  
             CR  RB,RB                   NTI# IS AVAILABLE: SET CC EQ           
           ELSE ,                                                               
             CHI RB,0                    NTI# IS UNAVAILABLE: SET CC NE         
           ENDIF ,                                                              
         ENDIF ,                                                                
*                                                                               
         XMOD1 ,                                                                
*                                                                               
XIT      XIT1                                                                   
*                                                                               
         EJECT                                                                  
***********************************************************************         
*BLDMAP - READ IN PNN-PPPP-X RECDS FOR STATION (NET,NHT OR SYN)                 
*        BUILD BITMAP IN ADDRESS PASSED                                         
*        INPUTS:  ABITMAP, STATN                                                
***********************************************************************         
BLDMAP   NTR1                                                                   
         XC    PAVKEY,PAVKEY                                                    
         MVI   TYPE,0              READ 1ST RECD                                
         LA    R1,PRFRSTEL-PRKEY                                                
         STH   R1,DATADISP         SET UP FOR GETEL CALL                        
         MVI   ELCODE,NTICODEQ                                                  
*                                                                               
BLD10    LA    R6,PAVKEY                                                        
         USING PRKEY,R6                                                         
         MVC   PRKEY(3),=C'PNN'                                                 
         MVC   PRSTAT(4),=C'PPPP'                                               
         MVC   PRSTAT+4(1),STATN   STATION=N/H/S PASSED BY CALLER               
         MVC   PRSTYP,TYPE         TYPE = RECD COUNTER (0-4)                    
         L     R5,ASREC                                                         
         LA    R5,4(R5)                                                         
         GOTO1 =V(DATAMGR),DMCB,=C'DMRDHI ',=C'NTIDIR',PAVKEY,(R5)              
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                ERROR READING FILE                           
         CLC   PAVKEY(13),0(R5)    DID WE GET SAME KEY                          
         BE    *+6                                                              
         DC    H'0'                RECD BETTER BE THERE                         
         MVC   SVDA,PRNDXDA-PRKEY(R5)                                           
         MVC   SVSTATUS,18(R5)                                                  
         XC    0(L'PAVKEY,R5),0(R5)                                             
         MVC   0(13,R5),PAVKEY     KEY AND                                      
         MVC   22(1,R5),SVSTATUS     STATUS BYTE                                
         GOTO1 =V(DATAMGR),DMCB,=C'DMRDHI ',=C'NTIFIL ',SVDA,(R5)               
         CLI   DMCB+8,0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         USING NTIELEM,R5                                                       
         BAS   RE,GETEL            R5 PTS TO 1ST NTI ELEM                       
*                                                                               
BLD20    ZIC   R6,NTISEQ           R6* 250 = BYTE DISPMENT                      
         MH    R6,=H'250'                                                       
         A     R6,ABITMAP          DEST IN BIT MAP TABLE PASSED                 
         ZIC   R1,NTIELN           NUMBER OF BYTES TO MOVE                      
         SH    R1,=H'4'            -3 FOR ELEM HDR -1 EXMVC                     
         EX    R1,*+8              COPY BYTES INTO MAP                          
         J     *+10                                                             
         MVC   0(0,R6),NTIBITS                                                  
         BAS   RE,NEXTEL           NEXT NTIELEM                                 
         BE    BLD20                                                            
*                                                                               
         LLC   R1,TYPE             READ ALL 4 PPPP RECDS FOR CATEGORY           
         LA    R1,1(R1)                                                         
         STC   R1,TYPE                                                          
         CLI   TYPE,4                                                           
         BNH   BLD10               READ IN NEXT KEY                             
*                                                                               
BLDX     B     XIT                 DONE - BIT MAP SET IN ABITMAP                
         DROP  R5                                                               
*                                                                               
         EJECT                                                                  
***********************************************************************         
*LKUP  - 1. READ J-RECDS TO SEE IF NTI # EQUIV RECD FOUND                       
*        2. IF J-RECD NOT FOUND,SEE IF # WAS ALREADY ASSIGNED IN CONV           
*        3. IF NOT IN ANTIDDS, ASSIGN IT AND ADD ENTRY TO TABLE                 
*        INPUTS:  NTITEN, STATN                                                 
*        OUTPUTS: DDSNUM = INTERNAL NUMBER                                      
***********************************************************************         
LKUP     NTR1                                                                   
         XC    DDSNUM,DDSNUM                                                    
         MVC   PACK16(10),NTITEN   CONVERT 10 CHAR NTI # TO 5 BYTE PWOS         
         MVI   PACK16+10,C'0'                                                   
         PACK  DUB,PACK16(11)                                                   
         MVC   PWOS,DUB+2          PWOS=5 CHAR PACKED W/OUT SIGN                
*                                                                               
         LA    R6,PAVKEY           1) IS THERE A J-REC FOR NTI#?                
         USING PJKEY,R6                                                         
         XC    PAVKEY,PAVKEY                                                    
         MVI   PJCODE,PJCODEQU     JREC                                         
         MVI   PJMEDIA,C'N'                                                     
         MVI   PJSRC,C'N'                                                       
         MVC   PJSTAT,=C'PPPP '                                                 
         MVC   PJSTAT+4(1),STATN                                                
         MVC   PJEXTNUM(5),PWOS                                                 
         L     R5,ASREC                                                         
         LA    R5,4(R5)                                                         
         GOTO1 =V(DATAMGR),DMCB,=C'DMRDHI ',=C'NTIDIR',PAVKEY,(R5)              
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                ERROR READING FILE                           
         CLC   PAVKEY(16),0(R5)    DID WE GET SAME KEY                          
         BNE   LKUP20              NO                                           
         MVC   DDSNUM,PJINTNUM-PJKEY(R5)    DDS INTERNAL NUMBER                 
         B     LKUPX                                                            
         DROP  R6                                                               
         SPACE 1                                                                
*                                                                               
LKUP20   DS    0H                  2) IS NTI# IN NTIDDS?                        
         L     R6,VNTIDDS          R1= A(NTIDDS) TABLE W/NEW ASGNMNTS           
         USING NTIDDSD,R6                                                       
LKUP25   OC    0(4,R6),0(R6)       EOT                                          
         BZ    LKUP30                                                           
         CLC   NTISTN,STATN        SEE IF NTI# FOR THIS STATN WAS...            
         BNE   *+14               ..ALREADY ASSIGNED IN THIS CONVERSION         
         CLC   NTIPWOS,PWOS                                                     
         BE    *+12                                                             
         LA    R6,NTIDDSQ(R6)     BUMP TO NEXT ENTRY                            
         B     LKUP25                                                           
         MVC   DDSNUM,NTIDDS                                                    
         B     LKUPX                                                            
         SPACE 1                                                                
*                                                                               
LKUP30   DS    0H                  3) ASSIGN A DDS INTERNAL #                   
         CLC   NTITEN,=C'0000065534'                                            
         BH    LKUP40                                                           
         PACK  DUB,NTITEN+5(5)     CONVER TO 2 BYTE BINARY                      
         CVB   R0,DUB                                                           
         STCM  R0,3,DDSNUM                                                      
         L     R5,ABITMAP          BITMAP FOR THIS STATION                      
         MVC   CMD,=C'FND'         FND DDSNUM IN ARRAY AND SEE IF AVAIL         
         BAS   RE,FNDNTI                                                        
         CLI   AVAIL,0                                                          
         BE    LKUP50              YES, SET THIS DDSNUM IN BITMAP               
*                                                                               
LKUP40   DS    0H                                                               
         BAS   RE,NXTNTI           SET DDSNUM TO NEXT AVAIL # IN MAP            
*                                                                               
LKUP50   DS    0H                                                               
         MVC   CMD,=C'SET'         SET DDSNUM IN BITMAP                         
         BAS   RE,FNDNTI                                                        
         MVC   NTIPWOS,PWOS        10 CHAR NTI# -> 5 CHAR PWOS                  
         MVC   NTISTN,STATN        R6 -> EMPTY SLOT IN ASSIGNMNT TBL            
         MVC   NTIDDS,DDSNUM                                                    
         DROP  R6                                                               
                                                                                
LKUPX    B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
*WRTMAP - WRITES MAP TO OUTPUT FILE BY GENERATING RECDS W/BIT ELEMS:            
* DIVIDES UP BITMAP INTO 7 (OR 5) ELEMS & ASSIGNS APPROP SEQ# IN ELEM           
***********************************************************************         
WRTMAP   NTR1                                                                   
         MVI   TYPE,0              GENERATE 5 RECDS W/STYPE 0-4                 
         L     R5,ABITMAP          R5 -> BITS IN MAP TO COPY TO RECD            
         XC    PAVKEY,PAVKEY                                                    
         LA    R6,PAVKEY                                                        
         USING PRKEY,R6                                                         
         MVI   PRCODE,PRCODEQU     BUILD PNN PPPP-X  WHERE X=N/H/S              
         MVI   PRMEDIA,C'N'                                                     
         MVI   PRSRC,C'N'                                                       
         MVC   PRSTAT,=C'PPPP '                                                 
         MVC   PRSTAT+4(1),STATN                                                
*                                                                               
WRT10    LA    R6,PAVKEY                                                        
         MVC   PRSTYP,TYPE                                                      
         GOTO1 ABLDREC,DMCB,PRKEY                                               
         DROP  R6                                                               
*                                                                               
         ZIC   R1,TYPE             SEQ NUMBER ON RECORD                         
         MH    R1,=H'7'            RECD SEQ * 7 = ELEM SEQ NUMBER               
         STC   R1,SEQ              SLOT INTO ELEMS LATER                        
         LA    R6,ELEM                                                          
         LA    R3,7                GENERATE 7 ELEMS FROM RECD                   
         CLI   TYPE,4              LAST RECD?                                   
         BNE   *+8                                                              
         LA    R3,4                ONLY 4 FULL LENGTH ELEMS (253 BYTES)         
*                                                                               
         USING NTIELEM,R6                                                       
WRT20    XC    ELEM,ELEM                                                        
         MVI   NTICODE,NTICODEQ    ELEM = X'04'                                 
         MVI   NTIELN,NTIELNQ      FULL 253 BYTE LENGTH                         
         MVC   NTISEQ,SEQ          ELEM SEQ NUMBER                              
         MVC   NTIBITS,0(R5)       MOVE IN 250 BYTES OF PRG BITS                
         GOTO1 APUTEL,NTIELEM                                                   
         LA    R5,L'NTIBITS(R5)                                                 
         ZIC   R1,SEQ                                                           
         LA    R1,1(R1)                                                         
         STC   R1,SEQ                                                           
         BCT   R3,WRT20            OUTPUT EITHER 5 OR 7 FULL LN ELEMS           
*                                                                               
         CLI   TYPE,4              LAST RECD?                                   
         BNE   WRT50               NO, DONE WITH THIS RECD                      
         XC    ELEM,ELEM                                                        
         MVI   NTICODE,NTICODEQ    ELEM = X'04'                                 
         MVI   NTIELN,NTIELNQL     ONLY 192 BYTE LENGTH                         
         MVC   NTISEQ,SEQ          ELEM SEQ NUMBER                              
         MVC   NTIBITL,0(R5)       MOVE IN 250 BYTES OF PRG BITS                
         GOTO1 APUTEL,NTIELEM                                                   
         DROP  R6                                                               
*                                                                               
WRT50    DS    0H                  CAN RELASE RECDS AS IT COMES IN              
         GOTO1 APUTTAPE            RELEASE RECD                                 
         ZIC   R1,TYPE                                                          
         LA    R1,1(R1)                                                         
         STC   R1,TYPE                                                          
         CLI   TYPE,4                                                           
         BNH   WRT10                                                            
*                                                                               
WRTMAPX  B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
*CRJREC - CREATES J-RECDS FOR ENTRIES IN NTIDDS                                 
***********************************************************************         
CRJREC   NTR1                                                                   
         L     R5,VNTIDDS                                                       
         USING NTIDDSD,R5                                                       
CRJ10    OC    0(4,R5),0(R5)       ANY ENTRIES?                                 
         BZ    CRJRECX             NO                                           
         LA    R6,PAVKEY                                                        
         USING PJKEY,R6                                                         
         XC    PAVKEY,PAVKEY                                                    
         MVI   PJCODE,PJCODEQU     JREC                                         
         MVI   PJMEDIA,C'N'                                                     
         MVI   PJSRC,C'N'                                                       
         MVC   PJSTAT,=C'PPPP '                                                 
         MVC   PJSTAT+4(1),NTISTN  STATION                                      
         MVC   PJEXTNUM(5),NTIPWOS                                              
         MVC   PJINTNUM,NTIDDS                                                  
         GOTO1 ABLDREC,DMCB,(C'P',PJKEY)    PASSIVE PTR                         
         GOTO1 APUTTAPE                                                         
         LA    R5,NTIDDSQ(R5)      NEXT ENTRY                                   
         B     CRJ10                                                            
*                                                                               
CRJRECX  B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* FNDNTI - LOCATE NTI NUMBER GIVEN IN BIT MAP. DEPENDING ON THE REQST,          
*        RETURN ITS STATUS (AVAIL/NOT), OR SET IT TO NOT AVAIL.                 
*        INPUTS:  ABITMAP, DDSNUM, CMD                                          
*        OUTPUTS: AVAIL = 0 (AVAIL) OR 1 (IN USE)                               
***********************************************************************         
*                                                                               
FNDNTI   NTR1                                                                   
         SR    RE,RE                                                            
         MVI   AVAIL,0            INIT TO UNUSED                                
         L     R1,ABITMAP                                                       
         SR    RF,RF                                                            
         ICM   RF,3,DDSNUM        DISP TO BYTE IN MAP = NTI#-1 / 8              
         BCTR  RF,0                                                             
         D     RE,=F'8'            RESULT: RE=DSP TO BIT RF=DSP TO BYTE         
         AR    R1,RF               BUMP R1 TO BYTE                              
         SR    RF,RF                                                            
         IC    RF,0(R1)            PUT BYTE IN A REGISTER                       
         SLL   RF,0(RE)            SHIFT LEFT BY REMAINDER OF DIVIDE            
         STC   RF,DUB              DESIRED BIT IS IN X'80' POSITION             
         TM    DUB,X'80'           IS THE NTI NUMBER ALREADY USED               
         BNO   *+8                 NOT USED                                     
         MVI   AVAIL,1             USED                                         
         CLC   ACTION,=C'MARK'                                                  
         BE    FND10               JUST MARK BIT DON'T CHECK STATUS             
         CLC   CMD,=C'SET'         REQUEST TO SET BIT?                          
         BNE   FNDNTIX                                                          
         CLI   AVAIL,0                                                          
         BE    *+6                                                              
         DC    H'0'                ATTEMPTING TO SET # ALREADY SET              
FND10    LA    RF,X'80'            SET BIT IN CLEAN BYTE                        
         SRL   RF,0(RE)            SHIFT BY SAME AMT WE DID BEFORE              
         STC   RF,DUB                                                           
         OC    0(1,R1),DUB         SET BIT ON IN BITMAP (R1)                    
*                                                                               
FNDNTIX  B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* NXTNTI - LOCATE  NEXT AVAIL NTI NUMBER IN THE ARRAY AND PASS IT BACK          
***********************************************************************         
NXTNTI   NTR1                                                                   
         MVI   AVAIL,0                                                          
         L     R1,ABITMAP          PT TO 1ST BYTE IN BITMAP                     
         LA    RF,1                START COUNTING W/NTI #1                      
NXT05    CLI   0(R1),X'FF'         ANYTHING AVAIL IN THE BYTE?                  
         BNE   NXT10               YES-> GET FIRST AVAIL BIT IN BYTE            
         LA    R1,1(R1)            BUMP TO NEXT BYTE                            
         LA    RF,8(RF)            BUMP NTI # BY 8 FOR NEXT BYTE                
         C     RF,=F'65534'                                                     
         BNH   *+6                                                              
         DC    H'0'                                                             
         B     NXT05               GOBACK & SEE IF NXT BYTE HAS FREEBIT         
*                                                                               
NXT10    DS    0H                                                               
         MVC   BYTE,0(R1)                                                       
         LA    RE,X'80'                                                         
NXT15    EX    RE,*+8                                                           
         B     *+8                 EMPTY                                        
         TM    BYTE,0                                                           
         BNO   NXTNTIX             EMPTY                                        
         SRL   RE,1                                                             
         LA    RF,1(RF)                                                         
         LTR   RE,RE                                                            
         BNZ   NXT15                                                            
*                                                                               
NXTNTIX  DS    0H                  FOUND AVAIL BIT                              
         C     RF,=F'65534'                                                     
         BNH   *+6                                                              
         DC    H'0'                                                             
         STCM  RF,3,DDSNUM         SAVE AVAIL NTI NUMBER                        
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
         GETEL R5,DATADISP,ELCODE                                               
*                                                                               
         LTORG                                                                  
         DROP  RB,RC                                                            
         EJECT                                                                  
*=========================== LOCAL STORAGE ===========================*         
WORKD    DSECT                                                                  
RELO     DS    A                   RELOCATION FACTOR                            
APARMS   DS    F                   A(INPUT PARAMS)                              
PARMS    DS    CL4                 4 INPUT PARMS                                
ACTION   DS    CL4                 REQUESTED BY CALLER                          
STATN    DS    C                   STATION                                      
ABITMAP  DS    A                   A(BITMAP)                                    
NTITEN   DS    CL10                                                             
DATADISP DS    H                                                                
ELCODE   DS    X                                                                
BYTE     DS    XL1                                                              
AVAIL    DS    CL1                 0=NTI # AVAIL 1=USED                         
CMD      DS    CL3                 COMMAND FROM CALLER ('SET','FND')            
TYPE     DS    X                                                                
SEQ      DS    X                                                                
SVDA     DS    F                                                                
SVSTATUS DS    C                                                                
DDSNUM   DS    XL2                                                              
PWOS     DS    XL5                                                              
PACK16   DS    PL16                                                             
PAVKEY   DS    XL24                                                             
ELEM     DS    XL255                                                            
WORKX    EQU   *                                                                
         EJECT                                                                  
*======================================================================         
*                     DSECTS                                                    
*======================================================================         
NTIDDSD  DSECT                                                                  
NTISTN   DS    X                   N=NET, S=SYN, H=NHT                          
NTIPWOS  DS    XL5                 5CHAR NTI # PACKED W/OUT SIGN                
NTIDDS   DS    XL2                 DDS INTERNAL PROGRAM NUMBER                  
NTIDDSQ  EQU   *-NTIDDSD                                                        
*                                                                               
       ++INCLUDE DEDEMFILE                                                      
*                                                                               
       ++INCLUDE DEDEMCNVD                                                      
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'121DENTIPRG  11/10/20'                                      
         END                                                                    
