*          DATA SET DMLDMODS   AT LEVEL 012 AS OF 05/01/02                      
*CATALP DMLDMOD                                                                 
         TITLE 'DMLDMOD - GENERALISED LOAD/DUMP FOR IS/DA FILES'                
         PRINT NOGEN                                                            
DMLDMOD  CSECT                                                                  
*                                                                               
         ENTRY SVD1HDR                                                          
         ENTRY SVD2HDR                                                          
         ENTRY SVD3HDR                                                          
         ENTRY SVD4HDR                                                          
         ENTRY PARMCARD                                                         
         ENTRY UPSIVAL                                                          
         ENTRY RECTYV                                                           
         ENTRY DATEVAL                                                          
         ENTRY MODE                                                             
         ENTRY INPUT                                                            
         ENTRY OUTPUT                                                           
         ENTRY LDWRITE                                                          
         ENTRY SVDAHDR                                                          
         ENTRY SVDBHDR                                                          
         ENTRY SSB                                                              
         ENTRY UTL                                                              
*                                                                               
         NBASE 0,DMLDMOD,RA,R8,R7,R6,WORK=A(DMLDWRK)                            
         ST    R1,SVMVSR1                                                       
         ST    RB,SAVERB                                                        
         L     RC,=V(CPRINT)       RC=PRINTER CONTROL REGISTER                  
         USING DPRINT,RC                                                        
*                                                                               
DMLD0    GOTO1 =V(CARDS),DMCB,C,=C'RE00' FIRST CHECK DDSIO=CARD                 
         CLC   C(6),=C'DDSIO='                                                  
         BNE   DMLD1                                                            
         L     RF,=V(DDSIO)                                                     
         MVC   0(8,RF),C+6                                                      
         B     DMLD0                                                            
*                                                                               
DMLD1    LA    R1,PARMTBL          POINT TO W/S AND PRINTER                     
         LR    R0,RC                                                            
         L     RF,=A(INITPROG)                                                  
         BASR  RE,RF               INITIALISE PROGRAM                           
*                                                                               
NXTPARM  MVI   ERRNUM,0            GET NEXT SET OF PARAMETERS                   
         LA    R1,PARMTBL          POINT TO W/S AND PRINTER                     
         LR    R0,RC                                                            
         L     RF,=A(GETPARM)                                                   
         BASR  RE,RF               READ AND VALIDATE A SET OF PARAMS            
         CLI   EOJFLAG,C'Y'                                                     
         BNE   INIT                INITIALISE FOR NEW MODE                      
*                                                                               
EOJ      XBASE                                                                  
         EJECT                                                                  
* INITIALISE ALL VARIABLES FOR MODE                                             
*                                                                               
INIT     TM    ABEND,YES           TEST FOR DUMP=YES OR DUMP=OS                 
         BO    INIT0                                                            
         GOTO1 =V(STXITER),DMCB,STXLST                                          
INIT0    L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
*                                                                               
INIT1    XC    DAINFO,DAINFO       EXTRACT DA FILE INFO                         
         MVC   DANAME,SPACES                                                    
         L     R1,=A(DAREC)                                                     
         ST    R1,DARECA                                                        
         L     R1,LDDDTFDA         POINT TO DTF                                 
         USING DTFPHD,R1                                                        
         ST    R1,DADTFA                                                        
         MVC   DANAME(7),DAFILEID                                               
         LTR   R1,R1                                                            
         BZ    INIT1A                                                           
         MVC   DTFDD(7),DAFILEID   FIX DA FILE NAME INTO DTF                    
         MVC   DABLKL(2),DBLKSZ                                                 
*                                                                               
         CLI   GLOBAL,C'Y'         FIX DA GLOBAL FILE INTO DTF                  
         BNE   *+8                                                              
         OI    DTFFLAG,DTFGLOB                                                  
         CLI   GLOBAL,C'N'                                                      
         BNE   *+8                                                              
         NI    DTFFLAG,255-DTFGLOB                                              
         TM    DTFFLAG,DTFGLOB                                                  
         BZ    *+8                                                              
         OI    DAFLAG,DTFGLOB      SET DA FILE IS GLOBAL                        
*                                                                               
         CLI   DABIG,C'Y'          FIX DA BIG/NORMAL FILE INTO DTF              
         BNE   *+8                                                              
         OI    DTFTYPE,DTFTBIG                                                  
         CLI   DABIG,C'N'                                                       
         BNE   *+8                                                              
         NI    DTFTYPE,255-DTFTBIG                                              
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+8                                                              
         OI    DAFLAG,DTFTBIG      SET DA FILE IS BIG (18-BIT TRACK)            
*                                                                               
         CLI   SNAP,C'Y'           FIX DA SNAPABLE FILE INTO DTF                
         BNE   *+8                                                              
         OI    DTFFLAG,DTFSNAP                                                  
         CLI   SNAP,C'N'                                                        
         BNE   *+8                                                              
         NI    DTFFLAG,255-DTFSNAP                                              
         TM    DTFTYPE,DTFSNAP                                                  
         BZ    *+8                                                              
         OI    DAFLAG,DTFSNAP      SET DA FILE IS SNAPABLE                      
*                                                                               
INIT1A   MVC   DAELD,LDDELD                                                     
         MVC   DALINKD,LDDLINKD                                                 
         MVC   DAKEYL,LDDKEYL                                                   
         MVC   DACTLL,LDDCTLL      SET LENGTH OF CONTROL BYTES TO 'OR'          
         CLI   LDDCTLOR,0          TEST IF OVERRIDE LENGTH DEFINED              
         BE    INIT1B                                                           
         XC    DACTLL,DACTLL                                                    
         CLI   LDDCTLOR,X'FF'      TEST IF NO OR'ING REQUIRED                   
         BE    INIT1B                                                           
         MVC   DACTLL+1(1),LDDCTLOR                                             
INIT1B   MVC   DAMIN,LDDMIN                                                     
         OC    DAMIN,DAMIN         DEFAULT MIN REC LEN                          
         BNZ   *+10                                                             
         MVC   DAMIN,DAELD                                                      
         MVC   DAMAX,LDDMAX                                                     
*                                                                               
INIT2    XC    F1INFO,F1INFO       EXTRACT 2ND/3RD/4TH DA FILE INFO             
         XC    F2INFO,F2INFO                                                    
         XC    F3INFO,F3INFO                                                    
         XC    F4INFO,F4INFO                                                    
         TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    INIT3                                                            
         MVC   F1INFO,DAINFO       SET 1ST DA FILE INFO                         
         MVI   F1FNUM,1                                                         
         MVC   F2INFO,DAINFO       SET 2ND DA FILE INFO                         
         MVI   F2FNUM,2                                                         
         ICM   R1,15,LDDDTFD2      POINT TO 2ND FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         USING DTFPHD,R1                                                        
         ST    R1,F2DTFA                                                        
         MVC   F2NAME(7),D2FILEID                                               
         MVC   DTFDD(7),D2FILEID   FIX 2ND DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG                                              
         TM    DAFLAG,DTFTBIG                                                   
         BZ    *+8                                                              
         OI    DTFTYPE,DTFTBIG                                                  
         MVC   F2BLKL(2),DBLKSZ                                                 
         TM    LDDMULTI,LDDQDA4    TEST IF DA FILES 3 AND 4 DEFINED             
         BZ    INIT3                                                            
         MVC   F3INFO,DAINFO       SET 3RD DA FILE INFO                         
         MVI   F3FNUM,3                                                         
         MVC   F4INFO,DAINFO       SET 4TH DA FILE INFO                         
         MVI   F4FNUM,4                                                         
         ICM   R1,15,LDDDTFD3      POINT TO 3RD FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         ST    R1,F3DTFA                                                        
         MVC   F3NAME(7),D3FILEID                                               
         MVC   DTFDD(7),D3FILEID   FIX 3RD DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG                                              
         TM    DAFLAG,DTFTBIG                                                   
         BZ    *+8                                                              
         OI    DTFTYPE,DTFTBIG                                                  
         MVC   F3BLKL(2),DBLKSZ                                                 
         ICM   R1,15,LDDDTFD4      POINT TO 4TH FILE DTF                        
         BNZ   *+6                                                              
         DC    H'0'                DIE IF INVALID DEFINITION                    
         ST    R1,F4DTFA                                                        
         MVC   F4NAME(7),D4FILEID                                               
         MVC   DTFDD(7),D4FILEID   FIX 4TH DA FILE NAME INTO DTF                
         NI    DTFTYPE,255-DTFTBIG                                              
         TM    DAFLAG,DTFTBIG                                                   
         BZ    *+8                                                              
         OI    DTFTYPE,DTFTBIG                                                  
         MVC   F4BLKL(2),DBLKSZ                                                 
*                                                                               
INIT3    XC    ISINFO,ISINFO       EXTRACT IS FILE INFO                         
         MVC   ISNAME,SPACES                                                    
         L     R1,LDDDTFIS                                                      
         USING ISDTF,R1                                                         
         ST    R1,ISDTFA                                                        
         MVC   ISNAME(7),ISFILEID                                               
         LTR   R1,R1                                                            
         BZ    INIT4                                                            
         MVC   22(7,R1),ISFILEID   FIX IS FILE NAME                             
*                                                                               
         CLI   GLOBAL,C'Y'         FIX IS GLOBAL FILE INTO DTF                  
         BNE   *+8                                                              
         OI    ISFFLAG,ISFGLOB                                                  
         CLI   GLOBAL,C'N'                                                      
         BNE   *+8                                                              
         NI    ISFFLAG,255-ISFGLOB                                              
         TM    ISFFLAG,ISFGLOB                                                  
         BZ    *+8                                                              
         OI    ISFLAG,ISFGLOB                                                   
*                                                                               
         OC    ISPDOV,IXPDOV       COPY IXPDOV TO ISPDOV                        
         CLI   ISPDOV,C'Y'         FIX IS IXPDOV/NORMAL FILE INTO DTF           
         BNE   *+8                                                              
         OI    ISFTYPE,ISFTPDOV                                                 
         CLI   ISPDOV,C'N'                                                      
         BNE   *+8                                                              
         NI    ISFTYPE,255-ISFTPDOV                                             
*                                                                               
         CLI   SNAP,C'Y'           FIX IS SNAPABLE FILE INTO DTF                
         BNE   *+8                                                              
         OI    ISFFLAG,ISFSNAP                                                  
         CLI   SNAP,C'N'                                                        
         BNE   *+8                                                              
         NI    ISFFLAG,X'FF'-ISFSNAP                                            
         TM    ISFFLAG,ISFSNAP                                                  
         BZ    *+8                                                              
         OI    ISFLAG,ISFSNAP                                                   
*                                                                               
         CLI   ISBLKIX,C'Y'        FIX IS ISBLKIX FILE INTO DTF                 
         BNE   *+8                                                              
         OI    ISFFLAG,ISFBLKIX                                                 
         CLI   ISBLKIX,C'N'                                                     
         BNE   *+8                                                              
         NI    ISFFLAG,255-ISFBLKIX                                             
*                                                                               
         MVC   ISKEYL(2),ISKEYLN                                                
         MVC   ISKEYL1(2),ISKEYLN1                                              
         MVC   ISRECL(2),ISRECLN                                                
         TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    INIT4                                                            
         MVC   ISFBYTE,LDDFBYTE    SET BYTE NUMBER WHERE FILE DEFINED           
         MVC   ISFBITS,LDDFBIT     AND THE BIT MASK FOR BYTE                    
         MVI   ISFSRL,0            SET NUMBER OF BITS TO SHIFT RIGHT            
         TM    ISFBITS,X'01'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,1                                                         
         TM    ISFBITS,X'02'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,2                                                         
         TM    ISFBITS,X'04'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,3                                                         
         TM    ISFBITS,X'08'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,4                                                         
         TM    ISFBITS,X'10'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,5                                                         
         TM    ISFBITS,X'20'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,6                                                         
         TM    ISFBITS,X'40'                                                    
         BO    INIT4                                                            
         MVI   ISFSRL,7                                                         
         TM    ISFBITS,X'80'                                                    
         BO    INIT4                                                            
         DC    H'0'                GIVE ME A FUCKING BREAK                      
         DROP  R1,R2                                                            
*                                                                               
INIT4    LA    R2,EXTTABL          FIND EXTERNAL LOADS                          
INIT4A   OC    0(2,R2),0(R2)                                                    
         BZ    INIT4D              END OF TABLE                                 
*                                                                               
         CLC   0(8,R2),SPACES      ANYTHING INPUT                               
         BNE   INIT4B                                                           
         LA    R2,20(R2)           NO TRY NEXT ENTRY                            
         B     INIT4A                                                           
*                                                                               
INIT4B   GOTO1 =V(LOADER),DUB,0(R2),0  LOAD MODULE                              
         ICM   RF,15,4(R1)                                                      
         BZ    INIT4C                                                           
*                                                                               
         L     R1,8(R2)            R1=A(VMODULE)                                
         ST    RF,0(R1)            SET NEW ADDRESS                              
         LA    R2,20(R2)           NEXT ENTRY                                   
         B     INIT4A                                                           
*                                                                               
INIT4C   LA    R1,12(R2)           SET ERRNUM FOR EXTERNAL PARAM                
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         LA    R1,PARMTBL          POINT TO W/S AND PRINTER                     
         LR    R0,RC                                                            
         L     RF,=A(GETPARM)                                                   
         BASR  RE,RF               PRINT ERROR MESSAGE                          
         B     EOJ                                                              
*                                                                               
INIT4D   L     R1,VLDDEFN          PASS A(LDDEFN) IN P4                         
         ST    R1,PLCOUNT+12                                                    
         ST    R1,PLPURGE+12                                                    
         ST    R1,PLCPTRS+12                                                    
         ST    R1,PLTPTRS+12                                                    
         ST    R1,PLSIZE+12                                                     
         ST    R1,PLBALCK+12                                                    
         ST    R1,PLRECTY+12                                                    
*                                                                               
INIT5    CLI   DISP,1              TEST DISP=OLD CARD                           
         BE    INIT5B                                                           
         CLI   DISP,2              TEST DISP=SHR CARD                           
         BE    INIT5A                                                           
         CLI   OUTPUT,1            TEST OUTPUT=DISK                             
         BE    INIT5B                                                           
*                                                                               
INIT5A   LA    R1,ISOPEN           SET DISP=SHR OPEN                            
         ST    R1,OPENIS                                                        
         LA    R1,DAOPEN                                                        
         ST    R1,OPENDA                                                        
         B     INIT6                                                            
*                                                                               
INIT5B   LA    R1,ISOPOLD          SET DISP=OLD OPEN                            
         ST    R1,OPENIS                                                        
         LA    R1,DAOPOLD                                                       
         ST    R1,OPENDA                                                        
*                                                                               
INIT6    MVI   RECFLAG,0           RESET FLAGS                                  
         MVI   LRECFLAG,0                                                       
         MVI   FRSTIO,0                                                         
         MVI   EOFIN,C'N'                                                       
         MVI   DONBALCK,C'N'                                                    
         MVI   FLAG1,0                                                          
         MVI   FLAG2,0                                                          
         MVI   PLXTRN+8,0          CLEAR EXTERNAL RETURN FIELD                  
         MVI   OPNINF,0                                                         
         MVC   OPNINI,SPACES                                                    
*                                                                               
         XC    ISREC(256),ISREC    CLEAR RECORD I/O AREAS                       
         XC    LISREC(256),LISREC                                               
         L     R0,=A(DAREC)                                                     
         L     R1,=A(DARECX-DAREC)                                              
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
*                                                                               
INIT7    L     R1,DARECA           SET DBLKTAPE PARAM LIST                      
         ST    R1,PLDBLK                                                        
         MVC   PLDBLK+4(1),DALINKD+1                                            
         LA    R1,DANAME                                                        
         TM    PHFILE,YES          SET PHYSICAL NAME IF INPUT                   
         BZ    *+8                                                              
         LA    R1,PHFILEID                                                      
         ST    R1,PLDBLK+12                                                     
         TM    INPUT,WDU           SET PHYSICAL FILE TYPE                       
         BZ    *+8                                                              
         MVI   PLDBLK+12,C'W'                                                   
*                                                                               
INITA    LA    R1,COUNTERS         RESET RECORD COUNTERS                        
         CLI   0(R1),X'FF'                                                      
         BE    INITAX                                                           
         XC    0(4,R1),0(R1)                                                    
         LA    R1,L'COUNTERS(R1)                                                
         B     INITA+4                                                          
INITAX   EQU   *                                                                
*                                                                               
INITB    GOTO1 =V(PRINTER)         PRINT ACTION MESSAGE HEADER                  
         MVC   P(15),=C'ACTION MESSAGES'                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
         EJECT                                                                  
* OPEN ALL FILES REQUIRED FOR MODE AND INIT SORTER IF REQUIRED                  
*                                                                               
OPEN     TM    INPUT,TAPE          OPEN INPUT TAPE IF SPECIFIED                 
         BZ    OPEN1                                                            
         TM    INPUT,TAPEPHYS      IS TAPE A PHYSICAL TAPE                      
         BNZ   *+8                 YES DONT OPEN HERE                           
         BAS   R9,OPNIN                                                         
         MVI   OPNINF,X'81'        SET FIRST REC OF FIRST TAPE                  
*                                                                               
OPEN1    TM    OUTPUT,TAPE         OPEN OUTPUT TAPE IF SPECIFIED                
         BZ    OPEN2                                                            
         BAS   R9,OPNOUT                                                        
*                                                                               
OPEN2    MVC   WORK(1),INPUT       TEST IF ANY DISK FILES                       
         OC    WORK(1),OUTPUT                                                   
         TM    WORK,DISK                                                        
         BZ    OPENA                                                            
         XC    P1(24),P1           INIT PARM LIST FOR OPEN                      
*                                                                               
OPEN3    TM    MODE,DAFIL          OPEN DA FILE IF SPECIFIED                    
         BZ    OPEN6                                                            
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BNZ   OPEN4                                                            
         L     R2,DADTFA                                                        
         USING DTFPHD,R2                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
         B     OPEN6                                                            
*                                                                               
OPEN4    TM    MODE,FILE1          TEST IF 1ST DAFILE REQUIRED                  
         BZ    OPEN4A                                                           
         L     R2,F1DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
*                                                                               
OPEN4A   TM    MODE,FILE2          TEST IF 2ND DAFILE REQUIRED                  
         BZ    OPEN5                                                            
         L     R2,F2DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
*                                                                               
OPEN5    TM    MODE,FILE3          TEST IF 3RD DAFILE REQUIRED                  
         BZ    OPEN5A                                                           
         L     R2,F3DTFA                                                        
         GOTO1 =V(DADDS),P1,A(DAOPEN),,,(R2)                                    
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
*                                                                               
OPEN5A   TM    MODE,FILE4          TEST IF 4TH DAFILE REQUIRED                  
         BZ    OPEN6                                                            
         L     R2,F4DTFA                                                        
         GOTO1 =V(DADDS),P1,OPENDA,,,(R2)                                       
         LA    R1,DTFADCB                                                       
         BAS   RE,SETCACHE                                                      
*                                                                               
OPEN6    TM    MODE,ISFIL          OPEN IS FILE IF SPECIFIED                    
         BZ    OPEN6X                                                           
         L     R2,ISDTFA                                                        
         USING ISDTF,R2                                                         
         GOTO1 =V(ISDDS),P1,OPENIS,,,(R2)                                       
         LA    R1,ISFADCB                                                       
         BAS   RE,SETCACHE                                                      
         TM    OUTPUT,DISK         TEST OUTPUT IS FILE EXTENTS                  
         BZ    OPEN6X                                                           
         TM    ISFDEVF,X'0C'                                                    
         BZ    OPEN6X                                                           
         L     RF,=A(ERRMSGA)      INVALID IS FILE EXTENTS                      
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 210,DUMP                                                         
OPEN6X   EQU   *                                                                
         DROP  R2                                                               
*                                                                               
OPENA    MVI   DIRFLAG,0           SET NO DIRECTORY OUTPUT                      
         TM    OUTPUT,DISK                                                      
         BZ    OPENX                                                            
         TM    MODE,DAFIL          TEST IF OUTPUT DISK DA FILE                  
         BZ    OPENX               NO                                           
         OI    DIRFLAG,DIROUT      YES SET DIRECTORY OUTPUT                     
         TM    MODE,ISFIL          TEST IF OUTPUT IS FILE ALSO                  
         BZ    OPENB               NO                                           
         OI    DIRFLAG,DIRSORT     YES DIR OUTPUT MUST BE SORTED                
*                                                                               
OPENB    CLI   DIR,0               TEST IF DIR= PARM INPUT                      
         BE    OPENC               NO                                           
         BAS   R9,OPNDIR           YES OPEN THE OUTPUT DIR TAPE                 
         OI    DIRFLAG,DIRTAPE                                                  
         TM    DIR,DIRSORT         TEST IF WANT SORTED TAPE                     
         BZ    *+8                 NO                                           
         OI    DIRFLAG,DIRSORT     YES DIR OUTPUT MUST BE SORTED                
*                                                                               
OPENC    TM    DIRFLAG,DIRSORT     INITIALISE SORTER                            
         BZ    OPENX                                                            
         LA    R3,SORTC1           SET KEY LEN IN SORT CARD                     
**NOP**  LH    R0,ISKEYL                                                        
         LH    R0,ISRECL           INCLUDE DISK ADDRESS IN SORT                 
         BAS   RE,CVD                                                           
         MVC   16(2,R3),DUB+6                                                   
         LA    R4,SORTC2           SET REC LEN IN RECORD CARD                   
         LH    R0,ISRECL                                                        
         BAS   RE,CVD                                                           
         MVC   21(2,R4),DUB+6                                                   
*                                                                               
         MVI   SORTC1+37,C'1'      SET WORK FILES IN SORT CARD                  
         CLI   WORKF,0                                                          
         BE    *+10                                                             
         MVC   SORTC1+37(1),WORKF                                               
*                                                                               
         GOTO1 =V(SORTER),DMCB,(R3),(R4),0                                      
         B     OPENX                                                            
*                                                                               
SETCACHE ST    RE,SAVERE           SET OPTION FOR CACHE DISK                    
         LA    R0,2                SET 2 FOR LOAD                               
         TM    OUTPUT,DISK         TEST FOR LOAD TO DISK                        
         BO    *+8                                                              
         LA    R0,3                NO-SET 3 FOR DUMP                            
         LNR   R0,R0               NEGATIVE VALUE TO SUPERVISOR                 
*&&US*&& SVC   247                                                              
         L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
SORTC1   DC    CL80'SORT FIELDS=(01,NN,A),FORMAT=BI,WORK=1'                     
SORTC2   DC    CL80'RECORD TYPE=F,LENGTH=NN'                                    
*                                                                               
OPENX    EQU   *                                                                
         EJECT                                                                  
* LOAD IN EXTERNAL ROUTINE AND PASS CONTROL FOR PRE-PROCESSING                  
*                                                                               
INIXTRN  CLC   XTRNNAME,SPACES     LOAD EXTERNAL MODULE IF SPECIFIED            
         BNE   *+12                                                             
         MVI   XTRN,0                                                           
         B     INIXX                                                            
         L     RF,ALOADPT                                                       
         GOTO1 =V(LOADER),DUB,XTRNNAME,(RF)                                     
         L     RF,4(R1)                                                         
         LA    RF,0(RF)                                                         
         ST    RF,ALOADPT          SAVE EXTERNAL MODULE LOAD ADDRESS            
         LTR   RF,RF                                                            
         BNZ   INIX1                                                            
         L     RF,=A(EXTMSG2)      EXTERNAL NOT FOUND                           
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+21(8),XTRNNAME                                           
         BAS   R9,PUTMSGP                                                       
         ABEND 208,DUMP                                                         
*                                                                               
INIX1    L     RF,ALOADPT          CHECK IF EXTERNAL NO-OP                      
         CLC   0(2,RF),=X'07FE'                                                 
         BNE   INIX2                                                            
INIX1A   L     RF,=A(EXTMSG1)      EXTERNAL IS NOP                              
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+09(8),XTRNNAME                                           
         BAS   R9,PUTMSGP                                                       
         B     INIXB                                                            
*                                                                               
INIX2    TM    VERIFY,YES          TEST IF VERIFY=YES/IGNORE                    
         BZ    INIXA                                                            
         L     RF,ALOADPT          LOOK FOR C'*VERIFY*'                         
         LA    R0,256                                                           
INIX2A   CLC   0(8,RF),=C'*VERIFY*'                                             
         BE    INIX2B                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,INIX2A                                                        
         B     INIXA                                                            
INIX2B   LA    RF,8(RF)            BUMP PAST VERIFY LABEL                       
         ST    RF,FULL             SAVE A(EXTERNAL VERIFY INFO)                 
*                                                                               
INIX3    CLC   0(6,RF),DATEYMD     CHECK START DATE                             
         BH    *+14                                                             
         CLC   6(6,RF),DATEYMD     CHECK END DATE                               
         BNL   INIX4                                                            
INIX3A   L     RF,=A(EXTMSG3)      EXTERNAL DATES OUT OF RANGE                  
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+21(8),XTRNNAME                                           
         TM    VERIFY,X'40'        TEST VERIFY=IGNORE                           
         BO    INIX3B                                                           
         BAS   R9,PUTMSGP                                                       
         ABEND 209,DUMP                                                         
INIX3B   MVC   OPERMSG(11),=C'**WARNING**'                                      
         BAS   R9,PUTMSGP                                                       
*                                                                               
INIX4    MVC   DUB(1),ISFILEID+6   EXTRACT SYSTEM CHR FROM FILE ID              
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(1),DAFILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(1),D2FILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(1),D3FILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         MVC   DUB(1),D4FILEID+6                                                
         CLI   DUB,C' '                                                         
         BNE   INIX4A                                                           
         B     INIX4X                                                           
INIX4A   L     RF,FULL             POINT TO SYSTEM VALID LIST                   
         LA    RF,12(RF)                                                        
         CLI   0(RF),X'FF'         TEST EMPTY LIST                              
         BE    INIX4D                                                           
         CLI   0(RF),C'*'          TEST VALID FOR ALL SYSTEMS                   
         BE    INIX4X                                                           
         LA    R0,40                                                            
INIX4B   CLC   0(1,RF),DUB         TEST SYSTEM IN LIST                          
         BE    INIX4X                                                           
         CLI   0(RF),X'FF'                                                      
         BE    INIX4C                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,INIX4B                                                        
INIX4C   L     RF,ALOADPT          SYSTEM NOT IN LIST                           
         MVC   0(2,RF),=X'07FE'    SET EXTERNAL NO-OP                           
         B     INIX1A                                                           
INIX4D   L     RF,=A(EXTMSG4)      EMPTY SYSTEM LIST                            
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+21(8),XTRNNAME                                           
         TM    VERIFY,X'40'        TEST VERIFY=IGNORE                           
         BO    INIX4E                                                           
         BAS   R9,PUTMSGP                                                       
         ABEND 209,DUMP                                                         
INIX4E   MVC   OPERMSG(11),=C'**WARNING**'                                      
         BAS   R9,PUTMSGP                                                       
INIX4X   EQU   *                                                                
*                                                                               
INIXA    L     RF,=A(EXTMSG0)      EXTERNAL ACTIVE                              
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+09(8),XTRNNAME                                           
         BAS   R9,PUTMSGP                                                       
*                                                                               
INIXB    OI    XTRN,YES            SET EXTERNAL ROUTINE ACTIVE                  
         LA    R1,PLXTRN                                                        
         MVC   0(4,R1),=A(DAREC)   SET FIRST TIME CALL & A(RECORD)              
         TM    MODE,DAFIL                                                       
         BO    *+10                                                             
         MVC   0(4,R1),=A(ISREC)                                                
         MVI   4(R1),0                                                          
         TM    INPUT,TAPE          SET I/O DEVICE FLAGS                         
         BZ    *+8                                                              
         OI    4(R1),X'80'         SET TAPE INPUT FLAG                          
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         OI    4(R1),X'40'         SET TAPE OUTPUT FLAG                         
         TM    MODE,DAFIL                                                       
         BO    *+8                                                              
         OI    4(R1),X'20'         SET I/S FILE ONLY                            
*                                                                               
         L     RF,ALOADPT          PASS CONTROL TO EXTERNAL                     
         BASR  RE,RF                                                            
         MVI   PLXTRN+8,0          NO RETURN ALLOWED ON INIT CALL               
*                                                                               
INIXX    TM    OUTPUT,DISK         PASS TO LOAD OR DUMP ROUTINE                 
         BZ    DUMPFRST                                                         
         TM    MODE,DAFIL                                                       
         BO    LDDAFRST                                                         
         B     LDISFRST                                                         
         EJECT                                                                  
* LOAD DIRECT ACCESS TO DISK                                                    
*                                                                               
LDDAFRST EQU   *                   FIRST TIME CODE FOR LOAD TO DISK             
*                                                                               
LDDAFR1  TM    WARN,YES            TEST IF LOAD WARNING MSG WANTED              
         BZ    LDDAFR1E                                                         
         L     R1,=A(WARNMSG)      WARN 'DISK TO BE DELETED'                    
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+17(7),DANAME                                             
*                                                                               
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTIPLE DA FILES                  
         BNZ   LDDAFR1A                                                         
         BAS   R9,PAGMSG           OUTPUT DA FILE NAME                          
         BL    EOJ                 EXIT IF REPLY IS EOJ OR CANCEL               
         BE    LDDAFR1E            OK IF REPLY IS ERASE                         
         B     LDDAFR1             ASK AGAIN IF INVALID REPLY                   
*                                                                               
LDDAFR1A TM    MODE,FILE1          TEST IF LOADING 1ST DA FILE                  
         BZ    LDDAFR1B                                                         
         MVC   OPERMSG+17(7),F1NAME                                             
         BAS   R9,PAGMSG           OUTPUT 1ST DA FILE NAME (FILE1)              
         BL    EOJ                 EXIT IF REPLY IS EOJ OR CANCEL               
         BE    LDDAFR1B            OK IF REPLY IS ERASE                         
         B     LDDAFR1A            ASK AGAIN IF INVALID REPLY                   
*                                                                               
LDDAFR1B TM    MODE,FILE2          TEST IF LOADING 2ND DA FILE                  
         BZ    LDDAFR1C                                                         
         MVC   OPERMSG+17(7),F2NAME                                             
         BAS   R9,PAGMSG           OUTPUT 2ND DA FILE NAME (FILE2)              
         BL    EOJ                 EXIT IF REPLY IS EOJ OR CANCEL               
         BE    LDDAFR1C            OK IF REPLY IS ERASE                         
         B     LDDAFR1B            ASK AGAIN IF INVALID REPLY                   
*                                                                               
LDDAFR1C TM    MODE,FILE3          TEST IF LOADING 3RD DA FILE                  
         BZ    LDDAFR1D                                                         
         MVC   OPERMSG+17(7),F3NAME                                             
         BAS   R9,PAGMSG           OUTPUT 3RD DA FILE NAME (FILE3)              
         BL    EOJ                 EXIT IF REPLY IS EOJ OR CANCEL               
         BE    LDDAFR1D            OK IF REPLY IS ERASE                         
         B     LDDAFR1C            ASK AGAIN IF INVALID REPLY                   
*                                                                               
LDDAFR1D TM    MODE,FILE4          TEST IF LOADING 4TH DA FILE                  
         BZ    LDDAFR1E                                                         
         MVC   OPERMSG+17(7),F4NAME                                             
         BAS   R9,PAGMSG           OUTPUT 4TH DA FILE NAME (FILE4)              
         BL    EOJ                 EXIT IF REPLY IS EOJ OR CANCEL               
         BE    LDDAFR1E            OK IF REPLY IS ERASE                         
         B     LDDAFR1D            ASK AGAIN IF INVALID REPLY                   
*                                                                               
LDDAFR1E CLI   GLOBAL,C'N'         CHECK IF OK TO LOAD GLOBAL FILE              
         BE    LDDAFR2                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    LDDAFR2                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSLCK'),DANAME,DADTFA,(2,0)                 
         L     RE,12(R1)                                                        
         MVC   OPERMSG,0(RE)                                                    
         MVC   CSRESULT,12(R1)                                                  
         MVC   CSRESERR,16(R1)                                                  
         CLI   CSRESULT,2          0,1,2 OK TO LOAD IS FILE                     
         BH    CHKERR                                                           
*                                                                               
LDDAFR2  XC    DAREC(256),DAREC    CREATE DA FILE HDR REC                       
         XC    SVD1HDR,SVD1HDR     CLEAR HDR REC SAVE INFO                      
         XC    SVD2HDR,SVD2HDR                                                  
         XC    SVD3HDR,SVD3HDR                                                  
         XC    SVD4HDR,SVD4HDR                                                  
*                                                                               
         LA    RF,DAREC                                                         
         AH    RF,ISKEYL1                                                       
         MVI   0(RF),X'01'         KEY ALL ZEROS WITH X'01' LAST BYTE           
         LA    RE,128              GET REC LEN                                  
         STC   RE,2(RF)                                                         
         SH    RE,DAELD            GET ELEMENT LEN                              
         LA    RF,DAREC                                                         
         AH    RF,DAELD                                                         
         MVI   0(RF),1             SET DUMMY ELEMENT CODE AND LENGTH            
         STC   RE,1(RF)                                                         
         MVC   DAREC+76(4),=C'FIL='                                             
         MVC   DAREC+80(8),DANAME  MOVE IN FILE NAME                            
         MVI   RECRFN,0                                                         
*                                                                               
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTIPLE DA FILES                  
         BNZ   LDDAFR2A                                                         
         LA    RF,LDDA             SET TO RETURN TO NORMAL LOAD                 
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR                                                   
         B     LDDAHAT             GO AND LOAD DA FILE HDR REC                  
*                                                                               
LDDAFR2A TM    MODE,FILE1          LOADING 1ST DA FILE (FILE1)                  
         BZ    LDDAFR2B            NO                                           
         LA    RE,DAREC            YES SET KEY OF FILE1 HDR REC                 
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'01'         KEY ALL ZEROS WITH X'01' LAST BYTE           
         MVC   DAREC+80(8),F1NAME                                               
         LA    RF,LDDA                                                          
         TM    MODE,FILE2+FILE3+FILE4                                           
         BZ    *+8                                                              
         LA    RF,LDDAFR2B         SET TO RETURN FOR FILE2 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE1                                             
         B     LDDAHAT             GO AND LOAD 1ST (FILE1) HDR REC              
*                                                                               
LDDAFR2B TM    MODE,FILE2          LOADING 2ND DA FILE (FILE2)                  
         BZ    LDDAFR2C                                                         
         LA    RE,DAREC            SET KEY OF FILE2 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'02'         KEY ALL ZEROS WITH X'02' LAST BYTE           
         MVC   DAREC+80(8),F2NAME                                               
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,1                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE2                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         TM    MODE,FILE3+FILE4                                                 
         BZ    *+8                                                              
         LA    RF,LDDAFR2C         SET TO RETURN FOR FILE3 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE2                                             
         B     LDDAHAT             GO AND LOAD 2ND (FILE2) HDR REC              
*                                                                               
LDDAFR2C TM    MODE,FILE3          LOADING 3RD DA FILE (FILE3)                  
         BZ    LDDAFR2D                                                         
         LA    RE,DAREC            SET KEY OF FILE3 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'03'         KEY ALL ZEROS WITH X'03' LAST BYTE           
         MVC   DAREC+80(8),F3NAME                                               
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,2                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE3                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         TM    MODE,FILE4                                                       
         BZ    *+8                                                              
         LA    RF,LDDAFR2D         SET TO RETURN FOR FILE4 HDR                  
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE3                                             
         B     LDDAHAT             GO AND LOAD 3RD (FILE3) HDR REC              
*                                                                               
LDDAFR2D TM    MODE,FILE4          LOADING 4TH DA FILE (FILE4)                  
         BZ    LDDA                                                             
         LA    RE,DAREC            SET KEY OF FILE3 HDR REC                     
         AH    RE,ISKEYL1                                                       
         MVI   0(RE),X'04'         KEY ALL ZEROS WITH X'04' LAST BYTE           
         MVC   DAREC+80(8),F4NAME                                               
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            POINT TO BYTE WHICH DEFINES FILE             
         LA    R0,3                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE4                   
         LA    RF,LDDA             SET TO RETURN TO LOAD                        
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECHDR+FILE4                                             
         B     LDDAHAT             GO AND LOAD 4TH (FILE4) HDR REC              
*                                                                               
LDDARET  DC    A(*)                LOAD RETURN ADDRESS                          
*                                                                               
LDDADEL  TM    COUNT,YES+X'40'     COUNT=PURGED SPECIFIED                       
         BNO   LDDADELX                                                         
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LDDADELX                                                         
         LA    RE,DAREC            POINT TO DAREC                               
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'41'         SET PASSING PURGED DA RECORD                 
         STCM  RE,7,1(R1)                                                       
         BASR  RE,RF               CALL DIRECTORY COUNTING ROUTINE              
         LA    RE,ISREC                                                         
         ST    RE,PLCOUNT                                                       
*                                                                               
LDDADELX L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,TIDEL                                                         
         SPACE 2                                                                
* GET NEXT INPUT RECORD FOR LOAD TO DISK                                        
*                                                                               
LDDA     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    LDDA0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         B     LDDAXTRN                                                         
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    LDAEOF              EXTERNAL HAS FINISHED EOF RETURNS            
LDDA0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
*                                                                               
LDDA1    BAS   R9,RITAPE           READ D/A FILE RECORD INTO DARAC              
         LH    R1,ISRECL                                                        
         LA    RE,4(R1)                                                         
         CH    RE,DARECH           TEST RECORD IS AN I/S FILE POINTER           
         BNE   LDDA1A                                                           
         TM    SVDMULTI,LDDQDPTR   TEST I/S POINTERS ALLOWED ON TAPE            
         BZ    LDDA1A                                                           
         L     R4,PLCPTRS+4        R4=A(POINTER BUFFER)                         
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),DAREC       MOVE KEY TO BUFFER                           
         AR    R1,R4                                                            
         MVC   0(1,R1),PLCPTRS+8   SET END OF BUFFER                            
         B     LDDAD4              PASS I/S POINTER TO SORT                     
*                                                                               
LDDA1A   LA    R1,DAREC                                                         
         BAS   R9,RECTYPE          SET RECORD TYPE FLAG                         
         BAS   R9,SAVEHDR                                                       
         ICM   RF,15,VLDRECTY      TEST IF RECORD TYPE EXTERNAL                 
         BZ    *+10                                                             
         LA    R1,PLRECTY                                                       
         BASR  RE,RF                                                            
*                                                                               
LDDA2    TM    OPNINF,X'80'        TEST IF FIRST REC ON DA TAPE                 
         BZ    LDDA2X                                                           
         NI    OPNINF,X'7F'                                                     
         TM    RECFLAG,RECHDR      EXIT IF FIRST REC NOT A HDR                  
         BZ    LDDA2X                                                           
         CLC   DAREC+76(4),=C'FIL='                                             
         BNE   LDDA2X                                                           
         CLI   OPNINF,1            TEST IF FIRST INPUT TAPE                     
         BNE   LDDA2B                                                           
         MVC   OPNINI,DAREC+80     SAVE FILE ID ON FIRST TAPE                   
         CLC   OPNINI,DANAME                                                    
         BE    LDDA2X              OK IF SAME AS DISK FILE ID                   
         TM    SVDMULTI,LDDQDA2+LDDQDA4                                         
         BNZ   LDDA2X              IGNORE IF MULTI DA FILES                     
*                                                                               
LDDA2A   TM    WARN,YES            TYPE WARNING MSG1 AND GET REPLY              
         BZ    LDDA2X                                                           
         L     RF,=A(WARNMSG1)     WARN 'TAPE NAME NOT SAME AS DISK'            
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(7),OPNINI                                             
         MVC   OPERMSG+42(7),DANAME                                             
         BAS   RE,PAGMSG                                                        
         BL    EOJ                 EXIT IF REPLY IS EOJ/CANCEL                  
         BE    LDDA2X              OK IF REPLY IS ERASE/IGNORE                  
         B     LDDA2A              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
LDDA2B   CLC   OPNINI,SPACES       TEST IF FILE ID ON FIRST TAPE                
         BE    LDDA2X                                                           
         CLC   OPNINI,DAREC+80     TEST IF THIS ID SAME AS FIRST TAPE           
         BE    LDDA2X                                                           
*                                                                               
LDDA2C   TM    WARN,YES            TYPE WARNING MSG2 AND GET REPLY              
         BZ    LDDA2X                                                           
         L     RF,=A(WARNMSG2)     WARN 'TAPE NAME NOT SAME AS TAPE'            
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+17(7),DAREC+80                                           
         MVC   OPERMSG+42(7),OPNINI                                             
         BAS   R9,PAGMSG                                                        
         BL    LDDA2D              OUTPUT ERROR IF REPLY EOJ/CANCEL             
         BE    LDDA2X              OK IF REPLY IS ERASE/IGNORE                  
         CLC   OPERANS(5),=C'RETRY'                                             
         BE    INPUTEOF                                                         
         B     LDDA2C              BACK AND ASK AGAIN IF INVALID REPLY          
*                                                                               
LDDA2D   L     RF,=A(ERRMSGB)      DA DISK BAD DUE TO WRONG TAPES               
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 211,DUMP                                                         
LDDA2X   EQU   *                                                                
*                                                                               
LDDAXTRN EQU   *                                                                
LDDA3    TM    XTRN,YES            PASS CONTROL TO EXTERNAL                     
         BZ    LDDA3X                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    LDDA3C                                                           
LDDA3A   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    LDDA3B                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    LDDA3X                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     LDDA3D                                                           
LDDA3B   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    LDDA3C                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    LDDA3X                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     LDDA3D                                                           
LDDA3C   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'         TEST IF RETURN IS DELETE RECORD              
         BNE   LDDA3D                                                           
         CLC   1(3,R1),=C'EOF'     TEST IF RETURN FORCES EOF                    
         BE    INPUTEOF                                                         
         B     LDDADEL                                                          
LDDA3D   MVI   RECFLAG,0           RESET REC TYPE FLAG AFTER EXTERNAL           
         LA    R1,DAREC                                                         
         BAS   R9,RECTYPE                                                       
         BAS   R9,SAVEHDR                                                       
         ICM   RF,15,VLDRECTY      TEST IF RECORD TYPE EXTERNAL                 
         BZ    *+10                                                             
         LA    R1,PLRECTY                                                       
         BASR  RE,RF                                                            
LDDA3X   EQU   *                                                                
*                                                                               
LDDA4    TM    RECFLAG,RECHDR+RECTRL                                            
         BNZ   LDDADEL                                                          
LDDA4X   EQU   *                                                                
*                                                                               
LDDA5    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    LDDA5X                                                           
         LA    RE,DAREC            POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            ADJUST FOR REC LEN                           
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER (0-3)            
         CLI   RECRFN,0                                                         
         BE    LDDA5A                                                           
         CLI   RECRFN,1                                                         
         BE    LDDA5B                                                           
         CLI   RECRFN,2                                                         
         BE    LDDA5C                                                           
         CLI   RECRFN,3                                                         
         BE    LDDA5D                                                           
         B     LDDADEL             DELETE IF DONT KNOW WHICH FILE               
LDDA5A   OI    RECFLAG,FILE1       RECORD COMES FROM 1ST DAFILE                 
         TM    MODE,FILE1                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE1                  
         B     LDDA5X                                                           
LDDA5B   OI    RECFLAG,FILE2       RECORD COMES FROM 2ND DAFILE                 
         TM    MODE,FILE2                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE2                  
         B     LDDA5X                                                           
LDDA5C   OI    RECFLAG,FILE3       RECORD COMES FROM 3RD DAFILE                 
         TM    MODE,FILE3                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE3                  
         B     LDDA5X                                                           
LDDA5D   OI    RECFLAG,FILE4       RECORD COMES FROM 4TH DAFILE                 
         TM    MODE,FILE4                                                       
         BZ    LDDADEL             DELETE IF NOT LOADING FILE2                  
LDDA5X   EQU   *                                                                
*                                                                               
LDDA6    ICM   RF,15,VLDPURGE      PASS CONTROL TO PURGE TEST ROUTINE           
         BZ    LDDA6X                                                           
         LA    R1,PLPURGE                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST RETURN CODE TO DELETE REC               
         BE    LDDADEL                                                          
LDDA6X   EQU   *                                                                
*                                                                               
LDDA8    TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    LDDA8X                                                           
         BAS   RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    LDDA8X                                                           
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    LDDADEL             YES                                          
LDDA8X   EQU   *                                                                
*                                                                               
LDDAHAT  EQU   *                   LOAD HDR AND TRL RECS HERE                   
*                                                                               
LDDA9    XC    P1(24),P1           BUILD PARAM LIST FOR LOAD TO DISK            
         LA    R1,DAREC                                                         
         ST    R1,P2               R1=A(DAREC)                                  
         LH    RF,DALINKD                                                       
         LTR   RF,RF               DOES REC HAVE A LINK FIELD                   
         BZ    *+12                NO                                           
         AR    RF,R1               YES CLEAR IT                                 
         XC    0(4,RF),0(RF)                                                    
         AH    R1,ISKEYL           POINT TO REC LEN FIELD                       
         MVC   P3+2(2),0(R1)                                                    
         MVC   P4,DADTFA                                                        
*                                                                               
LDDA10   ICM   RF,15,VLDSETL       POINT TO REC LEN SET/ADJUST ROUTINE          
         BZ    LDDA10X                                                          
         LA    R1,P1               LENGTH IS AT P3+2(2)                         
         BASR  RE,RF                                                            
LDDA10X  EQU   *                                                                
*                                                                               
LDDAA    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BNZ   LDDAA1                                                           
         LA    R1,P1                                                            
         MVI   P3,0                SET SINGLE DA FILE                           
         L     RF,=V(DALDDS)       LOAD RECORD TO DISK                          
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDDAERR             YES                                          
         L     RE,DOF1             NO BUMP DISK OUT DA COUNTER                  
         A     RE,=F'1'                                                         
         ST    RE,DOF1                                                          
         ST    RE,DACOUNT          SAVE COUNTER IN FILE INFO BLOCK              
         B     LDDAAX                                                           
*                                                                               
LDDAA1   TM    RECFLAG,FILE1       TEST IF REC IS FILE1 RECORD                  
         BZ    LDDAA2                                                           
         MVI   P3,1                SET RELATIVE FILE NUMBER                     
         MVC   P4,DADTFA           POINT TO FILE1                               
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE1 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDDAERR             YES                                          
         L     RE,DOF1             NO BUMP FILE1 DA COUNTER                     
         A     RE,=F'1'                                                         
         ST    RE,DOF1                                                          
         ST    RE,F1COUNT          SAVE COUNTER IN FILE1 INFO                   
         B     LDDAAX                                                           
*                                                                               
LDDAA2   TM    RECFLAG,FILE2       TEST IF REC IS FILE2 RECORD                  
         BZ    LDDAA3              NO                                           
         MVI   P3,2                SET RELATIVE FILE NUMBER                     
         MVC   P4,F2DTFA           POINT TO FILE2 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE2 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDDAERR             YES                                          
         L     RE,DOF2             NO BUMP FILE2 DA COUNTER                     
         A     RE,=F'1'                                                         
         ST    RE,DOF2                                                          
         ST    RE,F2COUNT          SAVE COUNTER IN FILE2 INFO                   
         B     LDDAAX                                                           
*                                                                               
LDDAA3   TM    RECFLAG,FILE3       TEST IF REC IS FILE3 RECORD                  
         BZ    LDDAA4              NO                                           
         MVI   P3,3                SET RELATIVE FILE NUMBER                     
         MVC   P4,F3DTFA           POINT TO FILE3 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE3 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDDAERR             YES                                          
         L     RE,DOF3             NO BUMP FILE3 DA COUNTER                     
         A     RE,=F'1'                                                         
         ST    RE,DOF3                                                          
         ST    RE,F3COUNT          SAVE COUNTER IN FILE3 INFO                   
         B     LDDAAX                                                           
*                                                                               
LDDAA4   TM    RECFLAG,FILE4       TEST IF REC IS FILE4 RECORD                  
         BZ    LDDAA5              NO                                           
         MVI   P3,4                SET RELATIVE FILE NUMBER                     
         MVC   P4,F4DTFA           POINT TO FILE4 DISK                          
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)       LOAD RECORD TO FILE4 DISK                    
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDDAERR             YES                                          
         L     RE,DOF4             NO BUMP FILE4 DA COUNTER                     
         A     RE,=F'1'                                                         
         ST    RE,DOF4                                                          
         ST    RE,F4COUNT          SAVE COUNTER IN FILE4 INFO                   
         B     LDDAAX                                                           
*                                                                               
LDDAA5   B     LDDADEL             DONT KNOW WHERE TO LOAD THIS SUCKER          
*                                                                               
LDDAERR  L     RF,=A(ERRMSGC)      DA DISK ON TRACK WRITE                       
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 212,DUMP                                                         
LDDAAX   EQU   *                                                                
*                                                                               
LDDAB    TM    SIZE,YES            PASS CONTROL TO DA REC LEN ROUTINE           
         BZ    LDDABX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDDABX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         LA    RE,DAREC                                                         
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
LDDABX   EQU   *                                                                
*                                                                               
LDDAC    TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    LDDACX                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    LDDACX                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
LDDACX   EQU   *                                                                
*                                                                               
LDDAD    TM    DIRFLAG,DIROUT      CREATE DIRECTORY POINTERS                    
         BZ    LDDADX                                                           
         ICM   RF,15,VLDCPTRS                                                   
         BZ    LDDADX                                                           
         MVI   PLCPTRS+8,0         SET DEFAULT END OF LIST CHR                  
         LA    R1,PLCPTRS                                                       
         BASR  RE,RF                                                            
*                                                                               
         L     R4,4(R1)            POINT TO DIRECTORY LIST                      
         B     LDDAD2                                                           
LDDAD1   CLC   0(1,R4),PLCPTRS+8   TEST RETURNED END OF LIST CHR                
         BE    LDDADX              YES                                          
LDDAD2   LR    RF,R4               POINT TO DIRECTORY ITEM                      
         AH    RF,ISRECL                                                        
         SH    RF,=H'4'                                                         
         TM    SVDFLAG1,LDDQPDSK   CAN FILE CAN HAVE DATA IN DISK ADDR          
         BZ    LDDAD3              NO                                           
         OC    0(4,RF),0(RF)       YES TEST IF DATA IN DISK ADDR                
         BNZ   *+10                                                             
LDDAD3   MVC   0(4,RF),P5          MOVE IN DISK ADDRESS                         
*                                                                               
LDDAD4   TM    DIRFLAG,DIRSORT     TEST IF DIR REC TO SORTER                    
         BZ    LDDAD5                                                           
         ICM   RF,15,VLDSORT       USE SPECIAL SORT IF RESOLVED                 
         BNZ   *+8                                                              
         L     RF,=V(SORTER)       ELSE USE STANDARD SORT                       
         GOTO1 (RF),DMCB,=C'PUT',(R4)                                           
         L     R1,DIST                                                          
         A     R1,=F'1'                                                         
         ST    R1,DIST             BUMP SORTIN RECORD COUNTER                   
         AH    R4,ISRECL                                                        
         B     LDDAD1              BACK FOR NEXT DIRECTORY REC                  
*                                                                               
LDDAD5   TM    DIRFLAG,DIRTAPE     TEST IF DIR REC TO TAPE                      
         BZ    LDDADX              NO                                           
         BAS   R9,WODIR            YES WRITE TO DIRTAPE                         
         AH    R4,ISRECL                                                        
         B     LDDAD1              BACK FOR NEXT DIRECTORY REC                  
*                                                                               
LDDADX   L     RF,LDDARET          BACK FOR NEXT DA FILE RECORD                 
         BR    RF                                                               
         SPACE 2                                                                
* NO MORE INPUT DA FILE RECORDS TO LOAD                                         
*                                                                               
LDAEOF   MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BZ    LDAEOF3                                                          
LDAEOF01 TM    MODE,FILE1          TEST IF LOADING FILE1                        
         BZ    LDAEOF02                                                         
         MVC   DAINFO,F1INFO                                                    
         B     LDAEOF3                                                          
LDAEOF02 TM    MODE,FILE2          TEST IF LOADING FILE2                        
         BZ    LDAEOF03                                                         
         MVC   DAINFO,F2INFO                                                    
         B     LDAEOF3                                                          
LDAEOF03 TM    MODE,FILE3          TEST IF LOADING FILE3                        
         BZ    LDAEOF04                                                         
         MVC   DAINFO,F3INFO                                                    
         B     LDAEOF3                                                          
LDAEOF04 TM    MODE,FILE4          TEST IF LOADING FILE4                        
         BZ    LDAEOF9X                                                         
         MVC   DAINFO,F4INFO                                                    
         B     LDAEOF3                                                          
*                                                                               
LDAEOF3  XC    DAREC(256),DAREC    CREATE DA FILE TRL REC                       
         LH    R1,ISKEYL                                                        
         SH    R1,=H'2'                                                         
         MVI   DAREC,X'FF'         FIRST BYTE OF KEY IS X'FF'                   
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   DAREC+1(0),DAREC    MAKE REST OF KEY FF'S                        
         LA    RF,DAREC                                                         
         AH    RF,ISKEYL                                                        
         LA    RE,128              GET REC LEN                                  
         STC   RE,1(RF)                                                         
         SH    RE,DAELD            GET ELEMENT LEN                              
         LA    RF,DAREC                                                         
         AH    RF,DAELD                                                         
         MVI   0(RF),1             SET DUMMY ELEMENT CODE AND LENGTH            
         STC   RE,1(RF)                                                         
         MVC   DAREC+76(4),=C'FIL='                                             
         MVC   DAREC+80(8),DANAME  MOVE IN FILE NAME                            
         L     RF,DACOUNT                                                       
         A     RF,=F'1'                                                         
         ST    RF,DAREC+88         MOVE IN RECORD COUNT                         
         LA    RF,LDAEOF4          SET TO RETURN TO LDAEOF4                     
         ST    RF,LDDARET                                                       
         MVI   RECFLAG,RECTRL      SET REC TYPE FLAG TO TRAILER                 
         CLI   DAFNUM,0                                                         
         BE    LDDAHAT                                                          
LDAEOF3A CLI   DAFNUM,1                                                         
         BNE   LDAEOF3B                                                         
         MVI   RECFLAG,RECTRL+FILE1                                             
         MVI   DAREC,X'FF'         FIRST BYTE OF KEY IS X'FF'                   
         B     LDDAHAT                                                          
LDAEOF3B CLI   DAFNUM,2                                                         
         BNE   LDAEOF3C                                                         
         MVI   RECFLAG,RECTRL+FILE2                                             
         MVI   DAREC,X'FE'         FIRST BYTE OF KEY IS X'FE'                   
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,1                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE2                   
         B     LDDAHAT                                                          
LDAEOF3C CLI   DAFNUM,3                                                         
         BNE   LDAEOF3D                                                         
         MVI   RECFLAG,RECTRL+FILE3                                             
         MVI   DAREC,X'FD'         FIRST BYTE OF KEY IS X'FD'                   
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,2                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE3                   
         B     LDDAHAT                                                          
LDAEOF3D CLI   DAFNUM,4                                                         
         BNE   LDAEOF3E                                                         
         MVI   RECFLAG,RECTRL+FILE4                                             
         MVI   DAREC,X'FC'         FIRST BYTE OF KEY IS X'FC'                   
         LA    RE,DAREC                                                         
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)                                                         
         LA    R0,3                                                             
         IC    R1,ISFSRL                                                        
         SLL   R0,0(R1)                                                         
         STC   R0,0(RE)            SET BITS THAT DEFINE FILE4                   
         B     LDDAHAT                                                          
LDAEOF3E DC    H'0'                                                             
*                                                                               
LDAEOF4  MVI   P1,X'FF'            WRITE OUT LAST BLOCK                         
         MVC   P3(1),DAFNUM        SET RELATIVE FILE NUMBER                     
         LA    R1,P1                                                            
         L     RF,=V(DALDDS)                                                    
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDDAERR                                                          
         MVC   DALAST,P5           SAVE LAST DISK ADDR                          
         LA    RE,F1LAST           SAVE IN FILE1 INFO BLOCK                     
         CLI   DAFNUM,2                                                         
         BNE   *+8                                                              
         LA    RE,F2LAST           OR FILE2 INFO BLOCK                          
         CLI   DAFNUM,3                                                         
         BNE   *+8                                                              
         LA    RE,F3LAST           OR FILE3 INFO BLOCK                          
         CLI   DAFNUM,4                                                         
         BNE   *+8                                                              
         LA    RE,F4LAST           OR FILE4 INFO BLOCK                          
         MVC   0(L'DALAST,RE),DALAST                                            
*                                                                               
LDAEOF5  CLI   LDWRITE,C'N'        TEST WRITE=NO SET                            
         BE    LDAEOF6X                                                         
         MVC   P1,=A(RDID)         UPDATE HEADER RECORD                         
         LA    R1,DAREC                                                         
         ST    R1,P2                                                            
         MVC   P4,DADTFA                                                        
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,=X'00010101'     HEADER REC IS FIRST RECORD                   
         TM    DAFLAG,DTFTBIG                                                   
         BZ    *+10                                                             
         MVC   P6,=X'00004101'     DISK ADDR OF BIG FILE HEADER REC             
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDAEOF5C            ERROR IF CANT READ HEADER REC                
*                                                                               
         CLC   DAREC+80(8),DANAME  ERROR IF NAMES DONT AGREE                    
         BNE   LDAEOF5C                                                         
         TM    DAFLAG,DTFTBIG                                                   
         BZ    LDAEOF5A                                                         
         SR    RE,RE               SET BIG FILE NEXT AVAIL TRACK                
         ICM   RE,7,DALAST                                                      
         SRL   RE,6                                                             
         A     RE,=F'1'                                                         
         STCM  RE,3,DAREC+92       SET LOW ORDER 16 BITS                        
         STCM  RE,4,DAREC+94       SET HIGH ORDER 8 BITS                        
         B     LDAEOF5B                                                         
LDAEOF5A SR    RE,RE               SET NORMAL FILE NEXT AVAIL TRACK             
         ICM   RE,3,DALAST                                                      
         A     RE,=F'1'                                                         
         STH   RE,DAREC+92                                                      
         MVI   DAREC+94,0                                                       
LDAEOF5B MVI   DAREC+95,X'FF'                                                   
         MVC   DAREC+58(8),DATEVAL SET DATE LOADED IN HDR                       
         THMS                                                                   
         ST    R1,DUB1+4           R1=0HHMMSS+                                  
         BAS   RE,CVD+4                                                         
         MVC   DAREC+66(6),DUB+2   SET TIME LOADED IN HEADER                    
         MVC   DAREC+88(4),DACOUNT SET RECORD COUNT IN HDR                      
*                                                                               
         LA    RF,SVD1HDR          RESTORE SAVED HEADER INFO                    
         CLI   DAFNUM,2                                                         
         BNE   *+8                                                              
         LA    RF,SVD2HDR                                                       
         CLI   DAFNUM,3                                                         
         BNE   *+8                                                              
         LA    RF,SVD3HDR                                                       
         CLI   DAFNUM,4                                                         
         BNE   *+8                                                              
         LA    RF,SVD4HDR                                                       
         MVC   DAREC+96(L'SVD1HDR),0(RF)                                        
*                                                                               
         MVC   P1,=A(WTID)         WRITE DA FILE HDR REC BACK                   
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BZ    LDAEOF5X                                                         
*                                                                               
LDAEOF5C L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         L     RF,=A(WARNMSGA)     ERROR ON DA DISK HDR READ/WRITE              
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
LDAEOF5X EQU   *                                                                
*                                                                               
LDAEOF6  MVC   P1,=A(WTERASE)      ERASE REST OF DA DISK FILE                   
         L     R1,AF1TRK                                                        
         ST    R1,P2                                                            
         MVI   P2,X'FF'                                                         
         XC    P3,P3                                                            
         MVC   P4,DADTFA                                                        
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DALAST                                                        
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         NI    P3+1,X'FB'          RESET EOF FLAG                               
         OC    P3(2),P3                                                         
         BZ    LDAEOF6X                                                         
LDAEOF6A L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         L     RF,=A(ERRMSGD)      DA DISK ERASE FAILURE                        
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 213,DUMP                                                         
LDAEOF6X EQU   *                                                                
*                                                                               
LDAEOF7  TM    BALCHECK,YES        FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    LDAEOF7X                                                         
         ICM   RF,15,VLDBALCK                                                   
         BZ    LDAEOF7X                                                         
         CLI   DONBALCK,C'Y'                                                    
         BE    LDAEOF7X                                                         
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
LDAEOF7X EQU   *                                                                
*                                                                               
LDAEOF8  MVC   INFOMSG1+8(L'DANAME),DANAME                                      
         MVC   INFOTRKA,SPACES                                                  
         MVC   INFOTRKU,SPACES                                                  
         MVC   INFOTRKL,SPACES                                                  
         ICM   R2,15,DADTFA                                                     
         BZ    LDAEOF8B                                                         
         USING DTFPHD,R2                                                        
         LA    R1,DMTX                                                          
         SR    RF,RF               RF=NUM OF TRACKS ALLOCATED                   
         SR    R0,R0                                                            
LDAEOF8A ICM   R0,3,12(R1)         PICK UP NUMBER OF TRACKS                     
         AR    RF,R0                                                            
         LA    R1,L'DMTX(R1)                                                    
         CLI   0(R1),X'FF'                                                      
         BNE   LDAEOF8A                                                         
         TM    DTFFLAG,DTFXNTRK    TEST IF EACH EXTENT HAS NUM OF TRKS          
         BO    *+6                 YES                                          
         LR    RF,R0               NO LAST EXTENT HOLDS HIGH REL TRK            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKA,DUB        DA TRACKS ALLOCATED                          
         SR    RE,RE                                                            
         ICM   RE,3,DALAST                                                      
         TM    DTFTYPE,DTFTBIG                                                  
         BZ    *+12                                                             
         ICM   RE,7,DALAST                                                      
         SRL   RE,6                                                             
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKU,DUB        DA TRACKS USED                               
         SR    RF,RE                                                            
         BP    *+6                                                              
         SR    RF,RF                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTRKL,DUB        DA TRACKS AVAILABLE                          
LDAEOF8B MVC   P(INFOMS1L),INFOMSG1                                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
LDAEOF9  CLI   DAFNUM,1            JUST DONE EOF FOR FILE1                      
         BE    LDAEOF02                                                         
         CLI   DAFNUM,2            JUST DONE EOF FOR FILE2                      
         BE    LDAEOF03                                                         
         CLI   DAFNUM,3            JUST DONE EOF FOR FILE3                      
         BE    LDAEOF04                                                         
LDAEOF9X EQU   *                                                                
*                                                                               
LDAEOFA  TM    DIRFLAG,DIRSORT     TEST IF DIR RECS PUT TO SORTER               
         BZ    LDAEOFAX            NO                                           
         MVI   XTRN,NO             YES RESET NO EXTERNAL                        
         B     LDISNXT             AND GET DIR RECS FROM SORTER                 
         TM    DIRFLAG,DIRTAPE     TEST IF DIR RECS PUT TO TAPE                 
         BZ    *+8                 NO                                           
         BAS   R9,CLSDIR           YES CLOSE UNSORTED DIRTAPE                   
LDAEOFAX EQU   *                                                                
*                                                                               
LDAEOFB  BAS   RE,PRTCTRS          PRINT DA LOAD COUNTERS                       
*                                                                               
LDAEOFC  TM    SIZE,YES            FINAL CALL OF DA REC LEN ROUTINE             
         BZ    LDAEOFCX                                                         
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDAEOFCX                                                         
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
LDAEOFCX EQU   *                                                                
*                                                                               
LDAEOFD  CLI   GLOBAL,C'N'         CHECK IF NEED TO UNLOCK GLOBAL FILE          
         BE    NXTPARM                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    NXTPARM                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSUNL')                                     
         B     NXTPARM                                                          
         EJECT                                                                  
* LOAD INDEX SEQUENTIAL FILE TO DISK                                            
*                                                                               
LDISFRST EQU   *                   FIRST TIME CODE FOR IS LOAD TO DISK          
*                                                                               
LDISFR1  TM    WARN,YES            TEST IF LOAD WARNING MSG WANTED              
         BZ    LDISFR1X                                                         
         L     R1,=A(WARNMSG)      WARN 'DISK TO BE DELETED'                    
         MVC   OPERMSG,0(R1)                                                    
         MVC   OPERMSG+17(7),ISNAME                                             
         BAS   R9,PAGMSG                                                        
         BL    EOJ                 EXIT IF REPLY IS EOJ/CANCEL                  
         BE    LDISFR1X            OK IF REPLY IS ERASE/IGNORE                  
         B     LDISFR1             ASK AGIN IF INVALID REPLY                    
LDISFR1X EQU   *                                                                
*                                                                               
LDISFR2  CLI   GLOBAL,C'N'         CHECK IF OK TO LOAD GLOBAL FILE              
         BE    LDIS                                                             
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    LDIS                                                             
         GOTO1 (RF),DMCB,(X'00',=C'DMSLCK'),ISNAME,ISDTFA,(2,0)                 
         L     RE,12(R1)                                                        
         MVC   OPERMSG,0(RE)                                                    
         MVC   CSRESULT,12(R1)                                                  
         MVC   CSRESERR,16(R1)                                                  
         CLI   CSRESULT,2          0,1,2 OK TO LOAD IS FILE                     
         BH    CHKERR                                                           
         SPACE 2                                                                
* GET NEXT IS FILE INPUT RECORD FOR LOAD TO DISK                                
*                                                                               
LDIS     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    LDIS0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+12                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         B     LDISXTRN                                                         
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    LISEOF              EXTERNAL HAS FINISHED EOF RETURNS            
LDIS0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
         MVI   LRECFLAG,X'80'      SAVE LAST IS REC AFTER LOAD TO DISK          
*                                                                               
LDIS1    BAS   R9,RITAPE           READ IS FILE RECORD INTO ISREC               
         LA    R1,ISREC                                                         
         BAS   R9,RECTYPE          SET RECORD TYPE FLAG                         
*                                                                               
LDISXTRN EQU   *                                                                
LDIS2    TM    XTRN,YES            PASS CONTROL TO IS EXTERNAL                  
         BZ    LDIS2X                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    LDIS2C                                                           
LDIS2A   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    LDIS2B                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    *+6                                                              
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     LDIS2X                                                           
LDIS2B   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    LDIS2C                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    *+6                                                              
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     LDIS2X                                                           
LDIS2C   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'         TEST IF RETURN IS DELETE RECORD              
         BNE   LDIS2X                                                           
         CLC   1(3,R1),=C'EOF'     TEST IF RETURN FORCES EOF                    
         BE    INPUTEOF                                                         
LDIS2D   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,TIDEL                                                         
         B     LDIS                                                             
LDIS2X   EQU   *                                                                
*                                                                               
LDIS5    CLI   PLCOUNT,X'FF'       LDCOUNT HANDLING DUPLICATES ETC              
         BE    LDIS7                                                            
         LH    R1,ISKEYL1          CHECK LOAD IS SEQUENCE                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC                                                  
         BH    LDIS7                                                            
         BL    LDIS6A                                                           
*                                                                               
LDIS6    L     RF,=A(WARNMSGC)     DUPLICATE KEY                                
         L     R1,DUPKEY                                                        
         A     R1,=F'1'                                                         
         ST    R1,DUPKEY                                                        
         B     LDIS6B                                                           
LDIS6A   L     RF,=A(WARNMSGD)     SEQUENCE ERROR                               
         L     R1,SEQERR                                                        
         A     R1,=F'1'                                                         
         ST    R1,SEQERR                                                        
LDIS6B   LH    R0,ISRECL           HEX OUT IS REC (MAX 54 BYTES)                
         LTR   R0,R0               TEST V/L RECORDS                             
         BNZ   *+16                LEN IS 0 FOR V/L RECORDS                     
         LA    R1,ISREC            POINT TO RECORD                              
         AH    R1,ISKEYL           + KEYLEN GIVES ADDRESS OF LENGTH             
         LH    R0,0(R1)            GET LENGTH IN REG                            
         CH    R0,=H'54'                                                        
         BL    *+8                                                              
         LH    R0,=H'54'                                                        
         MVC   OPERMSG,0(RF)                                                    
         MVC   P(L'OPERMSG),OPERMSG                                             
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+24,(R0),=C'MIX'                          
         GOTO1 =V(PRINTER)                                                      
         MVC   ISREC(ISMAX),LISREC RESET IS REC TO LAST IS REC LOADED           
         B     LDISNXT                                                          
*                                                                               
LDIS7    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    LDIS7X                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LDIS7X                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'                                                      
         BNE   LDIS7X                                                           
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,TIDEL                                                         
         B     LDISNXT                                                          
LDIS7X   EQU   *                                                                
*                                                                               
LDIS8    XC    P1(24),P1           LOAD IS FILE RECORD                          
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,P1                                                            
         L     RF,=V(ISLDDS)       LOAD TO DISK                                 
         BASR  RE,RF                                                            
         OC    P3(2),P3            ANY ERRORS                                   
         BNZ   LDISERR             YES                                          
         L     RE,DOIS             NO BUMP DISK OUT IS COUNTER                  
         A     RE,=F'1'                                                         
         ST    RE,DOIS                                                          
         B     LDIS8A                                                           
LDISERR  L     RF,=A(ERRMSGE)      IS DISK WRITE ERROR                          
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 214,DUMP                                                         
LDIS8A   TM    LRECFLAG,X'80'      TEST SAVE IS REC AFTER WRITE                 
         BZ    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE LAST REC ACTUALLY LOADED                
LDIS8X   EQU   *                                                                
*                                                                               
LDISNXT  CLI   PLCOUNT,X'FE'       SECOND LDCOUNT CALL REQUIRED                 
         BE    LDIS7                                                            
         TM    DIRFLAG,DIRSORT     TEST IF NEXT IS FILE REC FROM SORT           
         BZ    LDIS                NO GO GET IT FROM INPUT TAPE                 
*                                                                               
         TM    LRECFLAG,X'80'      TEST SAVE IS REC AFTER WRITE                 
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE IS REC BEFORE READ                      
         ICM   RF,15,VLDSORT       USE SPECIAL SORT IF RESOLVED                 
         BNZ   *+8                                                              
         L     RF,=V(SORTER)       ELSE USE STANDARD SORT                       
         GOTO1 (RF),DMCB,=C'GET'                                                
         L     RF,4(R1)                                                         
         LTR   RF,RF                                                            
         BZ    LDISNXT1            END OF SORT FILE                             
         LH    RE,ISRECL                                                        
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RF)      MOVE RECORD FROM SORT TO ISREC               
*                                                                               
         L     R1,DOST             BUMP SORT OUTPUT COUNTER                     
         A     R1,=F'1'                                                         
         ST    R1,DOST                                                          
*                                                                               
         TM    DIRFLAG,DIRTAPE     TEST IF SORTED DIRTAPE OUTPUT                
         BZ    LDIS5               NO                                           
         LA    R4,ISREC            YES POINT TO IS REC                          
         BAS   R9,WODIR                                                         
         TM    MODE,ISFIL          LOADING IS DISK FILE                         
         BO    LDIS5               YES                                          
         B     LDISNXT             NO GO GET NEXT IS REC FROM SORT              
*                                                                               
LDISNXT1 TM    DIRFLAG,DIRTAPE     TEST IF DIR RECS PUT TO TAPE                 
         BZ    LISEOF                                                           
         BAS   R9,CLSDIR                                                        
         TM    MODE,ISFIL          TEST IF LOADING IS DISK FILE                 
         BZ    LDAEOFB             NO BACK TO DA FILE EOF LOGIC                 
         SPACE 2                                                                
* NO MORE IS FILE RECORDS TO LOAD                                               
*                                                                               
LISEOF   MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         CLI   LISREC,X'FF'        CREATE EOF REC IF MISSING                    
         BE    LISEOF1                                                          
         LH    R1,ISKEYL                                                        
         SH    R1,=H'2'                                                         
         MVI   ISREC,X'FF'                                                      
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC+1(0),ISREC                                                 
         XC    P1(24),P1           LOAD IS FILE EOF REC                         
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,P1                                                            
         L     RF,=V(ISLDDS)                                                    
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   LDISERR                                                          
         L     RF,=A(WARNMSGB)     EOF REC IS WRITE ERROR                       
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
*                                                                               
LISEOF1  L     R1,ISDTFA                                                        
         USING ISDTF,R1                                                         
         MVC   INFOMSG2+8(L'ISNAME),ISNAME                                      
         SR    RF,RF                                                            
         LA    R2,ISXTNTPD         POINT TO LAST PD EXTENT                      
         TM    ISFTYPE,ISFTPDOV    TEST FOR IXPDOV FILE                         
         BZ    *+8                 NO                                           
         LA    R2,ISXTNT           POINT TO START OF EXTENTS                    
         ICM   RF,3,12(R2)                                                      
         LA    R2,14(R2)                                                        
         CLI   0(R2),X'FF'                                                      
         BNE   *-12                                                             
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTA,DUB        PD TRACKS ALLOCATED                          
         SR    RE,RE                                                            
         ICM   RE,3,ISPDLAST                                                    
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTU,DUB        PD TRACKS USED                               
         SR    RF,RE                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTL,DUB        PD TRACKS AVAILABLE                          
         MVC   P(INFOMS2L),INFOMSG2                                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   INFOMC1L,=C'CYL'    SET CYL/MST INDEX SIZE                       
         MVC   INFOMC2L,=C'MST'                                                 
         TM    ISINDXTY,X'01'                                                   
         BZ    *+16                                                             
         MVC   INFOMC1L,=C'MST'                                                 
         MVC   INFOMC2L,=C'CYL'                                                 
         MVC   INFOMC1T,=C'BYTES'                                               
         TM    ISINDXTY,X'02'                                                   
         BZ    *+10                                                             
         MVC   INFOMC1T,=C'DUBWS'                                               
         MVC   INFOMC2T,INFOMC1T                                                
         SR    R0,R0                                                            
         ICM   R0,3,ISINDXLN                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC1U,DUB                                                     
         SR    R0,R0                                                            
         ICM   R0,3,ISCILN+2                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC2U,DUB                                                     
         MVC   P(INFOMS3L),INFOMSG3                                             
         GOTO1 =V(PRINTER)                                                      
         BAS   RE,PRTCTRS                                                       
*                                                                               
LISEOF2  TM    MODE,DAFIL          FINAL CALL OF DA REC LEN ROUTINE             
         BZ    LISEOF2X                                                         
         TM    SIZE,YES                                                         
         BZ    LISEOF2X                                                         
         ICM   RF,15,VLDSIZE                                                    
         BZ    LISEOF2X                                                         
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
LISEOF2X EQU   *                                                                
*                                                                               
LISEOF3  TM    MODE,DAFIL          FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    LISEOF3X                                                         
         TM    BALCHECK,YES                                                     
         BZ    LISEOF3X                                                         
         CLI   DONBALCK,C'Y'                                                    
         BE    LISEOF3X                                                         
         ICM   RF,15,VLDBALCK                                                   
         BZ    LISEOF3X                                                         
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
LISEOF3X EQU   *                                                                
*                                                                               
LISEOF4  TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    LISEOF4X                                                         
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LISEOF4X                                                         
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'FF'                                                      
         LA    RE,ISNAME                                                        
         ST    RE,4(R1)                                                         
         BASR  RE,RF                                                            
LISEOF4X EQU   *                                                                
*                                                                               
LISEOF5  TM    DIRFLAG,DIRSORT     CHECK SORTIN EQ SORTOUT                      
         BZ    LISEOF5X                                                         
         CLC   DIST,DOST                                                        
         BE    LISEOF5X                                                         
         L     RF,=A(ERRMSGF)      SORTIN NEQ SORTOUT                           
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 215,DUMP                                                         
LISEOF5X EQU   *                                                                
*                                                                               
         CLI   GLOBAL,C'N'         CHECK IF NEED TO UNLOCK GLOBAL FILE          
         BE    NXTPARM                                                          
         ICM   RF,15,=V(DMSECHK)                                                
         BZ    NXTPARM                                                          
         GOTO1 (RF),DMCB,(X'00',=C'DMSUNL')                                     
         B     NXTPARM             BACK FOR NEXT SET OF PARAM CARDS             
         DROP  R1                                                               
         SPACE 2                                                                
CHKERR   BAS   R9,PUTMSGP          OUTPUT SE CHECK ERROR MESSAGE                
         ABEND 217,DUMP                                                         
         EJECT                                                                  
* DUMP TO TAPE FROM DISK (OR TAPE)                                              
*                                                                               
DUMPFRST EQU   *                   FIRST TIME CODE FOR DUMP FROM DISK           
*                                                                               
DUMPFR1  XC    Q1(24),Q1           INITIALISE DA PARAM LIST                     
         MVC   Q1,=A(RDIDTRK)                                                   
         LA    R1,DAREC                                                         
         ST    R1,Q2                                                            
         MVC   Q4,DADTFA                                                        
         L     R1,AF1TRK                                                        
         ST    R1,Q6                                                            
         TM    TRACK,YES           TEST IF TRACK=NO INPUT                       
         BO    *+10                                                             
         MVC   Q1,=A(RDID)         SET FOR NO FULL TRACK I/O                    
*                                                                               
DUMPFR2  XC    P1(24),P1           INITIALISE IS PARAM LIST                     
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,LISREC           KEYARG FOR READ HI IS LISREC                 
         ST    R1,P5                                                            
         L     R1,AISTRK                                                        
         ST    R1,P6                                                            
         MVI   P6,X'FF'                                                         
         TM    TRACK,YES           TEST IF TRACK=NO INPUT                       
         BO    *+8                                                              
         MVI   P6,X'00'            SET FOR NO FULL TRACK I/O                    
*                                                                               
DUMPFR3  CLI   START,0             TEST START KEY INPUT                         
         BE    DUMPFR3X                                                         
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RE)      SET KEY FOR FIRST READ HIGH                  
DUMPFR3X EQU   *                                                                
         SPACE 2                                                                
* GET NEXT INPUT RECORD FOR DUMP FROM DISK                                      
*                                                                               
DUMP     TM    XTRN,YES            TEST IF EXTERNAL IN OPERATION                
         BZ    DUMP0                                                            
         CLI   PLXTRN+8,C'R'       TEST IF RETURN REQUESTED                     
         BNE   *+20                                                             
         MVI   PLXTRN+8,C'Y'       YES SET REQUESTED RETURN CALL                
         TM    MODE,DAFIL                                                       
         BO    DPDAXTRN            EXTERNAL FOR DA INPUT                        
         B     DPISXTRN            EXTERNAL FOR IS INPUT                        
         MVI   PLXTRN+8,0          SET NORMAL CALL IN PARAM LIST                
         CLI   EOFIN,C'Y'                                                       
         BE    DUMPEOF             EXTERNAL HAS FINISHED EOF RETURNS            
DUMP0    CLI   EOFIN,C'Y'                                                       
         BNE   *+6                                                              
         DC    H'0'                                                             
*                                                                               
DUMP1    TM    INPUT,TAPE          READ INPUT TAPE FILE                         
         BZ    DUMP2                                                            
         BAS   R9,RITAPE                                                        
         TM    MODE,DAFIL          TEST IF TAPE HAS IS FILE RECORDS             
         BZ    DUMP8               YES                                          
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    DUMPG                                                            
         LA    RE,DAREC            POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         LA    RE,2(RE)            ADJUST FOR DA FILE RECORD LENGTH             
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER                  
         CLI   RECRFN,0                                                         
         BE    DUMP1A                                                           
         CLI   RECRFN,1                                                         
         BE    DUMP1B                                                           
         CLI   RECRFN,2                                                         
         BE    DUMP1C                                                           
         CLI   RECRFN,3                                                         
         BE    DUMP1D                                                           
         B     DUMP1E                                                           
DUMP1A   OI    RECFLAG,FILE1       DA RECORD IS AN FILE1 RECORD                 
         TM    MODE,FILE1                                                       
         BO    DUMPG               TAPE HAS FILE1 DA REC                        
         B     DUMP1E                                                           
DUMP1B   OI    RECFLAG,FILE2       DA RECORD IS A FILE2 RECORD                  
         TM    MODE,FILE2                                                       
         BO    DUMPG               TAPE HAS FILE2 DA REC                        
         B     DUMP1E                                                           
DUMP1C   OI    RECFLAG,FILE3       DA RECORD IS AN FILE3 RECORD                 
         TM    MODE,FILE3                                                       
         BO    DUMPG               TAPE HAS FILE1 DA REC                        
         B     DUMP1E                                                           
DUMP1D   OI    RECFLAG,FILE4       DA RECORD IS A FILE4 RECORD                  
         TM    MODE,FILE4                                                       
         BO    DUMPG               TAPE HAS FILE2 DA REC                        
         B     DUMP1E                                                           
DUMP1E   L     R1,TIDEL                                                         
         A     R1,=F'1'                                                         
         ST    R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         B     DUMP                                                             
*                                                                               
DUMP2    TM    MODE,ISFIL          READ INPUT DA DISK FILE DIRECTLY             
         BO    DUMP4                                                            
         BAS   R9,RIDAFILE                                                      
         B     DUMPG                                                            
*                                                                               
DUMP4    TM    LRECFLAG,X'80'      TEST TO SAVE IS REC AFTER WRITE              
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE IS FILE REC BEFORE READ                 
         CLI   FRSTIO,0                                                         
         BNE   DUMP6                                                            
         MVC   P1,=A(ISREAD)       READ FIRST IS FILE RECORD                    
         GOTO1 =V(ISDDS),P1                                                     
         MVI   FRSTIO,1            RESET FIRST I/0 FLAG                         
         XC    LISREC(ISMAX),LISREC                                             
         B     DUMP7                                                            
*                                                                               
DUMP6    MVC   P1,=A(ISRDSEQ)      READ NEXT IS FILE RECORD                     
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
DUMP7    TM    P3+1,X'04'          TEST FOR IS FILE EOF                         
         BO    INPUTEOF                                                         
         OC    P3(2),P3            TEST FOR IS FILE READ ERROR                  
         BNZ   DUMP7A                                                           
         MVI   RECFLAG,0           CLEAR RECORD TYPE FLAG                       
         MVI   FLAG2,0                                                          
         L     R1,DIIS             BUMP DISK IN IS COUNTER                      
         A     R1,=F'1'                                                         
         ST    R1,DIIS                                                          
         TM    MODE,DAFIL                                                       
         BO    DUMP7X                                                           
         C     R1,MAXIOS           CHECK IS READ COUNTER                        
         BH    INPUTEOF                                                         
         B     DUMP7X                                                           
DUMP7A   L     RE,=A(IOBCCWL)      SAVE ISDDS IOB/CCWS                          
         MVC   0(2,RE),=C'IS'                                                   
         MVC   8(136,RE),72(RD)                                                 
         L     RF,=A(ERRMSGG)      IS DISK READ ERROR                           
         MVC   OPERMSG,0(RF)                                                    
         BAS   R9,PUTMSGP                                                       
         ABEND 216,DUMP                                                         
DUMP7X   EQU   *                                                                
*                                                                               
DUMP8    LA    R1,ISREC            ISREC CONTAINS AN IS FILE RECORD             
         BAS   R9,RECTYPE          --------------------------------             
*                                                                               
DPISXTRN EQU   *                                                                
DUMP9    TM    XTRN,YES            PASS CONTROL TO EXTERNAL FOR ISREC           
         BZ    DUMP9X                                                           
         TM    MODE,DAFIL          UNLESS DA RECORD AS WELL                     
         BO    DUMP9X                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    DUMP9C                                                           
DUMP9A   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    DUMP9B                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMP9X                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     DUMP9X                                                           
DUMP9B   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    DUMP9C                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMP9X                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     DUMP9X                                                           
DUMP9C   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'                                                      
         BNE   DUMP9X              EXTERNAL RETURNS DELETE REC                  
         CLC   1(3,R1),=C'EOF'                                                  
         BE    INPUTEOF            EXTERNAL RETURNS FORCED EOF                  
         TM    INPUT,TAPE                                                       
         BO    DUMP9D                                                           
         L     R1,DIISD            BUMP DISK IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,DIISD                                                         
         B     DUMP                                                             
DUMP9D   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,TIDEL                                                         
         B     DUMP                                                             
DUMP9X   EQU   *                                                                
*                                                                               
DUMP10   TM    CHECK,PRTALL        PASS CONTROL TO IS PRINT                     
         BZ    DUMP10X                                                          
         BAS   RE,RECVAL                                                        
DUMP10X  EQU   *                                                                
*                                                                               
DUMPA    TM    SEQCHECK,YES        CHECK SEQUENCE OF IS RECS                    
         BZ    DUMPA6                                                           
         LH    R1,ISKEYL1          GET KEY LEN MINUS ONE                        
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC     CHECK SEQUENCE                               
         BH    DUMPA6                                                           
         BL    DUMPA2                                                           
         L     RF,=A(WARNMSGC)     DUPLICATE KEY                                
         L     R1,DUPKEY                                                        
         A     R1,=F'1'                                                         
         ST    R1,DUPKEY                                                        
         B     DUMPA4                                                           
DUMPA2   L     RF,=A(WARNMSGD)     SEQUENCE ERROR                               
         L     R1,SEQERR                                                        
         A     R1,=F'1'                                                         
         ST    R1,SEQERR                                                        
DUMPA4   LH    R0,ISRECL           PRINT IS REC IN HEX (MAX 54 BYTES)           
         CH    R0,=H'54'                                                        
         BL    *+8                                                              
         LH    R0,=H'54'                                                        
         MVC   OPERMSG,0(RF)                                                    
         MVC   P(L'OPERMSG),OPERMSG                                             
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+24,(R0),=C'MIX'                          
         GOTO1 =V(PRINTER)                                                      
         MVC   ISREC(ISMAX),LISREC                                              
         B     DUMP                                                             
DUMPA6   CLI   END,0               CHECK END KEY                                
         BE    DUMPAX                                                           
         L     RE,=A(ENDKEY)                                                    
         LH    R1,ISKEYL1          GET KEY LEN MINUS ONE                        
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RE)                                                   
         BNH   DUMPAX                                                           
         BAS   RE,SETNXT                                                        
         BE    INPUTEOF            IF GT END KEY SIMULATE EOF                   
         B     DUMP1                                                            
DUMPAX   EQU   *                                                                
*                                                                               
DUMPB    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DUMPBX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPBX                                                           
         LA    R1,PLCOUNT          SET NORMAL CALL IN PARAM LIST                
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
DUMPBX   EQU   *                                                                
*                                                                               
         TM    INPUT,TAPE          READING IS FILE FROM DISK                    
         BO    *+12                NO                                           
         TM    MODE,DAFIL          IS DA FILE BEING READ AS WELL                
         BO    DUMPC               YES GO TEST TO READ DA FILE                  
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         BAS   R9,WOTAPE           WRITE IS DUMP TAPE RECPRD                    
         B     DUMP                                                             
*                                                                               
DUMPC    TM    RECFLAG,RECPTR      TEST WHICH D/A FILE REQUIRED                 
         BZ    *+12                                                             
         MVI   TAPEFLAG,TAPEFPTR   ALWAYS DUMP SPECIAL IS POINTERS              
         B     DUMPP                                                            
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BZ    DUMPD                                                            
         LA    RE,ISREC            POINT TO BYTE WHICH DEFINES FILE             
         AH    RE,ISFBYTE                                                       
         NI    RECFLAG,255-FILE1234                                             
         MVC   RECRFN,0(RE)                                                     
         NC    RECRFN,ISFBITS                                                   
         SR    RE,RE                                                            
         IC    RE,RECRFN                                                        
         IC    RF,ISFSRL                                                        
         SRL   RE,0(RF)                                                         
         STC   RE,RECRFN           SET DA RELATIVE FILE NUMBER                  
         CLI   RECRFN,0                                                         
         BE    DUMPC1                                                           
         CLI   RECRFN,1                                                         
         BE    DUMPC2                                                           
         CLI   RECRFN,2                                                         
         BE    DUMPC3                                                           
         CLI   RECRFN,3                                                         
         BE    DUMPC4                                                           
         B     DUMPE                                                            
*                                                                               
DUMPC1   OI    RECFLAG,FILE1       ISFILE POINTS TO 1ST DAFILE                  
         TM    MODE,FILE1                                                       
         BO    DUMPC1A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT ISFILE POINTERS DUMPED             
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC1A  MVC   Q4,F1DTFA                                                        
         L     R1,AF1TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC2   OI    RECFLAG,FILE2       ISFILE POINTS TO 2ND DAFILE                  
         TM    MODE,FILE2                                                       
         BO    DUMPC2A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC2A  MVC   Q4,F2DTFA                                                        
         L     R1,AF2TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC3   OI    RECFLAG,FILE3       ISFILE POINTS TO 3RD DAFILE                  
         TM    MODE,FILE3                                                       
         BO    DUMPC3A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC3A  MVC   Q4,F3DTFA                                                        
         L     R1,AF3TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPC4   OI    RECFLAG,FILE4       ISFILE POINTS TO 4TH DAFILE                  
         TM    MODE,FILE4                                                       
         BNZ   DUMPC4A                                                          
         TM    SVDMULTI,LDDQDPTR   TEST WANT I/S POINTERS DUMPED                
         BZ    DUMPE                                                            
         MVI   TAPEFLAG,TAPEFPTR   YES - SET SPECIAL FLAG FOR WOTAPE            
         B     DUMPP                                                            
DUMPC4A  MVC   Q4,F4DTFA                                                        
         L     R1,AF4TRK                                                        
         ST    R1,Q6                                                            
         B     DUMPD                                                            
*                                                                               
DUMPD    ICM   RF,15,VLDTPTRS      PASS CONTROL TO TEST PASSIVE PTRS            
         BZ    DUMPDX                                                           
         TM    RECFLAG,RECPTR      SPECIAL POINTERS ARE PSEUDO PASSIVE          
         BNZ   DUMPDX                                                           
         LA    R1,PLTPTRS          SET PARAM LIST                               
         MVI   0(R1),0                                                          
         MVI   4(R1),0                                                          
         BASR  RE,RF                                                            
         CLI   0(R1),X'FF'         TEST IF PASSIVE POINTER                      
         BNE   DUMPDX              NO                                           
DUMPD1   TM    COUNT,YES           YES WAS THE RECORD COUNTED                   
         BZ    DUMPD2                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPD2                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'81'         REVERSE PREV CALL TO DIR COUNT               
         BASR  RE,RF                                                            
         LA    R1,PLTPTRS                                                       
DUMPD2   CLI   4(R1),X'FF'         DID ROUTINE PASS NEW KEY                     
         BNE   DUMPE               NO                                           
         MVI   FRSTIO,0            YES SET TO DO A READ HIGH                    
         L     RE,4(R1)                                                         
         LH    RF,ISKEYL1                                                       
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RE)      EXTRACT RETURNED KEY                         
         L     R1,DIISS                                                         
         A     R1,=F'1'                                                         
         ST    R1,DIISS            BUMP PASSIVE PNTR SKIPS                      
         B     DUMP                                                             
DUMPDX   B     DUMPF                                                            
*                                                                               
DUMPE    L     R1,DIISD            BUMP INPUT IS DELETES                        
         A     R1,=F'1'                                                         
         ST    R1,DIISD                                                         
         B     DUMP                                                             
*                                                                               
DUMPF    MVC   Q1,=A(RDIDTRK)      READ DA REC POINTED TO BY IS REC             
         TM    TRACK,YES                                                        
         BO    *+10                                                             
         MVC   Q1,=A(RDID)         SET FOR NO FULL TRACK I/O                    
         LA    RE,ISREC                                                         
         AH    RE,ISRECL                                                        
         SH    RE,=H'4'                                                         
         ST    RE,Q5               SET A(DISK ADDR)                             
*                                                                               
DUMPF0   ICM   RE,15,0(RE)         VALIDATE DISK ADDRESS                        
         SRL   RE,8                                                             
         TM    DAFLAG,DTFTBIG                                                   
         BZ    DUMPF0A                                                          
         SRDL  RE,6                BIG FILE HAS 18-BIT TRACK NUMBER             
         SRL   RF,26               AND 6-BIT BLOCK NUMBER                       
         B     DUMPF0B                                                          
DUMPF0A  SRDL  RE,8                                                             
         SRL   RF,24                                                            
DUMPF0B  LTR   RE,RE               TRACK CANT BE ZERO                           
         BZ    DUMPF0C                                                          
         LTR   RF,RF               BLOCK CANT BE ZERO                           
         BNZ   DUMPF1                                                           
DUMPF0C  L     RF,=A(WARNMSGE)     DISK ADDRESS FORMAT                          
         B     DUMPF8                                                           
*                                                                               
DUMPF1   LA    R1,Q1               READ DA RECORD                               
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         LH    RE,Q3+2             EXTRACT AND SAVE RECORD LENGTH               
         LA    RE,4(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DARECH                                                        
         OC    Q3(2),Q3                                                         
         BNZ   DUMPF4                                                           
*                                                                               
DUMPF2   OC    DALINKD,DALINKD     DOES DA FILE HAVE LINKED RECORDS             
         BZ    DUMPFA              NO                                           
         TM    SVDFLAG1,LDDQFLR    DOES DA FILE HAVE ANY F/L RECS               
         BZ    *+12                NO                                           
         CLI   DAREC,X'00'         YES F/L RECS HAVE ZERO IN FIRST BYTE         
         BE    DUMPFA                                                           
         LA    R2,DAREC            POINT TO LINK FIELD                          
         AH    R2,DALINKD                                                       
         OC    0(4,R2),0(R2)       IF NONZERO POINTS TO LINKED RECORD           
         BZ    DUMPF3                                                           
         MVC   Q1,=A(RDID)                                                      
         ST    R2,Q5               SET A(LINK DISK ADDR)                        
         BASR  RE,RF                                                            
         LH    RE,Q3+2                                                          
         LA    RE,4(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DARECH                                                        
         OC    Q3(2),Q3                                                         
         BNZ   DUMPF6                                                           
         XC    0(4,R2),0(R2)                                                    
*                                                                               
DUMPF3   LA    R2,DAREC            SET ZEROS AT END OF DA RECORD                
         AH    R2,ISKEYL                                                        
         MVC   DUB(2),0(R2)                                                     
         MVI   FLAG2,0             SET VALID REC LEN                            
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   *+16                                                             
         BAS   RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   FLAG2,1             SET INVALID REC LEN                          
         B     DUMPFA                                                           
         LA    R2,DAREC                                                         
         AH    R2,DUB                                                           
         XC    0(2,R2),0(R2)                                                    
         B     DUMPFA                                                           
*                                                                               
DUMPF4   L     RE,=A(IOBCCWL)      SAVE DADDS IOB/CCWS                          
         MVC   0(2,RE),=C'DA'                                                   
         MVC   8(136,RE),72(RD)                                                 
         CLC   Q1,=A(RDIDTRK)      ERROR ON FULL TRACK READ                     
         BNE   *+14                                                             
         MVC   Q1,=A(RDID)         YES HAVE A SPECIFIC RETRY                    
         B     DUMPF+6                                                          
         L     RF,=A(WARNMSGF)     ADDRESS VALUE                                
         B     *+8                                                              
DUMPF6   L     RF,=A(WARNMSGG)     ADDRESS LINKAGE                              
DUMPF8   LH    R0,ISRECL                                                        
         CH    R0,=H'54'                                                        
         BL    *+8                                                              
         LH    R0,=H'54'                                                        
         MVC   OPERMSG,0(RF)                                                    
         MVC   P(L'OPERMSG),OPERMSG                                             
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+24,(R0),=C'MIX'                          
         GOTO1 =V(PRINTER)                                                      
         L     R1,BADADR           BUMP DA DISK BAD ADDR COUNTER                
         A     R1,=F'1'                                                         
         ST    R1,BADADR                                                        
         B     DUMP                                                             
*                                                                               
DUMPFA   TM    RECFLAG,FILE2+FILE3+FILE4                                        
         BNZ   DUMPFA2                                                          
DUMPFA1  L     R1,DIF1             BUMP DA FILE RECS READ (1ST DA FILE)         
         A     R1,=F'1'                                                         
         ST    R1,DIF1                                                          
         B     DUMPFC                                                           
DUMPFA2  TM    RECFLAG,FILE2       BUMP DA FILE RECS READ (2ND DA FILE)         
         BZ    DUMPFA3                                                          
         L     R1,DIF2                                                          
         A     R1,=F'1'                                                         
         ST    R1,DIF2                                                          
         B     DUMPFC                                                           
DUMPFA3  TM    RECFLAG,FILE3       BUMP DA FILE RECS READ (3RD DA FILE)         
         BZ    DUMPFA4                                                          
         L     R1,DIF3                                                          
         A     R1,=F'1'                                                         
         ST    R1,DIF3                                                          
         B     DUMPFC                                                           
DUMPFA4  TM    RECFLAG,FILE4       BUMP DA FILE RECS READ (4TH DA FILE)         
         BZ    DUMPFC                                                           
         L     R1,DIF4                                                          
         A     R1,=F'1'                                                         
         ST    R1,DIF4                                                          
*                                                                               
DUMPFC   C     R1,MAXIOS           CHECK DA READ COUNTER                        
         BH    INPUTEOF                                                         
DUMPFX   EQU   *                                                                
*                                                                               
DUMPG    LA    R1,DAREC            DAREC CONTAINS DA FILE RECORD                
         BAS   R9,RECTYPE          -----------------------------                
         BAS   R9,SAVEHDR                                                       
         ICM   RF,15,VLDRECTY      TEST IF RECORD TYPE EXTERNAL                 
         BZ    *+10                                                             
         LA    R1,PLRECTY                                                       
         BASR  RE,RF                                                            
*                                                                               
DPDAXTRN EQU   *                                                                
DUMPH    TM    XTRN,YES            PASS CONTROL TO EXTERNAL                     
         BZ    DUMPHX                                                           
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET NORMAL CALL IN PARAM LIST                
         MVI   PLXTRN+0,1                                                       
         CLI   PLXTRN+8,C'Y'       TEST IF RETURN CALL                          
         BE    DUMPH3                                                           
DUMPH1   TM    RECFLAG,RECHDR      NOT FOR HEADER RECORD                        
         BZ    DUMPH2                                                           
         TM    SVDFLAG1,LDDQXHDR   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMPHX                                                           
         BASR  RE,RF               PASS HEADER RECORD TO EXTERNAL               
         B     DUMPHX                                                           
DUMPH2   TM    RECFLAG,RECTRL      NOT FOR TRAILER RECORD                       
         BZ    DUMPH3                                                           
         TM    SVDFLAG1,LDDQXTRL   UNLESS FILE DEFINITION SPECIFIES             
         BZ    DUMPHX                                                           
         BASR  RE,RF               PASS TRAILER RECORD TO EXTERNAL              
         B     DUMPHX                                                           
DUMPH3   BASR  RE,RF               PASS CONTROL TO EXTERNAL                     
         CLI   0(R1),X'FF'                                                      
         BNE   DUMPHX              EXTERNAL RETURNS DELETE REC                  
         CLC   1(3,R1),=C'EOF'                                                  
         BE    INPUTEOF            EXTERNAL RETURNS FORCED EOF                  
DUMPH6   TM    INPUT,TAPE                                                       
         BO    DUMPH8                                                           
         TM    RECFLAG,FILE2+FILE3+FILE4                                        
         BNZ   DUMPH6B                                                          
DUMPH6A  L     R1,DIF1D            BUMP DA DISK IN DELETED (1ST FILE)           
         A     R1,=F'1'                                                         
         ST    R1,DIF1D                                                         
         B     DUMP                                                             
DUMPH6B  TM    RECFLAG,FILE2       BUMP DA DISK IN DELETES (2ND FILE)           
         BZ    DUMPH6C                                                          
         L     R1,DIF2D                                                         
         A     R1,=F'1'                                                         
         ST    R1,DIF2D                                                         
         B     DUMP                                                             
DUMPH6C  TM    RECFLAG,FILE3       BUMP DA DISK IN DELETES (3RD FILE)           
         BZ    DUMPH6D                                                          
         L     R1,DIF3D                                                         
         A     R1,=F'1'                                                         
         ST    R1,DIF3D                                                         
         B     DUMP                                                             
DUMPH6D  TM    RECFLAG,FILE4       BUMP DA DISK IN DELETES (4TH FILE)           
         BZ    DUMP                                                             
         L     R1,DIF4D                                                         
         A     R1,=F'1'                                                         
         ST    R1,DIF4D                                                         
         B     DUMP                                                             
DUMPH8   L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         A     R1,=F'1'                                                         
         ST    R1,TIDEL                                                         
         B     DUMP                                                             
DUMPHX   EQU   *                                                                
*                                                                               
DUMPI    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DUMPIX                                                           
         TM    MODE,ISFIL          UNLESS PREVIOUSLY DONE FOR IS REC            
         BO    DUMPIX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DUMPIX                                                           
         LA    R1,PLCOUNT          SET NORMAL CALL IN PARAM LIST                
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
DUMPIX   EQU   *                                                                
*                                                                               
DUMPJ    TM    MODE,ISFIL          TEST CHANGE KEYS OF PASSIVE DELETES          
         BZ    DUMPJ2                                                           
         TM    SVDFLAG1,LDDQCKDP                                                
         BZ    DUMPJ2                                                           
DUMPJ1   LH    RE,DAKEYL           GET KEY COMPARE LEN                          
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),DAREC      TEST IS KEY WITH DA KEY                      
         BE    DUMPJ2                                                           
         LA    RF,ISREC+1(RE)                                                   
         TM    0(RF),X'80'         TEST IF DELETED IS REC                       
         BZ    DUMPJ2              NO                                           
         EX    RE,*+8              YES COPY IS KEY OVER DA KEY                  
         B     DUMPJ2                                                           
         MVC   DAREC(0),ISREC                                                   
DUMPJ2   TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    DUMPJX                                                           
         BAS   RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    DUMPJX                                                           
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    DUMPH6              YES                                          
DUMPJX   EQU   *                                                                
*                                                                               
DUMPK    TM    MODE,ISFIL          SET CONTROL BYTES                            
         BZ    DUMPKX                                                           
         LA    RE,ISREC                                                         
         AH    RE,ISKEYL                                                        
         LA    RF,DAREC                                                         
         AH    RF,ISKEYL                                                        
         LH    R1,DACTLL                                                        
         SH    R1,=H'1'                                                         
         BM    DUMPKX                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         OC    2(0,RF),0(RE)       OR IS CONTROL INTO DA CONTROL                
DUMPKX   EQU   *                                                                
*                                                                               
DUMPM    TM    SIZE,YES            PASS CONTROL TO DA REC LEN ROUTINE           
         BZ    DUMPMX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    DUMPMX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),0                                                          
         LA    RE,DAREC                                                         
         AH    RE,ISKEYL           POINT TO RECORD LENGTH                       
         MVC   2(2,R1),0(RE)                                                    
         BASR  RE,RF                                                            
DUMPMX   EQU   *                                                                
*                                                                               
DUMPN    TM    BALCHECK,YES        PASS CONTROL TO TOTAL/HASH ROUTINE           
         BZ    DUMPNX                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    DUMPNX                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),1                                                          
         BASR  RE,RF                                                            
DUMPNX   EQU   *                                                                
*                                                                               
DUMPP    TM    OUTPUT,TAPE         WRITE DA DUMP TAPE RECORD                    
         BZ    *+8                                                              
         BAS   R9,WOTAPE                                                        
         MVI   TAPEFLAG,0          RESET WOTAPE FLAG                            
         B     DUMP                BACK FOR NEXT INPUT RECORD                   
         SPACE 2                                                                
* NO MORE INPUT RECORDS LEFT TO DUMP                                            
*                                                                               
DUMPEOF  MVI   XTRN,NO             SET END OF SCOPE FOR EXTERNAL                
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         BAS   R9,CLSOUT           CLOSE OUTPUT TAPE                            
*                                                                               
DEOF1    TM    BALCHECK,YES        FINAL CALL OF TOTAL/HASH ROUTINE             
         BZ    DEOF1X                                                           
         ICM   RF,15,VLDBALCK                                                   
         BZ    DEOF1X                                                           
         TM    MODE,DAFIL          ONLY VALID FOR DA FILE                       
         BZ    DEOF1X                                                           
         CLI   DONBALCK,C'Y'                                                    
         BE    DEOF1X                                                           
         LA    R1,PLBALCK                                                       
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
         MVI   DONBALCK,C'Y'                                                    
DEOF1X   EQU   *                                                                
*                                                                               
DEOF2    MVC   P(8),INFOMSG1       SET DA FILE MSG                              
         MVC   P+8(7),DANAME                                                    
         TM    MODE,DAFIL                                                       
         BO    DEOF3                                                            
         MVC   P(8),INFOMSG2       SET IS FILE MSG                              
         MVC   P+8(7),ISNAME                                                    
*                                                                               
DEOF3    TM    INPUT,TAPE          SET TAPE IN MSG                              
         BZ    DEOF3X                                                           
         MVC   P+03(4),=C'TAPE'                                                 
         MVC   P+16(7),=C'READ   '                                              
         TM    OUTPUT,TAPE                                                      
         BZ    *+10                                                             
         MVC   P+16(7),=C'COPIED '                                              
         B     DEOF5                                                            
DEOF3X   EQU   *                                                                
*                                                                               
DEOF4    MVC   P+16(7),=C'DUMPED ' SET ACTION                                   
         TM    OUTPUT,TAPE                                                      
         BO    *+10                                                             
         MVC   P+16(7),=C'READ   '                                              
         TM    MODE,DAFIL                                                       
         BZ    DEOF4X                                                           
         MVC   P+23(8),=C'DIRECTLY'                                             
         TM    MODE,ISFIL                                                       
         BZ    DEOF4X                                                           
         MVC   P+23(4),=C'VIA '                                                 
         MVC   P+27(8),INFOMSG2                                                 
         MVC   P+35(7),ISNAME                                                   
DEOF4X   EQU   *                                                                
*                                                                               
DEOF5    MVC   C,P                 SAVE ACTION MESSAGE                          
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BNZ   DEOF5A                                                           
         GOTO1 =V(PRINTER)         PRINT SINGLE ACTION MESSAGE                  
         B     DEOFA                                                            
DEOF5A   TM    MODE,FILE1          TEST IF FILE 1 BEING DUMPED                  
         BZ    DEOF5B                                                           
         MVC   P(80),C             SET ACTION MSG FOR 1ST DA FILE               
         MVC   P+8(7),F1NAME                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5B   TM    MODE,FILE2          TEST IF FILE 2 BEING DUMPED                  
         BZ    DEOF5C                                                           
         MVC   P(80),C             SET ACTION MSG FOR 2ND DA FILE               
         MVC   P+8(7),F2NAME                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5C   TM    MODE,FILE3          TEST IF FILE 3 BEING DUMPED                  
         BZ    DEOF5D                                                           
         MVC   P(80),C             SET ACTION MSG FOR 3RD DA FILE               
         MVC   P+8(7),F3NAME                                                    
         GOTO1 =V(PRINTER)                                                      
DEOF5D   TM    MODE,FILE4          TEST IF FILE 4 BEING DUMPED                  
         BZ    DEOFA                                                            
         MVC   P(80),C             SET ACTION MSG FOR 4TH DA FILE               
         MVC   P+8(7),F4NAME                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
DEOFA    BAS   RE,PRTCTRS          PRINT COUNTERS                               
*                                                                               
DEOFB    TM    SIZE,YES            FINAL CALL OF DA REC LEN ROUTINE             
         BZ    DEOFBX                                                           
         TM    MODE,DAFIL                                                       
         BZ    DEOFBX                                                           
         ICM   RF,15,VLDSIZE                                                    
         BZ    DEOFBX                                                           
         LA    R1,PLSIZE                                                        
         MVI   0(R1),X'FF'                                                      
         BASR  RE,RF                                                            
DEOFBX   EQU   *                                                                
*                                                                               
DEOFC    TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    DEOFCX                                                           
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DEOFCX                                                           
         LA    R1,PLCOUNT                                                       
         MVI   0(R1),X'FF'                                                      
         LA    RE,DANAME           PASS NAME OF DA FILE IF NO IS FILE           
         TM    MODE,ISFIL                                                       
         BZ    *+8                                                              
         LA    RE,ISNAME           ELSE PASS NAME OF IS FILE                    
         ST    RE,4(R1)                                                         
         BASR  RE,RF                                                            
DEOFCX   EQU   *                                                                
*                                                                               
         B     NXTPARM             DUMP COMPLETED - ANY MORE REQUIRED           
         EJECT                                                                  
* END OF FILE ON INPUT                                                          
* CAUSED BY A PHSICAL EOF CONDITION ON TAPE=TAPEIN OR DISK=ISFILE               
* CONTROL PASSED HERE IF I/O COUNTS OR END KEY EXCEEDED                         
* CONTROL PASSED HERE IF EXTERNAL MOVES C'EOF' TO ITS PLXTRN+1(3)               
*                                                                               
INPUTEOF CLI   EOFIN,C'Y'          MUST HAVE ONLY ONE EOF CALL                  
         BNE   *+6                                                              
         DC    H'0'                                                             
         TM    INPUT,TAPEPHYS      EOF ALREADY DONE FOR PHYSICAL TAPE           
         BNZ   INPEOF3                                                          
         TM    INPUT,TAPE          IF TAPE INPUT ASK IF ANY MORE TAPES          
         BZ    INPEOF3                                                          
         TM    MSG,YES             UNLESS MESSAGES SUPPRESSED                   
*&&UK*&& BZ    INPEOF2                                                          
*&&US*&& B     INPEOF2             SUPPRESS CONSOLE MESSAGES                    
         TM    XTRN,YES            UNLESS FORCED EOF BY EXTERNAL                
         BZ    *+14                                                             
         CLC   PLXTRN+1(3),=C'EOF'                                              
         BE    INPEOF2                                                          
*                                                                               
INPEOF0  L     RF,=A(QUEST1)       QUESTION - ANY MORE INPUT TAPES              
         MVC   OPERMSG(L'OPERMSG),0(RF)                                         
         BAS   R9,PAGMSGN                                                       
         CLI   OPERANS,C'N'        IF NO CLOSE TAPE AND SET EOF                 
         BE    INPEOF2                                                          
         CLI   OPERANS,C'Y'        IF YES CLOSE TAPE AND RE-OPEN                
         BNE   INPEOF0                                                          
*                                                                               
INPEOF1  BAS   R9,CLSIN            END OF INPUT VOLUME                          
         BAS   R9,OPNIN                                                         
         NI    OPNINF,X'7F'                                                     
         IC    R1,OPNINF           BUMP NUMBER OF INPUT TAPES                   
         A     R1,=F'1'                                                         
         STC   R1,OPNINF                                                        
         OI    OPNINF,X'80'        SET FIRST RECORD ON TAPE FLAG                
         TM    OUTPUT,DISK                                                      
         BZ    DUMP                PASS CONTROL BACK TO DUMP                    
         TM    MODE,DAFIL                                                       
         BO    LDDA                PASS CONTROL BACK TO LOAD DA                 
         B     LDIS                PASS CONTROL BACK TO LOAD IS                 
*                                                                               
INPEOF2  BAS   R9,CLSIN            CLOSE INPUT TAPE FILE                        
*                                                                               
INPEOF3  MVI   EOFIN,C'Y'          SET END OF FILE ON INPUT DATA                
*                                                                               
INPEOF4  TM    XTRN,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    INPEOF4X                                                         
         CLC   PLXTRN+1(3),=C'EOF'                                              
         BNE   INPEOF4A                                                         
         LA    R1,PLXTRN           RESET EXTRNAL PARAM ON FORCED EOF            
         MVC   0(4,R1),=A(DAREC)                                                
         TM    MODE,DAFIL                                                       
         BO    *+10                                                             
         MVC   0(4,R1),=A(ISREC)                                                
INPEOF4A L     RF,ALOADPT                                                       
         LA    R1,PLXTRN           SET EOF CALL IN PARAM LIST                   
         MVI   PLXTRN+0,X'FF'                                                   
         MVI   PLXTRN+8,0                                                       
         BASR  RE,RF                                                            
         CLC   PLXTRN+1(3),=C'EOF' DONT FUCK ME AROUND EXTERNAL                 
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLI   PLXTRN+8,C'R'       REQUESTED RETURN FROM EOF                    
         BNE   INPEOF4X            NO                                           
         TM    OUTPUT,DISK                                                      
         BZ    DUMP                PASS CONTROL BACK TO DUMP                    
         TM    MODE,DAFIL                                                       
         BO    LDDA                PASS CONTROL BACK TO LOAD DA                 
         B     LDIS                PASS CONTROL BACK TO LOAD IS                 
INPEOF4X EQU   *                                                                
*                                                                               
INPEOF5  TM    OUTPUT,DISK         PASS CONTROL TO DUMP DA/IS FILE EOF          
         BZ    DUMPEOF                                                          
         TM    MODE,DAFIL                                                       
         BO    LDAEOF              PASS CONTROL TO LOAD DA FILE EOF             
         B     LISEOF              PASS CONTROL TO LOAD IS FILE EOF             
         EJECT                                                                  
* READ INPUT TAPE (TAPEIN)                                                      
*                                                                               
RITAPE   MVI   RECFLAG,0           CLEAR RECORD FLAGS                           
         MVI   FLAG2,0                                                          
         TM    MODE,DAFIL          TEST IF TAPE HAS ONLY IS RECORDS             
         BO    RIT2                NO                                           
         TM    LRECFLAG,X'80'      YES TEST SAVE IS REC AFTER WRITE             
         BO    *+10                                                             
         MVC   LISREC(ISMAX),ISREC SAVE LAST IS REC BEFORE READ                 
         LA    R0,ISRECH                                                        
         L     R1,=A(TAPEIN)                                                    
         GET   (1),(0)                                                          
         CLI   START,0             CHECK FOR START KEY                          
         BE    RIT0                                                             
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),0(RE)                                                   
         BL    RITAPE                                                           
RIT0     L     R1,TIIS             BUMP IS TAPE READ COUNTER                    
         A     R1,=F'1'                                                         
         ST    R1,TIIS                                                          
         C     R1,MAXIOS           CHECK IS READ COUNTER                        
         BH    INPUTEOF                                                         
         B     RITX                                                             
*                                                                               
RIT2     TM    INPUT,TAPEPHYS      TEST IF DA FILE TAPE IS PHYSICAL             
         BNZ   RIT4                                                             
         LA    R0,DARECH           READ DA TAPE RECORD INTO DAREC               
         L     R1,=A(TAPEIN)                                                    
         GET   (1),(0)                                                          
         B     RIT6                                                             
*                                                                               
RIT4     LA    R1,PLDBLK           READ PHYSICAL TAPE REC INTO DAREC            
         L     RF,=V(DBLKTAPE)                                                  
         BASR  RE,RF                                                            
         OC    0(4,R1),0(R1)       IF A(RECORD) IS ZERO THEN EOF                
         BZ    INPUTEOF                                                         
*                                                                               
RIT6     CLI   START,0             CHECK FOR START KEY                          
         BE    RIT7                                                             
         L     RE,=A(STRKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),0(RE)                                                   
         BL    RITAPE                                                           
*                                                                               
RIT7     LH    R1,ISRECL                                                        
         LA    RE,4(R1)                                                         
         CH    RE,DARECH           TEST RECORD IS AN I/S FILE POINTER           
         BNE   RIT8                                                             
         TM    SVDMULTI,LDDQDPTR   TEST I/S POINTERS ALLOWED ON TAPE            
         BZ    RIT8                                                             
         L     R1,TIIS             BUMP IS TAPE READ COUNTER                    
         A     R1,=F'1'                                                         
         ST    R1,TIIS                                                          
         B     RITA                                                             
*                                                                               
RIT8     L     R1,TIDA             BUMP DA TAPE READ COUNTER                    
         A     R1,=F'1'                                                         
         ST    R1,TIDA                                                          
         C     R1,MAXIOS           CHECK DA READ COUNTER                        
         BH    INPUTEOF                                                         
         LA    R1,DAREC                                                         
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        EXTRACT RECORD LENGTH                        
         CLC   DUB(2),DAMAX                                                     
         BH    *+14                                                             
         CLC   DUB(2),DAMIN                                                     
         BNL   *+16                                                             
         BAS   RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   FLAG2,1             SET INVALID REC LEN                          
         B     *+18                                                             
         LA    R1,DAREC                                                         
         AH    R1,DUB                                                           
         XC    0(2,R1),0(R1)       SET ZEROS AT END OF REC                      
         TM    MODE,ISFIL                                                       
         BO    RITA                                                             
         MVC   ISREC(ISMAX),DAREC  COPY DAREC KEY INTO ISREC                    
         LA    R1,ISREC                                                         
         AH    R1,ISKEYL                                                        
         MVC   0(2,R1),2(R1)                                                    
*                                                                               
RITA     CLI   END,0               CHECK FOR END KEY                            
         BE    RITX                                                             
         L     RE,=A(ENDKEY)                                                    
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),0(RE)                                                   
         BNH   RITX                                                             
         BAS   RE,SETNXT                                                        
         BE    INPUTEOF                                                         
         B     RITAPE                                                           
*                                                                               
RITX     BR    R9                                                               
         EJECT                                                                  
SETNXT   STM   RE,R1,12(RD)                                                     
         SR    R1,R1                                                            
         ICM   R1,1,START                                                       
         BZ    SETNXTX                                                          
         BCTR  R1,0                                                             
         STC   R1,START                                                         
         CLI   START,0                                                          
         BE    SETNXTX                                                          
         MH    R1,=Y(L'STRKEY+L'ENDKEY)                                         
         L     R0,=A(STRKEY)                                                    
         LR    RE,R0                                                            
         AH    RE,=Y(L'STRKEY+L'ENDKEY)                                         
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         L     R1,=A(STRKEY)                                                    
         MVC   ISREC(ISMAX),0(R1)                                               
         MVI   FRSTIO,0                                                         
         CLI   START,0                                                          
SETNXTX  LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         EJECT                                                                  
* WRITE OUTPUT TAPE (TAPEOUT) AND ITS COPY (TAPECPY)                            
*                                                                               
WOTAPE   TM    TAPEFLAG,TAPEFPTR   TEST WRITE I/S POINTER TO D/A TAPE           
         BNZ   WOT1                                                             
         TM    MODE,DAFIL                                                       
         BO    WOT2                                                             
*                                                                               
WOT1     LH    R1,ISRECL           WRITE IS TAPE RECORD FROM ISREC              
         LTR   R1,R1               TEST V/L RECORDS                             
         BNZ   *+16                LEN IS 0 FOR V/L RECORDS                     
         LA    R1,ISREC            POINT TO RECORD                              
         AH    R1,ISKEYL           + KEYLEN GIVES ADDRESS OF LENGTH             
         LH    R1,0(R1)            GET LENGTH IN REG                            
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         ST    R1,ISRECH                                                        
         LA    R0,ISRECH                                                        
         L     R1,=A(TAPEOUT)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOIS             BUMP IS TAPE WRITE COUNTER                   
         A     R1,=F'1'                                                         
         ST    R1,TOIS                                                          
*                                                                               
         TM    TCOPY,TAPE          TEST FOR SECOND TAPE OPTION                  
         BZ    WOTX                                                             
         LA    R0,ISRECH           WRITE SAME RECORD TO IS COPY TAPE            
         L     R1,=A(TAPECPY)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOCIS            BUMP IS COPY TAPE WRITE COUNTER              
         A     R1,=F'1'                                                         
         ST    R1,TOCIS                                                         
         B     WOTX                                                             
*                                                                               
WOT2     LA    R1,DAREC            WRITE DA TAPE RECORD FROM DAREC              
         AH    R1,ISKEYL                                                        
         MVC   DUB(2),0(R1)        GET REC LEN FROM DAREC                       
         LH    R1,DUB                                                           
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         ST    R1,DARECH                                                        
         LA    R0,DARECH                                                        
         L     R1,=A(TAPEOUT)                                                   
         PUT   (1),(0)                                                          
         L     R1,TODA             BUMP DA TAPE WRITE COUNTER                   
         A     R1,=F'1'                                                         
         ST    R1,TODA                                                          
*                                                                               
         TM    TCOPY,TAPE          TEST FOR SECOND TAPE OPTION                  
         BZ    WOTX                                                             
         LA    R0,DARECH           WRITE SAME RECORD TO DA COPY TAPE            
         L     R1,=A(TAPECPY)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOCDA            BUMP DA COPY TAPE WRITE COUNTER              
         A     R1,=F'1'                                                         
         ST    R1,TOCDA                                                         
*                                                                               
WOTX     BR    R9                                                               
         EJECT                                                                  
* WRITE OUTPUT DIRECTORY TAPE (TAPEDIR) - R4 POINTS TO RECORD                   
*                                                                               
WODIR    LH    R1,ISRECL           GET IS FILE RECORD LENGTH                    
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         L     RF,=A(DIRRECH)                                                   
         ST    R1,0(RF)                                                         
         LA    RF,4(RF)            POINT TO TAPEDIR I/O AREA                    
         LR    RE,R4               POINT TO IS REC                              
         LH    R1,ISRECL                                                        
         MOVE  ((RF),(R1)),(R4)                                                 
         L     R0,=A(DIRRECH)                                                   
         L     R1,=A(TAPEDIR)                                                   
         PUT   (1),(0)                                                          
         L     R1,TOIS             BUMP IS TAPE WRITE COUNTER                   
         A     R1,=F'1'                                                         
         ST    R1,TOIS                                                          
WOTAPEX  BR    R9                                                               
         EJECT                                                                  
OPNIN    L     R2,=A(TAPEIN)                                                    
         OPEN  ((2),INPUT)                                                      
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         BOR   R9                                                               
         ABEND 205,DUMP                                                         
*                                                                               
CLSIN    L     R2,=A(TAPEIN)                                                    
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
OPNOUT   L     R2,=A(TAPEOUT)                                                   
         OPEN  ((2),OUTPUT)                                                     
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         BO    OPNOUT1                                                          
         ABEND 206,DUMP                                                         
OPNOUT1  TM    TCOPY,TAPE                                                       
         BZR   R9                                                               
*                                                                               
OPNCPY   L     R2,=A(TAPECPY)                                                   
         OPEN  ((2),OUTPUT)                                                     
         TM    48(R2),X'10'        TEST OPEN SUCCEEDED                          
         BOR   R9                  YES                                          
         CLC   40(8,R2),=C'TAPECOPY'                                            
         BNE   OPNCPY1                                                          
         ABEND 207,DUMP                                                         
OPNCPY1  MVC   40(8,R2),=C'TAPECOPY' TRY ALTERNATE DDNAME                       
         B     OPNCPY                                                           
*                                                                               
CLSOUT   L     R2,=A(TAPEOUT)                                                   
         CLOSE ((2))                                                            
         TM    TCOPY,TAPE                                                       
         BZR   R9                                                               
         L     R2,=A(TAPECPY)                                                   
         CLOSE ((2))                                                            
         BR    R9                                                               
*                                                                               
OPNDIR   L     R2,=A(TAPEDIR)                                                   
         OPEN  ((2),OUTPUT)                                                     
         BR    R9                                                               
*                                                                               
CLSDIR   L     R2,=A(TAPEDIR)                                                   
         CLOSE ((2))                                                            
         BR    R9                                                               
         SPACE 2                                                                
* READ DA FILE DIRECTLY                                                         
*                                                                               
RIDAFILE MVI   RECFLAG,0                                                        
         DC    H'0'                                                             
         BR    R9                                                               
         EJECT                                                                  
* GET/PUT MESSAGE TO OPERATOR AND OPTIONALLY TO PRINTER                         
* MESSAGE IS IN OPERMSG AND REPLY IS RETURNED IN OPERANS                        
*                                                                               
PUTMSG   MVI   DMCB+16,X'01'       SET PUT FLAG                                 
         B     PAGM1                                                            
PUTMSGP  MVI   DMCB+16,X'81'       SET PUT AND PRINT FLAG                       
         B     PAGM1                                                            
GETMSG   MVI   DMCB+16,X'02'       SET GET FLAG                                 
         B     PAGM1                                                            
PAGMSG   MVI   DMCB+16,X'03'       SET PUT AND GET FLAGS                        
         B     PAGM1                                                            
PAGMSGN  MVI   DMCB+16,X'43'       SET PUT AND GET FLAGS (NO TEST)              
*                                                                               
PAGM1    TM    DMCB+16,X'01'       PUT MSG IN OPERMSG TO CONSOLE                
         BZ    PAGM2                                                            
         GOTO1 =V(LOGIO),DMCB,1,(60,OPERMSG)                                    
         TM    DMCB+16,X'80'       AND SEE IF PRINTER ALSO                      
         BZ    PAGM1A                                                           
         MVC   P(L'OPERMSG),OPERMSG                                             
         GOTO1 =V(PRINTER)                                                      
PAGM1A   SR    RF,RF                                                            
*                                                                               
PAGM2    TM    DMCB+16,X'02'       GET REPLY INTO OPERANS                       
         BZ    PAGMX                                                            
         MVC   OPERANS,SPACES                                                   
         GOTO1 =V(LOGIO),DMCB,0,(8,OPERANS)                                     
         TM    DMCB+16,X'40'                                                    
         BO    PAGMX               EXIT IF NO TEST OF REPLY                     
*                                                                               
         LA    RF,1                CC=LOW FOR EOJ/CANCEL                        
         LNR   RF,RF                                                            
         CLC   OPERANS(6),=C'CANCEL'                                            
         BE    PAGMX                                                            
         CLC   OPERANS(3),=C'EOJ'                                               
         BE    PAGMX                                                            
*                                                                               
         LA    RF,0                CC=EQL FOR ERASE/IGNORE                      
         CLC   OPERANS(5),=C'ERASE'                                             
         BE    PAGMX                                                            
         CLC   OPERANS(6),=C'IGNORE'                                            
         BE    PAGMX                                                            
*                                                                               
         LA    RF,1                CC=HIGH FOR OTHER VALUES                     
*                                                                               
PAGMX    LTR   RF,RF               EXIT WITH CC SET                             
         BR    R9                                                               
         EJECT                                                                  
* SET RECORD TYPE FLAG - R1 POINTS TO RECORD                                    
*                                                                               
RECTYPE  STM   RE,R2,12(RD)                                                     
         NI    RECFLAG,255-FILE1234                                             
*                                                                               
RECT1    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTI DA FILES                  
         BNZ   RECT1A                                                           
         OC    0(4,R1),0(R1)       TEST FILE HEADER RECORD                      
         BNZ   RECT2                                                            
         OI    RECFLAG,RECHDR                                                   
         B     RECTX                                                            
RECT1A   OC    0(4,R1),0(R1)       TEST MULTI FILE HEADER RECORD                
         BNZ   RECT2                                                            
         LR    RE,R1                                                            
         AH    RE,ISKEYL1          POINT TO LAST BYTE OF KEY                    
         CLI   0(RE),X'01'         TEST AND SET FILE1 REC                       
         BNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE1                                             
         B     RECTX                                                            
         CLI   0(RE),X'02'         TEST AND SET FILE2 REC                       
         BNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE2                                             
         B     RECTX                                                            
         TM    SVDMULTI,LDDQDA4                                                 
         BZ    RECT2                                                            
         CLI   0(RE),X'03'         TEST AND SET FILE3 REC                       
         BNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE3                                             
         B     RECTX                                                            
         CLI   0(RE),X'04'         TEST AND SET FILE4 REC                       
         BNE   *+12                                                             
         OI    RECFLAG,RECHDR+FILE4                                             
         B     RECTX                                                            
*                                                                               
RECT2    TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BNZ   RECT2A                                                           
         CLI   0(R1),X'FF'         TEST FILE TRAILER RECORD                     
         BNE   RECT4                                                            
         OI    RECFLAG,RECTRL                                                   
         B     RECTX                                                            
RECT2A   CLI   0(R1),X'FF'         TEST FILE1 TRAILER RECORD                    
         BNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE1                                             
         B     RECTX                                                            
         CLI   1(R1),X'FF'         TEST KEY STARTS WITH ??FF                    
         BNE   RECTX                                                            
         CLI   0(R1),X'FE'         TEST FILE2 TRAILER RECORD                    
         BNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE2                                             
         B     RECTX                                                            
         TM    SVDMULTI,LDDQDA4                                                 
         BZ    RECT4                                                            
         CLI   0(R1),X'FD'         TEST FILE3 TRAILER RECORD                    
         BNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE3                                             
         B     RECTX                                                            
         CLI   0(R1),X'FC'         TEST FILE4 TRAILER RECORD                    
         BNE   *+12                                                             
         OI    RECFLAG,RECTRL+FILE4                                             
         B     RECTX                                                            
*                                                                               
RECT4    TM    SVDMULTI,LDDQIPTR   TEST IF DIR HAS INDIRECT POINTERS            
         BZ    RECTX                                                            
         LA    R0,ISREC            TEST I/S RECORD PASSED                       
         CR    R0,R1                                                            
         BNE   RECTX                                                            
         L     R2,VLDDEFN                                                       
         USING LDDEFND,R2                                                       
         LR    RE,R1                                                            
         AH    RE,LDDIPDSP         GET DISPLACEMENT TO I/S REC FIELD            
         SR    RF,RF                                                            
         ICM   RF,1,LDDIPLEN       ARGUMENT LENGTH MUST BE NON ZERO             
         BZ    RECTX                                                            
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   LDDIPARG(0),0(RE)   TEST SPECIAL POINTER RECORD                  
         BNE   RECTX                                                            
         OI    RECFLAG,RECPTR      YES - SET RECTYPE FLAG                       
         DROP  R2                                                               
*                                                                               
RECTX    EQU   *                                                                
*                                                                               
RECTXX   LM    RE,R2,12(RD)                                                     
         BR    R9                                                               
*                                                                               
RECHDR   EQU   X'01'                                                            
RECTRL   EQU   X'02'                                                            
RECPTR   EQU   X'04'               SPECIAL POINTER RECORD                       
         EJECT                                                                  
* ROUTINE TO SAVE HEADER RECORD INFORMATION                                     
*                                                                               
SAVEHDR  TM    RECFLAG,RECHDR      TEST HEADER REC                              
         BZR   R9                                                               
         TM    SVDMULTI,LDDQDA2+LDDQDA4 TEST IF MULTIPLE DA FILES               
         BNZ   SAVEHDR2                                                         
         CLC   SVD1HDR(3),DAREC+96 SAVE LATEST HDR REC USER DATA                
         BNL   *+10                                                             
         MVC   SVD1HDR,DAREC+96                                                 
         B     SAVEHDRX                                                         
*                                                                               
SAVEHDR2 TM    RECFLAG,FILE1       TEST IF FILE1 HDR REC                        
         BZ    SAVEHDR4                                                         
         CLC   SVD1HDR(3),DAREC+96 SAVE LATEST FILE1 USER DATA                  
         BNL   *+10                                                             
         MVC   SVD1HDR,DAREC+96                                                 
         B     SAVEHDRX                                                         
SAVEHDR4 TM    RECFLAG,FILE2       TEST IF FILE2 HDR REC                        
         BZ    SAVEHDR6                                                         
         CLC   SVD2HDR(3),DAREC+96 SAVE LATEST FILE2 USER DATA                  
         BNL   *+10                                                             
         MVC   SVD2HDR,DAREC+96                                                 
         B     SAVEHDRX                                                         
SAVEHDR6 TM    RECFLAG,FILE3       TEST IF FILE3 HDR REC                        
         BZ    SAVEHDR8                                                         
         CLC   SVD3HDR(3),DAREC+96 SAVE LATEST FILE3 USER DATA                  
         BNL   *+10                                                             
         MVC   SVD3HDR,DAREC+96                                                 
         B     SAVEHDRX                                                         
SAVEHDR8 TM    RECFLAG,FILE4       TEST IF FILE4 HDR REC                        
         BZ    SAVEHDRX                                                         
         CLC   SVD4HDR(3),DAREC+96 SAVE LATEST FILE4 USER DATA                  
         BNL   *+10                                                             
         MVC   SVD4HDR,DAREC+96                                                 
SAVEHDRX BR    R9                                                               
         EJECT                                                                  
* PRINT COUNTER DESCRIPTIONS AND VALUES                                         
*                                                                               
PRTCTRS  NTR1                                                                   
         GOTO1 =V(PRINTER)                                                      
         MVC   P(12),=C'I/O COUNTERS'                                           
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
         LA    R2,COUNTERS         POINT TO COUNTERS TABLE                      
*                                                                               
PRTC2    CLI   0(R2),X'FF'                                                      
         BE    PRTCX               END OF TABLE                                 
         L     R0,0(R2)                                                         
         LTR   R0,R0                                                            
         BZ    PRTC4               DONT PRINT ZERO COUNTERS                     
         BAS   RE,CVD                                                           
*                                                                               
         MVC   P(16),4(R2)         BUILD COUNTER INFO IN P                      
         MVI   P+16,C'='                                                        
         MVC   P+17(8),DUB                                                      
         LA    R1,DUPKEY                                                        
         CR    R2,R1               TEST IF AN ERROR COUNTER                     
         BL    PRTC3               NO                                           
         L     RF,=A(WARNMSGC)     YES SEND WARNING TO CONSOLE                  
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+12(25),P                                                 
         BAS   R9,PUTMSG                                                        
PRTC3    GOTO1 =V(PRINTER)                                                      
*                                                                               
PRTC4    LA    R2,L'COUNTERS(R2)                                                
         B     PRTC2                                                            
*                                                                               
PRTCX    XIT1                                                                   
         SPACE 2                                                                
* CONVERT R0 TO DECIMAL IN DUB                                                  
*                                                                               
CVD      CVD   R0,DUB1                                                          
         UNPK  DUB,DUB1+3(5)                                                    
         OI    DUB+7,X'F0'                                                      
         BR    RE                                                               
         SPACE 2                                                                
* CONVERT R0 TO DECIMAL IN DUB AND CLEAR LEADING ZEROS                          
*                                                                               
CVDE     CVD   R0,DUB1                                                          
         MVC   DUB,=X'4020202020202021'                                         
         ED    DUB,DUB1+4                                                       
         BR    RE                                                               
         EJECT                                                                  
* RECORD VALIDATION ROUTINE                                                     
*                                                                               
RECVAL   NTR1                                                                   
         MVI   ERRNUM,0                                                         
         CLI   FLAG2,1                                                          
         BE    RECVX                                                            
         TM    MODE,DAFIL          TEST IF PRINTING IS RECS                     
         BO    *+22                                                             
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         B     RECV3                                                            
         TM    MODE,ISFIL          BYPASS KEY CHECK IF NO IS REC                
         BZ    RECV4                                                            
         TM    OUTPUT,DISK         BYPASS KEY CHECK ON LOAD                     
         BO    RECV4                                                            
*                                                                               
RECV2    LH    RE,DAKEYL           GET KEY COMPARE LEN                          
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),DAREC                                                   
         BE    RECV4                                                            
         LA    RF,ISREC+1(RE)                                                   
         TM    0(RF),X'80'         TEST IF DELETED IS REC                       
         BZ    RECV2A              NO                                           
         EX    RE,*+8              YES PROBABLY A KEY CHANGE SO                 
         B     RECV4               COPY IS KEY TO DA KEY AND IGNORE             
         MVC   DAREC(0),ISREC                                                   
RECV2A   L     R1,KEYNEQ           BUMP KEYS NOT EQUAL COUNTER                  
         A     R1,=F'1'                                                         
         ST    R1,KEYNEQ                                                        
         MVC   P(16),=C'WARNING KEY NEQ '                                       
*                                                                               
RECV3    MVC   P+16(4),=C'IS ='    PRINT IS RECORD                              
         LH    R0,ISRECL                                                        
         CH    R0,=H'54'                                                        
         BL    *+8                                                              
         LH    R0,=H'54'                                                        
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+20,(R0),=C'MIX'                          
         GOTO1 =V(PRINTER)                                                      
         TM    MODE,DAFIL                                                       
         BZ    RECVX                                                            
         OI    FLAG2,X'80'         SET KEY NEQ FLAG                             
*                                                                               
RECV4    XC    FULL,FULL           CHECK ELEMENT STRUCTURE                      
         LA    RE,DAREC                                                         
         AH    RE,ISKEYL                                                        
         MVC   FULL(2),0(RE)       FULL(2)=REC LEN TAKEN FROM RECORD            
         CLC   FULL(2),DAMAX                                                    
         BNH   *+24                                                             
         MVC   P(16),=C'WARNING MAX LEN '                                       
         OI    FLAG2,X'40'                                                      
         MVC   FULL(2),DAMAX                                                    
         B     RECV4A                                                           
         CLC   FULL(2),DAMIN                                                    
         BNL   RECV4A                                                           
         MVC   P(16),=C'WARNING MIN LEN '                                       
         OI    FLAG2,X'20'                                                      
         MVC   FULL(2),DAMAX                                                    
RECV4A   CLI   DAREC,X'00'                                                      
         BE    RECVA                                                            
         LA    RF,DAREC            RF=MAX SCAN ADDR                             
         AH    RF,DAMAX                                                         
         LA    RF,1(RF)                                                         
         SR    R0,R0                                                            
         LA    RE,DAREC                                                         
         AH    RE,DAELD            RE=A(ELEMENT)                                
*                                                                               
RECV6    CLI   0(RE),0             SKIP THRU ELEMENTS                           
         BE    RECV8                                                            
         CLI   1(RE),2                                                          
         BL    RECV8                                                            
         IC    R0,1(RE)                                                         
         AR    RE,R0                                                            
         CR    RE,RF                                                            
         BNH   RECV6                                                            
*                                                                               
RECV8    LA    RF,DAREC                                                         
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN FROM ELEMENT SUM           
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         LA    RE,1(RE)                                                         
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         OI    FLAG2,X'10'                                                      
         TM    FLAG2,X'60'                                                      
         BNZ   *+10                                                             
         MVC   P(16),=C'WARNING BAD LEN '                                       
*                                                                               
RECVA    TM    FLAG2,X'F0'         TEST FOR ERRORS                              
         BNZ   RECVA2                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(16),=CL16'RECORD'                                              
         TM    INPUT,DISK                                                       
         BZ    RECVB                                                            
         LA    R5,ISREC                                                         
         AH    R5,ISRECL                                                        
         SH    R5,=H'4'                                                         
         GOTO1 =V(HEXOUT),DMCB,(R5),P+7,4,=C'MIX'                               
         B     RECVB                                                            
RECVA2   MVI   ERRNUM,X'FF'                                                     
         TM    FLAG2,X'70'                                                      
         BZ    RECVB                                                            
         L     R1,BADREC                                                        
         A     R1,=F'1'                                                         
         ST    R1,BADREC                                                        
*                                                                               
RECVB    MVC   P+16(4),=C'DA ='    PRINT DA FILE KEY                            
         LH    R0,ISKEYL                                                        
         CH    R0,=H'50'                                                        
         BL    *+8                                                              
         LH    R0,=H'50'                                                        
         GOTO1 =V(HEXOUT),DMCB,DAREC,P+20,(R0),=C'MIX'                          
         GOTO1 =V(PRINTER)                                                      
         LH    R0,DAELD            PRINT DA FILE LEN/CTL                        
         SH    R0,ISKEYL                                                        
         LA    R2,DAREC                                                         
         AH    R2,ISKEYL                                                        
         GOTO1 =V(HEXOUT),DMCB,(R2),P+20,(R0),=C'MIX'                           
         MVC   P+16(4),=C'CTL='                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LH    R5,FULL                                                          
         CH    R5,FULL+2                                                        
         BH    *+8                                                              
         LH    R5,FULL+2                                                        
         LA    R2,DAREC                                                         
         AR    R5,R2               R5=A(END OF RECORD PRINT AREA)               
         AH    R2,DAELD            R2=A(ELEMENT)                                
         SR    R0,R0                                                            
*                                                                               
RECVC    IC    R0,1(R2)            R0=ELEMENT LENGTH                            
         LR    R3,R2                                                            
         LR    R4,R0                                                            
         AR    R4,R2                                                            
         BAS   R9,RECVD            PRINT REC BETWEEN R3 AND R4                  
         LTR   R0,R0                                                            
         BZ    RECVE                                                            
         AR    R2,R0               BUMP TO NEXT ELEMENT                         
         B     RECVC                                                            
*                                                                               
RECVD    CR    R3,R5               PRINT ELEMENT START=R3,END=R4                
         BNL   RECVE                                                            
         CR    R4,R5                                                            
         BNH   *+6                                                              
         LR    R4,R5               ADJUST END IF GT MAX                         
         CLI   1(R3),2                                                          
         BNL   *+6                                                              
         LR    R4,R5               ADJUST END IF BAD EL LEN                     
         CR    R4,R5                                                            
         BNE   *+6                                                              
         SR    R0,R0               SET END IF BAD EL LEN                        
         SR    R4,R3               R4=PRINT CHR LEN                             
         GOTO1 =V(HEXOUT),DMCB,(R3),P+16,2                                      
         LA    R3,2(R3)                                                         
         SH    R4,=H'2'                                                         
         BLR   R9                                                               
RECVD2   LR    RF,R4                                                            
         CH    RF,=H'50'                                                        
         BL    *+8                                                              
         LH    RF,=H'50'                                                        
         GOTO1 =V(HEXOUT),DMCB,(R3),P+20,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         SH    R4,=H'50'                                                        
         BNPR  R9                                                               
         LA    R3,50(R3)                                                        
         B     RECVD2                                                           
*                                                                               
RECVE    TM    FLAG2,X'60'         TEST FOR MIN/MAX REC LEN ERRORS              
         BZ    RECVX                                                            
         LH    R5,DARECH           GET PHYSICAL LEN OF REC                      
         SH    R5,=H'4'                                                         
         CH    R5,DAMAX                                                         
         BH    *+12                                                             
         CH    R5,DAMIN                                                         
         BNL   *+8                                                              
         LH    R5,DAMIN            USE MIN LEN IF BAD PHYSICAL LEN              
         STH   R5,FULL                                                          
         LA    R1,DAREC(R5)                                                     
         XC    0(2,R1),0(R1)                                                    
         LA    R5,DAREC                                                         
         AH    R5,ISKEYL                                                        
         MVC   0(2,R5),FULL                                                     
         MVC   P(16),=C'ALTERED REC LEN '                                       
         MVC   P+16(4),=C'CTL='                                                 
         LH    R0,DAELD                                                         
         SH    R0,ISKEYL                                                        
         GOTO1 =V(HEXOUT),DMCB,(R5),P+20,(R0),=C'MIX'                           
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVX    XIT1                                                                   
         EJECT                                                                  
         LTORG                                                                  
         EJECT                                                                  
* PARAMETER TABLE - LIST OF KEYWORDS AND VALUES                                 
*                                                                               
* XL1    PARM VALUE                                                             
* XL1    PARM DEFAULT VALUE                                                     
* XL1    FLAGS X'80'=REQUIRED,X'40'=TABLE,X'20'=ROUT,X'01'=SINGLE               
* XL1    PARM MIN LEN                                                           
* CL8    PARM KEYWORD NAME                                                      
* AL4    PARM VALUE LIST                                                        
*                                                                               
         DS    0F                                                               
PARMTBL  DS    0CL16                                                            
MODE     DC    X'0000C004',C'MODE    ',A(MODEL)                                 
INPUT    DC    X'0000C001',C'INPUT   ',A(INPUTL)                                
OUTPUT   DC    X'00004001',C'OUTPUT  ',A(OUTPUTL)                               
TCOPY    DC    X'00004001',C'COPY    ',A(TCOPYL)                                
DIR      DC    X'00004001',C'DIR     ',A(DIRL)                                  
TRACK    DC    X'00024001',C'TRACK   ',A(TRACKL)                                
MSG      DC    X'00024001',C'MSG     ',A(MSGL)                                  
WARN     DC    X'00024001',C'WARNINGS',A(WARNL)                                 
CHECK    DC    X'00014001',C'RECCHECK',A(CHECKL)                                
COUNT    DC    X'00014001',C'COUNT   ',A(COUNTL)                                
BALCHECK DC    X'00014001',C'BALCHECK',A(BALCHKL)                               
SEQCHECK DC    X'00024001',C'SEQCHECK',A(SEQCHKL)                               
SIZE     DC    X'00014001',C'SIZE    ',A(SIZEL)                                 
XTRN     DC    X'00000004',C'EXTERNAL',A(XTRNNAME)                              
DAFILE   DC    X'00000004',C'DAFILE  ',A(DAFILEID)                              
D2FILE   DC    X'00000004',C'D2FILE  ',A(D2FILEID)                              
D3FILE   DC    X'00000004',C'D3FILE  ',A(D3FILEID)                              
D4FILE   DC    X'00000004',C'D4FILE  ',A(D4FILEID)                              
ISFILE   DC    X'00000004',C'ISFILE  ',A(ISFILEID)                              
PHFILE   DC    X'00000004',C'PHFILE  ',A(PHFILEID)                              
MAXRECS  DC    X'00002001',C'MAXRECS ',A(VALMAX)                                
WORKF    DC    X'00002001',C'WORKF   ',A(VALWORK)                               
UPSI     DC    X'00002001',C'UPSI    ',A(VALUPSI)                               
START    DC    X'00002102',C'START   ',A(VALK)                                  
END      DC    X'00002102',C'END     ',A(VALK)                                  
PARAM    DC    X'00002102',C'PARAM   ',A(VALP)                                  
LDWRITE  DC    X'00E84002',C'WRITE   ',A(WRITEL)                                
XTRN1    DC    X'00000004',C'LOAD    ',A(XTRNNAME)                              
D1FILE   DC    X'00002004',C'D1FILE  ',A(VALD1F)                                
DBFILE   DC    X'00002004',C'DBFILE  ',A(VALDBF)                                
ABEND    DC    X'00014001',C'DUMP    ',A(ABENDL)                                
PEEL     DC    X'00002001',C'PEEL    ',A(VALPEEL)                               
BALC     DC    X'00000005',C'BALCXT  ',A(BALCNAME)                              
CPTR     DC    X'00000005',C'CPTRXT  ',A(CPTRNAME)                              
DCNT     DC    X'00000005',C'DCNTXT  ',A(DCNTNAME)                              
SETL     DC    X'00000005',C'SETLXT  ',A(SETLNAME)                              
SIZEXT   DC    X'00000005',C'SIZEXT  ',A(SIZENAME)                              
SORT     DC    X'00000005',C'SORTXT  ',A(SORTNAME)                              
PRGE     DC    X'00000005',C'PRGEXT  ',A(PRGENAME)                              
TPTR     DC    X'00000005',C'TPTRXT  ',A(TPTRNAME)                              
DEFN     DC    X'00000005',C'DEFNXT  ',A(DEFNNAME)                              
RECT     DC    X'00000005',C'RECTXT  ',A(RECTNAME)                              
DISP     DC    X'00004003',C'DISP    ',A(DISPL)                                 
VERIFY   DC    X'00014001',C'VERIFY  ',A(VERIFYL)                               
LOGO     DC    X'00E84002',C'LOGO    ',A(LOGOL)                                 
DABIG    DC    X'00004001',C'DABIG   ',A(DABIGL)                                
ISPDOV   DC    X'00004001',C'ISPDOV  ',A(ISPDOVL)                               
IXPDOV   DC    X'00004001',C'IXPDOV  ',A(ISPDOVL)                               
SNAP     DC    X'00004001',C'SNAP    ',A(SNAPL)                                 
BLKSIZE  DC    X'00002004',C'BLKSIZE ',A(VALBLKSZ)                              
ISBLKIX  DC    X'00004001',C'ISBLKIX ',A(ISBLKIXL)                              
GLOBAL   DC    X'00004001',C'GLOBAL  ',A(GLOBALL)                               
PARMTBLX DC    X'FFFFFFFF'                                                      
*                                                                               
EXTTABL  DS    0F                                                               
BALCNAME DC    CL8' ',A(VLDBALCK),CL8'BALC'                                     
CPTRNAME DC    CL8' ',A(VLDCPTRS),CL8'CPTR'                                     
DCNTNAME DC    CL8' ',A(VLDCOUNT),CL8'DCNT'                                     
PRGENAME DC    CL8' ',A(VLDPURGE),CL8'PRGE'                                     
SETLNAME DC    CL8' ',A(VLDSETL),CL8'SETL'                                      
SIZENAME DC    CL8' ',A(VLDSIZE),CL8'SIZE'                                      
SORTNAME DC    CL8' ',A(VLDSORT),CL8'SORT'                                      
TPTRNAME DC    CL8' ',A(VLDTPTRS),CL8'TPTR'                                     
DEFNNAME DC    CL8' ',A(VLDDEFN),CL8'DEFN'                                      
RECTNAME DC    CL8' ',A(VLDRECTY),CL8'RECT'                                     
         DC    XL2'00'                                                          
*                                                                               
MAXIOS   DC    F'0'                                                             
XTRNNAME DC    CL8' '                                                           
DAFILEID DC    CL8' '                                                           
DAFILEIX DC    CL8' '                                                           
D2FILEID DC    CL8' '                                                           
D2FILEIX DC    CL8' '                                                           
D3FILEID DC    CL8' '                                                           
D3FILEIX DC    CL8' '                                                           
D4FILEID DC    CL8' '                                                           
D4FILEIX DC    CL8' '                                                           
ISFILEID DC    CL8' '                                                           
ISFILEIX DC    CL8' '                                                           
PHFILEID DC    CL8' '                                                           
PHFILEIX DC    CL8' '                                                           
         EJECT                                                                  
* WORKING STORAGE                                                               
*                                                                               
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
FULL1    DS    F                                                                
SAVERE   DS    F                                                                
ERRNUM   DS    F                                                                
SVMVSR1  DS    A                                                                
SAVERB   DS    A                                                                
ALOADPT  DS    A                                                                
DATEVAL  DS    CL8                 DATE=DD/MM/YY OR MM/DD/YY                    
DATEYMD  DS    CL6                                                              
FRSTTIME DC    C'N'                FIRST CARD READ AT TOP OF PROG               
EOJFLAG  DC    C'N'                                                             
EOFIN    DC    C'N'                                                             
DONBALCK DC    C'N'                                                             
DIRFLAG  DC    X'00'               01=DIROUT,02=TAPEOUT,04=SORTER               
UPSIINP  DC    X'00'                                                            
UPSIVAL  DC    X'00'                                                            
         DC    X'00'                                                            
RECTYV   DC    XL4'00'             RECORD TYPE SET BY V(RECTYP)                 
*                                                                               
RECFLAG  DC    X'00'               RECORD TYPE FLAG                             
LRECFLAG DC    X'00'                                                            
FRSTIO   DC    X'00'                                                            
RECRFN   DC    X'00'               RECORD RELATIVE FILE NUMBER                  
*                                                                               
FLAG1    DC    X'00'                                                            
FLAG2    DC    X'00'                                                            
PEELDATE DC    XL2'00'             REMOVED ITEMS PEELED PRIOR TO DATE           
*                                                                               
SVDMULTI DC    X'00'               SAVED FLAGS FROM LDDEFN                      
SVDFLAG1 DC    X'00'                                                            
SVDFLAG2 DC    X'00'                                                            
SVDFLAG3 DC    X'00'                                                            
*                                                                               
TAPEFLAG DC    X'00'               WOTAPE ROUTINE FLAG                          
TAPEFPTR EQU   X'80'               WRITE I/S POINTER TO D/A TAPE                
*                                                                               
OPENDA   DC    A(0)                OPEN COMMAND AREA (DISP=SHR OR OLD)          
OPENIS   DC    A(0)                                                             
*                                                                               
P1       DS    F                   PARAM LIST FOR ISDDS                         
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
Q1       DS    F                   PARAM LIST FOR DADDS                         
Q2       DS    F                                                                
Q3       DS    F                                                                
Q4       DS    F                                                                
Q5       DS    F                                                                
Q6       DS    F                                                                
*                                                                               
DMCB     DS    6F                                                               
WORK     DS    CL256                                                            
STXLST   DS    CL128                                                            
C        DS    CL80                                                             
OPNINF   DC    X'00'                                                            
OPNINI   DC    CL7' '                                                           
*                                                                               
TRKBUFLN EQU   60000                                                            
PTRBLKLN EQU   128000                                                           
*                                                                               
AISTRK   DC    A(0)                                                             
AF1TRK   DC    A(0)                                                             
AF2TRK   DC    A(0)                                                             
AF3TRK   DC    A(0)                                                             
AF4TRK   DC    A(0)                                                             
APTRBLK  DC    A(0)                                                             
                                                                                
SVD1HDR  DS    CL32                SAVED USER HEADER DATA                       
SVD2HDR  DS    CL32                                                             
SVD3HDR  DS    CL32                                                             
SVD4HDR  DS    CL32                                                             
SVDAHDR  EQU   SVD1HDR                                                          
SVDBHDR  EQU   SVD2HDR                                                          
*                                                                               
DAINFO   DS    0CL44               DA FILE INFO                                 
DANAME   DS    CL8                                                              
DADTFA   DS    A                                                                
DARECA   DS    A                                                                
DABLKL   DS    H                                                                
DAELD    DS    H                                                                
DALINKD  DS    H                                                                
DAKEYL   DS    H                                                                
DACTLL   DS    H                                                                
DAMIN    DS    H                                                                
DAMAX    DS    H                                                                
DAFNUM   DS    X                                                                
DAFLAG   DS    X                                                                
         DS    F                                                                
DACOUNT  DS    F                                                                
DALAST   DS    XL4                                                              
*                                                                               
F1INFO   DS    0CL44               DA FILE INFO FOR 1ST DA FILE                 
F1NAME   DS    CL8                                                              
F1DTFA   DS    A                                                                
F1RECA   DS    A                                                                
F1BLKL   DS    H                                                                
F1ELD    DS    H                                                                
F1LINKD  DS    H                                                                
F1KEYL   DS    H                                                                
F1CTLL   DS    H                                                                
F1MIN    DS    H                                                                
F1MAX    DS    H                                                                
F1FNUM   DS    X                                                                
         DS    X                                                                
         DS    F                                                                
F1COUNT  DS    F                                                                
F1LAST   DS    XL4                                                              
*                                                                               
F2INFO   DS    0CL44               DA FILE INFO FOR 2ND DA FILE                 
F2NAME   DS    CL8                                                              
F2DTFA   DS    A                                                                
F2RECA   DS    A                                                                
F2BLKL   DS    H                                                                
F2ELD    DS    H                                                                
F2LINKD  DS    H                                                                
F2KEYL   DS    H                                                                
F2CTLL   DS    H                                                                
F2MIN    DS    H                                                                
F2MAX    DS    H                                                                
F2FNUM   DS    X                                                                
         DS    X                                                                
         DS    F                                                                
F2COUNT  DS    F                                                                
F2LAST   DS    XL4                                                              
*                                                                               
F3INFO   DS    0CL44               DA FILE INFO FOR 3RD DA FILE                 
F3NAME   DS    CL8                                                              
F3DTFA   DS    A                                                                
F3RECA   DS    A                                                                
F3BLKL   DS    H                                                                
F3ELD    DS    H                                                                
F3LINKD  DS    H                                                                
F3KEYL   DS    H                                                                
F3CTLL   DS    H                                                                
F3MIN    DS    H                                                                
F3MAX    DS    H                                                                
F3FNUM   DS    X                                                                
         DS    X                                                                
         DS    F                                                                
F3COUNT  DS    F                                                                
F3LAST   DS    XL4                                                              
*                                                                               
F4INFO   DS    0CL44               DA FILE INFO FOR 4TH DA FILE                 
F4NAME   DS    CL8                                                              
F4DTFA   DS    A                                                                
F4RECA   DS    A                                                                
F4BLKL   DS    H                                                                
F4ELD    DS    H                                                                
F4LINKD  DS    H                                                                
F4KEYL   DS    H                                                                
F4CTLL   DS    H                                                                
F4MIN    DS    H                                                                
F4MAX    DS    H                                                                
F4FNUM   DS    X                                                                
         DS    X                                                                
         DS    F                                                                
F4COUNT  DS    F                                                                
F4LAST   DS    XL4                                                              
*                                                                               
ISINFO   DS    0CL24               IS FILE INFO                                 
ISNAME   DS    CL8                                                              
ISDTFA   DS    A                                                                
ISKEYL   DS    H                                                                
ISKEYL1  DS    H                                                                
ISRECL   DS    H                                                                
ISFBYTE  DS    H                                                                
ISFBITS  DS    X                                                                
ISFSRL   DS    X                                                                
ISFLAG   DS    X                                                                
ISFILL   DS    X                                                                
*                                                                               
VLDDEFN  DC    V(LDDEFN)           FILE DEFINITION                              
VLDPURGE DC    V(LDPURGE)          PURGE TEST                                   
VLDCPTRS DC    V(LDCPTR)           CREATE DIRECTORY POINTERS                    
VLDTPTRS DC    V(LDTPTR)           TEST DIRECTORY POINTERS (PASSIVE)            
VLDCOUNT DC    V(LDCOUNT)          RECORD TYPE COUNT                            
VLDSIZE  DC    V(LDSIZE)           RECORD SIZE COUNT                            
VLDBALCK DC    V(LDBALCK)          MONEY/HASH TOTALS                            
VLDSETL  DC    V(LDSETLEN)         RECORD LENGTH SET/ADJUST                     
VLDSORT  DC    V(LDSORT)           SPECIAL DIRECTORY SORT ROUTINES              
VLDRECTY DC    V(LDRECTY)          RECORD TYPE                                  
*                                                                               
PLXTRN   DC    A(DAREC),A(TAPEOUT),A(PARMCARD),V(LDDEFN)                        
         DC    V(PRINTER),V(CPRINT),V(CARDS),A(PEELDATE),A(ISREC)               
PLDBLK   DC    A(DAREC),A(DABLKL),F'0',A(DANAME)                                
PLCOUNT  DC    A(ISREC),A(ISNAME),A(0),A(0)                                     
PLPURGE  DC    A(DAREC),A(PEELDATE),A(0),A(0)                                   
PLCPTRS  DC    A(DAREC),A(0),A(0),A(0),A(P5)                                    
PLTPTRS  DC    A(ISREC),A(WORK),A(0),A(0)                                       
PLSIZE   DC    A(0),A(DANAME),A(0),A(0)                                         
PLBALCK  DC    A(DAREC),A(DANAME),A(0),A(0)                                     
PLRECTY  DC    A(DAREC),A(DANAME),A(RECTYV),A(0)                                
*                                                                               
CPUID    DS    CL4                 MVS CPUID                                    
CSRESULT DC    AL1(0)              RESULT OF SECHK ROUTINE                      
CSRESERR DC    AL1(0)              ERROR CODE FROM CSRESULT                     
*                                                                               
OPERMSG  DC    CL60' '             MESSAGE TO OPERATOR                          
OPERANS  DC    CL12' '             REPLY FROM OPERATOR                          
*                                                                               
INFOMSG1 DC    C'DA FILE XXXXXXX LOADED'                                        
         DC    C' - TRACKS ALLOCATED='                                          
INFOTRKA DC    CL5' '                                                           
         DC    C',TRACKS USED='                                                 
INFOTRKU DC    CL5' '                                                           
         DC    C',TRACKS AVAILABLE='                                            
INFOTRKL DC    CL5' '                                                           
INFOMS1L EQU   *-INFOMSG1                                                       
*                                                                               
INFOMSG2 DC    C'IS FILE XXXXXXX LOADED'                                        
         DC    C' - PD TRACKS ALLOCATED='                                       
INFOPDTA DC    CL5' '                                                           
         DC    C',PD TRACKS USED='                                              
INFOPDTU DC    CL5' '                                                           
         DC    C',PD TRACKS AVAILABLE='                                         
INFOPDTL DC    CL5' '                                                           
INFOMS2L EQU   *-INFOMSG2                                                       
*                                                                               
INFOMSG3 DC    CL(L'INFOMSG2)' ',C' - '                                         
INFOMC1L DC    CL3' '                                                           
         DC    C' INDEX '                                                       
INFOMC1T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC1U DC    CL6' '                                                           
         DC    C','                                                             
INFOMC2L DC    CL3' '                                                           
         DC    C' INDEX '                                                       
INFOMC2T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC2U DC    CL6' '                                                           
INFOMS3L EQU   *-INFOMSG3                                                       
         EJECT                                                                  
* TABLE OF COUNTERS AND DESCRIPTIONS                                            
*                                                                               
         DS    0F                                                               
COUNTERS DS    0CL20                                                            
TIIS     DC    F'0',CL16'IS TAPE READS'                                         
TIDA     DC    F'0',CL16'DA TAPE READS'                                         
TIDEL    DC    F'0',CL16'IN TAPE DELETES'                                       
DOF1     DC    F'0',CL16'DA DISK WRITES'                                        
DOF2     DC    F'0',CL16'D2 DISK WRITES'                                        
DOF3     DC    F'0',CL16'D3 DISK WRITES'                                        
DOF4     DC    F'0',CL16'D4 DISK WRITES'                                        
DIST     DC    F'0',CL16'SORTFIL INPUT'                                         
DOST     DC    F'0',CL16'SORTFIL OUTPUT'                                        
DOIS     DC    F'0',CL16'IS DISK WRITES'                                        
DIIS     DC    F'0',CL16'IS DISK READS'                                         
DIISD    DC    F'0',CL16'IS DISK DELETES'                                       
DIISS    DC    F'0',CL16'IS DISK SKIPS'                                         
DIF1     DC    F'0',CL16'DA DISK READS'                                         
DIF1D    DC    F'0',CL16'DA DISK DELETES'                                       
DIF2     DC    F'0',CL16'D2 DISK READS'                                         
DIF2D    DC    F'0',CL16'D2 DISK DELETES'                                       
DIF3     DC    F'0',CL16'D3 DISK READS'                                         
DIF3D    DC    F'0',CL16'D3 DISK DELETES'                                       
DIF4     DC    F'0',CL16'D4 DISK READS'                                         
DIF4D    DC    F'0',CL16'D4 DISK DELETES'                                       
TOIS     DC    F'0',CL16'IS TAPE WRITES'                                        
TODA     DC    F'0',CL16'DA TAPE WRITES'                                        
TOCIS    DC    F'0',CL16'IS TAPE CPY WRTS'                                      
TOCDA    DC    F'0',CL16'DA TAPE CPY WRTS'                                      
DUPKEY   DC    F'0',CL16'IS DISK DUP KEY '                                      
SEQERR   DC    F'0',CL16'IS DISK SEQ ERR '                                      
BADADR   DC    F'0',CL16'DA DISK BAD ADR '                                      
KEYNEQ   DC    F'0',CL16'DA DISK KEY NEQ '                                      
BADREC   DC    F'0',CL16'DA DISK BAD REC '                                      
COUNTERX DC    X'FFFFFFFF'                                                      
         EJECT                                                                  
ISMAX    EQU   064                                                              
LISREC   DS    512C                                                             
         SPACE 2                                                                
         DS    0D                                                               
         DC    C'ISISISIS'                                                      
ISRECH   DS    F                                                                
ISREC    DS    512C                                                             
         SPACE 2                                                                
         DS    0D                                                               
         DC    C'DADADADA'                                                      
DARECH   DS    F                                                                
DAREC    DS    16384C                                                           
DARECX   DS    0C                                                               
         SPACE 2                                                                
         DC    C'DRDRDRDR'                                                      
DIRRECH  DS    F                                                                
DIRREC   DS    512C                                                             
         SPACE 2                                                                
         DS    0D                                                               
         DC    C'WKWKWKWK'                                                      
DMLDWRK  DS    49152C                                                           
         SPACE 2                                                                
         DS    0D                                                               
IOBCCWL  DC    C'XXIOBCCW'                                                      
         DC    XL136'00'                                                        
         SPACE 2                                                                
PARMCARD DS    CL80                                                             
STRKEY   DS    XL(ISMAX)                                                        
ENDKEY   DS    XL(ISMAX)                                                        
         ORG   STRKEY                                                           
         DS    (MAXKEY)XL(L'STRKEY+L'ENDKEY)                                    
MAXKEY   EQU   8                                                                
         SPACE 2                                                                
QUEST1   DC    CL60'ANY MORE INPUT TAPES ?'                                     
*                                                                               
WARNMSG  DC    CL60'**WARNING** DISK=XXXXXXX IS ABOUT TO BE DELETED  '          
WARNMSG1 DC    CL60'**WARNING** TAPE=XXXXXXX NOT SAME AS DISK=XXXXXXX'          
WARNMSG2 DC    CL60'**WARNING** TAPE=XXXXXXX NOT SAME AS TAPE=XXXXXXX'          
*                                                                               
WARNMSGA DC    CL60'**WARNING** ERROR ON DA DISK HEADER READ/WRITE'             
WARNMSGB DC    CL60'**WARNING** EOF REC IS  '                                   
WARNMSGC DC    CL60'**WARNING** DUP KEY IS ='                                   
WARNMSGD DC    CL60'**WARNING** SEQ ERR IS ='                                   
WARNMSGE DC    CL60'**WARNING** ADR FMT IS ='                                   
WARNMSGF DC    CL60'**WARNING** ADR VAL IS ='                                   
WARNMSGG DC    CL60'**WARNING** ADR LNK DA ='                                   
*                                                                               
ERRMSG1  DC    CL60'***ERROR*** MISSING PARAMETER - '                           
ERRMSG2  DC    CL60'***ERROR*** INVALID PARAMETER CARD SYNTAX'                  
ERRMSG3  DC    CL60'***ERROR*** INVALID PARAMETER - '                           
ERRMSG4  DC    CL60'***ERROR*** INVALID VALUE FOR PARAMETER - '                 
*                                                                               
ERRMSGA  DC    CL60'***ERROR*** INVALID IS FILE EXTENTS'                        
ERRMSGB  DC    CL60'***ERROR*** DA DISK BAD DUE TO WRONG TAPES'                 
ERRMSGC  DC    CL60'***ERROR*** DA DISK ON TRACK WRITE'                         
ERRMSGD  DC    CL60'***ERROR*** DA DISK ERASE FAILURE'                          
ERRMSGE  DC    CL60'***ERROR*** IS DISK WRITE'                                  
ERRMSGF  DC    CL60'***ERROR*** SORTIN NEQ SORTOUT'                             
ERRMSGG  DC    CL60'***ERROR*** IS DISK READ'                                   
*                                                                               
*                                                                               
EXTMSG0  DC    CL60'EXTERNAL ........ IS ACTIVE'                                
EXTMSG1  DC    CL60'EXTERNAL ........ IS NO-OP'                                 
EXTMSG2  DC    CL60'***ERROR*** EXTERNAL ........ NOT FOUND'                    
EXTMSG3  DC    CL60'***ERROR*** EXTERNAL ........ DATES OUT OF RANGE'           
EXTMSG4  DC    CL60'***ERROR*** EXTERNAL ........ EMPTY SYSTEM LIST'            
         EJECT                                                                  
       ++INCLUDE DMLDEQUS                                                       
         SPACE 1                                                                
MODEL    DC    X'0D',CL10'COPY '      COPY FILE        VIA DIR                  
         DC    X'09',CL10'COPD '      COPY DIR                                  
         DC    X'05',CL10'COPF '      COPY FILE                                 
         DC    X'09',CL10'COPYD'      COPY DIR                                  
         DC    X'05',CL10'COPYF'      COPY FILE                                 
         DC    X'1D',CL10'COPYA'      COPY FILE1       VIA DIR                  
         DC    X'2D',CL10'COPYB'      COPY FILE2       VIA DIR                  
         DC    X'3D',CL10'COPYC'      COPY FILE1/2     VIA DIR                  
*                                                                               
         DC    X'1D',CL10'COPY1'      COPY FILE1       VIA DIR                  
         DC    X'2D',CL10'COPY2'      COPY FILE2       VIA DIR                  
         DC    X'4D',CL10'COPY3'      COPY FILE3       VIA DIR                  
         DC    X'8D',CL10'COPY4'      COPY FILE4       VIA DIR                  
         DC    X'3D',CL10'COPY12'     COPY FILE1/2     VIA DIR                  
         DC    X'5D',CL10'COPY13'     COPY FILE1/3     VIA DIR                  
         DC    X'9D',CL10'COPY14'     COPY FILE1/4     VIA DIR                  
         DC    X'6D',CL10'COPY23'     COPY FILE2/3     VIA DIR                  
         DC    X'AD',CL10'COPY24'     COPY FILE2/4     VIA DIR                  
         DC    X'CD',CL10'COPY34'     COPY FILE3/4     VIA DIR                  
         DC    X'7D',CL10'COPY123'    COPY FILE1/2/3   VIA DIR                  
         DC    X'BD',CL10'COPY124'    COPY FILE1/2/4   VIA DIR                  
         DC    X'FD',CL10'COPY1234'   COPY FILE1/2/3/4 VIA DIR                  
*                                                                               
         DC    X'15',CL10'COPYF1'     COPY FILE1                                
         DC    X'15',CL10'COPYFA'     COPY FILE1                                
         DC    X'25',CL10'COPYF2'     COPY FILE2                                
         DC    X'25',CL10'COPYFB'     COPY FILE2                                
         DC    X'45',CL10'COPYF3'     COPY FILE3                                
         DC    X'85',CL10'COPYF4'     COPY FILE4                                
         DC    X'35',CL10'COPYF12'    COPY FILE1/2                              
         DC    X'35',CL10'COPYFC'     COPY FILE1/2                              
         DC    X'55',CL10'COPYF13'    COPY FILE1/3                              
         DC    X'95',CL10'COPYF14'    COPY FILE1/4                              
         DC    X'65',CL10'COPYF23'    COPY FILE2/3                              
         DC    X'A5',CL10'COPYF24'    COPY FILE2/4                              
         DC    X'C5',CL10'COPYF34'    COPY FILE3/4                              
         DC    X'75',CL10'COPYF123'   COPY FILE1/2/3                            
         DC    X'B5',CL10'COPYF124'   COPY FILE1/2/4                            
         DC    X'F5',CL10'COPYF1234'  COPY FILE1/2/3/4                          
*                                                                               
         DC    X'0E',CL10'REPORT'     REPORT FILE        VIA DIR                
         DC    X'06',CL10'REPORF '    REPORT FILE                               
         DC    X'0A',CL10'REPORD '    REPORT DIR                                
         DC    X'0A',CL10'REPORTD'    REPORT DIR                                
         DC    X'06',CL10'REPORTF'    REPORT FILE                               
         DC    X'1E',CL10'REPORTA'    REPORT FILE1       VIA DIR                
         DC    X'2E',CL10'REPORTB'    REPORT FILE2       VIA DIR                
         DC    X'3E',CL10'REPORTC'    REPORT FILE1/2     VIA DIR                
*                                                                               
         DC    X'1E',CL10'REPORT1'    REPORT FILE1       VIA DIR                
         DC    X'2E',CL10'REPORT2'    REPORT FILE2       VIA DIR                
         DC    X'4E',CL10'REPORT3'    REPORT FILE3       VIA DIR                
         DC    X'8E',CL10'REPORT4'    REPORT FILE4       VIA DIR                
         DC    X'3E',CL10'REPORT12'   REPORT FILE1/2     VIA DIR                
         DC    X'5E',CL10'REPORT13'   REPORT FILE1/3     VIA DIR                
         DC    X'9E',CL10'REPORT14'   REPORT FILE1/4     VIA DIR                
         DC    X'6E',CL10'REPORT23'   REPORT FILE2/3     VIA DIR                
         DC    X'AE',CL10'REPORT24'   REPORT FILE2/4     VIA DIR                
         DC    X'CE',CL10'REPORT34'   REPORT FILE3/4     VIA DIR                
         DC    X'7E',CL10'REPORT123'  REPORT FILE1/2/3   VIA DIR                
         DC    X'BE',CL10'REPORT124'  REPORT FILE1/2/4   VIA DIR                
         DC    X'FE',CL10'REPORT1234' REPORT FILE1/2/3/4 VIA DIR                
*                                                                               
         DC    X'16',CL10'REPORF1'    REPORT FILE1                              
         DC    X'26',CL10'REPORF2'    REPORT FILE2                              
         DC    X'46',CL10'REPORF3'    REPORT FILE3                              
         DC    X'86',CL10'REPORF4'    REPORT FILE4                              
         DC    X'36',CL10'REPORF12'   REPORT FILE1/2                            
         DC    X'56',CL10'REPORF13'   REPORT FILE1/3                            
         DC    X'96',CL10'REPORF14'   REPORT FILE1/4                            
         DC    X'66',CL10'REPORF23'   REPORT FILE2/3                            
         DC    X'A6',CL10'REPORF24'   REPORT FILE2/4                            
         DC    X'C6',CL10'REPORF34'   REPORT FILE3/4                            
         DC    X'76',CL10'REPORF123'  REPORT FILE1/2/3                          
         DC    X'B6',CL10'REPORF124'  REPORT FILE1/2/4                          
         DC    X'F6',CL10'REPORF1234' REPORT FILE1/2/3/4                        
MODELX   DC    X'FF'                                                            
*                                                                               
INPUTL   DC    X'01',CL10'DISK'                                                 
         DC    X'02',CL10'TAPE'                                                 
         DC    X'0A',CL10'WDUTAPE'                                              
INPUTLX  DC    X'FF'                                                            
*                                                                               
OUTPUTL  DC    X'01',CL10'DISK'                                                 
         DC    X'02',CL10'TAPE'                                                 
OUTPUTLX DC    X'FF'                                                            
*                                                                               
TCOPYL   DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'TAPE'                                                 
TCOPYLX  DC    X'FF'                                                            
*                                                                               
DIRL     DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'TAPE'                                                 
         DC    X'06',CL10'SORT'                                                 
DIRLX    DC    X'FF'                                                            
*                                                                               
TRACKL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
TRACKLX  DC    X'FF'                                                            
*                                                                               
MSGL     DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
MSGLX    DC    X'FF'                                                            
*                                                                               
WARNL    DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
WARNLX   DC    X'FF'                                                            
*                                                                               
CHECKL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'06',CL10'DELETE'                                               
         DC    X'0A',CL10'PRINT'                                                
CHECKLX  DC    X'FF'                                                            
*                                                                               
COUNTL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'42',CL10'PURGE'                                                
COUNTLX  DC    X'FF'                                                            
*                                                                               
VERIFYL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'42',CL10'IGNORE'                                               
VERIFYLX DC    X'FF'                                                            
*                                                                               
BALCHKL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
BALCHKLX DC    X'FF'                                                            
*                                                                               
SEQCHKL  DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
SEQCHKLX DC    X'FF'                                                            
*                                                                               
SIZEL    DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
SIZELX   DC    X'FF'                                                            
*                                                                               
WRITEL   DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
WRITELX  DC    X'FF'                                                            
*                                                                               
ABENDL   DC    X'01',CL10'NO'                                                   
         DC    X'02',CL10'YES'                                                  
         DC    X'02',CL10'OS '                                                  
ABENDLX  DC    X'FF'                                                            
*                                                                               
DISPL    DC    X'01',CL10'OLD'                                                  
         DC    X'02',CL10'SHR'                                                  
DISPLX   DC    X'FF'                                                            
*                                                                               
LOGOL    DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
LOGOLX   DC    X'FF'                                                            
*                                                                               
DABIGL   DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
DABIGLX  DC    X'FF'                                                            
*                                                                               
ISPDOVL  DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
ISPDOVLX DC    X'FF'                                                            
*                                                                               
SNAPL    DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
SNAPLX   DC    X'FF'                                                            
*                                                                               
ISBLKIXL DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
ISBLKIXX DC    X'FF'                                                            
*                                                                               
GLOBALL  DC    C'N',CL10'NO'                                                    
         DC    C'Y',CL10'YES'                                                   
         DC    C'D',CL10'DTF'                                                   
GLOBALX  DC    X'FF'                                                            
         EJECT                                                                  
TAPEIN   DCB   DDNAME=TAPEIN,DSORG=PS,MACRF=(GM),EODAD=INPUTEOF,       X        
               RECFM=VB,LRECL=4004,BUFNO=2                                      
*                                                                               
TAPEOUT  DCB   DDNAME=TAPEOUT,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=4004,BUFNO=2,BLKSIZE=32760                        
*                                                                               
TAPECPY  DCB   DDNAME=TAPECPY,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=4004,BUFNO=2,BLKSIZE=32760                        
*                                                                               
TAPEDIR  DCB   DDNAME=TAPEDIR,DSORG=PS,MACRF=(PM),                     X        
               RECFM=VB,LRECL=4004,BUFNO=2,BLKSIZE=32760                        
         SPACE 2                                                                
         EJECT                                                                  
* INITIALISE SOME VARIABLES                                                     
*                                                                               
INITPROG CSECT                                                                  
         NMOD1 0,**INIP**                                                       
         DROP  R7,R8,RA            DROP DMLDMOD CSECT'S EXTRA BASE REGS         
         LR    RA,R1                                                            
         USING PARMTBL,RA          RA=A(DMLDMOD CSECT'S STORAGE)                
         LR    RC,R0                                                            
         USING DPRINT,RC           RC=A(DMLDMOD CSECT'S PRINTER)                
*                                                                               
         L     R1,X'10'            GET CPU ID                                   
         L     R1,X'C4'(R1)        R1=A(SMCA) FROM CVT                          
         MVC   CPUID,X'10'(R1)     CPU IS C'XXXX' FROM SMCASID                  
*                                                                               
         L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         L     RE,=A(UTL)                                                       
         MVC   4(1,RE),LDDSYSID    SET SYSTEM NUMBER IN UTL                     
*                                                                               
         L     R0,=A(PTRBLKLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,APTRBLK                                                       
         L     RE,=A(PLCPTRS)                                                   
         ST    R1,4(RE)            SET IN PLCPTRS PARAM LIST                    
*                                                                               
         L     R0,LDDDTFIS         GET ISFILE ADDRESS                           
         BAS   RE,GETFILAD                                                      
         ST    R0,LDDDTFIS         SET DTF ADDRESS                              
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AISTRK                                                        
*                                                                               
         L     R0,LDDDTFD1                                                      
         BAS   RE,GETFILAD                                                      
         ST    R0,LDDDTFD1                                                      
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF1TRK                                                        
*                                                                               
         TM    LDDMULTI,LDDQDA2    TEST FILES 1/2 ALLOCATED                     
         BZ    INIP2               NO                                           
         L     R0,LDDDTFD2                                                      
         BAS   RE,GETFILAD                                                      
         ST    R0,LDDDTFD2                                                      
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF2TRK                                                        
*                                                                               
         TM    LDDMULTI,LDDQDA4    TEST FILES 3/4 ALLOCATED                     
         BZ    INIP2               NO                                           
         L     R0,LDDDTFD3                                                      
         BAS   RE,GETFILAD                                                      
         ST    R0,LDDDTFD3                                                      
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF3TRK                                                        
*                                                                               
         L     R0,LDDDTFD4                                                      
         BAS   RE,GETFILAD                                                      
         ST    R0,LDDDTFD4                                                      
         L     R0,=A(TRKBUFLN)                                                  
         BAS   RE,GETMAIN                                                       
         ST    R1,AF4TRK                                                        
         B     INIP2                                                            
*                                                                               
GETMAIN  NTR1                                                                   
         GETMAIN RU,LV=(0),BNDRY=PAGE                                           
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         XIT1  REGS=(R1)                                                        
         EJECT                                                                  
INIP2    XC    STXLST,STXLST       SET STXIT IF END OF MODULE CSECT             
         MVC   STXLST(4),SAVERB                                                 
         ICM   RE,15,=V(ENDOFMOD)                                               
         BNZ   *+12                                                             
         ICM   RE,15,=V(DUMMY)                                                  
         BZ    INIP10                                                           
         ST    RE,STXLST+4                                                      
*                                                                               
         LA    RE,STXLST+8          DUMP ALLOCATED BUFFERS AS WELL              
         ICM   R0,15,APTRBLK                                                    
         BZ    INIP2A                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(PTRBLKLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2A   ICM   R0,15,AISTRK                                                     
         BZ    INIP2B                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2B   ICM   R0,15,AF1TRK                                                     
         BZ    INIP2C                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2C   ICM   R0,15,AF2TRK                                                     
         BZ    INIP2D                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2D   ICM   R0,15,AF3TRK                                                     
         BZ    INIP2E                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2E   ICM   R0,15,AF4TRK                                                     
         BZ    INIP2X                                                           
         ST    R0,0(RE)                                                         
         A     R0,=A(TRKBUFLN)                                                  
         BCTR  R0,0                                                             
         ST    R0,4(RE)                                                         
         LA    RE,8(RE)                                                         
*                                                                               
INIP2X   SH    RE,=H'4'                                                         
         OI    0(RE),X'80'         SET EOL FLAG                                 
         EJECT                                                                  
INIP10   L     R1,SVMVSR1          SAVE MVS SUPV INFO                           
         L     R1,0(R1)                                                         
         LH    R2,0(R1)                                                         
         LTR   R2,R2               R2=L'PARM DATA                               
         BZ    INIP10C                                                          
         CH    R2,=H'8'                                                         
         BNH   *+8                                                              
         LA    R2,8                                                             
         LA    R1,2(R1)            R1=A(PARM DATA)                              
         LA    RF,UPSITAB                                                       
INIP10A  CLI   0(R1),C'0'                                                       
         BE    INIP10B                                                          
         CLI   0(R1),C'1'                                                       
         BNE   INIP10C                                                          
         OC    UPSIVAL,0(RF)                                                    
INIP10B  A     R1,=F'1'                                                         
         A     RF,=F'1'                                                         
         BCT   R2,INIP10A                                                       
INIP10C  MVC   UPSIINP,UPSIVAL     SAVE UPSI                                    
         XC    ALOADPT,ALOADPT     CLEAR EXTERNAL LOAD POINT ADDR               
         B     INIP10X                                                          
UPSITAB  DC    X'8040201008040201'                                              
INIP10X  EQU   *                                                                
         SPACE 1                                                                
         GOTO1 =V(DATCON),DMCB,(5,DUB),(10,DATEVAL)                             
         GOTO1 (RF),(R1),(4,DATEVAL),(0,DATEYMD)                                
         SPACE 1                                                                
INIP20   LA    R1,TITLE+13                                                      
         MVC   0(33,R1),=C'XXX - LOAD/DUMP FOR IS/DA FILES  '                   
         MVC   0(3,R1),CPUID                                                    
         L     R2,VLDDEFN                                                       
         LTR   R2,R2                                                            
         BNZ   *+6                                                              
         DC    H'0'                DIE IF NO FILE DEFINITION                    
         L     R2,4(R2)                                                         
         LTR   R2,R2               POINT TO IS FILE DTF                         
         BZ    INIP20X                                                          
         L     R3,=A(SYSLIST)                                                   
INIP20A  CLI   0(R3),0             SEARCH FOR IS FILE MATCH                     
         BE    INIP20X                                                          
         CLC   0(3,R3),22(R2)                                                   
         BE    *+12                                                             
         LA    R3,16(R3)                                                        
         B     INIP20A                                                          
         MVC   20(13,R1),3(R3)     MOVE FILE NAMES TO TITLE                     
INIP20X  DS    0H                                                               
*                                                                               
INIP30   L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
         MVC   SVDMULTI(4),LDDMULTI                                             
         L     R1,LDDDTFDA                                                      
         LTR   R1,R1                                                            
         BZ    *+10                                                             
         MVC   DAFILEIX(7),22(R1)  INITIALISE DA FILE ID                        
         L     R1,LDDDTFIS                                                      
         LTR   R1,R1                                                            
         BZ    *+10                                                             
         MVC   ISFILEIX(7),22(R1)  INITIALISE IS FILE ID                        
         TM    LDDMULTI,LDDQDA2+LDDQDA4                                         
         BZ    INIP30X                                                          
         ICM   R1,15,LDDDTFD2                                                   
         BNZ   *+6                 MUST HAVE 2ND DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D2FILEIX(7),22(R1)  INITIALISE DA FILE ID OF 2ND DA              
         TM    LDDMULTI,LDDQDA4                                                 
         BZ    INIP30X                                                          
         ICM   R1,15,LDDDTFD3                                                   
         BNZ   *+6                 MUST HAVE 3RD DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D3FILEIX(7),22(R1)  INITIALISE DA FILE ID OF 4TH DA              
         ICM   R1,15,LDDDTFD4                                                   
         BNZ   *+6                 MUST HAVE 4TH DTF IF FLAG ON                 
         DC    H'0'                                                             
         MVC   D4FILEIX(7),22(R1)  INITIALISE DA FILE ID OF 4TH DA              
INIP30X  EQU   *                                                                
*                                                                               
INIP40   TM    LDDMULTI,LDDQMULT   TEST IF MULTI FILE SET                       
         BZ    INIP40X                                                          
         OC    LDDDTFDA,LDDDTFDA                                                
         BZ    *+8                                                              
         OI    DAFILE+2,X'80'      SET DAFILE NAME REQUIRED                     
         OC    LDDDTFIS,LDDDTFIS                                                
         BZ    *+8                                                              
         OI    ISFILE+2,X'80'      SET ISFILE NAME REQUIRED                     
INIP40X  EQU   *                                                                
*                                                                               
INIP50   TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST MULTI DA FILES                     
         BZ    INIP50X                                                          
         OI    ISFILE+2,X'80'      SET ISFILE NAME REQUIRED                     
         OI    DAFILE+2,X'80'      SET DA ONE NAME REQUIRED                     
         OI    D2FILE+2,X'80'      SET DA 2ND NAME REQUIRED                     
         TM    LDDMULTI,LDDQDA4                                                 
         BZ    INIP50X                                                          
         OI    D3FILE+2,X'80'      SET DA 3RD NAME REQUIRED                     
         OI    D4FILE+2,X'80'      SET DA 4TH NAME REQUIRED                     
INIP50X  EQU   *                                                                
*                                                                               
INIP60   EQU   *                                                                
*                                                                               
INIPX    XIT1                                                                   
         EJECT                                                                  
GETFILAD NTR1                                                                   
         LTR   R0,R0               TEST FILE DEFINED                            
         BZ    GETFX               NO                                           
         C     R0,=F'255'          TEST DTF ADDRESS PRESENT                     
         BH    GETFX               YES - JUST EXIT                              
*                                                                               
         L     RE,=A(UTL)                                                       
         MVC   GETFDM3+3(1),4(RE)    SET SYSTEM NUMBER                          
         GOTO1 =V(DATAMGR),GETFDMCB,=C'DMREAD',=C'SYSFLES'                      
*                                                                               
         L     RE,GETFDM4          GET ADDRESS OF SYSTEM FILE LIST              
         SR    RF,RF                                                            
         IC    RF,3(RE)            NUMBER OF FILES                              
         LA    RE,4(RE)            POINT TO FIRST FILE                          
*                                                                               
GETF2    CLM   R0,1,3(RE)          MATCH FILE NUMBER                            
         BE    GETF4                                                            
         LA    RE,8(RE)                                                         
         BCT   RF,GETF2                                                         
         DC    H'0'                                                             
*                                                                               
GETF4    L     R0,4(RE)            DTF ADDRESS IN R1                            
*                                                                               
GETFX    DS    0H                                                               
         XIT1  REGS=(R0)                                                        
*                                                                               
GETFDMCB DS    0F                                                               
GETFDM1  DC    A(0)                                                             
GETFDM2  DC    A(0)                                                             
GETFDM3  DC    A(0)                                                             
GETFDM4  DC    A(0)                                                             
GETFDM5  DC    A(0)                                                             
GETFDM6  DC    A(0)                                                             
         SPACE 1                                                                
SYSLIST  DS    0CL16                                                            
*&&UK                                                                           
         DC    C'ACC',CL13'ACCDIR/ACCMST'                                       
         DC    C'BUD',CL13'BUDDIR/BUDFIL'                                       
         DC    C'CRA',CL13'CRADIR/CRAFIL'                                       
         DC    C'DEM',CL13'DEMDIR/N/O   '                                       
         DC    C'DMN',CL13'DMNDIR/N/O   '                                       
         DC    C'DMO',CL13'DMODIR/1234  '                                       
         DC    C'MBA',CL13'MBADIR/MBAFIL'                                       
         DC    C'MED',CL13'MEDDIR/MEDFIL'                                       
         DC    C'MPL',CL13'MPLDIR/MPLFIL'                                       
         DC    C'MPQ',CL13'MPQDIR/MPQFIL'                                       
         DC    C'MPR',CL13'MPRDIR/MPRFIL'                                       
         DC    C'PER',CL13'PERDIR/PERFIL'                                       
*&&                                                                             
*&&US                                                                           
         DC    C'ACC',CL13'ACCDIR/ACCMST'                                       
         DC    C'BUD',CL13'BUDDIR/BUDFIL'                                       
         DC    C'MBA',CL13'MBADIR/MBAFIL'                                       
         DC    C'MPL',CL13'MPLDIR/MPLFIL'                                       
         DC    C'MPQ',CL13'MPQDIR/MPQFIL'                                       
         DC    C'MPR',CL13'MPRDIR/MPRFIL'                                       
         DC    C'PER',CL13'PERDIR/PERFIL'                                       
         DC    C'PRT',CL13'PRTDIR/PRTFIL'                                       
         DC    C'PUB',CL13'PUBDIR/PUBFIL'                                       
         DC    C'REP',CL13'REPDIR/REPFIL'                                       
         DC    C'SPT',CL13'SPTDIR/SPTFIL'                                       
         DC    C'STA',CL13'STAFIL'                                              
         DC    C'TAL',CL13'TALDIR/TALFIL'                                       
         DC    C'UNT',CL13'UNTDIR/UNTFIL'                                       
*&&                                                                             
SYSLISTX DC    X'00'                                                            
         SPACE 1                                                                
         LTORG                                                                  
         EJECT                                                                  
* READ A SET OF INPUT PARAMETER CARDS                                           
*                                                                               
GETPARM  CSECT                                                                  
         NMOD1 0,**GETP**                                                       
         LR    RA,R1                                                            
         USING PARMTBL,RA          RA=A(DMLDMOD CSECT'S STORAGE)                
         LR    RC,R0                                                            
         USING DPRINT,RC           RC=A(DMLDMOD CSECT'S PRINTER)                
         CLI   ERRNUM,0                                                         
         BNE   GPERR                                                            
         CLI   FRSTTIME,C'X'       WAS LAST SET TERMINATED WITH /* CARD         
         BE    GPEOJ               YES EOJ                                      
         BH    *+10                                                             
         ZAP   LINE,=P'99'                                                      
         MVC   P(15),=C'PARAMETER CARDS'                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),=16C'-'                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LR    R1,RA               POINT TO THIS CSECT'S STORAGE                
         LR    R0,RC               POINT TO THIS CSECT'S CPRINT                 
         L     RF,=A(VALPARM)                                                   
         BASR  RE,RF                                                            
         CLI   ERRNUM,0                                                         
         BNE   GPERR               ERROR FOUND IN CARD                          
         L     R2,VLDDEFN                                                       
*                                                                               
         LA    R4,PARMTBL          CHECK FOR REQUIRED & OPTIONAL PARMS          
GP2      TM    2(R4),X'80'                                                      
         BZ    GP2A                                                             
         CLI   0(R4),0             WAS REQUIRED PARM INPUT                      
         BNE   GP2B                YES                                          
GP2A     CLI   0(R4),0             WAS OPTIONAL PARM INPUT                      
         BNE   GP2B                YES                                          
         MVC   0(1,R4),1(R4)       NO- SET DEFAULT VALUE                        
GP2B     LA    R4,L'PARMTBL(R4)                                                 
         CLI   0(R4),X'FF'                                                      
         BNE   GP2                                                              
*                                                                               
GP3      OC    LDDDTFDA,LDDDTFDA   TEST MODE COMPATIBLE FOR FILES               
         BNZ   GP3A                                                             
         NI    MODE,255-DAFIL-ISFIL                                             
         OI    MODE,ISFIL          SET MODE IF NO DA FILE IN DEFN               
         B     GP3X                                                             
*                                                                               
GP3A     TM    INPUT,TAPE          ADJUST MODE IF TAPE COPY                     
         BZ    GP3B                                                             
         TM    OUTPUT,TAPE                                                      
         BZ    GP3B                                                             
         TM    MODE,DAFIL+ISFIL    ASSUME DA FILE UNLESS COPYD                  
         BNO   GP3B                                                             
         NI    MODE,255-ISFIL                                                   
*                                                                               
GP3B     TM    LDDMULTI,LDDQDA2+LDDQDA4 TEST MODE FOR MULTI DA FILES            
         BZ    GP3X                                                             
         TM    MODE,DAFIL          CAN USE COPYD FOR ISFILE ONLY                
         BZ    GP3X                                                             
         TM    MODE,FILE1234                                                    
         BNZ   GP3B2                                                            
GP3B1    LA    R1,MODE+4           MUST USE COPYN ETC                           
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
GP3B2    TM    OUTPUT,DISK         LOADING TO DISK                              
         BZ    GP3X                NO                                           
         TM    MODE,FILE1234       YES TEST IF ONLY ONE DA FILE                 
         BNZ   GP3X                NO                                           
         TM    LDDMULTI,LDDQDPTR   TEST DA DUMP HAS IS RECORDS                  
         BO    GP3X                                                             
         NI    MODE,255-ISFIL      YES THEN DONT LOAD IS FILE                   
         TM    DIR,YES             AND REQUIRE A DIR COPY PARAMETER             
         BO    GP3X                                                             
         LA    R1,DIR+4            SET MISSING DIR= PARM                        
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,1                                                         
         B     GPERR                                                            
*                                                                               
GP3X     EQU   *                                                                
*                                                                               
GP4      TM    MODE,REPORT         MODE=REPORT INPUT/OUTPUT OPTIONS             
         BZ    GP4C                                                             
         TM    INPUT,TAPE          ADJUST MODE IF REPORT FROM TAPE              
         BZ    GP4A                                                             
         TM    MODE,DAFIL+ISFIL    ASSUME REPORTF FOR REPORT                    
         BNO   GP4A                                                             
         NI    MODE,255-ISFIL                                                   
GP4A     CLI   OUTPUT,0            CANT HAVE OUTPUT IF MODE=REPORT              
         BE    GP4E                                                             
GP4B     LA    R1,OUTPUT+4         SET ERROR IN OUTPUT= PARM                    
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
*                                                                               
GP4C     TM    INPUT,DISK          MODE=COPY INPUT/OUTPUT OPTIONS               
         BZ    GP4D                                                             
         TM    OUTPUT,DISK                                                      
         BO    GP4B                CANT HAVE OUTPUT=DISK IF INPUT=DISK          
         OI    OUTPUT,TAPE                                                      
         B     GP4E                                                             
GP4D     CLI   OUTPUT,0            SET DEFAULT OUTPUT FOR INPUT=TAPE            
         BNE   GP4E                                                             
         OI    OUTPUT,DISK                                                      
*                                                                               
GP4E     TM    INPUT,TAPEPHYS      CANT HAVE IS PHYSICAL TAPE INPUT             
         BZ    GP4F                                                             
         TM    MODE,DAFIL                                                       
         BZ    GP4G                                                             
GP4F     TM    INPUT,DISK          CANT HAVE DA DISK ONLY INPUT                 
         BZ    GP4X                                                             
         TM    MODE,ISFIL                                                       
         BO    GP4X                                                             
GP4G     LA    R1,INPUT+4          SET ERROR IN INPUT= PARM                     
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     GPERR                                                            
GP4X     EQU   *                                                                
*                                                                               
GP5      LA    R1,ISFILE+4         ALL FILE NAMES MAX SEVEN CHRS                
         CLI   ISFILEID+7,C' '                                                  
         BNE   GP5E+4                                                           
         LA    R1,DAFILE+4                                                      
         CLI   DAFILEID+7,C' '                                                  
         BNE   GP5E+4                                                           
         LA    R1,D2FILE+4                                                      
         CLI   D2FILEID+7,C' '                                                  
         BNE   GP5E+4                                                           
         LA    R1,D3FILE+4                                                      
         CLI   D3FILEID+7,C' '                                                  
         BNE   GP5E+4                                                           
         LA    R1,D4FILE+4                                                      
         CLI   D4FILEID+7,C' '                                                  
         BNE   GP5E+4                                                           
         TM    DAFILE+2,X'80'      DA & IS NAMES MUST BE COMPATIBLE             
         BZ    GP5X                                                             
         TM    ISFILE+2,X'80'      NAMES MUST BE OF FORMAT XXX...X              
         BZ    GP5X                                                             
GP5A     CLC   DAFILEID(3),ISFILEID                                             
         BNE   GP5E                                                             
         CLC   DAFILEID+6(1),ISFILEID+6                                         
         BNE   GP5E                                                             
GP5B     TM    D2FILE+2,X'80'      TEST IF DA FILE 2 NAME REQUIRED              
         BZ    GP5C                                                             
         CLC   D2FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D2FILEID+6(1),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D2FILE+4                                                      
         B     GP5E+4                                                           
GP5C     TM    D3FILE+2,X'80'      TEST IF DA FILE 3 NAME REQUIRED              
         BZ    GP5D                                                             
         CLC   D3FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D3FILEID+6(1),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D3FILE+4                                                      
         B     GP5E+4                                                           
GP5D     TM    D4FILE+2,X'80'      TEST IF DA FILE 4 NAME REQUIRED              
         BZ    GP5X                                                             
         CLC   D4FILEID(3),DAFILEID                                             
         BNE   GP5E                                                             
         CLC   D4FILEID+6(1),DAFILEID+6                                         
         BE    GP5X                                                             
         LA    R1,D4FILE+4                                                      
         B     GP5E+4                                                           
GP5E     LA    R1,DAFILE+4         SET ERROR IN DAFILE= PARM                    
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4            INVALID VALUE FOR PARM                       
         B     GPERR                                                            
GP5X     EQU   *                                                                
*                                                                               
GP6      CLI   TCOPY,0             COPY= PARM ONLY IF OUTPUT=TAPE               
         BE    GP6X                                                             
         TM    OUTPUT,TAPE                                                      
         BO    GP6X                                                             
         LA    R1,TCOPY+4                                                       
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,3            INVALID PARM                                 
         B     GPERR                                                            
GP6X     EQU   *                                                                
*                                                                               
GP7      CLI   DIR,0               DIR= PARM ONLY IF OUTPUT=DISK                
         BE    GP7X                                                             
         TM    OUTPUT,DISK                                                      
         BZ    GP7A                                                             
         TM    MODE,DAFIL          AND A DA FILE IS OUTPUT                      
         BO    GP7X                                                             
GP7A     LA    R1,DIR+4                                                         
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,3            INVALID PARM                                 
         B     GPERR                                                            
GP7X     EQU   *                                                                
*                                                                               
GP8      CLI   LOGO,C'N'           LOGO=NO                                      
         BNE   GP8X                                                             
         ICM   RF,15,=V(LOGO)                                                   
         BZ    GP8X                                                             
         MVC   0(2,RF),=X'07FE'    NO-OP THE LOGOS                              
GP8X     EQU   *                                                                
*                                                                               
         B     GETPARMX                                                         
*                                                                               
GPERR    L     R1,ERRNUM           POINT TO ERROR INFO WORD                     
*                                                                               
GPERR1   CLI   ERRNUM,1            HIGH ORDER BYTE HAS ERR NUM                  
         BNE   GPERR2                                                           
         L     RF,=A(ERRMSG1)      MISSING PARAM                                
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+32(8),0(R1)                                              
         B     GPERRA                                                           
*                                                                               
GPERR2   CLI   ERRNUM,2                                                         
         BNE   GPERR3                                                           
         L     RF,=A(ERRMSG2)      INVALID SYNTAX                               
         MVC   OPERMSG,0(RF)                                                    
         B     GPERRA                                                           
*                                                                               
GPERR3   CLI   ERRNUM,3                                                         
         BNE   GPERR4                                                           
         L     RF,=A(ERRMSG3)      INVALID PARAM                                
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+32(8),0(R1)                                              
         B     GPERRA                                                           
*                                                                               
GPERR4   CLI   ERRNUM,4                                                         
         BNE   GPERR5                                                           
         L     RF,=A(ERRMSG4)      INVALID VALUE FOR PARAM                      
         MVC   OPERMSG,0(RF)                                                    
         MVC   OPERMSG+42(8),0(R1)                                              
         B     GPERRA                                                           
*                                                                               
GPERR5   DC    H'0'                DIE IF UNKNOWN ERROR                         
*                                                                               
GPERRA   GOTO1 =V(PRINTER)         DISPLAY AND PRINT ERROR MESSAGE              
         GOTO1 =V(LOGIO),DMCB,1,(60,OPERMSG)                                    
         MVC   P(L'OPERMSG),OPERMSG                                             
         GOTO1 =V(PRINTER)                                                      
         CLI   FRSTTIME,C'X'       FLUSH AND PRINT REMAINING CARDS              
         BE    GPERRX                                                           
*                                                                               
GPERRB   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLC   C(2),=C'/*'                                                      
         BE    GPERRX                                                           
         MVC   P(80),C                                                          
         GOTO1 =V(PRINTER)                                                      
         B     GPERRB                                                           
*                                                                               
GPERRX   SR    R1,R1               ABEND WITH 200 SERIES COMPLETION             
         IC    R1,ERRNUM                                                        
         LA    R1,200(R1)                                                       
         ABEND (1)                                                              
*                                                                               
GPEOJ    MVI   EOJFLAG,C'Y'        SET NO MORE PARAMETER CARDS                  
*                                                                               
GETPARMX XIT1                                                                   
         SPACE 1                                                                
         LTORG                                                                  
         EJECT                                                                  
* READ/PRINT/VALIDATE A SET OF PARAMETER CARDS                                  
*                                                                               
VALPARM  CSECT                                                                  
         NMOD1 0,**VALP**                                                       
         LR    RA,R1                                                            
         USING PARMTBL,RA          RA=A(DMLDMOD CSECT'S STORAGE)                
         LR    RC,R0                                                            
         USING DPRINT,RC           RC=A(DMLDMOD CSECT'S PRINTER)                
*                                                                               
         LA    R1,MODE+4           CLEAR ERRNUM AND SET A(PARMTBL NTRY)         
         ST    R1,ERRNUM                                                        
         CLI   FRSTTIME,C'Y'       READ FIRST CARD                              
         BNE   VPARM1A                                                          
         MVI   FRSTTIME,C'N'                                                    
*                                                                               
VPARM1   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
*                                                                               
VPARM1A  MVC   P(80),C                                                          
         CLC   C(5),=CL8'DATE='    FIRST CARD CAN BE DATE=DD/MM/YY              
         BNE   VPARM2                                                           
         ICM   RF,15,=V(DATVAL)                                                 
         BZ    VPARM1B                                                          
         GOTO1 (RF),DMCB,(0,C+5),DUB                                            
         OC    0(4,R1),0(R1)                                                    
         BNZ   VPARM1B                                                          
         LA    R1,=CL8'DATE='                                                   
         ST    R1,ERRNUM                                                        
         MVI   ERRNUM,4                                                         
         B     VPARMX                                                           
VPARM1B  MVC   DATEVAL,C+5         OVERRIDE SYSTEM DATE                         
         ICM   RF,15,=V(DATCON)                                                 
         BZ    VPARM1C                                                          
         GOTO1 (RF),DMCB,(4,DATEVAL),(0,DATEYMD)                                
         MVC   SPECDATE(5),C       SPECIAL DATE=YYMMDD FOR V(PRINTER)           
         MVC   SPECDATE+5(6),DATEYMD                                            
VPARM1C  GOTO1 =V(PRINTER)                                                      
         B     VPARM1                                                           
*                                                                               
VPARM2   CLC   C(2),MODE+4         FIRST CARD OF SET MUST BE MODE CARD          
         BE    *+12                                                             
         MVI   ERRNUM,1                                                         
         B     VPARMX                                                           
         LA    R1,PARMTBL          INITIALIZE VALUES                            
         CLI   0(R1),X'FF'                                                      
         BE    VPARM4                                                           
         MVI   0(R1),0                                                          
         LA    R1,L'PARMTBL(R1)                                                 
         B     *-16                                                             
VPARM4   L     RE,=A(STRKEY)                                                    
         XC    0(ISMAX,RE),0(RE)                                                
         L     RE,=A(ENDKEY)                                                    
         XC    0(ISMAX,RE),0(RE)                                                
         MVC   MAXIOS,=X'7FFFFFFF'                                              
         L     RE,=A(PARMCARD)                                                  
         MVC   0(80,RE),SPACES                                                  
         MVC   DAFILEID,DAFILEIX                                                
         MVC   D2FILEID,D2FILEIX                                                
         MVC   D3FILEID,D3FILEIX                                                
         MVC   D4FILEID,D4FILEIX                                                
         MVC   ISFILEID,ISFILEIX                                                
         MVC   PHFILEID,SPACES                                                  
         MVC   XTRNNAME,SPACES                                                  
         MVC   UPSIVAL,UPSIINP                                                  
         B     VPARM8                                                           
*                                                                               
VPARM6   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLC   C(2),=C'/*'                                                      
         BNE   *+12                                                             
         MVI   FRSTTIME,C'X'                                                    
         B     VPARMX                                                           
         CLC   C(2),MODE+4                                                      
         BE    VPARMX                                                           
*                                                                               
VPARM8   MVI   FLAG1,0             BUILD SINGLE EXTENDED SCANNER BLOCK          
         MVC   P(80),C                                                          
         MVC   C+72(8),SPACES                                                   
         LA    R2,DAREC                                                         
         XC    0(12,R2),0(R2)                                                   
         MVC   12(90,R2),SPACES                                                 
         LA    RE,C                FIND FIRST PARAM                             
         LA    RF,9                                                             
         CLI   0(RE),C'='                                                       
         BE    VPARM8B                                                          
         LA    RE,1(RE)                                                         
         BCT   RF,*-12                                                          
VPARM8A  MVI   ERRNUM,2                                                         
         B     VPARMX                                                           
VPARM8B  LR    RF,RE                                                            
         LA    R1,C                                                             
         SR    RF,R1                                                            
         STC   RF,0(R2)                                                         
         SH    RF,=H'1'                                                         
         BNP   VPARM8A                                                          
         EX    RF,*+8              MOVE LEFT SIDE                               
         B     *+10                                                             
         MVC   12(0,R2),C                                                       
         LA    R1,69                                                            
         SR    R1,RF                                                            
         EX    R1,*+8              MOVE RIGHT SIZE                              
         B     *+10                                                             
         MVC   22(0,R2),1(RE)                                                   
         CLC   22(80,R2),SPACES                                                 
         BE    *+8                                                              
         MVI   1(R2),4                                                          
         LA    R0,1                                                             
         B     VPARMA                                                           
*                                                                               
VPARM9   MVI   FLAG1,1                                                          
         LA    R2,DAREC                                                         
         GOTO1 =V(SCANNER),DMCB,(C'C',C),(R2)                                   
         CLI   4(R1),0                                                          
         BNE   *+12                                                             
         MVI   ERRNUM,2            INVALID SYNTAX                               
         B     VPARMX                                                           
         SR    R0,R0                                                            
         IC    R0,4(R1)            R0=NUM OF PARMS ON CARD                      
*                                                                               
VPARMA   LA    R1,12(R2)           POINT TO KEYWORD NAME                        
         ST    R1,ERRNUM                                                        
         CLI   0(R2),2             MUST BE 2 TO 8 CHRS LONG                     
         BNL   *+12                                                             
VPARMB   MVI   ERRNUM,3                                                         
         B     VPARMX                                                           
         CLI   0(R2),8                                                          
         BH    VPARMB                                                           
         LA    R4,PARMTBL          SEARCH FOR KEYWORD IN TABLE                  
         SR    RF,RF                                                            
         IC    RF,0(R2)            MATCH ON 2 THRU N CHRS                       
         BCTR  RF,0                                                             
VPARMC   EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   12(0,R2),4(R4)                                                   
         BE    VPARMC1                                                          
         LA    R4,L'PARMTBL(R4)                                                 
         CLI   0(R4),X'FF'                                                      
         BE    VPARMB                                                           
         B     VPARMC                                                           
VPARMC1  TM    2(R4),X'01'         IS PARAM A SINGLE CARD                       
         BO    VPARMC2             YES                                          
         CLI   FLAG1,0             NO RESCAN TO FETCH OTHERS                    
         BE    VPARM9                                                           
         B     VPARMD                                                           
VPARMC2  CLI   FLAG1,0             SINGLE MUST BE FIRST                         
         BNE   VPARMB                                                           
*                                                                               
VPARMD   CLC   1(1,R2),3(R4)       KEYWORD VALUE MUST BE N THRU 10 CHRS         
         BNL   *+12                                                             
VPARME   MVI   ERRNUM,4                                                         
         B     VPARMX                                                           
         CLI   1(R2),10                                                         
         BH    VPARME                                                           
         SR    RE,RE                                                            
         IC    RE,1(R2)                                                         
         BCTR  RE,0                                                             
         L     RF,12(R4)                                                        
         TM    2(R4),X'40'         KEYWORD VALUE IN LIST                        
         BO    VPARMF              YES                                          
         TM    2(R4),X'20'         KEYWORD VALUE BY ROUTINE                     
         BO    VPARMG              YES                                          
         MVC   0(8,RF),22(R2)      KEYWORD VALUE BY VALUE                       
         MVI   0(R4),YES                                                        
         B     VPARMV                                                           
*                                                                               
VPARMF   CLI   0(RF),X'FF'         SEARCH VALUE LIST                            
         BE    VPARME                                                           
         EX    RE,*+8              MATCH ON N THRU 9 CHRS                       
         B     *+10                                                             
         CLC   1(0,RF),22(R2)                                                   
         BE    *+12                                                             
         LA    RF,11(RF)                                                        
         B     VPARMF                                                           
         MVC   0(1,R4),0(RF)       SAVE VALUE IN PARMTBL                        
         B     VPARMV                                                           
*                                                                               
VPARMG   BASR  RE,RF               GO TO ROUTINE WITH R2=A(SCAN ENTRY)          
         CLI   ERRNUM,0                                                         
         BNE   VPARMX                                                           
         B     VPARMV                                                           
*                                                                               
VPARMV   LA    R2,32(R2)           BUMP TO NEXT PARM                            
         BCT   R0,VPARMA                                                        
*                                                                               
VPARMW   GOTO1 =V(PRINTER)         PRINT CARD                                   
         B     VPARM6              GO GET NEXT PARM CARD                        
*                                                                               
VPARMX   XIT1                                                                   
         EJECT                                                                  
* PARAMETER VALIDATION ROUTINES                                                 
*                                                                               
VALD1F   MVC   DAFILEID,22(R2)     D1FILE IS SYNONYM FOR DAFILE                 
         MVI   DAFILE,YES                                                       
         BR    RE                                                               
         SPACE 2                                                                
VALDBF   MVC   D2FILEID,22(R2)     DBFILE IS SYNONYM FOR D2FILE                 
         MVI   D2FILE,YES                                                       
         BR    RE                                                               
         SPACE 2                                                                
VALP     L     RF,=A(PARMCARD)                                                  
         MVI   0(R4),YES                                                        
         MVC   0(80,RF),22(R2)                                                  
         BR    RE                                                               
         SPACE 2                                                                
VALBLKSZ ICM   R5,15,8(R2)        BLKSIZE= SHOULD BE NUMERIC                    
         BZ    BADBLKSZ                                                         
         C     R5,=F'32767'                                                     
         BH    BADBLKSZ                                                         
         L     R5,=A(TAPEOUT)                                                   
         MVC   62(2,R5),10(R2)    OVERRIDE DCB BLKSIZE                          
         L     R5,=A(TAPECPY)                                                   
         MVC   62(2,R5),10(R2)    OVERRIDE DCB BLKSIZE                          
         BR    RE                                                               
BADBLKSZ MVI   ERRNUM,4                                                         
         BR    RE                                                               
         SPACE 2                                                                
VALK     NTR1                                                                   
         SR    R5,R5                                                            
         IC    R5,0(R4)                                                         
         LA    RE,1(R5)                                                         
         STC   RE,0(R4)                                                         
         CLI   0(R4),MAXKEY                                                     
         BNH   *+12                                                             
         MVI   ERRNUM,3                                                         
         B     VALKX                                                            
         MH    R5,=Y(L'STRKEY+L'ENDKEY)                                         
         A     R5,=A(STRKEY)                                                    
         CLC   12(2,R2),=C'ST'                                                  
         BE    *+8                                                              
         LA    R5,L'STRKEY(R5)                                                  
         IC    R0,ISKEYL+1                                                      
         IC    RF,ISFILL                                                        
         GOTO1 =V(DECODE),DUB,((R0),22(R2)),((RF),(R5))                         
         CLI   4(R1),0                                                          
         BE    *+8                                                              
         MVI   ERRNUM,4                                                         
VALKX    XIT1                                                                   
         SPACE 2                                                                
VALMAX   TM    3(R2),X'80'                                                      
         BZ    VALMAX2                                                          
         L     R5,8(R2)                                                         
         LTR   R5,R5                                                            
         BNP   VALMAX2                                                          
         ST    R5,MAXIOS                                                        
         B     *+8                                                              
VALMAX2  MVI   ERRNUM,4                                                         
         BR    RE                                                               
         SPACE 2                                                                
VALWORK  CLI   1(R2),1             NUM OF WORK FILES 1 THRU 9                   
         BNE   VALWORK2                                                         
         CLI   22(R2),C'1'                                                      
         BL    VALWORK2                                                         
         CLI   22(R2),C'9'                                                      
         BH    VALWORK2                                                         
         MVC   0(1,R4),22(R2)      SET WORKF TO NUM OF WORK FILES               
         B     *+8                                                              
VALWORK2 MVI   ERRNUM,4                                                         
         BR    RE                                                               
         SPACE 2                                                                
VALPEEL  NTR1                                                                   
         ICM   R5,15,8(R2)         PEEL=                                        
         BZ    VALPEEL2            NOT NUMERIC                                  
         LNR   R5,R5                                                            
         GOTO1 =V(DATCON),DMCB,(5,DUB),(0,DUB)                                  
         GOTO1 =V(ADDAY),DMCB,DUB,WORK,(R5)                                     
         GOTO1 =V(DATCON),DMCB,(0,WORK),(2,PEELDATE)                            
         B     *+8                                                              
VALPEEL2 MVI   ERRNUM,4                                                         
         XIT1                                                                   
         SPACE 2                                                                
VALUPSI  NTR1                      UPSI IS A MAX OF 8 BINARY DIGITS             
         MVI   0(R4),YES                                                        
         MVI   UPSIVAL,0                                                        
         CLI   1(R2),8                                                          
         BH    VALUPSI3                                                         
         ZIC   R0,1(R2)            R0=NUM OF DIGITS                             
         SR    R1,R1               R1=REL DIGIT NUM                             
         LA    RE,22(R2)           RE=ADR DIGIT                                 
VALUPSI1 CLI   0(RE),C'0'                                                       
         BE    VALUPSI2                                                         
         CLI   0(RE),C'1'                                                       
         BNE   VALUPSI3                                                         
         IC    RF,VALUPSIT(R1)                                                  
         EX    RF,*+8                                                           
         B     *+8                                                              
         OI    UPSIVAL,X'00'                                                    
VALUPSI2 A     RE,=F'1'                                                         
         A     R1,=F'1'                                                         
         CR    R1,R0                                                            
         BL    VALUPSI1                                                         
         B     *+8                                                              
VALUPSI3 MVI   ERRNUM,4                                                         
         XIT1                                                                   
VALUPSIT DC    X'8040201008040201'                                              
         SPACE 1                                                                
         LTORG                                                                  
         EJECT                                                                  
         DS    0D                                                               
         DC    C'*SSB*SSB'                                                      
SSB      DC    XL2'00',X'FF',XL5'00',XL248'00'                                  
         DS    0D                                                               
         DC    C'*UTL*UTL'                                                      
UTL      DC    XL256'00'                                                        
         EJECT                                                                  
*DMLDDEFN                                                                       
       ++INCLUDE DMLDDEFN                                                       
         EJECT                                                                  
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
         EJECT                                                                  
*DMDTFIS                                                                        
       ++INCLUDE DMDTFIS                                                        
         EJECT                                                                  
*FASSBOFF                                                                       
       ++INCLUDE FASSBOFF                                                       
         EJECT                                                                  
*DDDPRINT                                                                       
       ++INCLUDE DDDPRINT                                                       
         SPACE 2                                                                
*DMGREQUS                                                                       
       ++INCLUDE DMGREQUS                                                       
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'012DMLDMODS  05/01/02'                                      
         END                                                                    
