*          DATA SET JSHCNVX    AT LEVEL 035 AS OF 12/11/02                      
*CATALP AXCNVX                                                                  
         PRINT NOGEN                                                            
         TITLE 'AXCNVX - ROUTINES CONVERT DDS FIELDS TO SQL FORMAT'             
***********************************************************************         
* NTRY: P1 B0   = C'L' FOR LOAD MODE                                  *         
*               = C'U' FOR UPDATE MODE                                *         
*          B1-3 = A(UNCONVERTED RECORD)                               *         
*                                                                     *         
*       P2 B0   = PLATFORM EQUATE NUMBER                              *         
*          B1-3 = A(CONVERTED RECORD BUFFER)                          *         
*                                                                     *         
*       P3 B0   = C'K' IF BUILD MODE IS FOR KILL RECORD               *         
*          B1-3 = A(3 CHARACTER RECORD TYPE)                          *         
*                                                                     *         
*       P4 B0-3 = A(VERSION NUMBER)                                   *         
***********************************************************************         
         SPACE 1                                                                
AXCNVX   CSECT                                                                  
         NMOD1 WORKL,*AXCNVX*,RA,CLEAR=YES                                      
         USING WORKD,RC                                                         
         ST    R1,APARM                                                         
         MVC   PARM,0(R1)          EXTRACT PARAMETER LIST                       
         LM    R3,R5,0(R1)                                                      
*                                                                               
         XC    0(4,R4),0(R4)       CLEAR CONVERT RECORD AREA LENGTH             
         LA    R4,4(R4)                                                         
         ST    R4,ANOW             SET A(FIRST DATA)                            
*                                                                               
         L     RF,AVERSION         GET VERSION NUMBER                           
         MVC   VERSION,0(RF)                                                    
*                                                                               
         MVI   LOADMODE,C'Y'                                                    
         MVI   SEPARATE,C';'                                                    
*                                                                               
*        CLI   MODE,C'U'                                                        
*        BNE   *+8                                                              
*        MVI   LOADMODE,C'U'                                                    
*                                                                               
         MVI   KILLMODE,C'N'                                                    
         CLI   ALLOUT,C'K'                                                      
         BNE   *+8                                                              
         MVI   KILLMODE,C'Y'                                                    
         LA    RF,RECTAB           RECORD TYPE TABLE                            
*                                                                               
MAIN02   CLI   0(RF),0             E.O.T.                                       
         BE    EXIT                                                             
         CLC   0(3,RF),0(R5)       TRY TO MATCH MNEMONICS                       
         BE    MAIN06                                                           
*                                                                               
MAIN04   LA    RF,L'RECTAB(RF)                                                  
         B     MAIN02                                                           
*                                                                               
MAIN06   ICM   R6,15,3(RF)         DIFFERENT PLATFORMS HERE                     
         XR    R9,R9                                                            
         ICM   R9,3,0(R6)                                                       
         AR    R9,R6               R9=A(END OF SYTAB ENTRY)                     
         BCTR  R9,0                NEEDED FOR BXLE BELOW...                     
         LA    R8,RECTYPLQ         R8=LENGTH OF EACH DATA SECTION               
         LA    R6,2(R6)            FIRST DATA                                   
*                                                                               
         USING RECTYPD,R6                                                       
MAIN08   LA    RE,FCNVTAB          CONVERSION ROUTINE TABLE                     
         USING FCNVTABD,RE                                                      
*                                                                               
MAIN10   CLI   0(RE),0                                                          
         BE    EXIT                                                             
         CLC   RECCNVT,FCNVTYPE    MATCH TYPE NAME                              
         BNE   MAIN12                                                           
         CLC   PLATFORM,FCNVFMT    MATCH DATABASE FORMAT                        
         BE    MAIN14                                                           
*                                                                               
MAIN12   LA    RE,FCNVTABL(RE)                                                  
         B     MAIN10                                                           
*                                                                               
MAIN14   XR    R2,R2                                                            
         IC    R2,RECLEN           GET LENGTH OF INPUT                          
         XR    R3,R3                                                            
         IC    R3,RECDISP                                                       
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,7,AEXTRACT                                                    
         AR    R3,RF               R3=A(DATA IN UNCONVERTED RECORD)             
         L     R4,ANOW             R4=A(BUILD AREA IN CONVERTED RECORD)         
*                                                                               
         MVI   OPTIONAL,C'N'                                                    
         LA    RF,RECREQN          FOR NORMAL BUILD                             
         CLI   KILLMODE,C'Y'       'KILL' MODE                                  
         BNE   *+8                 NO                                           
         LA    RF,RECREQK          FOR 'KILL' BUILD                             
         CLI   0(RF),OPT                                                        
         BNE   *+8                                                              
         MVI   OPTIONAL,C'Y'                                                    
*                                                                               
         CLC   RECVRSN,VERSION     MAKE SURE FOR THIS VERSION                   
         BH    MAIN16              NO                                           
*                                                                               
         ICM   RF,15,FCNVROUT                                                   
         BASR  RE,RF               BRANCH TO PROCESSING ROUTINE                 
         BAS   RE,PUTSEP           PUT IN SEPARATOR                             
*                                                                               
MAIN16   BXLE  R6,R8,MAIN08        DO FOR ALL DATA                              
         DROP  R6,RE                                                            
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,7,ASQLBUFF                                                    
         L     R4,ANOW                                                          
         SR    R4,RF                                                            
         SLL   R4,16                                                            
         STCM  R4,15,0(RF)                                                      
*                                                                               
EXIT     XMOD1 ,                                                                
         EJECT                                                                  
***********************************************************************         
* CONVERT CHARACTER STRING TO SYBASE FORMAT                           *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
CHARSYB  NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    CHSY04                                                           
         LA    RF,0(R2,R3)                                                      
*                                                                               
CHSY02   BCTR  RF,0                DROP TRAILING SPACES                         
         CLI   0(RF),C' '                                                       
         BNE   CHSY08                                                           
         BCT   R2,CHSY02                                                        
*                                                                               
CHSY04   CLI   OPTIONAL,C'Y'                                                    
         BE    CHSY06                                                           
         MVI   0(R4),C' '          RETURN SINGLE SPACE IF ALL SPACES            
         LA    R4,1(R4)            AND REQUIRED FIELD                           
         LA    R2,1(R2)                                                         
         B     CHSY10                                                           
*                                                                               
CHSY06   BAS   RE,NULLSYB          RETURN NULL CODE IF OPTIONAL FIELD           
         B     XIT                                                              
*                                                                               
CHSY08   BCTR  R2,0                MOVE CHARACTERS TO OUTPUT BUFFER             
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R4,R2                                                            
*                                                                               
CHSY10   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    R2,2(R2)                                                         
         STC   R2,OUTPUTL          SAVE OUTPUT BUFFER LENGTH                    
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT TINY INTEGER TO SYBASE FORMAT                               *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
TINTSYB  NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    TISY14                                                           
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
TISY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   TISY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,TISY02                                                        
         B     TISY10              FIELD CONTAINS ZERO                          
*                                                                               
TISY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   TISY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
TISY06   LTR   R0,R2               R0 = LENGTH LEFT TO VALIDATE                 
         LR    RF,R3               RF = A(FIRST CHARACTER)                      
*                                                                               
TISY08   CLI   0(RF),C'0'                                                       
         BL    TISY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    TISY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,TISY08                                                        
         B     TISY12                                                           
*                                                                               
TISY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    TISY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    TISY14                                                           
*                                                                               
TISY12   CH    R2,=H'3'            MAXIMUM 3 NUMERIC DIGITS                     
         BH    TISY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
TISY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    TISY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
TISY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT SMALL INTEGER TO SYBASE FORMAT                              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
SINTSYB  NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    SISY14                                                           
*                                                                               
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
SISY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   SISY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,SISY02                                                        
         B     SISY10              FIELD CONTAINS ZERO                          
*                                                                               
SISY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   SISY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
SISY06   LR    R0,R2               ENSURE CHARACTERS ARE ALL NUMERIC            
         LR    RF,R3                                                            
*                                                                               
SISY08   CLI   0(RF),C'0'                                                       
         BL    SISY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    SISY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,SISY08                                                        
         B     SISY12                                                           
*                                                                               
SISY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    SISY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    SISY14                                                           
*                                                                               
SISY12   CH    R2,=H'5'            MAXIMUM 5 NUMERIC DIGITS                     
         BH    SISY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
SISY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    SISY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
SISY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT INTEGER TO SYBASE FORMAT                                    *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
INTSYB   NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    INSY14                                                           
*                                                                               
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
INSY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   INSY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,INSY02                                                        
         B     INSY10              FIELD CONTAINS ZERO                          
*                                                                               
INSY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   INSY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
INSY06   LR    R0,R2               ENSURE CHARACTERS ARE ALL NUMERIC            
         LR    RF,R3                                                            
*                                                                               
INSY08   CLI   0(RF),C'0'                                                       
         BL    INSY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    INSY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,INSY08                                                        
         B     INSY12                                                           
*                                                                               
INSY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    INSY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    INSY14                                                           
*                                                                               
INSY12   CH    R2,=H'10'           MAXIMUM 10 NUMERIC DIGITS                    
         BH    INSY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
INSY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    INSY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
INSY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT REAL TO SYBASE FORMAT                                       *         
* PROCESSES UPTO 7 DIGITS WITH 2 DECIMAL PLACES IMPLIED               *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
REALSYB  NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    RESY14                                                           
*                                                                               
         SH    R2,=Y(2)            LAST 2 FIELDS ARE AFTER DP                   
RESY02   CLI   0(R2),C'0'                                                       
         BNE   RESY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,RESY02                                                        
*                                                                               
         MVI   0(R4),C'0'          VALUE IS 0.XX                                
         LA    R4,1(R4)                                                         
         B     RESY12                                                           
*                                                                               
RESY04   MVI   SIGNFLAG,0          LOOK FOR PREFIX SIGN                         
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   RESY06                                                           
*                                                                               
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
*                                                                               
RESY06   LTR   R0,R2                                                            
         BP    *+16                                                             
         MVI   0(R4),C'0'          VALUE IS +/-0.XX                             
         LA    R4,1(R4)                                                         
         B     RESY12                                                           
*                                                                               
         LR    RF,R3                                                            
*                                                                               
RESY08   CLI   0(RF),C'1'                                                       
         BL    RESY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    RESY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,RESY08                                                        
*                                                                               
RESY10   C     R2,=F'5'                                                         
         BH    RESY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
RESY12   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(2,R4),0(R3)       MOVE OUT 2 DECIMAL PLACES OF DIGITS          
         LA    R2,3(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
RESY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    RESY16                                                           
         MVC   0(4,R4),=C'0.00'    FIELD REQUIRED                               
         MVI   OUTPUTL,4                                                        
         B     XIT                                                              
*                                                                               
RESY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT FLOAT TO SYBASE FORMAT                                      *         
* PROCESSES UPTO 15 DIGITS WITH 4 DECIMAL PLACES IMPLIED              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
FLOATSYB NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    FLSY14                                                           
         SH    R2,=Y(4)            LAST 4 FIELDS ARE AFTER DP                   
*                                                                               
FLSY02   CLI   0(R2),C'0'                                                       
         BNE   FLSY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,FLSY02                                                        
*                                                                               
         MVI   0(R4),C'0'          VALUE IS 0.XXXX                              
         LA    R4,1(R4)                                                         
         B     FLSY12                                                           
*                                                                               
FLSY04   MVI   SIGNFLAG,0          LOOK FOR PREFIX SIGN                         
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   FLSY06                                                           
*                                                                               
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
*                                                                               
FLSY06   LTR   R0,R2                                                            
         BP    *+16                                                             
         MVI   0(R4),C'0'          VALUE IS +/-0.XXXX                           
         LA    R4,1(R4)                                                         
         B     FLSY12                                                           
*                                                                               
         LR    RF,R3                                                            
*                                                                               
FLSY08   CLI   0(RF),C'1'                                                       
         BL    FLSY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    FLSY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,FLSY08                                                        
*                                                                               
FLSY10   C     R2,=F'11'                                                        
         BH    FLSY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
FLSY12   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(4,R4),0(R3)       AND 4 DECIMAL PLACES                         
         LA    R2,5(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
FLSY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    FLSY16                                                           
         MVC   0(6,R4),=C'0.0000'  REQUIRED                                     
         MVI   OUTPUTL,6                                                        
         B     XIT                                                              
*                                                                               
FLSY16   BAS   RE,NULLSYB          OR OPTIONAL                                  
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT BIT TO SYBASE FORMAT                                        *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
BITSYB   NTR1  ,                                                                
         MVI   OUTPUTL,1                                                        
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    BISYOFF                                                          
         CLI   0(R3),0                                                          
         BE    BISYOFF                                                          
         CLI   0(R3),C'N'                                                       
         BE    BISYOFF                                                          
         CLI   0(R3),C'Y'                                                       
         BE    BISYON                                                           
         B     BISYON                                                           
*                                                                               
BISYON   MVI   0(R4),C'1'         BIT SETTING OF ON                             
         B     XIT                                                              
*                                                                               
BISYOFF  MVI   0(R4),C'0'         BIT SETTING OF OFF                            
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT MONEY TO SYBASE FORMAT                                      *         
* PROCESSES UPTO 12 DIGITS WITH 2 DECIMAL PLACES IMPLIED              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
MONEYSYB NTR1  ,                                                                
         MVI   0(R4),C'$'          PREFIX POUND SIGN                            
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    MOSY10                                                           
         BCTR  R2,0                                                             
         BCTR  R2,0                                                             
*                                                                               
         MVI   SIGNFLAG,0                                                       
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   MOSY02                                                           
         MVC   0(1,R4),0(R3)                                                    
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)                                                         
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1                                                       
*                                                                               
MOSY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BE    MOSY04                                                           
         CLI   0(R3),C'1'                                                       
         BL    MOSY10                                                           
         CLI   0(R3),C'9'                                                       
         BH    MOSY10                                                           
         B     MOSY06                                                           
*                                                                               
MOSY04   LA    R3,1(R3)                                                         
         BCT   R2,MOSY02                                                        
         MVI   0(R4),C'0'                                                       
         LA    R4,1(R4)                                                         
         LA    R2,1                                                             
         B     MOSY08                                                           
*                                                                               
MOSY06   C     R2,=F'10'                                                        
         BH    MOSY10                                                           
         BCTR  R2,0                MOVE DATA TO OUTPUT BUFFER                   
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
MOSY08   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(2,R4),0(R3)       AND 2 DECIMAL PLACES                         
         LA    R2,4(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
MOSY10   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    MOSY12                                                           
         MVC   0(4,R4),=C'0.00'    REQUIRED                                     
         MVI   OUTPUTL,5                                                        
         B     XIT                                                              
*                                                                               
MOSY12   BAS   RE,NULLSYB          OR OPTIONAL                                  
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT DATE-TIME TO SYBASE FORMAT                                  *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
DATIMSYB NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    DASY02                                                           
         CH    R2,=H'15'                                                        
         BE    DASY06                                                           
*                                                                               
DASY02   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    DASY04                                                           
         LA    RF,1                                                             
         MVI   0(R4),C' '                                                       
         B     DASY08                                                           
DASY04   BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
DASY06   MVC   0(2,R4),6(R3)       OUTPUT DATE DD/MM/YY                         
         MVI   2(R4),C'/'                                                       
         MVC   3(2,R4),4(R3)                                                    
         MVI   5(R4),C'/'                                                       
         MVC   6(2,R4),2(R3)                                                    
         MVI   8(R4),C' '          OUTPUT SPACE TO SEPARATE DATE-TIME           
         MVC   9(2,R4),9(R3)       OUTPUT TIME HH:MM:SS                         
         MVI   11(R4),C':'                                                      
         MVC   12(2,R4),11(R3)                                                  
         MVI   14(R4),C':'                                                      
         MVC   15(2,R4),13(R3)                                                  
         LA    R4,17(R4)                                                        
         LA    RF,17                                                            
*                                                                               
DASY08   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    RF,2(RF)                                                         
         STC   RF,OUTPUTL          SAVE OUTPUT LENGTH                           
         B     XIT                                                              
         EJECT                                                                  
**********************************************************************          
* CONVERT DATE ONLY TO SMALL DATE/TIME IN SYBASE FORMAT              *          
**********************************************************************          
         SPACE 1                                                                
SMDATTIM NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    SMDT02                                                           
         CLI   0(R3),C' '                                                       
         BH    SMDT06                                                           
*                                                                               
SMDT02   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    SMDT04                                                           
         LA    RF,1                                                             
         MVI   0(R4),C' '                                                       
         B     SMDT08                                                           
*                                                                               
SMDT04   BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
SMDT06   MVC   0(8,R4),0(R3)       OUTPUT DATE DD/MM/YY                         
         MVI   8(R4),C' '          OUTPUT SPACE TO SEPARATE DATE-TIME           
         MVC   9(L'HHMMSS,R4),HHMMSS                                            
         LA    R4,17(R4)                                                        
         LA    RF,17                                                            
*                                                                               
SMDT08   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    RF,2(RF)                                                         
         STC   RF,OUTPUTL          SAVE OUTPUT LENGTH                           
         B     XIT                                                              
         EJECT                                                                  
**********************************************************************          
* OUTPUT SEPARATOR CHARACTER                                         *          
**********************************************************************          
         SPACE 1                                                                
PUTSEP   XR    RF,RF                                                            
         IC    RF,OUTPUTL                                                       
         A     RF,ANOW                                                          
         MVC   0(1,RF),SEPARATE                                                 
         LA    RF,1(RF)                                                         
         ST    RF,ANOW                                                          
         BR    RE                                                               
         SPACE 2                                                                
***********************************************************************         
* OUTPUT NULL STRING FOR SYBASE                                       *         
***********************************************************************         
         SPACE 1                                                                
NULLSYB  L     RF,ANOW                                                          
         MVI   OUTPUTL,L'NULLSY                                                 
         MVC   0(L'NULLSY,RF),NULLSY                                            
         BR    RE                                                               
         SPACE 2                                                                
***********************************************************************         
* EXIT POINTS                                                         *         
***********************************************************************         
         SPACE 1                                                                
XIT      XIT1  ,                                                                
         SPACE 2                                                                
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         SPACE 1                                                                
SPACES   DC    128C' '                                                          
ZEROES   DC    128C'0'                                                          
*                                                                               
HHMMSS   DC    CL8'00:00:00'       OUTPUT TIME HH:MM:SS                         
NULLSY   DC    CL4'NULL'           NULL FOR SYBASE                              
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* FIELD TYPE CONVERSION TABLE                                         *         
***********************************************************************         
         SPACE 1                                                                
FCNVTAB  DC    AL1(SYBASE,CHAR),AL4(CHARSYB)                                    
         DC    AL1(SYBASE,TINYINT),AL4(TINTSYB)                                 
         DC    AL1(SYBASE,SMALLINT),AL4(SINTSYB)                                
         DC    AL1(SYBASE,INT),AL4(INTSYB)                                      
         DC    AL1(SYBASE,REAL),AL4(REALSYB)                                    
         DC    AL1(SYBASE,FLOAT),AL4(FLOATSYB)                                  
         DC    AL1(SYBASE,BIT),AL4(BITSYB)                                      
         DC    AL1(SYBASE,MONEY),AL4(MONEYSYB)                                  
         DC    AL1(SYBASE,DATETIME),AL4(DATIMSYB)                               
         DC    AL1(SYBASE,SMALLDTE),AL4(SMDATTIM)                               
         DC    AL1(00)                                                          
*                                                                               
SYBASE   EQU   1                                                                
*                                                                               
CHAR     EQU   1                                                                
TINYINT  EQU   2                                                                
SMALLINT EQU   3                                                                
INT      EQU   4                                                                
REAL     EQU   5                                                                
FLOAT    EQU   6                                                                
BIT      EQU   7                                                                
MONEY    EQU   8                                                                
DATETIME EQU   9                                                                
SMALLDTE EQU   10                                                               
*                                                                               
FCNVTABD DSECT                    COVERS FCNVTAB - CONVERT TABLE                
FCNVFMT  DS    XL1                                                              
FCNVTYPE DS    XL1                                                              
FCNVROUT DS    XL4                                                              
FCNVTABL EQU   *-FCNVTABD                                                       
*                                                                               
AXCNVX   CSECT                                                                  
         EJECT                                                                  
***********************************************************************         
* RECORD NAME CONVERSION TABLE                                        *         
***********************************************************************         
         SPACE 1                                                                
RECTAB   DS    0XL7                                                             
         DC    CL3'ADR',AL4(SYBADR) ADJUSTED RATE                               
         DC    CL3'CAL',AL4(SYBCAL) CALENDAR                                    
         DC    CL3'CLI',AL4(SYBCLI) CLIENT                                      
         DC    CL3'CPY',AL4(SYBCPY) COMPANY                                     
         DC    CL3'CSA',AL4(SYBCSA) COSTING ACCOUNT                             
         DC    CL3'DEP',AL4(SYBDEP) DEPARTMENT                                  
         DC    CL3'DEG',AL4(SYBDEG) DEPARTMENT GROUP                            
         DC    CL3'INA',AL4(SYBINA) INCOME ACCOUNT                              
         DC    CL3'ISA',AL4(SYBISA) INCOME SUSPENSE ACCOUNT                     
         DC    CL3'JOB',AL4(SYBJOB) JOB                                         
         DC    CL3'LED',AL4(SYBLED) LEDGER                                      
         DC    CL3'LES',AL4(SYBLES) LEDGER STRUCTURE                            
         DC    CL3'LOC',AL4(SYBLOC) LOCALITY                                    
         DC    CL3'LCI',AL4(SYBLCI) LOCALITY INFORMATION                        
         DC    CL3'MED',AL4(SYBMED) MEDIA                                       
         DC    CL3'MGR',AL4(SYBOGR) MEDIA GROUP                                 
         DC    CL3'NCT',AL4(SYBNCT) NON-CLIENT TIME                             
         DC    CL3'OFF',AL4(SYBOFF) OFFICE                                      
         DC    CL3'POF',AL4(SYBPOF) PRODUCTION OFFICE                           
         DC    CL3'OGR',AL4(SYBOGR) OFFICE GROUP                                
         DC    CL3'OFL',AL4(SYBOFL) OFFICE LIST                                 
         DC    CL3'OLE',AL4(SYBOLE) OFFICE LIST ENTRY                           
         DC    CL3'PED',AL4(SYBPED) PERIOD                                      
         DC    CL3'OPT',AL4(SYBOPT) OPTIONS                                     
         DC    CL3'PER',AL4(SYBPER) PERSON                                      
         DC    CL3'PEA',AL4(SYBPEA) PERSON ASSIGNMENT                           
         DC    CL3'PRO',AL4(SYBPRO) PRODUCT                                     
         DC    CL3'RAT',AL4(SYBRAT) RATE                                        
         DC    CL3'STH',AL4(SYBSTH) STANDARD HOURS                              
         DC    CL3'EDT',AL4(SYBEDT) EDIT HOURS                                  
         DC    CL3'CAP',AL4(SYBCAP) COST ALLOCATION PROFILE                     
         DC    CL3'SBD',AL4(SYBSBD) SUB-DEPARTMENT                              
         DC    CL3'P1R',AL4(SYBP1R) PERSON1R                                    
         DC    CL3'TSK',AL4(SYBTSK) TASK                                        
         DC    CL3'TGR',AL4(SYBTGR) TASKCODE GROUP                              
         DC    CL3'TIS',AL4(SYBTIS) TIMESHEET                                   
         DC    CL3'TAL',AL4(SYBTAL) TIMESHEET ALLOCATION LINE                   
         DC    CL3'TAT',AL4(SYBTAT) TIMESHEET ALLOCATION LINE TAX INFO          
         DC    CL3'PHI',AL4(SYBPHI) PAYROLL HISTORY RECORD                      
         DC    X'00'                                                            
         EJECT                                                                  
***********************************************************************         
* INDIVIDUAL RECORD CONVERSION ROUTINES                               *         
***********************************************************************         
         SPACE 1                                                                
SYBADR   DC    AL2(SYBADRX-SYBADR)                                              
         DC    AL1(L'AXADRTYP,AXADRTYP-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRACT,AXADRACT-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRDAT+L'AXADRTME+1,AXADRDAT-AXADRD,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXADRCCD,AXADRCCD-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRHST,AXADRHST-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRCOC,AXADRCOC-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRCLI,AXADRCLI-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRPRO,AXADRPRO-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRJOB,AXADRJOB-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRPOC,AXADRPOC-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRDPT,AXADRDPT-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRSBD,AXADRSBD-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRCSP,AXADRCSP-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRTSK,AXADRTSK-AXADRD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXADRDTE,AXADRDTE-AXADRD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXADRPCT,AXADRPCT-AXADRD,REQ,OPT,INT,0)                    
SYBADRX  DS    0C                                                               
*                                                                               
SYBCAL   DC    AL2(SYBCALX-SYBCAL)                                              
         DC    AL1(L'AXCALTYP,AXCALTYP-AXCALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCALACT,AXCALACT-AXCALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCALDAT+L'AXCALTME+1,AXCALDAT-AXCALD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXCALCCD,AXCALCCD-AXCALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCALOFC,AXCALOFC-AXCALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCALEYC,AXCALEYC-AXCALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCALSYC,AXCALSYC-AXCALD,REQ,OPT,CHAR,0)                   
SYBCALX  DS    0C                                                               
*                                                                               
SYBCLI   DC    AL2(SYBCLIX-SYBCLI)                                              
         DC    AL1(L'AXCLITYP,AXCLITYP-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLIACT,AXCLIACT-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLIDAT+L'AXCLITME+1,AXCLIDAT-AXCLID,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXCLICCD,AXCLICCD-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLICLC,AXCLICLC-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLINAM,AXCLINAM-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLIF1,AXCLIF1-AXCLID,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXCLIF2,AXCLIF2-AXCLID,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXCLIF3,AXCLIF3-AXCLID,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXCLIF4,AXCLIF4-AXCLID,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXCLIF5,AXCLIF5-AXCLID,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXCLIOFC,AXCLIOFC-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLICAC,AXCLICAC-AXCLID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCLILCK,AXCLILCK-AXCLID,REQ,OPT,BIT,0)                    
SYBCLIX  DS    0C                                                               
*                                                                               
SYBCPY   DC    AL2(SYBCPYX-SYBCPY)                                              
         DC    AL1(L'AXCPYTYP,AXCPYTYP-AXCPYD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCPYACT,AXCPYACT-AXCPYD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCPYDAT+L'AXCPYTME+1,AXCPYDAT-AXCPYD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXCPYCCD,AXCPYCCD-AXCPYD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCPYCPN,AXCPYCPN-AXCPYD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCPYTMS,AXCPYTMS-AXCPYD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCPYCGC,AXCPYCGC-AXCPYD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCPYLSF,AXCPYLSF-AXCPYD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCPYOSF,AXCPYOSF-AXCPYD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCPYLYR,AXCPYLYR-AXCPYD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXCPYLMN,AXCPYLMN-AXCPYD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXCPYEHF,AXCPYEHF-AXCPYD,REQ,OPT,BIT,2)                    
SYBCPYX  DS    0C                                                               
*                                                                               
SYBCSA   DC    AL2(SYBCSAX-SYBCSA)                                              
         DC    AL1(L'AXCSATYP,AXCSATYP-AXCSAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCSAACT,AXCSAACT-AXCSAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCSADAT+L'AXCSATME+1,AXCSADAT-AXCSAD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXCSACCD,AXCSACCD-AXCSAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCSACAC,AXCSACAC-AXCSAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCSANAM,AXCSANAM-AXCSAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCSALCK,AXCSALCK-AXCSAD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCSAI1,AXCSAI1-AXCSAD,REQ,OPT,BIT,0)                      
         DC    AL1(L'AXCSAI2,AXCSAI2-AXCSAD,REQ,OPT,BIT,0)                      
SYBCSAX  DS    0C                                                               
*                                                                               
SYBDEP   DC    AL2(SYBDEPX-SYBDEP)                                              
         DC    AL1(L'AXDEPTYP,AXDEPTYP-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPACT,AXDEPACT-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPDAT+L'AXDEPTME+1,AXDEPDAT-AXDEPD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXDEPCCD,AXDEPCCD-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPOFC,AXDEPOFC-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPDEC,AXDEPDEC-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPNAM,AXDEPNAM-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPANC,AXDEPANC-AXDEPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPIAC,AXDEPIAC-AXDEPD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXDEPTC,AXDEPTC-AXDEPD,OPT,OPT,CHAR,0)                     
         DC    AL1(L'AXDEPLCK,AXDEPLCK-AXDEPD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXDEPI1,AXDEPI1-AXDEPD,REQ,OPT,BIT,0)                      
         DC    AL1(L'AXDEPI2,AXDEPI2-AXDEPD,REQ,OPT,BIT,0)                      
SYBDEPX  DS    0C                                                               
*                                                                               
SYBDEG   DC    AL2(SYBDEGX-SYBDEG)                                              
         DC    AL1(L'AXDEGTYP,AXDEGTYP-AXDEGD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEGACT,AXDEGACT-AXDEGD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEGDAT+L'AXDEGTME+1,AXDEGDAT-AXDEGD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXDEGCCD,AXDEGCCD-AXDEGD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEGDGC,AXDEGDGC-AXDEGD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXDEGNAM,AXDEGNAM-AXDEGD,REQ,OPT,CHAR,0)                   
SYBDEGX  DS    0C                                                               
*                                                                               
SYBINA   DC    AL2(SYBINAX-SYBINA)                                              
         DC    AL1(L'AXINATYP,AXINATYP-AXINAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXINAACT,AXINAACT-AXINAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXINADAT+L'AXINATME+1,AXINADAT-AXINAD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXINACCD,AXINACCD-AXINAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXINAIAC,AXINAIAC-AXINAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXINANAM,AXINANAM-AXINAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXINALCK,AXINALCK-AXINAD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXINAACD,AXINAACD-AXINAD,REQ,OPT,CHAR,2)                   
SYBINAX  DS    0C                                                               
*                                                                               
SYBISA   DC    AL2(SYBISAX-SYBISA)                                              
         DC    AL1(L'AXISATYP,AXISATYP-AXISAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXISAACT,AXISAACT-AXISAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXISADAT+L'AXISATME+1,AXISADAT-AXISAD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXISACCD,AXISACCD-AXISAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXISAIAC,AXISAIAC-AXISAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXISANAM,AXISANAM-AXISAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXISALCK,AXISALCK-AXISAD,REQ,OPT,BIT,0)                    
SYBISAX  DS    0C                                                               
*                                                                               
SYBJOB   DC    AL2(SYBJOBX-SYBJOB)                                              
         DC    AL1(L'AXJOBTYP,AXJOBTYP-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBACT,AXJOBACT-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBDAT+L'AXJOBTME+1,AXJOBDAT-AXJOBD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXJOBCCD,AXJOBCCD-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBCLI,AXJOBCLI-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBPRO,AXJOBPRO-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBJOB,AXJOBJOB-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBNAM,AXJOBNAM-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBF1,AXJOBF1-AXJOBD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXJOBF2,AXJOBF2-AXJOBD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXJOBF3,AXJOBF3-AXJOBD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXJOBF4,AXJOBF4-AXJOBD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXJOBF5,AXJOBF5-AXJOBD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXJOBOD,AXJOBOD-AXJOBD,REQ,OPT,SMALLDTE,0)                 
         DC    AL1(L'AXJOBCD,AXJOBCD-AXJOBD,REQ,OPT,SMALLDTE,0)                 
         DC    AL1(L'AXJOBSTA,AXJOBSTA-AXJOBD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXJOBIRA,AXJOBIRA-AXJOBD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXJOBIWO,AXJOBIWO-AXJOBD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXJOBOFC,AXJOBOFC-AXJOBD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXJOBCAC,AXJOBCAC-AXJOBD,OPT,OPT,CHAR,0)                   
SYBJOBX  DS    0C                                                               
*                                                                               
SYBLED   DC    AL2(SYBLEDX-SYBLED)                                              
         DC    AL1(L'AXLEDTYP,AXLEDTYP-AXLEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLEDACT,AXLEDACT-AXLEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLEDDAT+L'AXLEDTME+1,AXLEDDAT-AXLEDD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXLEDCCD,AXLEDCCD-AXLEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLEDLC,AXLEDLC-AXLEDD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXLEDNAM,AXLEDNAM-AXLEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLEDSL,AXLEDSL-AXLEDD,REQ,OPT,SMALLINT,0)                 
SYBLEDX  DS    0C                                                               
*                                                                               
SYBLES   DC    AL2(SYBLESX-SYBLES)                                              
         DC    AL1(L'AXLESTYP,AXLESTYP-AXLESD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLESACT,AXLESACT-AXLESD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLESDAT+L'AXLESTME+1,AXLESDAT-AXLESD,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXLESCCD,AXLESCCD-AXLESD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLESLC,AXLESLC-AXLESD,REQ,REQ,CHAR,0)                     
         DC    AL1(L'AXLESNUM,AXLESNUM-AXLESD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXLESNAM,AXLESNAM-AXLESD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLESLLN,AXLESLLN-AXLESD,REQ,OPT,TINYINT,0)                
SYBLESX  DS    0C                                                               
*                                                                               
SYBLOC   DC    AL2(SYBLOCX-SYBLOC)                                              
         DC    AL1(L'AXLOCTYP,AXLOCTYP-AXLOCD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLOCACT,AXLOCACT-AXLOCD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLOCDAT+L'AXLOCTME+1,AXLOCDAT-AXLOCD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXLOCCCD,AXLOCCCD-AXLOCD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLOCLCD,AXLOCLCD-AXLOCD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXLOCNAM,AXLOCNAM-AXLOCD,REQ,OPT,CHAR,0)                   
SYBLOCX  DS    0C                                                               
*                                                                               
SYBLCI   DC    AL2(SYBLCIX-SYBLCI)                                              
         DC    AL1(L'AXLCITYP,AXLCITYP-AXLCID,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLCIACT,AXLCIACT-AXLCID,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLCIDAT+L'AXLCITME+1,AXLCIDAT-AXLCID,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXLCICCD,AXLCICCD-AXLCID,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLCILCD,AXLCILCD-AXLCID,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXLCIEFF,AXLCIEFF-AXLCID,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXLCITAX,AXLCITAX-AXLCID,REQ,OPT,INT,0)                    
SYBLCIX  DS    0C                                                               
*                                                                               
SYBMED   DC    AL2(SYBMEDX-SYBMED)                                              
         DC    AL1(L'AXMEDTYP,AXMEDTYP-AXMEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMEDACT,AXMEDACT-AXMEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMEDDAT+L'AXMEDTME+1,AXMEDDAT-AXMEDD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXMEDCCD,AXMEDCCD-AXMEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMEDMCD,AXMEDMCD-AXMEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMEDMDS,AXMEDMDS-AXMEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMEDGRP,AXMEDGRP-AXMEDD,REQ,OPT,CHAR,0)                   
SYBMEDX  DS    0C                                                               
*                                                                               
SYBMGR   DC    AL2(SYBMGRX-SYBMGR)                                              
         DC    AL1(L'AXMGRTYP,AXMGRTYP-AXMGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMGRACT,AXMGRACT-AXMGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMGRDAT+L'AXMGRTME+1,AXMGRDAT-AXMGRD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXMGRCCD,AXMGRCCD-AXMGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXMGRGC,AXMGRGC-AXMGRD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXMGRNAM,AXMGRNAM-AXMGRD,REQ,OPT,CHAR,0)                   
SYBMGRX  DS    0C                                                               
*                                                                               
SYBNCT   DC    AL2(SYBNCTX-SYBNCT)                                              
         DC    AL1(L'AXNCTTYP,AXNCTTYP-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTACT,AXNCTACT-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTDAT+L'AXNCTTME+1,AXNCTDAT-AXNCTD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXNCTCCD,AXNCTCCD-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTTAC,AXNCTTAC-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTNAM,AXNCTNAM-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTF1,AXNCTF1-AXNCTD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXNCTF2,AXNCTF2-AXNCTD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXNCTF3,AXNCTF3-AXNCTD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXNCTF4,AXNCTF4-AXNCTD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXNCTF5,AXNCTF5-AXNCTD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXNCTANC,AXNCTANC-AXNCTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXNCTISL,AXNCTISL-AXNCTD,REQ,OPT,BIT,0)                    
SYBNCTX  DS    0C                                                               
*                                                                               
SYBOFF   DC    AL2(SYBOFFX-SYBOFF)                                              
         DC    AL1(L'AXOFFTYP,AXOFFTYP-AXOFFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFFACT,AXOFFACT-AXOFFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFFDAT+L'AXOFFTME+1,AXOFFDAT-AXOFFD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXOFFCCD,AXOFFCCD-AXOFFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFFCDE,AXOFFCDE-AXOFFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFFNAM,AXOFFNAM-AXOFFD,REQ,OPT,CHAR,0)                   
*        DC    AL1(L'AXOFFGC,AXOFFGC-AXOFFD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXOFFIAC,AXOFFIAC-AXOFFD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOFFTC,AXOFFTC-AXOFFD,OPT,OPT,CHAR,0)                     
         DC    AL1(L'AXOFFLCK,AXOFFLCK-AXOFFD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXOFFI1,AXOFFI1-AXOFFD,REQ,OPT,BIT,0)                      
         DC    AL1(L'AXOFFI2,AXOFFI2-AXOFFD,REQ,OPT,BIT,0)                      
SYBOFFX  DS    0C                                                               
*                                                                               
SYBPOF   DC    AL2(SYBPOFX-SYBPOF)                                              
         DC    AL1(L'AXPOFTYP,AXPOFTYP-AXPOFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPOFACT,AXPOFACT-AXPOFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPOFDAT+L'AXPOFTME+1,AXPOFDAT-AXPOFD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPOFCCD,AXPOFCCD-AXPOFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPOFCDE,AXPOFCDE-AXPOFD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPOFGC,AXPOFGC-AXPOFD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPOFNAM,AXPOFNAM-AXPOFD,REQ,OPT,CHAR,3)                   
SYBPOFX  DS    0C                                                               
*                                                                               
SYBOGR   DC    AL2(SYBOGRX-SYBOGR)                                              
         DC    AL1(L'AXOGRTYP,AXOGRTYP-AXOGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOGRACT,AXOGRACT-AXOGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOGRDAT+L'AXOGRTME+1,AXOGRDAT-AXOGRD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXOGRCCD,AXOGRCCD-AXOGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOGRGC,AXOGRGC-AXOGRD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXOGRNAM,AXOGRNAM-AXOGRD,REQ,OPT,CHAR,0)                   
SYBOGRX  DS    0C                                                               
*                                                                               
SYBOFL   DC    AL2(SYBOFLX-SYBOFL)                                              
         DC    AL1(L'AXOFLTYP,AXOFLTYP-AXOFLD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFLACT,AXOFLACT-AXOFLD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFLDAT+L'AXOFLTME+1,AXOFLDAT-AXOFLD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXOFLCCD,AXOFLCCD-AXOFLD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOFLGC,AXOFLGC-AXOFLD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXOFLSC,AXOFLSC-AXOFLD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXOFLNAM,AXOFLNAM-AXOFLD,REQ,OPT,CHAR,0)                   
SYBOFLX  DS    0C                                                               
*                                                                               
SYBOLE   DC    AL2(SYBOLEX-SYBOLE)                                              
         DC    AL1(L'AXOLETYP,AXOLETYP-AXOLED,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXOLEACT,AXOLEACT-AXOLED,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXOLEDAT+L'AXOLETME+1,AXOLEDAT-AXOLED,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXOLECCD,AXOLECCD-AXOLED,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXOLEGC,AXOLEGC-AXOLED,REQ,REQ,CHAR,0)                     
         DC    AL1(L'AXOLESC,AXOLESC-AXOLED,REQ,REQ,CHAR,0)                     
         DC    AL1(L'AXOLEOFC,AXOLEOFC-AXOLED,REQ,OPT,CHAR,0)                   
SYBOLEX  DS    0C                                                               
*                                                                               
SYBOPT   DC    AL2(SYBOPTX-SYBOPT)                                              
         DC    AL1(L'AXOPTTYP,AXOPTTYP-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTACT,AXOPTACT-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTDAT+L'AXOPTTME+1,AXOPTDAT-AXOPTD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXOPTCCD,AXOPTCCD-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTKEY,AXOPTKEY-AXOPTD,REQ,OPT,CHAR,2)                   
         DC    AL1(L'AXOPTOGC,AXOPTOGC-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTOFC,AXOPTOFC-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTCLI,AXOPTCLI-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTPRO,AXOPTPRO-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTJOB,AXOPTJOB-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTTGC,AXOPTTGC-AXOPTD,REQ,OPT,CHAR,2)                   
         DC    AL1(L'AXOPTTFC,AXOPTTFC-AXOPTD,REQ,OPT,CHAR,2)                   
         DC    AL1(L'AXOPTMGC,AXOPTMGC-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTMCD,AXOPTMCD-AXOPTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTIPR,AXOPTIPR-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTIJR,AXOPTIJR-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTITR,AXOPTITR-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTLOC,AXOPTLOC-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTTTC,AXOPTTTC-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTIAC,AXOPTIAC-AXOPTD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXOPTDTT,AXOPTDTT-AXOPTD,OPT,OPT,CHAR,0)                   
SYBOPTX  DS    0C                                                               
*                                                                               
SYBCAP   DC    AL2(SYBCAPX-SYBCAP)                                              
         DC    AL1(L'AXCAPTYP,AXCAPTYP-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPACT,AXCAPACT-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPDAT+L'AXCAPTME+1,AXCAPDAT-AXCAPD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXCAPCCD,AXCAPCCD-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPOFC,AXCAPOFC-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPDEP,AXCAPDEP-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPSDC,AXCAPSDC-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPPER,AXCAPPER-AXCAPD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXCAPPSB,AXCAPPSB-AXCAPD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCAPPSC,AXCAPPSC-AXCAPD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCAPPBI,AXCAPPBI-AXCAPD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXCAPUDI,AXCAPUDI-AXCAPD,REQ,OPT,CHAR,0)                   
SYBCAPX  DS    0C                                                               
*                                                                               
SYBPED   DC    AL2(SYBPEDX-SYBPED)                                              
         DC    AL1(L'AXPEDTYP,AXPEDTYP-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDACT,AXPEDACT-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDDAT+L'AXPEDTME+1,AXPEDDAT-AXPEDD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPEDCCD,AXPEDCCD-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDOFC,AXPEDOFC-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDSYM,AXPEDSYM-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDEYM,AXPEDEYM-AXPEDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEDSDT,AXPEDSDT-AXPEDD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPEDEDT,AXPEDEDT-AXPEDD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPEDPN,AXPEDPN-AXPEDD,REQ,OPT,TINYINT,0)                  
         DC    AL1(L'AXPEDMAY,AXPEDMAY-AXPEDD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXPEDMAM,AXPEDMAM-AXPEDD,REQ,OPT,TINYINT,0)                
SYBPEDX  DS    0C                                                               
*                                                                               
SYBPER   DC    AL2(SYBPERX-SYBPER)                                              
         DC    AL1(L'AXPERTYP,AXPERTYP-AXPERD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPERACT,AXPERACT-AXPERD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPERDAT+L'AXPERTME+1,AXPERDAT-AXPERD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPERCCD,AXPERCCD-AXPERD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPERCSC,AXPERCSC-AXPERD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXPERPC,AXPERPC-AXPERD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPERLN,AXPERLN-AXPERD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPERFN,AXPERFN-AXPERD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPERHDT,AXPERHDT-AXPERD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPERTDT,AXPERTDT-AXPERD,OPT,OPT,SMALLDTE,0)               
SYBPERX  DS    0C                                                               
*                                                                               
SYBPEA   DC    AL2(SYBPEAX-SYBPEA)                                              
         DC    AL1(L'AXPEATYP,AXPEATYP-AXPEAD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXPEAACT,AXPEAACT-AXPEAD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXPEADAT+L'AXPEATME+1,AXPEADAT-AXPEAD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPEACCD,AXPEACCD-AXPEAD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXPEAPC,AXPEAPC-AXPEAD,REQ,REQ,CHAR,0)                     
         DC    AL1(L'AXPEACSC,AXPEACSC-AXPEAD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXPEASTD,AXPEASTD-AXPEAD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPEAEND,AXPEAEND-AXPEAD,OPT,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPEAOFC,AXPEAOFC-AXPEAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEADEC,AXPEADEC-AXPEAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEASDC,AXPEASDC-AXPEAD,REQ,OPT,CHAR,0)                   
*        DC    AL1(L'AXPEAMGC,AXPEAMGC-AXPEAD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPEAATT,AXPEAATT-AXPEAD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXPEASTA,AXPEASTA-AXPEAD,REQ,OPT,TINYINT,0)                
SYBPEAX  DS    0C                                                               
*                                                                               
SYBPRO   DC    AL2(SYBPROX-SYBPRO)                                              
         DC    AL1(L'AXPROTYP,AXPROTYP-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROACT,AXPROACT-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPRODAT+L'AXPROTME+1,AXPRODAT-AXPROD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPROCCD,AXPROCCD-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROCLC,AXPROCLC-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROPRO,AXPROPRO-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPRONAM,AXPRONAM-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROF1,AXPROF1-AXPROD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPROF2,AXPROF2-AXPROD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPROF3,AXPROF3-AXPROD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPROF4,AXPROF4-AXPROD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPROF5,AXPROF5-AXPROD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXPROOFC,AXPROOFC-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROCAC,AXPROCAC-AXPROD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPROLCK,AXPROLCK-AXPROD,REQ,OPT,BIT,0)                    
SYBPROX  DS    0C                                                               
*                                                                               
SYBRAT   DC    AL2(SYBRATX-SYBRAT)                                              
         DC    AL1(L'AXRATTYP,AXRATTYP-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATACT,AXRATACT-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATDAT+L'AXRATTME+1,AXRATDAT-AXRATD,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXRATCCD,AXRATCCD-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATHST,AXRATHST-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATOFC,AXRATOFC-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATDEC,AXRATDEC-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATSDC,AXRATSDC-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATPC,AXRATPC-AXRATD,REQ,REQ,CHAR,0)                     
         DC    AL1(L'AXRATTSK,AXRATTSK-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATCOF,AXRATCOF-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATCLI,AXRATCLI-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATPRO,AXRATPRO-AXRATD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXRATEFD,AXRATEFD-AXRATD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXRATE,AXRATE-AXRATD,REQ,OPT,INT,0)                        
SYBRATX  DS    0C                                                               
*                                                                               
SYBSTH   DC    AL2(SYBSTHX-SYBSTH)                                              
         DC    AL1(L'AXSTHTYP,AXSTHTYP-AXSTHD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXSTHACT,AXSTHACT-AXSTHD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXSTHDAT+L'AXSTHTME+1,AXSTHDAT-AXSTHD,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXSTHCCD,AXSTHCCD-AXSTHD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXSTHOFC,AXSTHOFC-AXSTHD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXSTHDEC,AXSTHDEC-AXSTHD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSTHSDC,AXSTHSDC-AXSTHD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSTHPER,AXSTHPER-AXSTHD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSTHFDT,AXSTHFDT-AXSTHD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXSTHLDT,AXSTHLDT-AXSTHD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXSTHSDT,AXSTHSDT-AXSTHD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXSTHEDT,AXSTHEDT-AXSTHD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXSTHHRS,AXSTHHRS-AXSTHD,REQ,OPT,INT,0)                    
SYBSTHX  DS    0C                                                               
*                                                                               
SYBEDT   DC    AL2(SYBEDTX-SYBEDT)                                              
         DC    AL1(L'AXEDTTYP,AXEDTTYP-AXEDTD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXEDTACT,AXEDTACT-AXEDTD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXEDTDAT+L'AXEDTTME+1,AXEDTDAT-AXEDTD,REQ,REQ)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXEDTCCD,AXEDTCCD-AXEDTD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXEDTOFC,AXEDTOFC-AXEDTD,REQ,REQ,CHAR,0)                   
         DC    AL1(L'AXEDTDEC,AXEDTDEC-AXEDTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXEDTSDC,AXEDTSDC-AXEDTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXEDTPER,AXEDTPER-AXEDTD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXEDTFDT,AXEDTFDT-AXEDTD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXEDTLDT,AXEDTLDT-AXEDTD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXEDTSDT,AXEDTSDT-AXEDTD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXEDTEDT,AXEDTEDT-AXEDTD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXEDTHRS,AXEDTHRS-AXEDTD,REQ,OPT,INT,0)                    
SYBEDTX  DS    0C                                                               
*                                                                               
SYBSBD   DC    AL2(SYBSBDX-SYBSBD)                                              
         DC    AL1(L'AXSBDTYP,AXSBDTYP-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDACT,AXSBDACT-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDDAT+L'AXSBDTME+1,AXSBDDAT-AXSBDD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXSBDCCD,AXSBDCCD-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDOFC,AXSBDOFC-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDDEC,AXSBDDEC-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDSDC,AXSBDSDC-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDNAM,AXSBDNAM-AXSBDD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDIAC,AXSBDIAC-AXSBDD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXSBDTC,AXSBDTC-AXSBDD,OPT,OPT,CHAR,0)                     
         DC    AL1(L'AXSBDLCK,AXSBDLCK-AXSBDD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXSBDI1,AXSBDI1-AXSBDD,REQ,OPT,BIT,0)                      
         DC    AL1(L'AXSBDI2,AXSBDI2-AXSBDD,REQ,OPT,BIT,0)                      
SYBSBDX  DS    0C                                                               
*                                                                               
SYBP1R   DC    AL2(SYBP1RX-SYBP1R)                                              
         DC    AL1(L'AXP1RTYP,AXP1RTYP-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RACT,AXP1RACT-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RDAT+L'AXP1RTME+1,AXP1RDAT-AXP1RD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXP1RCCD,AXP1RCCD-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1ROFC,AXP1ROFC-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RDEC,AXP1RDEC-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RSDC,AXP1RSDC-AXP1RD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RPC,AXP1RPC-AXP1RD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXP1RIAC,AXP1RIAC-AXP1RD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXP1RTC,AXP1RTC-AXP1RD,OPT,OPT,CHAR,0)                     
SYBP1RX  DS    0C                                                               
*                                                                               
SYBTSK   DC    AL2(SYBTSKX-SYBTSK)                                              
         DC    AL1(L'AXTSKTYP,AXTSKTYP-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKACT,AXTSKACT-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKDAT+L'AXTSKTME+1,AXTSKDAT-AXTSKD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXTSKCCD,AXTSKCCD-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKLC,AXTSKLC-AXTSKD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXTSKCDE,AXTSKCDE-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKSNM,AXTSKSNM-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKNAM,AXTSKNAM-AXTSKD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTSKISC,AXTSKISC-AXTSKD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTSKISA,AXTSKISA-AXTSKD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTSKISR,AXTSKISR-AXTSKD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTSKIST,AXTSKIST-AXTSKD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTSKTGC,AXTSKTGC-AXTSKD,REQ,OPT,CHAR,2)                   
SYBTSKX  DS    0C                                                               
*                                                                               
SYBTGR   DC    AL2(SYBTGRX-SYBTGR)                                              
         DC    AL1(L'AXTGRTYP,AXTGRTYP-AXTGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTGRACT,AXTGRACT-AXTGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTGRDAT+L'AXTGRTME+1,AXTGRDAT-AXTGRD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXTGRCCD,AXTGRCCD-AXTGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTGRUL,AXTGRUL-AXTGRD,REQ,OPT,CHAR,0)                     
         DC    AL1(L'AXTGRCDE,AXTGRCDE-AXTGRD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTGRNAM,AXTGRNAM-AXTGRD,REQ,OPT,CHAR,0)                   
SYBTGRX  DS    0C                                                               
*                                                                               
SYBTIS   DC    AL2(SYBTISX-SYBTIS)                                              
         DC    AL1(L'AXTISTYP,AXTISTYP-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISACT,AXTISACT-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISDAT+L'AXTISTME+1,AXTISDAT-AXTISD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXTISCCD,AXTISCCD-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISCSC,AXTISCSC-AXTISD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTISEND,AXTISEND-AXTISD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTISOFF,AXTISOFF-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISDPT,AXTISDPT-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISSBD,AXTISSBD-AXTISD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTISTMP,AXTISTMP-AXTISD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTISSTA,AXTISSTA-AXTISD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTISSID,AXTISSID-AXTISD,REQ,OPT,SMALLINT,2)               
         DC    AL1(L'AXTISSDT,AXTISSDT-AXTISD,OPT,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTISAPR,AXTISAPR-AXTISD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTISADT,AXTISADT-AXTISD,OPT,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTISUPR,AXTISUPR-AXTISD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTISUDT,AXTISUDT-AXTISD,OPT,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTISPN,AXTISPN-AXTISD,REQ,OPT,TINYINT,0)                  
         DC    AL1(L'AXTISBIH,AXTISBIH-AXTISD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTISCHH,AXTISCHH-AXTISD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTISNBH,AXTISNBH-AXTISD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTISNCH,AXTISNCH-AXTISD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTISMDT,AXTISMDT-AXTISD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTISERR,AXTISERR-AXTISD,OPT,OPT,SMALLINT,0)               
         DC    AL1(L'AXTISSTD,AXTISSTD-AXTISD,REQ,OPT,SMALLDTE,0)               
SYBTISX  DS    0C                                                               
*                                                                               
SYBTAL   DC    AL2(SYBTALX-SYBTAL)                                              
         DC    AL1(L'AXTALTYP,AXTALTYP-AXTALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTALACT,AXTALACT-AXTALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTALDAT+L'AXTALTME+1,AXTALDAT-AXTALD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXTALCCD,AXTALCCD-AXTALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTALCSC,AXTALCSC-AXTALD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTALPED,AXTALPED-AXTALD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTALLNO,AXTALLNO-AXTALD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTALCLI,AXTALCLI-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALPRD,AXTALPRD-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALJOB,AXTALJOB-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALNCA,AXTALNCA-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALTSK,AXTALTSK-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALTIM,AXTALTIM-AXTALD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXTALRAT,AXTALRAT-AXTALD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTALIAC,AXTALIAC-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALISA,AXTALISA-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALPOF,AXTALPOF-AXTALD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTALHBI,AXTALHBI-AXTALD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTALHCH,AXTALHCH-AXTALD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTALHNB,AXTALHNB-AXTALD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTALHNC,AXTALHNC-AXTALD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTALIFT,AXTALIFT-AXTALD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTALINV,AXTALINV-AXTALD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTALCAC,AXTALCAC-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALERR,AXTALERR-AXTALD,OPT,OPT,CHAR,0)                   
         DC    AL1(L'AXTALMAY,AXTALMAY-AXTALD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXTALMAM,AXTALMAM-AXTALD,REQ,OPT,TINYINT,0)                
         DC    AL1(L'AXTALWRI,AXTALWRI-AXTALD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTALADJ,AXTALADJ-AXTALD,REQ,OPT,BIT,0)                    
         DC    AL1(L'AXTALCMT,AXTALCMT-AXTALD,OPT,OPT,CHAR,0)                   
SYBTALX  DS    0C                                                               
*                                                                               
SYBTAT   DC    AL2(SYBTATX-SYBTAT)                                              
         DC    AL1(L'AXTATTYP,AXTATTYP-AXTATD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTATACT,AXTATACT-AXTATD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTATDAT+L'AXTATTME+1,AXTATDAT-AXTATD,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXTATCCD,AXTATCCD-AXTATD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTATCSC,AXTATCSC-AXTATD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTATPED,AXTATPED-AXTATD,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXTATLNO,AXTATLNO-AXTATD,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXTATLOC,AXTATLOC-AXTATD,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXTATBAS,AXTATBAS-AXTATD,REQ,OPT,INT,0)                    
         DC    AL1(L'AXTATTSK,AXTATTSK-AXTATD,REQ,OPT,CHAR,0)                   
SYBTATX  DS    0C                                                               
*                                                                               
SYBPHI   DC    AL2(SYBPHIX-SYBPHI)                                              
         DC    AL1(L'AXPHITYP,AXPHITYP-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHIACT,AXPHIACT-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHIDAT+L'AXPHITME+1,AXPHIDAT-AXPHID,REQ,OPT)             
         DC    AL1(DATETIME,0)                                                  
         DC    AL1(L'AXPHICCD,AXPHICCD-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHIOFC,AXPHIOFC-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHIDEP,AXPHIDEP-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHISDC,AXPHISDC-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHICSP,AXPHICSP-AXPHID,REQ,OPT,CHAR,0)                   
         DC    AL1(L'AXPHIDTE,AXPHIDTE-AXPHID,REQ,OPT,SMALLDTE,0)               
         DC    AL1(L'AXPHISUB,AXPHISUB-AXPHID,REQ,OPT,SMALLINT,0)               
         DC    AL1(L'AXPHIAMT,AXPHIAMT-AXPHID,REQ,OPT,INT,0)                    
SYBPHIX  DS    0X                                                               
*                                                                               
REQ      EQU   C'R'                FIELD IS REQUIRED                            
OPT      EQU   C'O'                FIELD IS OPTIONAL                            
*                                                                               
RECTYPD  DSECT                    COVERS RECTYPE - RECORD TABLE                 
RECLEN   DS    XL1                LENGTH OF UNCONVERTED DATA                    
RECDISP  DS    XL1                DISPLACEMENT TO UNCONVERTED DATA              
RECREQN  DS    XL1                REQUIRED FOR NORMAL BUILD                     
RECREQK  DS    XL1                REQUIRED FOR KILL BUILD                       
RECCNVT  DS    XL1                DATA TYPE FOR CONVERSION                      
RECVRSN  DS    XL1                VERSION LEVEL FOR DATA                        
RECTYPLQ EQU   *-RECTYPD                                                        
*                                                                               
AXCNVX   CSECT                                                                  
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE AND OTHER DSECTS                                    *         
***********************************************************************         
         SPACE 1                                                                
WORKD    DSECT                                                                  
DUB      DS    D                                                                
DMCB     DS    6F                                                               
APARM    DS    A                   A(PARAMETER LIST)                            
ANOW     DS    A                   CURRENT ADDRESS REACHED IN SQL BUFF          
*                                                                               
PARM     DS    0XL16               PARAMETER LIST                               
MODE     DS    XL1                                                              
AEXTRACT DS    XL3                                                              
PLATFORM DS    XL1                                                              
ASQLBUFF DS    XL3                                                              
ALLOUT   DS    XL1                                                              
ARECTYPE DS    XL3                                                              
AVERSION DS    XL4                                                              
*                                                                               
VERSION  DS    XL1                                                              
OPTIONAL DS    XL1                                                              
SIGNFLAG DS    XL1                                                              
OUTPUTL  DS    XL1                                                              
SEPARATE DS    XL1                                                              
LOADMODE DS    XL1                                                              
KILLMODE DS    XL1                                                              
*                                                                               
WORKL    EQU   *-WORKD                                                          
*                                                                               
* AXRECD                                                                        
         PRINT OFF                                                              
       ++INCLUDE AXRECD                                                         
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'035JSHCNVX   12/11/02'                                      
         END                                                                    
