*          DATA SET DDCOMPRES  AT LEVEL 004 AS OF 05/01/02                      
*CATALP COMPRES                                                                 
         TITLE 'COMPRES - DATA COMPRESSION ROUTINE'                             
**********************************************************************          
* COMPRESS - DATA COMPRESSION ROUTINE                                *          
* PARAMETERS:                                                        *          
*                                                                    *          
*                                                                    *          
* ENTRY:                                                             *          
* XL4 =LENGTH(SOURCE DATA)                                           *          
* RETURN:                                                            *          
* XL1 =RETURN CODE                                                   *          
* XL3 =LENGTH(COMPRESSED DATA)                                       *          
*                                                                    *          
* AL4 =A(FIRST CHARACTER IN SOURCE DATA)                             *          
*                                                                    *          
* AL4 =A(FIRST CHARACTER IN DESTINATION DATA)                        *          
*                                                                    *          
* THIS ROUTINE COMPRESSES OUTGOING DATA OF THE ITEM ABOUT TO BE PUT. *          
*                                                                    *          
* 'DINK' WILL BE REPLACED BY A '?0A'                                 *          
* '+' WILL BE REPLACED BY A '?0B'                                    *          
* '?' WILL BE REPLACED BY A '?0C'                                    *          
*                                                                    *          
* COMPRESSIONS WILL HAVE THE FOLLOWING FORMAT: ?N*.                  *          
* ? IS THE ESCAPE CHARACTER                                          *          
* N IS THE CHARACTER (4-9, A-Z, AND LOWER CASE A-Z) SIGNIFYING       *          
*      THE NUMBER OF TIMES THE CHARACTER IS REPEATED (4-61 MAX)      *          
* * IS THE CHARACTER TO BE REPEATED                                  *          
**********************************************************************          
         SPACE 1                                                                
         PRINT NOGEN                                                            
COMPRES  CSECT                                                                  
         NMOD1 WORKX-WORKD,**COMP**,CLEAR=YES,RR=RA                             
         USING WORKD,RC                                                         
         ST    R1,APARM                                                         
         ST    RA,RELO                                                          
         B     INIT                                                             
         SPACE 1                                                                
**********************************************************************          
* INITIALISE WORK AREAS                                              *          
**********************************************************************          
         SPACE 1                                                                
INIT     EQU   *                                                                
         MVC   PARM,0(R1)                                                       
         ICM   R5,15,ADATA         R5 = A(FIRST CHAR IN SOURCE DATA)            
         ICM   R4,15,DATALEN       R4 = LENGTH(SOURCE DATA)                     
         ICM   R3,15,ACOMP         R3 = A(FIST CHAR IN DEST DATA)               
         OC    DATALEN,DATALEN                                                  
         BZ    ERROR01                                                          
         B     PROCESS                                                          
*                                                                               
EXIT     L     R1,APARM            EXIT WITH UPDATED PARAMETER LIST             
         MVC   0(L'PARM,R1),PARM                                                
         XMOD1 1                                                                
         EJECT                                                                  
**********************************************************************          
* MAIN PROCESS ROUTINE                                               *          
**********************************************************************          
         SPACE 1                                                                
PROCESS  EQU   *                                                                
*                                                                               
         SR    R2,R2               R2 = REPEATING CHARACTER                     
         SR    R1,R1               R1 = NUMBER OF REPETITIONS                   
*                                                                               
PROC010  CLM   R2,1,0(R5)          IF NEW CHARACTER                             
         BE    PROC100                                                          
*                                                                               
         BAS   RE,COMPREV          THEN COMPRESS PREV REPEATED CHARS            
*                                                                               
         CLI   0(R5),DINKCHR       IF NEW CHARACTER IS A 'DINK'                 
         BNE   PROC020                                                          
         MVI   BYTE,C'A'           THEN EXPAND IT TO '?0A'                      
         B     PROC200                                                          
*                                                                               
PROC020  CLI   0(R5),C'+'          ELSE IF NEW CHARACTER IS A '+'               
         BNE   PROC030                                                          
         MVI   BYTE,C'B'           THEN EXPAND IT TO '?0B'                      
         B     PROC200                                                          
*                                                                               
PROC030  CLI   0(R5),C'?'          ELSE IF NEW CHARACTER IS A '?'               
         BNE   PROC040                                                          
         MVI   BYTE,C'C'           THEN EXPAND IT TO '?0C'                      
         B     PROC200                                                          
*                                                                               
PROC040  IC    R2,0(R5)            ELSE R2 = NEW CHAR                           
         LA    R1,1                     R1 = NUM OF REPS = 1                    
         B     PROC300                                                          
*                                                                               
PROC100  LA    R1,1(R1)            ELSE (NOT NEW CHAR) BUMP REP COUNT           
*                                                                               
         CH    R1,=H'61'           IF REP COUNT >= 61                           
         BL    PROC300                                                          
         BAS   RE,COMPREV          THEN COMPRESS PREV REPEATED CHARS            
         B     PROC300                                                          
*                                                                               
PROC200  MVC   0(2,R3),=C'?0'      STORE ESCAPE SEQUENCE ?0* WHERE              
         MVC   2(1,R3),BYTE            * IS STORED IN BYTE                      
         LA    R3,3(R3)                                                         
*                                                                               
PROC300  LA    R5,1(R5)            BUMP R5 TO NEXT BYTE OF SOURCE DATA          
         BCT   R4,PROC010          REPEAT UNTIL NO MORE SOURCE DATA             
*                                                                               
         LTR   R1,R1               IF CHARS LEFT OVER TO BE PUT                 
         BZ    *+8                                                              
         BAS   RE,COMPREV          THEN COMPRESS LEFT OVER DATA                 
*                                                                               
         MVC   ADATA,ACOMP         SET A(DATA) TO A(COMPRESSED BUFFER)          
*                                                                               
         L     RF,ACOMP            SET LEN OF COMPRESSED DATA                   
         SR    R3,RF                                                            
         ST    R3,COMPLEN                                                       
*                                                                               
PROCX    B     RETURN                                                           
         EJECT                                                                  
**********************************************************************          
* RETURN TO CALLER                                                   *          
**********************************************************************          
         SPACE 1                                                                
RETURN   EQU   *                                                                
         MVC   DATALEN,COMPLEN                                                  
         MVI   RETCODE,0           SET RETURN CODE TO OK                        
         B     EXIT                EXIT TO CALLER                               
         SPACE 1                                                                
ERROR01  EQU   *                                                                
         MVI   RETCODE,X'01'       SET RETURN CODE TO ERROR                     
         B     EXIT                EXIT TO CALLER                               
         SPACE 1                                                                
ERROR02  EQU   *                                                                
         MVI   RETCODE,X'02'       SET RETURN CODE TO ERROR                     
         B     EXIT                EXIT TO CALLER                               
         SPACE 1                                                                
ERROR03  EQU   *                                                                
         MVI   RETCODE,X'03'       SET RETURN CODE TO ERROR                     
         B     EXIT                EXIT TO CALLER                               
         EJECT                                                                  
***********************************************************************         
* THIS ROUTINE STORES THE APPROPRIATE COMPRESSION SEQUENCE FOR THE              
* PREVIOUSLY REPEATED CHARACTERS IN THE DESTINATION DATA.                       
***********************************************************************         
COMPREV  DS    0H                                                               
         LTR   R1,R1               IF NO PREVIOUS CHAR                          
         BZ    CPX                 THEN RETURN                                  
*                                                                               
         CH    R1,=H'4'            ELSE IF NUMBER OF REPS < 4                   
         BNL   CP20                                                             
*                                                                               
CP10     STC   R2,0(R3)            THEN LOOP AND SAVE REPEATED CHAR             
         LA    R3,1(R3)                TO DEST DATA                             
         BCT   R1,CP10                                                          
         B     CPX                 AND RETURN                                   
*                                                                               
CP20     CH    R1,=H'10'           ELSE IF NUMBER OF REPS < 10                  
         BNL   CP30                                                             
         LA    R0,C'0'             THEN REPEAT CODE IS FROM '4'-'9'             
         B     CP100                                                            
*                                                                               
CP30     CH    R1,=H'19'           ELSE IF NUMBER OF REPS < 19                  
         BNL   CP40                                                             
         LA    R0,C'A'-10          THEN REPEAT CODE IS FROM 'A'-'I'             
         B     CP100                                                            
*                                                                               
CP40     CH    R1,=H'28'           ELSE IF NUMBER OF REPS < 28                  
         BNL   CP50                                                             
         LA    R0,C'J'-19          THEN REPEAT CODE IS FROM 'J'-'R'             
         B     CP100                                                            
*                                                                               
CP50     CH    R1,=H'36'           ELSE IF NUMBER OF REPS < 36                  
         BNL   CP60                                                             
         LA    R0,C'S'-28          THEN REPEAT CODE IS FROM 'S'-'Z'             
         B     CP100                                                            
*                                                                               
CP60     CH    R1,=H'45'           ELSE IF NUMBER OF REPS < 45                  
         BNL   CP70                                                             
         LA    R0,X'81'-36         THEN REPEAT CODE IS LOWER 'A'-'I'            
         B     CP100                                                            
*                                                                               
CP70     CH    R1,=H'54'           ELSE IF NUMBER OF REPS < 54                  
         BNL   CP80                                                             
         LA    R0,X'91'-45         THEN REPEAT CODE IS LOWER 'J'-'R'            
         B     CP100                                                            
*                                                                               
CP80     LA    R0,X'A2'-54         ELSE REPEAT CODE IS LOWER 'S'-'Z'            
*                                                                               
CP100    MVI   0(R3),C'?'          STORE COMP SEQUENCE IN DEST DATA             
         AR    R0,R1                                                            
         STC   R0,1(R3)                                                         
         STC   R2,2(R3)                                                         
*                                                                               
         LA    R3,3(R3)            BUMP R3 TO NEXT POS IN DEST DATA             
*                                                                               
         SR    R1,R1               CLEAR REPEAT CHAR AND COUNT                  
         SR    R2,R2                                                            
*                                                                               
CPX      BR    RE                                                               
         EJECT                                                                  
*                                                                               
YES      SR    RC,RC                                                            
NO       LTR   RC,RC                                                            
         XIT1                                                                   
*                                                                               
DINKCHR  EQU   X'5F'                                                            
FIRST    DC    C' '                                                             
SPACES   DC    128C' '                                                          
*                                                                               
         EJECT                                                                  
         LTORG                                                                  
         DS    0D                                                               
         EJECT                                                                  
WORKD    DSECT                                                                  
*                                                                               
DMCB     DS    6F                                                               
DATAMGR  DS    V                                                                
RELO     DS    A                                                                
DUB      DS    D                                                                
APARM    DS    A                   A(PARAMETER LIST)                            
*                                                                               
PARM     DS    0XL12               PARAMETER LIST                               
RETCODE  DS    XL1                 ROUTINE RETURN CODE                          
         DS    XL1                 N/D                                          
         ORG   RETCODE                                                          
DATALEN  DS    XL4                 LENGTH SOURCE DATA                           
*                                                                               
ADATA    DS    AL4                 A(FIRST CHAR IN SOURCE DATA)                 
*                                                                               
ACOMP    DS    AL4                 A(FIRST CHAR IN DESTINATION DATA)            
*                                                                               
COMPLEN  DS    AL4                 LENGTH COMPRESSED DATA                       
BYTE     DS    XL1                                                              
*                                                                               
WORKX    EQU   *                                                                
         EJECT                                                                  
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'004DDCOMPRES 05/01/02'                                      
         END                                                                    
**PAN#1  CSECT                                                                  
         END                                                                    
