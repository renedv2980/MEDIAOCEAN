*          DATA SET DMENQCTL   AT LEVEL 002 AS OF 08/16/13                      
*CATALP DMENQCTL                                                                
                                                                                
*P1/0    ACTION VALUE     A=ADD A NEW ENQUEUE RECORD                            
*                         D=DEQUEUE RESOURCE                                    
*                         E=ENQUEUE RESOURCE (UNCONDITIONAL)                    
*                         F=ENQUEUE RESOURCE IF AVAIL ELSE RETURN               
*                         N=CHANGE DDSQDQ DDNAME TO NAME AT P1+1(3)             
*                         R=READ ENQUEUE RECORD KEY AND DATA                    
*                         S=SWAP STATUS TO P1+1(3)=C'YES' OR C'NO '             
*                         T=TEST RESOURCE STATUS                                
*                         X=DUMMY CALL                                          
*                         1=READ CONTROL RECORD                                 
*                         2=WRITE CONTROL RECORD                                
*                         3=ADD A NEW CONTROL RECORD                            
*                         4=READ MEDZ RECORD                                    
*                         5=WRITE MEDZ RECORD                                   
*                         6=ADD A NEW MEDZ RECORD                               
                                                                                
*P1/1-3  A(RESOURCE)      FOR ACTIONS D,E,F,T ONLY                              
*                         C'PRTQ?'=PRTQUE FILE                                  
*                         C'WRKF?'=PRTQUE FILE                                  
*                         C'WRKR' =WKFILE FILE                                  
*                         C'FACW' =FACWRK FILE                                  
*                         C'EASI' =EASIWK FILE                                  
*                         C'CTRL' =CONTROL SYSTEM (ALSO FOR 1/2/3)              
*                         C'MEDZ' =MEDIA Z SYSTEM (ALSO FOR 4/5/6)              
*                         C'ALL'  =ALL RESOURCES FOR THIS CPU/ADR               
*                         C'IFI ' =ALL RESOURCES IF I DID ANY                   
*                         C'CPU ' =ALL RESOURCES FOR THIS CPU                   
                                                                                
*P2/0    RETURN CODE      X'80'=ENQREC DISK ERROR                               
*                         X'40'=ENQREC NOT FOUND                                
*                         X'10'=CANT ENQ/DEQ MORE THAN ONE PRTQ                 
*                         X'08'=WAIT OCCURED ON RESOURCE                        
*                         X'04'=RESOURCE WAS ENQUEUED BY THIS CALL              
*                         X'02'=RESOURCE IS OWNED BY SOMEONE ELSE               
*                         X'01'=RESOURCE IS OWNED BY MYSELF                     
*                                                                               
*P2/1-3  RETURN ADDR      ADDRESS OF VARIOUS INTERNAL AREAS                     
                                                                                
*P3/0-1  RETURN CPU ID    DOS=P'0NNN' CPU NUMBER PWOS                           
*                         MVS=C'XX'   LAST TWO CHRS OF CPU ALPHA ID             
*                                                                               
*P3/2-3  RETURN ADR ID    DOS=X'00PP' WHERE PP IS PARTITION PIK                 
*                         MVS=X'AAAA' WHERE AAAA IS ADDRESS SPACE NUM           
                                                                                
         TITLE 'DMENQCTL - ENQUEUE/DEQUEUE CONTROL SYSTEM RESOURCES'            
         PRINT NOGEN                                                            
DMENQCTL CSECT                                                                  
         ENTRY DDSQDC              DDSQDC DTF                                   
         NMOD1 WRKX-WRKD,DMENQDEQ,R6,RA,RR=R7                                   
         USING WRKD,RC                                                          
         PROT  OFF                 TURN OFF MEMORY PROTECTION                   
         ST    R7,RELO                                                          
         ST    R1,SAVER1                                                        
         SAM24                     SET 24-BIT MODE                              
         MVC   ACTN,0(R1)          SAVE ACTION VALUE                            
*                                                                               
DMENQS1  CLI   ACTN,C'N'           RENAME DDSQDQ DDNAME                         
         BNE   DMENQS1X                                                         
         L     R7,0(R1)            A(NEW DDNAME FOR DDSQDQ)                     
         L     R8,VFILE            A(DDSQDQ DTF)                                
         MVC   DTFFID-DTF(7,R8),0(R7) OVERRIDE DDSQDQ DDNAME IN DTF             
         B     DMENQXX                                                          
DMENQS1X EQU   *                                                                
*&&UK                                                                           
DMENQS2  ICM   RF,15,=V(MEDDIRZ)   IS MEDZ A GLOBAL SYSTREM                     
         BZ    DMENQS2X                                                         
         TM    DTFFLAG-DTF(RF),DTFGLOB                                          
         BZ    DMENQS2X                                                         
         L     RF,0(R1)                                                         
         CLC   0(4,RF),=C'MEDZ'    IGNORE MEDZ CALLS                            
         BNE   DMENQS2X                                                         
         XC    4(1,R1),4(R1)       CLEAR RETURN CODE                            
         B     DMENQXX                                                          
DMENQS2X EQU   *                                                                
*&&                                                                             
DMENQS3  ICM   RF,15,=V(GENDIR)    IS CTRL A GLOBAL SYSTREM                     
         BZ    DMENQS3X                                                         
         TM    DTFFLAG-DTF(RF),DTFGLOB                                          
         BZ    DMENQS3X                                                         
         L     RF,0(R1)                                                         
         CLC   0(4,RF),=C'CTRL'    IGNORE CTRL CALLS                            
         BNE   DMENQS3X                                                         
         XC    4(1,R1),4(R1)       CLEAR RETURN CODE                            
         B     DMENQXX                                                          
DMENQS3X EQU   *                                                                
*                                                                               
DMENQ0   CLI   INITFLAG,C'Y'                                                    
         BNE   DMENQ3              INITIALISE ON FIRST CALL                     
*                                                                               
DMENQ1   SR    R7,R7               SET ONLINE TASK DATA                         
         SR    R8,R8                                                            
         XC    SMFREC,SMFREC       CLEAR SMF RECORD                             
         LA    RE,SMFRECX-SMFREC                                                
         STCM  RE,3,SMFRECLN       SET RECORD LENGTH IN FIRST TWO BYTES         
         TM    PROCMODE,OFFLINE                                                 
         BO    DMENQ1A                                                          
         L     R7,VSSB             R7=A(SSB)                                    
         USING SSBD,R7                                                          
         L     R8,SSBTKADR         R8=A(TCB)                                    
         USING TCBD,R8                                                          
         MVC   SMFTASK,TCBID+6                                                  
DMENQ1A  L     R1,SAVER1           SET RETURN VALUES                            
         LA    RE,RETADDRS                                                      
         ST    RE,4(R1)                                                         
         MVC   08(2,R1),CPU+2                                                   
         MVC   10(2,R1),ADR+2                                                   
*                                                                               
DMENQ2   LA    RE,ACTNTBL          VALIDATE ACTION VALUE                        
DMENQ2A  CLI   0(RE),0                                                          
         BNE   *+12                                                             
         MVI   RSLT,4              INVALID ACTION                               
         BAS   R9,ERR                                                           
         CLC   ACTN,0(RE)                                                       
         BE    DMENQ2B                                                          
         LA    RE,4(RE)                                                         
         B     DMENQ2A                                                          
DMENQ2B  SR    RF,RF                                                            
         ICM   RF,7,1(RE)                                                       
         BR    RF                  PASS CONTROL TO ACTION ROUTINE               
         EJECT                                                                  
***********************************************************************         
* INITIALISE LOCAL VARAIABLES ON FIRST CALL                           *         
* PQ'S ARE INITIALISED FROM FASTART SO THIS CODE RUNS UNDER FASTART   *         
***********************************************************************         
DMENQ3   MVI   PROCMODE,OFFLINE    FIRST CALL - SET OFF/ONLINE FLAGS            
         ICM   RE,15,VSSB                                                       
         BZ    DMENQ3B                                                          
         OC    0(2,RE),0(RE)       1ST 2 BYTES OF SSB ZEROS IF OFFLINE          
         BZ    DMENQ3A                                                          
         MVI   PROCMODE,X'00'      PROCESS MODE ONLINE                          
         B     DMENQ3B                                                          
DMENQ3A  CLI   2(RE),X'FF'         TEST IF EXTENDED OFFLINE SSB                 
         BNE   DMENQ3B                                                          
         TM    4(RE),X'80'         TEST IF MULTI TASKING OFFLINE                
         BZ    DMENQ3B                                                          
         OI    PROCMODE,OFFMULTI   PROCESS MODE MULTI TASKING                   
DMENQ3B  BAS   R9,GETTIM           GET TIME/CPUID/ASID/JOBNAME                  
         BAS   R9,GETCPU                                                        
         BAS   R9,GETADR                                                        
         BAS   R9,GETJOB                                                        
         XC    MYKEY,MYKEY         SET CPU AND ADDRESS SPACE IN MY KEY          
         MVC   MYKCPU,CPU                                                       
         MVC   MYKADR,ADR                                                       
         MVC   IDATE(8),DATE       SET DATE/TIME INITIALISED                    
*                                                                               
DMENQ4   CLI   ACTN,C'D'           EXIT IF FIRST CALL C'D'/C'IFI'               
         BNE   DMENQ4A                                                          
         L     R1,SAVER1                                                        
         L     RF,0(R1)                                                         
         CLC   0(3,RF),=C'IFI'                                                  
         BNE   DMENQ4A                                                          
         LA    RE,RETADDRS                                                      
         ST    RE,4(R1)                                                         
         MVC   08(2,R1),CPU+2                                                   
         MVC   10(2,R1),ADR+2                                                   
         B     DMENQXIT                                                         
DMENQ4A  LA    R1,RETADDRS         CALL INITIIALISATION ROUTINE                 
         L     RF,=A(INIT)                                                      
         BASR  RE,RF                                                            
         BNE   DMENQERR            FAILURE TO INITIALISE                        
*                                                                               
DMENQ5   MVI   BYTE,0              VALIDATE ENQUEUE RECORD                      
         CLI   ACTN,C'A'                                                        
         BNE   *+12                                                             
DMENQ5A  BAS   RE,PADD             ADD NEW RECORD IF FIRST ACTN IS ADD          
         BNE   DMENQER3                                                         
         MVI   ENQERR,0                                                         
DMENQ5B  BAS   RE,PREAD            READ ENQUEUE RECORD                          
         BE    DMENQ6                                                           
         IC    RE,ENQERR           BUMP DISKERR COUNT                           
         LA    RE,1(RE)                                                         
         STC   RE,ENQERR                                                        
         CLI   ENQERR,ERRMAX       TRY AGAIN IF LEQ MAX ERROR COUNT             
         BNH   DMENQ5B                                                          
         CLI   BYTE,1              DIE IF SECOND ATTEMPT                        
         BE    DMENQER3                                                         
         TM    IOERR,X'40'         ADD NEW RECORD IF NOT FOUND                  
         BZ    DMENQER3                                                         
         BAS   RE,CPADD            ADD NEW CTRL RECORD AS WELL                  
         BAS   RE,MPADD            ADD NEW MEDZ RECORD AS WELL                  
         MVI   BYTE,1              SET SECOND ATTEMPT AND TRY AGAIN             
         B     DMENQ5A                                                          
*                                                                               
DMENQ6   MVC   HALF(1),ACTN        DEQUEUE ALL RESOURCES I MAY OWN              
         MVI   ACTN,C'D'                                                        
         L     R2,=A(CLMSCR)                                                    
         MVC   RSRC0,CPU                                                        
         MVC   RSRC1,SPACES                                                     
         MVC   RSRC2,SPACES                                                     
         XC    VENQFIL,VENQFIL                                                  
         MVC   RSRC1(3),=C'ALL'                                                 
         BAS   R9,QDQA                                                          
         MVC   ACTN,HALF                                                        
         CLI   IOERR,0                                                          
         BNE   DMENQER3                                                         
         MVI   INITFLAG,C'Y'       SET INITIALISED FLAG                         
         B     DMENQ1                                                           
*                                                                               
DMENQER3 MVI   RSLT,3              SET DISK ERROR ON ENQ FILE                   
DMENQERR BAS   R9,ERR              DIE ON ERROR                                 
         EJECT                                                                  
***********************************************************************         
* ROUTINES FOR ACTIONS POINTED TO BY ACTNTBL                          *         
***********************************************************************         
ADD      BAS   RE,PADD             ADD A NEW INITIALISED ENQUEUE REC            
         B     DMENQR                                                           
*                                                                               
REA      BAS   RE,PREAD            READ ENQUEUE REC                             
         B     DMENQR                                                           
*                                                                               
SWA      L     R1,SAVER1                                                        
         CLC   1(3,R1),=C'YES'     C'SYES' IN P1 SWAPABLE=YES                   
         BNE   *+12                                                             
         BAS   R9,SWAPYES                                                       
         B     DMENQX                                                           
         L     R1,SAVER1                                                        
         CLC   1(2,R1),=C'NO'      C'SNO ' IN P1 SWAPABLE=NO                    
         BNE   *+12                                                             
         BAS   R9,SWAPNO                                                        
         B     DMENQX                                                           
         DC    H'0'                INVALID SWAPABLE ACTION                      
*                                                                               
CADD     BAS   RE,CPADD            ADD A NEW INITIALISED CONTROL REC            
         B     DMENQR                                                           
*                                                                               
CREA     BAS   RE,CPREAD           READ CONTROL REC                             
         B     DMENQR                                                           
*                                                                               
CWRI     BAS   RE,CPWRITE          WRITE CONTROL REC                            
         B     DMENQR                                                           
*                                                                               
MADD     BAS   RE,MPADD            ADD A NEW INITIALISED MEDZ REC               
         B     DMENQR                                                           
*                                                                               
MREA     BAS   RE,MPREAD           READ MEDZ REC                                
         B     DMENQR                                                           
*                                                                               
MWRI     BAS   RE,MPWRITE          WRITE MEDZ REC                               
         B     DMENQR                                                           
*                                                                               
DMENQR   L     R1,SAVER1           RETURN RESULT OF I/O                         
         MVC   4(1,R1),IOERR                                                    
         B     DMENQX                                                           
*                                                                               
DMENQX   TM    SMFFLAG,SMFFOUT     TEST IF ANY RELEVANT SMF DATA                
         BZ    DMENQXX                                                          
         ICM   RF,15,=V(SMFOUT)                                                 
         BZ    DMENQXX                                                          
         GOTO1 (RF),DUB,3,SMFREC   OUTPUT TYPE#3 DDS SMFREC                     
*                                                                               
DMENQXX  EQU   *                                                                
DMENQXIT EQU   *                                                                
         PROT  ON                  RESTORE MEMORY PROTECTION                    
         XMOD1 1                   RESTORE CALLER'S ADDRESSING MODE             
         EJECT                                                                  
***********************************************************************         
* QDQ FILE CODE                                                       *         
***********************************************************************         
QDQ      MVC   RSRC0,CPU           MY CPU AND ADR IS FIRST LEVEL                
         MVC   RSRC1,SPACES        PASSED RESOURCE NAME IS NEXT LEVEL           
         MVC   RSRC2,SPACES        RESERVED FOR SUB RESOURCE                    
         XC    VENQFIL,VENQFIL                                                  
         XC    RSLTINFO,RSLTINFO   CLEAR STATUS/RETURN FLAGS                    
         L     R1,SAVER1                                                        
         L     R4,0(R1)            R4=A(RESOURCE NAME)                          
         L     R2,=A(CLMSCR)       R2=A(COUNTERS LIST)                          
*                                                                               
         CLC   0(4,R4),=C'PRTQ'    TEST SPECIAL RESOURCES                       
         BE    QDQPQ                                                            
         CLC   0(4,R4),=C'WRKR'                                                 
         BE    QDQWK                                                            
         CLC   0(4,R4),=C'FACW'                                                 
         BE    QDQFW                                                            
         CLC   0(4,R4),=C'WRKF'                                                 
         BE    QDQWF                                                            
         CLC   0(4,R4),=C'EASI'                                                 
         BE    QDQEW                                                            
         CLC   0(4,R4),=C'CTRL'                                                 
         BE    QDQCT                                                            
         CLC   0(4,R4),=C'MEDZ'                                                 
         BE    QDQMZ                                                            
*                                                                               
QDQALL   CLC   0(3,R4),=C'ALL'     ALL RESOURCES FOR THIS ADR OR CPU            
         BE    *+14                                                             
         CLC   0(3,R4),=C'IFI'                                                  
         BNE   QDQALLA                                                          
         MVC   RSRC1(3),=C'ALL'                                                 
         B     QDQALLB                                                          
QDQALLA  CLC   0(03,R4),=C'CPU'                                                 
         BNE   QDQINV                                                           
         MVC   RSRC1(6),=C'ALLCPU'                                              
QDQALLB  SR    R9,R9                                                            
         CLI   ACTN,C'D'           VALID FOR DEQUEUE                            
         BE    QDQA                                                             
         CLI   ACTN,C'T'           VALID FOR TEST                               
         BE    QDQA                                                             
         MVI   RSLT,5              INVALID RESOURCE                             
         BAS   R9,ERR                                                           
*                                                                               
QDQINV   MVI   RSLT,5              INVALID RESOURCE                             
         BAS   R9,ERR                                                           
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE PRINT QUEUE (PRTQ?)                                 *         
***********************************************************************         
QDQPQ    MVC   PRTQINFO(8),PRTQDFL SET DEFAULT IF NO V(PRTQLST)                 
         MVC   LOCKEXT,PRTQEXT                                                  
         XC    PRTQSSBA,PRTQSSBA                                                
         ICM   RF,15,VPRTQLST                                                   
         BZ    QDQPQB                                                           
         LA    RF,8(RF)                                                         
QDQPQA   CLI   0(RF),0             SEARCH FOR PRTQ CHR                          
         BE    QDQINV              WAS BE QDQPQB IE USE DEFAULT                 
         CLC   1(1,RF),4(R4)                                                    
         BE    *+12                                                             
         LA    RF,8(RF)                                                         
         B     QDQPQA                                                           
         MVC   PRTQINFO(8),0(RF)   SAVE PRTQ INFO FROM LIST                     
         MVC   LOCKEXT,PRTQEXT                                                  
QDQPQB   L     R2,=A(CLPRTR)                                                    
         MVC   DUB,SPACES                                                       
         SR    RF,RF                                                            
         ICM   RF,7,PRTQDTF        SET MASTER FILE ADR IF OPEN                  
         BZ    QDQPQC                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQPQC                                                           
         ST    RF,VENQFIL                                                       
         BAS   R9,GETSUB           GET SUB RESOURCE ID INTO DUB                 
QDQPQC   MVC   RSRC1(4),=C'PRTQ'                                                
         MVC   RSRC1+4(4),DUB                                                   
         CLI   PRTQCHR,C'U'        SET RESOURCE ID FOR MULTIPLE PQS             
         BE    *+10                                                             
         MVC   RSRC1+2(1),PRTQCHR                                               
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQA                                                             
*                                                                               
         SR    RF,RF               GET A(SLOT IN SSB FOR THIS PRTQ)             
         IC    RF,PRTQINT                                                       
         BCTR  RF,0                                                             
         SLL   RF,1                EACH ENTRY IS TWO BYTES LONG                 
         LA    RF,SSBPQINF(RF)                                                  
         ST    RF,PRTQSSBA         SAVE SSB LOCATION                            
*                                                                               
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK PRTQ             
         BE    QDQPQD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQPQE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQPQE                                                           
         B     QDQA                                                             
*                                                                               
QDQPQD   TM    TCBFLAG1,TCBENQPQ   EXIT IF TASK DOESNT OWN THIS PRTQ            
         BZ    QDQX                                                             
         CLC   TCBPQCHR,PRTQCHR    CANT OWN ONE AND DEQUEUE ANOTHER             
         BE    *+12                                                             
         MVI   IOERR,X'10'                                                      
         B     QDQX                                                             
         L     RF,PRTQSSBA         RF=A(SSB ENTRY FOR THIS PRTQ)                
         CLI   1(RF),0             TEST IF A TASK IS DEQUEUEING                 
         BE    QDQPQD1             NO                                           
         CLC   1(1,RF),TCBID+6     IGNORE IF I ALREADY OWN IT                   
         BE    QDQPQD1                                                          
         BAS   RE,TSKWAIT          YES WAIT FOR THIS TASK                       
         BAS   RE,TSKFREE          AND FREE UP FOR ANOTHER ATTEMPT              
         B     QDQPQD                                                           
QDQPQD1  CLI   0(RF),1             TEST TASK COUNT OWNING PRTQ                  
         BH    QDQPQD2                                                          
         MVC   1(1,RF),TCBID+6                                                  
         BAS   RE,TSKWAIT          TELL OTHER TASKS TO WAIT FOR ME              
         BAS   R9,QDQA             THIS TASK WILL DEQ PRTQ                      
         L     RF,PRTQSSBA                                                      
         MVI   1(RF),0                                                          
         BAS   RE,TSKFREE          FREE ANY TASKS THAT WERE WAITING             
QDQPQD2  ZIC   R1,0(RF)                                                         
         SH    R1,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    R1,R1                                                            
         STC   R1,0(RF)                                                         
         NI    TCBFLAG1,255-TCBENQPQ SET THIS TASK DOESNT OWN PRTQ              
         MVI   TCBPQCHR,0          AND CLEAR PRTQ FILE ID CHR                   
         B     QDQX                                                             
*                                                                               
QDQPQE   TM    TCBFLAG1,TCBENQPQ   EXIT IF TASK ALREADY OWNS PRTQ               
         BZ    QDQPQE0                                                          
         CLC   TCBPQCHR,PRTQCHR    CANT OWN MORE THAN ONE                       
         BE    QDQX                                                             
         MVI   IOERR,X'10'                                                      
         B     QDQX                                                             
*                                                                               
QDQPQE0  L     RF,PRTQSSBA         RF=A(SSB ENTRY FOR THIS PRTQ)                
         CLI   1(RF),0             TEST IF A TASK IS ENQUEUEING                 
         BE    QDQPQE1             NO                                           
         CLC   1(1,RF),TCBID+6     IGNORE IF I ALREADY OWN IT                   
         BE    QDQPQE1                                                          
         BAS   RE,TSKWAIT          YES WAIT FOR THIS TASK                       
         BAS   RE,TSKFREE          AND FREE UP FOR ANOTHER ATTEMPT              
         B     QDQPQE                                                           
*                                                                               
QDQPQE1  CLI   0(RF),0             TEST TASK COUNT OWNING PRTQ                  
         BNE   QDQPQE2                                                          
         MVC   1(1,RF),TCBID+6                                                  
         BAS   RE,TSKWAIT          TELL OTHER TASKS TO WAIT FOR ME              
         BAS   R9,QDQA             THIS TASK WILL ENQ PRTQ                      
         L     RF,PRTQSSBA                                                      
         MVI   1(RF),0                                                          
         BAS   RE,TSKFREE          FREE ANY TASKS THAT WERE WAITING             
         CLI   RSLT,0                                                           
         JNE   *+2                 THIS TASK DIES IF FAILS TO ENQ               
QDQPQE2  IC    R1,0(RF)                                                         
         LA    R1,1(R1)            BUMP TASK COUNT                              
         STC   R1,0(RF)                                                         
         OI    TCBFLAG1,TCBENQPQ   SET THIS TASK OWNS PRTQ                      
         MVC   TCBPQCHR,PRTQCHR    SET PRTQ ID CHR OF PRTQ OWNED                
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE WKFILE (WRKR)                                       *         
***********************************************************************         
QDQWK    L     R2,=A(CLWRKR)       COUNTERS FOR WKFILE                          
         MVC   DUB,SPACES                                                       
         ICM   RF,15,VWKFILE       SET MASTER FILE ADR IF OPEN                  
         BZ    QDQWKA                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQWKA                                                           
         ST    RF,VENQFIL                                                       
QDQWKA   MVC   RSRC1(4),=C'WRKR'                                                
         MVC   RSRC1+4(1),PRODTEST                                              
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQA                                                             
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK WRKR             
         BE    QDQWKD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQWKE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQWKE                                                           
         B     QDQA                                                             
*                                                                               
QDQWKD   TM    TCBFLAG1,TCBENQWK   EXIT IF TASK DOESNT OWN WRKR                 
         BZ    QDQX                                                             
         OC    SSBWKTSK+1(3),SSBWKTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQWKD                                                           
         CLI   SSBWKTSK,1          TEST TASK COUNT OWNING WRKR                  
         BH    QDQWKD1                                                          
         MVC   SSBWKTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL DEQ WRKR                      
         XC    SSBWKTSK+1(3),SSBWKTSK+1                                         
QDQWKD1  ZIC   RF,SSBWKTSK                                                      
         SH    RF,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    RF,RF                                                            
         STC   RF,SSBWKTSK                                                      
         NI    TCBFLAG1,255-TCBENQWK    SET THIS TASK DOESNT OWN WRKR           
         B     QDQX                                                             
*                                                                               
QDQWKE   TM    TCBFLAG1,TCBENQWK    EXIT IF TASK ALREADY OWNS WRKR              
         BO    QDQX                                                             
         OC    SSBWKTSK+1(3),SSBWKTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQWKE                                                           
         CLI   SSBWKTSK,0          TEST TASK COUNT OWNING WRKR                  
         BNE   QDQWKE1                                                          
         MVC   SSBWKTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL ENQ WRKR                      
         XC    SSBWKTSK+1(3),SSBWKTSK+1                                         
         CLI   RSLT,0                                                           
         JNE   *+2                 DIE IF CANT ENQUEUE WRKR                     
QDQWKE1  IC    RF,SSBWKTSK                                                      
         LA    RF,1(RF)            BUMP TASK COUNT                              
         STC   RF,SSBWKTSK                                                      
         OI    TCBFLAG1,TCBENQWK   SET THIS TASK OWNS WRKR                      
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE FACWRK (FACW)                                       *         
***********************************************************************         
QDQFW    L     R2,=A(CLWRKR)       COUNTERS SAME AS FOR WKFILE                  
         MVC   DUB,SPACES                                                       
         ICM   RF,15,VFACWRK       SET MASTER FILE ADR IF OPEN                  
         BZ    QDQFWA                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQFWA                                                           
         ST    RF,VENQFIL                                                       
QDQFWA   MVC   RSRC1(4),=C'FACW'                                                
         MVC   RSRC1+4(1),PRODTEST                                              
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQA                                                             
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK FACW             
         BE    QDQFWD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQFWE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQFWE                                                           
         B     QDQA                                                             
*                                                                               
QDQFWD   TM    TCBFLAG2,TCBENQFW   EXIT IF TASK DOESNT OWN FACW                 
         BZ    QDQX                                                             
         OC    SSBFWTSK+1(3),SSBFWTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQFWD                                                           
         CLI   SSBFWTSK,1          TEST TASK COUNT OWNING FACW                  
         BH    QDQFWD1                                                          
         MVC   SSBFWTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL DEQ FACW                      
         XC    SSBFWTSK+1(3),SSBFWTSK+1                                         
QDQFWD1  ZIC   RF,SSBFWTSK                                                      
         SH    RF,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    RF,RF                                                            
         STC   RF,SSBFWTSK                                                      
         NI    TCBFLAG2,255-TCBENQFW SET THIS TASK DOESNT OWN FACW              
         B     QDQX                                                             
*                                                                               
QDQFWE   TM    TCBFLAG2,TCBENQFW   EXIT IF TASK ALREADY OWNS FACW               
         BO    QDQX                                                             
         OC    SSBFWTSK+1(3),SSBFWTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQFWE                                                           
         CLI   SSBFWTSK,0          TEST TASK COUNT OWNING FACW                  
         BNE   QDQFWE1                                                          
         MVC   SSBFWTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL ENQ FACW                      
         XC    SSBFWTSK+1(3),SSBFWTSK+1                                         
         CLI   RSLT,0                                                           
         JNE   *+2                 DIE IF CANT ENQUEUE FACW                     
QDQFWE1  IC    RF,SSBFWTSK                                                      
         LA    RF,1(RF)            BUMP TASK COUNT                              
         STC   RF,SSBFWTSK                                                      
         OI    TCBFLAG2,TCBENQFW   SET THIS TASK OWNS FACW                      
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE WRKF (WRKF?)                                        *         
***********************************************************************         
QDQWF    MVC   WRKFINFO(8),WRKFDFL SET DEFAULT IF NO V(WRKFLST)                 
         MVC   LOCKEXT,WRKFEXT                                                  
         XC    WRKFSSBA,WRKFSSBA                                                
         ICM   RF,15,VWRKFLST                                                   
         BZ    QDQWFB                                                           
         LA    RF,8(RF)                                                         
QDQWFA   CLI   0(RF),0             SEARCH FOR WRKF CHR                          
         BE    QDQINV              WAS BE QDQPQB IE USE DEFAULT                 
         CLC   1(1,RF),4(R4)                                                    
         BE    *+12                                                             
         LA    RF,8(RF)                                                         
         B     QDQWFA                                                           
         MVC   WRKFINFO(8),0(RF)   SAVE WRKF INFO FROM LIST                     
         MVC   LOCKEXT,WRKFEXT                                                  
QDQWFB   L     R2,=A(CLWKFR)                                                    
         MVC   DUB,SPACES                                                       
         SR    RF,RF                                                            
         ICM   RF,7,WRKFDTF        SET MASTER FILE ADR IF OPEN                  
         BZ    QDQWFC                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQWFC                                                           
         ST    RF,VENQFIL                                                       
         BAS   R9,GETSUB           GET SUB RESOURCE ID INTO DUB                 
QDQWFC   MVC   RSRC1(4),=C'WRKF'                                                
         MVC   RSRC1+4(4),DUB                                                   
         CLI   WRKFCHR,C'I'        SET RESOURCE ID FOR MULTIPLE PQS             
         BE    *+10                                                             
         MVC   RSRC1+2(1),WRKFCHR                                               
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQA                                                             
*                                                                               
         SR    RF,RF               GET A(SLOT IN SSB FOR THIS WRKF)             
         IC    RF,WRKFINT                                                       
         BCTR  RF,0                                                             
         SLL   RF,1                EACH ENTRY IS TWO BYTES LONG                 
         LA    RF,SSBWFINF(RF)                                                  
         ST    RF,WRKFSSBA         SAVE SSB LOCATION                            
*                                                                               
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK WRKF             
         BE    QDQWFD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQWFE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQWFE                                                           
         B     QDQA                                                             
*                                                                               
QDQWFD   TM    TCBFLAG2,TCBENQWF   EXIT IF TASK DOESNT OWN THIS WRKF            
         BZ    QDQX                                                             
         CLC   TCBWFCHR,WRKFCHR    CANT OWN ONE AND DEQUEUE ANOTHER             
         BE    *+12                                                             
         MVI   IOERR,X'10'                                                      
         B     QDQX                                                             
         L     RF,WRKFSSBA         RF=A(SSB ENTRY FOR THIS WRKF)                
         CLI   1(RF),0             TEST IF A TASK IS DEQUEUEING                 
         BZ    QDQWFD1             NO                                           
         CLC   1(1,RF),TCBID+6     IGNORE IF I ALREADY OWN IT                   
         BE    QDQWFD1                                                          
         BAS   RE,TSKWAIT          YES WAIT FOR THIS TASK                       
         BAS   RE,TSKFREE          AND FREE UP FOR ANOTHER ATTEMPT              
         B     QDQWFD                                                           
*                                                                               
QDQWFD1  CLI   0(RF),1             TEST TASK COUNT OWNING WRKF                  
         BH    QDQWFD2                                                          
         MVC   1(1,RF),TCBID+6                                                  
         BAS   RE,TSKWAIT          TELL OTHER TASKS TO WAIT FOR ME              
         BAS   R9,QDQA             THIS TASK WILL DEQ WRKF                      
         L     RF,WRKFSSBA                                                      
         MVI   1(RF),0                                                          
         BAS   RE,TSKFREE          FREE ANY TASKS THAT WERE WAITING             
QDQWFD2  ZIC   R1,0(RF)                                                         
         SH    R1,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    R1,R1                                                            
         STC   R1,0(RF)                                                         
         NI    TCBFLAG2,255-TCBENQWF    SET THIS TASK DOESNT OWN WRKF           
         MVI   TCBWFCHR,0          AND CLEAR WRKF FILE ID CHR                   
         B     QDQX                                                             
*                                                                               
QDQWFE   TM    TCBFLAG2,TCBENQWF   EXIT IF TASK ALREADY OWNS WRKF               
         BZ    QDQWFE0                                                          
         CLC   TCBWFCHR,WRKFCHR    CANT OWN MORE THAN ONE                       
         BE    QDQX                                                             
         MVI   IOERR,X'10'                                                      
         B     QDQX                                                             
*                                                                               
QDQWFE0  L     RF,WRKFSSBA         RF=A(SSB ENTRY FOR THIS WRKF)                
         CLI   1(RF),0             TEST IF A TASK IS ENQUEUEING                 
         BZ    QDQWFE1             NO                                           
         CLC   1(1,RF),TCBID+6     IGNORE IF I ALREADY OWN IT                   
         BE    QDQWFE1                                                          
         BAS   RE,TSKWAIT          YES WAIT FOR THIS TASK                       
         BAS   RE,TSKFREE          AND FREE UP FOR ANOTHER ATTEMPT              
         B     QDQWFE                                                           
*                                                                               
QDQWFE1  CLI   0(RF),0             TEST TASK COUNT OWNING WRKF                  
         BNE   QDQWFE2                                                          
         MVC   1(1,RF),TCBID+6                                                  
         BAS   RE,TSKWAIT          TELL OTHER TASKS TO WAIT FOR ME              
         BAS   R9,QDQA             THIS TASK WILL ENQ WRKF                      
         L     RF,WRKFSSBA                                                      
         MVI   1(RF),0                                                          
         BAS   RE,TSKFREE          FREE ANY TASKS THAT WERE WAITING             
         CLI   RSLT,0                                                           
         JNE   *+2                 THIS TASK DIES IF FAILS TO ENQ               
*                                                                               
QDQWFE2  IC    R1,0(RF)                                                         
         LA    R1,1(R1)            BUMP TASK COUNT                              
         STC   R1,0(RF)                                                         
         OI    TCBFLAG2,TCBENQWF   SET THIS TASK OWNS WRKF                      
         MVC   TCBWFCHR,WRKFCHR    SET WRKF ID CHR OF WRKF OWNED                
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE EASIWK (EASI)                                       *         
***********************************************************************         
QDQEW    L     R2,=A(CLWRKR)       COUNTERS SAME AS FOR WKFILE                  
         MVC   DUB,SPACES                                                       
         ICM   RF,15,VEASIWK       SET MASTER FILE ADR IF OPEN                  
         BZ    QDQEWA                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQEWA                                                           
         ST    RF,VENQFIL                                                       
QDQEWA   MVC   RSRC1(4),=C'EASI'                                                
         MVC   RSRC1+4(1),PRODTEST                                              
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQA                                                             
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK EASI             
         BE    QDQEWD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQEWE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQEWE                                                           
         B     QDQA                                                             
*                                                                               
QDQEWD   TM    TCBFLAG2,TCBENQEW   EXIT IF TASK DOESNT OWN EASI                 
         BZ    QDQX                                                             
         OC    SSBEWTSK+1(3),SSBEWTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQEWD                                                           
         CLI   SSBEWTSK,1          TEST TASK COUNT OWNING EASI                  
         BH    QDQEWD1                                                          
         MVC   SSBEWTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL DEQ EASI                      
         XC    SSBEWTSK+1(3),SSBEWTSK+1                                         
QDQEWD1  ZIC   RF,SSBEWTSK                                                      
         SH    RF,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    RF,RF                                                            
         STC   RF,SSBEWTSK                                                      
         NI    TCBFLAG2,255-TCBENQEW    SET THIS TASK DOESNT OWN FACW           
         B     QDQX                                                             
*                                                                               
QDQEWE   TM    TCBFLAG2,TCBENQEW   EXIT IF TASK ALREADY OWNS FACW               
         BO    QDQX                                                             
         OC    SSBEWTSK+1(3),SSBEWTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQEWE                                                           
*                                                                               
         CLI   SSBEWTSK,0          TEST TASK COUNT OWNING FACW                  
         BNE   QDQEWE1                                                          
         MVC   SSBEWTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL ENQ FACW                      
         XC    SSBEWTSK+1(3),SSBEWTSK+1                                         
         CLI   RSLT,0                                                           
         JNE   *+2                 DIE IF CANT ENQUEUE FACW                     
*                                                                               
QDQEWE1  IC    RF,SSBEWTSK                                                      
         LA    RF,1(RF)            BUMP TASK COUNT                              
         STC   RF,SSBEWTSK                                                      
         OI    TCBFLAG2,TCBENQEW   SET THIS TASK OWNS FACW                      
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE CONTROL SYSTEM                                      *         
***********************************************************************         
QDQCT    L     R2,=A(CLCTLR)       COUNTERS FOR CONTROL SYSTEM                  
         MVC   DUB,SPACES                                                       
         ICM   RF,15,VGENFIL       SET MASTER FILE ADR IF OPEN                  
         BZ    QDQCTA                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQCTA                                                           
         ST    RF,VENQFIL                                                       
QDQCTA   MVC   RSRC1(4),=C'CTRL'                                                
         MVC   RSRC1+4(1),PRODTEST                                              
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQCTB                                                           
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK CTRL             
         BE    QDQCTD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQCTE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQCTE                                                           
         B     QDQA                                                             
*                                                                               
QDQCTB   CLI   ACTN,C'D'           SPECIAL CODE FOR OFFLINE CTRL                
         BE    QDQCTBD                                                          
         CLI   ACTN,C'E'                                                        
         BE    QDQCTBE                                                          
         CLI   ACTN,C'F'                                                        
         BE    QDQCTBE                                                          
         B     QDQA                                                             
*                                                                               
QDQCTBD  CLI   OFFCTRL,C'E'        EXIT IF OFFLINE DOESNT OWN CTRL              
         BNE   QDQX                                                             
         BAS   R9,QDQA                                                          
         TM    RSLT1,X'80'                                                      
         BZ    QDQX                                                             
         MVI   OFFCTRL,C'D'        OFFLINE HAS DEQUEUED CTRL SYSTEM             
         B     QDQX                                                             
*                                                                               
QDQCTBE  CLI   OFFCTRL,C'E'        EXIT IF OFFLINE ALREADY OWNS CTRL            
         BE    QDQX                                                             
         BAS   R9,QDQA                                                          
         TM    RSLT1,X'01'                                                      
         BZ    QDQX                                                             
         MVI   OFFCTRL,C'E'        OFFLINE HAS ENQUEUED CTRL SYSTEM             
         MVI   BYTE,0                                                           
*                                                                               
QDQCTBE1 BAS   RE,CPREAD           READ CONTROL REC IF ACTUAL ENQ DONE          
         BE    QDQCTBE2                                                         
         CLI   BYTE,0                                                           
         BNE   DMENQER3            DISK ERR ENQ CONTROL REC                     
         MVI   BYTE,1                                                           
         BAS   RE,CPADD            ADD NEW CONTROL REC IF CANT READ             
         B     QDQCTBE1                                                         
QDQCTBE2 BAS   R9,GETTIM           GET DATE/TIME OF CONTROL SYS ENQ             
         LA    R1,RETADDRS                                                      
         L     RF,=A(ECTRL)                                                     
         BASR  RE,RF               PROCESS CONTROL SYSTEM FOR ENQ               
         B     QDQX                                                             
*                                                                               
QDQCTD   TM    TCBFLAG2,TCBENQCT   EXIT IF TASK DOESNT OWN CTRL                 
         BZ    QDQX                                                             
         OC    SSBCTTSK+1(3),SSBCTTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQCTD                                                           
         CLI   SSBCTTSK,1          TEST TASK COUNT OWNING CTRL                  
         BH    QDQCTD1                                                          
         MVC   SSBCTTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL DEQ CTRL                      
         XC    SSBCTTSK+1(3),SSBCTTSK+1                                         
QDQCTD1  ZIC   RF,SSBCTTSK                                                      
         SH    RF,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    RF,RF                                                            
         STC   RF,SSBCTTSK                                                      
         NI    TCBFLAG2,255-TCBENQCT    SET THIS TASK DOESNT OWN CTRL           
         B     QDQX                                                             
*                                                                               
QDQCTE   TM    TCBFLAG2,TCBENQCT   EXIT IF TASK ALREADY OWNS CTRL               
         BO    QDQX                                                             
         OC    SSBCTTSK+1(3),SSBCTTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQCTE                                                           
         CLI   SSBCTTSK,0          TEST TASK COUNT OWNING CTRL                  
         BNE   QDQCTE4                                                          
         MVC   SSBCTTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL ENQ CTRL                      
         TM    RSLT1,X'01'                                                      
         BZ    QDQCTE3                                                          
         MVI   BYTE,0                                                           
*                                                                               
QDQCTE1  BAS   RE,CPREAD           READ CONTROL REC IF ACTUAL ENQ DONE          
         BE    QDQCTE2                                                          
         CLI   BYTE,0                                                           
         BNE   DMENQER3            DISK ERR ENQ CONTROL REC                     
         MVI   BYTE,1                                                           
         BAS   RE,CPADD            ADD NEW CONTROL REC IF CANT READ             
         B     QDQCTE1                                                          
QDQCTE2  BAS   R9,GETTIM           GET DATE/TIME OF CONTROL SYS ENQ             
         LA    R1,RETADDRS                                                      
         L     RF,=A(ECTRL)                                                     
         BASR  RE,RF               PROCESS CONTROL SYSTEM FOR ENQ               
*                                                                               
QDQCTE3  XC    SSBCTTSK+1(3),SSBCTTSK+1                                         
         CLI   RSLT,0                                                           
         JNE   *+2                 DIE IF CANT ENQUEUE CTRL                     
QDQCTE4  IC    RF,SSBCTTSK                                                      
         LA    RF,1(RF)            BUMP TASK COUNT                              
         STC   RF,SSBCTTSK                                                      
         OI    TCBFLAG2,TCBENQCT   SET THIS TASK OWNS CTRL                      
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE MEDZ SYSTEM                                         *         
***********************************************************************         
QDQMZ    L     R2,=A(CLMEZR)       COUNTERS FOR MEDZ SYSTEM                     
         MVC   DUB,SPACES                                                       
         ICM   RF,15,VMEDFILZ      SET MASTER FILE ADR IF OPEN                  
         BZ    QDQMZA                                                           
         TM    DTFOPEN-DTF(RF),X'20'                                            
         BZ    QDQMZA                                                           
         ST    RF,VENQFIL                                                       
QDQMZA   MVC   RSRC1(4),=C'MEDZ'                                                
         MVC   RSRC1+4(1),PRODTEST                                              
         SR    R9,R9               SET NO SPECIAL CODE                          
         TM    PROCMODE,OFFLINE                                                 
         BO    QDQMZB                                                           
         CLI   ACTN,C'D'           SPECIAL CODE FOR MULTI-TASK MEDZ             
         BE    QDQMZD                                                           
         CLI   ACTN,C'E'                                                        
         BE    QDQMZE                                                           
         CLI   ACTN,C'F'                                                        
         BE    QDQMZE                                                           
         B     QDQA                                                             
*                                                                               
QDQMZB   CLI   ACTN,C'D'           SPECIAL CODE FOR OFFLINE MEDZ                
         BE    QDQMZBD                                                          
         CLI   ACTN,C'E'                                                        
         BE    QDQMZBE                                                          
         CLI   ACTN,C'F'                                                        
         BE    QDQMZBE                                                          
         B     QDQA                                                             
*                                                                               
QDQMZBD  CLI   OFFMEDZ,C'E'        EXIT IF OFFLINE DOESNT OWN MEDZ              
         BNE   QDQX                                                             
         BAS   R9,QDQA                                                          
         TM    RSLT1,X'40'                                                      
         BZ    QDQX                                                             
         MVI   OFFMEDZ,C'D'        OFFLINE HAS DEQUEUED MEDZ SYSTEM             
         B     QDQX                                                             
*                                                                               
QDQMZBE  CLI   OFFMEDZ,C'E'        EXIT IF OFFLINE ALREADY OWNS MEDZ            
         BE    QDQX                                                             
         BAS   R9,QDQA                                                          
         TM    RSLT1,X'01'                                                      
         BZ    QDQX                                                             
         MVI   OFFMEDZ,C'E'        OFFLINE HAS ENQUEUED MEDZ SYSTEM             
         MVI   BYTE,0                                                           
*                                                                               
QDQMZBE1 BAS   RE,MPREAD           READ MEDZ REC IF ACTUAL ENQ DONE             
         BE    QDQMZBE2                                                         
         CLI   BYTE,0                                                           
         BNE   DMENQER3            DISK ERR ENQ MEDZ REC                        
         MVI   BYTE,1                                                           
         BAS   RE,MPADD            ADD NEW MEDZ REC IF CANT READ                
         B     QDQMZBE1                                                         
QDQMZBE2 BAS   R9,GETTIM           GET DATE/TIME OF MEDZ SYS ENQ                
         LA    R1,RETADDRS                                                      
         L     RF,=A(EMEDZ)                                                     
         BASR  RE,RF               PROCESS MEDZ SYSTEM FOR ENQ                  
         B     QDQX                                                             
*                                                                               
QDQMZD   TM    TCBFLAG2,TCBENQMZ   EXIT IF TASK DOESNT OWN MEDZ                 
         BZ    QDQX                                                             
         OC    SSBMZTSK+1(3),SSBMZTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQMZD                                                           
         CLI   SSBMZTSK,1          TEST TASK COUNT OWNING MEDZ                  
         BH    QDQMZD1                                                          
         MVC   SSBMZTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL DEQ MEDZ                      
         XC    SSBMZTSK+1(3),SSBMZTSK+1                                         
QDQMZD1  ZIC   RF,SSBMZTSK                                                      
         SH    RF,=H'1'            DECR TASK COUNT                              
         BNM   *+6                                                              
         SR    RF,RF                                                            
         STC   RF,SSBMZTSK                                                      
         NI    TCBFLAG2,255-TCBENQMZ    SET THIS TASK DOESNT OWN MEDZ           
         B     QDQX                                                             
*                                                                               
QDQMZE   TM    TCBFLAG2,TCBENQMZ   EXIT IF TASK ALREADY OWNS MEDZ               
         BO    QDQX                                                             
         OC    SSBMZTSK+1(3),SSBMZTSK+1                                         
         BZ    *+12                                                             
         BAS   RE,IOEXIT           TAKE I/O WAIT IF ANOTHER TASK TRYING         
         B     QDQMZE                                                           
         CLI   SSBMZTSK,0          TEST TASK COUNT OWNING MEDZ                  
         BNE   QDQMZE4                                                          
         MVC   SSBMZTSK+1(3),SSBTKADR+1                                         
         BAS   R9,QDQA             THIS TASK WILL ENQ MEDZ                      
         TM    RSLT1,X'01'                                                      
         BZ    QDQMZE3                                                          
         MVI   BYTE,0                                                           
*                                                                               
QDQMZE1  BAS   RE,MPREAD           READ MEDZ REC IF ACTUAL ENQ DONE             
         BE    QDQMZE2                                                          
         CLI   BYTE,0                                                           
         BNE   DMENQER3            DISK ERR ENQ MEDZ REC                        
         MVI   BYTE,1                                                           
         BAS   RE,MPADD            ADD NEW MEDZ REC IF CANT READ                
         B     QDQMZE1                                                          
QDQMZE2  BAS   R9,GETTIM           GET DATE/TIME OF MEDZ SYS ENQ                
         LA    R1,RETADDRS                                                      
         L     RF,=A(EMEDZ)                                                     
         BASR  RE,RF               PROCESS MEDZ SYSTEM FOR ENQ                  
*                                                                               
QDQMZE3  XC    SSBMZTSK+1(3),SSBMZTSK+1                                         
         CLI   RSLT,0                                                           
         JNE   *+2                 DIE IF CANT ENQUEUE MEDZ                     
QDQMZE4  IC    RF,SSBMZTSK                                                      
         LA    RF,1(RF)            BUMP TASK COUNT                              
         STC   RF,SSBMZTSK                                                      
         OI    TCBFLAG2,TCBENQMZ   SET THIS TASK OWNS MEDZ                      
         B     QDQX                                                             
         EJECT                                                                  
***********************************************************************         
* ENQUEUE/DEQUEUE/TEST RESOURCE DEFINED BY RSRC0/RSRC1/RSRC2          *         
* R9 IS ZERO FOR EXIT OR MUST CONTAIN THE RETURN ADDR                 *         
***********************************************************************         
QDQA     ST    R9,SAVER            SAVE SPECIAL CALL RETURN ADR                 
         CLI   ACTN,C'T'                                                        
         BNE   QDQA0                                                            
         BAS   RE,PREAD            READ ENQUEUE RECORD FOR ACTN TEST            
         BNE   DMENQR                                                           
         BAS   R9,DEQ              TEST IF RESOURCE AVAILABLE                   
         B     QDQX                                                             
*                                                                               
* MVS ENQUEUE RESOURCE FOR THIS CPU                                             
*                                                                               
QDQA0    CLI   ACTN,C'E'                                                        
         BNE   QDQA2                                                            
         XC    FULL,FULL                                                        
         AP    CLPRTR-COUNTS(4,R2),=P'1'                                        
         TM    PROCMODE,OFFLINE                                                 
         BZ    QDQA1                                                            
         TM    PROCMODE,OFFMULTI                                                
         BZ    *+8                                                              
         BAS   R9,MTKENQ           OFFLINE MULTI TASKING SYSTEM ENQUEUE         
         BAS   R9,SYSENQU          OFFLINE UNCONDITIONAL SYSTEM ENQUEUE         
         BAS   R9,SWAPNO           OFFLINE MAKE ME NON SWAPABLE                 
         B     QDQA2                                                            
*                                                                               
QDQA1    BAS   R9,SYSENQC          CONDITIONAL SYSTEM ENQUEUE                   
         BE    QDQA2                                                            
         L     R1,FULL             BUMP NUMBER OF TRYS                          
         LA    R1,1(R1)                                                         
         ST    R1,FULL                                                          
         OI    SMFFLAG,SMFFMVSW                                                 
         CLI   FULL+3,0            OUTPUT SMFREC EVERY 256 ATTEMPTS             
         BNE   *+8                                                              
         OI    SMFFLAG,SMFFOUT                                                  
         C     R1,MVSTRYS          GET MVS SYSTEM MAX NUM OF TRYS               
         BL    *+12                                                             
         OI    SMFFLAG,SMFFMVSF+SMFFOUT                                         
         B     QDQA2                                                            
         ICM   R1,15,MVSWAIT       GET MVS SYSTEM WAIT TIME                     
         BZ    *+16                                                             
         ST    R1,TIME                                                          
         BAS   R9,SETTIM                                                        
         B     QDQA1                                                            
         OC    VENQFIL,VENQFIL                                                  
         BZ    *+8                                                              
         BAS   RE,IOEXIT           DO A DUMMY I/O EXIT AND TRY AGAIN            
         B     QDQA1                                                            
*                                                                               
QDQA2    MVI   SVLFTIM,X'FF'       SET FIRST TIME FLAGS FOR ENQUEUE             
         MVI   SVLLTIM,X'FF'                                                    
         XC    SVENT,SVENT                                                      
*                                                                               
* PHYSICALLY ENQUEUE THE ENQUEUE RECORD                                         
*                                                                               
QDQB     MVI   ENQERR,0                                                         
         BAS   RE,PENQ                                                          
         BE    QDQC                ENQUEUE OK - MY CPU/ADR NOW OWNS             
         MVC   MSG,TXT                                                          
         MVC   MSGTYPE,=C'WAIT ON'                                              
         TM    IOERR,X'30'                                                      
         BNZ   QDQB2               ENQUEUE FAILED ON TIME OUT WAIT              
*                                                                               
QDQB1    IC    RE,ENQERR           ENQUEUE FAILED ON DISK ERROR                 
         LA    RE,1(RE)                                                         
         STC   RE,ENQERR                                                        
         CLI   ENQERR,ERRMAX       TEST IF EXCEED MAXIMUM ERRORS                
         BNH   QDQB+4                                                           
         MVC   MSGTYPE,=C'DISKERR'                                              
*                                                                               
QDQB2    MVC   MSGRSRC,=C'ENQ-RECD' BUILD MESSAGE TO OPERATOR                   
         MVC   MSGCPU,NOTREL                                                    
         MVC   MSGADR,NOTREL                                                    
         MVC   MSGJOB,NOTREL                                                    
         MVC   MSGOPT3,SPACES                                                   
         TM    IOERR,X'C0'         IF DISK ERROR CPU/ADR NOT RELEVENT           
         BZ    *+14                                                             
         MVC   MSGOPT3,=C'I=IGNORE' SET OPERATOR OPTION TO IGNORE               
         B     QDQB3                                                            
         TM    IOERR,X'10'         IF DIFF OWNER CPU/ADR NOT RELEVANT           
         BO    QDQB3                                                            
         MVC   FULL,IOKCPU                                                      
         BAS   R9,CPUOUT           IF SAME OWNER CPU/ADR/IGN RELEVANT           
         MVC   FULL,IOKADR                                                      
         BAS   R9,ADROUT                                                        
         MVC   MSGOPT3,=C'I=IGNORE'                                             
         CLC   MYKEY(8),IOKEY      IF I AM OWNER FORCE DEQUEUE                  
         BE    QDQB4                                                            
*                                                                               
QDQB3    OI    SMFFLAG,SMFFDDSF+SMFFOUT                                         
         BAS   R9,GETMSG           SEND MSG AND GET ANSWER                      
         BL    QDQA2               RETRY                                        
         BE    QDQB4               IGNORE/DEQUEUE                               
         MVI   RSLT,7              CANCEL                                       
         BAS   R9,ERR                                                           
*                                                                               
QDQB4    TM    IOERR,X'C0'         REPLY IS IGNORE DISK ERROR                   
         BZ    QDQB5                                                            
         BAS   RE,PADD             CREATE BRAND NEW ENQ REC AND RETRY           
         BE    QDQA2                                                            
         MVI   RSLT,3                                                           
         BAS   R9,ERR              DIE IF CANT ADD NEW ENQ REC                  
*                                                                               
QDQB5    MVI   ENQERR,0            REPLY IS DEQUEUE (FOR CPU/ADR)               
         BAS   RE,PREAD                                                         
         BE    QDQB6                                                            
         IC    RE,ENQERR           BUMP DISK ERROR COUNTER                      
         LA    RE,1(RE)                                                         
         STC   RE,ENQERR                                                        
         CLI   ENQERR,ERRMAX       TEST IF EXCEED MAXIMUM ERRORS                
         BNH   QDQB5+4                                                          
         MVC   MSGTYPE,=C'DISKERR'                                              
         B     QDQB2                                                            
*                                                                               
QDQB6    CLC   IOKEY,SVKEY         HAS ENQ REC KEY CHANGED                      
         BNE   QDQA2               YES TRY AGAIN                                
         MVC   SVENT(24),RSRC0     DEQUEUE ALL RESOURCES FOR CPU/ADR            
         MVC   RSRC0,SVKEY+ENTCPU-ENT                                           
         MVC   RSRC1,SPACES                                                     
         MVC   RSRC2,SPACES                                                     
         MVC   RSRC1(3),=C'ALL'                                                 
         BAS   R9,DEQ              DEQUEUE ALL RESOURCES                        
         BAS   RE,PDEQ                                                          
         MVC   RSRC0(24),SVENT                                                  
         B     QDQA2               BACK AND TRY AGAIN                           
*                                                                               
* LOGICALLY ENQUEUE OR DEQUEUE RESOURCE                                         
*                                                                               
QDQC     CLI   ACTN,C'D'                                                        
         BNE   QDQC1                                                            
*                                                                               
QDQC0    BAS   R9,DEQ              LOGICALLY DEQUEUE RESOURCE                   
         MVI   BYTE,0                                                           
         TM    RSLT1,X'80'         TEST IF ACTUAL DEQ OF CTRL SYSTEM            
         BO    QDQC0A              NO                                           
         TM    RSLT1,X'40'         TEST IF ACTUAL DEQ OF MEDZ SYSTEM            
         BO    QDQC0B              NO                                           
         B     QDQD                                                             
*                                                                               
QDQC0A   BAS   R9,GETTIM           GET DATE/TIME OF CTRL SYS DEQ                
         LA    R1,RETADDRS                                                      
         L     RF,=A(DCTRL)                                                     
         BASR  RE,RF               PROCESS CTRL SYSTEM FOR DEQ                  
         BAS   RE,CPWRITE          WRITE BACK CTRL RECORD                       
         BE    QDQD                                                             
         CLI   BYTE,0                                                           
         BNE   QDQD                I FUCKING WELL GIVE UP                       
         MVI   BYTE,1                                                           
         BAS   RE,CPADD            ADD NEW CTRL RECORD IF ERROR                 
         B     QDQC0A                                                           
*                                                                               
QDQC0B   BAS   R9,GETTIM           GET DATE/TIME OF MEDZ SYS DEQ                
         LA    R1,RETADDRS                                                      
         L     RF,=A(DMEDZ)                                                     
         BASR  RE,RF               PROCESS MEDZ SYSTEM FOR DEQ                  
         BAS   RE,MPWRITE          WRITE BACK MEDZ RECORD                       
         BE    QDQD                                                             
         CLI   BYTE,0                                                           
         BNE   QDQD                I FUCKING WELL GIVE UP                       
         MVI   BYTE,1                                                           
         BAS   RE,MPADD            ADD NEW MEDZ RECORD IF ERROR                 
         B     QDQC0B                                                           
*                                                                               
QDQC1    BAS   R9,ENQ              LOGICALLY ENQUEUE RESOURCE                   
         BE    QDQD                                                             
         TM    RSLT,X'30'          TEST IF FAILURE TO ENQUEUE                   
         BZ    QDQB                NO TRY AGAIN                                 
*                                                                               
QDQC2    MVC   MSG,TXT             BUILD MESSAGE FOR RESOURCE WAIT              
         MVC   MSGTYPE,=C'WAIT ON'                                              
         MVC   MSGRSRC,SVENT+ENTR1-ENT                                          
         MVC   MSGCPU,NOTREL                                                    
         MVC   MSGADR,NOTREL                                                    
         MVC   MSGJOB,NOTREL                                                    
         MVC   MSGOPT3,SPACES                                                   
         TM    RSLT,X'10'          IF DIFF OWNER CPU/ADR NOT RELEVANT           
         BO    QDQC3                                                            
         MVC   FULL,SVENT+ENTCPU-ENT                                            
         BAS   R9,CPUOUT           IF SAME OWNER CPU/ADR/IGN RELEVANT           
         MVC   FULL,SVENT+ENTADR-ENT                                            
         BAS   R9,ADROUT                                                        
         MVC   MSGJOB,SVENT+ENTR2-ENT                                           
         MVC   MSGOPT3,=C'I=IGNORE'                                             
*                                                                               
QDQC3    OI    SMFFLAG,SMFFDDSF+SMFFOUT                                         
         BAS   R9,GETMSG           SEND MSG AND GET ANSWER                      
         BL    QDQA2               RETRY                                        
         BE    QDQC4               IGNORE/DEQUEUE                               
         MVI   RSLT,6              CANCEL                                       
         BAS   R9,ERR                                                           
*                                                                               
QDQC4    BAS   RE,PENQ             ENQUEUE ENQUEUE RECORD                       
         BNE   QDQA2                                                            
         MVC   SVKEY(24),RSRC0                                                  
         MVC   RSRC0,SVENT+ENTCPU-ENT                                           
         BAS   R9,DEQ              LOGICALLY DEQUEUE RESOURCE                   
         BAS   RE,PDEQ                                                          
         MVC   RSRC0(24),SVKEY                                                  
         B     QDQA2                                                            
*                                                                               
* PHYSICALL DEQUEUE THE ENQUEUE RECORD                                          
*                                                                               
QDQD     BAS   RE,PDEQ                                                          
         CLI   ACTN,C'D'                                                        
         BNE   QDQD1                                                            
*                                                                               
         BAS   R9,SYSDEQ           INVOKE SYSTEM DEQUEUE                        
         TM    PROCMODE,OFFMULTI                                                
         BZ    *+8                                                              
         BAS   R9,MTKDEQ           INVOKE TASKING DEQUEUE                       
         BAS   R9,SWAPYES          MAKE ME SWAPABLE IF DEQUEUE                  
*                                                                               
QDQD1    L     R9,SAVER                                                         
         LTR   R9,R9                                                            
         BNZR  R9                  RETURN TO SPECIAL CODE                       
*                                                                               
QDQX     L     R1,SAVER1                                                        
         MVC   4(1,R1),IOERR       SET DISK ERROR BITS                          
         OC    4(1,R1),RSLT        SET RESULT BITS                              
         OC    4(1,R1),ENQWAI      SET WAIT/ENQUEUED THIS TIME BITS             
         B     DMENQX                                                           
         EJECT                                                                  
***********************************************************************         
* LOGICALLY ENQUEUE RESOURCE SPECIFIED BY RSRC0/RSRC1/RSRC2           *         
* RSLT IS SET TO ZERO IF OK ELSE TO X'40'=TEMPORARY FAIL TO ENQ,      *         
* X'20'=ABNORMAL FAIL TO ENQ,X'10'=NORMAL FAIL TO ENQ                 *         
* PHYSICAL DEQUEUE IS PERFORMED ON THESE FAILURES TO ENQ              *         
***********************************************************************         
ENQ      ST    R9,SAVER9           ENQUEUE RESOURCE                             
         AP    CLPRTI-COUNTS(4,R2),=P'1'                                        
         MVI   RSLT,0                                                           
         MVI   RSLT1,0                                                          
         BAS   R9,GETTIM                                                        
         CLI   SVLFTIM,X'FF'                                                    
         BNE   *+16                                                             
         MVC   SVLFTIM,TIME        SAVE TIME OF FIRST LOGICAL ATTEMPT           
         MVC   SMFSTIME,TIMEMILI                                                
         CLI   SVLLTIM,X'FF'                                                    
         BNE   *+10                                                             
         MVC   SVLLTIM,TIME        SAVE TIME OF LAST LOGICAL ATTEMPT            
*                                                                               
ENQ1     LH    R0,ENTMAX           SET UP TO SEARCH ENQUEUE RECORD              
         LA    R5,IORDATA+L'ENT                                                 
         USING ENTD,R5                                                          
*                                                                               
ENQ2     OC    ENTCPU(8),ENTCPU    TEST IF LAST ENTRY                           
         BZ    ENQ5                                                             
         CLC   ENTCPU(8),RSRC0     TEST IF MY CPU/ADR                           
         BE    ENQ4                                                             
         CLC   ENTR1,RSRC1         TEST IF HIS RESOURCE                         
         BE    ENQ6                                                             
*                                                                               
ENQ3     LA    R5,L'ENT(R5)        BUMP TO NEXT ENTRY                           
         BCT   R0,ENQ2                                                          
         CLI   ACTN,C'F'           ENQUEUE RECORD IS FULL                       
         BNE   ENQ7                                                             
         MVI   RSLT,X'80'          SET ENQUEUE REC FULL                         
         B     ENQX                                                             
*                                                                               
ENQ4     CLC   ENTR1,RSRC1         I ALREADY OWN THE RESOURCE                   
         BNE   ENQ3                                                             
         IC    RF,ENTCNT           UPDATE USAGE COUNT                           
         LA    RF,1(RF)                                                         
         STC   RF,ENTCNT                                                        
         B     ENQX                                                             
*                                                                               
ENQ5     BAS   R9,GETTIM           BUILD NEW ENTRY FOR MY RESOURCE              
         MVC   ENTCPU,CPU                                                       
         MVC   ENTADR,ADR                                                       
         MVC   ENTTIM,TIME                                                      
         MVI   ENTTYP,0                                                         
         TM    PROCMODE,OFFLINE                                                 
         BO    *+8                                                              
         OI    ENTTYP,X'80'        SET ENQUEUED BY ONLINE SYSTEM                
         MVI   ENTCNT,1                                                         
         MVC   ENTR1,RSRC1                                                      
         MVC   ENTR2,JOB           PARK JOB NAME IN SUBENTRY                    
         MVI   RSLT1,X'01'         SET SPECIFIC ENQ ACTUALLY DONE               
         OI    ENQWAI,X'04'        SET VALUE TO RETURN TO CALLER                
         B     ENQX                                                             
*                                                                               
ENQ6     OI    ENQWAI,X'08'        SET HAD TO WAIT FOR RESOURCE                 
         LH    RF,SMFTRYS                                                       
         LA    RF,1(RF)                                                         
         STH   RF,SMFTRYS          BUMP NUMBER OF TRYS                          
         OI    SMFFLAG,SMFFDDSW                                                 
         CLI   SMFTRYS+1,0         OUTPUT SMFREC EVERY 256 ATTEMPTS             
         BNE   *+8                                                              
         OI    SMFFLAG,SMFFOUT                                                  
         MVC   SMFCPU,CPU                                                       
         MVC   SMFASID,ASID                                                     
         MVC   SMFRSRC,RSRC1                                                    
         BAS   R9,GETTIM                                                        
         MVC   SMFATIME,TIMEMILI   SET ACTUAL TIME IN MILLI SECS                
         OC    SMFOWNER,SMFOWNER                                                
         BZ    ENQ6A                                                            
         CLC   SMFOWNER,ENTR2      TEST IF OWNER HAS CHANGED                    
         BE    *+8                 NO                                           
         OI    SMFFLAG,SMFFDIFF    YES SET DIFFERENT OWNER FLAG                 
ENQ6A    MVC   SMFOWNER,ENTR2      SET JOBID OF CURRENT OWNER                   
         AP    CLPRTW-COUNTS(4,R2),=P'1'                                        
         CLI   ACTN,C'F'                                                        
         BNE   ENQ7                                                             
         MVI   RSLT,X'02'          SET OWNED BY SOMEONE ELSE                    
         B     ENQX                                                             
*                                                                               
ENQ7     CLC   ENT(12),SVENT       ENQUEUED WITH DIFFERENT OWNER                
         BNE   *+14                                                             
         CLC   ENTR1,SVENT+ENTR1-ENT                                            
         BE    ENQ8                                                             
         MVC   SVENT,ENT           SAVE KEY OF LAST OWNER                       
         BAS   R9,GETTIM                                                        
         L     R4,TIME                                                          
         S     R4,SVLFTIM          R4=ELAPSED TIME SINCE START                  
         BNM   *+8                                                              
         A     R4,=F'86400'                                                     
         SR    R0,R0               SET NORMAL FAIL (DIFF OWNER)                 
         MVI   SVLLTIM,X'FF'                                                    
         B     ENQ9                                                             
*                                                                               
ENQ8     BAS   R9,GETTIM           ENQUEUED WITH SAME PREVIOUS OWNER            
         L     R4,TIME                                                          
         S     R4,SVLLTIM          R4=ELAPSED TIME SINCE SAME OWNER             
         BNM   *+8                                                              
         A     R4,=F'86400'                                                     
         LA    R0,1                SET ABNORMAL FAIL (SAME OWNER)               
         B     ENQ9                                                             
*                                                                               
ENQ9     TM    PROCMODE,OFFLINE    OFFLINE LOGICAL TIMING FACTORS               
         BZ    ENQA                ------------------------------               
         LTR   R0,R0                                                            
         BNZ   ENQ9A                                                            
         C     R4,LNOFF            NORMAL OFFLINE MAX                           
         BNL   ENQCN                                                            
         B     ENQ9X                                                            
ENQ9A    C     R4,LAOFF            ABNORMAL OFFLINE MAX                         
         BNL   ENQCA                                                            
ENQ9X    BAS   RE,PDEQ             PHSICALLY DEQ ENQDEQ REC                     
         ICM   R1,15,LWOFF                                                      
         BZ    ENQB                                                             
         ST    R1,TIME                                                          
         BAS   R9,SETTIM           WAIT AND TRY AGAIN                           
         B     ENQB                                                             
*                                                                               
ENQA     LTR   R0,R0               ONLINE LOGICAL TIMING FACTORS                
         BNZ   ENQA1               -----------------------------                
         C     R4,LNON             NORMAL ONLINE MAX                            
         BNL   ENQCN                                                            
         B     ENQAX                                                            
ENQA1    C     R4,LAON             ABNORMAL ONLINE MAX                          
         BNL   ENQCA                                                            
ENQAX    BAS   RE,PDEQ             PHSICALLY DEQ ENQDEQ REC                     
         L     R1,LWON             GET ONLINE WAIT TIME                         
         TM    SVENT+ENTTYP-ENT,X'80'                                           
         BZ    *+8                 TEST IF OWNER IS ALSO ONLINE                 
         LA    R1,0                YES SET WAIT TIME TO ZERO                    
         ST    R1,TIME                                                          
         LTR   R1,R1                                                            
         BZ    *+12                                                             
         BAS   R9,SETTIM           WAIT                                         
         B     ENQB                                                             
         OC    VENQFIL,VENQFIL     TEST IF SPECIAL FILE                         
         BZ    *+8                                                              
         BAS   RE,IOEXIT           DO A DUMMY I/O EXIT AND TRY AGAIN            
         B     ENQB                                                             
*                                                                               
ENQB     MVI   RSLT,X'40'          RETURN TRY AGAIN                             
         B     ENQX                                                             
*                                                                               
ENQCA    MVI   RSLT,X'20'          RETURN ABNORMAL TOO LONG                     
         B     *+8                                                              
ENQCN    MVI   RSLT,X'10'          RETURN NORMAL TOO LONG                       
         AP    CLPRTF-COUNTS(4,R2),=P'1'                                        
*                                                                               
ENQD     BAS   RE,PDEQ             PHSICALLY DEQ ENQDEQ REC                     
*                                                                               
ENQX     L     R9,SAVER9           EXIT WITH CC EQL IF OK                       
         TM    RSLT,X'70'          TEST FAIL TO ENQ BITS                        
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* LOGICALLY DEQUEUE/TEST RESOURCE SPECIFIED BY RSRC0/RSRC1/RSRC2      *         
***********************************************************************         
DEQ      ST    R9,SAVER9           DEQUEUE/TEST RESOURCE                        
         MVI   RSLT,0                                                           
         MVI   RSLT1,0                                                          
         LH    R0,ENTMAX                                                        
         SR    R1,R1               R1=NUM OF DELETES                            
         LA    R4,IORDATA+L'ENT                                                 
         LR    R5,R4               R5=A(TABLE ENTRY)                            
         USING ENTD,R5                                                          
*                                                                               
DEQ1     OC    ENTCPU(8),ENTCPU    TEST IF LAST ENTRY                           
         BZ    DEQ5                                                             
         CLC   ENTCPU,RSRC0        TEST IF MY CPU                               
         BNE   DEQ1A                                                            
         CLC   RSRC1(6),=C'ALLCPU'                                              
         BE    DEQ3                                                             
         CLC   ENTADR,RSRC0+4      TEST IF MY ADR                               
         BE    DEQ3                                                             
DEQ1A    CLC   ENTR1,RSRC1         OWNED BY SOMEONE ELSE                        
         BNE   DEQ2                                                             
         CLI   ACTN,C'T'                                                        
         BNE   DEQ2                                                             
         OI    RSLT,X'02'          SET OWNED BY SOMEONE ELSE                    
         B     DEQX                                                             
*                                                                               
DEQ2     LA    R5,L'ENT(R5)        BUMP TO NEXT TABLE ENTRY                     
         BCT   R0,DEQ1                                                          
         B     DEQ5                END OF TABLE                                 
*                                                                               
DEQ3     CLC   RSRC1(3),=C'ALL'    THIS IS MY RESOURCE                          
         BNE   DEQ4                                                             
         CLI   ACTN,C'T'                                                        
         BNE   *+12                                                             
         OI    RSLT,X'01'          SET I OWN RESOURCE                           
         B     DEQX                                                             
         MVI   RSLT1,X'04'         SET GENERAL DEQ ACTUALLY DONE                
DEQ3A    CLC   ENTR1(4),=C'CTRL'                                                
         BNE   *+8                                                              
         OI    RSLT1,X'80'         SET CTRL SYSTEM DEQ ACTUALLY DONE            
         CLC   ENTR1(4),=C'MEDZ'                                                
         BNE   *+8                                                              
         OI    RSLT1,X'40'         SET MEDZ SYSTEM DEQ ACTUALLY DONE            
         XC    ENT,ENT                                                          
         LA    R1,1(R1)                                                         
         B     DEQ2                                                             
*                                                                               
DEQ4     CLC   ENTR1,RSRC1         THIS IS MY SPECIFIC RESOURCE                 
         BNE   DEQ2                                                             
         CLI   ACTN,C'T'                                                        
         BNE   *+12                                                             
         OI    RSLT,X'01'          SET I OWN RESOURCE                           
         B     DEQX                                                             
         ZIC   RF,ENTCNT                                                        
         SH    RF,=H'1'                                                         
         BZ    *+12                                                             
         STC   RF,ENTCNT                                                        
         B     DEQ2                                                             
         MVI   RSLT1,X'02'         SET SPECIFIC DEQ ACTIALLY DONE               
         B     DEQ3A                                                            
*                                                                               
DEQ5     CLI   ACTN,C'T'                                                        
         BE    DEQX                                                             
         LTR   R1,R1                                                            
         BZ    DEQX                EXIT IF NO DELETES                           
         AP    CLPRTD-COUNTS(4,R2),=P'1'                                        
         LA    R4,IORDATA+L'ENT                                                 
*                                                                               
DEQ6     OC    0(8,R4),0(R4)       REMOVE DELETED ENTRYS                        
         BZ    DEQ6A                                                            
         LA    R4,L'ENT(R4)        BUMP PAST NONZERO ENTRYS                     
         CR    R4,R5                                                            
         BE    DEQX                                                             
         B     DEQ6                ISN'T THIS ONE SUBTLE ?                      
*                                                                               
DEQ6A    LR    RE,R4               SHIFT LEFT TO ACTIVE END                     
         LA    RF,L'ENT(RE)                                                     
DEQ6B    MVC   0(L'ENT,RE),0(RF)                                                
         CR    RF,R5                                                            
         BE    DEQ6C                                                            
         LA    RE,L'ENT(RE)                                                     
         LA    RF,L'ENT(RF)                                                     
         B     DEQ6B                                                            
DEQ6C    LR    R5,RE               SET NEW ACTIVE END OF TABLE                  
         CR    R4,R5                                                            
         BNE   DEQ6                                                             
         B     DEQX                                                             
*                                                                               
DEQX     L     R9,SAVER9                                                        
         BR    R9                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINES TO PERFORM PHYSICAL I/O ACTIONS ON ENQUEUE RECORD          *         
* IOERR IS SET TO ZERO IF OK ELSE TO X'80'=DISK ERROR,X'40'=NOT FOUND,*         
* X'20'=ABNORMAL FAIL TO ENQ,X'10'=NORMAL FAIL TO ENQ                 *         
***********************************************************************         
PADD     NTR1                      ROUTINE TO ADD ENQUEUE RECORD                
         XC    IORKEY,IORKEY                                                    
         LA    RE,IORDATA                                                       
         LH    RF,DATALEN                                                       
         SR    R1,R1                                                            
         MVCL  RE,R0                                                            
         IC    RF,ESRCH+4                                                       
         BCTR  RF,0                DECREMENT REC NUM BY ONE                     
         STC   RF,ESRCH+4                                                       
         LA    R1,CCWA                                                          
         BAS   R9,EXCP             EXECUTE ADD CCW CHAIN                        
         IC    RF,ESRCH+4                                                       
         LA    RF,1(RF)            INCREMENT REC NUM BY ONE                     
         STC   RF,ESRCH+4                                                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
                                                                                
PDEQ     NTR1                      ROUTINE TO DEQUEUE ENQUEUE RECORD            
         L     RF,=A(CPENQD)                                                    
         AP    0(4,RF),=P'1'                                                    
         XC    IORKEY,IORKEY                                                    
         LA    R1,CCWD                                                          
         BAS   R9,EXCP             EXECUTE DEQUEUE CCW CHAIN                    
**NOP**  BAS   R9,SWAPYES                                                       
         TM    PROCMODE,OFFMULTI                                                
         BZ    *+8                                                              
         BAS   R9,SERDEQ           END OF SERIALISATION                         
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO ENQUEUE ENQUEUE RECORD                                   *         
***********************************************************************         
PENQ     NTR1                                                                   
         L     RF,=A(CPENQR)                                                    
         AP    0(4,RF),=P'1'                                                    
**NOP**  BAS   R9,SWAPNO                                                        
         TM    PROCMODE,OFFLINE                                                 
         BZ    PENQ0                                                            
         TM    PROCMODE,OFFMULTI                                                
         BZ    *+8                                                              
         BAS   R9,SERENQ           SERIALISE IF MULTI TASKING OFFLINE           
         B     PENQ0B                                                           
*                                                                               
PENQ0    OC    SVTASK,SVTASK       TEST IF ANY TASK ALREADY TRYING              
         BZ    PENQ0A                                                           
         CLC   SVTASK,SSBTKADR     TEST IF THE TASK IS ME                       
         BE    PENQ0A                                                           
         CLI   SSBMTIND,0          SOMEONE ELSE AND NO MULTI TASKING SO         
         BE    PENQ0A              I HAD BETTER TAKE OVER THIS SHIT             
         OC    VENQFIL,VENQFIL                                                  
         BZ    PENQ0B                                                           
         BAS   RE,IOEXIT           DO A DUMMY I/O EXIT AND START AGAIN          
         B     PENQ0                                                            
PENQ0A   MVC   SVTASK,SSBTKADR     SAVE TASK OF FIRST ATTEMPT                   
PENQ0B   XC    SVKEY,SVKEY                                                      
         BAS   R9,GETTIM                                                        
         MVC   SVFTIM,TIME         SAVE TIME OF FIRST ATTEMPT                   
         B     *+8                                                              
*                                                                               
PENQ1    BAS   R9,GETTIM                                                        
         MVC   SVLTIM,TIME         SAVE TIME OF LAST ATTEMPT                    
         MVC   IORKEY,MYKEY                                                     
         MVC   IORTIM,TIME                                                      
*                                                                               
PENQ2    L     RF,=A(CPENQI)       BUMP PHYS ENQS ISSUED                        
         AP    0(4,RF),=P'1'                                                    
         LA    R1,CCWE                                                          
         BAS   R9,EXCP             EXECUTE ENQUEUE CCW CHAIN                    
         BNE   *+14                                                             
         XC    SVTASK,SVTASK       SET RECORD ENQUEUED BY TASK                  
         B     PENQX                                                            
         TM    IOERR,X'80'         TEST DISK ERROR                              
         BO    PENQ2A                                                           
         LA    RF,CCWESKE2         NOT FOUND ERROR OK FOR SRCH KEY=0            
         CR    RF,R1                                                            
         BE    PENQ3                                                            
PENQ2A   L     RF,=A(CPENQE)       BUMP PHYS ENQS DISK ERRORS                   
         AP    0(4,RF),=P'1'                                                    
         B     PENQX                                                            
*                                                                               
PENQ3    CLC   IOKEY,SVKEY         ENQUEUED WITH DIFFERENT OWNER                
         BE    PENQ4                                                            
         MVC   SVKEY,IOKEY         SAVE KEY OF LAST OWNER                       
         BAS   R9,GETTIM                                                        
         L     R4,TIME                                                          
         S     R4,SVFTIM           R4=ELAPSED TIME SINCE START                  
         BNM   *+8                                                              
         A     R4,=F'86400'                                                     
         LA    R5,PENQ1                                                         
         SR    R0,R0               SET NORMAL FAIL (DIFF OWNER)                 
         B     PENQ5                                                            
*                                                                               
PENQ4    CLC   MYKEY(8),IOKEY      ENQUEUED WITH SAME PREVOIUS OWNER            
         BNE   *+12                                                             
         MVI   IOERR,X'20'         EARLY EXIT IF I AM PREVIOUS OWNER            
         B     PENQX                                                            
         BAS   R9,GETTIM                                                        
         L     R4,TIME                                                          
         S     R4,SVLTIM           R4=ELAPSED TIME SINCE SAME OWNER             
         BNM   *+8                                                              
         A     R4,=F'86400'                                                     
         LA    R5,PENQ2                                                         
         LA    R0,1                SET ABNORMAL FAIL (SAME OWNER)               
         B     PENQ5                                                            
*                                                                               
PENQ5    L     RF,=A(CPENQW)       BUMP PHYS ENQS WAITED                        
         AP    0(4,RF),=P'1'                                                    
         TM    PROCMODE,OFFLINE    OFFLINE PHYSICAL TIMING FACTORS              
         BZ    PENQ6               -------------------------------              
         LTR   R0,R0                                                            
         BNZ   PENQ5A                                                           
         C     R4,PNOFF            NORMAL OFFLINE MAX                           
         BNL   PENQ7N                                                           
         B     PENQ5B                                                           
PENQ5A   C     R4,PAOFF            ABNORMAL OFFLINE MAX                         
         BNL   PENQ7A                                                           
PENQ5B   ICM   R1,15,PWOFF         WAIT AND TRY AGAIN                           
         BZR   R5                                                               
         ST    R1,TIME                                                          
         BAS   R9,SETTIM                                                        
         BR    R5                                                               
*                                                                               
PENQ6    LTR   R0,R0               ONLINE PHYSICAL TIMING FACTORS               
         BNZ   PENQ6A              ------------------------------               
         C     R4,PNON             NORMAL ONLINE MAX                            
         BNL   PENQ7N                                                           
         B     PENQ6B                                                           
PENQ6A   C     R4,PAON             ABNORMAL ONLINE MAX                          
         BNL   PENQ7A                                                           
PENQ6B   ICM   R1,15,PWON          TEST IF ONLINE WAIT TIME                     
         BZ    *+14                                                             
         ST    R1,TIME                                                          
         BAS   R9,SETTIM           WAIT                                         
         BR    R5                                                               
         OC    VENQFIL,VENQFIL     TEST IF SPECIAL FILE                         
         BZ    *+8                                                              
         BAS   RE,IOEXIT           DO A DUMMY I/O EXIT AND TRY AGAIN            
         BR    R5                                                               
*                                                                               
PENQ7A   MVI   IOERR,X'20'         RETURN ABNORMAL TOO LONG ERROR               
         B     *+8                                                              
PENQ7N   MVI   IOERR,X'10'         RETURN NORMAL TOO LONG ERROR                 
         L     RF,=A(CPENQF)                                                    
         AP    0(4,RF),=P'1'                                                    
         L     RF,=A(CPENQW)                                                    
         SP    0(4,RF),=P'1'                                                    
*                                                                               
PENQX    CLI   IOERR,0                                                          
         XIT1                                                                   
                                                                                
PREAD    NTR1                      ROUTINE TO READ ENQUEUE RECORD               
         LA    R1,CCWR                                                          
         BAS   R9,EXCP             EXECUTE READ CCW CHAIN                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
         EJECT                                                                  
***********************************************************************         
* ROUTINES TO PERFORM PHYSICAL I/O ACTIONS ON CTRL RECORD             *         
* IOERR IS SET TO ZERO IF OK ELSE TO X'80'=DISK ERROR,X'40'=NOT FOUND,*         
***********************************************************************         
CPADD    NTR1                      ROUTINE TO ADD CTRL RECORD                   
         L     RE,=A(CRDATA)                                                    
         LA    RF,CRLENEQU                                                      
         SR    R1,R1                                                            
         MVCL  RE,R0                                                            
         IC    RF,CSRCH+4                                                       
         BCTR  RF,0                DECREMENT REC NUM BY ONE                     
         STC   RF,CSRCH+4                                                       
         LA    R1,CCCA                                                          
         BAS   R9,EXCP             EXECUTE ADD CCW CHAIN                        
         IC    RF,CSRCH+4                                                       
         LA    RF,1(RF)            INCREMENT REC NUM BY ONE                     
         STC   RF,CSRCH+4                                                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
                                                                                
CPREAD   NTR1                      ROUTINE TO READ CTRL RECORD                  
         LA    R1,CCCR                                                          
         BAS   R9,EXCP             EXECUTE READ CCW CHAIN                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
                                                                                
CPWRITE  NTR1                      ROUTINE TO WRITE CTRL RECORD                 
         LA    R1,CCCW                                                          
         BAS   R9,EXCP             EXECUTE READ CCW CHAIN                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
         EJECT                                                                  
***********************************************************************         
* ROUTINES TO PERFORM PHYSICAL I/O ACTIONS ON MEDZ RECORD             *         
* IOERR IS SET TO ZERO IF OK ELSE TO X'80'=DISK ERROR,X'40'=NOT FOUND *         
***********************************************************************         
MPADD    NTR1                      ROUTINE TO ADD MEDZ RECORD                   
         L     RE,=A(MRDATA)                                                    
         LA    RF,MRLENEQU                                                      
         SR    R1,R1                                                            
         MVCL  RE,R0                                                            
         IC    RF,MSRCH+4                                                       
         BCTR  RF,0                DECREMENT REC NUM BY ONE                     
         STC   RF,MSRCH+4                                                       
         LA    R1,CCMA                                                          
         BAS   R9,EXCP             EXECUTE ADD CCW CHAIN                        
         IC    RF,MSRCH+4                                                       
         LA    RF,1(RF)            INCREMENT REC NUM BY ONE                     
         STC   RF,MSRCH+4                                                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
                                                                                
MPREAD   NTR1                      ROUTINE TO READ MEDZ RECORD                  
         LA    R1,CCMR                                                          
         BAS   R9,EXCP             EXECUTE READ CCW CHAIN                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
                                                                                
MPWRITE  NTR1                      ROUTINE TO WRITE MEDZ RECORD                 
         LA    R1,CCMW                                                          
         BAS   R9,EXCP             EXECUTE READ CCW CHAIN                       
         CLI   IOERR,0                                                          
         XIT1                      EXIT WITH CC EQL IF OK                       
         EJECT                                                                  
***********************************************************************         
* IOEXIT NOW CALLS FACPAK'S TASKER WAIT ROUTINE                       *         
* OLD CODE AT IOEXIT1 DOES AN I/O TO SUSPEND THE TASK                 *         
***********************************************************************         
IOEXIT   NTR1                      ROUTINE TO DO A DUMMY I/O EXIT               
         L     R1,MVSWAIT                                                       
         MHI   R1,38               1 MILLISEC = 38.4 TUS                        
         ICM   RF,15,=V(TKWAIT)                                                 
         BZ    IOEXIT1                                                          
         BASR  RE,RF                                                            
         ICM   RE,15,TCBTKWT       DONT COUNT THESE FOR TASK                    
         BNP   IOEXITX                                                          
         BCTR  RE,0                                                             
         STCM  RE,15,TCBTKWT                                                    
         B     IOEXITX                                                          
*                                                                               
IOEXIT1  ICM   R1,15,VENQFIL                                                    
         BZ    IOEXITX             EXIT IF FILE NOT DEFINED                     
         TM    DTFOPEN-DTF(R1),X'20'                                            
         BZ    IOEXITX             EXIT IF FILE NOT OPEN                        
         XC    PARM,PARM                                                        
         MVC   P1,VDACPUID                                                      
         MVC   P4,VENQFIL          READ REC ZERO OF SPECIAL FILE                
         LA    R1,PARM                                                          
         L     RF,VDADDS                                                        
         BASR  RE,RF                                                            
         TM    PROCMODE,OFFLINE    DONT COUNT DUMMY I/O'S IF ONLINE             
         BO    IOEXITX                                                          
         SR    RE,RE                                                            
         ICM   RE,7,TCBIOCNT                                                    
         BNP   IOEXITX                                                          
         BCTR  RE,0                                                             
         STCM  RE,7,TCBIOCNT                                                    
IOEXITX  XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* TASK WAIT FOR PRINTQ                                                *         
***********************************************************************         
TSKWAIT  NTR1                      ROUTINE TO WAIT FOR PRTQ FILE                
         XC    PARM,PARM                                                        
         MVC   P1(1),LOCKEXT       SET PRTQ FILE EXTERNAL FILE NUM              
         MVC   P1+1(3),=X'0001FF'  SET DUMMY DISK ADDR FOR LOCKER               
         L     RF,VSSB             ... WHICH IS UNIQUE FOR THIS FACPAK          
         MVC   P1+2(1),SSBSYSIX-SSBD(RF)                                        
         MVC   P5,VENQFIL          PASS DTF ADDR TO LOCKER                      
         LA    R2,DMCB             POINT R2 TO FUCKING DUMMY DMCB               
         LA    RE,=C'DMREAD'                                                    
         ST    RE,0(R2)                                                         
         MVI   0(R2),X'80'         SET DUMMY READ FOR UPDATE COMMAND            
         LA    R1,PARM                                                          
         L     RF,VLOCKER          DO READ-FOR-UPDATE ON PRTQ FILE              
         BASR  RE,RF                                                            
TSKWAITX XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* TASK FREE FOR PRINTQ                                                *         
***********************************************************************         
TSKFREE  NTR1                      ROUTINE TO FREE PRTQ FILE                    
         XC    PARM,PARM                                                        
         MVC   P1(1),LOCKEXT       SET PRTQ FILE EXTERNAL FILE NUM              
         MVC   P1+1(3),=X'0001FF'  SET DUMMY DISK ADDR FOR LOCKER               
         L     RF,VSSB             ... WHICH IS UNIQUE FOR THIS FACPAK          
         MVC   P1+2(1),SSBSYSIX-SSBD(RF)                                        
         MVI   P2,X'10'            SET FLAG TO SAY WANT UNL                     
         MVC   P2+1(3),=C'UNL'                                                  
         MVC   P5,VENQFIL          PASS DTF ADDR TO LOCKER                      
         LA    R2,DMCB             POINT R2 TO DUMMY DMCB                       
         LA    RE,=C'DMREAD'                                                    
         ST    RE,0(R2)                                                         
         MVI   0(R2),X'80'         SET DUMMY READ FOR UPDATE COMMAND            
         LA    R1,PARM                                                          
         L     RF,VLOCKER                                                       
         BASR  RE,RF                                                            
TSKFREEX XIT1                                                                   
         EJECT                                                                  
CPUOUT   MVC   MSGCPU,=CL4' '      MOVE CPU-ID IN FULL TO MSG CPU               
         TM    FULL,X'C0'                                                       
         BO    CPUOUTO                                                          
CPUOUTD  UNPK  DUB,FULL+2(3)       DOS FORMAT IS X'00000NNN' PWOS               
         MVC   MSGCPU(3),DUB+4                                                  
         BR    R9                                                               
CPUOUTO  MVC   MSGCPU,FULL         MVS FORMAT IS C'XXXX'                        
         BR    R9                                                               
                                                                                
ADROUT   MVC   MSGADR,=CL4' '      MOVE ADR-ID IN FULL TO MSG ADR               
         CLI   FULL,C'*'                                                        
         BNE   ADROUTA                                                          
         MVC   MSGADR(3),FULL+1    FACPAK ID FORMAT                             
         BR    R9                                                               
*                                                                               
ADROUTA  CLI   FULL,C'A'           MVS FORMAT                                   
         BE    ADROUTO                                                          
                                                                                
ADROUTD  CLI   FULL,C'P'           DOS FORMAT                                   
         BE    ADROUTE                                                          
         MVC   MSGADR(2),FULL      NEW FORMAT IS C'BG'/X'00P0'                  
         BR    R9                                                               
ADROUTE  ZIC   R0,FULL+3           OLD FORMAT IS C'PTN'/X'P0'                   
         SRL   R0,4                                                             
         LA    R1,12               ASSUME 12 PARTNS                             
         MVC   MSGADR(2),=C'BG'                                                 
         LA    RF,1(R1)                                                         
         SR    RF,R0               RF=NUMPARTNS+1-PIKNUM                        
         CR    RF,R1                                                            
         BE    ADROUTX             PARTN IS BG                                  
         MVI   MSGADR,C'F'         PARTN IS FN                                  
         LA    RF,ADROUTT(RF)                                                   
         MVC   MSGADR+1(1),0(RF)                                                
         B     ADROUTX                                                          
*                                                                               
ADROUTO  ICM   R0,3,FULL+2         MVS FORMAT HAS 4 HEX CHRS ASID               
         LA    RF,4                                                             
         LA    RE,MSGADR+3         FILL IN BACKWARDS                            
ADROUTO1 SRDL  R0,4                CONVERT HEX FOR DISPLAY OF ASID              
         SRL   R1,28                                                            
         IC    R1,ADROUTT(R1)                                                   
         STC   R1,0(RE)                                                         
         BCTR  RE,0                                                             
         BCT   RF,ADROUTO1                                                      
*                                                                               
ADROUTX  BR    R9                                                               
                                                                                
ADROUTT  DC    C'0123456789ABCDEF'                                              
         EJECT                                                                  
***********************************************************************         
* OS SUPERVISOR DEPENDENT ROUTINES                                    *         
***********************************************************************         
GETCPU   L     R1,X'10'(,R0)       GET CPU ID INTO CPU                          
         L     R1,X'C4'(,R1)       R1=A(SMCA) FROM CVT                          
         MVC   CPU,16(R1)          CPU IS C'XXXX' FROM SMCASID                  
         BR    R9                                                               
                                                                                
GETADR   MVC   ADR(2),=C'AD'       GET ADDRESS SPACE ID INTO ADR                
         LA    R5,FULL                                                          
         EXTRACT (5),FIELDS=ASID                                                
         MVC   ASID,FULL+2                                                      
         MVC   ADR+2(2),FULL+2     ASID IS TWO CHR BINARY                       
         TM    PROCMODE,OFFLINE                                                 
         BR    R9                  NOP BOR R9 - ALWAYS USE ASID                 
         MVI   ADR,C'*'            ONLINE *XXX WHERE XXX IS FACPAK ID           
         L     RF,VSSB                                                          
         MVC   ADR+1(3),SSBSYSNA-SSBD(RF)                                       
         BR    R9                                                               
                                                                                
* NOTE: THIS IS THE MVS TCB REFERS TO TCBTID. HARD CODE SO THAT IT              
* DOESN'T CLASH WITH DDS TCBD DSECT. REMOVE IKJTCB IBM MACRO                    
                                                                                
GETTCB   L     R5,PSATOLD-PSA(,R0) GET A(MVS TCB)                               
         STCM  R5,7,MVSTCBA                                                     
         MVC   MVSTCBID,X'EE'(R5)  MVS TCBTID                                   
         BR    R9                                                               
                                                                                
GETJOB   LA    R5,FULL             GET JOB NAME INTO JOB                        
         EXTRACT (5),FIELDS=TIOT                                                
         L     R5,FULL                                                          
         MVC   JOB,0(R5)                                                        
         BR    R9                                                               
                                                                                
SWAPYES  CLI   SWAPABLE,C'Y'       SET SWAPABLE                                 
         BER   R9                                                               
         MVI   SWAPABLE,C'Y'                                                    
         LA    R0,5                                                             
         B     SWAPIT                                                           
*                                                                               
SWAPNO   CLI   SWAPABLE,C'N'       SET NON SWAPABLE                             
         BER   R9                                                               
         MVI   SWAPABLE,C'N'                                                    
         LA    R0,4                                                             
SWAPIT   TM    PROCMODE,OFFLINE    INVOKE ONLY IF OFFLINE                       
         BZR   R9                                                               
         LNR   R0,R0               INVOKE FRED'S SVC                            
         SVC   247                                                              
         BR    R9                                                               
                                                                                
SERENQ   MVC   SYSMAJ,ENQMAJ       SERIALISING ENQUEUE FOR MULTITAK             
         MVC   SYSMIN,ENQMIN                                                    
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         ENQ   ((2),(3),E,8,STEP),RET=NONE                                      
         LM    R2,R3,SAVER2                                                     
         CR    R9,R9                                                            
         BR    R9                  EXIT WITH CC=EQL                             
                                                                                
MTKENQ   CLC   RSRC1(3),=C'ALL'    TASK ENQUEUE FOR OFFLINE MULTITSK            
         BER   R9                                                               
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         ENQ   ((2),(3),E,8,STEP),RET=NONE                                      
         LM    R2,R3,SAVER2                                                     
         CR    R9,R9                                                            
         BR    R9                  EXIT WITH CC=EQL                             
                                                                                
SYSENQU  CLC   RSRC1(3),=C'ALL'    SYSTEM ENQUEUE (UNCONDITIONAL)               
         BER   R9                                                               
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         ENQ   ((2),(3),E,8,SYSTEMS),RET=NONE                                   
         LM    R2,R3,SAVER2                                                     
         MVI   ENQSTAT,C'E'                                                     
         BAS   RE,SYSESV           SAVE ENQUEUED RESOURCE IN TABLE              
         CLI   ENQSTAT,C'E'                                                     
         BR    R9                  EXIT WITH CC=EQL                             
                                                                                
SYSENQC  CLC   RSRC1(3),=C'ALL'    SYSTEM ENQUEUE (CONDITIONAL)                 
         BER   R9                                                               
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         ENQ   ((2),(3),E,8,SYSTEMS),RET=USE                                    
         LM    R2,R3,SAVER2                                                     
         MVI   ENQSTAT,C'E'                                                     
         LTR   RF,RF                                                            
         BZ    SYSENQCX                                                         
         CLI   3(RF),X'08'         I ALREADY HAVE IT                            
         BE    SYSENQCX                                                         
         TM    3(RF),X'04'         SET CC=NEQ IF RESOURCE IN USE                
         BZ    SYSENQCX                                                         
         MVI   ENQSTAT,C'X'                                                     
SYSENQCX CLI   ENQSTAT,C'E'                                                     
         BNE   *+8                                                              
         BAS   RE,SYSESV           SAVE ENQUEUED RESOURCE IN TABLE              
         CLI   ENQSTAT,C'E'                                                     
         BR    R9                  EXIT WITH CC=NEQ IF RESOURCE N/A             
                                                                                
SERDEQ   MVC   SYSMAJ,ENQMAJ       SERIALISE DEQUEUE FOR MULTITASKING           
         MVC   SYSMIN,ENQMIN                                                    
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         DEQ   ((2),(3),8,STEP),RET=HAVE                                        
         LM    R2,R3,SAVER2                                                     
         CR    R9,R9                                                            
         BR    R9                                                               
                                                                                
MTKDEQ   CLC   RSRC1(3),=C'ALL'    TASK DEQUEUE                                 
         BER   R9                                                               
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         DEQ   ((2),(3),8,STEP),RET=HAVE                                        
         LM    R2,R3,SAVER2                                                     
         CR    R9,R9                                                            
         BR    R9                                                               
                                                                                
SYSDEQ   CLC   RSRC1(3),=C'ALL'    SYSTEM DEQUEUE                               
         BE    SYSDEQ1                                                          
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         DEQ   ((2),(3),8,SYSTEMS),RET=HAVE                                     
         LM    R2,R3,SAVER2                                                     
         MVI   ENQSTAT,C'D'                                                     
         BAS   RE,SYSEDL           REMOVE RESOURCE ENQUEUED FROM TABLE          
         BR    R9                                                               
*                                                                               
SYSDEQ1  LA    RF,SENQTAB          SEARCH TABLE OF ENQUEUES                     
SYSDEQ2  CLI   0(RF),X'FF'                                                      
         BER   R9                                                               
         CLC   0(4,RF),SPACES                                                   
         BE    SYSDEQ3                                                          
         ST    RF,FULL1            SAVE ADDR OF NON EMPTY SLOT                  
         MVC   SYSMAJ,ENQMAJ                                                    
         MVC   SYSMIN,RSRC1                                                     
         STM   R2,R3,SAVER2                                                     
         LA    R2,SYSMAJ                                                        
         LA    R3,SYSMIN                                                        
         DEQ   ((2),(3),8,SYSTEMS),RET=HAVE                                     
         LM    R2,R3,SAVER2                                                     
         MVI   ENQSTAT,C'D'                                                     
         L     RF,FULL1                                                         
         MVC   0(16,RF),SPACES     CLEAR SLOT AFTER DEQUEUING RESOURCE          
SYSDEQ3  LA    RF,16(RF)                                                        
         B     SYSDEQ2                                                          
                                                                                
SYSESV   ST    RE,SAVERE           SAVE SYSTEM ENQUEUES IN TABLE                
         LA    RF,SENQTAB                                                       
         SR    RE,RE                                                            
SYSESV1  CLI   0(RF),X'FF'         TEST IF END OF TABLE                         
         BE    SYSESV3                                                          
         CLC   0(16,RF),SYSMAJ     EXIT IF ALREADY THERE                        
         BE    SYSESVX                                                          
         CLC   0(4,RF),SPACES                                                   
         BNE   SYSESV2                                                          
         LTR   RE,RE                                                            
         BNZ   SYSESV2                                                          
         LR    RE,RF               SAVE ADDRESS OF FIRST EMPTY SLOT             
SYSESV2  LA    RF,16(RF)                                                        
         B     SYSESV1                                                          
SYSESV3  LTR   RF,RE               TEST IF SPACE IN TABLE                       
         BZ    SYSESVX                                                          
         MVC   0(16,RF),SYSMAJ                                                  
SYSESVX  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
SYSEDL   ST    RE,SAVERE           DELETE SYSTEM ENQUEUES IN TABLE              
         LA    RF,SENQTAB                                                       
SYSEDL1  CLI   0(RF),X'FF'         EXIT IF END OF TABLE                         
         BE    SYSEDLX                                                          
         CLC   0(16,RF),SYSMAJ     TEST IF IN TABLE                             
         BNE   *+10                                                             
         MVC   0(16,RF),SPACES                                                  
         LA    RF,16(RF)                                                        
         B     SYSEDL1                                                          
SYSEDLX  L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
ENQMAJ   DC    CL8'ENQDEQ  '                                                    
ENQMIN   DC    CL8'SERIAL  '                                                    
*                                                                               
         DS    0D                                                               
         DC    CL8'*ENQTAB*'                                                    
SENQTAB  DC    32CL16' '                                                        
         DC    X'FFFF'                                                          
                                                                                
GETMSG   TM    PROCMODE,OFFLINE    SEND MSG TO CONSOLE AND GET ANS              
         BO    GETMSG1                                                          
         GOTO1 VTICTOC,DUB,C'SSET'                                              
*                                                                               
GETMSG1  SR    R0,R0                                                            
         MVI   ANS,C' '                                                         
         XC    ECB,ECB                                                          
         MVI   MSGHDR,1                                                         
         LA    RE,ANS                                                           
         STCM  RE,7,MSGHDR+1                                                    
         LA    RE,ECB                                                           
         ST    RE,MSGHDR+4                                                      
         LA    RE,L'MSG+4                                                       
         STH   RE,MSGHDR+8                                                      
         XC    MSGHDR+10(2),MSGHDR+10                                           
         WTOR  MF=(E,MSGHDR)                                                    
         WAIT  ECB=ECB                                                          
         OI    ANS,X'40'                                                        
*                                                                               
GETMSG2  LA    R0,1                                                             
         CLI   ANS,C'C'            CC=HIGH FOR CANCEL                           
         BE    GETMSGX                                                          
         LNR   R0,R0                                                            
         CLI   ANS,C'R'            CC=LOW FOR RETRY                             
         BE    GETMSGX                                                          
         CLC   MSGOPT3,SPACES      TEST IF OPTION3 ALLOWED                      
         BE    GETMSG1                                                          
         SR    R0,R0                                                            
         CLC   ANS(1),MSGOPT3      CC=EQL FOR IGNORE/DEQUEUE                    
         BE    GETMSGX                                                          
         B     GETMSG1                                                          
*                                                                               
GETMSGX  TM    PROCMODE,OFFLINE                                                 
         BO    GETMSGY                                                          
         GOTO1 VTICTOC,DUB,C'RSET'                                              
GETMSGY  LTR   R0,R0               EXIT WITH CC LOW=R,EQL=I,HIGH=R              
         BR    R9                                                               
                                                                                
GETTIM   TIME  TU                  ONE TIMER UNIT=1/38400 SEC                   
         ST    R1,DATE             AND DATE AS 0CYYDDD+                         
         SRDL  R0,32                                                            
         M     R0,=F'1000'                                                      
         D     R0,=F'38400'                                                     
         ST    R1,TIMEMILI         TIME IN MILLISECONDS                         
         SR    R0,R0                                                            
         D     R0,=F'1000'                                                      
         ST    R1,TIME             TIME IN SECONDS                              
         BR    R9                                                               
                                                                                
GETSUB   ICM   RF,15,VENQFIL       GET FILE SUBID INTO DUB                      
         BZR   R9                                                               
         USING DTFPHD,RF                                                        
         TM    DIND,DINDXAM        TEST HIGH CORE EXTENT                        
         BO    GETSUB0                                                          
         LA    RF,DMTX                                                          
         B     GETSUB1                                                          
*                                                                               
GETSUB0  ICM   RF,15,DMTX          RF=A(EXTENT MATRIX)                          
         USING EXTENTD,RF                                                       
GETSUB1  SAM31                                                                  
         SR    R0,R0                                                            
         ICM   R0,3,EXT#TRKS       USE NUM OF TRACKS IN FIRST EXTENT            
         SAM24                                                                  
         BZR   R9                                                               
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  DUB(4),DUB+5(3)                                                  
GETSUBX  BR    R9                                                               
         DROP  RF                                                               
                                                                                
SETTIM   TM    PROCMODE,OFFLINE    WAIT FOR TIME MILLI SECS                     
         BO    SETTIM1                                                          
         L     R1,TIME             ONLINE DO A TASK WAIT                        
         MHI   R1,38               1 MILLISEC = 38.4 TUS                        
         ICM   RF,15,=V(TKWAIT)                                                 
         BZ    SETTIM0                                                          
         BASR  RE,RF                                                            
         ICM   RE,15,TCBTKWT       DONT COUNT THESE FOR TASK                    
         BNPR  R9                                                               
         BCTR  RE,0                                                             
         STCM  RE,15,TCBTKWT                                                    
         BR    R9                                                               
                                                                                
SETTIM0  GOTO1 VTICTOC,DUB,C'SSET'                                              
SETTIM1  L     R1,TIME             OFFLINE DO FULL TIMER WAIT                   
         MH    R1,=H'38'                                                        
         LTR   R1,R1                                                            
         BZ    SETTIM2                                                          
         ST    R1,DUB                                                           
         STIMER WAIT,TUINTVL=DUB                                                
                                                                                
SETTIM2  TM    PROCMODE,OFFLINE                                                 
         BOR   R9                                                               
         GOTO1 VTICTOC,DUB,C'RSET'                                              
         BR    R9                                                               
                                                                                
ERR      ICM   R9,8,RSLT           FATAL ERROR EXIT                             
         ST    R9,DUB                                                           
         ZIC   R1,RSLT                                                          
         AH    R1,=H'1000'                                                      
         DC    H'0'                **TEMP** DO NOT TAKE ABEND                   
         ABEND (1),DUMP                                                         
                                                                                
EXCP     MVI   IOERR,0             EXECUTE CHANNEL PROGRAM AT R1                
         TM    PROCMODE,OFFLINE                                                 
         BO    EXCP1                                                            
         LR    R0,R1                                                            
         GOTO1 VTICTOC,DUB,C'SSET'                                              
         LR    R1,R0                                                            
EXCP1    XC    ECB,ECB                                                          
         XC    IOB,IOB                                                          
         MVI   IOB,X'C3'           SET DC/CC/NOTRELATED/NOAPPENDG               
         LA    RF,ECB                                                           
         ST    RF,IOB+4                                                         
         CLI   0(R1),X'07'         REMOVE LONG SEEK IF PRESENT                  
         BNE   EXCP1A                                                           
         L     RE,0(R1)            POINT TO LONG SEEK FIELD                     
         LA    RE,0(RE)                                                         
         BCTR  RE,0                                                             
         MVC   IOB+32(8),0(RE)     SET MBBCCHHR IN IOB                          
         LA    R1,8(R1)                                                         
EXCP1A   ST    R1,IOB+16           SET A(CCW CHAIN TO BE EXECUTED)              
         L     RF,VFILE                                                         
         L     RE,DTFADCB-DTF(RF)  SET DCB ADR                                  
         STCM  RE,7,IOB+21                                                      
         MVC   DTFSEEK-DTF(8,RF),IOB+32                                         
*                                                                               
         EXCP  IOB                 INITIATE I/O                                 
         WAIT  ECB=ECB                                                          
         SR    R1,R1                                                            
         ICM   R1,7,IOB+9          RETURN R1=A(LAST CCW EXECUTED)               
         SH    R1,=H'8'                                                         
*                                                                               
         CLI   IOB+4,X'7F'         TEST NORMAL COMPLETION                       
         BE    EXCPX                                                            
         CLI   IOB+4,X'41'         TEST PERMANENT ERROR                         
         BE    EXCP2                                                            
EXCP1X   OI    IOERR,X'80'         SET UNRECV ERROR                             
         B     EXCPX                                                            
*                                                                               
EXCP2    TM    IOB+12,X'02'        TEST CSW UNIT STAT FOR UNIT CHECK            
         BO    EXCP3                                                            
         TM    IOB+12,X'01'        TEST CSW UNIT STAT FOR UNIT EXCPN            
         BO    EXCP1X                                                           
EXCP2B   TM    IOB+12,X'FF'        TEST CSW UNIT STATUS                         
         BNZ   EXCP1X                                                           
         TM    IOB+13,X'FF'        TEST CSW CHAN STATUS                         
         BNZ   EXCP1X                                                           
*                                                                               
EXCP3    TM    IOB+3,X'08'         TEST SENSE BYTE 1 FOR NOT FOUND              
         BZ    EXCP1X                                                           
         OI    IOERR,X'40'         SET NOT FOUND                                
         B     EXCPX                                                            
*                                                                               
EXCPX    TM    PROCMODE,OFFLINE                                                 
         BO    EXCPY                                                            
         LR    R0,R1                                                            
         GOTO1 VTICTOC,DUB,C'RSET'                                              
         LR    R1,R0                                                            
EXCPY    CLI   IOERR,0                                                          
         BR    R9                  EXIT WITH CC EQL IF OK                       
         EJECT                                                                  
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* LIST OF ADDRESSES PASSED BACK IN PARAM LIST                         *         
***********************************************************************         
RETADDRS DS    0A                                                               
RDDSQDQ  DC    A(DDSQDC)           A(DDSQDC DTF)                                
RMYKEY   DC    A(MYKEY)            A(KEY WHEN I OWN RECORD)                     
RIOKEY   DC    A(IOKEY)            A(KEY WHEN OTHER OWNS RECORD)                
RIORKEY  DC    A(IORKEY)           A(KEY AND DATA ACTUAL)                       
RCOUNTS  DC    A(COUNTS)           A(ENQUEUE COUNTERS)                          
RCRDATA  DC    A(CRDATA)           A(CONTROL RECORD DATA)                       
RMRDATA  DC    A(MRDATA)           A(MEDZ RECORD DATA)                          
RSENQTAB DC    A(SENQTAB)          A(SYSTEM ENQ TABLE)                          
                                                                                
***********************************************************************         
* PROGRAM CONSTANTS FOR CPU/ADR                                       *         
***********************************************************************         
CPU      DC    F'0'                CPU ID                                       
ADR      DC    F'0'                ADDRESS SPACE ID                             
IDATE    DC    F'0'                DATE INITIALISED (P'0CYYDDD')                
ITIME    DC    F'0'                TIME INITIALISED (F'SECONDS')                
*                                                                               
ASID     DC    H'0'                ASID                                         
ASID2    DC    H'0'                ASID JOB THAT HAS IT                         
JOB      DC    CL8' '              JOB NAME                                     
SVTASK   DC    F'0'                                                             
INITFLAG DC    C'N'                                                             
OPENFLAG DC    C'N'                                                             
SWAPABLE DC    C' '                                                             
OFFCTRL  DC    C' '                                                             
OFFMEDZ  DC    C' '                                                             
PROCMODE DC    X'00'                                                            
OFFMULTI EQU   X'80'                                                            
OFFLINE  EQU   X'40'                                                            
PRODTEST DC    C' '                                                             
SPACES   DC    CL16' '                                                          
*                                                                               
VFILE    DC    A(DDSQDC)                                                        
VPRTQLST DC    V(PRTQLST)                                                       
VWRKFLST DC    V(WRKFLST)                                                       
VWKFILE  DC    V(WKFILE)                                                        
VFACWRK  DC    V(FACWRK)                                                        
VEASIWK  DC    V(EASIWK)                                                        
VGENFIL  DC    V(GENFIL)                                                        
VMEDFILZ DC    V(MEDFILZ)                                                       
VSSB     DC    V(SSB)                                                           
VTCB     DC    V(TCB)                                                           
VLOCKER  DC    V(LOCKER)                                                        
VTICTOC  DC    V(TICTOC)                                                        
VDADDS   DC    V(DADDS)                                                         
VDACPUID DC    V(DACPUID)                                                       
VDAOPEN  DC    V(DAOPEN)                                                        
VDATRNS  DC    V(DATRNS)                                                        
                                                                                
ACTNTBL  DS    0CL4                TABLE OF VALID ACTION CODES                  
*                                                                               
         DC    C'E',AL3(QDQ)       ENQUEUE RESOURCE (WAIT IF NOT FREE)          
         DC    C'D',AL3(QDQ)       DEQUEUE RESOURCE                             
         DC    C'A',AL3(ADD)       ADD A NEW ENQUEUE RECORD                     
         DC    C'F',AL3(QDQ)       ENQUEUE RESOURCE (EXIT IF NOT FREE)          
         DC    C'R',AL3(REA)       READ ENQUEUE RECORD                          
         DC    C'S',AL3(SWA)       SWAP STATUS CHANGE                           
         DC    C'T',AL3(QDQ)       TEST RESOURCE                                
         DC    C'X',AL3(DMENQX)    EXIT (DUMMY CALL)                            
*                                                                               
         DC    C'1',AL3(CREA)      READ CTRL RECORD                             
         DC    C'2',AL3(CWRI)      WRITE CTRL RECORD                            
         DC    C'3',AL3(CADD)      ADD A NEW CTRL RECORD                        
*                                                                               
         DC    C'4',AL3(MREA)      READ MEDZ RECORD                             
         DC    C'5',AL3(MWRI)      WRITE MEDZ RECORD                            
         DC    C'6',AL3(MADD)      ADD A NEW MEDZ RECORD                        
*                                                                               
ACTNTBLX DC    4X'00'                                                           
*                                                                               
PRTQDFL  DC    AL1(1),C'U',XL2'00',X'F5',AL3(0)                                 
WRKFDFL  DC    AL1(1),C'I',XL2'00',X'21',AL3(0)                                 
*                                                                               
KEYLEN   DC    H'30'                                                            
ENTLEN   DC    H'30'                                                            
ENTMAX   DC    H'48'               FIRST/LAST ENTRIES NOT AVAIL                 
DATALEN  DC    H'1500'             MUST EQUAL ENTLEN*(ENTMAX+2)                 
*                                                                               
ERRMAX   EQU   4                   MAXIMUM ERROR RETRY VALUE                    
         EJECT                                                                  
*&&UK                              TIMERS FOR MVS SYSTEM ENQUEUE                
*                                  ---------------------------------            
MVSTRYS  DC    F'1000'             ONLINE  NUMBER OF MVS ATTEMPTS               
MVSWAIT  DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
                                                                                
*                                  TIMERS FOR PHYSICAL ENQ OF ENQREC            
*                                  ---------------------------------            
PNOFF    DC    F'240'              OFFLINE DIFF OWNER MAX SECS (NORM)           
PAOFF    DC    F'120'              OFFLINE SAME OWNER MAX SECS (ABNM)           
PWOFF    DC    F'0100'    MILLISEC OFFLINE WAIT RETRY INTERVAL                  
*                                                                               
PNON     DC    F'120'              ONLINE  DIFF OWNER MAX SECS (NORM)           
PAON     DC    F'060'              ONLINE  SAME OWNER MAX SECS (ABNM)           
PWON     DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
                                                                                
*                                  TIMERS FOR LOGICAL ENQ OF RESOURCE           
*                                  ----------------------------------           
LNOFF    DC    F'480'              OFFLINE DIFF OWNER MAX TIME (NORM)           
LAOFF    DC    F'240'              OFFLINE SAME OWNER MAX TIME (ABNM)           
LWOFF    DC    F'0100'    MILLISEC OFFLINE WAIT RETRY INTERVAL                  
*                                                                               
LNON     DC    F'240'              ONLINE  DIFF OWNER MAX TIME (NORM)           
LAON     DC    F'120'              ONLINE  SAME OWNER MAX TIME (ABNM)           
LWON     DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
*&&                                                                             
         EJECT                                                                  
*&&US                              TIMERS FOR MVS SYSTEM ENQUEUE                
*                                  ---------------------------------            
MVSTRYS  DC    F'1000'             ONLINE  NUMBER OF MVS ATTEMPTS               
MVSWAIT  DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
                                                                                
*                                  TIMERS FOR PHYSICAL ENQ OF ENQREC            
*                                  ---------------------------------            
PNOFF    DC    F'240'              OFFLINE DIFF OWNER MAX SECS (NORM)           
PAOFF    DC    F'120'              OFFLINE SAME OWNER MAX SECS (ABNM)           
PWOFF    DC    F'0100'    MILLISEC OFFLINE WAIT RETRY INTERVAL                  
*                                                                               
PNON     DC    F'120'              ONLINE  DIFF OWNER MAX SECS (NORM)           
PAON     DC    F'060'              ONLINE  SAME OWNER MAX SECS (ABNM)           
PWON     DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
                                                                                
*                                  TIMERS FOR LOGICAL ENQ OF RESOURCE           
*                                  ----------------------------------           
LNOFF    DC    F'480'              OFFLINE DIFF OWNER MAX TIME (NORM)           
LAOFF    DC    F'240'              OFFLINE SAME OWNER MAX TIME (ABNM)           
LWOFF    DC    F'0100'    MILLISEC OFFLINE WAIT RETRY INTERVAL                  
*                                                                               
LNON     DC    F'240'              ONLINE  DIFF OWNER MAX TIME (NORM)           
LAON     DC    F'120'              ONLINE  SAME OWNER MAX TIME (ABNM)           
LWON     DC    F'0100'    MILLISEC ONLINE  WAIT RETRY INTERVAL                  
*&&                                                                             
         EJECT                                                                  
***********************************************************************         
* PHYSICAL I/O FILES AND CONTROL BLOCKS                               *         
***********************************************************************         
         DS    0D                                                               
         DC    XL8'00'             FILE STAMP AT DTF-8                          
DDSQDC   DMDA  XTNTXIT=0                                                        
                                                                                
***********************************************************************         
* MESSAGE TO OPERATORS CONSOLE FOR ENQUEUE FAILURES                   *         
***********************************************************************         
TXT      DC    0CL70' '            TXT                                          
TXTTYPE  DC    CL7'WAIT ON'                                                     
         DC    CL1' '                                                           
TXTRSRC  DC    CL8' '                                                           
         DC    CL10' OWNED BY '                                                 
TXTCPU   DC    CL4' '                                                           
         DC    CL1'/'                                                           
TXTADR   DC    CL4' '                                                           
         DC    CL1'/'                                                           
TXTJOB   DC    CL8' '                                                           
         DC    CL1' '                                                           
TXTOPT1  DC    CL7'R=RETRY'                                                     
         DC    CL1' '                                                           
TXTOPT2  DC    CL8'C=CANCEL'                                                    
         DC    CL1' '                                                           
TXTOPT3  DC    CL8'I=IGNORE'                                                    
*                                                                               
TXTTRL   DC    XL4'00'                                                          
*                                                                               
NOTREL   DC    8C'.'                                                            
         EJECT                                                                  
***********************************************************************         
* PHYSICAL I/O DISK ADDRESS AND CHANNEL PROGRAMS FOR ENQUEUE RECORD   *         
***********************************************************************         
         DC    0D'0'                                                            
         DC    C'**SEEK**'                                                      
         DC    XL1'00'             M                                            
ESEEK    DC    XL2'00'             BB                                           
ESRCH    DC    XL5'00'             CCHHR                                        
*                                                                               
ESECTOR  DC    X'05'               SECTOR NUMBER 3380 (06 FOR 3390)             
*                                                                               
         DC    C'**CCWA**'                                                      
CCWA     DC    0D'0'               ADD LOGIC                                    
CCWASEEK DC    X'0700000040000006' SEEK                                         
CCWASIE  DC    X'3100000040000005' SRCH ID EQL....R=0                           
CCWATIC  DC    X'0800000000000000' TIC                                          
CCWAWCK  DC    X'1D00000020000000' WRITE CKD......A=IORCOUNT,L=1538             
CCWALEN  EQU   *-CCWA                                                           
*                                                                               
         DC    C'**CCWR**'                                                      
CCWR     DC    0D'0'               READ LOGIC                                   
CCWRSEEK DC    X'0700000040000006' SEEK                                         
CCWRSET  DC    X'2300000040000001' SET SECTOR                                   
CCWRSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCWRTIC  DC    X'0800000000000000' TIC                                          
CCWRRKD  DC    X'0E00000020000000' READ KD........A=IORKEY,L=1530               
*                                                                               
         DC    C'**CCWE**'                                                      
CCWE     DC    0D'0'               ENQUEUE LOGIC                                
CCWESEEK DC    X'0700000040000006' SEEK                                         
CCWESET  DC    X'2300000040000001' SET SECTOR                                   
CCWESIE1 DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCWETIC1 DC    X'0800000000000000' TIC                                          
CCWERKD1 DC    X'0E00000060000000' READ KD........A=IOKEY,L=30                  
CCWESKE2 DC    X'2900000060000000' SRCH KEY EQL...K=ZEROS                       
CCWETIC2 DC    X'0800000000000000' TIC                                          
CCWERD2  DC    X'0600000060000000' READ DATA......A=IORDATA,L=1500              
CCWESIE3 DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCWETIC3 DC    X'0800000000000000' TIC                                          
CCWEWKD3 DC    X'0D00000000000000' WRITE KD.......A=IORKEY,L=1530               
*                                                                               
         DC    C'**CCWD**'                                                      
CCWD     DC    0D'0'               DEQUEUE LOGIC                                
CCWDSEEK DC    X'0700000040000006' SEEK                                         
CCWDSET  DC    X'2300000040000001' SET SECTOR                                   
CCWDSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCWDTIC  DC    X'0800000000000000' TIC                                          
CCWDWKD  DC    X'0D00000020000000' WRITE KD.......A=IORKEY,L=1530               
         EJECT                                                                  
***********************************************************************         
* PHYSICAL I/O DISK ADDRESS AND CHANNEL PROGRAMS FOR CTRL RECORD      *         
***********************************************************************         
         DC    0D'0'                                                            
         DC    C'*CTSEEK*'                                                      
         DC    XL1'00'             M                                            
CSEEK    DC    XL2'00'             BB                                           
CSRCH    DC    XL5'00'             CCHHR                                        
*                                                                               
CSECTOR  DC    X'05'               SECTOR NUMBER 3380 (06 FOR 3390)             
*                                                                               
         DC    C'*CCWCTA*'                                                      
CCCA     DC    0D'0'               ADD CTRL RECORD                              
CCCASEEK DC    X'0700000040000006' SEEK                                         
CCCASIE  DC    X'3100000040000005' SRCH ID EQL....R=0                           
CCCATIC  DC    X'0800000000000000' TIC                                          
CCCAWCK  DC    X'1D00000020000000' WRITE CKD......L=CRLENEQU+8                  
*                                                                               
         DC    C'*CCWCTR*'                                                      
CCCR     DC    0D'0'               READ CTRL RECORD                             
CCCRSEEK DC    X'0700000040000006' SEEK                                         
CCCRSET  DC    X'2300000040000001' SET SECTOR                                   
CCCRSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCCRTIC  DC    X'0800000000000000' TIC                                          
CCCRRD   DC    X'0600000020000000' READ DATA......L=CRLENEQU                    
*                                                                               
         DC    C'*CCWCTW*'                                                      
CCCW     DC    0D'0'               WRITE CTRL RECORD                            
CCCWSEEK DC    X'0700000040000006' SEEK                                         
CCCWSET  DC    X'2300000040000001' SET SECTOR                                   
CCCWSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCCWTIC  DC    X'0800000000000000' TIC                                          
CCCWWD   DC    X'0500000020000000' WRITE DATA.....L=CRLENEQU                    
         EJECT                                                                  
***********************************************************************         
* PHYSICAL I/O DISK ADDRESS AND CHANNEL PROGRAMS FOR MEDZ RECORD      *         
***********************************************************************         
         DC    0D'0'                                                            
         DC    C'*MZSEEK*'                                                      
         DC    XL1'00'             M                                            
MSEEK    DC    XL2'00'             BB                                           
MSRCH    DC    XL5'00'             CCHHR                                        
*                                                                               
MSECTOR  DC    X'05'               SECTOR NUMBER 3380 (06 FOR 3390)             
*                                                                               
         DC    C'*CCWMZA*'                                                      
CCMA     DC    0D'0'               ADD MEDZ RECORD                              
CCMASEEK DC    X'0700000040000006' SEEK                                         
CCMASIE  DC    X'3100000040000005' SRCH ID EQL....R=0                           
CCMATIC  DC    X'0800000000000000' TIC                                          
CCMAWCK  DC    X'1D00000020000000' WRITE CKD......L=MRLENEQU+8                  
*                                                                               
         DC    C'*CCWMZR*'                                                      
CCMR     DC    0D'0'               READ MEDZ RECORD                             
CCMRSEEK DC    X'0700000040000006' SEEK                                         
CCMRSET  DC    X'2300000040000001' SET SECTOR                                   
CCMRSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCMRTIC  DC    X'0800000000000000' TIC                                          
CCMRRD   DC    X'0600000020000000' READ DATA......L=MRLENEQU                    
*                                                                               
         DC    C'*CCWMZW*'                                                      
CCMW     DC    0D'0'               WRITE MEDZ RECORD                            
CCMWSEEK DC    X'0700000040000006' SEEK                                         
CCMWSET  DC    X'2300000040000001' SET SECTOR                                   
CCMWSIE  DC    X'3100000040000005' SRCH ID EQL....R=1                           
CCMWTIC  DC    X'0800000000000000' TIC                                          
CCMWWD   DC    X'0500000020000000' WRITE DATA.....L=MRLENEQU                    
         EJECT                                                                  
***********************************************************************         
* PHYSICAL I/O DATA AREAS                                             *         
***********************************************************************         
         DC    C'**MKEY**'                                                      
MYKEY    DC    0CL30' '            MYKEY IS KEY WHEN I OWN RECORD               
MYKCPU   DC    XL4'00'                                                          
MYKADR   DC    XL4'00'                                                          
MYKTIM   DC    XL4'00'                                                          
MYKTYP   DC    XL1'00'                                                          
MYKCNT   DC    XL1'00'                                                          
MYKR1    DC    CL8' '                                                           
MYKR2    DC    CL8' '                                                           
*                                                                               
XCKEY    DC    XL30'00'            XCKEY IS KEY WHEN RECORD IS FREE             
*                                                                               
         DC    0D'0'                                                            
         DC    C'**RKEY**'                                                      
IOKEY    DC    0CL30' '            IOKEY IS KEY WHEN RECORD IS OWNED            
IOKCPU   DC    XL4'00'                                                          
IOKADR   DC    XL4'00'                                                          
IOKTIM   DC    XL4'00'                                                          
IOKTYP   DC    XL1'00'                                                          
IOKCNT   DC    XL1'00'                                                          
IOKR1    DC    CL8' '                                                           
IOKR2    DC    CL8' '                                                           
*                                                                               
         DC    0D'0'                                                            
         DC    C'**RCKD**'                                                      
IORCOUNT DC    XL8'00'             ENQUEUE RECORD COUNT FIELD                   
*                                                                               
IORKEY   DC    0CL30' '            ENQUEUE RECORD KEY FIELD                     
IORCPU   DC    XL4'00'                                                          
IORADR   DC    XL4'00'                                                          
IORTIM   DC    XL4'00'                                                          
IORTYP   DC    XL1'00'                                                          
IORCNT   DC    XL1'00'                                                          
IORR1    DC    CL8' '                                                           
IORR2    DC    CL8' '                                                           
*                                                                               
IORDATA  DC    50XL30'00'          ENQUEUE RECORD DATA FIELD                    
         EJECT                                                                  
         DC    0D'0'                                                            
         DC    C'**CTCD**'                                                      
CRCOUNT  DC    XL8'00'             CTRL RECORD COUNT FIELD                      
*                                                                               
CRDATA   DC    (CRLENEQU)X'00'     CTRL RECORD DATA FIELD                       
*                                                                               
CRFILMAX EQU   16                  CTRL MAXIMUM FILES (16)                      
CRLENEQU EQU   32+(32*CRFILMAX)+32 CTRL RECORD LENGTH (576)                     
                                                                                
         DC    0D'0'                                                            
         DC    C'**MZCD**'                                                      
MRCOUNT  DC    XL8'00'             MEDZ RECORD COUNT FIELD                      
*                                                                               
MRDATA   DC    (MRLENEQU)X'00'     MEDZ RECORD DATA FIELD                       
*                                                                               
MRFILMAX EQU   20                  MEDZ MAXIMUM FILES (20)                      
MRLENEQU EQU   32+(32*MRFILMAX)+32 MEDZ RECORD LENGTH (704)                     
         EJECT                                                                  
***********************************************************************         
* LIST OF ENQUEUE COUNTS WITH DESCRIPTIONS - RETURNED TO CALLER       *         
***********************************************************************         
COUNTS   DS    0A                                                               
*                                                                               
CLPRTR   DC    PL4'0',CL20'PRTQ ENQS REQUESTED'                                 
CLPRTI   DC    PL4'0',CL20'PRTQ ENQS ISSUED'                                    
CLPRTW   DC    PL4'0',CL20'PRTQ ENQS WAITED'                                    
CLPRTF   DC    PL4'0',CL20'PRTQ ENQS FAILED'                                    
CLPRTD   DC    PL4'0',CL20'PRTQ DEQS ISSUED'                                    
*                                                                               
CLWRKR   DC    PL4'0',CL20'WRKR ENQS REQUESTED'                                 
CLWRKI   DC    PL4'0',CL20'WRKR ENQS ISSUED'                                    
CLWRKW   DC    PL4'0',CL20'WRKR ENQS WAITED'                                    
CLWRKF   DC    PL4'0',CL20'WRKR ENQS FAILED'                                    
CLWRKD   DC    PL4'0',CL20'WRKR DEQS ISSUED'                                    
*                                                                               
CLCTLR   DC    PL4'0',CL20'CTRL ENQS REQUESTED'                                 
CLCTLI   DC    PL4'0',CL20'CTRL ENQS ISSUED'                                    
CLCTLW   DC    PL4'0',CL20'CTRL ENQS WAITED'                                    
CLCTLF   DC    PL4'0',CL20'CTRL ENQS FAILED'                                    
CLCTLD   DC    PL4'0',CL20'CTRL DEQS ISSUED'                                    
*                                                                               
CPENQR   DC    PL4'0',CL20'PHYS ENQS REQUESTED'                                 
CPENQI   DC    PL4'0',CL20'PHYS ENQS ISSUED'                                    
CPENQW   DC    PL4'0',CL20'PHYS ENQS WAITED'                                    
CPENQF   DC    PL4'0',CL20'PHYS ENQS FAILED'                                    
CPENQE   DC    PL4'0',CL20'PHYS ENQS DISKERROR'                                 
CPENQD   DC    PL4'0',CL20'PHYS DEQS ISSUED'                                    
*                                                                               
CLMEZR   DC    PL4'0',CL20'MEDZ ENQS REQUESTED'                                 
CLMEZI   DC    PL4'0',CL20'MEDZ ENQS ISSUED'                                    
CLMEZW   DC    PL4'0',CL20'MEDZ ENQS WAITED'                                    
CLMEZF   DC    PL4'0',CL20'MEDZ ENQS FAILED'                                    
CLMEZD   DC    PL4'0',CL20'MEDZ DEQS ISSUED'                                    
*                                                                               
CLWKFR   DC    PL4'0',CL20'WRKF ENQS REQUESTED'                                 
CLWKFI   DC    PL4'0',CL20'WRKF ENQS ISSUED'                                    
CLWKFW   DC    PL4'0',CL20'WRKF ENQS WAITED'                                    
CLWKFF   DC    PL4'0',CL20'WRKF ENQS FAILED'                                    
CLWKFD   DC    PL4'0',CL20'WRKF DEQS ISSUED'                                    
*                                                                               
         DC    4X'FF',CL20' '                                                   
*                                                                               
CLMSCR   DC    PL4'0',CL20'MISC ENQS REQUESTED'                                 
CLMSCI   DC    PL4'0',CL20'MISC ENQS ISSUED'                                    
CLMSCW   DC    PL4'0',CL20'MISC ENQS WAITED'                                    
CLMSCF   DC    PL4'0',CL20'MISC ENQS FAILED'                                    
CLMSCD   DC    PL4'0',CL20'MISC DEQS ISSUED'                                    
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO INITIALISE CONSTANTS FOR THIS CPU/ADR                    *         
* R1 POINTS TO MAIN ROUTINES COMMON STORAGE                           *         
***********************************************************************         
INIT     DS    0D                                                               
         NTR1  LABEL=NO                                                         
         LR    RB,RF                                                            
         USING INIT,RB                                                          
         LR    RA,R1                                                            
         USING RETADDRS,RA                                                      
         MVI   INITFLAG,C'N'                                                    
         MVI   RSLT,0                                                           
         MVI   IOERR,0                                                          
*                                                                               
INIT1    XC    PARM,PARM           OPEN ENQUEUE FILE                            
         MVC   P1,VDAOPEN                                                       
         MVC   P4,VFILE                                                         
         CLI   OPENFLAG,C'Y'                                                    
         BE    INIT2                                                            
         LA    R1,PARM                                                          
         L     RF,VDADDS                                                        
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   INITE1                                                           
         MVI   OPENFLAG,C'Y'                                                    
*                                                                               
INIT1A   MVC   P1,VDACPUID         READ RECORD ZERO                             
         BASR  RE,RF               P3+2(2)=CPUID/DSPACEID                       
         MVC   THISSTMP,P3+2                                                    
         L     RE,VFILE            SAVE STAMP AT DTF-8                          
         AHI   RE,-8                                                            
         MVC   0(2,RE),THISSTMP                                                 
         L     RE,VSSB                                                          
         CLI   SSOXTND-SSOOFF(RE),X'FF'                                         
         BNE   *+10                                                             
         MVC   DSPACEV,SSODSPAC-SSOOFF(RE)                                      
         MVI   INIFLAGS,0                                                       
         CLI   P3+3,C'C'                                                        
         BNE   *+8                                                              
         MVI   PRODTEST,C'C'       SET CSC ENQUEUE FILE                         
         CLI   P3+3,C'Q'                                                        
         BNE   *+8                                                              
         MVI   PRODTEST,C'Q'       SET FQA ENQUEUE FILE                         
*NOP*    CLI   P3+3,C'R'                                                        
*NOP*    BNE   *+8                                                              
*NOP*    MVI   PRODTEST,C'R'       SET REP ENQUEUE FILE                         
         CLI   P3+3,C'T'                                                        
         BNE   *+8                                                              
         MVI   PRODTEST,C'T'       SET TEST ENQUEUE FILE                        
*                                                                               
INIT1B   TM    P3+1,X'80'          TEST IF CPUID MATCHES                        
         B     INIT1C              *NOP* BZ CPUID NOT IMPORTANT                 
         MVC   INIMSG1+12(2),THISSTMP                                           
         LA    R6,INIMSG1L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'01'      DDSQDQ STAMP DONT MATCH CPUID                
*                                                                               
INIT1C   CLI   DSPACEV,C' '        TEST DSPACE=CARD MATCHES STAMP               
         BNH   INIT1E                                                           
         CLC   DSPACEV,THISSTMP+1                                               
         BE    INIT1E                                                           
         MVC   INIMSG2+12(2),THISSTMP                                           
         MVC   INIMSG2+39(1),DSPACEV                                            
         LA    R6,INIMSG2L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'02'      DDSQDQ STAMP DONT MATCH DSPACE=X             
*                                                                               
INIT1E   ICM   RF,15,=V(PRTQSTMP)  SET ENQUEUE FILE STAMP IN PRTQ               
         B     INIT1F              *NOP* BZ DONE BY DMENQDEQ                    
         AHI   RF,-2                                                            
         MVC   0(2,RF),THISSTMP                                                 
         AHI   RF,2                                                             
         OC    0(2,RF),0(RF)       TEST IF PRTQ STAMP SAVED                     
         BZ    INIT1F                                                           
         CLC   0(2,RF),THISSTMP    TEST IF STAMPS AGREE                         
         BE    INIT1F                                                           
         MVC   INIMSG3+12(2),THISSTMP                                           
         MVC   INIMSG3+32(4),=C'PRTQ'                                           
         MVC   INIMSG3+37(2),0(RF)                                              
         LA    R6,INIMSG3L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'08'      DDSQDQ STAMP DONT MATCH PRTQ                 
*                                                                               
INIT1F   ICM   RF,15,=V(WRKFSTMP)  SET ENQUEUE FILE STAMP IN WRKF               
         B     INIT1G              *NOP* BZ DONE BY DMENQDEQ                    
         AHI   RF,-2                                                            
         MVC   0(2,RF),THISSTMP                                                 
         AHI   RF,2                                                             
         OC    0(2,RF),0(RF)       TEST IF WRKF STAMP SAVED                     
         BZ    INIT1G                                                           
         CLC   0(2,RF),THISSTMP    TEST IF STAMPS AGREE                         
         BE    INIT1G                                                           
         MVC   INIMSG3+12(2),THISSTMP                                           
         MVC   INIMSG3+32(4),=C'WRKF'                                           
         MVC   INIMSG3+37(2),0(RF)                                              
         LA    R6,INIMSG3L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'08'      DDSQDQ STAMP DONT MATCH WRKF                 
*                                                                               
INIT1G   ICM   RF,15,=V(CTRLSTMP)  SET ENQUEUE FILE STAMP IN CTRL               
         BZ    INIT1H                                                           
         AHI   RF,-2                                                            
         MVC   0(2,RF),THISSTMP                                                 
         AHI   RF,2                                                             
         OC    0(2,RF),0(RF)       TEST IF CTRL STAMP SAVED                     
         BZ    INIT1H                                                           
         CLC   0(2,RF),THISSTMP    TEST IF STAMPS AGREE                         
         BE    INIT1H                                                           
         MVC   INIMSG3+12(2),THISSTMP                                           
         MVC   INIMSG3+32(4),=C'CTRL'                                           
         MVC   INIMSG3+37(2),0(RF)                                              
         LA    R6,INIMSG3L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'08'      DDSQDQ STAMP DONT MATCH CTRL                 
*                                                                               
INIT1H   CLI   INIFLAGS,0          TEST ANY ERRORS                              
         BE    INIT2                                                            
         OI    SMFFLAG,SMFFINI+SMFFOUT                                          
         MVI   SMFTRYS+1,4         SET INIT ERROR TYPE                          
*                                                                               
INIT2    MVC   P1,VDATRNS          GET DISK ADDR FIRST REC                      
         XC    P3,P3                                                            
         LA    R0,=X'00010100'                                                  
         ST    R0,P5                                                            
         LA    R0,ESRCH                                                         
         ST    R0,P6                                                            
         LA    R1,PARM                                                          
         L     RF,VDADDS                                                        
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   INITE2                                                           
         MVC   IORCOUNT(5),ESRCH   SET COUNT FIELD                              
         LH    R0,KEYLEN                                                        
         STC   R0,IORCOUNT+5                                                    
         LH    R0,DATALEN                                                       
         STH   R0,IORCOUNT+6                                                    
         L     RF,VFILE                                                         
         MVC   ESEEK-1(8),DTFSEEK-DTF(RF) SAVE MBBCCHHR                         
*                                                                               
INIT3    LA    R0,ESEEK            INITIALISE ADD CCW CHAIN                     
         STCM  R0,7,CCWASEEK+1                                                  
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWASIE+1                                                   
         LA    R0,CCWATIC-8                                                     
         STCM  R0,7,CCWATIC+1                                                   
         LA    R0,IORCOUNT                                                      
         STCM  R0,7,CCWAWCK+1                                                   
         LA    R0,8                                                             
         AH    R0,KEYLEN                                                        
         AH    R0,DATALEN                                                       
         STH   R0,CCWAWCK+6                                                     
*                                                                               
INIT4    LA    R0,ESEEK            INITIALISE DEQUEUE CHAIN                     
         STCM  R0,7,CCWDSEEK+1                                                  
         LA    R0,ESECTOR                                                       
         STCM  R0,7,CCWDSET+1                                                   
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWDSIE+1                                                   
         LA    R0,CCWDTIC-8                                                     
         STCM  R0,7,CCWDTIC+1                                                   
         LA    R0,IORKEY                                                        
         STCM  R0,7,CCWDWKD+1                                                   
         LH    R0,KEYLEN                                                        
         AH    R0,DATALEN                                                       
         STH   R0,CCWDWKD+6                                                     
*                                                                               
INIT5    LA    R0,ESEEK            INITIALISE ENQUEUE CHAIN                     
         STCM  R0,7,CCWESEEK+1                                                  
         LA    R0,ESECTOR                                                       
         STCM  R0,7,CCWESET+1                                                   
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWESIE1+1                                                  
         LA    R0,CCWETIC1-8                                                    
         STCM  R0,7,CCWETIC1+1                                                  
         LA    R0,IOKEY                                                         
         STCM  R0,7,CCWERKD1+1                                                  
         LH    R0,KEYLEN                                                        
         STH   R0,CCWERKD1+6                                                    
         LA    R0,XCKEY                                                         
         STCM  R0,7,CCWESKE2+1                                                  
         LH    R0,KEYLEN                                                        
         STH   R0,CCWESKE2+6                                                    
         LA    R0,CCWETIC2-8                                                    
         STCM  R0,7,CCWETIC2+1                                                  
         LA    R0,IORDATA                                                       
         STCM  R0,7,CCWERD2+1                                                   
         LH    R0,DATALEN                                                       
         STH   R0,CCWERD2+6                                                     
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWESIE3+1                                                  
         LA    R0,CCWETIC3-8                                                    
         STCM  R0,7,CCWETIC3+1                                                  
         LA    R0,IORKEY                                                        
         STCM  R0,7,CCWEWKD3+1                                                  
         LH    R0,KEYLEN                                                        
         AH    R0,DATALEN                                                       
         STH   R0,CCWEWKD3+6                                                    
*                                                                               
INIT6    LA    R0,ESEEK            INITIALISE READ CCW CHAIN                    
         STCM  R0,7,CCWRSEEK+1                                                  
         LA    R0,ESECTOR                                                       
         STCM  R0,7,CCWRSET+1                                                   
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWRSIE+1                                                   
         LA    R0,CCWRTIC-8                                                     
         STCM  R0,7,CCWRTIC+1                                                   
         LA    R0,IORKEY                                                        
         STCM  R0,7,CCWRRKD+1                                                   
         LH    R0,KEYLEN                                                        
         AH    R0,DATALEN                                                       
         STH   R0,CCWRRKD+6                                                     
*                                                                               
INIT7    MVC   P1,VDATRNS          GET DISK ADDR OF CTRL RECORD                 
         LA    R0,=X'00020100'                                                  
         ST    R0,P5                                                            
         LA    R0,CSRCH                                                         
         ST    R0,P6                                                            
         LA    R1,PARM                                                          
         L     RF,VDADDS                                                        
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   INITE2                                                           
         MVC   CRCOUNT(5),CSRCH    SET COUNT FIELD                              
         LA    R0,CRLENEQU                                                      
         STH   R0,CRCOUNT+6                                                     
         L     RF,VFILE                                                         
         MVC   CSEEK-1(8),DTFSEEK-DTF(RF) SAVE MBBCCHHR                         
*                                                                               
INIT8    LA    R0,CSEEK            INITIALISE CTRL ADD CCW CHAIN                
         STCM  R0,7,CCCASEEK+1                                                  
         LA    R0,CSRCH                                                         
         STCM  R0,7,CCCASIE+1                                                   
         LA    R0,CCCATIC-8                                                     
         STCM  R0,7,CCCATIC+1                                                   
         L     R0,=A(CRCOUNT)                                                   
         STCM  R0,7,CCCAWCK+1                                                   
         LA    R0,8+CRLENEQU                                                    
         STH   R0,CCCAWCK+6                                                     
*                                                                               
INIT9    LA    R0,CSEEK            INITIALISE CTRL READ CCW CHAIN               
         STCM  R0,7,CCCRSEEK+1                                                  
         LA    R0,CSECTOR                                                       
         STCM  R0,7,CCCRSET+1                                                   
         LA    R0,CSRCH                                                         
         STCM  R0,7,CCCRSIE+1                                                   
         LA    R0,CCCRTIC-8                                                     
         STCM  R0,7,CCCRTIC+1                                                   
         L     R0,=A(CRDATA)                                                    
         STCM  R0,7,CCCRRD+1                                                    
         LA    R0,CRLENEQU                                                      
         STH   R0,CCCRRD+6                                                      
*                                                                               
INIT10   LA    R0,CSEEK            INITIALISE CTRL WRITE CCW CHAIN              
         STCM  R0,7,CCCWSEEK+1                                                  
         LA    R0,CSECTOR                                                       
         STCM  R0,7,CCCWSET+1                                                   
         LA    R0,CSRCH                                                         
         STCM  R0,7,CCCWSIE+1                                                   
         LA    R0,CCCWTIC-8                                                     
         STCM  R0,7,CCCWTIC+1                                                   
         L     R0,=A(CRDATA)                                                    
         STCM  R0,7,CCCWWD+1                                                    
         LA    R0,CRLENEQU                                                      
         STH   R0,CCCWWD+6                                                      
*                                                                               
INIT11   MVC   P1,VDATRNS          GET DISK ADDR OF MEDZ RECORD                 
         LA    R0,=X'00030100'                                                  
         ST    R0,P5                                                            
         LA    R0,MSRCH                                                         
         ST    R0,P6                                                            
         LA    R1,PARM                                                          
         L     RF,VDADDS                                                        
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BNZ   INITE2                                                           
         MVC   MRCOUNT(5),MSRCH    SET COUNT FIELD                              
         LA    R0,MRLENEQU                                                      
         STH   R0,MRCOUNT+6                                                     
         L     RF,VFILE                                                         
         MVC   MSEEK-1(8),DTFSEEK-DTF(RF) SAVE MBBCCHHR                         
*                                                                               
INIT12   LA    R0,MSEEK            INITIALISE MEDZ ADD CCW CHAIN                
         STCM  R0,7,CCMASEEK+1                                                  
         LA    R0,MSRCH                                                         
         STCM  R0,7,CCMASIE+1                                                   
         LA    R0,CCMATIC-8                                                     
         STCM  R0,7,CCMATIC+1                                                   
         L     R0,=A(MRCOUNT)                                                   
         STCM  R0,7,CCMAWCK+1                                                   
         LA    R0,8+MRLENEQU                                                    
         STH   R0,CCMAWCK+6                                                     
*                                                                               
INIT13   LA    R0,MSEEK            INITIALISE MEDZ READ CCW CHAIN               
         STCM  R0,7,CCMRSEEK+1                                                  
         LA    R0,MSECTOR                                                       
         STCM  R0,7,CCMRSET+1                                                   
         LA    R0,MSRCH                                                         
         STCM  R0,7,CCMRSIE+1                                                   
         LA    R0,CCMRTIC-8                                                     
         STCM  R0,7,CCMRTIC+1                                                   
         L     R0,=A(MRDATA)                                                    
         STCM  R0,7,CCMRRD+1                                                    
         LA    R0,MRLENEQU                                                      
         STH   R0,CCMRRD+6                                                      
*                                                                               
INIT14   LA    R0,MSEEK            INITIALISE MEDZ WRITE CCW CHAIN              
         STCM  R0,7,CCMWSEEK+1                                                  
         LA    R0,MSECTOR                                                       
         STCM  R0,7,CCMWSET+1                                                   
         LA    R0,MSRCH                                                         
         STCM  R0,7,CCMWSIE+1                                                   
         LA    R0,CCMWTIC-8                                                     
         STCM  R0,7,CCMWTIC+1                                                   
         L     R0,=A(MRDATA)                                                    
         STCM  R0,7,CCMWWD+1                                                    
         LA    R0,MRLENEQU                                                      
         STH   R0,CCMWWD+6                                                      
*                                                                               
         B     INITX                                                            
*                                                                               
INITE1   MVI   RSLT,1              CANT OPEN ENQUEUE FILE                       
         B     INITX                                                            
INITE2   MVI   RSLT,2              CANT GET DISK ADDR OF ENQUEUE FILE           
         B     INITX                                                            
INITE3   MVI   RSLT,3              DISK ERROR ON ENQ FILE                       
         B     INITX                                                            
*                                                                               
INITX    OI    SMFFLAG,SMFFINI     SET INITIALIZED FLAG IN SMFFREC              
         SR    R0,R0                                                            
         ICM   R0,1,RSLT                                                        
         BZ    *+12                                                             
         OI    SMFFLAG,SMFFOUT     SET OUTPUT SMFREC FLAG                       
         STH   R0,SMFTRYS          SET INIT ERROR TYPE                          
         LTR   R0,R0               EXIT WITH CC EQL IF ALL OK                   
         XIT1                                                                   
*                                                                               
         LTORG                                                                  
*                                                                               
INIMSG1L DC    H'54'                                                            
INIMSG1  DC    CL54'QDCRR#S QDC=YY STAMP DONT MATCH CPUID'                      
INIMSG2L DC    H'54'                                                            
INIMSG2  DC    CL54'QDCRR#S QDC=YY STAMP DONT MATCH DSPACE=Z '                  
INIMSG3L DC    H'54'                                                            
INIMSG3  DC    CL54'QDCRR#S QDC=YY STAMP DONT MATCH XXXX=ZZ'                    
*                                                                               
THISSTMP DC    CL2' '              DDSQDQ STAMP CL1=CPUID,CL1=DSPACE            
DSPACEV  DC    CL1' '              DSPACE=CARD VALUE                            
INIFLAGS DC    XL1'00'                                                          
         DC    XL1'00'                                                          
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO INITIALISE CCWS                                          *         
***********************************************************************         
         USING *,RF                                                             
ICCWA    MVC   CCWS(CCWALEN),CCWA  INITIALISE ADD CCW CHAIN                     
         MVC   SEEK-1(8),ESEEK-1                                                
         MVC   SECTOR,ESECTOR                                                   
         LA    R1,CCWS                                                          
         USING CCWA,R1                                                          
         LA    R0,SEEK                                                          
         STCM  R0,7,CCWASEEK+1                                                  
         LA    R0,ESRCH                                                         
         STCM  R0,7,CCWASIE+1                                                   
         LA    R0,CCWATIC-8                                                     
         STCM  R0,7,CCWATIC+1                                                   
         LA    R0,IORCOUNT                                                      
         STCM  R0,7,CCWAWCK+1                                                   
         LA    R0,8                                                             
         AH    R0,KEYLEN                                                        
         AH    R0,DATALEN                                                       
         STH   R0,CCWAWCK+6                                                     
         BR    R9                                                               
         DROP  1                                                                
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PROCESS CONTROL SYSTEM WHEN ACTUAL ENQUEUE HAS BEEN DONE *         
* CONTROL SYSTEM RECORD HAS BEEN READ BY CALLER                       *         
* R1 POINTS TO MAIN ROUTINES COMMON STORAGE                           *         
***********************************************************************         
ECTRL    DS    0D                                                               
         NTR1  LABEL=NO                                                         
         LR    RB,RF                                                            
         USING ECTRL,RB                                                         
         LR    RA,R1                                                            
         USING RETADDRS,RA                                                      
         MVI   MODEC,0                                                          
*                                                                               
         ICM   R4,15,=V(SYSAFLES)  EXIT IF NO CONTROL SYSTEM FILES              
         BZ    ECTX                                                             
         ICM   R4,15,0(R4)                                                      
         CLI   3(R4),0             EXIT IF NO FILES                             
         BE    ECTX                                                             
         TM    1(R4),X'01'         EXIT IF NOT PROTECTED VIA ENQ/DEQ            
         BZ    ECTX                                                             
         L     R5,=A(CRDATA)       R5=A(CONTROL SYSTEM RECORD)                  
         USING SYRD,R5                                                          
*                                                                               
ECT1     CLC   SYRKEY,CPU          NOTHING TO DO IF ITS MY RECORD               
         BE    ECTX                                                             
         OC    SYRKEY,SYRKEY       INITIALISE IF EMPTY RECORD                   
         BE    ECTI                                                             
         CLC   DATE,SYRDATE        INITIALISE IF NOT TODAYS RECORD              
         BNE   ECTI                                                             
         L     RF,TIME             INITIALISE IF OLD RECORD                     
         S     RF,SYRTIME                                                       
         BM    ECTI                                                             
         C     RF,=F'3600'                                                      
         BNH   ECTS                SYNCHRONISE IF VALID ENQ DATA                
                                                                                
ECTI     OI    MODEC,X'01'         INITIALISE MODE                              
         XC    VRCVRDTF,VRCVRDTF                                                
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(CRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(CRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
*                                                                               
ECTI1    L     R8,4(R4)            R8=A(FILE DTF)                               
         TM    36(R8),X'C0'        IGNORE READONLY/NOP FILES                    
         BNZ   ECTI5                                                            
         TM    36(R8),X'20'        IGNORE NON OPENED FILES                      
         BZ    ECTI5                                                            
         XC    P1(24),P1           BUILD DADDS/ISDDS PARAM LIST                 
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
*                                                                               
ECTI2    TM    0(R4),X'01'         IS FILE                                      
         BZ    ECTI3                                                            
         MVC   P1,=V(ISFNDEOF)                                                  
         L     RF,=V(ISDDS)                                                     
         B     ECTI4                                                            
*                                                                               
ECTI3    TM    0(R4),X'40'         DA FILE                                      
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         MVC   P6,DNEXT-DTF(R8)                                                 
         XC    P6,P6               BUT LETS START AT THE BEGINNING              
         MVC   P1,=V(FNDEOF)                                                    
         L     RF,=V(DADDS)                                                     
         B     ECTI4                                                            
*                                                                               
ECTI4    OC    P1,P1               SEARCH FOR END OF FILE                       
         BZ    ECTI5                                                            
         LA    R1,P1                                                            
         BASR  RE,RF                                                            
*                                                                               
ECTI5    LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         BCT   R0,ECTI1                                                         
         B     ECTR                                                             
                                                                                
ECTS     XC    VRCVRDTF,VRCVRDTF   SYNCHRONISE CONTROL SYS FILES                
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(CRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(CRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
         LA    R5,SYRFIL           R5=A(NEXT FILE IN RECORD)                    
         USING SYRFIL,R5                                                        
*                                                                               
ECTS1    L     R8,4(R4)            R8=A(FILE DTF)                               
         CLC   SYRFNO,3(R4)        TEST IF FILE NUMS AGREE                      
         BE    *+16                YES                                          
         ICM   R4,15,=V(SYSAFLES)  NO INITITIALIZE FROM START OF LIST           
         ICM   R4,15,0(R4)                                                      
         B     ECTI                                                             
         TM    36(R8),X'C0'        IGNORE MY READONLY/NOP FILES                 
         BNZ   ECTS7                                                            
         TM    36(R8),X'02'        IGNORE MY NEVER OPENED FILES                 
         BZ    ECTS7                                                            
*NOP*    TM    SYRFL2,X'C0'        IGNORE HIS READONLY/NOP FILES                
*NOP*    BNZ   ECTS7                                                            
*NOP*    TM    SYRFL2,X'02'        IGNORE HIS NEVER OPENED FILES                
*NOP*    BZ    ECTS7                                                            
*                                                                               
ECTS2    CLC   SYRFDATE,DATE       FILE UPDATIVE IN HIS AND MY SYSTEM           
         BNE   ECTS3                                                            
         L     RF,TIME                                                          
         S     RF,SYRFTIME                                                      
         BM    ECTS3                                                            
         C     RF,=F'3600'         INIT IF HIS ENTRY TOO OLD                    
         BNH   ECTS5                                                            
*                                                                               
ECTS3    TM    0(R4),X'01'         INITIALISE MY IS FILE                        
         BZ    ECTS4                                                            
         XC    P1(24),P1                                                        
         ICM   R1,15,=V(ISFNDEOF)                                               
         BZ    ECTS7                                                            
         ST    R1,P1                                                            
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         L     RF,=V(ISDDS)                                                     
         LA    R1,P1                                                            
         BASR  RE,RF               SEARCH FOR EOF                               
         B     ECTS7                                                            
*                                                                               
ECTS4    TM    0(R4),X'40'         INITIALISE MY DA FILE                        
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         XC    P1(24),P1                                                        
         ICM   R1,15,=V(FNDEOF)                                                 
         BZ    ECTS7                                                            
         ST    R1,P1                                                            
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DNEXT-DTF(R8)                                                 
         XC    P6,P6               BUT LETS START AT THE BEGINNING              
         L     RF,=V(DADDS)                                                     
         LA    R1,P1                                                            
         BASR  RE,RF               SEARCH FOR EOF                               
         B     ECTS7                                                            
*                                                                               
ECTS5    TM    0(R4),X'01'         SYNC MY IS FILE                              
         BZ    ECTS6                                                            
         USING ISDTF,R8                                                         
         CLC   ISOVLAST,SYRFE1                                                  
         BNH   *+12                                                             
         OI    MODEC,X'80'         SET SYNC ERROR AND REDO EOF                  
         B     ECTS3                                                            
         MVC   ISOVLAST,SYRFE1                                                  
         MVC   ISPDLAST,SYRFE2                                                  
         B     ECTS7                                                            
*                                                                               
ECTS6    TM    0(R4),X'40'         SYNC MY DA FILE                              
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         USING DTFPHD,R8                                                        
         CLC   DNEXT,SYRFE1                                                     
         BNH   *+12                                                             
         OI    MODEC,X'80'         SET SYNC ERROR AND REDO EOF                  
         B     ECTS4                                                            
         MVC   DNEXT,SYRFE1                                                     
         MVC   DCOUNT,SYRFE2                                                    
         B     ECTS7                                                            
*                                                                               
ECTS7    LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         LA    R5,L'SYRFIL(R5)     BUMP TO NEXT ENTRY IN RECORD                 
         BCT   R0,ECTS1                                                         
                                                                                
ECTR     ICM   R8,15,VRCVRDTF      POINT TO RECOVERY FILE                       
         BZ    ECTX                                                             
         USING DTFPHD,R8                                                        
         OC    DBLKSZ,DBLKSZ       TEST IF BLOCKED                              
         BZ    ECTX                NO                                           
         CLC   DNEXT,=X'00010000'  TEST IF EMPTY                                
         BNH   ECTX                YES                                          
         XC    P1(24),P1           NO MUST READ IN LAST BLOCK                   
         MVC   P1,=V(RDID)                                                      
         MVC   P2,DBLK                                                          
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DNEXT                                                         
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BZ    ECTX                                                             
         OI    MODEC,X'40'         SET CANT READ RECOVERY LAST REC              
*                                                                               
ECTX     XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PROCESS CONTROL SYSTEM WHEN ACTUAL DEQUEUE HAS BEEN DONE *         
* CALLER WILL WRITE BACK CONTROL SYSTEM RECORD AFTER I HAVE BUILT IT  *         
* R1 POINTS TO MAIN ROUTINES COMMON STORAGE                           *         
***********************************************************************         
DCTRL    DS    0D                                                               
         NTR1  LABEL=NO                                                         
         LR    RB,RF                                                            
         USING DCTRL,RB                                                         
         LR    RA,R1                                                            
         USING RETADDRS,RA                                                      
         MVI   MODEC,0             SET MODE UPDATE                              
*                                                                               
DCT      ICM   R4,15,=V(SYSAFLES)  EXIT IF NO CONTROL SYSTEM FILES              
         BZ    DCTX                                                             
         ICM   R4,15,0(R4)                                                      
         CLI   3(R4),0             EXIT IF NO FILES                             
         BE    DCTX                                                             
         TM    1(R4),X'01'         EXIT IF NOT PROTECTED VIA ENQ/DEQ            
         BZ    DCTX                                                             
         L     R5,=A(CRDATA)       R5=A(CONTROL SYSTEM RECORD)                  
         USING SYRD,R5                                                          
         MVC   SYRKEY,CPU          SET MY UNIQUE ID IN RECORD                   
         MVC   SYRJOB,JOB          SET JOB ID                                   
         MVC   SYRDATE,DATE        SET DATE                                     
         MVC   SYRTIME,TIME        SET TIME                                     
*                                                                               
         XC    VRCVRDTF,VRCVRDTF   CLEAR A(RECOVERY FILE DTF)                   
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(CRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(CRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
         LA    R5,SYRFIL           R5=A(NEXT FILE IN RECORD)                    
         USING SYRFIL,R5                                                        
*                                                                               
DCT1     L     R8,4(R4)            R8=A(FILE DTF)                               
         TM    MODEC,X'01'                                                      
         BZ    *+14                                                             
         XC    SYRFIL,SYRFIL       INITIALISE ENTRY IF CREATE MODE              
         B     DCT2                                                             
         CLC   SYRFNO,3(R4)        TEST IF FILE NUMS AGREE                      
         BE    *+12                YES                                          
         OI    MODEC,X'01'         NO SET CREATE MODE AND START AGAIN           
         B     DCT                                                              
         NI    SYRFSTAT,X'7F'      SET NOT UPDATED THIS TIME                    
         TM    36(R8),X'C0'        IGNORE READONLY/NOP FILES                    
         BNZ   DCT5                                                             
         TM    36(R8),X'02'        IGNORE FILES NEVER OPENED                    
         BZ    DCT5                                                             
*                                                                               
DCT2     MVC   SYRFDATE,DATE       SET DATE/TIME ENTRY UPDATED                  
         MVC   SYRFTIME,TIME                                                    
         OI    SYRFSTAT,X'80'      SET UPDATE THIS TIME FLAG                    
         MVC   SYRFNO,3(R4)        SET FILE NUMBER                              
         MVC   SYRFL1,0(R4)        SET FLAGS FROM SYSFLES ENTRY                 
         MVC   SYRFL2,36(R8)       SET FLAGS FROM DTF ENTRY                     
         MVC   SYRFE1X,SYRFE1      SET PREV EOF ADDR 1                          
         MVC   SYRFE2X,SYRFE2      SET PREV EOF ADDR 2                          
*                                                                               
DCT3     TM    0(R4),X'01'         IS FILE                                      
         BZ    DCT4                                                             
         USING ISDTF,R8                                                         
         MVC   SYRFE1,ISOVLAST                                                  
         MVC   SYRFE2,ISPDLAST                                                  
         B     DCT5                                                             
*                                                                               
DCT4     TM    0(R4),X'40'         DA FILE                                      
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         USING DTFPHD,R8                                                        
         MVC   SYRFE1,DNEXT                                                     
         MVC   SYRFE2(2),DCOUNT                                                 
         B     DCT5                                                             
*                                                                               
DCT5     LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         LA    R5,L'SYRFIL(R5)     BUMP TO NEXT ENTRY IN RECORD                 
         BCT   R0,DCT1                                                          
         XC    SYRFIL,SYRFIL       SET END OF RECORD INFO                       
*                                                                               
DCTX     XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PROCESS MEDZ SYSTEM WHEN ACTUAL ENQUEUE HAS BEEN DONE    *         
* MEDZ SYSTEM RECORD HAS BEEN READ BY CALLER                          *         
* R1 POINTS TO MAIN ROUTINES COMMON STORAGE                           *         
***********************************************************************         
EMEDZ    DS    0D                                                               
         NTR1  LABEL=NO                                                         
         LR    RB,RF                                                            
         USING EMEDZ,RB                                                         
         LR    RA,R1                                                            
         USING RETADDRS,RA                                                      
         MVI   MODEC,0                                                          
*                                                                               
         ICM   R4,15,=V(SYS14FLS)  EXIT IF NO MEDZ SYSTEM FILES                 
         BZ    EMZX                                                             
         ICM   R4,15,0(R4)                                                      
         CLI   3(R4),0             EXIT IF NO FILES                             
         BE    EMZX                                                             
         TM    1(R4),X'01'         EXIT IF NOT PROTECTED VIA ENQ/DEQ            
         BZ    EMZX                                                             
         L     R5,=A(MRDATA)       R5=A(MEDZ SYSTEM RECORD)                     
         USING SYRD,R5                                                          
*                                                                               
EMZ1     CLC   SYRKEY,CPU          NOTHING TO DO IF ITS MY RECORD               
         BE    EMZX                                                             
         OC    SYRKEY,SYRKEY       INITIALISE IF EMPTY RECORD                   
         BE    EMZI                                                             
         CLC   DATE,SYRDATE        INITIALISE IF NOT TODAYS RECORD              
         BNE   EMZI                                                             
         L     RF,TIME             INITIALISE IF OLD RECORD                     
         S     RF,SYRTIME                                                       
         BM    EMZI                                                             
         C     RF,=F'3600'                                                      
         BNH   EMZS                SYNCHRONISE IF VALID ENQ DATA                
*                                                                               
EMZI     OI    MODEC,X'01'         INITIALISE MODE                              
         XC    VRCVRDTF,VRCVRDTF                                                
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(MRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(MRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
*                                                                               
EMZI1    L     R8,4(R4)            R8=A(FILE DTF)                               
         TM    36(R8),X'C0'        IGNORE READONLY/NOP FILES                    
         BNZ   EMZI5                                                            
         TM    36(R8),X'20'        IGNORE NON OPENED FILES                      
         BZ    EMZI5                                                            
         XC    P1(24),P1           BUILD DADDS/ISDDS PARAM LIST                 
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
*                                                                               
EMZI2    TM    0(R4),X'01'         IS FILE                                      
         BZ    EMZI3                                                            
         MVC   P1,=V(ISFNDEOF)                                                  
         L     RF,=V(ISDDS)                                                     
         B     EMZI4                                                            
*                                                                               
EMZI3    TM    0(R4),X'40'         DA FILE                                      
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         MVC   P6,DNEXT-DTF(R8)                                                 
         XC    P6,P6               BUT LETS START AT THE BEGINNING              
         MVC   P1,=V(FNDEOF)                                                    
         L     RF,=V(DADDS)                                                     
         B     EMZI4                                                            
*                                                                               
EMZI4    OC    P1,P1               SEARCH FOR END OF FILE                       
         BZ    EMZI5                                                            
         LA    R1,P1                                                            
         BASR  RE,RF                                                            
*                                                                               
EMZI5    LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         BCT   R0,EMZI1                                                         
         B     EMZR                                                             
*                                                                               
EMZS     XC    VRCVRDTF,VRCVRDTF   SYNCHRONISE MEDZ SYS FILES                   
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(MRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(MRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
         LA    R5,SYRFIL           R5=A(NEXT FILE IN RECORD)                    
         USING SYRFIL,R5                                                        
*                                                                               
EMZS1    L     R8,4(R4)            R8=A(FILE DTF)                               
         CLC   SYRFNO,3(R4)        TEST IF FILE NUMS AGREE                      
         BE    *+16                YES                                          
         ICM   R4,15,=V(SYS14FLS)  NO INITIALIZE FROM START OF LIST             
         ICM   R4,15,0(R4)                                                      
         B     EMZI                                                             
         TM    36(R8),X'C0'        IGNORE MY READONLY/NOP FILES                 
         BNZ   EMZS7                                                            
         TM    36(R8),X'02'        IGNORE MY NEVER OPENED FILES                 
         BZ    EMZS7                                                            
*NOP*    TM    SYRFL2,X'C0'        IGNORE HIS READONLY/NOP FILES                
*NOP*    BNZ   EMZS7                                                            
*NOP*    TM    SYRFL2,X'02'        IGNORE HIS NEVER OPENED FILES                
*NOP*    BZ    EMZS7                                                            
*                                                                               
EMZS2    CLC   SYRFDATE,DATE       FILE UPDATIVE IN HIS AND MY SYSTEM           
         BNE   EMZS3                                                            
         L     RF,TIME                                                          
         S     RF,SYRFTIME                                                      
         BM    EMZS3                                                            
         C     RF,=F'3600'         INIT IF HIS ENTRY TOO OLD                    
         BNH   EMZS5                                                            
*                                                                               
EMZS3    TM    0(R4),X'01'         INITIALISE MY IS FILE                        
         BZ    EMZS4                                                            
         XC    P1(24),P1                                                        
         ICM   R1,15,=V(ISFNDEOF)                                               
         BZ    EMZS7                                                            
         ST    R1,P1                                                            
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         L     RF,=V(ISDDS)                                                     
         LA    R1,P1                                                            
         BASR  RE,RF               SEARCH FOR EOF                               
         B     EMZS7                                                            
*                                                                               
EMZS4    TM    0(R4),X'40'         INITIALISE MY DA FILE                        
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         XC    P1(24),P1                                                        
         ICM   R1,15,=V(FNDEOF)                                                 
         BZ    EMZS7                                                            
         ST    R1,P1                                                            
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DNEXT-DTF(R8)                                                 
         XC    P6,P6               BUT LETS START AT THE BEGINNING              
         L     RF,=V(DADDS)                                                     
         LA    R1,P1                                                            
         BASR  RE,RF               SEARCH FOR EOF                               
         B     EMZS7                                                            
*                                                                               
EMZS5    TM    0(R4),X'01'         SYNC MY IS FILE                              
         BZ    EMZS6                                                            
         USING ISDTF,R8                                                         
         CLC   ISOVLAST,SYRFE1                                                  
         BNH   *+12                                                             
         OI    MODEC,X'80'         SET SYNC ERROR AND REDO EOF                  
         B     EMZS3                                                            
         MVC   ISOVLAST,SYRFE1                                                  
         MVC   ISPDLAST,SYRFE2                                                  
         B     EMZS7                                                            
*                                                                               
EMZS6    TM    0(R4),X'40'         SYNC MY DA FILE                              
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         USING DTFPHD,R8                                                        
         CLC   DNEXT,SYRFE1                                                     
         BNH   *+12                                                             
         OI    MODEC,X'80'         SET SYNC ERROR AND REDO EOF                  
         B     EMZS4                                                            
         MVC   DNEXT,SYRFE1                                                     
         MVC   DCOUNT,SYRFE2                                                    
         B     EMZS7                                                            
*                                                                               
EMZS7    LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         LA    R5,L'SYRFIL(R5)     BUMP TO NEXT ENTRY IN RECORD                 
         BCT   R0,EMZS1                                                         
*                                                                               
EMZR     ICM   R8,15,VRCVRDTF      POINT TO RECOVERY FILE                       
         BZ    EMZX                                                             
         USING DTFPHD,R8                                                        
         OC    DBLKSZ,DBLKSZ       TEST IF BLOCKED                              
         BZ    EMZX                NO                                           
         CLC   DNEXT,=X'00010000'  TEST IF EMPTY                                
         BNH   EMZX                YES                                          
         XC    P1(24),P1           NO MUST READ IN LAST BLOCK                   
         MVC   P1,=V(RDID)                                                      
         MVC   P2,DBLK                                                          
         ST    R8,P4                                                            
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,DNEXT                                                         
         LA    R1,P1                                                            
         L     RF,=V(DADDS)                                                     
         BASR  RE,RF                                                            
         OC    P3(2),P3                                                         
         BZ    EMZX                                                             
         OI    MODEC,X'40'         SET CANT READ RECOVERY LAST REC              
*                                                                               
EMZX     XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PROCESS MEDZ SYSTEM WHEN ACTUAL DEQUEUE HAS BEEN DONE    *         
* CALLER WILL WRITE BACK MEDZ SYSTEM RECORD AFTER I HAVE BUILT IT     *         
* R1 POINTS TO MAIN ROUTINES COMMON STORAGE                           *         
***********************************************************************         
DMEDZ    DS    0D                                                               
         NTR1  LABEL=NO                                                         
         LR    RB,RF                                                            
         USING DMEDZ,RB                                                         
         LR    RA,R1                                                            
         USING RETADDRS,RA                                                      
         MVI   MODEC,0             SET MODE UPDATE                              
*                                                                               
DMZ      ICM   R4,15,=V(SYS14FLS)  EXIT IF NO MEDZ SYSTEM FILES                 
         BZ    DMZX                                                             
         ICM   R4,15,0(R4)                                                      
         CLI   3(R4),0             EXIT IF NO FILES                             
         BE    DMZX                                                             
         TM    1(R4),X'01'         EXIT IF NOT PROTECTED VIA ENQ/DEQ            
         BZ    DMZX                                                             
         L     R5,=A(MRDATA)       R5=A(MEDZ SYSTEM RECORD)                     
         USING SYRD,R5                                                          
         MVC   SYRKEY,CPU          SET MY UNIQUE ID IN RECORD                   
         MVC   SYRJOB,JOB          SET JOB ID                                   
         MVC   SYRDATE,DATE        SET DATE                                     
         MVC   SYRTIME,TIME        SET TIME                                     
*                                                                               
         XC    VRCVRDTF,VRCVRDTF   CLEAR A(RECOVERY FILE DTF)                   
         SR    R0,R0                                                            
         IC    R0,3(R4)            R0=NUMBER OF FILES                           
         CH    R0,=AL2(MRFILMAX)                                                
         BNH   *+8                                                              
         LH    R0,=AL2(MRFILMAX)                                                
         LA    R4,4(R4)            R4=A(NEXT FILE IN LIST)                      
         LA    R5,SYRFIL           R5=A(NEXT FILE IN RECORD)                    
         USING SYRFIL,R5                                                        
*                                                                               
DMZ1     L     R8,4(R4)            R8=A(FILE DTF)                               
         TM    MODEC,X'01'                                                      
         BZ    *+14                                                             
         XC    SYRFIL,SYRFIL       INITIALISE ENTRY IF CREATE MODE              
         B     DMZ2                                                             
         CLC   SYRFNO,3(R4)        TEST IF FILE NUMS AGREE                      
         BE    *+12                YES                                          
         OI    MODEC,X'01'         NO SET CREATE MODE AND START AGAIN           
         B     DMZ                                                              
         NI    SYRFSTAT,X'7F'      SET NOT UPDATED THIS TIME                    
         TM    36(R8),X'C0'        IGNORE READONLY/NOP FILES                    
         BNZ   DMZ5                                                             
         TM    36(R8),X'02'        IGNORE FILES NEVER OPENED                    
         BZ    DMZ5                                                             
*                                                                               
DMZ2     MVC   SYRFDATE,DATE       SET DATE/TIME ENTRY UPDATED                  
         MVC   SYRFTIME,TIME                                                    
         OI    SYRFSTAT,X'80'      SET UPDATE THIS TIME FLAG                    
         MVC   SYRFNO,3(R4)        SET FILE NUMBER                              
         MVC   SYRFL1,0(R4)        SET FLAGS FROM SYSFLES ENTRY                 
         MVC   SYRFL2,36(R8)       SET FLAGS FROM DTF ENTRY                     
         MVC   SYRFE1X,SYRFE1      SET PREV EOF ADDR 1                          
         MVC   SYRFE2X,SYRFE2      SET PREV EOF ADDR 2                          
*                                                                               
DMZ3     TM    0(R4),X'01'         IS FILE                                      
         BZ    DMZ4                                                             
         USING ISDTF,R8                                                         
         MVC   SYRFE1,ISOVLAST                                                  
         MVC   SYRFE2,ISPDLAST                                                  
         B     DMZ5                                                             
*                                                                               
DMZ4     TM    0(R4),X'40'         DA FILE                                      
         BZ    *+8                                                              
         ST    R8,VRCVRDTF         SAVE A(RECOVERY FILE DTF)                    
         USING DTFPHD,R8                                                        
         MVC   SYRFE1,DNEXT                                                     
         MVC   SYRFE2(2),DCOUNT                                                 
         B     DMZ5                                                             
*                                                                               
DMZ5     LA    R4,8(R4)            BUMP TO NEXT FILE IN LIST                    
         LA    R5,L'SYRFIL(R5)     BUMP TO NEXT ENTRY IN RECORD                 
         BCT   R0,DMZ1                                                          
         XC    SYRFIL,SYRFIL       SET END OF RECORD INFO                       
*                                                                               
DMZX     XIT1                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* LOCAL WORKING STORAGE                                               *         
***********************************************************************         
WRKD     DSECT                                                                  
ECB      DS    D                                                                
IOB      DS    XL40                                                             
         DS    XL1                 M                                            
SEEK     DS    XL2                 BB                                           
SRCH     DS    XL5                 CCHHR                                        
*                                                                               
SECTOR   DS    XL1                 SECTOR NUMBER 3380 (06 FOR 3390)             
         DS    XL7                                                              
CCWS     DS    12D                                                              
DUB      DS    D                                                                
FULL     DS    F                                                                
FULL1    DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    C                                                                
ACTN     DS    C                                                                
*                                                                               
MVSTCBID DS    X                                                                
MVSTCBA  DS    AL3                                                              
DATE     DS    F                                                                
TIME     DS    F                                                                
TIMEMILI DS    F                                                                
SVFTIM   DS    F                                                                
SVLTIM   DS    F                                                                
SVLFTIM  DS    F                                                                
SVLLTIM  DS    F                                                                
SAVER1   DS    F                                                                
SAVER    DS    F                                                                
SAVER9   DS    F                                                                
SAVERE   DS    F                                                                
SAVER2   DS    F                                                                
SAVER3   DS    F                                                                
VENQFIL  DS    A                                                                
VRCVRDTF DS    A                                                                
RELO     DS    A                                                                
*                                                                               
PRTQINFO DS    0XL12                                                            
PRTQINT  DS    X                                                                
PRTQCHR  DS    X                                                                
         DS    XL2                                                              
PRTQEXT  DS    X                                                                
PRTQDTF  DS    AL3                                                              
PRTQSSBA DS    A                                                                
*                                                                               
WRKFINFO DS    0XL12                                                            
WRKFINT  DS    X                                                                
WRKFCHR  DS    X                                                                
         DS    XL2                                                              
WRKFEXT  DS    X                                                                
WRKFDTF  DS    AL3                                                              
WRKFSSBA DS    A                                                                
*                                                                               
         DS    0F                                                               
PARM     DS    0CL24                                                            
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
DMCB     DS    6F                                                               
*                                                                               
SYSMAJ   DS    CL8                                                              
SYSMIN   DS    CL8                                                              
*                                                                               
RSRC0    DS    CL8                                                              
RSRC1    DS    CL8                                                              
RSRC2    DS    CL8                                                              
*                                                                               
SMFREC   DS    0XL40                                                            
SMFRECLN DS    XL2                 RECORD LENGTH                                
SMFATIME DS    XL4                 ACTUAL TIME IN MILLISECS                     
SMFCPU   DS    CL4                 CPU ID                                       
SMFASID  DS    XL2                 ADDRESS SPACE ID                             
SMFTASK  DS    X                   TASK ID OR ZERO IF OFFLINE                   
SMFFLAG  DS    X                   FLAG BYTE                                    
SMFFMVSW EQU   X'80'               WAITED ON MVS ENQUEUE                        
SMFFDDSW EQU   X'40'               WAITED ON DDS ENQUEUE                        
SMFFDIFF EQU   X'10'               DIFFERENT OWNER FLAG                         
SMFFMVSF EQU   X'08'               FAILED ON MVS ENQUEUE                        
SMFFDDSF EQU   X'04'               FAILED ON DDS ENQUEUE                        
SMFFINI  EQU   X'02'               INITIALIZE COMPLETED                         
SMFFOUT  EQU   X'01'               OUTPUT THIS SMFREC                           
SMFRSRC  DS    CL8                 RESOURCE NAME                                
SMFOWNER DS    CL8                 CURRENT OWNER OF RESOURCE                    
SMFSTIME DS    XL4                 TIME OF FIRST ATTEMPT                        
SMFTRYS  DS    XL2                 NUMBER OF TRYS                               
SMFRECX  EQU   *                                                                
         DS    CL4                 SPARE                                        
*                                                                               
MSGHDR   DS    0F'0'                                                            
         DS    AL1                 REPLY LEN                                    
         DS    AL3                 REPLY ADR                                    
         DS    AL4                 ECB ADR                                      
         DS    AL2                 TXT LEN +4                                   
         DS    XL2                                                              
*                                                                               
MSG      DS    0CL70               CONSOLE MESSAGE                              
MSGTYPE  DS    CL7                                                              
         DS    CL1                                                              
MSGRSRC  DS    CL8                                                              
         DS    CL10                                                             
MSGCPU   DS    CL4                                                              
         DS    CL1                                                              
MSGADR   DS    CL4                                                              
         DS    CL1                                                              
MSGJOB   DS    CL8                                                              
         DS    CL1                                                              
MSGOPT1  DS    CL7                                                              
         DS    CL1                                                              
MSGOPT2  DS    CL8                                                              
         DS    CL1                                                              
MSGOPT3  DS    CL8                                                              
*                                                                               
MSGTRL   DS    XL4                                                              
*                                                                               
ANS      DS    CL4                                                              
*                                                                               
RSLTINFO DS    0XL8                                                             
RSLT     DS    X                                                                
RSLT1    DS    X                                                                
ENQERR   DS    X                                                                
ENQWAI   DS    X                                                                
ENQSTAT  DS    C                                                                
MODEC    DS    X                                                                
LOCKEXT  DS    X                                                                
IOERR    DS    X                                                                
*                                                                               
SVKEY    DS    CL30                                                             
SVENT    DS    CL30                                                             
*                                                                               
WRKX     EQU   *                                                                
         EJECT                                                                  
ENTD     DSECT                     ENQUEUE TABLE ENTRY                          
ENT      DS    0CL30                                                            
ENTCPU   DS    XL4                 CPU ID                                       
ENTADR   DS    XL4                 ADR ID                                       
ENTTIM   DS    XL4                 TIME OF ENQUEUE                              
ENTTYP   DS    XL1                 TYPE OF ENQUEUE                              
ENTCNT   DS    XL1                 COUNT OF NUM OF ENQS                         
ENTR1    DS    CL8                 RESOURCE ID1                                 
ENTR2    DS    CL8                 RESOURCE ID2 (NOW CONTAINS JOB ID)           
                                                                                
SYRD     DSECT                     SYSTEM RECORD ENTRY                          
*                                                                               
SYRKEY   DS    0XL16               UNIQUE KEY FOR THIS TASK                     
SYRCPU   DS    XL4                 CPU ID                                       
SYRADR   DS    XL4                 ADR ID                                       
SYRIDATE DS    XL4                 DATE THAT INITIALISE OCCURRED                
SYRITIME DS    XL4                 TIME THAT INITIALISE OCCURRED                
*                                                                               
SYRJOB   DS    CL8                 JOB NAME                                     
SYRDATE  DS    XL4                 DATE RECORD LAST WRITTEN                     
SYRTIME  DS    XL4                 TIME RECORD LAST WRITTEN                     
*                                                                               
SYRFIL   DS    0XL32               INFO FOR EACH FILE IN SYSTEM                 
SYRFDATE DS    XL4                 ENTRY DATE                                   
SYRFTIME DS    XL4                 ENTRY TIME                                   
SYRFSTAT DS    XL1                 ENTRY STATUS X'80' UPDATED                   
SYRFNO   DS    XL1                 FILE NUMBER                                  
SYRFL1   DS    XL1                 FILE FLAGS FROM SYSFLES LIST                 
SYRFL2   DS    XL1                 FILE FLAGS FROM DTF+36                       
SYRFE1   DS    XL4                 FILE EOF ADDR 1 ISOVLAST/DNEXT               
SYRFE2   DS    XL4                 FILE EOF ADDR 2 ISPDLAST/DCOUNT              
SYRFE1X  DS    XL4                 FILE EOF PREV 1                              
SYRFE2X  DS    XL4                 FILE EOF PREV 2              .               
         DS    XL4                 N/D                                          
         EJECT                                                                  
*FASSB                                                                          
       ++INCLUDE FASSB                                                          
SSOOFFD  DSECT                                                                  
       ++INCLUDE FASSBOFF                                                       
         EJECT                                                                  
*FATCB                                                                          
       ++INCLUDE FATCB                                                          
         EJECT                                                                  
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
         EJECT                                                                  
*DMDTFIS                                                                        
       ++INCLUDE DMDTFIS                                                        
         EJECT                                                                  
*DMXTNTD                                                                        
       ++INCLUDE DMXTNTD                                                        
*                                                                               
         IHAPSA LIST=YES                                                        
         IHAASCB LIST=YES                                                       
*NOP*    IKJTCB LIST=YES                                                        
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'002DMENQCTL  08/16/13'                                      
         END                                                                    
