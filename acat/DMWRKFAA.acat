*          DATA SET DMWRKFAA   AT LEVEL 007 AS OF 07/19/00                      
*CATALP DMWRKFA                                                                 
         SPACE 2                                                                
*&&      SET   NOP=N                                                            
* R2 POINTS TO ORIGINAL CALLERS PARAM LIST                                      
*                                                                               
* A(ACTION)                                                                     
* A(FILE NAME) GENERICALLY C'WRKFIL' SPECIFICALLY C'WRKF1'/C'WRKF2'.            
* A(KEY)                                                                        
* A(WRKF REC)  MUST BE LARGE ENOUGH TO HOLD A WORKER RECORD (4K)                
* A(WRKF BUF)  MUST BE LARGE ENOUTH TO HOLD A DISK RECORD (14K)                 
*                                                                               
* R1 POINTS TO DATAMGR PARAMS WITH PARAM4=FILNUM/A(DTF)                         
         TITLE 'DMWRKF - ROUTINES TO PROCESS WRKF'                              
         PRINT NOGEN                                                            
DMWRKF   CSECT                                                                  
         ENTRY WRKFLST                                                          
         ENTRY WRKFXPE                                                          
*                                                                               
         NMOD1 WRKX-WRKD,**WRKF**,RA,R9,R8                                      
         USING WRKD,RC                                                          
         ST    R2,APARM                                                         
         MVC   PARM1(24),0(R2)     SAVE PARAMS                                  
         LM    R2,R4,PARM3                                                      
         USING UKRECD,R2           R2=A(KEY)                                    
         USING WLHDRD,R3           R3=A(WRKF HEADER)                            
         LA    R4,0(R4)            R4=A(CALLERS BUFFER)                         
*                                                                               
         MVI   PARM3,0             SET OK RETURN CODE                           
         MVI   CLOTYP,0            SET UNDEFINED CLOSE TYPE                     
         MVI   ADDWHY,0            SET NORMAL ADD TYPE                          
         XC    USERINFO,USERINFO   RESET USER WRKF FILE INFO BLOCK              
         XC    CIDATA(8),CIDATA                                                 
         LA    RF,CXREC                                                         
         ST    RF,ACXREC                                                        
*                                                                               
DMWRKF0  CLI   WRKFLST,0           TEST FIRST CALL                              
         BNE   DMWRKF0X                                                         
         ICM   RE,15,=V(SYSFLES)   POINT TO SYSTEM FILES IN DMGR                
         BNZ   *+6                                                              
         DC    H'0'                                                             
         CLI   0(RE),X'01'         FIRST ENTRY MUST BE SERVICE SYSTEM           
         BE    *+6                                                              
         DC    H'0'                                                             
         LH    R0,2(RE)            SET NUMBER OF FILES IN LIST                  
         LA    RE,4(RE)            POINT TO FIRST FILE IN LIST                  
         LA    RF,WRKFLST+8                                                     
         SR    R1,R1               SET NUMBER OF WRKF FILES                     
         SR    R7,R7               SET NUMBER OF EXTRA (SPECIAL) FILES          
DMWRKF0A TM    1(RE),X'80'         TEST FOR WRKF FILE                           
         BZ    DMWRKF0C                                                         
         TM    1(RE),X'40'         TEST WRKF FILE IS EXTRA                      
         BZ    DMWRKF0B                                                         
         LA    R7,1(R7)                                                         
DMWRKF0B LA    R1,1(R1)            BUMP NUM OF WRKF FILES                       
         STC   R1,0(RF)            SAVE FILE REL NUM                            
         STC   R1,1(RF)            SAVE FILE ALPHA ID CHR FOR WRKFN             
         OI    1(RF),C'0'                                                       
         MVC   4(1,RF),3(RE)       SAVE FILE EXT NUM                            
         MVC   5(3,RF),5(RE)       SAVE FILE DTF ADDR                           
         LA    RF,8(RF)                                                         
DMWRKF0C LA    RE,8(RE)            BUMP TO NEXT FILE IN LIST                    
         BCT   R0,DMWRKF0A                                                      
         LTR   R1,R1               MUST BE SOME FILES                           
         BNZ   *+6                                                              
         DC    H'0'                                                             
         STC   R7,WRKFLST+1        SAVE NUMBER OF EXTRA WRKF FILES              
         STC   R1,WRKFLST+2        SAVE NUMBER OF TOTAL WRKF FILES              
         SR    R1,R7                                                            
         STC   R1,WRKFLST          SAVE NUMBER OF NORMAL WRKF FILES             
DMWRKF0X EQU   *                                                                
         EJECT                                                                  
* SET IF OFFLINE OR ONLINE AND GET/SET WRKF FILE DATA                           
*                                                                               
DMWRKF1  L     RE,=V(SSB)          SET OFFLINE/ONLINE FLAG                      
         MVI   OFFLINE,C'Y'                                                     
         MVC   MYLABEL,LABEL                                                    
         MVI   RSNF,1                                                           
         LTR   RE,RE               V(SSB) UNRESOLVED MEANS OFFLINE              
         BZ    DMWRKF2                                                          
         OC    0(2,RE),0(RE)                                                    
         BZ    DMWRKF2             NO TRM NUM IN SSB MEANS OFFLINE              
         MVI   OFFLINE,C'N'                                                     
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBSIN-TCBD(RE)                                               
         LA    RE,0(RE)                                                         
         STCM  RE,15,MYLABEL+3     SET ONLINE LABEL WITH TASK SIN               
*                                                                               
DMWRKF2  L     RE,PARM2            SET WKR FILE NAME AND DTF ADDR               
         MVC   W_FILE,0(RE)                                                     
         MVC   VW_FILE,12(R1)                                                   
         CLI   W_FILE+4,C'I'       TEST IF GENERIC WRKF NAMED                   
         BNE   DMWRKF2B                                                         
*                                                                               
         MVC   USERIDNO,UKUSRID    SET USER ID NUM FROM KEY                     
         BAS   RE,WHATWKRU                                                      
         B     DMWRKF2C                                                         
*                                                                               
DMWRKF2B MVC   USERWRKF+4(1),W_FILE+4                                           
         BAS   RE,WHATWKRA         GET/SET WRKF INFO FROM ALPHA ID              
DMWRKF2C OI    USERFLAG,X'80'      SET CALLER TOLD US WHICH WKR                 
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
*                                                                               
DMWRKF3  L     RE,VENQDEQ          SAVE CONTROL INTERVAL DATA                   
         ST    RE,CIENQDEQ                                                      
         LA    RE,L'W_INDEX                                                     
         STH   RE,CINDXLN                                                       
*                                                                               
DMWRKF4  LR    R7,R4               LOCATE SAVE AREA AT END OF BUFF              
         AH    R7,W_BLKLN                                                       
         LA    R7,3(R7)                                                         
         SRL   R7,2                                                             
         SLL   R7,2                                                             
         USING SKBUFFD,R7          R7=A(SAVE AREA AT END OF BUFFER)             
*                                                                               
DMWRKF5  CLC   SKLABEL,MYLABEL     INITIALISE SAVE AREA                         
         BE    DMWRKFA                                                          
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
         EJECT                                                                  
* VALIDATE W_FILE ACTION AND PASS CONTROL TO ROUTINE                            
*                                                                               
DMWRKFA  L     RE,PARM1            RE=A(W_FILE ACTION)                          
         LA    RF,W_ACTNS          RF=A(ACTION TABLE)                           
DMWRKFA1 CLI   1(RF),0             TEST END OF TABLE                            
         BE    DMWRKFE                                                          
         CLC   1(3,RF),0(RE)       MATCH ON FIRST THREE CHRS                    
         BE    DMWRKFB                                                          
         LA    RF,12(RF)                                                        
         B     DMWRKFA1                                                         
*                                                                               
DMWRKFB  MVC   SKACTN,0(RF)        SAVE THIS ACTION VALUE                       
         MVC   SAVADDR,8(RF)       SAVE A(ROUTINE REQUIRED)                     
*                                                                               
DMWRKFB1 TM    SAVADDR,X'01'       GO DIRECT FOR SPECIAL ACTIONS                
         BO    DMWRKFD                                                          
*                                                                               
DMWRKFB2 TM    SAVADDR,X'80'       ACTION REQUIRES SPECIFIC WRKF                
         BZ    DMWRKFB3                                                         
         TM    USERFLAG,X'80'                                                   
         BZ    DMWRKFE             DIE IF CALLER DOES NOT SPECIFY               
         BAS   RE,SETWKR                                                        
         B     DMWRKFD                                                          
*                                                                               
DMWRKFB3 TM    SAVADDR,X'40'       ACTION REQUIRES WRKF NUM IN BUFFER           
         BZ    DMWRKFC                                                          
         CLI   SKINTNO,0                                                        
         BE    DMWRKFE             DIE IF NO INTERNAL NUM IN BUFFER             
         TM    USERFLAG,X'80'                                                   
         BZ    *+14                                                             
         CLC   USERINUM,SKINTNO    TEST IF USER SWITCHED WRKF FILES             
         BNE   DMWRKFE             YES DIE                                      
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   SKEXTNO,USERXNUM                                                 
         BNE   DMWRKFE             DOUBLE CHECK BUFFER SAVE AREA                
         BAS   RE,SETWKR           SET CIDATA                                   
         B     DMWRKFD                                                          
*                                                                               
DMWRKFC  EQU   *                   ACTION WILL DETERMINE WHAT WRKF              
*                                                                               
DMWRKFD  L     RF,SAVADDR          PASS CONTROL TO ROUTINE FOR ACTION           
         LA    RF,0(RF)                                                         
         BR    RF                                                               
*                                                                               
DMWRKFE  DC    H'0',C'INVALID W_FILE ACTION '                                   
*                                                                               
XITEQU   CR    RB,RB               EXITS                                        
         B     XIT1                                                             
XITNEQ   LTR   RB,RB                                                            
XIT1     XIT1                                                                   
*                                                                               
DMWRKFX  MVC   SKLACTN,SKACTN      SAVE LAST ACTION VALUE                       
DMWRKFY  L     R1,APARM                                                         
         MVC   8(1,R1),PARM3                                                    
         XMOD1 1                                                                
         EJECT                                                                  
* CALL TO INITIALISE BUFFER - PASS BACK IN BUFFER                               
*                                                                               
* AL4    V(W_TAB)                                                               
* AL4    V(W_FILE)                                                              
* AL4    DISPLACEMENT OF START OF BUFFER SAVE                                   
* CL40   CIDATA FROM W_TAB                                                      
* CL12   N/D                                                                    
* CL40   WRKF LIST FRON WRKFL                                                   
*                                                                               
BUF      TM    USERFLAG,X'80'      TEST IF CALLER SPECIFIED WRKF                
         BO    BUF1                                                             
         XC    0(8,R4),0(R4)       SET UNKNOWN WRKF DATA                        
         XC    CIDATA,CIDATA                                                    
         B     BUF2                                                             
BUF1     BAS   RE,SETWKR           GET CIDATA FOR WRKF                          
         MVC   0(4,R4),VWKRTAB                                                  
         MVC   4(4,R4),VW_FILE                                                  
BUF2     LR    R0,R7               GET DISPLACEMENT TO SAVE AREA                
         SR    R0,R4                                                            
         ST    R0,8(R4)                                                         
         MVC   12(L'CIDATA,R4),CIDATA                                           
         MVC   64(WRKFLSTX-WRKFLST,R4),WRKFLST                                  
         MVC   FUL(1),SKACTN                                                    
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
         SPACE 1                                                                
* RESTORE FROM SAVE AREA THE EXTRACT OF DATA BACK TO BUFFER                     
*                                                                               
BUR      CLI   FUL,ACTNBUR         EXIT IF RESTORE NOT REQUIRED                 
         BNE   DMWRKFX                                                          
         LR    RE,R3               POINT TO WORKER RECORD                       
         USING KSBUFFD,RE                                                       
         MVC   SKINDEX,KSINDEX     RESTORE BUFFER DATA FROM RECORD AREA         
         MVC   SKFSTCI,KSFSTCI                                                  
         MVC   SKINTNO,KSINTNO                                                  
         MVC   SKEXTNO,KSEXTNO                                                  
         MVC   UKINDEX,KSINDEX     RESTORE USERS KEY                            
         B     DMWRKFX                                                          
         SPACE 1                                                                
* SAVE EXTRACT OF SAVE DATA IN BUFFER - ENOUGH TO IDENTIFY FILE                 
*                                                                               
BUS      LR    RE,R3               POINT TO WORKER RECORD                       
         USING KSBUFFD,RE                                                       
         MVC   KSINDEX,SKINDEX     SAVE BUFFER DATA INTO RECORD AREA            
         MVC   KSFSTCI,SKFSTCI                                                  
         MVC   KSINTNO,SKINTNO                                                  
         MVC   KSEXTNO,SKEXTNO                                                  
         B     DMWRKFX                                                          
         DROP  RE                                                               
         EJECT                                                                  
* RETURN A(WRKFLST) IN UKUSRINF                                                 
*                                                                               
GLI      LA    RE,WRKFLST          POINT TO LIST OF WRKF FILES                  
         STCM  RE,15,UKUSRINF                                                   
         LA    RE,WRKFXPE          POINT TO LIST OF WRKF INDEX DATA             
         STCM  RE,15,UKUSRINF+4                                                 
         B     DMWRKFY                                                          
         SPACE 2                                                                
* RETURN WRKF FILE NAME IN UKUSRINF FROM USERID NUM IN UKUSRID                  
*                                                                               
GFI      MVC   USERIDNO,UKUSRID    SET USER ID NUM FROM KEY                     
         BAS   RE,WHATWKRU                                                      
         MVC   UKINFO(1),USERINUM  RETURN INT/EXT FILE NUMS IN KEY              
         MVC   UKINFO+1(1),USERXNUM                                             
         MVC   UKFILENX(3),USERADTF                                             
         MVC   UKUSRINF,USERWRKF   RETURN DMCB WRKF NAME IN KEY                 
         B     DMWRKFY                                                          
         SPACE 2                                                                
* INITIALISE WRKF REQUESTED BY CALLER                                           
*                                                                               
INI      OC    CIDATA(4),CIDATA    TEST IF INITIALISED ALREADY                  
         BNZ   DMWRKFX                                                          
         L     RF,=A(IWKR)                                                      
         BASR  RE,RF               CALL INITIALISE ROUTINE AND EXIT             
         B     DMWRKFX                                                          
         EJECT                                                                  
* READ W_FILE SEQUENTIALLY FILTERED BY KEY.                                     
* PARM4 POINTS TO A WORK AREA. (4K)                                             
* LENGTH OF TOTAL REC PASSED BACK AT PARM4-4(2).                                
* SET PARM1(1) TO X'80' TO PERFORM INDEX READ FOR UPDATE.                       
* USER INDEX IS NOT CHANGED - ALL NON ZERO FIELDS ARE FILTERS.                  
*                                                                               
* IF INDEX+30=X'80' BIT IS OFF THEN INDEX DATA WILL BE RETURNED IN              
* PARM4 WITH RECORD FORMAT AS FOLLOWS. CTXX IS LAST 4 BYTES OF INDEX.           
*                                                                               
* SOFSOF..CTXX.....##..DA.F.<--1ST 20 CHR NDX-->                                
*                                                                               
* IF INDEX+30=X'80' BIT IS ON THEN FILE DATA WILL BE RETURNED BETWEEN           
* HDR AND TRL RECORDS BY SUCESSIVE CALLS AS FOLLOWS.                            
*                                                                               
* SOFSOF..CTXX.....##..DA.F.<--1ST 20 CHR NDX--><--FILE DATA.....>              
* REC-1.....                                                                    
* REC-2.....                                                                    
* EOFEOF                                                                        
*                                                                               
* IF A READ ERROR THEN EOF LABEL SET TO EOFERR                                  
*                                                                               
SEQ      TM    SKSCTRL,X'01'       INITIALISE BUFFER ON FIRST CALL              
         BO    SEQ0                                                             
         MVI   SKSCTRL,X'01'                                                    
         MVI   SKACTRL,0                                                        
         MVC   SKINTNO,USERINUM    SAVE INTERNAL WRKF FILE NUM                  
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL WRKF FILE NUM                  
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         LA    RF,0(R3)            CLEAR RECORD LEN AND DATA                    
         SH    RF,=H'4'                                                         
         XC    0(32,RF),0(RF)                                                   
         BAS   RE,CXLOOPI                                                       
         USING W_RECD,R5           R5=A(FIRST INDEX ENTRY IN CXREC)             
         LH    R0,CXENTRY                                                       
         BCTR  R0,0                                                             
         STH   R0,CXENTRY                                                       
         MVC   SKPAGE(4),CXPAGE                                                 
*                                                                               
SEQ0     CLC   SKINTNO,USERINUM    TEST IF SAME WRKF AS LAST TIME               
         BE    *+6                                                              
         DC    H'0'                                                             
         TM    SKSCTRL,X'80'       READ INDEX MODE                              
         BO    SEQE                                                             
         MVC   CXPAGE(4),SKPAGE    RESTORE LAST INDEX ENTRY DATA                
         LH    R5,CXENTRY                                                       
         MH    R5,CINDXLN                                                       
         LA    R5,CXREC(R5)        R5=A(LAST INDEX ENTRY IN CXREC)              
         MVI   FLAG,0                                                           
*                                                                               
SEQ2     LA    RE,CXREC            READ INDEX PAGE INTO CALLERS BUFFER          
         SR    R5,RE                                                            
         AR    R5,R4                                                            
         BAS   RE,GETXAD                                                        
         CLC   SKXADDR,CXADDR      TEST IF PAGE ALREADY IN BUFFER               
         BE    SEQ2A                                                            
         MVC   SKXADDR,CXADDR                                                   
         XC    SKADDR,SKADDR                                                    
         LA    R0,X'80'            TEST/SET INDEX READ FOR UPDATE               
         TM    PARM1,X'80'                                                      
         BO    *+6                                                              
         SR    R0,R0                                                            
         GOTO1 DATAMGR,DMCB,((R0),DMREAD),W_FILE,CXADDR,(R4)                    
         CLI   8(R1),0                                                          
         BNE   SEQERR                                                           
SEQ2A    CLI   FLAG,0                                                           
         BNE   SEQ4                                                             
         B     SEQ8                                                             
*                                  NOP THIS                                     
         TM    UKFLAG,X'C0'        TEST IF INDEX LAST AND DATA THIS             
         BNO   SEQ8                                                             
         NI    UKFLAG,255-X'40'                                                 
         B     SEQA                SET TO RETURN LAST FULL DATA HDR             
*                                                                               
SEQ4     CLI   W_STAT,0            IGNORE PURGED ENTRYS                         
         BE    SEQ8                                                             
         TM    UKFLAG,X'40'        TEST USER WANTS TEMP ENTRIES                 
         BO    SEQ6                                                             
         TM    W_STAT,W_STRUN      IGNORE TRANSIENT ENTRIES                     
         BNZ   SEQ8                                                             
*                                                                               
SEQ6     OC    UKUSRID,UKUSRID     FILTER ON USER ID                            
         BZ    SEQ6A                                                            
         CLC   UKUSRID,W_USRID                                                  
         BNE   SEQ8                                                             
*                                                                               
SEQ6A    OC    UKSYSPRG(4),UKSYSPRG   FILTER ON SYSPRG                          
         BZ    SEQ6B                                                            
*                                                                               
         LA    RF,UKSYSPRG                                                      
         LA    RE,W_SYSPRG                                                      
SEQ6A1   CLI   0(RF),C'*'          * IS WILDCARD                                
         BE    SEQ6A2                                                           
         CLI   0(RF),X'0'          ZERO ALSO                                    
         BE    SEQ6A2                                                           
         CLC   0(1,RE),0(RF)       ELSE MUST MATCH                              
         BNE   SEQ8                                                             
SEQ6A2   LA    RF,1(RF)                                                         
         LA    RE,1(RE)                                                         
         BCT   R0,SEQ6A1           TEST NEXT CHAR                               
*                                                                               
SEQ6B    CLI   UKDAY,0             TEST DAY NUMBER                              
         BE    SEQ6D                                                            
         CLC   UKDAY,W_DAY                                                      
         BNE   SEQ8                                                             
*                                                                               
SEQ6D    CLI   UKCLASS,0           FILTER ON CLASS                              
         BE    SEQ6E                                                            
         CLC   UKCLASS,W_CLASS                                                  
         BNE   SEQ8                                                             
*                                                                               
SEQ6E    CLI   UKSTAT,0            FILTER ON STATUS                             
         BE    SEQ6F                                                            
         MVC   DUB(1),UKSTAT                                                    
         TM    DUB,W_STKE                                                       
         BZ    *+12                                                             
         TM    W_STAT,W_STKE                                                    
         BZ    SEQ8                                                             
         NI    DUB,255-W_STKE                                                   
         BZ    SEQ6F                                                            
         NC    DUB(1),W_STAT                                                    
         BZ    SEQ8                                                             
*                                                                               
SEQ6F    OC    UKFILENO,UKFILENO   FILTER ON FILE NUMBER                        
         BZ    SEQ6G                                                            
         CLC   UKFILENO,W_FILENO                                                
         BE    SEQ6G                                                            
         BH    SEQ8                                                             
         OC    UKFILENX,UKFILENX                                                
         BZ    SEQ6G                                                            
         CLC   UKFILENX,W_FILENO                                                
         BL    SEQ8                                                             
*                                                                               
SEQ6G    B     SEQA                ENTRY FOUND VALID FOR ALL FILTERS            
*                                                                               
SEQ8     MVI   FLAG,1              BUMP TO NEXT INDEX ENTRY                     
         BAS   RE,CXLOOPX                                                       
         B     SEQ4                                                             
         B     SEQ2                END OF INDEX PAGE                            
         B     SEQEOF                                                           
*                                                                               
SEQA     BAS   RE,GETCAD           SAVE INDEX DATA IN BUFFER                    
         XC    SKINDEX,SKINDEX                                                  
         MVC   SKKEY,W_KEY                                                      
         MVC   SKSTAT,W_STAT                                                    
         MVC   SKCIADDR,CIADDR                                                  
         MVC   SKPAGE(4),CXPAGE                                                 
         XC    SKFCTRL,SKFCTRL                                                  
         MVC   SKFSTCI,CIADDR      SAVE DISK ADDR OF FILE IN BUFFER             
*                                                                               
SEQB     XC    0(28,R3),0(R3)      PASS BACK SOF HEADER IN RECORD               
         MVC   0(8,R3),SOFLAB                                                   
         MVC   WLREPRNO,W_FILENO                                                
         MVC   WLREPFNO,USERWRKF+4                                              
         MVC   WLINDEX,W_INDEX                                                  
         LA    R6,WLBATTR          POINT TO NEXT CHR IN SOF HEADER              
*                                                                               
SEQC     TM    UKFLAG,X'80'        TEST IF CALLER WANTS DATA AS WELL            
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO-SET IN INDEX READ MODE                    
         B     SEQLEN                                                           
         OI    SKSCTRL,X'80'       YES- SET IN DATA READ MODE                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST                                                        
         BE    SEQD                                                             
         MVC   5(3,R3),=C'ERR'     ERROR ON FIRST DATA READ                     
         NI    SKSCTRL,X'7F'                                                    
         B     SEQLEN                                                           
*                                                                               
SEQD     LR    R5,R4               RETURN EXTENDED FILE HEADER                  
         MVC   WLINDEX,W_INDEX                                                  
         MVC   WLBATTR,W_BATTR                                                  
         MVC   WLDATA,W_DATA                                                    
         LA    R6,WLSOFEND         POINT TO END OF DATA                         
         B     SEQLEN                                                           
*                                                                               
SEQE     TM    UKFLAG,X'80'        DATA READ MODE                               
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO LONGER REQUIRED RETURN TO INDEX           
         B     SEQ0                                                             
         BAS   RE,RDFNXT           READ NEXT DATA RECORD                        
         BNE   SEQF                                                             
         LH    R6,SKLEN            POINT TO END OF DATA                         
         AR    R6,R3                                                            
         B     SEQLEN              RETURN REC LEN                               
*                                                                               
SEQF     XC    0(28,R3),0(R3)      RETURN EOF/ERR TRAILER RECORD                
         MVC   0(8,R3),EOFLAB                                                   
         TM    DMCB+8,X'80'                                                     
         BO    *+10                                                             
         MVC   5(3,R3),=C'ERR'                                                  
         LA    R6,L'EOFLAB(R3)                                                  
         NI    SKSCTRL,X'7F'       RESET TO INDEX READ MODE                     
*                                                                               
SEQLEN   LA    R3,0(R3)            R6 POINTS PAST END OF RECORD                 
         SR    R6,R3                                                            
         CLC   WLSOFLAB,SOFLAB     SOF & EOF HAVE NO LEN                        
         BE    SEQLEN1                                                          
         CLC   WLSOFLAB,EOFLAB                                                  
         BE    SEQLEN1                                                          
         STH   R6,0(R3)            SET NORMAL RECORD LEN                        
SEQLEN1  LA    R6,4(R6)            SET RECORD LEN PLUS 4 BYTE HEADER            
         SLL   R6,16                                                            
         LR    RF,R3                                                            
         SH    RF,=H'4'                                                         
         ST    R6,0(RF)            STORE RECORD LENGTH                          
         B     DMWRKFX                                                          
*                                                                               
SEQERR   MVI   PARM3,X'40'         ERROR ON INDEX READ                          
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
SEQEOF   MVI   PARM3,X'90'         END OF FILE ON INDEX READ                    
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* READ W_FILE INDEX - PASS BACK INDEX ENTRY IN USER INDEX (PARM3).              
* SET PARM1(1) TO X'08' TO OBTAIN DEAD INDEX ENTRYS.                            
*                                                                               
* SET USER INDEX BEFORE FIRST CALL TO ONE OF THE FOLLOWING VALUES-              
* SET UKFLAG TO X'80' AND UKCIADDR TO LOCATE ENTRY WITH THAT CI ADDR.           
* SET UKKEY TO ZERO TO LOCATE FIRST INDEX ENTRY.                                
* SET UKKEY TO VALUE TO LOCATE THAT SPECIFIC KEY IN THE INDEX.                  
*                                                                               
* USER INDEX IS UPDATED BY THIS LOGIC.                                          
* SUBSEQUENT CALLS GIVE NEXT INDEX AFTER THAT GIVEN BY FIRST CALL.              
*                                                                               
NDX      XC    SKFCTRL,SKFCTRL     RESET FILE I/O CONTROL                       
         MVI   SKACTRL,0                                                        
         MVI   SKSCTRL,0                                                        
         MVC   SKINTNO,USERINUM    SAVE INTERNAL WRKF FILE NUM                  
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL WRKF FILE NUM                  
         MVI   FLAG,0                                                           
*                                                                               
         TM    UKFLAG,X'80'        TEST IF DISK ADDR PASSED BY CALLER           
         BZ    NDX0                NO                                           
         MVC   CIRSN,UKFILENO                                                   
         BAS   RE,RSNXPE                                                        
         BAS   RE,GETCAD                                                        
*                                                                               
         MVC   CIADDR+2(2),=X'0100'                                             
         LH    RE,CICINDX                                                       
         MH    RE,CITRKS                                                        
         CLM   RE,3,CIADDR         TEST CI DISK ADDR WITH MIN VALUE             
         BH    NDXEOF                                                           
         CLC   CJSTTRK,CIADDR      TEST CI DISK ADDR WITH MAX VALUE             
         BNH   NDXEOF                                                           
         BAS   RE,GETXPE           COMPUTE INDEX PAGE/ENTRY                     
         BAS   RE,GETXAD           COMPUTE INDEX DISK ADDR                      
         MVC   SKXADDR,CXADDR                                                   
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CXADDR,(R4)                   
         CLI   8(R1),0                                                          
         BNE   NDXERR                                                           
         LH    R5,CXENTRY          POINT TO INDEX ENTRY IN BUFFER               
         MH    R5,CINDXLN                                                       
         AR    R5,R4                                                            
         B     NDXA                EXTRACT ENTRY FROM CALLER'S BUFF             
*                                                                               
NDX0     BAS   RE,CXLOOPI          R5=A(FIRST INDEX ENTRY IN CXREC)             
         USING W_RECD,R5                                                        
         LH    R0,CXENTRY          CUT BACK TO PREVIOUS INDEX ENTRY             
         BCTR  R0,0                                                             
         STH   R0,CXENTRY                                                       
         MVC   SVINDEX,UKINDEX     SAVE CALLERS INDEX ENTRY                     
         OC    SVKEY,SVKEY                                                      
         BZ    NDX1                CALLER WANTS FIRST INDEX ENTRY               
         CLC   SVINDEX,SKINDEX                                                  
         BNE   NDX1                CALLER WANTS SPECIFIC INDEX ENTRY            
         XC    SVKEY,SVKEY                                                      
         MVC   CXPAGE(4),SKPAGE    CALLER WANTS NEXT INDEX ENTRY                
         B     NDX1+6                                                           
*                                                                               
NDX1     XC    SKXADDR,SKXADDR     RESET INDEX DISK ADDR IN BUFFER              
         LH    R5,CXENTRY                                                       
         MH    R5,CINDXLN                                                       
         LA    R5,CXREC(R5)        R5=A(INDEX START ENTRY IN CXREC)             
*                                                                               
NDX2     LA    RE,CXREC            READ INDEX PAGE INTO CALLERS BUFFER          
         SR    R5,RE                                                            
         AR    R5,R4                                                            
         BAS   RE,GETXAD                                                        
         CLC   SKXADDR,CXADDR      TEST IF PAGE ALREADY IN BUFFER               
         BE    NDX2A                                                            
         MVC   SKXADDR,CXADDR                                                   
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CXADDR,(R4)                   
         CLI   8(R1),0                                                          
         BNE   NDXERR                                                           
NDX2A    CLI   FLAG,0              TEST FIRST TIME FLAG                         
         BE    NDX8                                                             
*                                                                               
NDX4     CLI   W_STAT,0            IGNORE PURGED ENTRYS                         
         BE    NDX8                                                             
         TM    W_STAT,W_STRUN      TEST FOR TRANSIENT                           
         BZ    NDX5                                                             
         OC    W_KEY(5),W_KEY      MAKE SURE TEMP ENTRY HAS A KEY               
         BZ    NDX8                                                             
         TM    UKFLAG,UKFLTMP      UNLESS CALLER WANTS TEMP ENTRYS              
         BZ    NDX8                                                             
         NI    UKFLAG,255-UKFLTMP                                               
*                                                                               
NDX5     TM    W_STAT,W_STDEAD     IGNORE USED ENTRYS                           
         BZ    *+12                                                             
         TM    PARM1,X'08'         UNLESS CALLER WANTS THEM                     
         BZ    NDX8                                                             
*                                                                               
NDX6     OC    SVKEY(5),SVKEY      CALLER WANTS NEXT ENTRY                      
         BZ    NDXA                                                             
         CLC   SVKEY(5),W_KEY      CALLER WANTS SPECIFIC USERID                 
         BNE   NDX8                                                             
         OC    UKFILENO,UKFILENO   TEST IF CALLER PASSED FILE NUMBER            
         BZ    *+14                                                             
         CLC   UKFILENO,W_FILENO                                                
         BNE   NDX8                                                             
         B     NDXA                                                             
*                                                                               
NDX8     MVI   FLAG,1                                                           
         BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     NDX4                                                             
         B     NDX2                END OF INDEX PAGE                            
         B     NDXEOF                                                           
*                                                                               
NDXA     BAS   RE,GETCAD           PASS INDEX ENTRY BACK TO CALLER              
         MVC   UKINDEX,W_INDEX                                                  
         MVC   UKCIADDR,CIADDR                                                  
         NI    UKFLAG,255-X'80'    TURN OFF ADDR PASSED BY CALLER FLAG          
         MVC   SKPAGE(4),CXPAGE    SAVE INDEX CTRL DATA IN BUFFER               
         MVC   SKINDEX,UKINDEX                                                  
         MVC   SKFSTCI,CIADDR      SAVE DISK ADDR OF FILE IN BUFFER             
         B     DMWRKFX                                                          
*                                                                               
NDXERR   MVI   PARM3,X'40'         DISK ERROR ON INDEX READ                     
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
NDXEOF   MVI   PARM3,X'90'         EOF ON INDEX READ                            
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* READ W_FILE DATA RECORDS - PASS BACK RECORD IN PARM4                          
*                                                                               
RDF      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   RDF2                                                             
RDF1     DC    H'0',C'INVALID W_FILE READ SEQUENCE'                             
*                                                                               
RDF2     OC    SKADDR,SKADDR       TEST IF FIRST READ                           
         BNZ   RDF4                                                             
         MVC   CIADDR,SKFSTCI                                                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST           READ FIRST BLOCK AND INITIALISE              
         BE    RDF4                                                             
         MVC   PARM3(1),DMCB+8     RETURN READ ERROR                            
         B     DMWRKFX                                                          
*                                                                               
RDF4     BAS   RE,RDFNXT           GET NEXT RECORD                              
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
         SPACE 2                                                                
* READ RANDOM W_FILE DATA RECORDS - RECORD INFO IN RECORD AREA AT PARM4         
* XL4  RECORD NUMBER                                                            
* XL4  C'RECD'                                                                  
* XL4  SPARE                                                                    
*                                                                               
RDR      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BZ    RDF1                                                             
         MVC   FUL,0(R3)           SET FUL TO RECORD NUMBER                     
*                                                                               
         CLC   4(3,R3),=C'REC'                                                  
         BE    *+6                                                              
         DC    H'0'                REC IS ONLY VALID CALL                       
*                                                                               
RDR4     BAS   RE,RAN              SEARCH FOR REQUIRED RECORD                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* WRITE BACK LAST W_FILE RECORD READ - NEW RECORD IN PARM4                      
*                                                                               
WRF      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI     MUST HAVE FILE DEFINED                       
         BZ    WRF2                                                             
         OC    SKADDR,SKADDR       MUST HAVE BLOCK DEFINED                      
         BZ    WRF2                                                             
         B     WRF4                                                             
WRF2     DC    H'0',C'INVALID W_FILE WRITE SEQUENCE '                           
*                                                                               
WRF4     LH    R1,SKLEN            MOVE REC BACK TO BUFFER                      
         LR    RF,R4                                                            
         AH    RF,SKDISP                                                        
         SR    RF,R1                                                            
         MOVE  ((RF),(R1)),(R3)                                                 
*                                                                               
WRF6     GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R4)                    
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* CHANGE STATUS OF FILE DEFINED IN BUFFER BY SKFSTCI                            
* SET PARM1(1)=X'40' TO INHIBIT ENQUEUE/DEQUEUE.                                
*                                                                               
STA      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   STA2                                                             
         DC    H'0',C'INVALID W_FILE STATUS SEQUENCE'                           
*                                                                               
STA2     BAS   RE,GETDATE          SET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
         XC    STPARM,STPARM       SET ACTION VALUES FOR STATUS CHANGE          
         MVC   STACTN,SKACTN                                                    
         MVI   STCTRL,X'23'        SET FILE AND INDEX CHANGE REQUIRED           
         TM    PARM1,X'40'                                                      
         BZ    *+8                                                              
         OI    STCTRL,X'40'        SET INHIBIT LOCK                             
         MVC   STFSTCI,SKFSTCI                                                  
         LA    RE,CXREC            USE CXREC AS I/O BUFFER                      
         ST    RE,STBUFFA                                                       
*                                                                               
STAX     BAS   RE,STAT             GOTO STATUS CHANGE ROUTINE                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* CHANGE ATTRIBUTES OF FILE DEFINED IN BUFFER BY SKFSTCI                        
*                                                                               
ATT      MVI   SKACTRL,0           FILE MUST BE DEFINED                         
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   ATT2                                                             
         DC    H'0',C'INVALID W_FILE ATTRIBUTE CHANGE '                         
*                                                                               
ATT2     MVC   CIADDR,SKFSTCI      READ FIRST CI REC INTO CXREC                 
         LA    R5,CXREC                                                         
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         MVC   PARM3(1),DMCB+8                                                  
         CLI   DMCB+8,0                                                         
         BNE   DMWRKFX                                                          
*                                                                               
ATTDES   CLI   SKACTN,ACTNDES      SET DESCRIPTION DATA                         
         BNE   ATTDESX                                                          
         MVC   W_DESC,WLDESC                                                    
         B     ATTX                                                             
ATTDESX  EQU   *                                                                
*                                                                               
ATTREL   CLI   SKACTN,ACTNREL      SET LIVE RETAIN HOURS                        
         BNE   ATTRELX                                                          
         MVC   W_RETNL,WLRETNL                                                  
         B     ATTX                                                             
ATTRELX  EQU   *                                                                
*                                                                               
ATTRED   CLI   SKACTN,ACTNRED      SET DEAD RETAIN HOURS                        
         BNE   ATTREDX                                                          
         MVC   W_RETND,WLRETND                                                  
         B     ATTX                                                             
ATTREDX  EQU   *                                                                
*                                                                               
         DC    H'0'                UNKNOWN ATTRIBUTE                            
*                                                                               
ATTX     GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,CIADDR,(R5)                    
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
* SUBROUTINE TO READ FIRST RECORD IN A W_FILE CONTROL INTERVAL                  
*                                                                               
RDFFST   NTR1                      READ FIRST FILE RECORD                       
         LA    R1,1                                                             
         B     RDFFST0                                                          
RDFADD   NTR1                      READ FIRST FILE RECORD FOR ADD               
         SR    R1,R1                                                            
         B     RDFFST0                                                          
*                                                                               
RDFFST0  MVI   DMCB+8,0                                                         
         LR    R5,R0               R0=A(BUFFER) & CIADDR GIVES CI               
         SR    R7,R4                                                            
         AR    R7,R0                                                            
*                                                                               
         XC    SKXADDR,SKXADDR     RESET INDEX ADDR IN BUFFER                   
         MVC   SKADDR,CIADDR       SET FILE ADDR IN BUFFER                      
         MVC   SKSTRCI,CIADDR      SET START OF THIS CI                         
         LTR   R1,R1                                                            
         BZ    RDFFST2                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BE    RDFFST2                                                          
         XC    SKADDR,SKADDR       RESET FILE ADDR ON ERROR                     
         B     RDFFSTX                                                          
*                                                                               
RDFFST2  XC    SKRECS,SKRECS       INIT RECORDS READ                            
         MVC   SKNXTCI(2),W_CINEXT SET START OF NEXT CI                         
         MVC   SKNXTCI+2(2),=X'0100'                                            
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LH    R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    *+8                                                              
         LH    R0,CJTRKS                                                        
         AR    RF,R0                                                            
         BCTR  RF,0                                                             
         SLL   RF,16                                                            
         ST    RF,SKENDCI          SET END OF THIS CI                           
         MVC   SKENDCI+2(1),CIHIREC+1                                           
         LA    RF,W_DATA-W_INDEX                                                
         CLC   CIADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,W_DATA1-W_INDEX                                               
         STH   RF,SKDISP                                                        
         XC    SKLEN,SKLEN                                                      
*                                                                               
RDFFSTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
         EJECT                                                                  
* SUBROUTINE TO READ NEXT RECORD IN A W_FILE FILE                               
*                                                                               
RDFNXT   NTR1                      READ NEXT FILE RECORD                        
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
*                                                                               
RDFNXT0  LR    RE,R5               POINT TO NEXT REC IN BUFFER                  
         AH    RE,SKDISP                                                        
         MVC   SKLEN,0(RE)         SAVE LENGTH OF REC IN BUFFER                 
         LH    R1,SKLEN                                                         
         CLC   0(2,RE),=H'1'                                                    
         BE    RDFNXT8             END OF FILE                                  
         BL    RDFNXT4             END OF BLOCK                                 
*                                                                               
RDFNXT1  TM    PARM1,X'01'         TEST IF CALLER WANTS REC LEN                 
         BZ    *+12                                                             
         L     RF,APARM            YES RETURN IN DMCB+6(2)                      
         STH   R1,22(RF)                                                        
         TM    PARM1,X'02'         DOES CALLER ONLY WANT CIREC                  
         BO    RDFNXTX                                                          
         MOVE  ((R3),(R1)),(RE)    MOVE V/L REC TO CALLERS PARM4                
         B     RDFNXT3                                                          
*                                                                               
RDFNXT3  LH    R1,SKLEN            BUMP BUFFER DISPLACEMENT                     
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP                                                        
         L     R1,SKRECS           BUMP LINE COUNT                              
         LA    R1,1(R1)                                                         
         ST    R1,SKRECS                                                        
         B     RDFNXTX                                                          
*                                                                               
RDFNXT3A L     R1,SKRECS           BUMP RECORD COUNT                            
         LA    R1,1(R1)                                                         
         ST    R1,SKRECS                                                        
         B     RDFNXTX                                                          
*                                                                               
RDFNXT4  SR    RF,RF               BUMP TO NEXT BLOCK                           
         IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   RDFNXT6                                                          
         ICM   RF,3,SKADDR         BUMP TO NEXT TRACK                           
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
         CLM   RF,3,SKENDCI                                                     
         BNH   RDFNXT6                                                          
         MVC   SKSTRCI,SKNXTCI     BUMP TO NEXT CI                              
         MVC   SKADDR,SKNXTCI                                                   
         SR    RF,RF                                                            
         ICM   RF,3,SKADDR                                                      
         BZ    RDFNXTA                                                          
         LH    R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    *+8                                                              
         LH    R0,CJTRKS                                                        
         AR    RF,R0                                                            
         BCTR  RF,0                                                             
         STH   RF,SKENDCI                                                       
*                                                                               
RDFNXT6  GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,SKADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   RDFNXTA+4                                                        
         LA    RF,W_DATA-W_INDEX                                                
         CLC   SKADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,W_DATA1-W_INDEX                                               
         STH   RF,SKDISP                                                        
         CLC   SKADDR,SKNXTCI      IS THIS FIRST REC OF CI                      
         BNE   RDFNXT0             NO                                           
         MVC   SKNXTCI(2),W_CINEXT YES SAVE START OF NEXT CI                    
         B     RDFNXT0                                                          
*                                                                               
RDFNXT8  MVI   DMCB+8,X'90'        SET EOF                                      
         B     RDFNXTB                                                          
RDFNXTA  MVI   DMCB+8,X'41'        FORMAT ERROR                                 
         CLI   SKACTN,ACTNREA                                                   
         BNE   *+10                                                             
         XC    SKFSTCI,SKFSTCI     RESET FOR NO I/O                             
RDFNXTB  XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
*                                                                               
RDFNXTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
         EJECT                                                                  
* SUBROUTINE TO READ RANDOM W_FILE RECORDS                                      
*                                                                               
RAN      NTR1                                                                   
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
         CLI   FUL,0                                                            
         BNE   RANE                TEST SILLY RECORD NUMBER                     
         OC    FUL,FUL                                                          
         BZ    RAN2A               SPECIAL CODE FOR RECORD ZERO                 
*                                                                               
RAN2     OC    SKADDR,SKADDR       READ FIRST BLOCK AND INITIALISE              
         BNZ   RAN4                                                             
RAN2A    LR    R0,R4               USE CALLERS BUFFER                           
         MVC   CIADDR,SKFSTCI                                                   
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
         LR    R1,R7               COPY SAVE INTO CXREC BUFFER                  
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
         OC    FUL,FUL                                                          
         BNZ   RAN4                                                             
         MVC   0(8,R3),SOFLAB     RETURN HEADER RECORD IF FUL=ZERO              
         MVC   WLINDEX,W_INDEX                                                  
         MVC   WLBATTR,W_BATTR                                                  
         MVC   WLDATA,W_DATA                                                    
         B     RANX                                                             
*                                                                               
RAN4     L     R0,FUL                                                           
         BCTR  R0,0                                                             
         C     R0,SKRECS                                                        
         BNE   RAN4B                                                            
         BAS   RE,RDFNXT           RECNUM IS ONE HIGHER THAN PREV               
         BE    RANX                                                             
         TM    DMCB+8,X'90'                                                     
         BO    RANE                                                             
         B     RANG                                                             
*                                                                               
RAN4B    LA    R0,1                TEST IF RECORD IN BUFFER                     
         CLC   SKADDR,SKFSTCI                                                   
         BE    RAN4C                                                            
         ICM   R0,15,W_RECS        R0 IS LOW RECORD/PAGE                        
RAN4C    C     R0,FUL              TEST LOW RECORD WITH REQUIRED                
         BH    RAN4E                                                            
         ICM   R0,15,W_RECH        R0 IS HIGH RECORD                            
RAN4D    C     R0,FUL              TEST HIGH RECORD WITH REQUIRED               
         BNL   RANC                RECORD IS IN THIS BLOCK                      
RAN4E    CLC   SKADDR,SKFSTCI                                                   
         BE    RAN4F                                                            
         XC    SKADDR,SKADDR       RECORD NOT IN BLOCK SO READ FIRST            
         B     RAN2                                                             
RAN4F    SR    R0,R0               GET MAX RECORDS FROM 1ST BLOCK               
         ICM   R0,15,W_RECS                                                     
         C     R0,FUL              TEST MAX RECORD WITH REQUIRED                
         BL    RANE                                                             
         LR    R1,R7               COPY SAVE INTO CXREC BUFFER                  
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
*                                                                               
RAN6     OC    SKNXTCI(2),SKNXTCI  CALLERS BUFFER HAS FIRST CI REC              
         BZ    RAN8                                                             
         LA    R0,CXREC            READ FIRST REC IN NEXT CI INTO CXREC         
         MVC   CIADDR,SKNXTCI                                                   
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
         SR    R0,R0               R0 CONTAINS LOW RECORD NEXT CI               
         ICM   R0,15,CXREC+W_RECS-W_INDEX                                       
RAN6A    C     R0,FUL                                                           
         BH    RAN8                                                             
RAN6B    LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LR    R1,R7                                                            
         SR    R1,R4                                                            
         LA    R1,SKEND-SKBCTRL(R1)                                             
         MOVE  ((RF),(R1)),(RE)                                                 
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
RAN6C    C     R0,FUL                                                           
         BE    RANC                RECORD IS IN 1ST BLOCK OF THIS CI            
         B     RAN6                                                             
*                                                                               
RAN8     CLC   SKADDR(2),SKENDCI   CALLERS BUFFER HAS THE HOME CI               
         BE    RANA                                                             
         MVC   CIADDR,SKADDR       BUMP TO NEXT TRACK                           
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LA    RF,1(RF)                                                         
         STH   RF,CIADDR                                                        
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,CXREC                  
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
*                                                                               
         CLC   W_USRID(10),CXREC+W_USRID-W_INDEX                                
         BNE   RANA                                                             
         CLC   W_CLASS,CXREC+W_CLASS-W_INDEX                                    
         BNE   RANA                                                             
*                                                                               
         SR    R0,R0               SET RO TO LOW RECORD IN BLOCK                
         ICM   R0,15,CXREC+W_RECS-W_INDEX                                       
RAN8A    C     R0,FUL                                                           
         BH    RANA                                                             
RAN8B    MVC   SKADDR,CIADDR                                                    
         LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LH    R1,CIBLKLN                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
RAN8C    C     R0,FUL              REC IS IN 1ST BLOCK OF THIS TRK              
         BE    RANC                                                             
         B     RAN8                                                             
*                                                                               
RANA     LA    R0,1                CALLERS BUFFER HAS THE HOME TRK              
         CLC   SKADDR,SKFSTCI                                                   
         BE    RANA2                                                            
         ICM   R0,15,W_RECS        SET R0 TO HIGH PAGE/RECORD                   
RANA2    C     R0,FUL                                                           
         BH    RANA4                                                            
         SR    R0,R0                                                            
         ICM   R0,15,W_RECH        SET R0 TO LOW PAGE/RECORD                    
RANA3    C     R0,FUL                                                           
         BNL   RANC                RECORD IS IN THIS BLOCK                      
RANA4    IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CLC   SKADDR+2(1),SKENDCI+2                                            
         BH    RANF                                                             
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,SKADDR,(R4)                   
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
         B     RANA                                                             
*                                                                               
RANC     LA    R0,1                CALLERS BUFFER HAS THE HOME BLOCK            
         LA    RE,W_DATA1                                                       
         XC    SKRECS,SKRECS                                                    
         CLC   SKADDR,SKFSTCI      TEST FOR FIRST BLOCK IN FILE                 
         BE    RANC0                                                            
         LA    RE,W_DATA                                                        
         ICM   R0,15,W_RECS        R0 IS LOW PAGE/RECORD IN BLOCK               
         ST    R0,SKRECS                                                        
RANC0    L     R1,FUL                                                           
         SR    R1,R0                                                            
         LA    R1,1(R1)            R1=RELATIVE REC NUM (FIRST=1)                
*                                                                               
RANC1    MVC   HALF,0(RE)          SEARCH FOR NTH RECORD BLOCK                  
         LH    R0,HALF                                                          
         CH    R0,=H'1'                                                         
         BNH   RANF                FORMAT ERROR ON END OF BLOCK                 
RANC2    SH    R1,=H'1'            DECR RECORD NUMBER IN BLOCK                  
         BZ    RANC5                                                            
         AR    RE,R0               BUMP TO NEXT RECORD IN BLOCK                 
         B     RANC1                                                            
*                                                                               
RANC5    MVC   SKLEN,0(RE)         SAVE LEN OF RECORD                           
         LH    R1,SKLEN                                                         
         CLC   0(2,RE),=H'1'                                                    
         BNH   RANF                FORMAT ERROR IF END OF BLOCK                 
         LA    R0,0(RE,R1)         SAVE DISPLACEMENT OF NEXT REC                
         SR    R0,R4                                                            
         STH   R0,SKDISP                                                        
*                                                                               
RANC6    MVC   SKRECS,FUL                                                       
*                                                                               
RAND     TM    PARM1,X'01'         TEST IF CALLER WANTS REC LEN                 
         BZ    *+12                                                             
         L     RF,APARM            YES RETURN LEN IN DMCB+6(2)                  
         STH   R1,22(RF)                                                        
         MOVE  ((R3),(R1)),(RE)    MOVE V/L REC TO CALLERS PARM4                
         B     RANX                                                             
*                                                                               
RANE     MVI   DMCB+8,X'90'        SET EOF/NOTFOUND                             
         B     RANH                                                             
RANF     MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     RANH                                                             
RANG     EQU   *                   SET DISK ERROR                               
*                                                                               
RANH     XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
         B     RANX                                                             
*                                                                               
RANX     CLI   DMCB+8,0                                                         
         XIT1                                                                   
         EJECT                                                                  
* SUBROUTINE TO CHANGE STATUS OF FILE - DRIVEN BY STPARM VALUES                 
*                                                                               
STAT     NTR1                                                                   
         MVI   DMCB+8,0            SET RETURN DATAMGR CODE                      
         MVI   STFLAG,0                                                         
*                                                                               
STAT0    CLI   STACTN,0            SET NI/OI BITS IF ACTION SET                 
         BNE   STAT0A                                                           
         TM    STVAL,W_STLIVE                                                   
         BZ    *+8                                                              
         OI    STFLAG,X'80'        SET FLAG FOR LIVE FILE                       
         TM    STVAL,W_STDEAD                                                   
         BZ    *+8                                                              
         OI    STFLAG,X'40'        SET FLAG FOR DEAD FILE                       
         B     STAT2                                                            
*                                                                               
STAT0A   CLI   STACTN,ACTNACT      TEST SET STATUS TO ACTIVE                    
         BNE   STAT0B                                                           
         MVI   STNI,255-W_STDEAD-W_STHO-W_STRUN-W_STPR                          
         MVI   STOI,W_STAC                                                      
         OI    STFLAG,X'80'        SET LIVE FLAG                                
         B     STAT1                                                            
*                                                                               
STAT0B   CLI   STACTN,ACTNHOL      TEST SET STATUS TO HOLD                      
         BNE   STAT0C                                                           
         MVI   STNI,255-W_STDEAD-W_STAC-W_STRUN-W_STPR                          
         MVI   STOI,W_STHO                                                      
         OI    STFLAG,X'80'        SET LIVE FLAG                                
         B     STAT1                                                            
*                                                                               
STAT0C   CLI   STACTN,ACTNDEL      TEST SET STATUS TO DELETED                   
         BNE   STAT0D                                                           
         MVI   STNI,255                                                         
         MVI   STOI,W_STDL                                                      
         OI    STFLAG,X'10'        SET DELETED FLAG                             
         B     STAT1                                                            
*                                                                               
STAT0D   CLI   STACTN,ACTNSEN      TEST SET STATUS TO SENT                      
         BNE   STAT0E                                                           
         MVI   STNI,255-W_STLIVE-W_STSE                                         
         MVI   STOI,W_STSE                                                      
         OI    STFLAG,X'40'        SET DEAD FLAG                                
         B     STAT1                                                            
*                                                                               
STAT0E   CLI   STACTN,ACTNKEE      TEST SET STATUS TO KEEP                      
         BNE   STAT0E1                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STKE                                                      
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT2                                                            
*                                                                               
STAT0E1  CLI   STACTN,ACTNPRO      TEST SET STATUS TO PROCESSED                 
         BNE   STAT0E2                                                          
         MVI   STNI,255-W_STRUN                                                 
         MVI   STOI,W_STPR                                                      
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT2                                                            
*                                                                               
STAT0E2  CLI   STACTN,ACTNRUN      TEST SET STATUS TO RUNNING                   
         BNE   STAT0E3                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STRUN                                                     
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT2                                                            
*                                                                               
STAT0E3  CLI   STACTN,ACTNSNG      TEST SET STATUS TO SENDING                   
         BNE   STAT0F                                                           
         MVI   STNI,255                                                         
         MVI   STOI,W_STSEN                                                     
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT2                                                            
*                                                                               
STAT0F   CLI   STACTN,ACTNUNK      TEST SET STATUS TO UNKEEP                    
         BNE   STAT0G                                                           
         MVI   STNI,255-W_STKE                                                  
         MVI   STOI,0                                                           
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT2                                                            
*                                                                               
STAT0G   CLI   STACTN,ACTNPUR      TEST SET STATUS TO PURGED                    
         BNE   STAT0H                                                           
         MVI   STNI,0                                                           
         MVI   STOI,0                                                           
         B     STAT2                                                            
*                                                                               
STAT0H   CLI   STACTN,ACTNRET      TEST SET NEW RETAIN INFO                     
         BNE   STAT0I                                                           
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         MVC   STINFO(2),UKINFO    GET RETAIN INFO FROM USER KEY                
         MVC   STINFO+2(1),UKFLAG                                               
         OC    STINFO(3),STINFO                                                 
         BNZ   STAT0H2                                                          
         DC    H'0',C'INVALID RETAIN DATE/TIME'                                 
STAT0H2  TM    STINFO+2,UKFLHRS    TEST IF PASSING HOURS                        
         BZ    STAT2                                                            
         MVC   DUB(3),DATEC        SET DATEC/TIMEI NOW                          
         MVC   DUB+3(2),STINFO     SET PASSED HOURS                             
         L     RF,=A(GETRETN)                                                   
         BASR  RE,RF               COMPUTE NEW RETAIN INFO                      
         MVC   STINFO(3),DUB1                                                   
         B     STAT2                                                            
*                                                                               
STAT0I   CLI   STACTN,ACTNUDAT     TEST SET UDATA IN INDEX                      
         BNE   STAT0J                                                           
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         MVC   STINFO(2),UKINFO    GET USER DATA FROM USER KEY                  
         B     STAT2                                                            
*                                                                               
STAT0J   DC    H'0'                INVALID ACTION                               
*                                                                               
STAT1    L     RE,PARM1            TEST FOR C'...RET' IN ACTION NAME            
         CLC   3(3,RE),=C'RET'                                                  
         BNE   *+10                                                             
         MVC   STINFO(3),=C'RET'   SET INFO TO UPDATE RETAIN INFO               
*                                                                               
STAT2    TM    STCTRL,X'01'        SET STATUS IN FILE RECORDS                   
         BZ    STAT4                                                            
         L     R5,STBUFFA          R5=A(I/O BUFFER FOR FILE RECS)               
         LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         MVC   0(2,R6),STFSTCI                                                  
         MVC   2(2,R6),FFS                                                      
         MVC   SVNEXT(2),STFSTCI                                                
         MVC   SVNEXT+2(2),=X'0100'                                             
         GOTO1 ,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                          
         TM    STCTRL,X'20'        TEST IF NATIVE CALL FROM USER                
         BZ    STAT2A                                                           
         CLC   SVNEXT,SKADDR       TEST IF FIRST REC IN USERS BUFFER            
         BNE   STAT2A                                                           
         MVC   CIADDR,SVNEXT       COPY USERS BUFFER INTO CXREC                 
         LH    R1,CIBLKLN                                                       
         LR    RF,R5                                                            
         LR    RE,R4                                                            
         MOVE  ((RF),(R1)),(RE)                                                 
         B     STAT2B                                                           
*                                                                               
STAT2A   OC    SVNEXT(2),SVNEXT    READ FIRST REC OF NEXT CI                    
         BZ    STAT4                                                            
         MVC   CIADDR,SVNEXT                                                    
         MVC   0(2,R6),CIADDR      SAVE CI ADDR IN CASE OF ERROR                
         MVC   2(2,R6),FFS                                                      
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD)                                      
         CLI   DMCB+8,0                                                         
         BNE   STAT2E                                                           
*                                                                               
STAT2B   CLC   CIADDR(2),STFSTCI   SAVE FIRST CI VALUES                         
         BNE   STAT2C                                                           
         MVC   SVDATA,W_INDEX      SVDATA CONTAINS INDEX OF 1ST CI              
         SR    RE,RE                                                            
         IC    RE,W_SEQ                                                         
         SH    RE,=H'1'                                                         
         STC   RE,SVSEQ            SVSEQ CONTAINS PREVIOUS CI SEQ NUM           
*                                                                               
         XC    DUB,DUB             SAVE RETENTION INFO                          
         TM    STFLAG,X'10'        TEST IF SETTING TO DELETED                   
         BO    STAT2B4             NO                                           
         TM    STFLAG,X'C0'        TEST IF SETTING TO LIVE/DEAD                 
         BZ    STAT2C              NO                                           
         CLC   STINFO(3),=C'RET'   YES TEST IF NEW RETAIN REQUIRED              
         BNE   STAT2C                                                           
         MVC   DUB+0(3),DATEC      SET DATEC/TIMEI NOW                          
         MVC   DUB+3(2),W_RETNL    SET LIVE RETENTION                           
         TM    STFLAG,X'80'                                                     
         BO    STAT2B5                                                          
         MVC   DUB+3(2),W_RETND    SET DEAD RETENTION                           
         B     STAT2B5                                                          
*                                                                               
STAT2B4  MVC   DUB+3(2),=X'0018'   SET 24 HOURS FOR DELETED                     
*                                                                               
STAT2B5  L     RF,=A(GETRETN)                                                   
         BASR  RE,RF               COMPUTE NEW RETAIN INFO                      
*                                                                               
STAT2C   IC    RE,SVSEQ            BUMP SAVED PREVIOUS CI SEQ NUM               
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         CLC   W_SEQ,SVSEQ         CHECK CI SEQ NUM IS ONE HIGHER               
         BE    STAT2C2                                                          
         TM    W_ATTB,W_ATXCI      TEST THIS IS XTNSN CI                        
         BZ    STAT2C3                                                          
         CLI   SVSEQ,LASTSEQP      LAST NORMAL SHOULD BE 255                    
         BNE   STAT2C3                                                          
         CLI   W_SEQ,FRSTXTN       FIRST XTNSN SHOULD BE 2                      
         BNE   STAT2C3                                                          
         MVI   SVSEQ,FRSTXTN                                                    
STAT2C2  CLC   W_KEY,SVKEY         CHECK SAME KEY                               
         BE    STAT2D                                                           
STAT2C3  MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     STAT2E                                                           
*                                                                               
STAT2D   MVC   SVNEXT(2),W_CINEXT  BUILD CI ADDR LIST                           
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         B     STAT3                                                            
*                                                                               
STAT2E   OI    STFLAG,X'08'        ERROR ON FILE I0                             
         CLI   DMCB+8,X'41'                                                     
         BE    *+8                                                              
         OI    STFLAG,X'04'        SET FLAG FOR DISK ERR                        
         LA    RE,STCIAS                                                        
         CR    R6,RE               TEST IF FIRST CI                             
         BNE   STAT2E1                                                          
STAT2E1  XC    SVDATA,SVDATA       PURGE INDEX ENTRY ON ERROR                   
         MVC   2(2,RE),FFS         ADJUST LIST SO ONLY ONE CI                   
         B     STAT4               GO AND DO INDEX                              
*                                                                               
STAT3    CLI   STACTN,0            SET NEW STATUS FROM VALUE                    
         BNE   *+14                                                             
         MVC   W_STAT,STVAL                                                     
         B     STAT3A                                                           
         NC    W_STAT,STNI         SET NEW STATUS FROM ACTION                   
         OC    W_STAT,STOI                                                      
*                                                                               
STAT3A   CLI   W_STAT,W_STPU       TEST IF NEW STATUS PURGED                    
         BNE   STAT3B                                                           
         XC    W_INDEX,W_INDEX     CLEAR WHOLE INDEX ENTRY                      
         MVI   SVDATA+W_STAT-W_INDEX,W_STPU                                     
         B     STAT3Y                                                           
*                                                                               
STAT3B   TM    STFLAG,X'C0'        TEST IF NEW STATUS LIVE/DEAD                 
         BZ    STAT3C                                                           
         OC    DUB(2),DUB          TEST IF NEW RETAIN REQUIRED                  
         BZ    STAT3C                                                           
         MVC   W_AGERD(3),DUB1     SET NEW COMPUTED RETAIN INFO                 
*                                                                               
STAT3C   CLI   STACTN,ACTNRET      TEST IF SETTING NEW RETAIN                   
         BNE   STAT3D                                                           
         MVC   W_AGERD(3),STINFO   SET PASSED RETAIN INFO                       
         B     STAT3X                                                           
*                                                                               
STAT3D   CLI   STACTN,ACTNUDAT     TEST IF SETTING USER INDEX DATA              
         BNE   STAT3E                                                           
         MVC   W_UDATA,STINFO      SET PASSED USER DATA                         
         B     STAT3X                                                           
*                                                                               
STAT3E   EQU   *                                                                
*                                                                               
STAT3X   CLC   CIADDR(2),STFSTCI   TEST IF FIRST CI                             
         BNE   *+10                                                             
         MVC   SVDATA,W_INDEX      SVDATA CONTAINS UPDATED INDEX DATA           
*                                                                               
STAT3Y   GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BE    STAT2A                                                           
         B     STAT2E                                                           
         SPACE 1                                                                
STAT4    TM    STCTRL,X'02'        SET STATUS IN INDEX RECORDS                  
         BZ    STATX                                                            
STAT4A   LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         NI    STFLAG,X'FE'        TURN OFF SWAPS BIT                           
STAT4B   CLC   2(2,R6),FFS         SORT CI ADDRS INTO ASCENDING ORDER           
         BE    STAT4B2                                                          
         CLC   2(2,R6),0(R6)       COMPARE NEXT ENTRY TO THIS                   
         BNL   STAT4B1                                                          
         XC    2(2,R6),0(R6)       SWAP IF IN WRONG ORDER                       
         XC    0(2,R6),2(R6)                                                    
         XC    2(2,R6),0(R6)                                                    
         OI    STFLAG,X'01'                                                     
STAT4B1  LA    R6,2(R6)            BUMP TO NEXT CI ADDR                         
         B     STAT4B                                                           
STAT4B2  TM    STFLAG,X'01'        DONE IF NO SWAPS THIS PASS                   
         BO    STAT4A                                                           
         ST    R6,STCILAST         SAVE A(LAST ENTRY IN CI ADDR LIST)           
*                                                                               
STAT4C   TM    STCTRL,X'40'        LOCK W_FILE UNLESS SPECIFIED                 
         BO    *+8                                                              
         BAS   RE,W_LOCK                                                        
         XC    FUL,FUL                                                          
         LA    R6,STCIAS           R6=A(SORTED LIST OF CI ADDRS)                
         TM    STCTRL,X'80'        TEST CALL BY ADD                             
         BZ    STAT4D              NO                                           
         CLC   2(2,R6),FFS         TEST IF ONLY ONE CI                          
         BE    STAT4C1             YES                                          
         L     R5,STCILAST         ADD MUST UPDATE FIRST CI LAST                
         MVC   2(2,R5),0(R6)                                                    
         MVC   4(2,R5),FFS         PUT FIRST CI AT END OF LIST                  
         MVC   CIADDR(2),0(R6)                                                  
         LA    R6,2(R6)                                                         
STAT4C1  CLI   OFFLINE,C'Y'        MUST READ FIRST INDEX IF ONLINE              
         BE    STAT4D                                                           
         MVC   CXADDR,=X'00010100'                                              
         L     R5,STBUFFA                                                       
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   STAT4I                                                           
*                                                                               
STAT4D   L     R5,STBUFFA          R5=A(I/O BUFFER FOR INDEX RECS)              
         CLC   0(2,R6),FFS                                                      
         BE    STAT4D1                                                          
         MVC   CIADDR(2),0(R6)     SET INDEX PAGE DISK ADDR                     
         BAS   RE,GETXPE                                                        
         BAS   RE,GETXAD                                                        
         CLC   FUL,CXADDR          TEST IF PAGE IN CORE                         
         BE    STAT4D3                                                          
         OC    FUL,FUL             TEST IF FIRST PAGE READ                      
         BZ    STAT4D2                                                          
STAT4D1  GOTO1 DATAMGR,DMCB,(X'00',DMWRT),,FUL                                  
         CLI   DMCB+8,0                                                         
         BNE   STAT4I              ERROR IN WRITE OF OLD PAGE                   
         CLC   0(2,R6),FFS                                                      
         BE    STAT4H                                                           
STAT4D2  GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   STAT4I              ERROR IN READ OF NEW PAGE                    
         MVC   FUL,CXADDR                                                       
STAT4D3  LH    RE,CXENTRY                                                       
         MH    RE,CINDXLN                                                       
         AR    R5,RE               R5=A(INDEX ENTRY)                            
*                                                                               
STAT4E   MVC   SVSEQ,W_SEQ         SAVE INDEX ENTRY CI SEQ NUM                  
         MVC   SVTYPE,W_TYPE                                                    
         MVC   SVATTB,W_ATTB                                                    
         TM    W_STAT,W_STCRE                                                   
         BZ    STAT4E1                                                          
         CLI   W_AGERT,X'FE'                                                    
         BNE   STAT4E1                                                          
         TM    STFLAG,X'20'        TEST IF SUB STATUS OF CREATING FILE          
         BZ    STAT4E1                                                          
         MVC   W_STAT,SVDATA+W_STAT-W_INDEX                                     
         OI    W_STAT,W_STCRE                                                   
         B     *+10                                                             
STAT4E1  MVC   W_INDEX,SVDATA      COPY INDEX ENTRY FROM FILE FIRST CI          
         CLI   W_STAT,W_STPU                                                    
         BNE   *+14                                                             
         XC    W_INDEX,W_INDEX     CLEAR INDEX ENTRY FOR PURGE                  
         B     STAT4G                                                           
         TM    W_ATTB,W_ATXTN                                                   
         BZ    STAT4E2                                                          
         TM    SVATTB,W_ATXCI                                                   
         BZ    STAT4E2                                                          
         OI    W_ATTB,W_ATXCI                                                   
*                                                                               
STAT4E2  TM    STCTRL,X'80'        TEST IF CALL FROM ADD LOGIC                  
         BZ    STAT4E3             NO                                           
         CLC   CIADDR(2),STFSTCI   YES USE FIRST CI SEQ NUM IN INDEX            
         BE    STAT4G                                                           
STAT4E3  MVC   W_SEQ,SVSEQ         RESTORE INDEX ENTRY CI SEQ NUM               
*                                                                               
STAT4G   CLC   STXDADR,CXADDR      UPDATE CALLERS INDEX PAGE IF SAME            
         BNE   STAT4G1                                                          
         LR    RF,R5                                                            
         S     RF,STBUFFA                                                       
         A     RF,STXCADR                                                       
         MVC   0(L'W_INDEX,RF),0(R5)                                            
STAT4G1  LA    R6,2(R6)                                                         
         B     STAT4D                                                           
*                                                                               
STAT4H   SH    R6,=H'2'            END OF INDEX UPDATE                          
         LA    RF,STCIAS                                                        
         CR    RF,R6                                                            
         BE    *+20                                                             
         CLC   0(2,R6),0(RF)       ADJUST LIST IF FIRST CI IS LAST              
         BNE   *+10                                                             
         MVC   0(2,R6),FFS                                                      
         TM    STCTRL,X'40'        UNLOCK W_FILE UNLESS SPECIFIED               
         BO    *+12                                                             
         BAS   RE,W_UNLK                                                        
         BAS   RE,RLSEWKR                                                       
         TM    STFLAG,X'08'        TEST FOR FORMAT ERROR IN CI                  
         BZ    STATX                                                            
         MVI   DMCB,X'41'                                                       
         TM    STFLAG,X'04'        TEST FOR DISK ERROR IN CI                    
         BZ    STATX                                                            
         MVI   DMCB,X'40'                                                       
         B     STATX                                                            
*                                                                               
STAT4I   BAS   RE,W_UNLK           ERROR ON INDEX I/O                           
         BAS   RE,RLSEWKR                                                       
         DC    H'0'                                                             
*                                                                               
STATX    CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
         EJECT                                                                  
* ADD RECORDS TO W_FILE. PARM3 NOT DEFINED. FILE ATTRIBUTES IN PARM4            
*                                                                               
* FILE CAN BE CREATED BY 'OPEN' COMMAND, FOLLOWED BY SUCCESSIVE 'ADD'           
* COMMANDS, WITH A FINAL 'CLOSE' COMMAND. ALTERNATIVELY A FILE CAN              
* BE CREATED BY A SUCCESSION OF 'DMPRINT' COMMANDS. IF THE FIRST CHRS           
* ARE *SOFSOF* THEN AN OPEN IS ASSUMMED AND IF THE FIRST CHRS ARE               
* *EOFEOF THEN A CLOSE IS PERFORMED.                                            
*                                                                               
* CLO     IS USED TO DO A NORMAL CLOSE OF A FILE (OR *EOF)                      
* CLO/PUR IS USED TO CLOSE AND PURGE A FILE BEING CREATED                       
* CLO/ERR IS USED TO CLOSE A FILE THAT HAS ABENDED                              
* CLO/USR IS USED TO CLOSE A FILE AND PASS SOME USER DATA                       
* CLO/USX IS USED TO CLOSE A FILE AND PASS SOME USER INDEX DATA                 
         SPACE 2                                                                
ADDPRT   CLC   WLSOFLAB,SOFLAB     FOR DMPRINT SOFSOF MEANS OPEN                
         BE    ADDOPN                                                           
*                                                                               
         CLC   WLSOFLAB(4),EOFLAB  FOR DMPRINT EOFEOF MEANS CLOSE               
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE IF CLO/ERR                   
         BNE   ADD                                                              
*                                                                               
         MVI   CLOTYP,CLOTNOR      SET NORMAL CLOSE                             
         CLC   WLSOFLAB,EOFLAB                                                  
         BE    ADDCLS1                                                          
         OI    CLOTYP,CLOTTMP      SET TEMP CLOSE                               
         CLC   WLSOFLAB,EOFTMP                                                  
         BE    ADDCLS1                                                          
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE                              
         CLC   WLSOFLAB,EOFERR                                                  
         BE    ADDCLS1                                                          
         DC    H'0'                *EOF UNRECOGNISED                            
         SPACE 2                                                                
ADDERR   DC    H'0',C'INVALID SEQ FOR OPEN/CLOSE/ADD'                           
         SPACE 2                                                                
ADDOPN   CLI   SKACTRL,0           TEST IF VALID OPEN COMMAND                   
         BNE   ADDERR                                                           
ADDOPN1  MVI   SKSCTRL,0           INITIALISE BUFFER FOR ADD                    
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         BAS   RE,OPN              OPEN NEW FILE                                
         B     ADDX                                                             
         SPACE 2                                                                
ADDCLS   MVI   CLOTYP,CLOTNOR      SET NORMAL CLOSE                             
         L     RE,PARM1                                                         
         CLC   0(7,RE),=C'CLO/PUR'                                              
         BNE   *+8                                                              
         MVI   CLOTYP,CLOTPUR      SET PURGE CLOSE IF CLO/PUR                   
         CLC   0(7,RE),=C'CLO/ERR'                                              
         BNE   *+8                                                              
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE IF CLO/ERR                   
         CLC   0(7,RE),=C'CLO/USR'                                              
         BNE   *+18                                                             
         MVI   CLOTYP,CLOTUSR      SET CLOSE WITH USER DATA                     
         L     RF,PARM3            AND SAVE USER DATA IN KEY AREA               
         MVC   CLOINF,UKUSRINF-UKRECD(RF)                                       
         CLC   0(7,RE),=C'CLO/USX'                                              
         BNE   *+18                                                             
         MVI   CLOTYP,CLOTUSX      SET CLOSE WITH USER INDEX DATA               
         L     RF,PARM3            AND SAVE USER DATA IN KEY AREA               
         MVC   SVUDATA,UKINFO-UKRECD(RF)                                        
*                                                                               
ADDCLS1  TM    SKACTRL,X'01'       EXIT IF NO FILE IS OPEN                      
         BZ    ADDX                                                             
         CLI   SKINTNO,0           MUST HAVE WRKF FILE IN BUFFER                
         BE    ADDERR                                                           
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   USERXNUM,SKEXTNO                                                 
         BNE   ADDERR              DOUBLE CHECK BUFFER OK                       
         BAS   RE,SETWKR                                                        
         OI    SKACTRL,X'04'                                                    
         LR    R5,R4                                                            
*                                                                               
ADDCLS3  LR    RF,R4               WRITE LAST BLOCK WITH EOF RECORD             
         AH    RF,SKDISP                                                        
         MVC   0(2,RF),=H'1'                                                    
         BAS   RE,ADDBLK                                                        
         BNE   ADDERRX                                                          
*                                                                               
ADDCLS4  MVI   P1,0                SET NORMAL CLOSE                             
         OC    W_RECH,W_RECH                                                    
         BNZ   *+8                                                              
         OI    CLOTYP,CLOTPUR      SET PURGE CLOSE IF EMPTY FILE                
         TM    CLOTYP,CLOTPUR                                                   
         BZ    *+8                                                              
         MVI   P1,1                SET ERROR CLOSE IF CLO/PUR                   
         BAS   RE,CLS                                                           
         B     ADDX                                                             
         SPACE 2                                                                
ADD      CLI   SKINTNO,0           MUST HAVE WRKF FILE IN BUFFER                
         BE    ADDERR                                                           
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   USERXNUM,SKEXTNO                                                 
         BNE   ADDERR              DOUBLE CHECK BUFFER OK                       
         BAS   RE,SETWKR                                                        
*                                                                               
ADD0     LR    R5,R4               FILE MUST HAVE BEEN OPENED                   
         TM    SKACTRL,X'01'                                                    
         BZ    ADDERR              INVALID ACTION NO PREV OPEN                  
*                                                                               
ADD1     TM    SKACTRL,X'02'       TEST FIRST ADD                               
         BO    ADD3                                                             
         OI    SKACTRL,X'02'                                                    
*                                                                               
ADD3     CLC   0(2,R3),=H'4'       V/L DATA HAS LEN IN 1ST TWO BYTES            
         BL    ADDX                                                             
         CLC   0(2,R3),=H'4096'                                                 
         BH    ADDX                IGNORE FUNNY LEN RECORDS                     
         ICM   R1,3,0(R3)                                                       
*                                                                               
ADD3X    STH   R1,SKLEN            PUT LEN IN SKLEN                             
*                                                                               
ADD8     LH    RF,CIBLKLN          TEST IF RECORD FITS IN BUFFER                
         SH    RF,SKDISP                                                        
         LH    RE,SKLEN                                                         
         LA    RE,2(RE)            NEED LEN+2 FOR END OF BUFFER                 
         CR    RF,RE                                                            
         BNL   ADDA                                                             
*                                                                               
         LR    RF,R5               CLEAR EOF FLAG                               
         AH    RF,SKDISP                                                        
         XC    0(2,RF),0(RF)                                                    
         BAS   RE,ADDBLK           SET REASON CODE TO NO ROOM FOR DATA          
         BNE   ADDERRX             WRITE BUFFER AND INIT NEW BUFFER             
         CLI   PARM3,X'81'                                                      
         BE    ADDX                                                             
         B     ADDF                                                             
*                                                                               
ADDA     LH    R1,SKLEN            ADJUST BLOCK ATTRIBUTES                      
         L     R0,SKBYTES                                                       
         AR    R0,R1                                                            
         ST    R0,SKBYTES          BUMP TOTAL BYTES                             
*                                                                               
         CH    R1,SKBYTEMX                                                      
         BNH   *+8                                                              
         STH   R1,SKBYTEMX         SAVE MAXIMUM RECORD LEN                      
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,15,W_RECH        SET HIGH RECORD IN BLOCK                     
         AH    R0,=H'1'                                                         
         STCM  R0,15,W_RECH                                                     
         TM    SKACTRL,X'80'       TEST IF FIRST LINE IN BLOCK                  
         BO    ADDA2                                                            
*                                                                               
         OI    SKACTRL,X'80'                                                    
         STCM  R0,15,W_RECS        SET LOW RECORD IN BLOCK                      
*                                                                               
ADDA2    EQU   *                                                                
*                                                                               
ADDB     LH    RF,SKDISP           MOVE DATA TO BUFFER                          
         AR    RF,R4                                                            
         ST    RF,FUL                                                           
*                                                                               
         SR    R1,R1               SKLEN IS DATA LENGTH                         
         ICM   R1,3,SKLEN                                                       
*                                                                               
         MOVE  ((RF),(R1)),(R3)    MOVE DATA                                    
         SR    R1,R1                                                            
         ICM   R1,3,SKLEN                                                       
         L     RF,FUL              RESTORE RF AFTER MOVE                        
         AR    RF,R1                                                            
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP           BUMP SKDISP                                  
         MVC   0(2,RF),=H'1'                                                    
*                                                                               
         CLC   SKLABEL,MYLABEL     TEST SKLABEL STILL GOOD                      
         BE    ADDX                                                             
         DC    H'0'                OH NO WHAT HAVE YOU DONE                     
*                                                                               
ADDF     LA    RF,W_DATA-W_INDEX   RESET BUFFER DISPLACEMENT                    
         STH   RF,SKDISP                                                        
         IC    RF,SKADDR+2         BUMP DISK ADDR FOR NEXT WRITE                
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   ADDG                                                             
         ICM   RF,3,SKADDR         BUMP TO NEXT TRACK                           
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
*                                                                               
ADDG     EQU   *                                                                
*                                                                               
ADDH     LH    R1,SKDISP           INITIALISE NEW BUFFER                        
         LA    RE,W_DATA                                                        
         LH    RF,CIBLKLN                                                       
         SR    RF,R1                                                            
         XCEF                                                                   
         NI    SKACTRL,X'3F'       RESET FIRST LINE                             
*                                                                               
ADDI     B     ADDA                RETURN TO PUT DATA IN BUFFER                 
*                                                                               
ADDERR1  MVI   BYTE,X'41'          FORMAT ERROR                                 
         B     ADDERRX                                                          
ADDERR2  MVI   BYTE,X'40'          DISK ERROR                                   
         B     ADDERRX                                                          
ADDERR3  MVI   BYTE,X'80'          END OF FILE ERROR                            
*                                                                               
ADDERRX  EQU   *                                                                
         MVI   P1,1                                                             
         BAS   RE,CLS              CLOSE FILE DUE TO ERROR ON ADD               
         MVC   PARM3(1),BYTE       ERROR CODE IS IN BYTE                        
*                                                                               
ADDX     B     DMWRKFX                                                          
         EJECT                                                                  
*************************************************************                   
*        ADD BLOCK TO WRKF                                  *                   
*************************************************************                   
         SPACE 1                                                                
ADDBLK   NTR1                                                                   
         CLC   SKADDR(2),SKENDCI   TEST DISK ADDR WITH LAST IN CI               
         BL    ADDBLK2             WRITE BLOCK IN THIS CI                       
         BH    ADDBLK1             WRITE BLOCK IN NEXT CI                       
         CLC   SKADDR+2(1),CIHIREC+1                                            
         BNE   ADDBLK2                                                          
         CLI   W_SEQ,LASTSEQ       TEST IF LAST BLOCK IN LAST CI                
         BNE   ADDBLK2                                                          
         TM    W_ATTB,W_ATXCI+W_ATXTN                                           
         BZ    ADDBLK2                                                          
         LR    RF,R5               SET FORCED END OF DATA IN BLOCK              
         AH    RF,SKDISP                                                        
         MVC   0(2,RF),=H'1'                                                    
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R5)                    
         CLI   DMCB+8,0                                                         
         BNE   ADDBLKE                                                          
         MVI   P1,0                SET NORMAL CLOSE                             
         BAS   RE,CLS                                                           
         MVI   PARM3,X'81'         RETURN FORCED END OF FILE                    
         B     XITEQU                                                           
*                                                                               
ADDBLK1  MVI   BYTE,2              GET A PART 2 CI                              
         BAS   RE,GETCI                                                         
         BE    ADDBLKX             OK GOT ONE                                   
         B     XITNEQ              ERROR - CODE IS IN BYTE                      
*                                                                               
ADDBLK2  GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R5)                    
         CLI   DMCB+8,0                                                         
         BNE   ADDBLKE                                                          
*                                                                               
ADDBLKX  B     XITEQU                                                           
*                                                                               
ADDBLKE  MVC   BYTE,DMCB+8                                                      
         B     XITNEQ                                                           
         EJECT                                                                  
*************************************************************                   
*        OPEN FILE - FILE ATTRIBUTES IN HEADER REC AT R3    *                   
*************************************************************                   
         SPACE 1                                                                
OPN      NTR1                                                                   
         BAS   RE,GETDATE          GET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
*                                                                               
         OC    WLUSRID,WLUSRID     USER ID SPECIFIED                            
         BNZ   OPN1A                                                            
         TM    WLFLAG,WLFLREFN     TEST IF FILE NUMBER PASSED                   
         BO    OPNERR1             ERROR - MUST HAVE USERID                     
         CLI   OFFLINE,C'Y'        TEST IF OFFLINE                              
         BE    OPNERR1             ERROR - MUST HAVE USERID                     
*                                                                               
         L     RE,=V(SSB)          ONLINE VALUE FROM UTL ENTRY                  
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBUTL-TCBD(RE)                                               
         MVC   WLUSRID,TUSER-UTLD(RE)                                           
*                                                                               
OPN1A    CLC   WLUSRID,=X'FFFF'    THIS USERID FUCKS UP WKR REAL BAD            
         BE    OPNERR1                                                          
         OC    WLUSRID,WLUSRID     ZERO IS NOT TOO GOOD EITHER                  
         BZ    OPNERR1                                                          
*                                                                               
         MVC   USERIDNO,WLUSRID    FIND WHAT WRKF FOR THIS USER                 
         BAS   RE,WHATWKRU                                                      
         MVC   SKINTNO,USERINUM    SAVE INTERNAL FILE NUM IN BUFF               
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL FILE NUM IN BUFF               
         MVC   W_FILE,USERWRKF                                                  
         MVC   VW_FILE,USERXNUM                                                 
         BAS   RE,SETWKR           SET CI DATA FOR THIS WRKF FILE               
*                                                                               
         TM    WLFLAG,WLFLREFN     TEST IF FILE NUMBER PASSED                   
         BZ    OPN3                                                             
*                                                                               
         MVC   CIRSN,WLFILENO      LOCATE 1ST CI FOR THIS REP                   
         BAS   RE,RSNXPE                                                        
         BAS   RE,GETCAD                                                        
         MVC   CIADDR+2(2),=X'0100'                                             
*                                                                               
         LH    RE,CICINDX          READ FILE AND VALIDATE                       
         MH    RE,CITRKS                                                        
         CLM   RE,3,CIADDR         TEST CI DISK ADDR WITH MIN VALUE             
         BH    OPNERR1                                                          
         CLC   CJSTTRK,CIADDR      TEST CI DISK ADDR WITH MAX VALUE             
         BNH   OPNERR1                                                          
         LR    R0,R4               READ CI INTO CALLERS BUFFER                  
         BAS   RE,RDFFST                                                        
         BNE   OPNERR1                                                          
         OC    0(2,R4),0(R4)       IF REPORT NOT PURGED                         
         BZ    OPN3                                                             
         CLC   WLUSRID,0(R4)       USER IDS MUST MATCH                          
         BNE   OPNERR1                                                          
*                                                                               
         TM    WLFLAG,WLFLRCOP     COPY VALUES FROM WKFILE                      
         BZ    OPN2                                                             
         MVC   WLINDEX,W_INDEX-W_RECD(R4)                                       
         MVC   WLBATTR,W_BATTR-W_RECD(R4)                                       
         MVC   WLDATA,W_DATA-W_RECD(R4)                                         
OPN2     TM    WLFLAG,WLFLMOD      TEST OPEN FOR UPDATE                         
         BO    OPN3                                                             
*                                                                               
         MVC   SKFSTCI,CIADDR      PURGE EXISTING FILE                          
         MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         XC    STPARM,STPARM       SET ACTION VALUES FOR STATUS CHANGE          
         MVC   STFSTCI,SKFSTCI                                                  
         MVI   STACTN,ACTNPUR                                                   
         MVI   STCTRL,X'23'        SET INDEX CHANGE REQUIRED                    
         LA    RE,CXREC            USE CXREC AS I/O BUFFER                      
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO STATUS CHANGE ROUTINE                   
         B     OPN1A                                                            
*                                                                               
OPN3     LA    RE,WLSYSPRG         SCAN WLSYSPRG FIELD                          
         LA    RF,4                                                             
OPN3A    CLI   0(RE),C'A'          REPLACE SPACES BY DOTS                       
         BNL   *+8                                                              
         MVI   0(RE),C'.'                                                       
         LA    RE,1(RE)                                                         
         BCT   RF,OPN3A                                                         
*                                                                               
OPN4     CLI   WLCLASS,C'A'        DEFAULT FILE CLASS                           
         BNL   *+8                                                              
         MVI   WLCLASS,C' '        SET TO BLANK IF < A                          
*                                                                               
OPN5     TM    WLFLAG,WLFLMOD                                                   
         BNZ   OPN5A                                                            
         LR    RE,R4               INITIALISE CALLERS BUFFER                    
         LH    RF,CIBLKLN                                                       
         XCEF                                                                   
*                                                                               
OPN5A    LR    R5,R4               R5=A(CALLERS BUFFER TO BUILD HDR)            
         MVC   W_USRID,WLUSRID     COPY USER                                    
         MVC   W_FILEID,WLFILEID   FILE ID                                      
         MVC   W_TYPE,WLTYPE       TYPE                                         
         MVC   W_ATTB,WLATTB       ATTRIBS                                      
         MVC   W_UDATA,WLUDATA     USER DATA                                    
         MVC   SVUDATA,WLUDATA                                                  
*                                                                               
OPN5B    MVC   W_STAT,WLSTAT       COPY STATUS FROM HEADER                      
         OI    W_STAT,W_STCRE      SET TEMP BIT                                 
         CLI   W_STAT,W_STCRE      IF STATUS IS TEMP-PURGED                     
         BNE   *+8                                                              
         OI    W_STAT,W_STAC       SET ACTIVE BIT                               
*                                                                               
OPN5C    MVC   W_RETNL,WLRETNL     SET LIVE & DEAD RETAIN FROM HDR              
         MVC   W_RETND,WLRETND                                                  
         OC    W_RETNL,W_RETNL     IF ZERO USE DEFAULT RETAINS                  
         BNZ   *+10                                                             
         MVC   W_RETNL,DEFRETNL    DEFAULT LIVE                                 
         OC    W_RETND,W_RETND                                                  
         BNZ   *+10                                                             
         MVC   W_RETND,DEFRETND    DEFAULT DEAD                                 
*                                                                               
OPN5D    MVC   W_AGELD,WLDATEL     SET CREATED DATE/TIME FROM HDR               
         MVC   W_DATEL,WLDATEL                                                  
         MVC   W_TIMEL,WLTIMEL                                                  
         MVC   W_AGELT,WLAGELT                                                  
         MVC   W_DATED,WLDATED                                                  
         MVC   W_TIMED,WLTIMED                                                  
         MVC   W_PRCNT,WLPRCNT     AND LAST KNOWN PRTD/SENT INFO                
         MVC   W_PRLOC,WLPRLOC                                                  
         MVC   W_PRSYM,WLPRSYM                                                  
*                                                                               
OPN5E    TM    WLFLAG,WLFLRSET     RESET RETAIN                                 
         BO    OPN5F                                                            
         MVC   W_AGERD(3),WLAGERD  RETAIN DATE/TIME FROM HEADER                 
         OC    WLAGERD(3),WLAGERD                                               
         BNZ   OPN5G                                                            
*                                                                               
OPN5F    MVC   DUB+0(3),DATEC      COMPUTE RETENTION FROM TODAYS DATE           
         MVC   DUB+3(2),W_RETNL                                                 
         TM    W_STAT,W_STDEAD     PLUS LIVE OR DEAD HOURS                      
         BZ    *+10                                                             
         MVC   DUB+3(2),W_RETND                                                 
         L     RF,=A(GETRETN)                                                   
         BASR  RE,RF                                                            
         MVC   W_AGERD(3),DUB1     SET RETENTION DATE/TIME                      
*                                                                               
OPN5G    MVC   W_DESC,WLDESC       SET FILE DESCRIPTION                         
         OC    W_DESC,SPACES                                                    
*                                                                               
OPN5H    MVC   W_PSWD,WLPSWD       SET PASSWORD VALUE                           
         OC    W_PSWD,SPACES                                                    
         CLC   W_PSWD,SPACES                                                    
         BE    *+8                                                              
         OI    W_ATTB,W_ATPW       SET PASSWORD PROTECTED ATTRIBUTE             
*                                                                               
         MVC   W_MAKER,WLMAKER     SET SYS/PRG/SUBPRG                           
         CLI   W_MAKER,C' '                                                     
         BH    *+10                                                             
         XC    W_MAKER,W_MAKER     CLEAR IF NOT PROPERLY DEFINED                
*                                                                               
         TM    WLFLAG,WLFLRCOP     VALUES COPIED FROM WKFILE                    
         BZ    *+12                                                             
         TM    WLFLAG,WLFLRSET     RESET RETAIN                                 
         BZ    OPN5M                                                            
*                                                                               
         MVI   W_STAT,W_STAC+W_STCRE  SET ACTIVE+CRE                            
*                                                                               
         MVC   W_AGELD,DATEC       SET CREATED DATE/TIME FROM NOW               
         MVC   W_DATEL,DATEC                                                    
         MVC   W_TIMEL,TIMEB                                                    
         MVC   W_AGELT,TIMEC                                                    
         MVC   W_DATA1(2),=H'1'    SET EOF FLAG AT START                        
*                                                                               
OPN5M    MVI   BYTE,1              GET A PART1 CI                               
         BAS   RE,GETCI                                                         
         BE    OPN5O               OK GOT ONE                                   
         B     OPNERRX             ERROR - CODE IN BYTE                         
*                                                                               
OPN5O    MVC   WLREPRNO,W_FILENO   RETURN ASSIGNED FILE NUMBER                  
*                                                                               
         MVC   SKPAGE(4),P1        SAVE INDEX DATA IN BUFFER                    
         MVC   SKINDEX,W_INDEX                                                  
         OI    SKACTRL,X'01'       SET FILE OPEN FLAG                           
         MVI   PARM3,0                                                          
         TM    WLFLAG,WLFLMOD                                                   
         BZ    OPNX                                                             
*                                                                               
         MVC   SKBYTES,W_FSIZE                                                  
         MVC   SKBYTEMX,W_MAXRL                                                 
*                                                                               
APEN010  MVC   CIADDR,WLTTBR                                                    
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
APEN020  XC    FUL,FUL                                                          
         MVC   SKADDR,CIADDR       SAVE CURRENT CIADDR                          
         MVC   HALF,CIADDR                                                      
         SR    RE,RE                                                            
         LH    RF,HALF                                                          
         MVC   FUL+2(2),CITRKS     FUL=TRKS PER PART1                           
         CLC   CIADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BL    APEN025                                                          
         MVC   FUL+2(2),CJTRKS     FUL=TRKS PER PART2                           
         SR    R0,R0                                                            
         ICM   R0,3,CJSTTRK                                                     
         SR    RF,R0                                                            
*                                                                               
APEN025  D     RE,FUL              DIVIDE BY TRKS PER CI                        
         MH    RF,FUL+2            AND MULTIPLY BACK                            
         CLC   CIADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BL    APEN030                                                          
         SR    R0,R0                                                            
         ICM   R0,3,CJSTTRK                                                     
         AR    RF,R0                                                            
*                                                                               
APEN030  STH   RF,SKSTRCI                                                       
         MVC   SKSTRCI+2(2),=X'0100'                                            
         L     RE,FUL                                                           
         BCTR  RE,0                                                             
         AR    RE,RF                                                            
         STH   RE,SKENDCI                                                       
         MVC   SKENDCI+2(1),CIHIREC+1                                           
         MVI   SKENDCI+3,0                                                      
*                                                                               
APEN040  LA    R1,W_DATA                                                        
         CLC   SKADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BNL   *+18                                                             
         CLC   SKSTRCI,SKADDR                                                   
         BNE   *+8                                                              
         LA    R1,W_DATA1                                                       
*                                                                               
APEN050  SR    R0,R0                                                            
         ICM   R0,3,0(R1)                                                       
         BNZ   *+6                                                              
         DC    H'0'                BAD LENGTH ON FILE                           
*                                                                               
         CLC   0(2,R1),=X'0001'                                                 
         BE    APEN060                                                          
         AR    R1,R0                                                            
         B     APEN050                                                          
*                                                                               
APEN060  SR    R1,R5                                                            
         STH   R1,SKDISP                                                        
         OI    SKACTRL,X'80'       NOT FIRST IN BLOCK                           
*                                                                               
         B     OPNX                                                             
*                                                                               
OPNERR1  MVI   PARM3,X'41'         FORMAT ERROR                                 
         B     OPNX                                                             
OPNERR2  MVI   PARM3,X'40'         DISK ERROR                                   
         B     OPNX                                                             
OPNERR3  MVI   PARM3,X'80'         END OF FILE                                  
         B     OPNX                                                             
OPNERRX  MVC   PARM3,BYTE          ERROR IN BYTE                                
         B     OPNX                                                             
*                                                                               
OPNX     CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
         EJECT                                                                  
* SUBROUTINE TO CLOSE FILE - DRIVEN BY CLOSE TYPE IN P1                         
*                                                                               
CLS      NTR1                                                                   
         LR    R5,R4               R5=A(CALLERS BUFFER)                         
         BAS   RE,GETDATE          GET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
         MVC   P1+1(1),W_SEQ       NORMAL CLOSE SAVE BUFFER DATA                
         CLI   P1+1,0                                                           
         BNE   *+8                                                              
         MVI   P1+1,1              NUMBER OF CIS                                
         XC    P1+2(2),P1+2                                                     
         TM    W_ATTB,W_ATXTN+W_ATXCI                                           
         BZ    CLS0                                                             
         MVC   P1+2(1),W_SEQ       NUMBER OF EXTENSION CIS                      
         MVI   P1+3,1              SET WE ARE NOW IN EXTENSION MODE             
*                                                                               
CLS0     CLI   P1,0                TEST ERROR CLOSE OR CLO/PUR                  
         BNE   CLS1                YES WE DONT NEED THE FOLLOWING DATA          
         MVC   P3(4),W_RECH        NUMBER OF RECORDS                            
         MVC   P5,SKBYTES          NUMBER OF CHRS                               
         MVC   P6+2(2),SKBYTEMX    NUMBER OF CHRS PER LINE MAXIMUM              
         XC    P7,P7               RETAIN INFO NOT CHANGED                      
         TM    ADDWHY,X'01'        TEST IF CLOSING EMPTY FILE                   
         BZ    CLS1                NO                                           
*                                                                               
         MVC   DUB+0(3),DATEC      YES COMPUTE NEW SHORT RETAIN                 
         MVC   DUB+3(2),W_RETNL                                                 
         L     RF,=A(GETRETN)                                                   
         BASR  RE,RF                                                            
         MVC   P7(3),DUB1          SAVE NEW RETAIN DATE/TIME                    
*                                                                               
CLS1     MVC   CIADDR,SKSTRCI      SET FIRST RECORD IN LAST CI                  
         XC    FUL,FUL                                                          
         IC    RE,W_SEQ                                                         
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         LA    R6,STCIAS           R6=A(AREA TO BUILD LIST OF CI ADDRS)         
*                                                                               
CLS2     GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
         MVC   DUB(2),W_CIPREV     SAVE LINK BACK TO PREV CI                    
         MVC   W_CINEXT,FUL        SET LINK FORWARD TO NEXT CI                  
*                                                                               
CLS2A    CLI   P1+2,0              TEST IF EXTENSION CI'S PRESENT               
         BE    CLS2B                                                            
         CLI   P1+3,0              TEST IF BACK TO NORMAL CI                    
         BNE   *+12                                                             
         OI    W_ATTB,W_ATXTN                                                   
         B     CLS2B                                                            
         TM    W_ATTB,W_ATXTN+W_ATXCI                                           
         BNO   CLSERR1                                                          
         CLI   W_SEQ,FRSTXTN       TEST IF FIRST EXTENSION CI                   
         BNE   CLS2C                                                            
         CLI   SVSEQ,FRSTXTNP                                                   
         BNE   CLSERR1                                                          
         MVI   P1+1,LASTSEQ        SET 255 NORMAL CIS                           
         MVI   P1+3,0              SET NEXT CI IS NORMAL                        
         MVI   SVSEQ,LASTSEQP      AND SHOULD HAVE W_SEQ=255                    
         B     CLS4                                                             
*                                                                               
CLS2B    OC    DUB(2),DUB                                                       
         BNZ   CLS2C                                                            
         CLI   SVSEQ,2             ADJUST SEQ NUM OF FIRST CI OF MULTI          
         BNE   *+8                                                              
         MVI   W_SEQ,1                                                          
CLS2C    SR    RE,RE               CHECK SEQ NUM IS VALID                       
         IC    RE,SVSEQ                                                         
         BCTR  RE,0                                                             
         STC   RE,SVSEQ                                                         
         CLC   W_SEQ,SVSEQ                                                      
         BNE   CLSERR1                                                          
*                                                                               
CLS4     TM    CLOTYP,CLOTTMP      TEST TEMPORARY CLOSE                         
         BO    *+8                                                              
         NI    W_STAT,255-W_STCRE  TURN OFF TEMPORARY FILE FLAG                 
*                                                                               
CLS4B    TM    CLOTYP,CLOTERR      TEST IF CLO/ERR                              
         BZ    CLS5                                                             
         OI    W_ATTB,W_ATERR      YES SET FILE IS IN ERROR                     
*                                                                               
CLS5     CLI   P1,0                TEST IF ERROR CLOSE                          
         BE    CLS6                                                             
         XC    W_INDEX,W_INDEX     CLEAR INDEX IF ERROR CLOSE                   
*                                                                               
CLS6     OC    DUB(2),DUB          SET VALUES IN FIRST CI                       
         BNZ   CLS8                                                             
         MVC   W_NCI,P1+1          SET TOTAL NUMBER OF CIS                      
         SR    R1,R1                                                            
         ICM   R1,1,P1+2           R1=W_SEQ OF HIGHEST XTNSN CI                 
         BZ    *+10                                                             
         BCTR  R1,0                                                             
         STC   R1,W_NCIX           SET TOTAL NUMBER OF XTNSN CIS                
         MVC   W_RECS,P3           SET TOTAL NUMBER OF RECORDS                  
*                                                                               
         MVC   W_TTBR,SKADDR       SAVE LAST BLOCK ADDRESS                      
*                                                                               
CLS6A    SR    RF,RF               COMPUTE SIZE FACTOR                          
         L     RF,P5                                                            
         C     RF,=F'131072'       IF 1-128K BYTES                              
         BH    CLS6B                                                            
         SRL   RF,10               DIVIDE BY 1024                               
         B     CLS6X                                                            
*                                                                               
CLS6B    C     RF,=F'8388608'      IF 128K-8M BYTES                             
         BH    CLS6C                                                            
         SRL   RF,17               DIVIDE BY 128K                               
         A     RF,=F'128'          ADD 128                                      
         B     CLS6X                                                            
*                                                                               
CLS6C    SRL   RF,20               8M => DIVIDE BY 1M                           
         A     RF,=F'191'          ADD 191                                      
         B     CLS6X                                                            
*                                                                               
CLS6X    CH    RF,=H'255'          255 IS THE MAX 64M=>                         
         BNH   *+8                                                              
         LH    RF,=H'255'                                                       
         STC   RF,W_AGES           SAVE SIZE FACTOR                             
*                                                                               
CLS7     SR    RE,RE               COMPUTE AVERAGE RECORD LENGTH                
         L     RF,P5                                                            
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
         BNZ   *+10                                                             
         SR    RF,RF                                                            
         B     *+6                                                              
         DR    RE,R0                                                            
         STCM  RF,3,W_AVGRL                                                     
*                                                                               
         MVC   W_FSIZE,SKBYTES                                                  
         MVC   W_MAXRL,SKBYTEMX                                                 
*                                                                               
         OC    P7,P7               TEST IF NEW RETAIN REQUIRED                  
         BZ    *+10                                                             
         MVC   W_AGERD(3),P7       SET NEW RETAIN DATE/TIME                     
*                                                                               
         TM    CLOTYP,CLOTUSX      TEST IF CLOSE WITH USER INDEX DATA           
         BZ    *+10                                                             
         MVC   W_UDATA,SVUDATA                                                  
*                                                                               
CLS8     GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         OC    DUB(2),DUB          TEST IF FIRST CI                             
         BZ    CLSA                                                             
         MVC   FUL,CIADDR          SAVE ADDR OF THIS CI                         
         MVC   CIADDR(2),DUB       SAVE ADDR OF PREV CI                         
         B     CLS2                                                             
*                                                                               
CLSA     MVC   STFSTCI,CIADDR      SAVE DISK ADDR OF FIRST CI                   
         MVC   SVDATA,W_INDEX      SET PARAMS FOR INDEX STATUS CHANGE           
         XC    STPARM,STPARM                                                    
         MVC   STVAL,W_STAT        USE STATUS VALUE IN FIRST CI                 
         MVI   STCTRL,X'82'        SET UPDATE INDEX ON ADD                      
         MVC   STFSTCI(2),CIADDR                                                
         LA    RE,CXREC            USE CXREC AS INDEX I/O AREA                  
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO1 INDEX UPDATE ROUTINE                   
         BNE   CLSERR3                                                          
*                                                                               
CLSC     MVI   PARM3,0                                                          
         MVI   SKACTRL,X'00'                                                    
         XC    SKFCTRL,SKFCTRL     CLEAR FILE INFO AND SET FIRST CI             
         MVC   SKFSTCI(2),STFSTCI                                               
         MVC   SKFSTCI+2(2),=X'0100'                                            
         XC    SKXCTRL,SKXCTRL     CLEAR INDEX INFO                             
         LR    R0,R4               SET FILE INFO FOR FIRST CI                   
         MVC   CIADDR,SKFSTCI                                                   
         BAS   RE,RDFADD                                                        
         B     CLSX                                                             
*                                                                               
CLSERR1  MVI   PARM3,X'41'         FORMAT ERROR ON FILE UPDATE                  
         B     *+8                                                              
CLSERR2  MVI   PARM3,X'40'         DISK ERROR ON FILE UPDATE                    
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'00'                                                    
         B     CLSX                                                             
CLSERR3  XC    SKFCTRL,SKFCTRL     ERROR ON INDEX UPDATE                        
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'00'                                                    
         DC    H'0'                                                             
*                                                                               
CLSX     CLI   OFFLINE,C'Y'        IF ONLINE RETURN GLOBAL WRKF ID              
         BE    CLSXX                                                            
         TM    CLOTYP,CLOTNOR      BUT ONLY IF A NORMAL CLOSE                   
         BZ    CLSXX                                                            
         L     RE,=V(SSB)                                                       
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBWRKA-TCBD(RE)                                              
         LA    RE,72+16(RE)        POINT TO WRKF GLOBAL IN MNTR'S W/S           
         MVC   0(8,RE),0(R4)       SET WRKF KEY IN GLOBAL AREA                  
*                                                                               
CLSXX    CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
         EJECT                                                                  
*************************************************************                   
* GET FREE CONTROL INTERVAL BYTE= PART 1 OR 2               *                   
* RETURN BYTE=0 OK ELSE BYTE=ERROR RETURN CC NEQ            *                   
*************************************************************                   
         SPACE 1                                                                
GETCI    ST    RE,SAVERE                                                        
         XC    EOFCNT(8),EOFCNT    CLEAR EOF COUNTERS                           
         CLI   OFFLINE,C'Y'                                                     
         BNE   *+10                                                             
         MVC   EOFMAX(6),EOFMAXOF                                               
GETCI2   MVC   P1(1),BYTE          SET WHAT PART CI WANTED                      
         BAS   RE,GCI              GET NEW CI                                   
         CLC   P1,FFS                                                           
         BE    GETCIERR            DISK ERROR                                   
         OC    P1,P1                                                            
         BNZ   GETCIOK                                                          
         LH    R1,EOFCNT           BUMP END OF FILE COUNTER                     
         LA    R1,1(R1)                                                         
         STH   R1,EOFCNT                                                        
         CH    R1,EOFMAX                                                        
         BH    GETCIEOF            RETURN EOF IF EXCEEDS MAX COUNT              
         STIMER WAIT,BINTVL=EOFBIN                                              
         B     GETCI2              BACK AND TRY AGAIN                           
*                                                                               
GETCIEOF MVI   BYTE,X'80'          EOF - NONE AVAILABLE                         
         B     GETCIXIT                                                         
GETCIERR MVI   BYTE,X'40'          DISK ERROR                                   
         B     GETCIXIT                                                         
GETCIOK  MVI   BYTE,0              OK GOT ONE                                   
         B     GETCIXIT                                                         
*                                                                               
GETCIXIT L     RE,SAVERE                                                        
         CLI   BYTE,0              SET CC                                       
         BR    RE                                                               
         EJECT                                                                  
*************************************************************                   
* SEARCH INDEX FOR ENTRY FOR NEW CONTROL INTERVAL           *                   
* R4=A(BUFFER) P1=01 OR 02 FOR SMALL OR LARGE CIS           *                   
*                                                           *                   
* P1(4) SET TO ZEROS=EOF,FFS=ERROR,OR ELSE INDEX PAGE ENTRY *                   
* P2(4) SET TO FILE SEQUENCE NUMBER                         *                   
* P3(4) USED TO CONTROL ERROR RETRYS                        *                   
*************************************************************                   
         SPACE 1                                                                
GCI      NTR1                                                                   
         BAS   RE,W_LOCK           LOCK W_FILE DURING SEARCH OF INDEX           
         XC    P3,P3                                                            
         MVC   P3(1),P1            SAVE WANT SMALL/LARGE CI'S FLAG              
GCIRETRY MVC   FLAG,P3                                                          
         TM    FLAG,X'01'          SET DATE/TIME FOR RETENTION                  
         BO    GCI0                                                             
         BAS   RE,GETDATE                                                       
         BAS   RE,GETTIME                                                       
         B     GCI1                                                             
*                                                                               
GCI0     EQU   *                                                                
         TM    WLFLAG,WLFLREFN     TEST IF FILE REF GIVEN                       
         BZ    GCI1                NO                                           
         BAS   RE,GETXPE           GET INDEX PAGE/ENTRY FROM CIADDR             
         MVC   P1,CXPAGE           P1=INDEX PAGE/ENTRY TO USE                   
         XC    P2,P2                                                            
         MVC   P2+2(2),WLFILENO    P2=FILE NUM TO USE                           
         MVC   W_FILENO,WLFILENO                                                
         XC    CXADDR,CXADDR       SET NO INDEX PAGE IN CORE                    
         B     GCIK                                                             
*                                                                               
GCI1     XC    P2,P2               SET P2 TO HIGH FILE NUM FOR USERID           
         LA    RE,AVSTAT                                                        
         LA    RF,AVTBL                                                         
GCI1A    XC    0(L'AVTBL,RF),0(RF) SET TABLE OF STATUS VALUES                   
         MVC   0(2,RF),0(RE)       SET STATUS BITS/FLAG                         
         MVC   6(3,RF),FFS         SET OLDEST DATE/TIME                         
         CLI   0(RF),X'FF'                                                      
         BNE   GCI1B                                                            
         ST    RF,AVTBLX           SAVE END OF TABLE ADDRESS                    
         MVC   L'AVTBL(L'AVTBL,RF),0(RF) CREATE EXTRA END OF TBL ENTRY          
         B     GCI2                                                             
GCI1B    LA    RE,2(RE)                                                         
         LA    RF,L'AVTBL(RF)                                                   
         B     GCI1A                                                            
*                                                                               
GCI2     BAS   RE,CXLOOPI          R5=A(PART1 INDEX ENTRY IN CXREC)             
         USING W_RECD,R5                                                        
         XC    WRKFXPEA,WRKFXPEA                                                
         XC    WRKFXPEV,WRKFXPEV                                                
         TM    FLAG,X'01'                                                       
         BO    GCI3                                                             
         CLI   OFFLINE,C'Y'        MUST READ FIRST INDEX IF ONLINE              
         BE    GCI2A                                                            
         MVC   CXADDR,=X'00010100'                                              
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,CXREC                  
         ORG   *-2                                                              
         BAS   RE,RSRVWKR                                                       
         XC    CXADDR,CXADDR       SET NO INDEX PAGE IN CORE                    
GCI2A    BAS   RE,CXLOOPJ          R5=A(PART2 INDEX ENTRY IN CXREC)             
         L     RE,WRKFXPE+24       BUMP TOTAL PART2 SEARCHES                    
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+24                                                    
         SR    R1,R1                                                            
         ICM   R1,1,USERINUM       MAKE SURE IM NOT A FUCKING IDIOT             
         BZ    GCI4                                                             
         CLM   R1,1,WRKFLST+2                                                   
         BH    GCI4                                                             
         SLL   R1,5                EACH WRKFXPE ENTRY IS 32 BYTES WIDE          
         LA    R1,WRKFXPE(R1)                                                   
         L     RE,24(R1)           BUMP PART2 SEARCHES FOR THIS WRKF            
         LA    RE,1(RE)                                                         
         ST    RE,24(R1)                                                        
         B     GCI4                                                             
*                                                                               
GCI3     TM    FLAG,X'80'          TEST WHICH TYPE OF PART1 SEARCH              
         BO    GCI3A                                                            
         L     RE,WRKFXPE+08       BUMP NEW FILE PART1 SEARCHES                 
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+08                                                    
         B     GCI3B                                                            
GCI3A    L     RE,WRKFXPE+16       BUMP OLD FILE PART1 SEARCHES                 
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+16                                                    
GCI3B    CLI   RSNF,0              FIND WHERE TO START PART1 SEARCH             
         BE    GCI4                                                             
         CLC   USERINUM,WRKFLST+2  CHECK WITH TOTAL NUMBER OF FILES             
         BNH   *+6                                                              
         DC    H'0'                DIE IF INVALID INTERNAL WKR NUM              
GCI3C    LH    R0,CIPAGES                                                       
         OC    CJCITOT,CJCITOT                                                  
         BZ    GCI3D                                                            
         LH    R0,CJPAGE                                                        
         OC    CJENTRY,CJENTRY                                                  
         BZ    *+8                                                              
         AH    R0,=H'1'                                                         
GCI3D    LTR   R0,R0               R0=NUM OF PART1 INDEX PAGES                  
         BNZ   *+6                                                              
         DC    H'0'                                                             
         ST    R0,WRKFXPEV         SET NUMBER OF PART1 INDEX PAGES              
         SR    R1,R1                                                            
         IC    R1,USERINUM                                                      
         SLL   R1,5                EACH WRKFXPE ENTRY IS 32 BYTES WIDE          
         LA    R1,WRKFXPE(R1)                                                   
         ST    R1,WRKFXPEA         R1=A(LAST PAGE/ENTRY FOR THIS WRKF)          
         TM    FLAG,X'80'                                                       
         BO    GCI3E                                                            
         L     RE,08(R1)           BUMP PART ONE NEW FILE SEARCHES              
         LA    RE,1(RE)                                                         
         ST    RE,08(R1)                                                        
         B     GCI3F                                                            
GCI3E    L     RE,16(R1)           BUMP PART ONE OLD FILE SEARCHES              
         LA    RE,1(RE)                                                         
         ST    RE,16(R1)                                                        
GCI3F    CLC   0(2,R1),=X'FFFF'    TEST IF THIS IS FIRST TIME                   
         BNE   GCI3I               NO                                           
         CLC   WRKFXPE(2),=X'FFFF' YES TEST TO START AT A RANDOM PAGE           
         BE    GCI3G               YES                                          
         SR    RE,RE               NO START AT FIRST PAGE                       
         B     GCI3H                                                            
GCI3G    ICM   RE,12,TIMEC         COMPUTE A RANDOM START PAGE                  
         SRDL  RE,48                                                            
         DR    RE,R0                                                            
         SLL   RE,16                                                            
GCI3H    ST    RE,0(R1)            SET START PAGE/ENTRY NUMBER                  
         LTR   RE,RE               TEST IF FIRST PAGE                           
         BNZ   *+10                NO                                           
         MVC   2(2,R1),CICINDX     YES SET FIRST ENTRY IN FIRST PAGE            
GCI3I    MVC   CXPAGE(4),0(R1)     SET START PAGE/ENTRY NUMBER                  
         SR    RE,RE                                                            
         CLC   CXPAGE,WRKFXPEV+2   MAKE SURE INDEX PAGE IS VALID                
         BH    GCI3H                                                            
         CLC   CXENTRY,CIENTRYS    MAKE SURE INDEX ENTRY IS VALID               
         BH    GCI3H                                                            
GCI3J    LH    R5,CXENTRY          POINT TO LAST USED INDEX ENTRY               
         MH    R5,CINDXLN                                                       
         LA    R5,CXREC(R5)        R5=A(START SEARCH ENTRY NUMBER)              
         OC    CXPAGE(2),CXPAGE                                                 
         BZ    GCI4                START PAGE IS THE FIRST                      
         CLI   OFFLINE,C'Y'        MUST READ FIRST INDEX IF ONLINE              
         BE    GCI4                                                             
         MVC   CXADDR,=X'00010100'                                              
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,CXREC                  
         ORG   *-2                                                              
         BAS   RE,RSRVWKR                                                       
         XC    CXADDR,CXADDR       SET NO INDEX PAGE IN CORE                    
*                                                                               
GCI4     ICM   R1,15,WRKFXPEA      READ NEXT INDEX PAGE                         
         BZ    GCI4C                                                            
         LH    RE,WRKFXPEV+0       GET PAGES READ SO FAR                        
         CH    RE,WRKFXPEV+2                                                    
         BH    GCIF                ALL DONE                                     
         LA    RE,1(RE)                                                         
         STH   RE,WRKFXPEV+0       BUMP NUMBER OF PAGES READ                    
         TM    FLAG,X'80'                                                       
         BO    GCI4B                                                            
GCI4A    L     RE,WRKFXPE+12       BUMP TOTAL NEW PART1 INDEX I/O'S             
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+12                                                    
         L     RE,12(R1)           BUMP NUMBER OF NEW PART1 I/OS                
         LA    RE,1(RE)                                                         
         ST    RE,12(R1)                                                        
         B     GCI4D                                                            
GCI4B    L     RE,WRKFXPE+20       BUMP TOTAL OLD PART1 INDEX I/O'S             
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+20                                                    
         L     RE,20(R1)           BUMP NUMBER OF OLD PART1 I/OS                
         LA    RE,1(RE)                                                         
         ST    RE,20(R1)                                                        
         B     GCI4D                                                            
GCI4C    TM    FLAG,X'02'          TEST IF PART2 SEARCH                         
         BZ    GCI4D                                                            
         L     RE,WRKFXPE+28       BUMP TOTAL PART2 INDEX I/O'S                 
         LA    RE,1(RE)                                                         
         ST    RE,WRKFXPE+28                                                    
         SR    R1,R1                                                            
         ICM   R1,1,USERINUM       MAKE SURE IM NOT A FUCKING IDIOT             
         BZ    GCI4D                                                            
         CLM   R1,1,WRKFLST+2                                                   
         BH    GCI4D                                                            
         SLL   R1,5                EACH WRKFXPE ENTRY IS 32 BYTES WIDE          
         LA    R1,WRKFXPE(R1)                                                   
         L     RE,28(R1)           BUMP PART2 INDEX I/O'S FOR THE WRKF          
         LA    RE,1(RE)                                                         
         ST    RE,28(R1)                                                        
GCI4D    BAS   RE,GETXAD                                                        
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,CXREC                  
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
*                                                                               
GCI6     TM    FLAG,X'02'          PART2 - EXIT WITH FIRST PURGED SLOT          
         BZ    GCIA                                                             
         CLI   W_STAT,W_STPU                                                    
         BNE   GCIE                                                             
         MVC   AVTBL+2(4),CXPAGE   SAVE PAGE/NTRY VALUES IN AVTBL               
         B     GCIF                                                             
*                                                                               
GCIA     CLI   W_STAT,W_STPU       PART1 - PROCESS PURGED SLOT                  
         BNE   GCIB                                                             
         CLI   RSNF,0                                                           
         BE    GCIA1                                                            
         TM    FLAG,X'80'          TEST IF SEARCH FOR LARGE FILE                
         BO    GCIE                YES IGNORE IT                                
         MVC   AVTBL+2(4),CXPAGE   NO EXIT WITH THIS PURGE SLOT                 
         B     GCIF                                                             
GCIA1    OC    AVTBL+2(4),AVTBL+2                                               
         BNZ   GCIE                                                             
         MVC   AVTBL+2(4),CXPAGE   SAVE ADDRESS OF FIRST PURGED SLOT            
         B     GCIE                                                             
*                                                                               
GCIB     CLC   W_USRID,WLUSRID     SAVE HIGH FILE NUMBER FOR USER ID            
         BNE   GCIC                                                             
         CLC   P2+2(2),W_FILENO                                                 
         BH    GCIC                                                             
         MVC   P2+2(2),W_FILENO                                                 
*                                                                               
GCIC     TM    W_STAT,W_STRUN      IGNORE CREATION/RUNNING/SENDING              
         BNZ   GCIE                                                             
         TM    FLAG,X'80'          IGNORE SINGLE ENTRYS IF PURGE SEARCH         
         BZ    *+12                                                             
         CLI   W_SEQ,0                                                          
         BE    GCIE                                                             
         CLC   DATEC(3),W_AGERD    IGNORE RETAINED FILES                        
         BL    GCIDR                                                            
*                                                                               
GCID     LA    RF,AVTBL            SAVE OLDEST FILE FOR TYPE                    
         CLI   RSNF,0                                                           
         BE    GCID1                                                            
         LA    RF,L'AVTBL(RF)      PART1 - EXIT WITH 1ST EXPIRED FILE           
         MVC   2(4,RF),CXPAGE                                                   
         B     GCIF                                                             
GCID1    LA    RF,L'AVTBL(RF)                                                   
         CLI   0(RF),X'FF'         EXIT IF END OF TABLE                         
         BE    GCIE                                                             
GCID4    MVC   DUB(1),0(RF)        TEST FOR STATUS BITS                         
         NC    DUB(1),W_STAT       COMPARE STATUS                               
         BZ    GCID1                                                            
GCID5    TM    1(RF),X'80'         TEST IF MUST HAVE SAME USER ID               
         BZ    GCID6                                                            
         CLC   W_USRID,W_USRID-W_RECD(R4)                                       
         BNE   GCID1                                                            
GCID6    TM    1(RF),X'40'         TEST IF FILE SIZE IMPORTANT                  
         BZ    GCID9                                                            
         CLI   W_SEQ,0                                                          
         BE    GCID9                                                            
         CLI   W_AGES,100          ONLY FOR LARGE FILES                         
         BL    GCID9                                                            
         CLC   9(1,RF),W_AGES      COMPARE SIZE                                 
         BH    GCIE                EXIT IF ALREADY HAVE LARGER ENTRY            
         BL    GCIDA                                                            
GCID9    CLC   6(3,RF),W_AGERD     COMPARE RETN DATE/TIME                       
         BL    GCIE                EXIT IF ALREADY HAVE OLDER ENTRY             
GCIDA    MVC   2(4,RF),CXPAGE      SAVE PAGE/ENTRY                              
         MVC   6(3,RF),W_AGERD     SAVE DATE/TIME                               
         MVC   9(1,RF),W_AGES      SAVE SIZE FACTOR                             
         B     GCIE                                                             
*                                                                               
GCIDR    TM    W_STAT,W_STKE       RETAINED FILE CANT BE KEEP                   
         BO    GCIE                                                             
         TM    W_STAT,W_STDEAD     RETAINED FILE MUST BE DEAD                   
         BZ    GCIE                                                             
         L     RF,AVTBLX           POINT TO LAST ENTRY (SENT STATUS)            
         TM    W_STAT,W_STSE                                                    
         BO    *+8                                                              
         LA    RF,L'AVTBL(RF)      POINT TO LAST ENTRY (PRTD STATUS)            
*                                                                               
GCIDR1   CLC   6(3,RF),W_AGERD     COMPARE RETN DATE/TIME                       
         BL    GCIE                EXIT IF ALREADY HAVE OLDER ENTRY             
         MVC   2(4,RF),CXPAGE      SAVE PAGE/ENTRY                              
         MVC   6(3,RF),W_AGERD     SAVE DATE/TIME                               
         MVC   9(1,RF),W_AGES      SAVE SIZE FACTOR                             
*                                                                               
GCIE     BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     GCI6                                                             
         B     GCI4                END OF INDEX PAGE                            
         OC    WRKFXPEA,WRKFXPEA                                                
         BZ    GCIF                END OF INDEX                                 
         BAS   RE,CXLOOPI                                                       
         B     GCI4                BACK TO START OF INDEX                       
*                                                                               
GCIF     LA    RF,AVTBL            END OF INDEX SEARCH                          
         TM    FLAG,X'80'                                                       
         BZ    *+8                 IGNORE FIRST ENTRY IF PURGE SEARCH           
GCIF0    LA    RF,L'AVTBL(RF)                                                   
         CLI   0(RF),X'FF'         TEST LAST ENTRY IN AVAIL TABLE               
         BE    GCIF2                                                            
         OC    2(4,RF),2(RF)       FIND FIRST AVAIL ENTRY                       
         BZ    GCIF0                                                            
         MVC   P1,2(RF)            SAVE INDEX PAGE/ENTRY                        
         B     GCIG                                                             
GCIF2    TM    FLAG,X'02'          NO SPACE IN PART2 INDEX                      
         BZ    GCIF4                                                            
         MVI   FLAG,X'81'          GO SEARCH PART1 FOR A FILE TO PURGE          
         B     GCI1                                                             
GCIF4    OC    2(4,RF),2(RF)       TEST IF SENT/RETAINED IN LAST ENTRY          
         BZ    GCIF6                                                            
         MVC   P1,2(RF)            SAVE INDEX PAGE/ENTRY                        
         B     GCIG                                                             
GCIF6    LA    RF,L'AVTBL(RF)                                                   
         OC    2(4,RF),2(RF)       TEST IF PRTD/RETAINED IN LAST ENTRY          
         BZ    GCIF8                                                            
         MVC   P1,2(RF)            SAVE INDEX PAGE/ENTRY                        
         B     GCIG                                                             
GCIF8    XC    P1,P1               RETURN EOF IF NO SPACE IN PART1              
         B     GCIX                                                             
*                                                                               
GCIG     ICM   R1,15,WRKFXPEA      TEST IF JUST SEARCHED PART1                  
         BZ    GCIG0               NO                                           
         TM    FLAG,X'80'          TEST IF LOOKING FOR LARGE FILE               
         BO    GCIG0               YES                                          
         MVC   0(4,R1),P1          NO SAVE PAGE/ENTRY OF THIS FILE              
GCIG0    CLI   0(RF),W_STPU        PURGE OLDEST FILE                            
         BNE   GCIG1                                                            
         CLI   RSNF,0                                                           
         BE    GCII                                                             
         MVC   CXPAGE(4),P1                                                     
         BAS   RE,XADRSN           COMPUTE FILE SEQUENCE NUMBER                 
         MVC   P2+2(2),CIRSN                                                    
         B     GCII                                                             
GCIG1    XC    STPARM,STPARM                                                    
         MVI   STVAL,W_STPU                                                     
         MVI   STCTRL,X'43'        SET NOLOCK/INDEX/FILE                        
         MVC   CXPAGE(4),P1                                                     
         CLI   RSNF,0                                                           
         BE    *+14                                                             
         BAS   RE,XADRSN           COMPUTE FILE SEQUENCE NUMBER                 
         MVC   P2+2(2),CIRSN                                                    
         BAS   RE,GETCAD                                                        
         MVC   STFSTCI,CIADDR      SET FILE ADDR                                
         LA    RE,CXREC                                                         
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT                                                          
         BNE   GCIERR              CXADDR DEFINES PAGE LEFT IN CXREC            
*                                                                               
GCIH     MVC   CIADDR(2),STCIAS    USE FIRST CI OF PURGED FILE IF PART1         
         TM    FLAG,X'80'                                                       
         BZ    *+18                                                             
         MVI   FLAG,X'02'          RESET TO PART2 IF PURGE FOR PART2            
         L     RE,STCILAST                                                      
         MVC   CIADDR(2),0(RE)     USE LAST CI OF PURGED FILE IF PART2          
         BAS   RE,GETXPE                                                        
         MVC   P1,CXPAGE                                                        
*                                                                               
GCII     LR    R5,R4               ADJUST PART1 CI DATA IN BUFFER               
         TM    FLAG,X'01'                                                       
         BZ    GCIJ                                                             
         CLI   RSNF,0                                                           
         BE    *+14                                                             
         MVC   W_FILENO,P2+2       SET FILE NUMBER IN FIRST CI                  
         B     GCIK                                                             
         L     RF,P2                                                            
         C     RF,MAXSEQ                                                        
         BL    *+14                                                             
         XC    P1,P1               RETURN EOF IF MAX SEQ NUM EXCEEDED           
         B     GCIX                                                             
         LA    RF,1(RF)                                                         
         ST    RF,P2                                                            
         MVC   W_FILENO,P2+2       SET FILE NUMBER IN FIRST CI                  
         B     GCIK                                                             
*                                                                               
GCIJ     CLI   W_SEQ,LASTSEQ       ADJUST PART2 CI DATA IN BUFFER               
         BNE   GCIJ2                                                            
         TM    W_ATTB,W_ATXCI+W_ATXTN                                           
         BZ    GCIJ1                                                            
         XC    P1,P1               RETURN EOF IF TOO MANY CI'S                  
         B     GCIX                                                             
GCIJ1    OI    W_ATTB,W_ATXCI+W_ATXTN                                           
         MVI   W_SEQ,FRSTXTNM      SET SEQ NUMBER OF FIRST XTNSN CI             
         B     GCIJ3                                                            
GCIJ2    CLI   W_SEQ,0             SET SEQ NUM IN FIRST PART2 CI                
         BNE   *+8                                                              
         MVI   W_SEQ,1                                                          
GCIJ3    IC    RF,W_SEQ            BUMP SEQ NUM                                 
         LA    RF,1(RF)                                                         
         STC   RF,W_SEQ                                                         
         MVC   W_CIPREV,SKSTRCI    CHAIN THIS CI TO PREVIOUS CI                 
*                                                                               
GCIK     MVC   CXPAGE(4),P1        SET ADDRESS OF CI TO BE USED                 
         BAS   RE,GETCAD                                                        
         MVC   SKADDR,CIADDR       SAVE CI DATA IN BUFFER                       
         LA    RF,W_DATA-W_INDEX                                                
         TM    FLAG,X'01'                                                       
         BZ    *+8                                                              
         LA    RF,W_DATA1-W_INDEX                                               
         STH   RF,SKDISP                                                        
         MVC   SKSTRCI,CIADDR                                                   
         MVC   SKENDCI,CIADDRX                                                  
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,CIADDR,(R4)                    
*                                                                               
         MVC   P3+1(1),8(R1)       SAVE RESULT OF WRITE CI                      
*                                                                               
GCIL     MVC   FUL,CXADDR          UPDATE INDEX PAGE                            
         BAS   RE,GETXAD                                                        
         CLC   FUL,CXADDR          TEST IF STILL IN CXREC                       
         BE    GCIL1                                                            
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),W_FILE,CXADDR,CXREC                  
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
GCIL1    LH    RF,CXENTRY          SET INDEX ENTRY FROM RECORD                  
         MH    RF,CINDXLN                                                       
         LA    RF,CXREC(RF)                                                     
         MVC   0(L'W_INDEX,RF),W_INDEX                                          
*                                                                               
GCIL2    CLI   P3+1,0              FIX INDEX ENTRY IF BAD CI WRITE              
         BE    GCIL3                                                            
         MVI   W_STAT-W_INDEX(RF),W_STHO                                        
         MVI   W_ATTB-W_INDEX(RF),W_ATSHIT                                      
         MVC   W_AGERD-W_INDEX(3,RF),=X'FF9F8F' SET 31DEC27 RETAIN              
         B     GCIL4                                                            
*                                                                               
GCIL3    MVI   W_STAT-W_INDEX(RF),W_STCRE    SET INDEX TEMP CREATE              
         MVC   W_CPUID-W_INDEX(4,RF),CIP3    SET INDEX CPU/PTN                  
         MVI   W_AGERT-W_INDEX(RF),X'FF'     SET INDEX TIME TO FF               
*                                                                               
GCIL4    GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,CXADDR,CXREC                   
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
         CLI   P3+1,0              EXIT IF GOOD CI FOUND                        
         BE    GCIX                                                             
         SR    RF,RF                                                            
         IC    RF,P3+2             GET RETRY ERROR COUNT                        
         LA    RF,1(RF)                                                         
         STC   RF,P3+2                                                          
         CH    RF,=H'16'                                                        
         BNH   GCIRETRY            BACK FOR ANOTHER GO                          
*                                                                               
GCIERR   MVC   P1,FFS              RETURN DISK ERROR                            
*                                                                               
GCIX     BAS   RE,W_UNLK           UNLOCK W_FILE                                
         BAS   RE,RLSEWKR                                                       
         XIT1                                                                   
         EJECT                                                                  
* PUT THE FIRST INDEX RECORD INTO LOCKTAB                                       
*                                                                               
RSRVWKR  ST    RE,SAVRE            TEST TO RELEASE W_FILE FROM LOCKTAB          
         CLI   OFFLINE,C'Y'                                                     
         BER   RE                                                               
         LA    R1,CIP1                                                          
         MVC   0(1,R1),VW_FILE     SET FILE NUMBER AND DISK ADDRESS             
         MVC   1(3,R1),=X'00010100'                                             
         MVC   4(4,R1),DMCB+12     SET I/O AREA                                 
         MVC   8(4,R1),=V(RDID)    SET COMMAND                                  
         XC    12(8,R1),12(R1)     CLEAR CIP4/CIP5                              
         ST    R2,SAVR2                                                         
         LA    R2,DMCB             R2 MUST POINT TO DMCB                        
         GOTO1 =V(LOCKER)                                                       
         L     R2,SAVR2                                                         
RSRVWKRX L     RE,SAVRE                                                         
         BR    RE                                                               
         SPACE 2                                                                
* RELEASE ALL RECORDS IN ONLINE RECORD LOCK TABLE                               
*                                                                               
RLSEWKR  ST    RE,SAVRE            TEST TO RELEASE W_FILE FROM LOCKTAB          
         CLI   OFFLINE,C'Y'                                                     
         BER   RE                                                               
         LA    R1,CIP1                                                          
         XC    0(20,R1),0(R1)      CLEAR ALL FIVE LOCKER PARAMS                 
         MVC   0(1,R1),VW_FILE     SET FILE NUMBER                              
         GOTO1 =V(LOCKER)                                                       
RLSEWKRX L     RE,SAVRE                                                         
         BR    RE                                                               
         SPACE 2                                                                
* SET CONTROL INTERVAL DATA FOR WRKF FILE REFERENCED                            
*                                                                               
SETWKR   ST    RE,SAVRESWK         SET CONTROL INTERVAL DATA                    
         L     RF,VW_FILE                                                       
         LA    RF,0(RF)                                                         
         NI    36(RF),X'FF'-X'40'  TURN OFF NOP BIT IN DTF                      
         SH    RF,=H'40'                                                        
         ST    RF,VWKRTAB          CI DATA LIVES INFRONT OF DTF                 
*                                                                               
SETWKR1  OC    0(4,RF),0(RF)       INITIALISE FILE ON FIRST REFERENCE           
         BNZ   SETWKR2                                                          
         L     RF,=A(IWKR)                                                      
         BASR  RE,RF                                                            
*                                                                               
SETWKR2  L     RF,VWKRTAB          SET CI DATA FROM FILE INFO                   
         MVC   CIDATA,0(RF)                                                     
         L     RE,SAVRESWK                                                      
         BR    RE                                                               
         EJECT                                                                  
* ROUTINES TO GET/SET WRKF DATA FROM VARIOUS INPUT FIELDS                       
*                                                                               
WHATWKRA ST    RE,SAVREWWK         GET WRKF FROM ALPHA AT USERWRKF+4            
         LA    RE,WRKFLST+8                                                     
WHATWKA1 CLI   0(RE),0                                                          
         BNE   *+6                                                              
         DC    H'0'                DIE IF INVALID ALPHA WKR ID                  
         CLC   1(1,RE),USERWRKF+4                                               
         BE    WHATWKRX                                                         
         LA    RE,8(RE)                                                         
         B     WHATWKA1                                                         
         SPACE 1                                                                
WHATWKRI ST    RE,SAVREWWK         GET WRKF FROM INT NUM IN USERINUM            
         CLC   USERINUM,WRKFLST+2                                               
         BNH   *+6                                                              
         DC    H'0'                DIE IF INVALID INTERNAL WKR NUM              
         SR    RE,RE                                                            
         IC    RE,USERINUM                                                      
         SLL   RE,3                                                             
         LA    RE,WRKFLST(RE)                                                   
         B     WHATWKRX                                                         
         SPACE 1                                                                
WHATWKRU ST    RE,SAVREWWK         GET WRKF FROM USERID USERIDNO                
         SR    RE,RE                                                            
         CLC   USERIDNO,=AL2(32000) PUBLIC FILES GO TO FIRST WRKF               
         BL    *+14                                                             
         CLC   USERIDNO,=AL2(32100)                                             
         BNH   WHATWKR2                                                         
*&&US                                                                           
         CLI   WRKFLST+1,0         TEST IF EXTRA WRKF FILES                     
         BE    WHATWKR1                                                         
         CLC   USERIDNO,=AL2(6183) STRATA GOES TO FIRST EXTRA FILE              
         BNE   WHATWKR1                                                         
         IC    RE,WRKFLST          POINT TO LAST NORMAL WRKF FILE               
         B     WHATWKR2                                                         
*&&                                                                             
WHATWKR1 SR    RF,RF                                                            
         ICM   RF,3,USERIDNO                                                    
         SR    R0,R0                                                            
         IC    R0,WRKFLST          GET NUMBER OF WRKF FILES                     
         DR    RE,R0                                                            
WHATWKR2 LA    RE,1(RE)            RE=RELATIVE WRKF                             
         SLL   RE,3                                                             
         LA    RE,WRKFLST(RE)      POINT TO LIST ENTRY FOR WRKF                 
         SPACE 1                                                                
WHATWKRX MVC   USERWRKF,=CL8'WRKF'                                              
         MVC   USERWRKF+4(1),1(RE) SET DMCB WRKF NAME                           
         MVC   USERINUM,0(RE)      SET INTNUM                                   
         MVC   USERXNUM(4),4(RE)   SET EXTNUM AND A(DTF)                        
         L     RE,SAVREWWK                                                      
         BR    RE                                                               
         EJECT                                                                  
* GET DATE AND SAVE IN SEVERAL FORMATS                                          
*                                                                               
GETDATE  ST    RE,SAVRE                                                         
         CLI   OFFLINE,C'Y'                                                     
         BNE   GETDATE1                                                         
         L     RF,=V(SSB)                                                       
         LTR   RF,RF                                                            
         BZ    GETDATE1                                                         
         CLI   2(RF),X'FF'         TEST IF OFFLINE EXTENDED SSB                 
         BNE   GETDATE1                                                         
         TM    5(RF),X'80'         IF SO TEST IF DATE PASSED                    
         BZ    GETDATE1                                                         
         MVC   DATEE(6),8(RF)      EXTRACT C'YYMMDD' FROM OFFLINE SSB           
         MVC   DATEE+6(2),SPACES                                                
         B     GETDATE2                                                         
GETDATE1 DATE  DATEE               DATEE=C'YYMMDDCC'                            
*                                                                               
GETDATE2 MVC   DATEB(2),DATEE      TEST CHANGE IN CENTURY                       
         SR    R1,R1                                                            
         CLI   DATEB,C'9'                                                       
         BNH   GETDATE3                                                         
         IC    R1,DATEB                                                         
         SH    R1,=H'10'                                                        
         STC   R1,DATEB                                                         
         LA    R1,100                                                           
GETDATE3 PACK  DUB,DATEB+0(2)                                                   
         CVB   R0,DUB                                                           
         AR    R0,R1                                                            
         STC   R0,DATEB+0                                                       
         PACK  DUB,DATEE+2(2)                                                   
         CVB   R0,DUB                                                           
         STC   R0,DATEB+1                                                       
         PACK  DUB,DATEE+4(2)                                                   
         CVB   R0,DUB                                                           
         STC   R0,DATEB+2          DATEB=X'YYMMDD'                              
         ICM   R1,15,DATEB                                                      
         SLDL  R0,8                                                             
         SLL   R1,4                                                             
         SLDL  R0,4                                                             
         SLL   R1,3                                                             
         SLDL  R0,5                                                             
         STCM  R0,3,DATEC          DATEC=B'YYYYYYYMMMMDDDDD'                    
         L     RE,SAVRE                                                         
         BR    RE                                                               
         EJECT                                                                  
* GET TIME AND SAVE IN SEVERAL FORMATS                                          
*                                                                               
GETTIME  ST    RE,SAVRE                                                         
         TIME  TU                  R0=TIME IN 1/38400 SECS                      
         SRDL  R0,32                                                            
         D     R0,=F'38400'        R1=TIME IN SECONDS                           
         LR    RF,R1                                                            
         MH    R1,=H'3'                                                         
         SRL   R1,2                R1=(SECS*3)/4                                
         STH   R1,TIMEC            TIMEC=TIME IN SPECIAL UNITS                  
         LR    R1,RF                                                            
         SR    R0,R0                                                            
         D     R0,=F'60'           R1=BINARY MINUTES                            
         SR    RE,RE                                                            
         LR    RF,R1                                                            
         D     RE,=F'10'                                                        
         LTR   RE,RE                                                            
         BZ    *+8                                                              
         LA    RF,1(RF)                                                         
         STC   RF,TIMEI            TIMEI=SINGLE BYTE 10MIN INCREMENT            
         SR    R0,R0                                                            
         D     R0,=F'60'           R0=MINS,R1=HOURS                             
         STC   R1,TIMEB                                                         
         STC   R0,TIMEB+1          TIMEB=B'HHHHHHHHMMMMMMMM'                    
         L     RE,SAVRE                                                         
         BR    RE                                                               
         EJECT                                                                  
*DMWRKFR                                                                        
       ++INCLUDE DMWRKFR                                                        
         EJECT                                                                  
DATAMGR  DC    V(DATAMGR)                                                       
VENQDEQ  DC    V(DMENQDEQ)                                                      
*&&UK                                                                           
EOFCNTOF DC    AL2(0)                                                           
EOFMAXOF DC    AL2(10)             OFFLINE MAX EOF ATTEMPTS                     
EOFBINOF DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
RTLIVEON DC    AL2(24)             ONLINE  LIVE RETAIN HOURS                    
RTLIVEOF DC    AL2(48)             OFFLINE LIVE RETAIN HOURS                    
RTDEADON DC    AL2(12)             ONLINE  DEAD RETAIN HOURS                    
RTDEADOF DC    AL2(18)             OFFLINE DEAD RETAIN HOURS                    
*                                                                               
DFLPP    DC    AL1(66)             DEFAULT LINES PER PAGE                       
         DC    AL1(0)                                                           
*&&                                                                             
*&&US                                                                           
EOFCNTOF DC    AL2(0)                                                           
EOFMAXOF DC    AL2(0)              OFFLINE MAX EOF ATTEMPTS                     
EOFBINOF DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
RTLIVEON DC    AL2(12)             ONLINE  LIVE RETAIN HOURS                    
RTLIVEOF DC    AL2(48)             OFFLINE LIVE RETAIN HOURS                    
RTDEADON DC    AL2(03)             ONLINE  DEAD RETAIN HOURS                    
RTDEADOF DC    AL2(18)             OFFLINE DEAD RETAIN HOURS                    
*                                                                               
DFLPP    DC    AL1(88)             DEFAULT LINES PER PAGE                       
         DC    AL1(0)                                                           
*&&                                                                             
MAXSEQ   DC    F'65000'                                                         
FFS      DC    8X'FF'                                                           
W_BLKLN  DC    H'13680'            DEFAULT BLK LEN (GOOD FOR 3390)              
         DC    H'0'                                                             
*                                                                               
SPACES   DC    CL16' '                                                          
DMREAD   DC    CL8'DMREAD'                                                      
DMWRT    DC    CL8'DMWRT'                                                       
LABEL    DC    CL8'*W_SAVE*'                                                    
*                                                                               
SOFLAB   DS    0CL8                                                             
         DC    C'*SOFSOF*'                                                      
EOFLAB   DS    0CL8                                                             
         DC    C'*EOFEOF*'                                                      
EOFTMP   DS    0CL8                                                             
         DC    C'*EOFTMP*'                                                      
EOFERR   DS    0CL8                                                             
         DC    C'*EOFERR*'                                                      
         EJECT                                                                  
* ENTRY POINT - LIST OF WRKF FILES. BUILT ON FIRST CALL.                        
* FIRST ENTRY XL1=NUM OF NORMAL FILES, XL1=EXTRA FILES, XL1=TOTAL FILES         
* EACH OTHER ENTRY CONTAINS WRKF NUM /WRKF CHR/FLAGS/EXT NUM/A(DTF)             
         DS    0D                                                               
         DC    CL8'WRKFLST '                                                    
WRKFLST  DS    0XL8                                                             
         DC    AL1(0),AL1(0),AL1(0),XL5'00'                                     
*                                                                               
         DC    AL1(1),C'I',XL2'00',X'F5',VL3(WRKF)                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00' SPACE FOR ONE EXTRA FILE                     
*                                                                               
         DC    AL1(0),C' ',XL6'00'                                              
WRKFLSTX EQU   *                                                                
         SPACE 1                                                                
* ENTRY POINT - TABLE OF WRKF FILE INFO INDEXED BY USERINUM.                    
* ZEROTH ENTRY HAS CUMULATIVE DATA FOR ALL QUEUES.                              
* ENTRY FOR EACH QUEUE HAS FOLLOWING INFO.                                      
*                                                                               
* +00(4) LAST INDEX PAGE/ENTRY WHERE FILE WAS ADDED                             
* +04(4) SPARE                                                                  
* +08(4) SEARCH PART1 FOR NEW FILE - COUNT                                      
* +12(4) SEARCH PART1 FOR NEW FILE - NUMBER OF I/0'S                            
* +16(4) SEARCH PART1 FOR OLD FILE TO PURGE - COUNT                             
* +20(4) SEARCH PART1 FOR OLD FILE TO PURGE - NUMBER OF I/0'S                   
* +24(4) SEARCH PART2 FOR AVAIL CI - COUNT                                      
* +28(4) SEARCH PART2 FOR AVAIL CI - NUMBER OF I/0'S                            
         DS    0D                                                               
         DC    CL8'WRKFXPE '                                                    
WRKFXPE  DS    0XL32                                                            
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
WRKFXPEX EQU   *                                                                
         EJECT                                                                  
* TABLE OF AVAILABLE FILES. SEQUENCE IS ORDER OF USERBILITY                     
* FIRST ENTRY MUST BE FOR PURGED FILES                                          
* SAME USERID REQUIRED ENTRYS (X'80') MUST COME NEXT                            
* ANY USERID ENTRYS MUST COME AFTER SAME USERID ENTRYS                          
* ANY ENTRY CAN HAVE USE LARGEST FILE (X'40') INSTEAD OF OLDEST                 
*                                                                               
AVSTAT   DS    0XL2                                                             
         DC    X'00',X'00'         PURGED    N/A                                
*                                                                               
         DC    X'10',X'C0'         SENT      SAMEUSER  LARGEST                  
         DC    X'20',X'C0'         PRTD      SAMEUSER  LARGEST                  
         DC    X'C0',X'80'         LIVE      SAMEUSER                           
*                                                                               
         DC    X'10',X'40'         SENT      ANYUSER   LARGEST                  
         DC    X'20',X'40'         PRTD      ANYUSER   LARGEST                  
         DC    X'C0',X'00'         LIVE      ANYUSER                            
*                                                                               
         DC    X'FF',X'00'         LAST/SENT N/A                                
         DC    X'FF',X'00'         LAST/PRTD N/A                                
         EJECT                                                                  
         EJECT                                                                  
* TABLE OF VALID WRKF ACTIONS                                                   
*                                                                               
* XL1    INTERNAL ACTION NUMBER                                                 
* CL7    EXTERNAL ACTION NAME (MATCH ON FIRST THREE CHRS)                       
* XL1    FLAGS X'80'=WRKF FILE MUST BE SET BY CALLER IN DMCB                    
*              X'40'=WRKF FILE MUST BE DEFINED IN BUFFER                        
*              X'01'=WRKF FILE NEED NOT BE DEFINED AT ALL                       
* AL3    ADDRESS OF PROCESSING ROUTINE                                          
*                                                                               
W_ACTNS  DC    0F'0'                                                            
         DC    X'01',C'DMPRINT',X'00',AL3(ADDPRT)                               
         DC    X'02',C'OPEN   ',X'00',AL3(ADDOPN)                               
         DC    X'03',C'ADD    ',X'00',AL3(ADD)                                  
         DC    X'04',C'CLOSE  ',X'00',AL3(ADDCLS)                               
*                                                                               
         DC    X'21',C'ACTI   ',X'40',AL3(STA)                                  
         DC    X'22',C'HOLD   ',X'40',AL3(STA)                                  
         DC    X'23',C'DELETE ',X'40',AL3(STA)                                  
         DC    X'24',C'SENT   ',X'40',AL3(STA)                                  
         DC    X'25',C'KEEP   ',X'40',AL3(STA)                                  
         DC    X'26',C'UNKEEP ',X'40',AL3(STA)                                  
         DC    X'27',C'PURGE  ',X'40',AL3(STA)                                  
         DC    X'28',C'RETAIN ',X'40',AL3(STA)                                  
         DC    X'29',C'PROC   ',X'40',AL3(STA)                                  
         DC    X'2A',C'UDATA  ',X'40',AL3(STA)                                  
         DC    X'30',C'RUNNING',X'40',AL3(STA)                                  
         DC    X'31',C'SENDING',X'40',AL3(STA)                                  
*                                                                               
         DC    X'41',C'INDEX  ',X'80',AL3(NDX)                                  
         DC    X'42',C'READ   ',X'40',AL3(RDF)                                  
         DC    X'43',C'SEQ    ',X'80',AL3(SEQ)                                  
         DC    X'44',C'WRITE  ',X'40',AL3(WRF)                                  
         DC    X'45',C'RANDOM ',X'40',AL3(RDR)                                  
*                                                                               
         DC    X'61',C'DESC   ',X'40',AL3(ATT)                                  
         DC    X'62',C'RELIVE ',X'40',AL3(ATT)                                  
         DC    X'63',C'REDEAD ',X'40',AL3(ATT)                                  
*                                                                               
         DC    X'81',C'BUFFER ',X'01',AL3(BUF)                                  
         DC    X'82',C'BURSTR ',X'01',AL3(BUF)                                  
         DC    X'83',C'BUSAVE ',X'01',AL3(BUS)                                  
*                                                                               
W_AINI   DC    X'A1',C'INIT   ',X'80',AL3(INI)                                  
         DC    X'A2',C'GLIST  ',X'01',AL3(GLI)                                  
         DC    X'A3',C'GFILE  ',X'01',AL3(GFI)                                  
*                                                                               
W_ACTNX  DC    X'00',X'00'                                                      
         EJECT                                                                  
* EQUATES FOR WRKF ACTIONS                                                      
*                                                                               
ACTNDMP  EQU   X'01'                                                            
ACTNOPE  EQU   X'02'                                                            
ACTNADD  EQU   X'03'                                                            
ACTNCLO  EQU   X'04'                                                            
*                                                                               
ACTNACT  EQU   X'21'                                                            
ACTNHOL  EQU   X'22'                                                            
ACTNDEL  EQU   X'23'                                                            
ACTNSEN  EQU   X'24'                                                            
ACTNKEE  EQU   X'25'                                                            
ACTNUNK  EQU   X'26'                                                            
ACTNPUR  EQU   X'27'                                                            
ACTNRET  EQU   X'28'                                                            
ACTNPRO  EQU   X'29'                                                            
ACTNUDAT EQU   X'2A'                                                            
ACTNRUN  EQU   X'30'                                                            
ACTNSNG  EQU   X'31'                                                            
*                                                                               
ACTNREA  EQU   X'42'                                                            
*                                                                               
ACTNDES  EQU   X'61'                                                            
ACTNREL  EQU   X'62'                                                            
ACTNRED  EQU   X'63'                                                            
*                                                                               
ACTNBUF  EQU   X'81'                                                            
ACTNBUR  EQU   X'82'                                                            
ACTNBUS  EQU   X'83'                                                            
*                                                                               
ACTNINI  EQU   X'A1'                                                            
ACTNGLI  EQU   X'A2'                                                            
ACTNGFI  EQU   X'A3'                                                            
*                                                                               
LASTSEQ  EQU   255                                                              
LASTSEQM EQU   254                                                              
LASTSEQP EQU   0                                                                
FRSTXTN  EQU   2                                                                
FRSTXTNM EQU   1                                                                
FRSTXTNP EQU   3                                                                
         EJECT                                                                  
         LTORG                                                                  
         EJECT                                                                  
* END OF ADDRESSABILITY VIA R8,R9,RA,RB.                                        
* ALL TABLES AND ROUTINES BEYOND THIS POINT ARE ADDRESSED BY =A(ROUT).          
* EACH ROUTINE MUST BE LESS THAN 4K AND USE RB AS ITS LOCAL BASE REG.           
* FIRST 4K OF MAIN CSECT GOES UNADDRESSABLE.                                    
         SPACE 2                                                                
         EJECT                                                                  
*************************************************************                   
* PASS   DUB+0(3)  DATEC/TIMEI (DATE COMP AND TIME INCR)    *                   
* PASS   DUB+3(2)  RETENTION PERIOD IN HOURS (X'FFFF'=PER)  *                   
*                                                           *                   
* RETURN DUB1+0(3) DATEC/TIMEI (OLD DATE/TIME PLUS RET)     *                   
*************************************************************                   
         SPACE 1                                                                
GETRETN  NTR1                                                                   
         LR    RB,RF               LOCAL ADDRESSABILITY                         
         USING GETRETN,RB                                                       
         XC    DUB1,DUB1           INITIALISE RETURN VALUES                     
         XC    GRCB,GRCB                                                        
         ICM   RF,15,=V(GETRET)    TEST IF GET RETAIN MODULE INCLUDED           
         BZ    GRETN1                                                           
         MVC   GRHOURS,DUB+3       SET BINARY HOURS RETAIN PERIOD               
         SR    R0,R0               SET BINARY YEAR/MONTH/DAY                    
         ICM   R0,3,DUB                                                         
         SRDL  R0,5                                                             
         SRL   R1,27                                                            
         STC   R1,GRIDAY                                                        
         SRDL  R0,4                                                             
         SRL   R1,28                                                            
         STC   R1,GRIMONTH                                                      
         STC   R0,GRIYEAR                                                       
         MVC   GRIHOUR(2),TIMEB    SET BINARY HOURS/MINUTES                     
         LA    R1,GRCB                                                          
         BASR  RE,RF               GO TO V(GETRET)                              
         CLI   GRRETC,0                                                         
         BNE   GRETN1              USE OLD METHOD IF CALENDAR ERROR             
*                                                                               
GRETN0   MVC   DUB2+4(3),GROYEAR   RETURN YEAR/MONTH/DAY                        
         L     R1,DUB2+4                                                        
         SLDL  R0,8                                                             
         SLL   R1,4                                                             
         SLDL  R0,4                                                             
         SLL   R1,3                                                             
         SLDL  R0,5                                                             
         STH   R0,DUB1             RETURN NEW DATE IN BINARY COMPRSD            
         SR    R0,R0                                                            
         IC    R0,GROMIN                                                        
         SR    R1,R1                                                            
         IC    R1,GROHOUR                                                       
         MH    R1,=H'60'                                                        
         AR    R1,R0               R1=BINARY MINUTES                            
         SR    R0,R0                                                            
         D     R0,=F'10'                                                        
         LTR   R0,R0                                                            
         BZ    *+8                                                              
         LA    R1,1(R1)                                                         
         STC   R1,DUB1+2           RETURN NEW TIME IN 10MIN INCREMENTS          
         B     GRETNX                                                           
*                                                                               
GRETN1   CLC   DUB+3(2),=X'FFFF'   TEST FOR MAXIMUM                             
         BNE   GRETN1A                                                          
         MVC   DUB1(3),=X'FF9F8F'  SET 31DEC27 FOR MAXIMUM RETAIN               
         B     GRETNX                                                           
GRETN1A  SR    R0,R0               CONVERT RETN HOURS TO DAYS/INCS              
         SR    R1,R1                                                            
         ICM   R1,3,DUB+3          GET RETN HOURS                               
         D     R0,=F'24'                                                        
         STCM  R1,3,DUB1+3         SET RETN HOURS AS DAYS & INCS                
         MH    R0,=H'6'                                                         
         STC   R0,DUB1+5                                                        
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         IC    RF,DUB+2            GET TIME NOW IN INCS                         
         AR    RF,R0               AND ADD RETN INCS                            
         D     RE,=F'144'          CONVERT TO DAYS                              
         AR    RF,R1                                                            
         STCM  RF,3,DUB1+3         SET RETN DAYS                                
         STC   RE,DUB1+2           SET RETN INCS                                
*                                                                               
GRETN2   LA    R4,19               R4=CENTURY                                   
         SR    R6,R6                                                            
         ICM   R6,3,DUB            GET COMPSD BINARY INPUT DATE                 
         SRDL  R6,9                                                             
         LR    R5,R6               R5=YEAR                                      
         CH    R5,=H'100'                                                       
         BL    *+12                                                             
         SH    R5,=H'100'                                                       
         LA    R4,20                                                            
         SR    R6,R6                                                            
         SLDL  R6,4                R6=MONTH NUMBER                              
         SRL   R7,27               R7=DAY NUMBER                                
         STC   R5,DUB2+0           SAVE YEAR                                    
         STC   R6,DUB2+1           SAVE MONTH                                   
         STC   R7,DUB2+2           SAVE DAY                                     
*                                                                               
GRETN3   SR    RE,RE               GET ADJUSTMENT FOR INPUT MONTH               
         IC    RE,GRETNADJ-1(R6)                                                
         AR    R7,RE               ADD ADJUSTMENT TO INPUT DAY                  
         CH    R6,=H'2'                                                         
         BH    GRETN4                                                           
         SH    R5,=H'1'            DECR INPUT YEAR IF JAN OR FEB                
         BNM   GRETN4                                                           
         LA    R5,99               SET NEW YEAR AND CENTURY                     
         BCTR  R4,0                                                             
*                                                                               
GRETN4   AR    R7,R5               ADD YEAR TO DAY                              
         SRL   R5,2                                                             
         AR    R7,R5               ADD YEAR/4                                   
         SLL   R4,1                                                             
         SR    R7,R4               SUB 2*CENTURY                                
         SRL   R4,3                                                             
         AR    R7,R4               ADD CENTURY/4                                
         SR    R6,R6                                                            
         D     R6,=F'7'            DIV BY 7 TO GIVE DAY OF WEEK                 
         LTR   R6,R6                                                            
         BP    GRETN6                                                           
         BZ    GRETN5                                                           
         A     R6,=F'7'                                                         
         B     GRETN6                                                           
GRETN5   LA    R6,7                                                             
GRETN6   STC   R6,DUB2+3           RETURN DAY OF WEEK MON=1,...,SUN=7           
*                                                                               
GRETNA   SR    RF,RF               TEST FOR RETN SPANNING WEEKEND               
         SR    R4,R4                                                            
         ICM   R4,3,DUB1+3         R4=RETENTION DAYS                            
         BP    GRETNA1                                                          
         MVC   DUB1(2),DUB         ZERO RETN SET OUTPUT TO INPUT                
         B     GRETNX                                                           
GRETNA1  CH    R4,=H'7'            TEST FOR RETN LESS THAN ONE WEEK             
         BNL   GRETNA2                                                          
         SR    R0,R0               R0=DAY OF WEEK NUMBER                        
         IC    R0,DUB2+3                                                        
         CLI   DUB2+3,5                                                         
         BNH   *+8                                                              
         LA    R0,5                TREAT SAT/SUN AS FRI                         
         AR    R0,R4                                                            
         CH    R0,=H'5'                                                         
         BNH   *+8                                                              
         LA    R4,2(R4)            ADJUST RETN DAYS FOR WEEKEND                 
GRETNA2  SR    R5,R5                                                            
         IC    R5,DUB2+0           R5=YEAR                                      
         SR    R6,R6                                                            
         IC    R6,DUB2+1           R6=MONTH                                     
         SR    R7,R7                                                            
         IC    R7,DUB2+2           R7=DAY                                       
*                                                                               
GRETNB   SR    RF,RF               RF=DAYS IN MONTH                             
         IC    RF,GRETNMON-1(R6)                                                
         CH    R6,=H'2'                                                         
         BNE   GRETNC                                                           
         TM    DUB2+1,X'03'        TEST FEB IN LEAP YEAR                        
         BNZ   GRETNC                                                           
         LA    RF,1(RF)                                                         
*                                                                               
GRETNC   CR    R7,RF               TEST WITH DAY NUMBER                         
         BE    GRETND                                                           
         LA    R7,1(R7)            ADD TO DAYS                                  
         BCT   R4,GRETNC                                                        
         B     GRETNF                                                           
*                                                                               
GRETND   LA    R7,1                END OF MONTH - CONVERT TO NEXT               
         LA    R6,1(R6)                                                         
         CH    R6,=H'12'                                                        
         BH    GRETNE                                                           
         BCT   R4,GRETNB                                                        
         B     GRETNF                                                           
*                                                                               
GRETNE   LA    R6,1                END OF YEAR - CONVERT TO NEXT                
         LA    R5,1(R5)                                                         
         BCT   R4,GRETNB                                                        
         B     GRETNF                                                           
*                                                                               
GRETNF   STC   R5,DUB2+4           RETURN NEW YEAR                              
         STC   R6,DUB2+5           RETURN NEW MONTH                             
         STC   R7,DUB2+6           RETURN NEW DAY                               
         L     R1,DUB2+4                                                        
         SLDL  R0,8                                                             
         SLL   R1,4                                                             
         SLDL  R0,4                                                             
         SLL   R1,3                                                             
         SLDL  R0,5                                                             
         STH   R0,DUB1             RETURN NEW DATE IN BINARY COMPRSD            
*                                                                               
GRETNX   XIT1                                                                   
*                                                                               
GRETNMON DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)                         
GRETNADJ DC    AL1(28,31,02,05,07,10,12,15,18,20,23,25)                         
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
* SUBROUTINE TO INITIALISE WRKF FILE                                            
*                                                                               
IWKR     NTR1                                                                   
         LR    RB,RF               LOCAL ADDRESSABILITY                         
         USING IWKR,RB                                                          
         CLI   USERINUM,0          WRKF FILE MUST BE DEFINED                    
         BNE   *+6                                                              
         DC    H'0'                                                             
         MVC   CFWKID,USERWRKF     SET WRKF ALPHA ID FOR ENQUEUE                
*                                                                               
         XC    P1(24),P1           BUILD DADDS PARM LIST                        
         LA    RE,CXREC                                                         
         ST    RE,P2                                                            
         MVC   P4,VW_FILE          SET DTF ADDR                                 
         LA    RE,CXADDR                                                        
         ST    RE,P5                                                            
         CLI   OFFLINE,C'Y'        OPEN W_FILE IF OFFLINE                       
         BNE   IWKR0                                                            
         L     RE,VW_FILE                                                       
         TM    36(RE),X'20'        TEST IF FILE ALREADY OPEN                    
         BO    IWKR0                                                            
         MVC   P1,VDAOPEN                                                       
         GOTO1 VDADDS,P1                                                        
*                                                                               
IWKR0    MVC   P1,VRDID            READ FIRST RECORD OF W_FILE                  
         MVC   CXADDR,=X'00010100'                                              
         GOTO1 VDADDS,P1                                                        
*                                                                               
IWKR2    BAS   RE,W_LOCK           LOCK W_FILE                                  
         GOTO1 VDADDS,P1           READ FIRST REC TO SET WKRTAB                 
         OC    P3(2),P3                                                         
         BNZ   IWKRERR                                                          
         L     RE,VWKRTAB                                                       
         MVC   0(20,RE),CXREC      SET PART1 INDEX DATA                         
         MVC   20(20,RE),PART2IND                                               
         TM    0(RE),X'80'                                                      
         BZ    *+14                                                             
         MVC   20(20,RE),CXREC+L'W_INDEX SET PART2 INDEX DATA                   
         NI    0(RE),X'7F'                                                      
         MVC   14(1,RE),USERINUM   SET INTERNAL WRKF FILE NUM                   
         MVC   15(5,RE),USERWRKF   SET ALPHA WRKF FILE NAME                     
         MVC   CIDATA,0(RE)                                                     
         MVI   RSNF,1                                                           
*                                                                               
IWKR3    L     RE,VW_FILE          SET F/L RECORD SIZE IN W_FILE DTF            
         LA    RE,52(RE)                                                        
         MVC   0(2,RE),CIBLKLN                                                  
         OI    0(RE),X'80'                                                      
         CLC   CIBLKLN,W_BLKLN     TEST ACTUAL VRS ASSUMED BLOCK LEN            
         BNH   IWKR4                                                            
         DC    H'0'                I DONT THINK I CAN COPE WITH THIS            
*                                                                               
IWKR4    MVI   FLAG,0              POINT TO FIRST INDEX ENTRY                   
         NI    CIENTRYS,X'7F'    !!!FILE FIX                                    
         NI    CJENTRY,X'7F'     !!!                                            
         BAS   RE,CXLOOPI                                                       
         USING W_RECD,R5                                                        
         B     IWKR8                                                            
*                                                                               
IWKR6    TM    FLAG,X'01'          WRITE BACK PAGE IF UPDATED                   
         BZ    IWKR6A                                                           
         GOTO1 VDADDS,P1,VWTID                                                  
         OC    P3(2),P3                                                         
         BNZ   IWKRERR                                                          
IWKR6A   BAS   RE,GETXAD           READ IN NEXT PAGE                            
         GOTO1 VDADDS,P1,VRDID                                                  
         OC    P3(2),P3                                                         
         BNZ   IWKRERR                                                          
         NI    FLAG,255-X'01'                                                   
*                                                                               
IWKR8    EQU   *                                                                
         TM    FLAG,X'80'          TEST IF ALREADY DONE THIS                    
         BO    IWKR8X                                                           
         LH    RE,CJPAGE           TEST FOR END OF INDEX MISSING                
         LH    RF,CJENTRY                                                       
         SH    RF,=H'1'                                                         
         BNM   *+14                                                             
         SH    RE,=H'1'                                                         
         LH    RF,CIENTRYS                                                      
         BCTR  RF,0                                                             
         CH    RE,CXPAGE           IS THIS PAGE END OF INDEX PAGE               
         BNE   IWKR8X              NO                                           
         CH    RF,CXENTRY          IS THIS ENTRY END OF INDEX ENTRY             
         BNE   IWKR8X              NO                                           
         MVC   W_INDEX,=32X'FF'    PUT BACK MISSING END OF INDEX                
         GOTO1 VDADDS,P1,VWTID                                                  
         OC    P3(2),P3                                                         
         BNZ   IWKRERR                                                          
         OI    FLAG,X'80'          SET END OF INDEX REPAIRED FLAG               
         B     IWKRB                                                            
IWKR8X   EQU   *                                                                
*                                                                               
IWKR9    TM    W_STAT,W_STCRE      PURGE TEMP FILES FOR THIS CPU/PARTN          
         BZ    IWKRA                                                            
         CLI   W_AGERT,X'FF'       TEST IF CPU/PARTN IN INDEX ENTRY             
         BNE   IWKRA                                                            
         CLC   W_CPUID(4),CIP3                                                  
         BNE   IWKRA                                                            
         XC    W_INDEX,W_INDEX                                                  
         OI    FLAG,X'01'                                                       
*                                                                               
IWKRA    BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     IWKR8                                                            
         B     IWKR6               END OF INDEX PAGE                            
IWKRB    OI    FLAG,X'80'          SET END OF PART ONE INDEX                    
         MVC   FUL(2),CXPAGE       SAVE LAST INDEX PAGE NUMBER                  
         CLC   CXPAGE(4),CJPAGE                                                 
         BH    IWKRC               EXIT IF END OF PART2 INDEX                   
         OC    CJCITOT,CJCITOT                                                  
         BZ    IWKRC               EXIT IF NO PART2 INDEX                       
         BAS   RE,CXLOOPJ          POSN TO FIRST PART2 INDEX ENTRY              
         CLC   CXPAGE,FUL                                                       
         BE    IWKR8               STARTS IN SAME PAGE AS END OF PART1          
         B     IWKR6                                                            
*                                                                               
IWKRC    TM    FLAG,X'01'          WRITE BACK LAST PAGE IF UPDATED              
         BZ    IWKRX                                                            
         GOTO1 VDADDS,P1,VWTID                                                  
         OC    P3(2),P3                                                         
         BZ    IWKRX                                                            
*                                                                               
IWKRERR  BAS   RE,W_UNLK           DISK ERROR ON INITIALISATION                 
         MVI   PARM3,X'40'                                                      
         CLI   OFFLINE,C'Y'        EXIT WITH ERROR IF ONLINE                    
         BNE   IWKRY                                                            
         DC    H'0',C'W_FILE INITIALISE ERROR '                                 
*                                                                               
IWKRX    BAS   RE,W_UNLK           W_FILE INITIALISED OK                        
         MVI   PARM3,0                                                          
*                                                                               
IWKRY    CLI   PARM3,0             EXIT WITH CC EQUAL IF OK                     
         XIT1                                                                   
*                                                                               
DEFRETNL DC    H'24'                DEFAULT LIVE 24 HOURS                       
DEFRETND DC    H'12'                DEFAULT DEAD 12 HOURS                       
*                                                                               
PART2IND DC    XL4'00',XL10'7FFF7FFF000000010100',XL6'00'                       
VDADDS   DC    V(DADDS)                                                         
VDAOPEN  DC    V(DAOPEN)                                                        
VRDID    DC    V(RDID)                                                          
VWTID    DC    V(WTID)                                                          
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
WRKD     DSECT                                                                  
DUB      DS    D                                                                
DUB1     DS    D                                                                
DUB2     DS    D                                                                
FUL      DS    F                                                                
FUL1     DS    F                                                                
FUL2     DS    F                                                                
SAVR2    DS    F                                                                
SAVRE    DS    F                                                                
SAVERE   DS    F                                                                
SAVREWWK DS    F                                                                
SAVRESWK DS    F                                                                
WRKFXPEA DS    A                                                                
WRKFXPEV DS    F                                                                
SAVADDR  DS    A                                                                
EOFCNT   DS    H                                                                
EOFMAX   DS    H                                                                
EOFBIN   DS    F                                                                
DMCB     DS    6F                                                               
*                                                                               
USERINFO DS    0XL16               USER INFO FOR WHICH WRKF FILE                
USERIDNO DS    H                   USER ID NUM                                  
USERFLAG DS    XL1                 USER FLAG 80=SET BY CALLER                   
USERINUM DS    X                   USER WRKF INTERNAL FILE NUMBER               
USERWRKF DS    CL8                 USER WRKF NAME FOR DATAMGR                   
USERXNUM DS    X                   USER WRKF EXTERNAL FILE NUMBER               
USERADTF DS    AL3                 USER WRKF A(DTF)                             
*                                                                               
DATEE    DS    CL8                 EBCDIC DATE C'YYMMDD  '                      
DATEB    DS    XL3                 BINARY DATE X'YMD'                           
DATEC    DS    XL2                 CMPRSD DATE B'YYYYYYYMMMMDDDDD'              
TIMEI    DS    XL1                 BINARY TIME X'I' I=10MIN INTERVAL            
TIMEB    DS    XL2                 BINARY TIME X'HM'                            
TIMEC    DS    XL2                 BINARY TIME CREATED UNITS=SECS*3/4           
         DS    XL2                 N/D                                          
*                                                                               
GRCB     DS    0XL16               GET RETAIN CONTROL BLOCK                     
GRRETC   DS    X                   RETURN CODE                                  
GRCTRY   DS    X                   COUNTRY CODE                                 
GRHOURS  DS    XL2                 NUMBER OF HOURS                              
         DS    XL2                                                              
GRIYEAR  DS    X                   INPUT YEAR                                   
GRIMONTH DS    X                   INPUT MONTH                                  
GRIDAY   DS    X                   INPUT DAY                                    
GRIHOUR  DS    X                   INPUT HOUR                                   
GRIMIN   DS    X                   INPUT MIN                                    
GROYEAR  DS    X                   OUTPUT YEAR                                  
GROMONTH DS    X                   OUTPUT MONTH                                 
GRODAY   DS    X                   OUTPUT DAY                                   
GROHOUR  DS    X                   OUTPUT HOUR                                  
GROMIN   DS    X                   OUTPUT MIN                                   
*                                                                               
ACXREC   DS    A                                                                
VWKRTAB  DS    A                                                                
VW_FILE  DS    A                                                                
W_FILE   DS    CL8                                                              
MYLABEL  DS    CL8                                                              
OFFLINE  DS    C                                                                
SAVECC   DS    X                                                                
*                                                                               
CLOTYP   DS    X                   CLOSE TYPE                                   
CLOTNOR  EQU   X'01'               CLOSE NORMAL (DEFAULT)                       
CLOTPUR  EQU   X'02'               CLOSE AND PURGE FILE                         
CLOTERR  EQU   X'08'               CLOSE AND SET IN ERROR                       
CLOTUSR  EQU   X'10'               CLOSE AND SET USER DATA                      
CLOTUSX  EQU   X'20'               CLOSE AND SET USER INDEX DATA                
CLOTTMP  EQU   X'80'               CLOSE AND LEAVE TEMP BIT ON                  
*                                                                               
CLOINF   DS    XL8                                                              
ADDWHY   DS    X                                                                
RSNF     DS    X                   01=REP SEQ NUM IS REL POSN IN INDEX          
         DS    XL2                                                              
*                                                                               
PARM1    DS    F                                                                
PARM2    DS    F                                                                
PARM3    DS    F                                                                
PARM4    DS    F                                                                
PARM5    DS    F                                                                
PARM6    DS    F                                                                
*                                                                               
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
P7       DS    F                                                                
*                                                                               
APARM    DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    X                                                                
         DS    X                                                                
FLAG     DS    X                                                                
SVSEQ    DS    X                                                                
SVTYPE   DS    X                                                                
SVATTB   DS    X                                                                
SVUDATA  DS    XL2                                                              
         DS    XL2                                                              
SVNEXT   DS    F                                                                
*                                                                               
SVINDEX  DS    0CL24               LEN=L'USER-INDEX                             
SVDATA   DS    0CL24               LEN=L'ACTUAL-INDEX                           
SVKEY    DS    0CL7                LEN=L'KEY                                    
SVUSRID  DS    XL2                                                              
SVSYSPRG DS    CL3                                                              
SVREPNO  DS    XL2                                                              
         DS    CL17                                                             
*                                                                               
AVTBLX   DS    A                   ADR LAST ENTRY IN TABLE                      
AVTBL    DS    12XL10              NUM ENTRYS GE NUM ENTRYS IN AVSTAT           
         SPACE 1                                                                
STPARM   DS    0CL24                                                            
STACTN   DS    XL1                 ACTION VALUE FROM WKRACTNS TABLE             
STVAL    DS    XL1                 STATUS VALUE IF ZERO ACTION VALUE            
STCTRL   DS    XL1                 CONTROL 01=FILE,02=INDEX,80=ADD              
STFLAG   DS    XL1                 FLAG FOR WORK                                
STNI     DS    XL1                 NI STATUS BITS                               
STOI     DS    XL1                 OI STATUS BITS                               
STINFO   DS    XL4                 EXTRA INFO REQUIRED FOR ACTION               
STFSTCI  DS    XL2                 TTTT OF FIRST CI                             
STBUFFA  DS    A                   A(I/O BUFFER)                                
STXCADR  DS    A                   CORE ADDR OF COPY INDEX PAGE                 
STXDADR  DS    F                   DISK ADDR OF COPY INDEX PAGE                 
*                                                                               
STCILAST DS    A                   A(LAST ENTRY IN CI ADDR LIST)                
STCIAS   DS    514XL2              TTTT OF EACH CI IN FILE                      
         SPACE 1                                                                
       ++INCLUDE DMWRKFW                                                        
         DS    2F                  EXTRA PARAMS FOR LOCKER CALL CIP4/5          
         SPACE 1                                                                
CXREC    DS    14336C                                                           
*                                                                               
WRKX     EQU   *                                                                
         EJECT                                                                  
*DMWRKFD                                                                        
       ++INCLUDE DMWRKFD                                                        
         EJECT                                                                  
*DMWRKFS                                                                        
       ++INCLUDE DMWRKFS                                                        
         EJECT                                                                  
*DMWRKFK                                                                        
       ++INCLUDE DMWRKFK                                                        
         SPACE 2                                                                
KSBUFFD  DSECT                     BUFFER SAVE/RESTORE AREA                     
KSDATA   DS    0XL30                                                            
KSINDEX  DS    XL24                                                             
KSFSTCI  DS    XL4                                                              
KSINTNO  DS    X                                                                
KSEXTNO  DS    X                                                                
         EJECT                                                                  
*DMWRKFL                                                                        
       ++INCLUDE DMWRKFL                                                        
         EJECT                                                                  
*FASSB                                                                          
*FATCB                                                                          
*FAUTL                                                                          
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         EJECT                                                                  
       ++INCLUDE FATCB                                                          
         EJECT                                                                  
       ++INCLUDE FAUTL                                                          
         PRINT ON                                                               
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'007DMWRKFAA  07/19/00'                                      
         END                                                                    
