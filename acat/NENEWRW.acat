*          DATA SET NENEWRW    AT LEVEL 127 AS OF 05/01/02                      
*CATALP NEWRW                                                                   
*                                                                               
         TITLE 'NEWRW - NETWORK INPUT DRIVER'                                   
***********************************                                             
* NEW REPORT WRITER FOR NETWORK                                                 
* DOES REPORT BASED ON REPORT WRITER BLOCK AND REPORT WRITER RECORD             
*                                                                               
*******************************************************                         
*  ROUTINES TO BUILD INTERNAL RECORD                                            
*  INPUTS : ARG1 -(R9)- A(NETSYSD FOLLOWED BY NETBLOCK)                         
*           ARG2 -(RA)- A(RW INPUT BLOCK)                                       
*              RWFUNC - FUNCTION TABLE TO USE                                   
*              RWINTYPE - ROUTINE NUMBER TO USE                                 
*              OTHER VALUES DEPENDENT ON FUNCTION                               
*******************************************************************             
*                                                                               
NEWRW    CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 NERWRKX-NERWRK,**REPW**,RR=R2                                    
         LA    R8,2048(RB)                                                      
         LA    R8,2048(R8)                                                      
         USING NEWRW+4096,R8                                                    
*                                                                               
*              SYSTEM ROUTINES ENTERABLE FROM BASE OR OVERLAY                   
         SPACE 3                                                                
         DS    0H                                                               
         USING NERWRK,RC                                                        
         USING NETSYSD,R9                                                       
         USING RWINBLOK,RA                                                      
         ST    R2,RELO                                                          
         L     R9,0(R1)                                                         
         L     RA,4(R1)                                                         
         MVC   PREED,EDSPACE       SET UP SPACE LINES                           
         MVC   EDWORK,EDSPACE                                                   
         MVC   POSTED,EDSPACE                                                   
         MVC   PREED2,EDSPACE                                                   
         MVC   EDWORK2,EDSPACE                                                  
         MVC   POSTED2,EDSPACE                                                  
         CLI   RWFUNC,RWMOVE                                                    
         BNE   RF2                                                              
         BAS   RE,VMOVE                                                         
         B     RFXIT                                                            
RF2      CLI   RWFUNC,RWPRINT                                                   
         BNE   RF4                                                              
         BAS   RE,VVPRINT                                                       
         B     RFXIT                                                            
RF4      CLI   RWFUNC,RWADD                                                     
         BNE   RF6                                                              
         BAS   RE,VADD                                                          
         B     RFXIT                                                            
RF6      CLI   RWFUNC,RWHEAD                                                    
         BNE   RF8                                                              
         BAS   RE,VHEAD                                                         
         B     RFXIT                                                            
RF8      DC    H'0'                MUST BE ONE OF ABOVE                         
RFXIT    XMOD1                                                                  
         EJECT                                                                  
VMOVE    NTR1                                                                   
         ZIC   RF,RWINTYPE         GET ROUTINE NUMBER                           
         CLI   RWINTYPE,150        IF GT 150 USE 2ND TABLE                      
         BNL   VMOVE2                                                           
*                                                                               
         SLL   RF,2                MULTIPLY BY 4                                
         B     VBRANCH(RF)                                                      
         SPACE 1                                                                
****************  ORDERED AS IN FILE NENVEQIN                                   
VBRANCH  B     VMERR               0                                            
         B     VMAGY2              1                                            
         B     VMCLI3              2                                            
         B     VMDATE              3                                            
         B     VMTIME4             4                                            
         B     VMPROG6             5                                            
         B     VMPROG16            6                                            
         B     VMEST1              7                                            
         B     VMDAYP1             8                                            
         B     VMPAK1              9                                            
         B     VMPST1              10                                           
         B     VMUNST1             11                                           
         B     VMPRD1              12                                           
         B     VMPRGF3             13                                           
         B     VMLENG1             14                                           
         B     VMDAY1              15                                           
         B     VMTIME2             16                                           
         B     VMFEED2             17                                           
         B     VMUNIVP2            18                                           
         B     VMIMPAC2            19                                           
         B     VMNTI2              20                                           
         B     VMNSI2              21                                           
         B     VMUNC2              22                                           
         B     VMFMG3              23                                           
         B     VMHUTAV1            24                                           
         B     VMERR               25                                           
         B     VMHUTP2             26                                           
         B     VMLACT1             27                                           
         B     VMMKT2              28                                           
         B     VMSPREP2            29                                           
         B     VMMGFPC6            30                                           
         B     VMMGFPN             31                                           
         B     VMMGFDAT            32                                           
         B     VMMGBPC6            33                                           
         B     VMMGBPN             34                                           
         B     VMMGBDAT            35                                           
         B     VMDRES1             36                                           
         B     VMUN2               37                                           
         B     VMSHR2              38                                           
         B     VMHUT2              39                                           
         B     VMRTG               40                                           
         B     VMIMP               41                                           
         B     VMVPH               42                                           
         B     VMDEMO              43                                           
         B     VMCOST              44                                           
         B     VMNET4              45                                           
         B     VMDAY3              46                                           
         B     VMPRD3              47                                           
         B     VMGAP               48                                           
         B     VMBILDT             49                                           
         B     VMPAYDT             50                                           
         B     VMBILPRD            51                                           
VCOUNT   EQU   (*-VBRANCH)/4                                                    
*                                                                               
VMOVE2   LA    R1,150              SUBTRACT 150 AND USE NEW JUMP TABLE          
         SR    RF,R1                                                            
         SLL   RF,2                MULTIPLY BY 4                                
         B     VBRM2(RF)                                                        
         SPACE 1                                                                
****************  ORDERED AS IN FILE NENVEQIN                                   
VBRM2    B     VMERR               0                                            
         B     VMANYALP            151                                          
         B     VMANYINT            152                                          
VMCNT2   EQU   (*-VBRM2)/4                                                      
*                                                                               
         EJECT                                                                  
***** ROUTINES TO ADD OUTPUT TYPES                                              
VADD     NTR1                                                                   
         ZIC   RF,RWOUTTYP         GET ROUTINE NUMBER                           
         CLI   RWOUTTYP,150        MUST BE GT 150 IF AN OUTPUT TYPE             
         BNL   VADD2                                                            
         DC    H'0'                NOT AN OUTPUT TYPE                           
*                                                                               
VADD2    LA    R1,150              SUBTRACT 150 TO USE JUMP TABLE               
         SR    RF,R1                                                            
         SLL   RF,2                MULTIPLY BY 4                                
         B     VBRADD(RF)                                                       
         SPACE 1                                                                
****************  ORDERED AS IN FILE NENVEQIN                                   
VBRADD   B     VMERR               0                                            
         B     VMADDALP            151 - DONT ADD ALPHAS, MOVE EM               
         B     VADDINT             152 - ADD INTEGERS                           
         B     VADDCOST            153 - ADD COSTS                              
         B     VSKIP               154 - IGNORE                                 
VMERR    DC    H'0'                                                             
*                                                                               
XIT      XIT1                                                                   
***************************************************                             
*                                                                               
*                                                                               
*                                                                               
*                                                                               
         EJECT                                                                  
***************************************************                             
* VVPRINT - ROUTINE TO PRINT DATA                                               
*   INPUTS: RWINBLOK, RWEDBLOK                                                  
*   LOCALS: EDWORK - INTERMEDIATE PRINT FIELD                                   
*                                                                               
VVPRINT  NTR1                                                                   
         ZIC   RF,RWPRTYP          GET PRINT ROUTINE NUMBER                     
*                                                                               
         SLL   RF,2                MULTIPLY BY 4                                
         B     VBRPRIN(RF)                                                      
         SPACE 1                                                                
****************  ORDERED AS IN FILE NENVEQIN                                   
VBRPRIN  B     VPERR               0                                            
         B     VPALPH              1                                            
         B     VPINT               2                                            
         B     VPR1                3                                            
         B     VPR2                4                                            
         B     VPTIM2              5                                            
         B     VPTIM1              6                                            
         B     VPBITS              7                                            
         B     VPDATSUB            8                                            
         B     VPSHR               9                                            
         B     VPRTG               10                                           
         B     VPIMP               11                                           
         B     VPVPH               12                                           
         B     VPDATE              13                                           
         B     VPCOST              14                                           
         B     VPCOSTD             15                                           
         B     VPGAP               16                                           
VPRCNT   EQU   (*-VBRPRIN)/4                                                    
VPERR    DC    H'0'                                                             
VPBITS   DC    H'0'                NOT DEFINED YET                              
************************************************************                    
         EJECT                                                                  
***************************************************                             
* VHEAD   - ROUTINE TO PRINT HEADERS                                            
*   INPUTS: RWINBLOK                                                            
*   LOCALS: EDWORK - INTERMEDIATE PRINT FIELD                                   
*                                                                               
VHEAD    NTR1                                                                   
         ZIC   RF,RWHEDTYP         GET HEAD ROUTINE NUMBER                      
*                                                                               
         SLL   RF,2                MULTIPLY BY 4                                
         B     VBRHEAD(RF)                                                      
         SPACE 1                                                                
****************  ORDERED AS IN FILE NENVEQIN                                   
VBRHEAD  B     VHERR               0                                            
         B     VHALPH              1                                            
         B     VHDEM               2                                            
         B     VHGAP               3                                            
VHDCNT   EQU   (*-VBRHEAD)/4                                                    
VHERR    DC    H'0'                                                             
************************************************************                    
         EJECT                                                                  
*************************                                                       
*  GAP                              OPT1 IS LENGTH OF GAP                       
VMGAP    MVI   RWPRTYP,NRPGAP                                                   
         MVI   RWOUTTYP,NROSKIP                                                 
         MVI   RWOUTLEN,0                                                       
         MVI   RWHEDTYP,NRHGAP                                                  
         B     XIT                                                              
*                                                                               
**************************                                                      
VSKIP    B     XIT                 SKIP OVER THIS ONE                           
**************************                                                      
* AGENCY (2 BYTE)                                                               
VMAGY2   LA    R2,NBALPHA                                                       
         LA    R3,L'NBALPHA                                                     
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* CLIENT (3 BYTE)                                                               
VMCLI3   LA    R2,NBCLICOD                                                      
         LA    R3,L'NBCLICOD                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* PROG CODE (6 BYTE)                                                            
VMPROG6  LA    R2,NBACTPRG                                                      
         LA    R3,L'NBACTPRG                                                    
         B     DOALPHA                                                          
*                                                                               
*                                                                               
**************************                                                      
* NETWORK (4 BYTE)                                                              
VMNET4   LA    R2,NBACTNET                                                      
         LA    R3,L'NBACTNET                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* PROG NAME (16 BYTE)                                                           
VMPROG16 LA    R2,NBPROGNM                                                      
         LA    R3,L'NBPROGNM                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* PROG FILT (3 BYTE)                                                            
VMPRGF3  LA    R2,NBPRFILT                                                      
         LA    R3,L'NBPRFILT                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* ALPHA DAY (3 BYTE)                                                            
VMDAY3   LA    R2,NBDAYNAM                                                      
         LA    R3,L'NBDAYNAM                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* FEED MARKET GROUP (3 BYTE)                                                    
VMFMG3   LA    R2,NBFEEDMG                                                      
         LA    R3,L'NBFEEDMG                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* HUT AVG SCHEME (1 BYTE)                                                       
VMHUTAV1 LA    R2,NBHUTAVE                                                      
         LA    R3,L'NBHUTAVE                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* MG FOR PROG CODE (6 BYTE)                                                     
VMMGFPC6 LA    R2,NBMGFPCD                                                      
         LA    R3,L'NBMGFPCD                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* MG FOR PROG NAME (16 BYTE)                                                    
VMMGFPN  LA    R2,NBMGFPNM                                                      
         LA    R3,L'NBMGFPNM                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* MG BY PROG CODE (6 BYTE)                                                      
VMMGBPC6 LA    R2,NBMGBPCD                                                      
         LA    R3,L'NBMGBPCD                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* MG BY PROG NAME (16 BYTE)                                                     
VMMGBPN  LA    R2,NBMGBPNM                                                      
         LA    R3,L'NBMGBPNM                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* DEMO RESULT (1 BYTE)                                                          
VMDRES1  LA    R2,NBRESULT                                                      
         LA    R3,L'NBRESULT                                                    
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
* PRODUCT 3-BYTE LOOKS UP 3-BYTE PRODUCTS, STORES THEM IN APROD                 
*** ADDITIONAL INPUT: ANETWS1 - POINTS TO CLI RECORD                            
**********************************************************                      
VMPRD3   MVC   APROD,EDSPACE                                                    
         LA    R4,NBPRD                                                         
         L     R2,ANETWS1          A(CLIENT RECORD)                             
         USING CLTHDR,R2                                                        
         LA    R2,CLIST            PRODUCT LIST                                 
         DROP  R2                                                               
         LA    R3,220                                                           
         CLI   0(R4),0                                                          
         BNE   VMP1                                                             
         MVC   APROD(3),=C'UNA'     USE UNA FOR PROD 0                          
         B     VMP2                                                             
VMP1     CLI   0(R4),X'FF'                                                      
         BE    VMP2                                                             
         SPACE 2                                                                
PRLUP4   CLC   0(1,R4),3(R2)                                                    
         BE    PRLUP6                                                           
         LA    R2,4(R2)                                                         
         BCT   R3,PRLUP4                                                        
         B     VMP2                                                             
         SPACE 2                                                                
PRLUP6   MVC   APROD(3),0(R2)                                                   
VMP2     LA    R4,NBPRD2                                                        
         L     R2,ANETWS1          A(CLIENT RECORD)                             
         USING CLTHDR,R2                                                        
         LA    R2,CLIST            PRODUCT LIST                                 
         DROP  R2                                                               
         LA    R3,220                                                           
         CLI   0(R4),0                                                          
         BE    VMP4                                                             
         CLI   0(R4),X'FF'                                                      
         BE    VMP4                                                             
         SPACE 2                                                                
PRLUP8   CLC   0(1,R4),3(R2)                                                    
         BE    PRLUP10                                                          
         LA    R2,4(R2)                                                         
         BCT   R3,PRLUP8                                                        
         B     VMP4                                                             
         SPACE 2                                                                
PRLUP10  MVC   APROD+4(3),0(R2)                                                 
         MVI   APROD+3,C'/'        IF 2 PRODS                                   
VMP4     LA    R2,APROD                                                         
         LA    R3,L'APROD                                                       
         B     DOALPHA                                                          
**************************                                                      
         EJECT                                                                  
**************************                                                      
* BILLED PRODUCT - LOOKS UP 3-BYTE PRODUCT                                      
*** ADDITIONAL INPUT: ANETWS1 - POINTS TO CLI RECORD                            
**********************************************************                      
VMBILPRD EQU   *                                                                
         L     R6,AACCBLK                                                       
         USING NACCBLKD,R6                                                      
         MVC   APROD(4),EDSPACE                                                 
         LA    R4,NACBTPRD         R2 IS PROPER PROD                            
         OC    NACBTPRD,NACBTPRD   WE ARE ASSURED THAT THESE ARE THE            
         BZ    VMBDP2              SAME PROD,USE THE ONE FILLED IN              
         LA    R4,NACBIPRD                                                      
         OC    NACBIPRD,NACBIPRD                                                
         BZ    VMBPDXIT                                                         
VMBDP2   L     R2,ANETWS1          A(CLIENT RECORD)                             
         USING CLTHDR,R2                                                        
         LA    R2,CLIST            PRODUCT LIST                                 
         DROP  R2                                                               
         LA    R3,220                                                           
         CLI   0(R4),X'FF'                                                      
         BE    VMBPDXIT                                                         
         SPACE 2                                                                
BPRLUP4  CLC   0(1,R4),3(R2)                                                    
         BE    BPRLUP6                                                          
         LA    R2,4(R2)                                                         
         BCT   R3,BPRLUP4                                                       
         B     VMBPDXIT                                                         
         SPACE 2                                                                
BPRLUP6  MVC   APROD(3),0(R2)                                                   
VMBPDXIT LA    R2,APROD                                                         
         LA    R3,3                                                             
         B     DOALPHA                                                          
         DROP  R6                                                               
**************************                                                      
         EJECT                                                                  
**************************                                                      
* ESTIMATE NUMBER (1 BYTE)                                                      
VMEST1   LA    R2,NBACTEST                                                      
         LA    R3,L'NBACTEST                                                    
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
* PACKAGE NUMBER (1 BYTE)                                                       
VMPAK1   LA    R2,NBPACK                                                        
         LA    R3,L'NBPACK                                                      
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
* PRODUCT NUMBER (1 BYTE)                                                       
VMPRD1   LA    R2,NBPRD                                                         
         LA    R3,L'NBPRD                                                       
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
*NTI NUMBER    (2 BYTE)                                                         
VMNTI2   LA    R2,NBNTI                                                         
         LA    R3,L'NBNTI                                                       
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
*NSI NUMBER    (2 BYTE)                                                         
VMNSI2   LA    R2,NBNSI                                                         
         LA    R3,L'NBNSI                                                       
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
*UNIVERSE CODE (2 BYTE)                                                         
VMUNC2   LA    R2,NBUNCODE                                                      
         LA    R3,L'NBUNCODE                                                    
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
*MARKET CODE   (2 BYTE)                                                         
VMMKT2   LA    R2,NBMARKET                                                      
         LA    R3,L'NBMARKET                                                    
         B     DOALPINT                                                         
*                                                                               
**************************                                                      
*SPECIAL  REP  (2 BYTE)                                                         
VMSPREP2 LA    R2,NBSREP                                                        
         LA    R3,L'NBSREP                                                      
         B     DOALPINT                                                         
*                                                                               
*                                                                               
**************************                                                      
*HUT PCT  (2 BYTE)                                                              
VMHUTP2  LA    R2,NBHUTPCT                                                      
         LA    R3,L'NBHUTPCT                                                    
         B     DOAR2                                                            
*                                                                               
**************************                                                      
*FEED PCT (2 BYTE)                                                              
VMFEED2  LA    R2,NBFEED                                                        
         LA    R3,L'NBFEED                                                      
         B     DOAR2                                                            
*                                                                               
**************************                                                      
*UNIV PCT  (2 BYTE)                                                             
VMUNIVP2 LA    R2,NBUNIV                                                        
         LA    R3,L'NBUNIV                                                      
         B     DOAR2                                                            
*                                                                               
**************************                                                      
*IMPACT PCT  (2 BYTE)                                                           
VMIMPAC2 LA    R2,NBIMPACT                                                      
         LA    R3,L'NBIMPACT                                                    
         B     DOAR2                                                            
*                                                                               
**************************                                                      
*START-END TIME  (4 BYTE)                                                       
VMTIME4  LA    R2,NBTIME                                                        
         LA    R3,L'NBTIME                                                      
         MVI   RWPRTYP,NRPTIMEP                                                 
         B     DOMOVE                                                           
*                                                                               
**************************                                                      
*AFFIDAVIT TIME  (2 BYTE)                                                       
VMTIME2  LA    R2,NBAFFTIM                                                      
         LA    R3,L'NBAFFTIM                                                    
         MVI   RWPRTYP,NRPTIME                                                  
         B     DOMOVE                                                           
*                                                                               
**************************                                                      
*DAYPART CODE  (1 BYTE)                                                         
VMDAYP1  LA    R2,NBACTDP                                                       
         LA    R3,L'NBACTDP                                                     
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
*LENGTH  (1 BYTE)                                                               
VMLENG1  ZIC   R2,NBLEN                                                         
         LA    R3,L'NBLEN                                                       
         B     DOINT                                                            
*                                                                               
**************************                                                      
*DAY MASK(1 BYTE)                                                               
VMDAY1   LA    R2,NBDAY                                                         
         LA    R3,L'NBDAY                                                       
         B     DOBIT                                                            
*                                                                               
**************************                                                      
*LATEST ACTVITY MASK (1 BYTE)                                                   
VMLACT1  LA    R2,NBACTWHY                                                      
         LA    R3,L'NBACTWHY                                                    
         B     DOBIT                                                            
*                                                                               
**************************                                                      
*PACKAGE STATUS(1 BYTE)                                                         
VMPST1   LA    R2,NBPACKST                                                      
         LA    R3,L'NBPACKST                                                    
         B     DOBIT                                                            
*                                                                               
**************************                                                      
*UNIT STATUS(1 BYTE)                                                            
VMUNST1  LA    R2,NBUNITST                                                      
         LA    R3,L'NBUNITST                                                    
         B     DOBIT                                                            
*                                                                               
**************************                                                      
*DATE & SUBLINE (3-BYTE OUTPUT)                                                 
VMDATE   LA    R2,NBACTDAT                                                      
         LA    R3,NBACTSUB                                                      
         B     DODATSUB                                                         
*                                                                               
**************************                                                      
*BILLED DATE  (USE WHICHEVER IS FILLED IN)                                      
*   NOTE: WE ARE ASSURED THAT TIME AND INTEG DATES ARE EQUAL                    
VMBILDT  MVI   RWOUTLEN,2                                                       
         L     R6,AACCBLK                                                       
         USING NACCBLKD,R6                                                      
         MVI   RWOUTTYP,NROALPH                                                 
         MVI   RWPRTYP,NRPDATE                                                  
         L     R4,RWAOUT                                                        
         OC    NACBTDAT,NACBTDAT                                                
         BZ    VMBD2                                                            
         MVC   0(2,R4),NACBTDAT    TIME DATE                                    
         B     XITVMBDT                                                         
VMBD2    MVC   0(2,R4),NACBIDAT    INTEG DATE                                   
XITVMBDT B     XIT                                                              
         DROP  R6                                                               
*                                                                               
**************************                                                      
*PAID DATE  (USE WHICHEVER IS FILLED IN)                                        
*   NOTE: WE ARE ASSURED THAT TIME AND INTEG DATES ARE EQUAL                    
VMPAYDT  MVI   RWOUTLEN,2                                                       
         L     R6,AACCBLK                                                       
         USING NACCBLKD,R6                                                      
         MVI   RWOUTTYP,NROALPH                                                 
         MVI   RWPRTYP,NRPDATE                                                  
         L     R4,RWAOUT                                                        
         OC    NACPTDAT,NACPTDAT                                                
         BZ    VMPD2                                                            
         MVC   0(2,R4),NACPTDAT    TIME DATE                                    
         B     XITVMPDT                                                         
VMPD2    MVC   0(2,R4),NACPIDAT    INTEG DATE                                   
XITVMPDT B     XIT                                                              
         DROP  R6                                                               
*                                                                               
**************************                                                      
*MGF DATE AND SUBLINE (3-BYTE OUTPUT)                                           
VMMGFDAT LA    R2,NBMGFDAT                                                      
         LA    R3,NBMGFSUB                                                      
         B     DODATSUB                                                         
*                                                                               
**************************                                                      
*MGB DATE & SUBLINE (3-BYTE OUTPUT)                                             
VMMGBDAT LA    R2,NBMGBDAT                                                      
         LA    R3,NBMGBSUB                                                      
         B     DODATSUB                                                         
*                                                                               
**************************                                                      
*ANY ALPHA                                                                      
*      INPUTS - RWINLEN - LENGTH TO MOVE                                        
*               RWAIN - A(AREA TO MOVE FROM)                                    
VMANYALP L     R2,RWAIN                                                         
         ZIC   R3,RWINLEN                                                       
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
*ANY ALPHA   ADD IS JUST A MOVE                                                 
*      INPUTS - RWOUTLEN - LENGTH TO MOVE                                       
*               RWAIN - A(AREA TO MOVE FROM)                                    
VMADDALP L     R2,RWAIN                                                         
         ZIC   R3,RWOUTLEN                                                      
         B     DOALPHA                                                          
*                                                                               
**************************                                                      
*ANY INTEGER                                                                    
*      INPUTS - RWINLEN - LENGTH OF INTEGER DATA                                
*               RWAIN - A(AREA TO MOVE FROM)                                    
*      OUTPUTS- RWOUTLEN - 4                                                    
VMANYINT L     R2,RWAIN                                                         
         ZIC   R3,RWINLEN                                                       
         CLI   R3,4                                                             
         BNH   VMI1                                                             
         DC    H'0'                MAX LENGTH IS 4                              
VMI1     SH    R3,=H'4'                                                         
         LTR   R3,R3                                                            
         BZ    VMI5                                                             
VMI2     SRL   R2,4                DELETE 1 BYTE                                
         BCT   R3,VMI2                                                          
VMI5     MVI   RWOUTLEN,4                                                       
         B     DOINT                                                            
*                                                                               
**************************                                                      
         EJECT                                                                  
**************************                                                      
*ADD INTEGER                                                                    
*      INPUTS - RWAIN - A(AREA TO ADD FROM)                                     
*               RWAOUT - A(AREA TO ADD INTO)                                    
*                                                                               
VADDINT  L     R2,RWAIN                                                         
         L     R2,0(R2)                                                         
         L     R3,RWAOUT                                                        
         L     R4,0(R3)                                                         
         AR    R4,R2                                                            
         ST    R4,0(R3)                                                         
         B     XIT                                                              
*                                                                               
**************************                                                      
*                                                                               
**************************                                                      
*ADD COSTS                                                                      
*    9 BYTES - 1ST BYTE IS TRUE ZERO FLAG (ORRED)                               
*              2-9 BYTES ARE PL8.                                               
*      INPUTS - RWAIN - A(AREA TO ADD FROM)                                     
*               RWAOUT - A(AREA TO ADD INTO)                                    
*      OUTPUTS  RWAOUT - NEW SUM                                                
*                                                                               
VADDCOST L     R2,RWAIN                                                         
         L     R3,RWAOUT                                                        
         OC    0(1,R3),0(R2)                                                    
         AP    1(8,R3),1(8,R2)                                                  
         B     XIT                                                              
*                                                                               
**************************                                                      
*UNITS   (2 BYTE)  OPT ARG1 - E OR A OR BLANK FOR AUTOMATIC 1                   
VMUN2    SR    R2,R2                                                            
         CLI   RWOPT1,C'E'                                                      
         BE    UN2A                                                             
         CLI   RWOPT1,C'A'                                                      
         BE    UN2B                                                             
         LA    R2,1                ELSE USE 1                                   
         B     UN2D                                                             
UN2A     ICM   R2,3,NBESTUN                                                     
         B     UN2D                                                             
*                                                                               
UN2B     ICM   R2,3,NBACTUN        ACTUAL                                       
         B     UN2D                                                             
*                                                                               
UN2D     LA    R3,L'NBACTUN        LENGTHS ARE THE SAME                         
         B     DOINT                                                            
*                                                                               
**************************                                                      
*SHARE   (2 BYTE)  OPT ARG1 - E OR A                                            
VMSHR2   SR    R2,R2                                                            
         MVI   RWOPT1+2,C'S'       SET TO ASK FOR SHARE                         
         ICM   R2,3,NBESTSHR                                                    
         CLI   RWOPT1,C'A'                                                      
         BNE   SHR2A                                                            
         ICM   R2,3,NBACTSHR                                                    
SHR2A    LA    R3,L'NBACTSHR       LENGTHS ARE THE SAME                         
         B     DOR1                                                             
*                                                                               
**************************                                                      
*HUT   (2 BYTE)  OPT ARG1 - E OR A                                              
VMHUT2   SR    R2,R2                                                            
         MVI   RWOPT1+2,C'H'                                                    
         ICM   R2,3,NBESTHUT                                                    
         CLI   RWOPT1,C'A'                                                      
         BNE   HUT2A                                                            
         ICM   R2,3,NBACTHUT                                                    
HUT2A    LA    R3,L'NBACTHUT       LENGTHS ARE THE SAME                         
         B     DOR1                                                             
*                                                                               
************************************************                                
         EJECT                                                                  
************************************************                                
*                                                                               
*RTG   (2 BYTE)  OPT ARG1 - BYTE1 E OR A                                        
*                           BYTE2 RELATIVE DEMO # (0=HOMES)                     
VMRTG    BAS   RE,DEMADJ           RETURNS R4 POINTING TO PROPER 8 BYTE         
*                                  AREA                                         
         MVI   RWOPT1+2,C'R'                                                    
         SR    R2,R2                                                            
         ICM   R2,3,2(R4)          GET RTG                                      
         LA    R3,2                2 BYTES LONG                                 
         B     DOR1RTG                                                          
***************************************                                         
*                                                                               
*IMPRESSION (4 BYTE)  OPT ARG1 - BYTE1 E OR A                                   
*                                BYTE2 RELATIVE DEMO # (0=HOMES)                
VMIMP    BAS   RE,DEMADJ           RETURNS R4 POINTING TO PROPER 8 BYTE         
*                                  AREA                                         
         MVI   RWOPT1+2,C'I'                                                    
         ICM   R2,15,4(R4)         GET IMPRESSION                               
         LA    R3,4                4 BYTES LONG                                 
         B     DOINTIMP                                                         
***************************************                                         
*                                                                               
*VPH   (2 BYTE)  OPT ARG1 - BYTE1 E OR A                                        
*                           BYTE2 RELATIVE DEMO # (0=HOMES)                     
VMVPH    BAS   RE,DEMADJ           RETURNS R4 POINTING TO PROPER 8 BYTE         
*                                  AREA                                         
         MVI   RWOPT1+2,C'V'                                                    
         SR    R2,R2                                                            
         ICM   R2,3,0(R4)          GET RTG                                      
         LA    R3,2                2 BYTES LONG                                 
         B     DOINTVPH                                                         
***************************************                                         
         EJECT                                                                  
***************************************                                         
*DEMO           RETURNS THE SPECIFIC DEMO REQUESTED                             
*    (2-BYTES FOR SHARE,VPH,RTG, 4 BYTES FOR IMP)                               
*                OPT ARG1 - BYTE1 E OR A                                        
*                           BYTE2 RELATIVE DEMO # (0=HOMES)                     
*                           BYTE3 DEMO TYPE                                     
*       INTERNALS: R4 - A(8 BYTE DEMO VALUES)                                   
*                  FAKEDEMO - 3 BYTE DEMO DESCRIPTOR                            
*                                                                               
VMDEMO   BAS   RE,DEMADJ           RETURNS R4 POINTING TO PROPER 8 BYTE         
*                                  AREA                                         
         CLI   RWOPT1,0            SHOULD NEVER BE ZERO HERE                    
         BNE   DEM2                                                             
         DC    H'0'                                                             
DEM2     L     R5,NBADEM           KNOW ITS NOT ZERO                            
         USING NDDEMBLK,R5                                                      
         LA    R3,NDDEMOS                                                       
         SR    R2,R2                                                            
         IC    R2,RWOPT1+1                                                      
         LTR   R2,R2               IF HOMES                                     
         BNZ   DEM3                                                             
         MVI   FAKEDEMO,0          SET UP A FAKE HOMES REQUEST                  
         MVC   FAKEDEMO+1(1),RWOPT1+2                                           
         MVI   FAKEDEMO+3,0                                                     
         B     DEM4                                                             
*                                                                               
*                                                                               
DEM3     BCTR  R2,0                CALCULATE OFFSET IN NDDEMOS                  
         MH    R2,=H'3'                                                         
         LA    R3,0(R3,R2)         R3 NOW HAS CORRECT 3-BYTE DEMO DESC          
         MVC   FAKEDEMO(3),0(R3)                                                
         OC    FAKEDEMO,FAKEDEMO   IF NO DEMO IN EST HEADER                     
         BZ    DEMRTG              THEN PRETEND ITS A RATING AND GET 0          
         CLI   RWOPT1+2,0          IF SPECIFIC TYPE REQUESTED                   
         BE    DEM4                                                             
         MVC   FAKEDEMO+1(1),RWOPT1+2                                           
DEM4     CLI   FAKEDEMO+1,C'I'                                                  
         BE    DEMIMP                                                           
         CLI   FAKEDEMO+1,C'T'                                                  
         BE    DEMIMP                                                           
         CLI   FAKEDEMO+1,C'R'                                                  
         BE    DEMRTG                                                           
         CLI   FAKEDEMO+1,C'V'                                                  
         BE    DEMVPH                                                           
         CLI   FAKEDEMO+1,C'S'                                                  
         BE    DEMSHR                                                           
         CLI   FAKEDEMO+1,C'H'                                                  
         BE    DEMHUT                                                           
         DC    H'0'                UNKNOWN DESCRIPTOR                           
DEMRTG   SR    R2,R2                                                            
         ICM   R2,3,2(R4)          GET RTG                                      
         LA    R3,2                2 BYTES LONG                                 
         B     DOR1RTG                                                          
DEMVPH   SR    R2,R2                                                            
         ICM   R2,3,0(R4)          GET VPH                                      
         LA    R3,2                2 BYTES LONG                                 
         B     DOINTVPH                                                         
DEMIMP   ICM   R2,15,4(R4)         GET IMP                                      
         LA    R3,4                2 BYTES LONG                                 
         B     DOINTIMP                                                         
DEMSHR   CLI   RWOPT1,C'A'                                                      
         BNE   DEMSHRE                                                          
         SR    R2,R2                                                            
         ICM   R2,3,NBACTSHR       ACTUAL SHARE                                 
         LA    R3,2                L'INPUT                                      
         B     DOR1SHR                                                          
DEMSHRE  SR    R2,R2                                                            
         ICM   R2,3,NBESTSHR       ESTIMATED SHARE                              
         LA    R3,2                L'INPUT                                      
         B     DOR1SHR                                                          
DEMHUT   CLI   RWOPT1,C'A'                                                      
         BNE   DEMHUTE                                                          
         SR    R2,R2                                                            
         ICM   R2,3,NBACTHUT       ACTUAL HUT                                   
         LA    R3,2                L'INPUT                                      
         B     DOR1                                                             
DEMHUTE  SR    R2,R2                                                            
         ICM   R2,3,NBESTHUT       ESTIMATED HUT                                
         LA    R3,2                L'INPUT                                      
         B     DOR1                                                             
*                                                                               
         DROP  R5                                                               
***************************************************                             
         EJECT                                                                  
***************************************                                         
*COST           RETURNS THE SPECIFIC COST REQUESTED                             
*    (1-BYTE FLAG =0 IF NONE, 1 IF ZERO + 8 BYTE PACKED COST)                   
*       INPUTS:                                                                 
*                OPT ARG1 - COST MASK OF COSTS TO BE ADDED                      
*                OPT ARG2 - COST MASK OF COSTS TO BE SUBTRACTED                 
*       LOCALS:  R2 - CURRENT SUM                                               
*                R3 - ZERO IF NO COSTS, 1 IF ANY FOUND                          
*                ARGTOADD - SPECIAL FULLWORD MASK. MUST ALSO BE A               
*                           MATCH IF ANY SPECIAL MASK BITS ARE SET.             
*                BYTE - 0 IF ZERO, 1 IF TRUE ZERO                               
*                PRDFLAG - SET IF ONE PRODUCT CHOSEN                            
*                                                                               
VMCOST EQU     *                                                                
         XC    ARGTOADD,ARGTOADD   CLEAR SPECIAL ARG                            
         SR    R2,R2               INITIALIZE                                   
         SR    R3,R3                                                            
*                                                                               
         MVI   BYTE,0              PRESET BYTE                                  
*                                                                               
PU1      CLI   NBUSER+8,C'Y'       IF FLAG SET TO USE ASSIGNED                  
         BNE   PU3                                                              
         OC    NBASSIGN,NBASSIGN   AND IF ASSIGNED COST NON-ZERO                
         BNZ   PU4                                                              
         TM    NBUNITST,X'08'      OR ASSIGNED COST TRULY ZERO                  
         BZ    PU3                                                              
         MVI   BYTE,1                                                           
PU3      TM     NBUNITST,X'20'                                                  
         BZ     PU4                                                             
         MVI    BYTE,1                                                          
PU4      EQU   *                                                                
*                                                                               
*                                                                               
*                                                                               
PU5      L     R0,NBACTUAL         GET NET DOLLARS                              
         BAS   RE,FINDNET                                                       
         ST    R0,NETACT                                                        
*                                                                               
         L     R0,NBASSIGN                                                      
         BAS   RE,FINDNET                                                       
         ST    R0,NETASS                                                        
*                                                                               
         L     R0,NBCALCOS                                                      
         BAS   RE,FINDNET                                                       
         ST    R0,NETCASS                                                       
*                                                                               
         L     R0,NBINTEG                                                       
         BAS   RE,FINDNET                                                       
         ST    R0,NETINT                                                        
*                                                                               
         GOTO1 ADDEM,DMCB,NBCALCOS,=AL4(CASSMSK)                                
         GOTO1 ADDEM,DMCB,NETCASS,=AL4(NTCSSMSK)                                
*                                                                               
         MVI   BYTE,0                                                           
         TM    NBUNITST,X'20'                                                   
         BZ    PU6                                                              
         MVI   BYTE,1                                                           
PU6      GOTO1 ADDEM,DMCB,NBACTUAL,=AL4(ACTMSK)                                 
         GOTO1 ADDEM,DMCB,NETACT,=AL4(NTACTMSK)                                 
*                                                                               
         MVI   BYTE,0                                                           
         TM    NBUNITST,X'08'                                                   
         BZ    PU8                                                              
PU8      GOTO1 ADDEM,DMCB,NBASSIGN,=AL4(ASSMSK)                                 
         GOTO1 ADDEM,DMCB,NETASS,=AL4(NTASSMSK)                                 
*                                                                               
         MVI   BYTE,0                                                           
         GOTO1 ADDEM,DMCB,NBINTEG,=AL4(INTMSK)                                  
         GOTO1 ADDEM,DMCB,NETINT,=AL4(NTINTMSK)                                 
*                                                                               
         GOTO1 ADDEM,DMCB,NBFEED,=AL4(FEEDMSK)                                  
*                                                                               
         L     R6,AACCBLK                                                       
         USING NACCBLKD,R6                                                      
*                                                                               
         MVC   BYTE,NACBTFLG                                                    
         GOTO1 ADDEM,DMCB,NACBTGRS,=AL4(BTGMSK)                                 
         GOTO1 ADDEM,DMCB,NACBTNET,=AL4(BTNMSK)                                 
*                                  INTEG                                        
BILLINT  MVC   BYTE,NACBIFLG                                                    
         GOTO1 ADDEM,DMCB,NACBIGRS,=AL4(BIGMSK)                                 
         GOTO1 ADDEM,DMCB,NACBINET,=AL4(BINMSK)                                 
*                                                                               
         MVC   BYTE,NACPTFLG                                                    
         GOTO1 ADDEM,DMCB,NACPTGRS,=AL4(PTGMSK)                                 
         GOTO1 ADDEM,DMCB,NACPTNET,=AL4(PTNMSK)                                 
*                                                                               
*                                    INTEG                                      
PAYINT   MVC   BYTE,NACPIFLG                                                    
         GOTO1 ADDEM,DMCB,NACPIGRS,=AL4(PIGMSK)                                 
         GOTO1 ADDEM,DMCB,NACPINET,=AL4(PINMSK)                                 
         DROP  R6                                                               
*                                                                               
XITPC    B     DOCOST                                                           
*                                                                               
FINDNET  SRDA  R0,32               PREPARE MULTIPLICAND                         
         M     R0,=F'8500'                                                      
         SLDA  R0,1                DOUBLE FOR ROUNDING                          
         D     R0,=F'10000'                                                     
         LTR   R1,R1                                                            
         BM    *+8                                                              
         AH    R1,=H'1'                                                         
         SRA   R1,1                                                             
         LR    R0,R1               REPLACE COST WITH NET                        
         BR    RE                                                               
         EJECT                                                                  
****************************************************************                
****************************************************************                
*                                                                               
         EJECT                                                                  
*********************************************                                   
* ADDEM - ADD FIELD TO R2                                                       
*   INPUTS - R2 CURRENT TOTAL                                                   
*            OPTARG1 - BITMASK OF COSTS TO ADD                                  
*            OPTARG2 - BITMASK OF COSTS TO SUBTRACT                             
*            BYTE - SET TO 1 IF TRUE ZERO                                       
*            ARGTOADD - SET FOR SPECIAL COSTS                                   
*            ARG1 - A(FULLWORD TO ADD)                                          
*            ARG2 - A(BIT MASK OF THIS FULLWORD)                                
*   OUTPUTS - R2 - NEW TOTAL                                                    
*             R3 - NONZERO IF FULLWORD NOT ZERO OR BYTE SET                     
*********************************                                               
ADDEM    NTR1                                                                   
         L     R5,0(R1)                                                         
         L     R5,0(R5)            COST                                         
         L     R4,4(R1)                                                         
         L     R4,0(R4)            BITMASK                                      
*                                                                               
         ST    R4,FULL             PUT MASK FOR THIS COST IN FULL               
         NC    FULL,RWOPT1         IF MASK MATCH                                
         BZ    CKSUB                                                            
         MVC   FULL,RWOPT1                                                      
         NC    FULL,=AL4(SPECMSK)   IF SPECIAL COST                             
         BZ    AML2                                                             
         OC    ARGTOADD,ARGTOADD    IF SPECIAL ARG GIVEN                        
         BZ    AML2                                                             
         NC    FULL,ARGTOADD       THEN MUST ALSO MATCH SPECIAL ARG             
         BZ    CKSUB                                                            
*                                                                               
AML2     AR    R2,R5               SO ADD IT                                    
         CLI   BYTE,1              IF BYTE SET                                  
         BNE   AML3                                                             
         ZIC   R3,1                   SET R3                                    
*                                                                               
AML3     LTR   R5,R5               IF ZERO GO ON                                
         BZ    CKSUB                                                            
         ZIC   R3,1                A NUMBER, SO SET R3                          
*                                                                               
CKSUB    ST    R4,FULL             NOW DO FOR SUBTRACTION                       
         NC    FULL,RWOPT2         IF MASK MATCH                                
         BZ    XITAD                                                            
         MVC   FULL,RWOPT2                                                      
         NC    FULL,=AL4(SPECMSK)   IF SPECIAL COST                             
         BZ    AML4                                                             
         OC    ARGTOADD,ARGTOADD    IF SPECIAL ARG GIVEN                        
         BZ    AML4                                                             
         NC    FULL,ARGTOADD       THEN MUST ALSO MATCH SPECIAL ARG             
         BZ    XITAD                                                            
*                                                                               
AML4     SR    R2,R5               SO SUBTRACT IT                               
*                                                                               
         CLI   BYTE,1              IF BYTE SET                                  
         BNE   AD2                                                              
         ZIC   R3,1                   SET R3                                    
*                                                                               
AD2      LTR   R5,R5               IF ZERO EXIT                                 
         BZ    XITAD                                                            
         ZIC   R3,1                A NUMBER, SO SET R3                          
*                                                                               
XITAD    XIT1  REGS=(R2,R3)                                                     
***************************************                                         
         EJECT                                                                  
***************************************                                         
* DEMADJ - RETURNS R4 POINTING TO THE CORRECT 8 BYTE DEMO                       
*          INPUTS: RWOPT1 - BYTE1 - E OR A                                      
*                             BYTE2 - RELATIVE DEMO NUMBER (0=HOMES)            
*          OUTPUT: R4 - A(8 BYTE DEMO BLOCK)                                    
*                  RWHEDTYP - NRHDEM1                                           
*                                                                               
DEMADJ   NTR1                                                                   
         MVI   RWHEDTYP,NRHDEM1   SET HEAD TYPE TO DEMO                         
         CLI   RWOPT1+1,0         IF HOMES                                      
         BNE   OTHERTG                                                          
         SR    R2,R2                                                            
         LA    R4,NBESTHOM                                                      
         CLI   RWOPT1,C'A'                                                      
         BNE   DADJXIT                                                          
         LA    R4,NBACTHOM                                                      
         B     DADJXIT                                                          
*                                                                               
OTHERTG  L     R5,NBADEM                                                        
         LTR   R5,R5               DEMO BLOCK MUST EXIST                        
         BNZ   DADJB                                                            
         DC    H'0'                                                             
         USING NDDEMBLK,R5                                                      
DADJB    LA    R4,NDESTDEM                                                      
         CLI   RWOPT1,C'A'         ESTIMATED DEMOS                              
         BNE   DADGC                                                            
         LA    R4,NDACTDEM                                                      
DADGC    ZIC   R2,RWOPT1+1         DEMO NUMBER                                  
         BCTR  R2,0                CALCULATE OFFSET                             
         SLL   R2,3                                                             
         LA    R4,0(R4,R2)         POINTS TO PROPER DEMO                        
DADJXIT  XIT1  REGS=(R4)                                                        
         DROP  R5                                                               
**********************************************************                      
***************************************************                             
         EJECT                                                                  
****************************************                                        
* DOMOVE - DOES ALPHA MOVE TO INTERNAL RECORD                                   
*                                                                               
*    INPUTS: R2 - A(AREA TO MOVE FROM)                                          
*            R3 - L'FIELD TO MOVE (FROM AND TO)                                 
*            RWAOUT - A(AREA TO MOVE TO)                                        
*   OUTPUTS: RWOUTLEN - LENGTH OF FIELD ON INTERNAL RECORD                      
******************                                                              
DOALPHA  EQU   *                                                                
         MVI   RWPRTYP,NRPALPH                                                  
         B     DOMOVE                                                           
******************                                                              
DOALPINT EQU   *                                                                
         MVI   RWPRTYP,NRPINT                                                   
         B     DOMOVE                                                           
******************                                                              
DOAR1    EQU   *                                                                
         MVI   RWPRTYP,NRPR1                                                    
         B     DOMOVE                                                           
******************                                                              
DOAR2    EQU   *                                                                
         MVI   RWPRTYP,NRPR2                                                    
         B     DOMOVE                                                           
******************                                                              
DOBIT    EQU   *                                                                
         MVI   RWPRTYP,NRPBITS                                                  
         B     DOMOVE                                                           
******************                                                              
*                                                                               
*                                                                               
DOMOVE   L     R4,RWAOUT                                                        
         MVI   RWOUTTYP,NROALPH                                                 
         STC   R3,RWOUTLEN                                                      
         BCTR  R3,0                LENGTH-1 IN R3                               
         EXMVC R3,0(R4),0(R2)                                                   
         B     XIT                                                              
*************************************************                               
         EJECT                                                                  
****************************************                                        
* DODATSUB- DOES DATE-SUBLINE MOVE TO INTERNAL RECORD                           
*                                                                               
*    INPUTS: R2 - A(2-BYTE COMPRESSED DATE)                                     
*            R3 - A(1-BYTE SUBLINE)                                             
*            RWAOUT  - A(OUTPUT AREA)                                           
*    OUTPUTS: RWOUTLEN - OUTPUT LENGTH : 3                                      
*             RWOUTTYP - ALPHA                                                  
*             RWPRTYP  - DATE-SUBLINE                                           
******************                                                              
DODATSUB MVI   RWOUTLEN,3                                                       
         MVI   RWOUTTYP,NROALPH                                                 
         MVI   RWPRTYP,NRPDATSB                                                 
         L     R4,RWAOUT                                                        
         MVC   0(2,R4),0(R2)       MOVE DATE                                    
         MVC   2(1,R4),0(R3)       MOVE SUBLINE                                 
         B     XIT                                                              
**************************************************                              
         EJECT                                                                  
****************************************                                        
* DONUM - STORES NUMBER AS FULLWORD ON INTERNAL RECORD                          
*                                                                               
*    INPUTS: R2 - CONTAINS INTEGER VALUE TO STORE                               
*            RWAOUT - A(AREA TO STORE VALUE)                                    
*    OUTPUTS:RWOUTLEN - SET TO 4                                                
*            RWOUTTYP - SET TO INTEGER                                          
******************                                                              
DOR1SHR  EQU   *                                                                
         MVI   RWPRTYP,NRPSHR                                                   
         B     DONUM                                                            
******************                                                              
DOR1RTG  EQU   *                                                                
         MVI   RWPRTYP,NRPRTG                                                   
         B     DONUM                                                            
******************                                                              
DOINTIMP EQU   *                                                                
         MVI   RWPRTYP,NRPIMP                                                   
         B     DONUM                                                            
******************                                                              
DOINTVPH EQU   *                                                                
         MVI   RWPRTYP,NRPVPH                                                   
         B     DONUM                                                            
******************                                                              
DOR1     EQU   *                                                                
         MVI   RWPRTYP,NRPR1                                                    
         B     DONUM                                                            
******************                                                              
DOINT    EQU   *                                                                
         MVI   RWPRTYP,NRPINT                                                   
         B     DONUM                                                            
******************                                                              
*                                                                               
******************                                                              
DONUM    L     R4,RWAOUT                                                        
         ST    R2,0(R4)                                                         
         MVI   RWOUTLEN,4                                                       
         LA    R1,NRONUM                                                        
         STC   R1,RWOUTTYP                                                      
         B     XIT                                                              
*                                                                               
****************************************                                        
         EJECT                                                                  
****************************************                                        
* DOCOST - STORES COST AS 8-BYTE PACKED ON INTERNAL RECORD                      
*          INCLUDES 1 BYTE FLAG TO TELL IF EXISTS                               
*          ADJUSTS COST BY PCTG IF SPECIFIED                                    
*                                                                               
*    INPUTS: R2 - CONTAINS COST TO STORE                                        
*            R3 - SET IF COST EXITS                                             
*            RWAOUT - A(AREA TO STORE VALUE)                                    
*            NACPCT - PCTG TO ADJUST COST BY                                    
*    OUTPUTS:RWOUTLEN - SET TO 9                                                
*            RWOUTTYP - SET TO COST                                             
******************                                                              
DOCOST   EQU   *                                                                
         L     R6,AACCBLK                                                       
         USING NACCBLKD,R6                                                      
*                                                                               
         MVI   RWOUTLEN,9                                                       
         MVI   RWOUTTYP,NROCOST                                                 
         MVI   RWPRTYP,NRPCOST     DEFAULT COST                                 
*                                                                               
         LR    R5,R2               PUT COST IN R5 FOR MULTIPLICATION            
         OC    NACPCT,NACPCT       IF PCT IS 0 OR 100, DON'T RECALC             
         BZ    DOCO2                                                            
         CLC   NACPCT,=F'10000'                                                 
         BE    DOCO2                                                            
*                                                                               
         M     R4,NACPCT           MULT BY PCTG                                 
         A     R5,=F'5000'         ROUNDING FACTOR                              
         D     R4,=F'10000'        RESULT IN R5                                 
*                                                                               
DOCO2    L     R4,RWAOUT                                                        
         CVD   R5,1(R4)            PACKED COST                                  
         MVI   0(R4),0             FLAG                                         
         LTR   R3,R3                                                            
         BZ    DOCEND                                                           
         MVI   0(R4),1                                                          
DOCEND   B     XIT                                                              
         DROP  R6                                                               
         EJECT                                                                  
****************                                                                
* VPGAP - PRINT SPACES                                                          
*     INPUTS: RWPRLEN - LENGTH OF GAP                                           
*             RWAPR   - ADRESS TO PRINT AT                                      
VPGAP    L     R3,RWAPR                                                         
         ZIC   R2,RWPRLEN                                                       
         LTR   R2,R2                                                            
         BZ    VPGXIT                                                           
         BCTR  R2,0                LENGTH FOR MOVE                              
         EXMVC R2,0(R3),EDSPACE    MOVE IN SPACES                               
VPGXIT   B     XIT                                                              
****************                                                                
* VHGAP - PRINT SPACES IN HEADER                                                
*     INPUTS: RWPRLEN - LENGTH OF GAP                                           
*             RWAHEDOU - ADRESS TO PRINT AT                                     
VHGAP    L     R3,RWAHEDOU                                                      
         ZIC   R2,RWPRLEN                                                       
         LTR   R2,R2                                                            
         BZ    VHGXIT                                                           
         BCTR  R2,0                LENGTH FOR MOVE                              
         EXMVC R2,0(R3),EDSPACE    MOVE IN SPACES                               
VHGXIT   B     XIT                                                              
         EJECT                                                                  
*********                                                                       
* VPALPH - PRINT ALPHA                                                          
*        INPUTS: RWOUTLEN - LENGTH OF FIELD ON INTERNAL RECORD                  
*                RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*                 RWPRLEN - IF 0 WILL BE SET                                    
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWPRLEN - SET TO RWOUTLEN IF INPUT AS 0                       
*                                                                               
VPALPH   ZIC   R2,RWOUTLEN                                                      
         LTR   R2,R2                                                            
         BNZ   VPA4                                                             
         DC    H'0'                                                             
VPA4     MVC   EDWORK,EDSPACE                                                   
         BCTR  R2,0                                                             
         L     R5,RWAOUT                                                        
         EXMVC R2,EDWORK,0(R5)     MOVE TO OUTPUT AREA                          
*                                                                               
         CLI   RWPRLEN,0           IF PR LEN = 0                                
         BNE   VPAEND                                                           
         MVC   RWPRLEN(1),RWOUTLEN  THEN DEFAULT IT TO OUTLEN                   
*                                                                               
VPAEND   B     FINED                                                            
************************                                                        
         EJECT                                                                  
*********                                                                       
* VHALPH - PRINT ALPHA HEADER                                                   
*        INPUTS: RWHEDILN - LENGTH OF ALPHA DATA FOR HEADER                     
*                RWAHEDIN - A(ALPHA DATA TO PRINT)                              
*                RWHEDOLN - LENGTH OF OUTPUT PORTION OF PRINT                   
*                           (DEFAULTS TO RWPRLEN)                               
*                RWAHEDOU - A(AREA TO PRINT)                                    
*                           (DEFAULTS TO RWAPR)                                 
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                                                                               
VHALPH   ZIC   R2,RWHEDILN                                                      
         LTR   R2,R2                                                            
         BNZ   VHA4                                                             
         DC    H'0'                                                             
VHA4     MVC   EDWORK,EDSPACE                                                   
         BCTR  R2,0                                                             
         L     R5,RWAHEDIN                                                      
         EXMVC R2,EDWORK,0(R5)     MOVE TO OUTPUT AREA                          
*                                                                               
         CLI   RWHEDOLN,0           IF PR LEN = 0                               
         BNE   VHA6                                                             
         MVC   RWHEDOLN,RWPRLEN    THEN DEFAULT IT TO OUTLEN                    
VHA6     OC    RWAHEDOU,RWAHEDOU                                                
         BNZ   VHAEND                                                           
         MVC   RWAHEDOU,RWAPR                                                   
*                                                                               
VHAEND   B     FINHEAD                                                          
************************                                                        
         EJECT                                                                  
*********                                                                       
* VHDEM - PRINTS DEMO HEADER                                                    
*        INPUTS: RWOPT1 - SECOND BYTE - RELATIVE DEMO NUMBER (0=HOMES)          
*                         THIRD BYTE - TYPE FOR HOMES                           
*                RWHEDOLN - LENGTH OF OUTPUT PORTION OF PRINT                   
*                           (DEFAULTS TO RWPRLEN)                               
*                RWAHEDOU - A(AREA TO PRINT)                                    
*                           (DEFAULTS TO RWAPR)                                 
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*        LOCALS : R3 - NET DEMO BLOCK                                           
*                 DBLOCK - NEEDED FOR DEMOCON                                   
*                                                                               
VHDEM    MVC   EDWORK,EDSPACE                                                   
*                                                                               
         CLI   RWHEDOLN,0           IF PR LEN = 0                               
         BNE   VHD2                                                             
         MVC   RWHEDOLN,RWPRLEN    THEN DEFAULT IT TO OUTLEN                    
VHD2     OC    RWAHEDOU,RWAHEDOU                                                
         BNZ   VHD4                                                             
         MVC   RWAHEDOU,RWAPR                                                   
*                                                                               
*                                                                               
VHD4     L     R3,NBADEM                                                        
         USING NDDEMBLK,R3         R3 PTS TO DEMO BLOCK                         
         ZIC   R6,RWOPT1+1         DEMO NUMBER                                  
         LTR   R6,R6               IF R6=0 THEN HOMES                           
         BNZ   VHD5                                                             
         MVI   FAKEDEMO,0          SET UP A FAKE HOMES REQUEST                  
         MVC   FAKEDEMO+1(1),RWOPT1+2                                           
         MVI   FAKEDEMO+3,0                                                     
         B     VHD6                                                             
VHD5     BCTR  R6,0                CALCULATE OFFSET                             
         MH    R6,=H'3'              EACH DEMO IS 3-BYTES                       
         LA    R6,NDDEMOS(R6)      R6 PTS TO PROPER DEMO                        
         MVC   FAKEDEMO(3),0(R6)                                                
VHD6     CLI   FAKEDEMO+1,X'21'    IF A USER DEMO                               
         BE    VVDCUSER                                                         
         CLI   FAKEDEMO+1,63       IF A WEIGHTED DEMO                           
         BE    VVDCWGHT                                                         
         CLI   RWOPT1+2,0          IF DEMO SPECIFIED                            
         BE    VVDOCON                                                          
         MVC   FAKEDEMO+1(1),RWOPT1+2                                           
         B     VVDOCON                                                          
*                                                                               
VVDCWGHT CLI   RWHEDOLN,7          IF LENGTH <7 USE 5/5                         
         BNL   VVDC7                                                            
         MVC   EDWORK(5),=C'WGTED'                                              
         MVC   EDWORK2(5),=C'*****'                                             
         B     VVHDEND                                                          
VVDC7    MVC   EDWORK(7),NDWGTNAM    IF FORMAT 7: 7/5                           
         MVC   EDWORK2(5),=C'(WGT)'                                             
         B     VVHDEND                                                          
*                                                                               
VVDCUSER ZIC   R1,FAKEDEMO+2       GET USER DEMO NUMBER                         
         BCTR  R1,0                DECREMENT TO CALC OFFSET                     
         MH    R1,=H'7'            USER NAMES ARE 7 BYTES                       
         LA    R1,NDUSRNMS(R1)     ADRESS OF USER DEMO                          
         CLI   RWHEDOLN,7          IF FORMAT 5: 5/5                             
         BNL   VVDCU7                                                           
         MVC   EDWORK(5),=C'USER '                                              
         MVC   EDWORK2(5),=C'*****'                                             
         B     VVHDEND                                                          
VVDCU7   MVC   EDWORK(7),0(R1)        IF FORMAT 7: 7/5                          
         MVC   EDWORK2(6),=C'(USER)'                                            
         B     VVHDEND                                                          
*                                                                               
VVDOCON  XC    DBLOCK,DBLOCK       SET UP DBLOCK                                
         MVC   DBFILE,=C'NTI'                                                   
         MVC   DBCOMFCS,NBACOM                                                  
         MVI   DBSELMED,C'N'                                                    
         MVI   DBSELSRC,C'N'                                                    
         LA    R2,7                                                             
         CLI   RWHEDOLN,7          SET R2 TO 5 OR 7                             
         BNL   VVDOC2                                                           
         LA    R2,5                                                             
VVDOC2   GOTO1 NBCALLOV,DMCB,0,X'D9000AE0'     A(DEMOCON)                       
         L     RF,DMCB                                                          
         GOTO1 (RF),DMCB,(0,FAKEDEMO),((R2),DEMWORK),(C'S',DBLOCK)              
         CLI   RWHEDOLN,7                                                       
         BNL   VVDOC4                                                           
         MVC   EDWORK(5),DEMWORK            5/5 FORMAT                          
         B     VVDOC6                                                           
VVDOC4   MVC   EDWORK(7),DEMWORK            7/5 FORMAT                          
VVDOC6   OC    FAKEDEMO,FAKEDEMO   DONT PRINT IF NO DEMO                        
         BZ    VVHDEND                                                          
         CLI   FAKEDEMO+1,C'I'                                                  
         BE    HEDIMP                                                           
         CLI   FAKEDEMO+1,C'T'                                                  
         BE    HEDIMP                                                           
         CLI   FAKEDEMO+1,C'R'                                                  
         BE    HEDRTG                                                           
         CLI   FAKEDEMO+1,C'V'                                                  
         BE    HEDVPH                                                           
         CLI   FAKEDEMO+1,C'S'                                                  
         BE    HEDSHR                                                           
         CLI   FAKEDEMO+1,C'H'                                                  
         BE    HEDHUT                                                           
         DC    H'0'                UNKNOWN DESCRIPTOR                           
HEDIMP   MVC   EDWORK2(5),=C'(000)'                                             
         B     VVHDEND                                                          
HEDRTG   MVC   EDWORK2(5),=C'(RTG)'                                             
         B     VVHDEND                                                          
HEDVPH   MVC   EDWORK2(5),=C'(VPH)'                                             
         B     VVHDEND                                                          
HEDSHR   MVC   EDWORK2(5),=C'(SHR)'                                             
         B     VVHDEND                                                          
HEDHUT   MVC   EDWORK2(5),=C'(HUT)'                                             
         B     VVHDEND                                                          
VVHDEND  B     FINHEAD                                                          
         DROP  R3                                                               
************************                                                        
         EJECT                                                                  
*********                                                                       
* VPDATSUB - PRINT A DATE-SUBLINE                                               
*        INPUTS: RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWPRLEN - IF ZERO, DEFAULT TO 8                               
*                                                                               
VPDATSUB CLI   RWPRLEN,0                                                        
         BNE   VPDTS2                                                           
         MVI   RWPRLEN,8                                                        
VPDTS2   L     R3,RWAOUT                                                        
*                                                                               
         L     RF,=V(DATCON)                                                    
         A     RF,RELO                                                          
         GOTO1 (RF),DMCB,(2,0(R3)),(7,EDWORK)                                   
*                                                                               
         CLI   2(R3),1                                                          
         BE    VPDEX                                                            
         MVI   EDWORK+5,C'-'                                                    
         ZIC   R4,2(R3)                                                         
         EDIT  (R4),(3,EDWORK+6),ALIGN=LEFT                                     
*                                                                               
VPDEX    B     FINED                                                            
************************                                                        
         EJECT                                                                  
*********                                                                       
* VPDATE - PRINT A DATE                                                         
*        INPUTS: RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWPRLEN - DEFAULT = 5                                         
*                                                                               
VPDATE   MVC   EDWORK,EDSPACE                                                   
         CLI   RWPRLEN,0                                                        
         BNE   VPD2                                                             
         MVI   RWPRLEN,5                                                        
VPD2     L     R3,RWAOUT                                                        
*                                                                               
         OC    0(2,R3),0(R3)                                                    
         BZ    VPDEND                                                           
         L     RF,=V(DATCON)                                                    
         A     RF,RELO                                                          
         GOTO1 (RF),DMCB,(2,0(R3)),(7,EDWORK)                                   
*                                                                               
VPDEND   B     FINED                                                            
************************                                                        
         EJECT                                                                  
****************************************                                        
* VPCOST - PRINT A COST (WITH DECIMAL PLACES)                                   
* VPCOSTD - PRINT A COST WITH NO DECIMAL PLACES                                 
*   COST FIELD - 9 BYTES - 1ST BYTE IS TRUE ZERO FLAG                           
*                          (SET IF BLANKS SHOULD BE PRINTED)                    
*                          BYTES 2-9 ARE PL8 COST                               
*        INPUTS: RWAOUT   - A(COST FIELD IN INTERNAL RECORD)                    
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWDROP -  NUMBER OF CHARS TO DROP                             
*                 RWEDDEC - 2 DECIMALS TO PRINT                                 
*                 RWEDALGN - 'R' RIGHT ALIGN COST                               
*                 RWPRLEN - DEFAULT COST=10, COSTD=7                            
*                                                                               
*********                                                                       
VPCOSTD  MVI   RWDROP,3            DROP DECIMALS FOR COSTP                      
         CLI   RWPRLEN,0                                                        
         BNE   VPC2                                                             
         MVI   RWPRLEN,7                                                        
         B     VPC2                                                             
VPCOST   MVI   RWDROP,0                                                         
         CLI   RWPRLEN,0                                                        
         BNE   VPC2                                                             
         MVI   RWPRLEN,10                                                       
VPC2     MVI   RWEDDEC,2           TWO DECIMAL PLACES                           
         MVI   RWEDALGN,C'R'       RIGHT ALIGN COSTS                            
         L     R2,RWAOUT                                                        
         MVC   EDWORK,EDSPACE                                                   
         CLI   0(R2),0             IF TRUE ZERO NOT SET, EXIT                   
         BE    XITVPC                                                           
         EDIT  (P8,1(R2)),(13,EDWORK),2,FLOAT=-,ZERO=NOBLANK                    
*                                                                               
         CLI   RWDROP,0            NOW DROP CHARS TO PRINT                      
         BE    XITVPC                                                           
         ZIC   R1,RWDROP           NOW DROP LAST CHARS                          
         LA    R4,13               L'OUPUT                                      
         SR    R4,R1               OFFSET TO CHARS TO BLANK                     
         LA    R5,RWOUTLEN                                                      
         LA    R5,0(R4,R5)                                                      
         MVC   0(8,R5),EDSPACE                                                  
XITVPC   B     FINED                                                            
*                                                                               
***********************                                                         
************************                                                        
         EJECT                                                                  
*********                                                                       
* VPTIM2 - PRINT A TIME  RANGE EXPRESSION                                       
*        INPUTS: RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWPRLEN - DEFAULT=11                                          
*                                                                               
VPTIM2   CLI   RWPRLEN,0                                                        
         BNE   VPT2                                                             
         MVI   RWPRLEN,11                                                       
VPT2     L     R3,RWAOUT                                                        
*                                                                               
         L     RF,=V(UNTIME)                                                    
         A     RF,RELO                                                          
         GOTO1 (RF),DMCB,0(R3),EDWORK,0                                         
*                                                                               
         B     FINED                                                            
************************                                                        
         EJECT                                                                  
*********                                                                       
* VPTIM1 - PRINT AN AFFIDAVIT TIME  EXPRESSION                                  
*        INPUTS: RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*        OUTPUTS: EDWORK  - LEFT JUSTIFIED FIELD TO PRINT                       
*                 RWPRLEN - DEFAULT=5                                           
********                                                                        
******** NOTE PROBLEM: IF =0 NOT THERE OR 12M. ASSUME NOT THERE                 
*                                                                               
VPTIM1   CLI   RWPRLEN,0                                                        
         BNE   VTM12                                                            
         MVI   RWPRLEN,5                                                        
VTM12    L     R3,RWAOUT                                                        
         XC    FULL,FULL           SEND 4 BYTE FIELD TO TIMVAL                  
         MVC   FULL(2),0(R3)                                                    
         OC    0(2,R3),0(R3)       IF ZERO DON'T GO TO UNTIME                   
         B     XITTIM1                                                          
*                                                                               
         L     RF,=V(UNTIME)                                                    
         A     RF,RELO                                                          
         GOTO1 (RF),DMCB,0(R3),EDWORK                                           
*                                                                               
XITTIM1  B     FINED                                                            
************************                                                        
         EJECT                                                                  
**********                                                                      
VPSHR    B     VPR1                FOR NOW TREAT SHARE AS R1                    
VPIMP    B     VPINT               FOR NOW TREAT IMP AS INT                     
VPVPH    B     VPR1                FOR NOW TREAT VPH AS R1                      
VPRTG    B     VPR1                FOR NOW TREAT IMP AS R1                      
*********                                                                       
* VPNUM - PRINT NUM                                                             
*        INPUTS: RWOUTLEN - LENGTH OF FIELD IN INTERNAL RECORD                  
*                RWAOUT   - A(FIELD IN INTERNAL RECORD)                         
*        OUTPUTS: EDWORK  - FIELD IN PRINTABLE FORMAT                           
*                 RWPRLEN - DEFAULT=6                                           
*                 RWEDALGN - RIGHT ALIGN NUMERICS                               
*****************                                                               
VPINT    MVI   RWEDDEC,0           0 DECIMAL PLACES                             
         B     VPNUM                                                            
VPR1     MVI   RWEDDEC,1           1 DECIMAL PLACE                              
         B     VPNUM                                                            
VPR2     MVI   RWEDDEC,2           2 DECIMAL PLACES                             
         B     VPNUM                                                            
*                                                                               
VPNUM    MVI   RWEDALGN,C'R'       RIGHT ALIGN NUMERICS                         
         CLI   RWPRLEN,0                                                        
         BNE   VPI0                                                             
         MVI   RWPRLEN,6                                                        
VPI0     L     R2,RWAOUT                                                        
         L     R2,0(R2)            GET INTEGER IN R2                            
         MVC   EDWORK,EDSPACE                                                   
         ZIC   R3,RWOUTLEN                                                      
         CLI   R3,4                                                             
         BNH   VPI1                                                             
         DC    H'0'                MAX LENGTH IS 4                              
VPI1     LA    R1,4                                                             
         SR    R1,R3               (R3=4-R3)                                    
         LTR   R3,R1               PUT RESULT BACK IN R3                        
         BZ    VPI4                                                             
VPI2     SRL   R2,8                DELETE 1 BYTE                                
         BCT   R3,VPI2                                                          
VPI4     CLI   RWZERO,C'Y'         CK IF PRINT ZERO                             
         BE    VPI5                                                             
         LTR   R2,R2                                                            
         BZ    VPIEND                                                           
VPI5     CLI   RWEDDEC,0                                                        
         BE    EDEC0                                                            
         CLI   RWEDDEC,1                                                        
         BE    EDEC1                                                            
         CLI   RWEDDEC,2                                                        
         BE    EDEC2                                                            
EDEC0    EDIT  (R2),(8,EDWORK),FLOAT=-,ZERO=NOBLANK                             
         B     VPIDROP                                                          
EDEC1    EDIT  (R2),(8,EDWORK),1,FLOAT=-,ZERO=NOBLANK                           
         B     VPIDROP                                                          
EDEC2    EDIT  (R2),(8,EDWORK),2,FLOAT=-,ZERO=NOBLANK                           
         B     VPIDROP                                                          
VPIDROP  ZIC   R1,RWDROP           NOW DROP LAST CHARS                          
         LA    R4,8                L'OUPUT                                      
         SR    R4,R1               OFFSET TO CHARS TO BLANK                     
         LA    R5,EDWORK(R4)                                                    
         MVC   0(8,R5),EDSPACE                                                  
VPIEND   B     FINED                                                            
*                                                                               
***********************                                                         
         EJECT                                                                  
*HIPO******************************************************************         
*  NUMBER:                                                            *         
*  TITLE: FINED,FINHEAD                                               *         
*  USE TO PRINT LINE FROM EDWORK                                                
*  APPROPRIATE ENTRY SETS UP ATOPRIN AND PRINLEN                                
*                                                                               
*  FINED: ATOPRIN=RWAPR, PRINLEN=RWPRLEN                                        
*  FINHEAD: ATOPRIN=RWAHEDOU, PRINLEN=RWHEDOLN                                  
*                                                                     *         
*  COMMENTS: FINAL EDITING                                            *         
*                                                                     *         
*                                                                     *         
* CALLED FROM: ALL PRE-EDITING MODULES                                          
*                                                                     *         
*  INPUTS: ATOPRIN - A(AREA TO WRITE TO)                                        
*          PRINLEN - LENGTH OF FIELD TO PRINT                         *         
*          EDWORK - CONTAINS DATA TO BE PRINTED                       *         
*          RWEDALGN - ALIGNMENT OF STRING                                       
*                                                                     *         
*  OUTPUTS: PRINT AREA CONTAINS PRINTABLE INFO                        *         
*  LOCALS: R4 - NUMBER OF CHARACTERS TO 1ST PRINTABLE CHAR            *         
*          R5 - NUMBER OF CHARS TO LAST PRINTABLE CHAR                          
*ENDHIPO***************************************************************         
************************                                                        
FINED    EQU   *                                                                
         MVC   ATOPRIN,RWAPR                                                    
         MVC   PRINLEN,RWPRLEN                                                  
         B     FINST                                                            
*                                                                               
FINHEAD  MVC   ATOPRIN,RWAHEDOU                                                 
         MVC   PRINLEN,RWHEDOLN                                                 
         B     FINST                                                            
*                                                                               
FINST    LA    R2,EDWORK           FIND LEFTMOST NON-BLANK                      
         LA    R3,L'EDWORK                                                      
         LA    R4,0                R4 IS COUNT TO NUM CHARS                     
FELEFT   CLI   0(R2),C' '                                                       
         BE    FELF2                                                            
         CLI   0(R2),0                                                          
         BNE   FELEND                                                           
FELF2    LA    R4,1(R4)                                                         
         LA    R2,1(R2)                                                         
         BCT   R3,FELEFT                                                        
         B     FINEND              NO PRINTABLES, EXIT                          
*                                                                               
FELEND   LR    R6,R4               R6 IS CURRENT COUNT                          
FERIGHT  CLI   0(R2),C' '                                                       
         BE    FE2                                                              
         CLI   0(R2),0                                                          
         BE    FE2                                                              
         LR    R5,R6               CAN BE BLANKS IN STRING                      
FE2      LA    R6,1(R6)            SO SAVE LAST BLANK IN R5                     
         LA    R2,1(R2)            AND CONTINUE                                 
         BCT   R3,FERIGHT                                                       
*                                                                               
         CLI   RWEDALGN,C'L'       CK ALIGNMENT                                 
         BE    FELEFA                                                           
         CLI   RWEDALGN,C'R'                                                    
         BE    FERITA                                                           
         CLI   RWEDALGN,C'C'                                                    
         BE    FECENA                                                           
         B     FELEFA              DEFAULT=LEFT                                 
FELEFA   L     R3,ATOPRIN                                                       
         ZIC   R2,PRINLEN                                                       
         BCTR  R2,0                                                             
         LA    R6,EDWORK                                                        
         LA    R6,0(R6,R4)         FIRST ALPHA CHAR                             
         EXMVC R2,0(R3),0(R6)                                                   
         B     FINEND                                                           
FERITA   L     R3,ATOPRIN                                                       
         ZIC   R2,PRINLEN                                                       
         BCTR  R2,0                                                             
         SR    R5,R2               OFFSET INTO EDWORK                           
         LA    R6,EDWORK                                                        
         LA    R6,0(R6,R5)                                                      
         EXMVC R2,0(R3),0(R6)                                                   
         B     FINEND                                                           
FECENA   L     R3,ATOPRIN                                                       
         ZIC   R2,PRINLEN                                                       
         BCTR  R2,0                                                             
         LA    R6,EDWORK                                                        
         LA    R6,0(R6,R4)         FIRST ALPHA CHAR                             
         EXMVC R2,0(R3),0(R6)                                                   
*                                                                               
         L     RF,=V(CENTER)                                                    
         A     RF,RELO                                                          
         GOTO1 (RF),DMCB,0(R3),(R2)                                             
*                                                                               
         B     FINEND                                                           
FINEND   CLC   EDWORK2,EDSPACE     IF EDWORK2 SET                               
         BE    FINEX                                                            
         MVC   EDWORK,EDWORK2      EDWORK=EDWORK2                               
         MVC   EDWORK2,EDSPACE     SET EDWORK2 TO SPACES FOR EXIT               
         L     R1,ATOPRIN                                                       
         LA    R1,132(R1)          BUMP TO NEXT PRINTLINE                       
         ST    R1,ATOPRIN                                                       
         B     FINST               AND WRITE IT                                 
FINEX    B     XIT                                                              
********************************************************                        
EDSPACE  DC    132C' '             BLANKS                                       
         EJECT                                                                  
NERWRK   DSECT                     WORKING STORAGE                              
DMCB     DS    6F                                                               
DUB      DS    D                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
RELO     DS    A                                                                
*                                                                               
*** ARGS TO FINISH EDIT                                                         
ATOPRIN  DS    A                                                                
PRINLEN  DS    CL1                                                              
*                                                                               
APROD    DS    CL7                                                              
BYTE     DS    CL1                                                              
WORK     DS    CL64                                                             
SRCHEL   DS    CL1                                                              
PREED    DS    CL132               AREA SPACE FILLED FOR EDIT ALGRITHMS         
EDWORK   DS    CL132               LINE FOR EDITING                             
POSTED   DS    CL132               AREA SPACE FILLED FOR EDIT ALGRITHMS         
PREED2   DS    CL132               AREA SPACE FILLED FOR EDIT ALGRITHMS         
EDWORK2  DS    CL132               LINE FOR EDITING                             
POSTED2  DS    CL132               AREA SPACE FILLED FOR EDIT ALGRITHMS         
DEMWORK  DS    CL20                OUTPUT AREA FOR DEMOCON                      
ARGTOADD DS    F                                                                
NETACT   DS    F                                                                
NETASS   DS    F                                                                
NETCASS  DS    F                                                                
NETINT   DS    F                                                                
FAKEDEMO DS    CL3                 FAKE DEMO HOMES REQUEST                      
*                                                                               
**** DBLOCK NEEDED FOR CALLS TO DEMOVAL                                         
       ++INCLUDE DEDBLOCK                                                       
NERWRKX  EQU   *                                                                
         EJECT                                                                  
       ++INCLUDE NETSYSD                                                        
       ++INCLUDE NETBLOCKD                                                      
         EJECT                                                                  
       ++INCLUDE SPGENCLT                                                       
         EJECT                                                                  
       ++INCLUDE NETDEMOD                                                       
         EJECT                                                                  
       ++INCLUDE NENDEQUS                                                       
       ++INCLUDE NENVEQUS                                                       
         EJECT                                                                  
       ++INCLUDE NERWINCLS                                                      
         EJECT                                                                  
       ++INCLUDE NERWEQUS                                                       
         EJECT                                                                  
       ++INCLUDE NEGENCOSTS                                                     
         EJECT                                                                  
       ++INCLUDE NEGENUNIT                                                      
         EJECT                                                                  
       ++INCLUDE NEACCTBLK                                                      
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'127NENEWRW   05/01/02'                                      
         END                                                                    
