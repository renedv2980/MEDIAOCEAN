*          DATA SET RXCNVX12   AT LEVEL 104 AS OF 07/07/09                      
*CATALP RXCNV12                                                                 
         PRINT NOGEN                                                            
         TITLE 'RXCNVX10 ROUTINES CONVERT DDS FIELDS TO SQL FORMAT'             
***********************************************************************         
* NTRY: P1 B0   = C'L' FOR LOAD MODE                                  *         
*               = C'U' FOR UPDATE MODE                                *         
*          B1-3 = A(UNCONVERTED RECORD)                               *         
*                                                                     *         
*       P2 B0   = PLATFORM EQUATE NUMBER                              *         
*          B1-3 = A(CONVERTED RECORD BUFFER)                          *         
*                                                                     *         
*       P3 B0   = C'K' IF BUILD MODE IS FOR KILL RECORD               *         
*          B1-3 = A(3 CHARACTER RECORD TYPE)                          *         
*                                                                     *         
*       P4 B0-3 = A(VERSION NUMBER)                                   *         
***********************************************************************         
* HISTORY OF CHANGES                                                  *         
*   MAY26/05 (BU ) --- BRING SYBASE ENTRIES IN LINE WITH DB2 ENTRIES  *         
*                                                                     *         
*   JUL01/04 (BU ) --- NEW CONTRACT HEADER FIELDS:  C/ P/ E/          *         
*                                                                     *         
*   JUL07/05 (BU ) --- NEW VERSION FOR FUTURE DEVELOPMENT             *         
*                                                                     *         
*   AUG02/05 (BU ) --- REARRANGE CON / DOL RECS PER S. WONG           *         
*                                                                     *         
*   SEP30/05 (BU ) --- INITIAL VERSION 'I' FOR ESS CHANGES / MO       *         
*                      REQUESTED BY R.MARTINEZ / B. HANNAH            *         
*                                                                     *         
*   NOV09/05 (BU ) --- ADD 'LOSS' FIELDS TO CONTRACT HEADER           *         
*                                                                     *         
*   NOV30/05 (BU ) --- ADD CTRS TO BOOKS, LENGTHS RECORDS             *         
*                                                                     *         
*   DEC13/05 (BU ) --- ADD STA OFFICE, CONFIRM COMMENT RECORDS        *         
*                                                                     *         
*   MAR31/06 (BU ) --- NEW RECORDS, CHANGES TO OLD RECORDS            *         
*                                                                     *         
*   MAY12/06 (BU ) --- NEW RECORDS, CHANGES TO OLD RECORDS            *         
*                                                                     *         
*   NOV16/06 (BU ) --- ADD BONUS / TRADE, ETC TO CON HEDR             *         
*                                                                     *         
*   FEB08/07 (BU ) --- THREE CHANGES:                                 *         
*                      1.  NEW BUYCODE RECORD                         *         
*                      2.  CONTRACT:  NEW 'MON' INDICATOR FIELD       *         
*                      3.  OFFICE COMMENT: NEW DESCRIPTIVE FIELD      *         
*                                                                     *         
*   MAR28/07 (BU ) --- PROMOTED WITH CHANGE OF 8FEB07                 *         
*                      NEW RECONPAD (PENDING ACTIVITY DATE) IN 5600   *         
*                                                                     *         
*   FEB06/08 (SKU) --- ADD PRODUCT CODE 2                             *         
*                                                                     *         
*   JUN23/09 (SKU) --- ADD SPECIAL FLAG FOR CONTRACT DOLLAR TABLE     *         
*                                                                     *         
***********************************************************************         
         SPACE 1                                                                
RXCNVX   CSECT                                                                  
         NMOD1 WORKL,*RXCNVX*,RA,CLEAR=YES                                      
         USING WORKD,RC                                                         
         ST    R1,APARM                                                         
         MVC   PARM,0(R1)          EXTRACT PARAMETER LIST                       
         LM    R3,R5,0(R1)                                                      
*                                                                               
         XC    0(4,R4),0(R4)       CLEAR CONVERT RECORD AREA LENGTH             
         LA    R4,4(R4)                                                         
         ST    R4,ANOW             SET A(FIRST DATA)                            
*&&DO                                                                           
*    TEST                                                                       
         CLC   =C'05625',4(R3)     COMPETITIVE?                                 
         BNE   TEST1020            NO                                           
***      CLI   10(R3),C'A'         YES - 'ADD' ACTION?                          
***      BNE   TEST1020            NO                                           
***      DC    H'0'                                                             
         MVC   DIE(2),=X'0000'     KILL IT                                      
         MVI   DIEFLAG,C'Y'                                                     
TEST1020 EQU   *                                                                
*    TEST                                                                       
*&&                                                                             
                                                                                
         ICM   RF,15,AVERSION      GET VERSION NUMBER                           
         MVC   VERSION,0(RF)                                                    
*                                                                               
         MVI   LOADMODE,C'Y'                                                    
         MVI   SEPARATE,C';'                                                    
*                                                                               
*        CLI   MODE,C'U'                                                        
*        BNE   *+8                                                              
*        MVI   LOADMODE,C'U'                                                    
*                                                                               
         MVI   KILLMODE,C'N'                                                    
         CLI   ALLOUT,C'K'                                                      
         BNE   *+8                                                              
         MVI   KILLMODE,C'Y'                                                    
         LA    RF,PLATTAB          PLATFORM TABLE                               
*                                                                               
MAIN02   CLI   0(RF),0             E.O.T.                                       
         BE    EXIT                                                             
         CLC   PLATFORM,0(RF)                                                   
         BE    MAIN04                                                           
*                                                                               
         LA    RF,PLATTABL(RF)                                                  
         B     MAIN02                                                           
*                                                                               
MAIN04   DS    0H                                                               
         MVC   PLATINFO,0(RF)      SAVE PLATFORM INFO ENTRY                     
PI       USING PLATTABD,PLATINFO                                                
*                                                                               
         ICM   RF,15,PI.PLATREC                                                 
MAIN06   CLI   0(RF),0             E.O.T.                                       
         BE    EXIT                                                             
         CLC   0(3,RF),0(R5)       TRY TO MATCH MNEMONICS                       
         BE    MAIN08                                                           
*                                                                               
         LA    RF,RECTABL(RF)                                                   
         B     MAIN06                                                           
*                                                                               
MAIN08   ICM   R6,15,3(RF)         DIFFERENT PLATFORMS HERE                     
         XR    R9,R9                                                            
         ICM   R9,3,0(R6)                                                       
         AR    R9,R6               R9=A(END OF SYTAB ENTRY)                     
         BCTR  R9,0                NEEDED FOR BXLE BELOW...                     
         LA    R8,RECTYPLQ         R8=LENGTH OF EACH DATA SECTION               
         LA    R6,2(R6)            FIRST DATA                                   
*                                                                               
         USING RECTYPD,R6                                                       
MAIN10   ICM   RE,15,PI.PLATFCNV   CONVERSION ROUTINE TABLE                     
         USING FCNVTABD,RE                                                      
*                                                                               
MAIN12   CLI   0(RE),0                                                          
         BE    EXIT                                                             
         CLC   RECCNVT,FCNVTYPE    MATCH TYPE NAME                              
         BE    MAIN14                                                           
*                                                                               
         LA    RE,FCNVTABL(RE)                                                  
         B     MAIN12                                                           
*                                                                               
DIE      EQU   *                                                                
MAIN14   XR    R2,R2                                                            
         ZICM  R2,RECLEN,2         GET LENGTH OF INPUT                          
         XR    R3,R3                                                            
         ZICM  R3,RECDISP,2                                                     
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,7,AEXTRACT                                                    
         AR    R3,RF               R3=A(DATA IN UNCONVERTED RECORD)             
         L     R4,ANOW             R4=A(BUILD AREA IN CONVERTED RECORD)         
*                                                                               
         MVI   OPTIONAL,C'N'                                                    
         LA    RF,RECREQN          FOR NORMAL BUILD                             
         CLI   KILLMODE,C'Y'       'KILL' MODE                                  
         BNE   *+8                 NO                                           
         LA    RF,RECREQK          FOR 'KILL' BUILD                             
         CLI   0(RF),OPT                                                        
         BNE   *+8                                                              
         MVI   OPTIONAL,C'Y'                                                    
*                                                                               
         CLC   RECVRSN,VERSION     MAKE SURE FOR THIS VERSION                   
         BH    MAIN20              NO                                           
*                                                                               
*&&DO                                                                           
         CLI   DIEFLAG,C'Y'        DIE ON THIS PASS?                            
         BNE   TEST2020            NO                                           
         L     RF,TESTCTR          YES - GET PROPER ROUTINE                     
         LA    RF,1(RF)                                                         
         ST    RF,TESTCTR                                                       
         CLC   TESTCTR,=F'42'       FORTY-SECOND ROUTINE?                       
         BNE   *+6                                                              
         DC    H'0'                                                             
TEST2020 EQU   *                                                                
*&&                                                                             
         ICM   RF,15,FCNVROUT                                                   
         BASR  RE,RF               BRANCH TO PROCESSING ROUTINE                 
*                                                                               
         BAS   RE,PUTSEP           PUT IN SEPARATOR                             
*                                                                               
MAIN20   BXLE  R6,R8,MAIN10        DO FOR ALL DATA                              
         DROP  R6,RE                                                            
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,7,ASQLBUFF                                                    
         L     R4,ANOW                                                          
         SR    R4,RF                                                            
         SLL   R4,16                                                            
         STCM  R4,15,0(RF)                                                      
*                                                                               
EXIT     XMOD1 ,                                                                
*                                                                               
TESTCTR  DC    F'0'                                                             
DIEFLAG  DC    C'N'                                                             
         DS    0F                                                               
         EJECT                                                                  
***********************************************************************         
* CONVERT CHARACTER STRING TO SYBASE FORMAT                           *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
CHARSYB  NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    CHSY04                                                           
         LA    RF,0(R2,R3)                                                      
*                                                                               
CHSY02   BCTR  RF,0                DROP TRAILING SPACES                         
         CLI   0(RF),C' '                                                       
         BNE   CHSY08                                                           
         BCT   R2,CHSY02                                                        
*                                                                               
CHSY04   CLI   OPTIONAL,C'Y'                                                    
         BE    CHSY06                                                           
         MVI   0(R4),C' '          RETURN SINGLE SPACE IF ALL SPACES            
         LA    R4,1(R4)            AND REQUIRED FIELD                           
         LA    R2,1(R2)                                                         
         B     CHSY10                                                           
*                                                                               
CHSY06   BAS   RE,NULLSYB          RETURN NULL CODE IF OPTIONAL FIELD           
         B     XIT                                                              
*                                                                               
CHSY08   BCTR  R2,0                MOVE CHARACTERS TO OUTPUT BUFFER             
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R4,R2                                                            
*                                                                               
CHSY10   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    R2,2(R2)                                                         
         STC   R2,OUTPUTL          SAVE OUTPUT BUFFER LENGTH                    
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT CHARACTER STRING TO DB2 FORMAT                                        
*                                                                               
* NTRY: R2 = L'UNCONVERTED STRING                                               
*       R3 = A(UNCONVERTED STRING)                                              
*       R4 = A(OUTPUT BUFFER)                                                   
***********************************************************************         
         SPACE 1                                                                
CHARDB2  NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
*                                                                               
         LTR   RE,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    XIT                                                              
*                                                                               
         LA    RF,0(RE,R3)                                                      
CHD202   BCTR  RF,0                DROP TRAILING SPACES                         
         CLI   0(RF),C' '                                                       
         BNE   CHD208                                                           
         BCT   RE,CHD202                                                        
*                                                                               
         LA    R3,SPACES                                                        
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+8                                                              
         LA    R3,NULLS                                                         
*                                                                               
CHD208   BCTR  R2,0                MOVE CHARACTERS TO OUTPUT BUFFER             
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R4,R2                                                            
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    R2,2(R2)                                                         
         STC   R2,OUTPUTL          SAVE OUTPUT BUFFER LENGTH                    
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT VARIABLE CHARACTER STRING TO DB2 FORMAT                               
*                                                                               
* NTRY: R2 = L'UNCONVERTED STRING                                               
*       R3 = A(UNCONVERTED STRING)                                              
*       R4 = A(OUTPUT BUFFER)                                                   
***********************************************************************         
         SPACE 1                                                                
VCHARDB2 NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    XIT                                                              
*                                                                               
         LA    RF,0(R2,R3)                                                      
VCHD202  BCTR  RF,0                DROP TRAILING SPACES                         
         CLI   0(RF),C' '                                                       
         BNE   VCHD208                                                          
         BCT   R2,VCHD202                                                       
*                                                                               
         LA    R3,SPACES                                                        
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+8                                                              
         LA    R3,NULLS                                                         
         LA    R2,1                                                             
*                                                                               
VCHD208  BCTR  R2,0                MOVE CHARACTERS TO OUTPUT BUFFER             
         EX    R2,*+4                                                           
         MVC   2(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BNE   VCHD210                                                          
         STCM  R2,3,0(R4)                                                       
         LA    R2,2(R2)                                                         
*                                                                               
VCHD210  AR    R4,R2                                                            
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    R2,2(R2)                                                         
         STC   R2,OUTPUTL          SAVE OUTPUT BUFFER LENGTH                    
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT TINY INTEGER TO SYBASE FORMAT                               *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
TINTSYB  NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    TISY14                                                           
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
TISY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   TISY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,TISY02                                                        
         B     TISY10              FIELD CONTAINS ZERO                          
*                                                                               
TISY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   TISY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
TISY06   LTR   R0,R2               R0 = LENGTH LEFT TO VALIDATE                 
         LR    RF,R3               RF = A(FIRST CHARACTER)                      
*                                                                               
TISY08   CLI   0(RF),C'0'                                                       
         BL    TISY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    TISY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,TISY08                                                        
         B     TISY12                                                           
*                                                                               
TISY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    TISY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    TISY14                                                           
*                                                                               
TISY12   CH    R2,=H'3'            MAXIMUM 3 NUMERIC DIGITS                     
         BH    TISY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
TISY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    TISY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
TISY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT SMALL INTEGER TO SYBASE FORMAT                              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
SINTSYB  NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    SISY14                                                           
*                                                                               
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
SISY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   SISY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,SISY02                                                        
         B     SISY10              FIELD CONTAINS ZERO                          
*                                                                               
SISY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   SISY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
SISY06   LR    R0,R2               ENSURE CHARACTERS ARE ALL NUMERIC            
         LR    RF,R3                                                            
*                                                                               
SISY08   CLI   0(RF),C'0'                                                       
         BL    SISY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    SISY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,SISY08                                                        
         B     SISY12                                                           
*                                                                               
SISY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    SISY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    SISY14                                                           
*                                                                               
SISY12   CH    R2,=H'5'            MAXIMUM 5 NUMERIC DIGITS                     
         BH    SISY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
SISY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    SISY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
SISY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT SMALL INTEGER TO DB2 FORMAT                                           
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
SINTDB2  NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    SID214                                                           
*                                                                               
         LR    RE,R2                                                            
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         OC    0(0,R3),0(R3)                                                    
         BZ    SID214                                                           
*                                                                               
SID202   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   SID204                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,SID202                                                        
         LA    R2,1                FIELD IS ZERO                                
         BCTR  R3,0                                                             
         LA    RE,0(R3)                                                         
         B     SID206                                                           
*                                                                               
SID204   DS    0H                                                               
         LA    RE,0(R3)                                                         
*                                                                               
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   SID206                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         LA    RE,1(R3)                                                         
         BCTR  R2,0                                                             
SID206   DS    0H                                                               
         BCTR  R2,0                                                             
         EX    R2,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,RE)                                                      
         CVB   R0,DUB                                                           
*                                                                               
         CLI   0(R3),C'-'                                                       
         BNE   *+6                                                              
         LNR   R0,R0                                                            
*                                                                               
         STCM  R0,3,WORK                                                        
         B     SID216                                                           
*                                                                               
SID214   DS    0H                  PROCESS NULL FIELD                           
         XC    WORK(2),WORK                                                     
         CLI   OPTIONAL,C'Y'                                                    
         BNE   SID216              FIELD REQUIRED                               
*                                                                               
**       MVC   WORK(2),=X'FFFF'    UNSURE HOW TO SEND NULL                      
**       MVI   OUTPUTL,1                                                        
*                                                                               
SID216   MVC   0(2,R4),WORK                                                     
         MVI   OUTPUTL,2                                                        
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT INTEGER TO SYBASE FORMAT                                    *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
INTSYB   NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    INSY14                                                           
*                                                                               
         MVI   SIGNFLAG,0          RESET PREFIX SIGN                            
*                                                                               
INSY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   INSY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,INSY02                                                        
         B     INSY10              FIELD CONTAINS ZERO                          
*                                                                               
INSY04   CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   INSY06                                                           
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
*                                                                               
INSY06   LR    R0,R2               ENSURE CHARACTERS ARE ALL NUMERIC            
         LR    RF,R3                                                            
*                                                                               
INSY08   CLI   0(RF),C'0'                                                       
         BL    INSY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    INSY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,INSY08                                                        
         B     INSY12                                                           
*                                                                               
INSY10   CLI   0(R3),C'0'          CHECK LAST CHARACTER IS DIGIT                
         BL    INSY14                                                           
         CLI   0(R3),C'9'                                                       
         BH    INSY14                                                           
*                                                                               
INSY12   CH    R2,=H'10'           MAXIMUM 10 NUMERIC DIGITS                    
         BH    INSY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
*                                                                               
         LA    R2,1(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
INSY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    INSY16                                                           
         MVI   0(R4),C'0'          FIELD REQUIRED                               
         MVI   OUTPUTL,1                                                        
         B     XIT                                                              
*                                                                               
INSY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT INTEGER TO DB2 FORMAT                                                 
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
INTDB2   NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    INDT0160                                                         
*                                                                               
         LR    RE,R2                                                            
         BCTR  RE,0                                                             
         EX    RE,INDT0020         COMPARE FOR ALL FOXZEROS                     
         B     INDT0040                                                         
INDT0020 EQU   *                                                                
         OC    0(0,R3),0(R3)                                                    
INDT0040 EQU   *                                                                
         BZ    INDT0160                                                         
         EX    RE,INDT0060         COMPARE FOR SPACES                           
         BE    INDT0160            SPACES /NULL                                 
         B     INDT0080                                                         
INDT0060 EQU   *                                                                
         CLC   0(0,R3),SPACES                                                   
INDT0080 EQU   *                                                                
*                                                                               
INDT0100 CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BNE   INDT0120                                                         
         LA    R3,1(R3)                                                         
         BCT   R2,INDT0100                                                      
         LA    R2,1                FIELD CONTAINS ZERO                          
         BCTR  R3,0                                                             
         LA    RE,0(R3)                                                         
         B     INDT0140                                                         
*                                                                               
INDT0120 DS    0H                                                               
         LA    RE,0(R3)                                                         
*                                                                               
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   INDT0140                                                         
*                                                                               
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
         LA    RE,1(R3)                                                         
         BCTR  R2,0                                                             
INDT0140 DS    0H                                                               
         BCTR  R2,0                                                             
         EX    R2,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,RE)                                                      
         CVB   R0,DUB                                                           
*                                                                               
         CLI   0(R3),C'-'                                                       
         BNE   *+6                                                              
         LNR   R0,R0                                                            
*                                                                               
         STCM  R0,15,WORK                                                       
         B     INDT0180                                                         
*                                                                               
INDT0160 DS    0H                  PROCESS NULL FIELD                           
         XC    WORK(4),WORK                                                     
         CLI   OPTIONAL,C'Y'                                                    
         BNE   INDT0180            FIELD REQUIRED                               
*                                                                               
**       MVC   WORK(4),=X'FFFF'    UNSURE HOW TO SEND NULL                      
**       MVI   OUTPUTL,1                                                        
*                                                                               
INDT0180 MVC   0(4,R4),WORK                                                     
         MVI   OUTPUTL,4                                                        
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT EXTERNAL INTEGER TO DB2 FORMAT                              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
EINTDB2  NTR1  ,                                                                
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    XIT                                                              
*                                                                               
         LR    RE,R2               CHECK FOR NULL                               
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         OC    0(0,R3),0(R3)                                                    
         BNZ   EIND204                                                          
*                                                                               
         LA    R3,ZEROES                                                        
         CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BNE   *+8                                                              
         LA    R3,NULLS                                                         
*                                                                               
EIND204  LR    RE,R2               COPY THE DATA                                
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT REAL TO SYBASE FORMAT                                       *         
* PROCESSES UPTO 7 DIGITS WITH 2 DECIMAL PLACES IMPLIED               *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
REALSYB  NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    RESY14                                                           
*                                                                               
         SH    R2,=Y(2)            LAST 2 FIELDS ARE AFTER DP                   
RESY02   CLI   0(R2),C'0'                                                       
         BNE   RESY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,RESY02                                                        
*                                                                               
         MVI   0(R4),C'0'          VALUE IS 0.XX                                
         LA    R4,1(R4)                                                         
         B     RESY12                                                           
*                                                                               
RESY04   MVI   SIGNFLAG,0          LOOK FOR PREFIX SIGN                         
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   RESY06                                                           
*                                                                               
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
*                                                                               
RESY06   LTR   R0,R2                                                            
         BP    *+16                                                             
         MVI   0(R4),C'0'          VALUE IS +/-0.XX                             
         LA    R4,1(R4)                                                         
         B     RESY12                                                           
*                                                                               
         LR    RF,R3                                                            
*                                                                               
RESY08   CLI   0(RF),C'1'                                                       
         BL    RESY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    RESY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,RESY08                                                        
*                                                                               
RESY10   C     R2,=F'5'                                                         
         BH    RESY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+4                                                           
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
RESY12   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(2,R4),0(R3)       MOVE OUT 2 DECIMAL PLACES OF DIGITS          
         LA    R2,3(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
RESY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    RESY16                                                           
         MVC   0(4,R4),=C'0.00'    FIELD REQUIRED                               
         MVI   OUTPUTL,4                                                        
         B     XIT                                                              
*                                                                               
RESY16   BAS   RE,NULLSYB          FIELD OPTIONAL                               
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT FLOAT TO SYBASE FORMAT                                      *         
* PROCESSES UPTO 15 DIGITS WITH 4 DECIMAL PLACES IMPLIED              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
FLOATSYB NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    FLSY14                                                           
         SH    R2,=Y(4)            LAST 4 FIELDS ARE AFTER DP                   
*                                                                               
FLSY02   CLI   0(R2),C'0'                                                       
         BNE   FLSY04                                                           
         LA    R3,1(R3)                                                         
         BCT   R2,FLSY02                                                        
*                                                                               
         MVI   0(R4),C'0'          VALUE IS 0.XXXX                              
         LA    R4,1(R4)                                                         
         B     FLSY12                                                           
*                                                                               
FLSY04   MVI   SIGNFLAG,0          LOOK FOR PREFIX SIGN                         
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   FLSY06                                                           
*                                                                               
         MVC   0(1,R4),0(R3)       MOVE SIGN ACROSS                             
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)            INCREMENT POINTERS                           
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1          SET SIGN EXISTS                              
*                                                                               
FLSY06   LTR   R0,R2                                                            
         BP    *+16                                                             
         MVI   0(R4),C'0'          VALUE IS +/-0.XXXX                           
         LA    R4,1(R4)                                                         
         B     FLSY12                                                           
*                                                                               
         LR    RF,R3                                                            
*                                                                               
FLSY08   CLI   0(RF),C'1'                                                       
         BL    FLSY14                                                           
         CLI   0(RF),C'9'                                                       
         BH    FLSY14                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,FLSY08                                                        
*                                                                               
FLSY10   C     R2,=F'11'                                                        
         BH    FLSY14                                                           
         BCTR  R2,0                MOVE DIGITS TO OUTPUT BUFFER                 
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
FLSY12   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(4,R4),0(R3)       AND 4 DECIMAL PLACES                         
         LA    R2,5(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
FLSY14   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    FLSY16                                                           
         MVC   0(6,R4),=C'0.0000'  REQUIRED                                     
         MVI   OUTPUTL,6                                                        
         B     XIT                                                              
*                                                                               
FLSY16   BAS   RE,NULLSYB          OR OPTIONAL                                  
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT BIT                                                                   
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
BITX     NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         MVI   OUTPUTL,1                                                        
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    BISYOFF                                                          
         CLI   0(R3),0                                                          
         BE    BISYOFF                                                          
         CLI   0(R3),C'N'                                                       
         BE    BISYOFF                                                          
         CLI   0(R3),C'Y'                                                       
         BE    BISYON                                                           
         B     BISYON                                                           
*                                                                               
BISYON   MVI   0(R4),C'1'         BIT SETTING OF ON                             
         B     XIT                                                              
*                                                                               
BISYOFF  MVI   0(R4),C'0'         BIT SETTING OF OFF                            
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT MONEY TO SYBASE FORMAT                                      *         
* PROCESSES UPTO 12 DIGITS WITH 2 DECIMAL PLACES IMPLIED              *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
MONEYSYB NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         MVI   0(R4),C'$'          PREFIX POUND SIGN                            
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    MOSY10                                                           
         BCTR  R2,0                                                             
         BCTR  R2,0                                                             
*                                                                               
         MVI   SIGNFLAG,0                                                       
         CLI   0(R3),C'+'                                                       
         BE    *+12                                                             
         CLI   0(R3),C'-'                                                       
         BNE   MOSY02                                                           
         MVC   0(1,R4),0(R3)                                                    
         LA    R4,1(R4)                                                         
         LA    R3,1(R3)                                                         
         BCTR  R2,0                                                             
         MVI   SIGNFLAG,1                                                       
*                                                                               
MOSY02   CLI   0(R3),C'0'          DROP LEADING ZEROES                          
         BE    MOSY04                                                           
         CLI   0(R3),C'1'                                                       
         BL    MOSY10                                                           
         CLI   0(R3),C'9'                                                       
         BH    MOSY10                                                           
         B     MOSY06                                                           
*                                                                               
MOSY04   LA    R3,1(R3)                                                         
         BCT   R2,MOSY02                                                        
         MVI   0(R4),C'0'                                                       
         LA    R4,1(R4)                                                         
         LA    R2,1                                                             
         B     MOSY08                                                           
*                                                                               
MOSY06   C     R2,=F'10'                                                        
         BH    MOSY10                                                           
         BCTR  R2,0                MOVE DATA TO OUTPUT BUFFER                   
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R4),0(R3)                                                    
         LA    R2,1(R2)                                                         
         AR    R3,R2                                                            
         AR    R4,R2                                                            
*                                                                               
MOSY08   MVI   0(R4),C'.'          OUTPUT DECIMAL POINT                         
         MVC   1(2,R4),0(R3)       AND 2 DECIMAL PLACES                         
         LA    R2,4(R2)                                                         
         CLI   SIGNFLAG,0                                                       
         BE    *+8                                                              
         LA    R2,1(R2)                                                         
         STC   R2,OUTPUTL                                                       
         B     XIT                                                              
*                                                                               
MOSY10   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    MOSY12                                                           
         MVC   0(4,R4),=C'0.00'    REQUIRED                                     
         MVI   OUTPUTL,5                                                        
         B     XIT                                                              
*                                                                               
MOSY12   BAS   RE,NULLSYB          OR OPTIONAL                                  
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* CONVERT DATE-TIME TO SYBASE FORMAT                                  *         
*                                                                     *         
* NTRY: R2 = L'UNCONVERTED STRING                                     *         
*       R3 = A(UNCONVERTED STRING)                                    *         
*       R4 = A(OUTPUT BUFFER)                                         *         
***********************************************************************         
         SPACE 1                                                                
DATIMSYB NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    DASY02                                                           
         CH    R2,=H'15'                                                        
         BE    DASY06                                                           
*                                                                               
DASY02   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    DASY04                                                           
         LA    RF,1                                                             
         MVI   0(R4),C' '                                                       
         B     DASY08                                                           
DASY04   BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
DASY06   DS    0H                  OUTPUT DATE DD/MM/YY                         
         MVC   0(2,R4),6(R3)                                                    
         MVI   2(R4),C'/'                                                       
         MVC   3(2,R4),4(R3)                                                    
         MVI   5(R4),C'/'                                                       
         MVC   6(2,R4),2(R3)                                                    
         MVI   8(R4),C' '          OUTPUT SPACE TO SEPARATE DATE-TIME           
         MVC   9(2,R4),9(R3)       OUTPUT TIME HH:MM:SS                         
         MVI   11(R4),C':'                                                      
         MVC   12(2,R4),11(R3)                                                  
         MVI   14(R4),C':'                                                      
         MVC   15(2,R4),13(R3)                                                  
         LA    R4,17(R4)                                                        
         LA    RF,17                                                            
*                                                                               
DASY08   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    RF,2(RF)                                                         
         STC   RF,OUTPUTL          SAVE OUTPUT LENGTH                           
         B     XIT                                                              
         EJECT                                                                  
**********************************************************************          
* CONVERT DATE ONLY TO SMALL DATE/TIME IN SYBASE FORMAT              *          
**********************************************************************          
         SPACE 1                                                                
SMDATTIM NTR1  ,                                                                
         CLI   KILLMODE,C'Y'                                                    
         BNE   *+20                                                             
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+12                                                             
         BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    SMDT02                                                           
         CLI   0(R3),C' '                                                       
         BH    SMDT06                                                           
*                                                                               
SMDT02   CLI   OPTIONAL,C'Y'       PROCESS NULL FIELD                           
         BE    SMDT04                                                           
         LA    RF,1                                                             
         MVI   0(R4),C' '                                                       
         B     SMDT08                                                           
*                                                                               
SMDT04   BAS   RE,NULLSYB                                                       
         B     XIT                                                              
*                                                                               
SMDT06   DS    0H                  OUTPUT DATE DD/MM/YY                         
*&&UK                                                                           
         MVC   0(8,R4),0(R3)                                                    
*&&                                                                             
*&&US                                                                           
         MVC   0(2,R4),3(R3)                                                    
         MVI   2(R4),C'/'                                                       
         MVC   3(2,R4),0(R3)                                                    
         MVI   5(R4),C'/'                                                       
         MVC   6(2,R4),6(R3)                                                    
*&&                                                                             
         MVI   8(R4),C' '          OUTPUT SPACE TO SEPARATE DATE-TIME           
         MVC   9(L'HHMMSS,R4),HHMMSS                                            
         LA    R4,17(R4)                                                        
         LA    RF,17                                                            
*                                                                               
SMDT08   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    RF,2(RF)                                                         
         STC   RF,OUTPUTL          SAVE OUTPUT LENGTH                           
         B     XIT                                                              
         EJECT                                                                  
**********************************************************************          
* CONVERT DATE ONLY TO DB2 DATE                                      *          
**********************************************************************          
         SPACE 1                                                                
EDATEDB2 NTR1  ,                                                                
         CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''         WRAP IN DINKS IF NOT LOAD MODE               
         LA    R4,1(R4)                                                         
         LTR   R2,R2               HANDLE ZERO LENGTH FIELD                     
         BZ    D2DT02                                                           
         CLI   0(R3),C' '                                                       
         BH    D2DT06                                                           
*                                                                               
D2DT02   LA    RE,SPACES                                                        
         CLI   OPTIONAL,C'Y'                                                    
         BNE   *+8                                                              
         LA    RE,NULLS                                                         
*                                                                               
         LA    RF,10-1             MOVE CHARACTERS TO OUTPUT BUFFER             
         EX    RF,*+4                                                           
         MVC   0(0,R4),0(RE)                                                    
         LA    RF,1(RF)                                                         
         AR    R4,RF                                                            
         B     D2DT08                                                           
*                                                                               
D2DT06   DS    0H                  OUTPUT DATE MM/DD/YYYY                       
         MVC   WORK(8),0(R3)                                                    
         GOTO1 =V(DATCON),DMCB,(4,WORK),(23,WORK+10),RR=Y                       
         MVC   0(2,R4),WORK+15                                                  
         MVI   2(R4),C'/'                                                       
         MVC   3(2,R4),WORK+18                                                  
         MVI   5(R4),C'/'                                                       
         MVC   6(4,R4),WORK+10                                                  
         LA    R4,10(R4)                                                        
         LA    RF,10                                                            
*                                                                               
D2DT08   CLI   LOADMODE,C'Y'                                                    
         BE    *+12                                                             
         MVI   0(R4),C''''                                                      
         LA    RF,2(RF)                                                         
         STC   RF,OUTPUTL          SAVE OUTPUT LENGTH                           
         B     XIT                                                              
         EJECT                                                                  
**********************************************************************          
* OUTPUT SEPARATOR CHARACTER                                         *          
**********************************************************************          
         SPACE 1                                                                
PUTSEP   XR    RF,RF                                                            
         IC    RF,OUTPUTL                                                       
         A     RF,ANOW                                                          
         CLI   PI.PLATDSEP,YES                                                  
         BNE   PUTSEP02                                                         
*                                                                               
         MVC   0(1,RF),SEPARATE                                                 
         LA    RF,1(RF)                                                         
*                                                                               
PUTSEP02 DS    0H                                                               
         ST    RF,ANOW                                                          
         BR    RE                                                               
         SPACE 2                                                                
***********************************************************************         
* OUTPUT NULL STRING FOR SYBASE                                       *         
***********************************************************************         
         SPACE 1                                                                
NULLSYB  L     RF,ANOW                                                          
         MVI   OUTPUTL,L'NULLSY                                                 
         MVC   0(L'NULLSY,RF),NULLSY                                            
         BR    RE                                                               
         SPACE 2                                                                
***********************************************************************         
* EXIT POINTS                                                         *         
***********************************************************************         
         SPACE 1                                                                
XIT      XIT1  ,                                                                
         SPACE 2                                                                
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         SPACE 1                                                                
SPACES   DC    128C' '                                                          
NULLS    DC    128X'00'                                                         
ZEROES   DC    128C'0'                                                          
*                                                                               
HHMMSS   DC    CL8'00:00:00'       OUTPUT TIME HH:MM:SS                         
NULLSY   DC    CL4'NULL'           NULL FOR SYBASE                              
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* PLATFORM TABLE                                                      *         
***********************************************************************         
         SPACE 1                                                                
PLATTAB  DS    0AL1                                                             
         DC    AL1(SYBASE,YES),AL4(FCNVSYB),AL4(RECSYB)                         
         DC    AL1(DB2,NO),AL4(FCNVDB2),AL4(RECDB2)                             
         DC    AL1(0)                                                           
*                                                                               
SYBASE   EQU   1                                                                
DB2      EQU   2                                                                
*                                                                               
YES      EQU   C'Y'                                                             
NO       EQU   C'N'                                                             
*                                                                               
         EJECT                                                                  
***********************************************************************         
* FIELD TYPE CONVERSION TABLES                                        *         
***********************************************************************         
         SPACE 1                                                                
FCNVSYB  DC    AL1(CHAR),AL4(CHARSYB)                                           
         DC    AL1(TINYINT),AL4(TINTSYB)                                        
         DC    AL1(SMALLINT),AL4(SINTSYB)                                       
         DC    AL1(INT),AL4(INTSYB)                                             
         DC    AL1(REAL),AL4(REALSYB)                                           
         DC    AL1(FLOAT),AL4(FLOATSYB)                                         
         DC    AL1(BIT),AL4(BITX)                                               
         DC    AL1(MONEY),AL4(MONEYSYB)                                         
         DC    AL1(DATETIME),AL4(DATIMSYB)                                      
         DC    AL1(SMALLDTE),AL4(SMDATTIM)                                      
         DC    AL1(0)                                                           
FCNVDB2  DC    AL1(CHAR),AL4(CHARDB2)                                           
         DC    AL1(VCHAR),AL4(VCHARDB2)                                         
         DC    AL1(SMALLINT),AL4(SINTDB2)                                       
         DC    AL1(INT),AL4(INTDB2)                                             
         DC    AL1(EXTINT),AL4(EINTDB2)                                         
***      DC    AL1(EXTFLOAT),AL4(EFLOTDB2)                                      
         DC    AL1(BIT),AL4(BITX)                                               
***      DC    AL1(DATETIME),AL4(TIMSTDB2)                                      
         DC    AL1(EXTDATE),AL4(EDATEDB2)                                       
***      DC    AL1(EXTTIME),AL4(ETIMEDB2)                                       
         DC    AL1(0)                                                           
CHAR     EQU   1                                                                
TINYINT  EQU   2                                                                
SMALLINT EQU   3                                                                
INT      EQU   4                                                                
REAL     EQU   5                                                                
FLOAT    EQU   6                                                                
BIT      EQU   7                                                                
MONEY    EQU   8                                                                
DATETIME EQU   9                                                                
SMALLDTE EQU   10                                                               
VCHAR    EQU   11                                                               
EXTINT   EQU   12                                                               
EXTFLOAT EQU   13                                                               
EXTDATE  EQU   14                                                               
EXTTIME  EQU   15                                                               
         EJECT                                                                  
***********************************************************************         
* RECORD NAME CONVERSION TABLE                                        *         
***********************************************************************         
         SPACE 1                                                                
RECSYB   DS    0H                                                               
         DC    CL3'CON',AL4(SYBCON) CONTRACT HEADER RECORD                      
RECTABL  EQU   *-RECSYB                                                         
         DC    CL3'DOL',AL4(SYBDOL) CONTRACT DOLLAR RECORD                      
         DC    CL3'DOZ',AL4(SYBDOZ) SPECIAL CONTRACT DOLLAR RECORD              
         DC    CL3'AGY',AL4(SYBAGY) AGENCY RECORD                               
         DC    CL3'ADV',AL4(SYBADV) ADVERTISER RECORD                           
         DC    CL3'SAL',AL4(SYBSAL) SALESPERSON RECORD                          
         DC    CL3'CTY',AL4(SYBCTY) CONTRACT TYPE RECORD                        
         DC    CL3'DCT',AL4(SYBDCT) DEVELOPMENTAL CON TYPE RECORD               
         DC    CL3'STA',AL4(SYBSTA) STATION RECORD                              
         DC    CL3'GRP',AL4(SYBGRP) GROUP/SUB GROUP                             
         DC    CL3'DSP',AL4(SYBDSP) DEVELOPMENTAL S/P RECORD                    
         DC    CL3'TEM',AL4(SYBTEM) TEAM RECORD                                 
         DC    CL3'PRD',AL4(SYBPRD) PRODUCT RECORD                              
         DC    CL3'CLS',AL4(SYBCLS) CLASS RECORD                                
         DC    CL3'CAT',AL4(SYBCAT) CATEGORY RECORD                             
         DC    CL3'OFF',AL4(SYBOFF) OFFICE RECORD                               
         DC    CL3'OWN',AL4(SYBOWN) OWNER RECORD                                
         DC    CL3'MKT',AL4(SYBMKT) MARKET RECORD                               
         DC    CL3'MST',AL4(SYBMST) SEE-ME/READ-ME MASTER/SUB RECORD            
         DC    CL3'REP',AL4(SYBREP) REP RECORD                                  
         DC    CL3'BD1',AL4(SYBBD1) STATION/OFFICE BUDGET RECORD                
         DC    CL3'BD2',AL4(SYBBD2) OFFICE BUDGET RECORD                        
         DC    CL3'PTP',AL4(SYBPTP) POINT PERSON RECORD                         
         DC    CL3'STN',AL4(SYBSTN) SET HEADER RECORD (05622)                   
         DC    CL3'STC',AL4(SYBSTC) SET DETAIL RECORD (05623)                   
         DC    CL3'SWI',AL4(SYBSWI) SWITCH     RECORD (05624)                   
         DC    CL3'SWF',AL4(SYBSWF) SWITCH FIL RECORD (05625)                   
         DC    CL3'CPT',AL4(SYBCPT) COMPETITIV RECORD (05626)                   
         DC    CL3'DPT',AL4(SYBDPT) DYPT/CPP   RECORD (05627)                   
         DC    CL3'LEN',AL4(SYBLEN) LENGTH     RECORD (05628)                   
         DC    CL3'BKS',AL4(SYBBKS) BOOKS      RECORD (05629)                   
         DC    CL3'PID',AL4(SYBPID) STN PID    RECORD (05630)                   
         DC    CL3'SOF',AL4(SYBSOF) STN OFFICE RECORD (05631)                   
         DC    CL3'CCO',AL4(SYBCCO) CONFRM CMT RECORD (05632)                   
         DC    CL3'PFC',AL4(SYBPFC) PEND/FORE CMT REC (05633)                   
         DC    CL3'SEM',AL4(SYBSEM) ST EMAIL ADDR REC (05634)                   
         DC    CL3'CMS',AL4(SYBCMS) ST CMPT MARKT REC (05635)                   
         DC    CL3'OTM',AL4(SYBOTM) STN OFF TEAM REC  (05636)                   
         DC    CL3'RGN',AL4(SYBRGN) REGION            (05637)                   
         DC    CL3'TER',AL4(SYBTER) TERRITORY         (05638)                   
         DC    CL3'SCM',AL4(SYBSCM) STD COMMENT REC   (05639)                   
         DC    CL3'OFC',AL4(SYBOFC) OFF COMMENT REC   (05640)                   
         DC    CL3'DAO',AL4(SYBDAO) DARE OFFICE REC   (05641)                   
         DC    CL3'ACO',AL4(SYBACO) AGY COMMENT REC   (05642)                   
         DC    CL3'EAG',AL4(SYBEAG) EOP AGENCY        (05643)                   
         DC    CL3'EAD',AL4(SYBEAD) EOP ADVERT        (05644)                   
         DC    CL3'EOF',AL4(SYBEOF) EOP OFFICE        (05645)                   
         DC    CL3'ESP',AL4(SYBESP) EOP S/P           (05646)                   
         DC    CL3'SPC',AL4(SYBSPC) SPL COMMENT REC   (05647)                   
         DC    CL3'BCD',AL4(SYBBCD) BUYCODE     REC   (05647)                   
         DC    CL3'BYH',AL4(SYBBYH) BUY HEADER        (05649)                   
         DC    CL3'BDT',AL4(SYBBDT) BUY DATE/TIME     (05650)                   
         DC    CL3'BED',AL4(SYBBED) BUY EFFECTIVE DTES(05651)                   
         DC    CL3'BCM',AL4(SYBBCM) BUY COMMENTS      (05652)                   
         DC    CL3'BDD',AL4(SYBBDD) BUY AGY DEMO      (05653)                   
         DC    CL3'BRD',AL4(SYBBRD) BUY REP DEMO      (05654)                   
         DC    CL3'BPT',AL4(SYBBPT) BUY PATTERN       (05655)                   
         DC    CL3'BPG',AL4(SYBBPG) BUY PROGRAM       (05656)                   
         DC    CL3'BBC',AL4(SYBBBC) BUY CODE          (05657)                   
         DC    CL3'BSB',AL4(SYBBSB) BUY SPORTS BUY    (05658)                   
         DC    CL3'BOC',AL4(SYBBOC) BUY ORDER CMTS    (05659)                   
         DC    X'00'                                                            
         EJECT                                                                  
RECDB2   DS    0H                                                               
         DC    CL3'CON',AL4(DB2CON) CONTRACT HEADER RECORD                      
         DC    CL3'DOL',AL4(DB2DOL) CONTRACT DOLLAR RECORD                      
         DC    CL3'AGY',AL4(DB2AGY) AGENCY RECORD                               
         DC    CL3'ADV',AL4(DB2ADV) ADVERTISER RECORD                           
         DC    CL3'SAL',AL4(DB2SAL) SALESPERSON RECORD                          
         DC    CL3'CTY',AL4(DB2CTY) CONTRACT TYPE RECORD                        
         DC    CL3'DCT',AL4(DB2DCT) DEVELOPMENTAL CON TYPE RECORD               
         DC    CL3'STA',AL4(DB2STA) STATION RECORD                              
         DC    CL3'GRP',AL4(DB2GRP) GROUP/SUB GROUP                             
         DC    CL3'DSP',AL4(DB2DSP) DEVELOPMENTAL S/P RECORD                    
         DC    CL3'TEM',AL4(DB2TEM) TEAM RECORD                                 
         DC    CL3'PRD',AL4(DB2PRD) PRODUCT RECORD                              
         DC    CL3'CLS',AL4(DB2CLS) CLASS RECORD                                
         DC    CL3'CAT',AL4(DB2CAT) CATEGORY RECORD                             
         DC    CL3'OFF',AL4(DB2OFF) OFFICE RECORD                               
         DC    CL3'OWN',AL4(DB2OWN) OWNER RECORD                                
         DC    CL3'MKT',AL4(DB2MKT) MARKET RECORD                               
         DC    CL3'MST',AL4(DB2MST) SEE-ME/READ-ME MASTER/SUB RECORD            
         DC    CL3'REP',AL4(DB2REP) REP RECORD                                  
         DC    CL3'BD1',AL4(DB2BD1) STATION/OFFICE BUDGET RECORD                
         DC    CL3'BD2',AL4(DB2BD2) OFFICE BUDGET RECORD                        
         DC    CL3'PTP',AL4(DB2PTP) POINT PERSON RECORD                         
         DC    CL3'STN',AL4(DB2STN) SET HEADER RECORD (05622)                   
         DC    CL3'STC',AL4(DB2STC) SET DETAIL RECORD (05623)                   
         DC    CL3'SWI',AL4(DB2SWI) SWITCH     RECORD (05624)                   
         DC    CL3'SWF',AL4(DB2SWF) SWITCH FIL RECORD (05625)                   
         DC    CL3'CPT',AL4(DB2CPT) COMPETITIV RECORD (05626)                   
         DC    CL3'DPT',AL4(DB2DPT) DYPT/CPP   RECORD (05627)                   
         DC    CL3'LEN',AL4(DB2LEN) LENGTH     RECORD (05628)                   
         DC    CL3'BKS',AL4(DB2BKS) BOOKS      RECORD (05629)                   
         DC    CL3'PID',AL4(DB2PID) STN PID    RECORD (05630)                   
         DC    CL3'SOF',AL4(DB2SOF) STN OFFICE RECORD (05631)                   
         DC    CL3'CCO',AL4(DB2CCO) CONFRM CMT RECORD (05632)                   
         DC    CL3'PFC',AL4(DB2PFC) PEND/FORE CMT REC (05633)                   
         DC    CL3'SEM',AL4(DB2SEM) ST EMAIL ADDR REC (05634)                   
         DC    CL3'CMS',AL4(DB2CMS) ST CMPT MARKT REC (05635)                   
         DC    CL3'OTM',AL4(DB2OTM) STN OFF TEAM REC  (05636)                   
         DC    CL3'RGN',AL4(DB2RGN) REGION            (05637)                   
         DC    CL3'TER',AL4(DB2TER) TERRITORY         (05638)                   
         DC    CL3'SCM',AL4(DB2SCM) STD COMMENT REC   (05639)                   
         DC    CL3'OFC',AL4(DB2OFC) OFF COMMENT REC   (05640)                   
         DC    CL3'DAO',AL4(DB2DAO) DARE OFFICE REC   (05641)                   
         DC    CL3'ACO',AL4(DB2ACO) AGY COMMENT REC   (05642)                   
         DC    CL3'EAG',AL4(DB2EAG) EOP AGENCY        (05643)                   
         DC    CL3'EAD',AL4(DB2EAD) EOP ADVERT        (05644)                   
         DC    CL3'EOF',AL4(DB2EOF) EOP OFFICE        (05645)                   
         DC    CL3'ESP',AL4(DB2ESP) EOP S/P           (05646)                   
         DC    CL3'SPC',AL4(DB2SPC) SPL COMMENT REC   (05647)                   
         DC    CL3'BCD',AL4(DB2BCD) BUYCODE     REC   (05647)                   
         DC    CL3'BYH',AL4(DB2BYH) BUY HEADER        (05649)                   
         DC    CL3'BDT',AL4(DB2BDT) BUY DATE/TIME     (05650)                   
         DC    CL3'BED',AL4(DB2BED) BUY EFFECTIVE DTES(05651)                   
         DC    CL3'BCM',AL4(DB2BCM) BUY COMMENTS      (05652)                   
         DC    CL3'BDD',AL4(DB2BDD) BUY AGY DEMO      (05653)                   
         DC    CL3'BRD',AL4(DB2BRD) BUY REP DEMO      (05654)                   
         DC    CL3'BPT',AL4(DB2BPT) BUY PATTERN       (05655)                   
         DC    CL3'BPG',AL4(DB2BPG) BUY PROGRAM       (05656)                   
         DC    CL3'BBC',AL4(DB2BBC) BUY CODE          (05657)                   
         DC    CL3'BSB',AL4(DB2BSB) BUY SPORTS BUY    (05658)                   
         DC    CL3'BOC',AL4(DB2BOC) BUY ORDER CMTS    (05659)                   
         DC    X'00'                                                            
         EJECT                                                                  
***********************************************************************         
* INDIVIDUAL RECORD CONVERSION ROUTINES FOR SYBASE                    *         
***********************************************************************         
         DS    0F                  ALIGNMENT                                    
         SPACE 1                                                                
REQ      EQU   C'R'                FIELD IS REQUIRED                            
OPT      EQU   C'O'                FIELD IS OPTIONAL                            
         SPACE 1                                                                
SYBCON   DC    AL2(SYBCONX-SYBCON)                                              
         DC    AL2(L'RECONTYP,RECONTYP-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONACT,RECONACT-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONDAT+L'RECONTME+1,RECONDAT-RECOND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECONMAS,RECONMAS-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONREP,RECONREP-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCON,RECONCON-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONSTA,RECONSTA-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONSAL,RECONSAL-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONOFF,RECONOFF-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONTEM,RECONTEM-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONADV,RECONADV-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONAGY,RECONAGY-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONCTY,RECONCTY-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDEV,RECONDEV-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDSP,RECONDSP-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRC,RECONPRC-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRT,RECONPRT-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDEM,RECONDEM-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONCLI,RECONCLI-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRD,RECONPRD-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONEST,RECONEST-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONFLS,RECONFLS-RECOND),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONFLE,RECONFLE-RECOND),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONXRE,RECONXRE-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCTP,RECONCTP-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCRE,RECONCRE-RECOND),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONBLD,RECONBLD-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONMOD,RECONMOD-RECOND),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RECONVER,RECONVER-RECOND),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RECONWIP,RECONWIP-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLSB,RECONLSB-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONSTT,RECONSTT-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDLS,RECONDLS-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONTRF,RECONTRF-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONOTP,RECONOTP-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONBYR,RECONBYR-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONSHR,RECONSHR-RECOND),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RECONMBD,RECONMBD-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONSSG,RECONSSG-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONDLE,RECONDLE-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONPMG,RECONPMG-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLSF,RECONLSF-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLS$,RECONLS$-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONEDT,RECONEDT-RECOND),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONETM,RECONETM-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONTAD,RECONTAD-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONSAD,RECONSAD-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONSED,RECONSED-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONTXT,RECONTXT-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONMON,RECONMON-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPAD,RECONPAD-RECOND),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RECONPR2,RECONPR2-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONRTS,RECONRTS-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDEL,RECONDEL-RECOND),AL1(OPT,OPT,CHAR,0)              
SYBCONX  DS    0C                                                               
*                                                                               
*                                                                               
SYBDOL   DC    AL2(SYBDOLX-SYBDOL)                                              
         DC    AL2(L'REDOLTYP,REDOLTYP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLACT,REDOLACT-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLDAT+L'REDOLTME+1,REDOLDAT-REDOLD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDOLREP,REDOLREP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLCON,REDOLCON-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLFLG,REDOLFLG-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLBTP,REDOLBTP-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLBTX,REDOLBTX-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLMON,REDOLMON-REDOLD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REDOLACD,REDOLACD-REDOLD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REDOLDOL,REDOLDOL-REDOLD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REDOLADL,REDOLADL-REDOLD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REDOLXRE,REDOLXRE-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLRTS,REDOLRTS-REDOLD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDOLDEL,REDOLDEL-REDOLD),AL1(OPT,OPT,CHAR,0)              
SYBDOLX  DS    0C                                                               
*                                                                               
*                                                                               
SYBDOZ   DC    AL2(SYBDOZX-SYBDOZ)                                              
         DC    AL2(L'REDOLTYP,REDOLTYP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLACT,REDOLACT-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLDAT+L'REDOLTME+1,REDOLDAT-REDOLD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDOLREP,REDOLREP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLCON,REDOLCON-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLFLG,REDOLFLG-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLBTP,REDOLBTP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLBTX,REDOLBTX-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLMON,REDOLMON-REDOLD),AL1(REQ,REQ,SMALLDTE,0)          
         DC    AL2(L'REDOLACD,REDOLACD-REDOLD),AL1(REQ,REQ,SMALLDTE,0)          
         DC    AL2(L'REDOLDOL,REDOLDOL-REDOLD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REDOLADL,REDOLADL-REDOLD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REDOLXRE,REDOLXRE-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLRTS,REDOLRTS-REDOLD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDOLDEL,REDOLDEL-REDOLD),AL1(OPT,OPT,CHAR,0)              
SYBDOZX  DS    0C                                                               
*                                                                               
*                                                                               
SYBAGY   DC    AL2(SYBAGYX-SYBAGY)                                              
         DC    AL2(L'REAGYTYP,REAGYTYP-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYACT,REAGYACT-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYDAT+L'REAGYTME+1,REAGYDAT-REAGYD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REAGYREP,REAGYREP-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYAGY,REAGYAGY-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYNAM,REAGYNAM-REAGYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REAGYAD1,REAGYAD1-REAGYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REAGYAD2,REAGYAD2-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYCTY,REAGYCTY-REAGYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REAGYSTA,REAGYSTA-REAGYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REAGYZIP,REAGYZIP-REAGYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REAGYPHO,REAGYPHO-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYCRR,REAGYCRR-REAGYD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REAGYLIA,REAGYLIA-REAGYD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REAGYFAX,REAGYFAX-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYTER,REAGYTER-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYICO,REAGYICO-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYDLU,REAGYDLU-REAGYD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REAGYRTS,REAGYRTS-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYDEL,REAGYDEL-REAGYD),AL1(OPT,OPT,CHAR,0)              
SYBAGYX  DS    0C                                                               
*                                                                               
*                                                                               
SYBADV   DC    AL2(SYBADVX-SYBADV)                                              
         DC    AL2(L'READVTYP,READVTYP-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVACT,READVACT-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVDAT+L'READVTME+1,READVDAT-READVD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'READVREP,READVREP-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVADV,READVADV-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVNAM,READVNAM-READVD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'READVCAT,READVCAT-READVD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'READVNET,READVNET-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVCTY,READVCTY-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA1,READVAA1-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA2,READVAA2-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA3,READVAA3-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVCTA,READVCTA-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAOF,READVAOF-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVA21,READVA21-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVA22,READVA22-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVA23,READVA23-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVCTB,READVCTB-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVOFB,READVOFB-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVRTS,READVRTS-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVDEL,READVDEL-READVD),AL1(OPT,OPT,CHAR,0)              
SYBADVX  DS    0C                                                               
*                                                                               
*                                                                               
SYBSAL   DC    AL2(SYBSALX-SYBSAL)                                              
         DC    AL2(L'RESALTYP,RESALTYP-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALACT,RESALACT-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALDAT+L'RESALTME+1,RESALDAT-RESALD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESALREP,RESALREP-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALSAL,RESALSAL-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALNAM,RESALNAM-RESALD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESALOFF,RESALOFF-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALTEM,RESALTEM-RESALD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESALTEL,RESALTEL-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALFAX,RESALFAX-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALEML,RESALEML-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALLDT,RESALLDT-RESALD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RESALMGR,RESALMGR-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALRTS,RESALRTS-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALDEL,RESALDEL-RESALD),AL1(OPT,OPT,CHAR,0)              
SYBSALX  DS    0C                                                               
*                                                                               
*                                                                               
SYBDSP   DC    AL2(SYBDSPX-SYBDSP)                                              
         DC    AL2(L'REDSPTYP,REDSPTYP-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPACT,REDSPACT-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPDAT+L'REDSPTME+1,REDSPDAT-REDSPD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDSPREP,REDSPREP-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPSAL,REDSPSAL-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPNAM,REDSPNAM-REDSPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDSPTEL,REDSPTEL-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPFAX,REDSPFAX-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPLDT,REDSPLDT-REDSPD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REDSPRTS,REDSPRTS-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPDEL,REDSPDEL-REDSPD),AL1(OPT,OPT,CHAR,0)              
SYBDSPX  DS    0C                                                               
*                                                                               
*                                                                               
SYBCTY   DC    AL2(SYBCTYX-SYBCTY)                                              
         DC    AL2(L'RECTYTYP,RECTYTYP-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYACT,RECTYACT-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYDAT+L'RECTYTME+1,RECTYDAT-RECTYD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECTYREP,RECTYREP-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYCTY,RECTYCTY-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYNAM,RECTYNAM-RECTYD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECTYCCM,RECTYCCM-RECTYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECTYRTS,RECTYRTS-RECTYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECTYDEL,RECTYDEL-RECTYD),AL1(OPT,OPT,CHAR,0)              
SYBCTYX  DS    0C                                                               
*                                                                               
*                                                                               
SYBDCT   DC    AL2(SYBDCTX-SYBDCT)                                              
         DC    AL2(L'REDCTTYP,REDCTTYP-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTACT,REDCTACT-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTDAT+L'REDCTTME+1,REDCTDAT-REDCTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDCTREP,REDCTREP-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTDCT,REDCTDCT-REDCTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDCTNAM,REDCTNAM-REDCTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDCTRTS,REDCTRTS-REDCTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDCTDEL,REDCTDEL-REDCTD),AL1(OPT,OPT,CHAR,0)              
SYBDCTX  DS    0C                                                               
*                                                                               
*                                                                               
SYBSTA   DC    AL2(SYBSTAX-SYBSTA)                                              
         DC    AL2(L'RESTATYP,RESTATYP-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTAACT,RESTAACT-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTADAT+L'RESTATME+1,RESTADAT-RESTAD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTAREP,RESTAREP-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTASTA,RESTASTA-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTAGRP,RESTAGRP-RESTAD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESTAJDT,RESTAJDT-RESTAD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'RESTALDT,RESTALDT-RESTAD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RESTACDT,RESTACDT-RESTAD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RESTAMKT,RESTAMKT-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAAFF,RESTAAFF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAOWN,RESTAOWN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTACHN,RESTACHN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAINF,RESTAINF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAIDN,RESTAIDN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTANEW,RESTANEW-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAFRM,RESTAFRM-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTATVB,RESTATVB-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTARNK,RESTARNK-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAMOU,RESTAMOU-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAURL,RESTAURL-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTATZ,RESTATZ-RESTAD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'RESTAFAX,RESTAFAX-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTALIA,RESTALIA-RESTAD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RESTAINV,RESTAINV-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAEC,RESTAEC-RESTAD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'RESTATRF,RESTATRF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASTT,RESTASTT-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADLU,RESTADLU-RESTAD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RESTACBY,RESTACBY-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTACLU,RESTACLU-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADCL,RESTADCL-RESTAD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RESTACCM,RESTACCM-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASC1,RESTASC1-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASC2,RESTASC2-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTARTS,RESTARTS-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADEL,RESTADEL-RESTAD),AL1(OPT,OPT,CHAR,0)              
SYBSTAX  DS    0C                                                               
*                                                                               
*                                                                               
SYBGRP   DC    AL2(SYBGRPX-SYBGRP)                                              
         DC    AL2(L'REGRPTYP,REGRPTYP-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPACT,REGRPACT-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPDAT+L'REGRPTME+1,REGRPDAT-REGRPD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REGRPREP,REGRPREP-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPGRP,REGRPGRP-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPNAM,REGRPNAM-REGRPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REGRPSNM,REGRPSNM-REGRPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REGRPRTS,REGRPRTS-REGRPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REGRPDEL,REGRPDEL-REGRPD),AL1(OPT,OPT,CHAR,0)              
SYBGRPX  DS    0C                                                               
*                                                                               
*                                                                               
SYBTEM   DC    AL2(SYBTEMX-SYBTEM)                                              
         DC    AL2(L'RETEMTYP,RETEMTYP-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMACT,RETEMACT-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMDAT+L'RETEMTME+1,RETEMDAT-RETEMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RETEMREP,RETEMREP-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMTEM,RETEMTEM-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMNAM,RETEMNAM-RETEMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETEMDIV,RETEMDIV-RETEMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETEMRTS,RETEMRTS-RETEMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RETEMDEL,RETEMDEL-RETEMD),AL1(OPT,OPT,CHAR,0)              
SYBTEMX  DS    0C                                                               
*                                                                               
*                                                                               
SYBPRD   DC    AL2(SYBPRDX-SYBPRD)                                              
         DC    AL2(L'REPRDTYP,REPRDTYP-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDACT,REPRDACT-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDDAT+L'REPRDTME+1,REPRDDAT-REPRDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPRDREP,REPRDREP-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDADV,REPRDADV-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDPRD,REPRDPRD-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDNAM,REPRDNAM-REPRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPRDCAT,REPRDCAT-REPRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPRDPTP,REPRDPTP-REPRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPRDRTS,REPRDRTS-REPRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPRDDEL,REPRDDEL-REPRDD),AL1(OPT,OPT,CHAR,0)              
SYBPRDX  DS    0C                                                               
*                                                                               
*                                                                               
SYBCLS   DC    AL2(SYBCLSX-SYBCLS)                                              
         DC    AL2(L'RECLSTYP,RECLSTYP-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSACT,RECLSACT-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSDAT+L'RECLSTME+1,RECLSDAT-RECLSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECLSREP,RECLSREP-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSCOD,RECLSCOD-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSNAM,RECLSNAM-RECLSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECLSRTS,RECLSRTS-RECLSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECLSDEL,RECLSDEL-RECLSD),AL1(OPT,OPT,CHAR,0)              
SYBCLSX  DS    0C                                                               
*                                                                               
*                                                                               
SYBCAT   DC    AL2(SYBCATX-SYBCAT)                                              
         DC    AL2(L'RECATTYP,RECATTYP-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATACT,RECATACT-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATDAT+L'RECATTME+1,RECATDAT-RECATD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECATREP,RECATREP-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATCOD,RECATCOD-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATNAM,RECATNAM-RECATD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECATCLS,RECATCLS-RECATD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECATRTS,RECATRTS-RECATD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECATDEL,RECATDEL-RECATD),AL1(OPT,OPT,CHAR,0)              
SYBCATX  DS    0C                                                               
*                                                                               
*                                                                               
SYBOFF   DC    AL2(SYBOFFX-SYBOFF)                                              
         DC    AL2(L'REOFFTYP,REOFFTYP-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFACT,REOFFACT-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFDAT+L'REOFFTME+1,REOFFDAT-REOFFD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOFFREP,REOFFREP-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFCOD,REOFFCOD-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFNAM,REOFFNAM-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFREG,REOFFREG-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFAD1,REOFFAD1-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFAD2,REOFFAD2-REOFFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFFSTT,REOFFSTT-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFZIP,REOFFZIP-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFFAX,REOFFFAX-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFNL,REOFFNL-REOFFD),AL1(REQ,OPT,CHAR,0)                
         DC    AL2(L'REOFFRTS,REOFFRTS-REOFFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFFDEL,REOFFDEL-REOFFD),AL1(OPT,OPT,CHAR,0)              
SYBOFFX  DS    0C                                                               
*                                                                               
*                                                                               
SYBOWN   DC    AL2(SYBOWNX-SYBOWN)                                              
         DC    AL2(L'REOWNTYP,REOWNTYP-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNACT,REOWNACT-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNDAT+L'REOWNTME+1,REOWNDAT-REOWND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOWNREP,REOWNREP-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNCOD,REOWNCOD-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNNAM,REOWNNAM-REOWND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOWNRTS,REOWNRTS-REOWND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOWNDEL,REOWNDEL-REOWND),AL1(OPT,OPT,CHAR,0)              
SYBOWNX  DS    0C                                                               
*                                                                               
*                                                                               
SYBMKT   DC    AL2(SYBMKTX-SYBMKT)                                              
         DC    AL2(L'REMKTTYP,REMKTTYP-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTACT,REMKTACT-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTDAT+L'REMKTTME+1,REMKTDAT-REMKTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REMKTREP,REMKTREP-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTCOD,REMKTCOD-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTNAM,REMKTNAM-REMKTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REMKTRTS,REMKTRTS-REMKTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REMKTDEL,REMKTDEL-REMKTD),AL1(OPT,OPT,CHAR,0)              
SYBMKTX  DS    0C                                                               
*                                                                               
*                                                                               
SYBMST   DC    AL2(SYBMSTX-SYBMST)                                              
         DC    AL2(L'REMSTTYP,REMSTTYP-REMSTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMSTACT,REMSTACT-REMSTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMSTDAT+L'REMSTTME+1,REMSTDAT-REMSTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REMSTSUB,REMSTSUB-REMSTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMSTMST,REMSTMST-REMSTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REMSTRTS,REMSTRTS-REMSTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REMSTDEL,REMSTDEL-REMSTD),AL1(OPT,OPT,CHAR,0)              
SYBMSTX  DS    0C                                                               
*                                                                               
*                                                                               
SYBREP   DC    AL2(SYBREPX-SYBREP)                                              
         DC    AL2(L'REREPTYP,REREPTYP-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPACT,REREPACT-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPDAT+L'REREPTME+1,REREPDAT-REREPD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REREPSUB,REREPSUB-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPMAS,REREPMAS-REREPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REREPNAM,REREPNAM-REREPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REREPRTS,REREPRTS-REREPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REREPDEL,REREPDEL-REREPD),AL1(OPT,OPT,CHAR,0)              
SYBREPX  DS    0C                                                               
*                                                                               
*                                                                               
SYBBD1   DC    AL2(SYBBD1X-SYBBD1)                                              
         DC    AL2(L'REBD1TYP,REBD1TYP-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1ACT,REBD1ACT-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1DAT+L'REBD1TME+1,REBD1DAT-REBD1D)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBD1REP,REBD1REP-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1RTP,REBD1RTP-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1STA,REBD1STA-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1OFF,REBD1OFF-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1BYR,REBD1BYR-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1MOS,REBD1MOS-REBD1D),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REBD1BUD,REBD1BUD-REBD1D),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REBD1RTS,REBD1RTS-REBD1D),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBD1DEL,REBD1DEL-REBD1D),AL1(OPT,OPT,CHAR,0)              
SYBBD1X  DS    0C                                                               
*                                                                               
*                                                                               
SYBBD2   DC    AL2(SYBBD2X-SYBBD2)                                              
         DC    AL2(L'REBD2TYP,REBD2TYP-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2ACT,REBD2ACT-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2DAT+L'REBD2TME+1,REBD2DAT-REBD2D)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBD2REP,REBD2REP-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2OFF,REBD2OFF-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2TEM,REBD2TEM-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2GSG,REBD2GSG-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2BYR,REBD2BYR-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2MOS,REBD2MOS-REBD2D),AL1(REQ,REQ,SMALLDTE,0)          
         DC    AL2(L'REBD2BUD,REBD2BUD-REBD2D),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REBD2RTS,REBD2RTS-REBD2D),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBD2DEL,REBD2DEL-REBD2D),AL1(OPT,OPT,CHAR,0)              
SYBBD2X  DS    0C                                                               
*                                                                               
*                                                                               
SYBPTP   DC    AL2(SYBPTPX-SYBPTP)                                              
         DC    AL2(L'REPTPTYP,REPTPTYP-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPACT,REPTPACT-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPDAT+L'REPTPTME+1,REPTPDAT-REPTPD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPTPREP,REPTPREP-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPPTP,REPTPPTP-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPNAM,REPTPNAM-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPOFF,REPTPOFF-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPTEL,REPTPTEL-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPFAX,REPTPFAX-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPEML,REPTPEML-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPSPR,REPTPSPR-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPLDT,REPTPLDT-REPTPD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REPTPRTS,REPTPRTS-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPDEL,REPTPDEL-REPTPD),AL1(OPT,OPT,CHAR,0)              
SYBPTPX  DS    0C                                                               
*                                                                               
***SET HEADER                                                                   
*                                                                               
SYBSTN   DC    AL2(SYBSTNX-SYBSTN)                                              
         DC    AL2(L'RESTNTYP,RESTNTYP-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNACT,RESTNACT-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNDAT+L'RESTNTME+1,RESTNDAT-RESTND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTNREP,RESTNREP-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSTY,RESTNSTY-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSNM,RESTNSNM-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSFL,RESTNSFL-RESTND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESTNSDS,RESTNSDS-RESTND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTNRTS,RESTNRTS-RESTND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTNDEL,RESTNDEL-RESTND),AL1(OPT,OPT,CHAR,0)              
SYBSTNX  DS    0C                                                               
*                                                                               
***SET HEADER                                                                   
***SET DETAIL                                                                   
*                                                                               
SYBSTC   DC    AL2(SYBSTCX-SYBSTC)                                              
         DC    AL2(L'RESTCTYP,RESTCTYP-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCACT,RESTCACT-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCDAT+L'RESTCTME+1,RESTCDAT-RESTCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTCREP,RESTCREP-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSTY,RESTCSTY-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSNM,RESTCSNM-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSCD,RESTCSCD-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCCTR,RESTCCTR-RESTCD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESTCRTS,RESTCRTS-RESTCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTCDEL,RESTCDEL-RESTCD),AL1(OPT,OPT,CHAR,0)              
SYBSTCX  DS    0C                                                               
*                                                                               
         DS    0F                  ALIGNMENT                                    
*                                                                               
***SET DETAIL                                                                   
***SWI DETAIL                                                                   
*                                                                               
SYBSWI   DC    AL2(SYBSWIX-SYBSWI)                                              
         DC    AL2(L'RESWITYP,RESWITYP-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIACT,RESWIACT-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIDAT+L'RESWITME+1,RESWIDAT-RESWID)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESWIREP,RESWIREP-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWISDT,RESWISDT-RESWID),AL1(REQ,REQ,SMALLDTE,0)          
         DC    AL2(L'RESWISTY,RESWISTY-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIOLD,RESWIOLD-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWISEQ,RESWISEQ-RESWID),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESWINEW,RESWINEW-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIIT1,RESWIIT1-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIC1,RESWIIC1-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIT2,RESWIIT2-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIC2,RESWIIC2-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIDDS,RESWIDDS-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIDTS,RESWIDTS-RESWID),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'RESWIDTW,RESWIDTW-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIRTS,RESWIRTS-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIDEL,RESWIDEL-RESWID),AL1(OPT,OPT,CHAR,0)              
SYBSWIX  DS    0C                                                               
*                                                                               
***SWF DETAIL                                                                   
*                                                                               
SYBSWF   DC    AL2(SYBSWFX-SYBSWF)                                              
         DC    AL2(L'RESWFTYP,RESWFTYP-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFACT,RESWFACT-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFDAT+L'RESWFTME+1,RESWFDAT-RESWFD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESWFREP,RESWFREP-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFSDT,RESWFSDT-RESWFD),AL1(REQ,REQ,SMALLDTE,0)          
         DC    AL2(L'RESWFSTY,RESWFSTY-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFOLD,RESWFOLD-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFSEQ,RESWFSEQ-RESWFD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESWFF1T,RESWFF1T-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFF1C,RESWFF1C-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFRTS,RESWFRTS-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFDEL,RESWFDEL-RESWFD),AL1(OPT,OPT,CHAR,0)              
SYBSWFX  DS    0C                                                               
*                                                                               
*                                                                               
SYBCPT   DC    AL2(SYBCPTX-SYBCPT)                                              
         DC    AL2(L'RECPTTYP,RECPTTYP-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTACT,RECPTACT-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTDAT+L'RECPTTME+1,RECPTDAT-RECPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECPTREP,RECPTREP-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTCON,RECPTCON-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTSTA,RECPTSTA-RECPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECPTPCT,RECPTPCT-RECPTD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RECPTRTS,RECPTRTS-RECPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECPTDEL,RECPTDEL-RECPTD),AL1(OPT,OPT,CHAR,0)              
SYBCPTX  DS    0C                                                               
*                                                                               
*                                                                               
SYBDPT   DC    AL2(SYBDPTX-SYBDPT)                                              
         DC    AL2(L'REDPTTYP,REDPTTYP-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTACT,REDPTACT-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTDAT+L'REDPTTME+1,REDPTDAT-REDPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDPTREP,REDPTREP-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTCON,REDPTCON-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTDPT,REDPTDPT-REDPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDPTCPP,REDPTCPP-REDPTD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REDPTRTS,REDPTRTS-REDPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDPTDEL,REDPTDEL-REDPTD),AL1(OPT,OPT,CHAR,0)              
SYBDPTX  DS    0C                                                               
*                                                                               
*                                                                               
SYBLEN   DC    AL2(SYBLENX-SYBLEN)                                              
         DC    AL2(L'RELENTYP,RELENTYP-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENACT,RELENACT-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENDAT+L'RELENTME+1,RELENDAT-RELEND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RELENREP,RELENREP-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENCON,RELENCON-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENCTR,RELENCTR-RELEND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RELENLTH,RELENLTH-RELEND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RELENRTS,RELENRTS-RELEND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RELENDEL,RELENDEL-RELEND),AL1(OPT,OPT,CHAR,0)              
SYBLENX  DS    0C                                                               
*                                                                               
*                                                                               
SYBBKS   DC    AL2(SYBBKSX-SYBBKS)                                              
         DC    AL2(L'REBKSTYP,REBKSTYP-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSACT,REBKSACT-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSDAT+L'REBKSTME+1,REBKSDAT-REBKSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBKSREP,REBKSREP-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSCON,REBKSCON-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSCTR,REBKSCTR-REBKSD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REBKSBOK,REBKSBOK-REBKSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBKSRTS,REBKSRTS-REBKSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBKSDEL,REBKSDEL-REBKSD),AL1(OPT,OPT,CHAR,0)              
SYBBKSX  DS    0C                                                               
*                                                                               
SYBPID   DC    AL2(SYBPIDX-SYBPID)                                              
         DC    AL2(L'REPIDTYP,REPIDTYP-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDACT,REPIDACT-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDDAT+L'REPIDTME+1,REPIDDAT-REPIDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPIDREP,REPIDREP-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDSTA,REPIDSTA-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDPID,REPIDPID-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDRTS,REPIDRTS-REPIDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPIDDEL,REPIDDEL-REPIDD),AL1(OPT,OPT,CHAR,0)              
SYBPIDX  DS    0C                                                               
*                                                                               
SYBSOF   DC    AL2(SYBSOFX-SYBSOF)                                              
         DC    AL2(L'RESOFTYP,RESOFTYP-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFACT,RESOFACT-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFDAT+L'RESOFTME+1,RESOFDAT-RESOFD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESOFREP,RESOFREP-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFSTA,RESOFSTA-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFOFF,RESOFOFF-RESOFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESOFRTS,RESOFRTS-RESOFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESOFDEL,RESOFDEL-RESOFD),AL1(OPT,OPT,CHAR,0)              
SYBSOFX  DS    0C                                                               
*                                                                               
SYBCCO   DC    AL2(SYBCCOX-SYBCCO)                                              
         DC    AL2(L'RECCOTYP,RECCOTYP-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCOACT,RECCOACT-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCODAT+L'RECCOTME+1,RECCODAT-RECCOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECCOREP,RECCOREP-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCOCON,RECCOCON-RECCOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECCORTS,RECCORTS-RECCOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECCODEL,RECCODEL-RECCOD),AL1(OPT,OPT,CHAR,0)              
SYBCCOX  DS    0C                                                               
*                                                                               
SYBPFC   DC    AL2(SYBPFCX-SYBPFC)                                              
         DC    AL2(L'REPFCTYP,REPFCTYP-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCACT,REPFCACT-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCDAT+L'REPFCTME+1,REPFCDAT-REPFCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPFCREP,REPFCREP-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCCON,REPFCCON-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCCO#,REPFCCO#-REPFCD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REPFCLIN,REPFCLIN-REPFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPFCRTS,REPFCRTS-REPFCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPFCDEL,REPFCDEL-REPFCD),AL1(OPT,OPT,CHAR,0)              
SYBPFCX  DS    0C                                                               
*                                                                               
SYBSEM   DC    AL2(SYBSEMX-SYBSEM)                                              
         DC    AL2(L'RESEMTYP,RESEMTYP-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMACT,RESEMACT-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMDAT+L'RESEMTME+1,RESEMDAT-RESEMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESEMREP,RESEMREP-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMSTA,RESEMSTA-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMEM#,RESEMEM#-RESEMD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RESEMEML,RESEMEML-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMRTS,RESEMRTS-RESEMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESEMDEL,RESEMDEL-RESEMD),AL1(OPT,OPT,CHAR,0)              
SYBSEMX  DS    0C                                                               
*                                                                               
SYBCMS   DC    AL2(SYBCMSX-SYBCMS)                                              
         DC    AL2(L'RECMSTYP,RECMSTYP-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSACT,RECMSACT-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSDAT+L'RECMSTME+1,RECMSDAT-RECMSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECMSREP,RECMSREP-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSRST,RECMSRST-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSCST,RECMSCST-RECMSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECMSAFF,RECMSAFF-RECMSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECMSRTS,RECMSRTS-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSDEL,RECMSDEL-RECMSD),AL1(OPT,OPT,CHAR,0)              
SYBCMSX  DS    0C                                                               
*                                                                               
SYBOTM   DC    AL2(SYBOTMX-SYBOTM)                                              
         DC    AL2(L'REOTMTYP,REOTMTYP-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMACT,REOTMACT-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMDAT+L'REOTMTME+1,REOTMDAT-REOTMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOTMREP,REOTMREP-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMRST,REOTMRST-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMCOF,REOTMCOF-REOTMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOTMATM,REOTMATM-REOTMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOTMRTS,REOTMRTS-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMDEL,REOTMDEL-REOTMD),AL1(OPT,OPT,CHAR,0)              
SYBOTMX  DS    0C                                                               
*                                                                               
SYBRGN   DC    AL2(SYBRGNX-SYBRGN)                                              
         DC    AL2(L'RERGNTYP,RERGNTYP-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNACT,RERGNACT-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNDAT+L'RERGNTME+1,RERGNDAT-RERGND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RERGNREP,RERGNREP-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNREG,RERGNREG-RERGND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RERGNNAM,RERGNNAM-RERGND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RERGNRTS,RERGNRTS-RERGND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RERGNDEL,RERGNDEL-RERGND),AL1(OPT,OPT,CHAR,0)              
SYBRGNX  DS    0C                                                               
*                                                                               
SYBTER   DC    AL2(SYBTERX-SYBTER)                                              
         DC    AL2(L'RETERTYP,RETERTYP-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERACT,RETERACT-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERDAT+L'RETERTME+1,RETERDAT-RETERD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RETERREP,RETERREP-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERTER,RETERTER-RETERD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETERNAM,RETERNAM-RETERD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETERRTS,RETERRTS-RETERD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RETERDEL,RETERDEL-RETERD),AL1(OPT,OPT,CHAR,0)              
SYBTERX  DS    0C                                                               
*                                                                               
SYBSCM   DC    AL2(SYBSCMX-SYBSCM)                                              
         DC    AL2(L'RESCMTYP,RESCMTYP-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMACT,RESCMACT-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMDAT+L'RESCMTME+1,RESCMDAT-RESCMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESCMREP,RESCMREP-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMCOD,RESCMCOD-RESCMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESCMCO#,RESCMCO#-RESCMD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RESCMLIN,RESCMLIN-RESCMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESCMRTS,RESCMRTS-RESCMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESCMDEL,RESCMDEL-RESCMD),AL1(OPT,OPT,CHAR,0)              
SYBSCMX  DS    0C                                                               
*                                                                               
SYBOFC   DC    AL2(SYBOFCX-SYBOFC)                                              
         DC    AL2(L'REOFCTYP,REOFCTYP-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCACT,REOFCACT-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCDAT+L'REOFCTME+1,REOFCDAT-REOFCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOFCREP,REOFCREP-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCCOO,REOFCCOO-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCCOD,REOFCCOD-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCCO#,REOFCCO#-REOFCD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REOFCLIN,REOFCLIN-REOFCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFCDES,REOFCDES-REOFCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFCRTS,REOFCRTS-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCDEL,REOFCDEL-REOFCD),AL1(OPT,OPT,CHAR,0)              
SYBOFCX  DS    0C                                                               
*                                                                               
SYBDAO   DC    AL2(SYBDAOX-SYBDAO)                                              
         DC    AL2(L'REDAOTYP,REDAOTYP-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAOACT,REDAOACT-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAODAT+L'REDAOTME+1,REDAODAT-REDAOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDAOREP,REDAOREP-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAOAGY,REDAOAGY-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAOAGO,REDAOAGO-REDAOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDAOCTR,REDAOCTR-REDAOD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REDAORTS,REDAORTS-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAODEL,REDAODEL-REDAOD),AL1(OPT,OPT,CHAR,0)              
SYBDAOX  DS    0C                                                               
*                                                                               
SYBACO   DC    AL2(SYBACOX-SYBACO)                                              
         DC    AL2(L'REACOTYP,REACOTYP-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACOACT,REACOACT-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACODAT+L'REACOTME+1,REACODAT-REACOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REACOREP,REACOREP-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACOAGY,REACOAGY-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACOCOM,REACOCOM-REACOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REACOCTR,REACOCTR-REACOD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'REACORTS,REACORTS-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACODEL,REACODEL-REACOD),AL1(OPT,OPT,CHAR,0)              
SYBACOX  DS    0C                                                               
*                                                                               
*                                                                               
SYBEAG   DC    AL2(SYBEAGX-SYBEAG)                                              
         DC    AL2(L'REEPATYP,REEPATYP-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPAACT,REEPAACT-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPADAT+L'REEPATME+1,REEPADAT-REEPAD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPAREP,REEPAREP-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPATRF,REEPATRF-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPASTA,REEPASTA-REEPAD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPAAGY,REEPAAGY-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPAEAG,REEPAEAG-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPASTT,REEPASTT-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPAADT,REEPAADT-REEPAD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REEPATOF,REEPATOF-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPARTS,REEPARTS-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPADEL,REEPADEL-REEPAD),AL1(OPT,OPT,CHAR,0)              
SYBEAGX  DS    0C                                                               
*                                                                               
SYBEAD   DC    AL2(SYBEADX-SYBEAD)                                              
         DC    AL2(L'REEPDTYP,REEPDTYP-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDACT,REEPDACT-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDDAT+L'REEPDTME+1,REEPDDAT-REEPDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPDREP,REEPDREP-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDTRF,REEPDTRF-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDSTA,REEPDSTA-REEPDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPDADV,REEPDADV-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDEAD,REEPDEAD-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDSTT,REEPDSTT-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDADT,REEPDADT-REEPDD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REEPDRTS,REEPDRTS-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDDEL,REEPDDEL-REEPDD),AL1(OPT,OPT,CHAR,0)              
SYBEADX  DS    0C                                                               
*                                                                               
SYBEOF   DC    AL2(SYBEOFX-SYBEOF)                                              
         DC    AL2(L'REEPOTYP,REEPOTYP-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOACT,REEPOACT-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPODAT+L'REEPOTME+1,REEPODAT-REEPOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPOREP,REEPOREP-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOTRF,REEPOTRF-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOSTA,REEPOSTA-REEPOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPOOFF,REEPOOFF-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOEOF,REEPOEOF-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPOSTT,REEPOSTT-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPOADT,REEPOADT-REEPOD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REEPORTS,REEPORTS-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPODEL,REEPODEL-REEPOD),AL1(OPT,OPT,CHAR,0)              
SYBEOFX  DS    0C                                                               
*                                                                               
SYBESP   DC    AL2(SYBESPX-SYBESP)                                              
         DC    AL2(L'REEPSTYP,REEPSTYP-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSACT,REEPSACT-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSDAT+L'REEPSTME+1,REEPSDAT-REEPSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPSREP,REEPSREP-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSTRF,REEPSTRF-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSSTA,REEPSSTA-REEPSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPSSP,REEPSSP-REEPSD),AL1(REQ,REQ,CHAR,0)                
         DC    AL2(L'REEPSESP,REEPSESP-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSSTT,REEPSSTT-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSADT,REEPSADT-REEPSD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REEPSRTS,REEPSRTS-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSDEL,REEPSDEL-REEPSD),AL1(OPT,OPT,CHAR,0)              
SYBESPX  DS    0C                                                               
*                                                                               
SYBSPC   DC    AL2(SYBSPCX-SYBSPC)                                              
         DC    AL2(L'RESPCTYP,RESPCTYP-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCACT,RESPCACT-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCDAT+L'RESPCTME+1,RESPCDAT-RESPCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESPCREP,RESPCREP-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCCON,RESPCCON-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCCO#,RESPCCO#-RESPCD),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RESPCLIN,RESPCLIN-RESPCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESPCRTS,RESPCRTS-RESPCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESPCDEL,RESPCDEL-RESPCD),AL1(OPT,OPT,CHAR,0)              
SYBSPCX  DS    0C                                                               
*                                                                               
SYBBCD   DC    AL2(SYBBCDX-SYBBCD)                                              
         DC    AL2(L'REBCDTYP,REBCDTYP-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDACT,REBCDACT-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDDAT+L'REBCDTME+1,REBCDDAT-REBCDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBCDREP,REBCDREP-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDRTY,REBCDRTY-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDCOD,REBCDCOD-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDDES,REBCDDES-REBCDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY1,REBCDTY1-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY2,REBCDTY2-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY3,REBCDTY3-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDDTE,REBCDDTE-REBCDD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBCDDTC,REBCDDTC-REBCDD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBCDLUI,REBCDLUI-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDRTS,REBCDRTS-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDDEL,REBCDDEL-REBCDD),AL1(OPT,OPT,CHAR,0)              
SYBBCDX  DS    0C                                                               
*                                                                               
SYBBYH   DC    AL2(SYBBYHX-SYBBYH)                                              
         DC    AL2(L'REBUYTYP,REBUYTYP-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYACT,REBUYACT-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYDAT+L'REBUYTIM+1,REBUYDAT-REBUYD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBUYREP,REBUYREP-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYCON,REBUYCON-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYPLN,REBUYPLN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYMLN,REBUYMLN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYLIN,REBUYLIN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYNW,REBUYNW-REBUYD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'REBUYCOS,REBUYCOS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCLS,REBUYCLS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSEC,REBUYSEC-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCRE,REBUYCRE-REBUYD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBUYCRD,REBUYCRD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYLCD,REBUYLCD-REBUYD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBUYKMD,REBUYKMD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCHI,REBUYCHI-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYTSP,REBUYTSP-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYTCS,REBUYTCS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYWKD,REBUYWKD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTD,REBUYSTD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYEND,REBUYEND-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDUR,REBUYDUR-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYMFG,REBUYMFG-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSPT,REBUYSPT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTY,REBUYSTY-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYFLT,REBUYFLT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYVER,REBUYVER-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYPTP,REBUYPTP-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDPT,REBUYDPT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTT,REBUYSTT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYAGN,REBUYAGN-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYST2,REBUYST2-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYRTS,REBUYRTS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDEL,REBUYDEL-REBUYD),AL1(OPT,OPT,CHAR,0)              
SYBBYHX  DS    0C                                                               
*                                                                               
SYBBDT   DC    AL2(SYBBDTX-SYBBDT)                                              
         DC    AL2(L'REBDTTYP,REBDTTYP-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTACT,REBDTACT-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTDAT+L'REBDTTIM+1,REBDTDAT-REBDTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBDTREP,REBDTREP-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTCON,REBDTCON-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTLIN,REBDTLIN-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTSTR,REBDTSTR-REBDTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDTEND,REBDTEND-REBDTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDTDYS,REBDTDYS-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTTM1,REBDTTM1-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTTM2,REBDTTM2-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTSSB,REBDTSSB-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTWTF,REBDTWTF-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTRTS,REBDTRTS-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTDEL,REBDTDEL-REBDTD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBDTX  DS    0C                                                               
*                                                                               
SYBBED   DC    AL2(SYBBEDX-SYBBED)                                              
         DC    AL2(L'REBEDTYP,REBEDTYP-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDACT,REBEDACT-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDDAT+L'REBEDTIM+1,REBEDDAT-REBEDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBEDREP,REBEDREP-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDCON,REBEDCON-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDLIN,REBEDLIN-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDSTR,REBEDSTR-REBEDD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REBEDEND,REBEDEND-REBEDD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REBEDALT,REBEDALT-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNPO,REBEDNPO-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNPW,REBEDNPW-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNOW,REBEDNOW-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDRTS,REBEDRTS-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDDEL,REBEDDEL-REBEDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBEDX  DS    0C                                                               
*                                                                               
SYBBCM   DC    AL2(SYBBCMX-SYBBCM)                                              
         DC    AL2(L'REBCMTYP,REBCMTYP-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMACT,REBCMACT-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMDAT+L'REBCMTIM+1,REBCMDAT-REBCMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBCMREP,REBCMREP-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMCON,REBCMCON-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMLIN,REBCMLIN-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMCMT,REBCMCMT-REBCMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBCMRTS,REBCMRTS-REBCMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCMDEL,REBCMDEL-REBCMD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBCMX  DS    0C                                                               
*                                                                               
SYBBDD   DC    AL2(SYBBDDX-SYBBDD)                                              
         DC    AL2(L'REBDDTYP,REBDDTYP-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDACT,REBDDACT-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDDAT+L'REBDDTIM+1,REBDDDAT-REBDDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBDDREP,REBDDREP-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDCON,REBDDCON-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDLIN,REBDDLIN-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDCAT,REBDDCAT-REBDDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDDVAL,REBDDVAL-REBDDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDDPVL,REBDDPVL-REBDDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDDRTS,REBDDRTS-REBDDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDDDEL,REBDDDEL-REBDDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBDDX  DS    0C                                                               
*                                                                               
SYBBRD   DC    AL2(SYBBRDX-SYBBRD)                                              
         DC    AL2(L'REBRDTYP,REBRDTYP-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDACT,REBRDACT-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDDAT+L'REBRDTIM+1,REBRDDAT-REBRDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBRDREP,REBRDREP-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDCON,REBRDCON-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDLIN,REBRDLIN-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDCAT,REBRDCAT-REBRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBRDVAL,REBRDVAL-REBRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBRDPVL,REBRDPVL-REBRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBRDRTS,REBRDRTS-REBRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBRDDEL,REBRDDEL-REBRDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBRDX  DS    0C                                                               
*                                                                               
SYBBPT   DC    AL2(SYBBPTX-SYBBPT)                                              
         DC    AL2(L'REBPTTYP,REBPTTYP-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTACT,REBPTACT-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTDAT+L'REBPTTIM+1,REBPTDAT-REBPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBPTREP,REBPTREP-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTCON,REBPTCON-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTLIN,REBPTLIN-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTPT,REBPTPT-REBPTD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'REBPTNOT,REBPTNOT-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTFLG,REBPTFLG-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTRTS,REBPTRTS-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTDEL,REBPTDEL-REBPTD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBPTX  DS    0C                                                               
*                                                                               
SYBBPG   DC    AL2(SYBBPGX-SYBBPG)                                              
         DC    AL2(L'REBPGTYP,REBPGTYP-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGACT,REBPGACT-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGDAT+L'REBPGTIM+1,REBPGDAT-REBPGD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBPGREP,REBPGREP-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGCON,REBPGCON-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGLIN,REBPGLIN-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGPGN,REBPGPGN-REBPGD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPGRTS,REBPGRTS-REBPGD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPGDEL,REBPGDEL-REBPGD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBPGX  DS    0C                                                               
*                                                                               
SYBBBC   DC    AL2(SYBBBCX-SYBBBC)                                              
         DC    AL2(L'REBBCTYP,REBBCTYP-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCACT,REBBCACT-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCDAT+L'REBBCTIM+1,REBBCDAT-REBBCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBBCREP,REBBCREP-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCCON,REBBCCON-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCLIN,REBBCLIN-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCBCD,REBBCBCD-REBBCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBBCRTS,REBBCRTS-REBBCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBBCDEL,REBBCDEL-REBBCD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBBCX  DS    0C                                                               
*                                                                               
SYBBSB   DC    AL2(SYBBSBX-SYBBSB)                                              
         DC    AL2(L'REBSBTYP,REBSBTYP-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBACT,REBSBACT-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBDAT+L'REBSBTIM+1,REBSBDAT-REBSBD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBSBREP,REBSBREP-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBCON,REBSBCON-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBLIN,REBSBLIN-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBCMT,REBSBCMT-REBSBD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBSBRTS,REBSBRTS-REBSBD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBSBDEL,REBSBDEL-REBSBD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBSBX  DS    0C                                                               
*                                                                               
SYBBOC   DC    AL2(SYBBOCX-SYBBOC)                                              
         DC    AL2(L'REBOCTYP,REBOCTYP-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCACT,REBOCACT-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCDAT+L'REBOCTIM+1,REBOCDAT-REBOCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBOCREP,REBOCREP-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCCON,REBOCCON-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCLIN,REBOCLIN-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCROS,REBOCROS-REBOCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBOCCMT,REBOCCMT-REBOCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBOCRTS,REBOCRTS-REBOCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBOCDEL,REBOCDEL-REBOCD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
SYBBOCX  DS    0C                                                               
*                                                                               
         DS    0F                  ALIGNMENT                                    
*                                                                               
***********************************************************************         
* INDIVIDUAL RECORD CONVERSION ROUTINES FOR DB2                       *         
***********************************************************************         
         SPACE 1                                                                
DB2CON   DC    AL2(DB2CONX-DB2CON)                                              
         DC    AL2(L'RECONTYP,RECONTYP-RECOND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECONACT,RECONACT-RECOND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECONDAT+L'RECONTME+1,RECONDAT-RECOND)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECONMAS,RECONMAS-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONREP,RECONREP-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCON,RECONCON-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONSTA,RECONSTA-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONSAL,RECONSAL-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONOFF,RECONOFF-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONTEM,RECONTEM-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONADV,RECONADV-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONAGY,RECONAGY-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCTY,RECONCTY-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDEV,RECONDEV-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDSP,RECONDSP-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRC,RECONPRC-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRT,RECONPRT-RECOND),AL1(OPT,OPT,CHAR,0)              
**TEST   DC    AL2(L'RECONPRT,RECONPRT-RECOND),AL1(OPT,OPT,VCHAR,0)             
         DC    AL2(L'RECONDEM,RECONDEM-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONCLI,RECONCLI-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPRD,RECONPRD-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONEST,RECONEST-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONFLS,RECONFLS-RECOND),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RECONFLE,RECONFLE-RECOND),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RECONXRE,RECONXRE-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCTP,RECONCTP-RECOND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECONCRE,RECONCRE-RECOND),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RECONBLD,RECONBLD-RECOND),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RECONMOD,RECONMOD-RECOND),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RECONVER,RECONVER-RECOND),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RECONWIP,RECONWIP-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLSB,RECONLSB-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONSTT,RECONSTT-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDLS,RECONDLS-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONTRF,RECONTRF-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONOTP,RECONOTP-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONBYR,RECONBYR-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONSHR,RECONSHR-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONMBD,RECONMBD-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONSSG,RECONSSG-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONDLE,RECONDLE-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONPMG,RECONPMG-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLSF,RECONLSF-RECOND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECONLS$,RECONLS$-RECOND),AL1(OPT,OPT,INT,0)               
         DC    AL2(L'RECONEDT,RECONEDT-RECOND),AL1(REQ,OPT,EXTDATE,0)           
         DC    AL2(L'RECONETM,RECONETM-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONTAD,RECONTAD-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONSAD,RECONSAD-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONSED,RECONSED-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONTXT,RECONTXT-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONMON,RECONMON-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONPAD,RECONPAD-RECOND),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RECONPR2,RECONPR2-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONRTS,RECONRTS-RECOND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECONDEL,RECONDEL-RECOND),AL1(OPT,OPT,CHAR,0)              
DB2CONX  DS    0C                                                               
*                                                                               
*                                                                               
DB2DOL   DC    AL2(DB2DOLX-DB2DOL)                                              
         DC    AL2(L'REDOLTYP,REDOLTYP-REDOLD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDOLACT,REDOLACT-REDOLD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDOLDAT+L'REDOLTME+1,REDOLDAT-REDOLD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDOLREP,REDOLREP-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLCON,REDOLCON-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLFLG,REDOLFLG-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLBTP,REDOLBTP-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLBTX,REDOLBTX-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLMON,REDOLMON-REDOLD),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'REDOLACD,REDOLACD-REDOLD),AL1(REQ,REQ,EXTDATE,0)           
**TEST   DC    AL2(L'REDOLDOL,REDOLDOL-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLDOL,REDOLDOL-REDOLD),AL1(REQ,OPT,INT,0)               
**TEST   DC    AL2(L'REDOLADL,REDOLADL-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLADL,REDOLADL-REDOLD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REDOLXRE,REDOLXRE-REDOLD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDOLRTS,REDOLRTS-REDOLD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDOLDEL,REDOLDEL-REDOLD),AL1(OPT,OPT,CHAR,0)              
DB2DOLX  DS    0C                                                               
*                                                                               
*                                                                               
DB2AGY   DC    AL2(DB2AGYX-DB2AGY)                                              
         DC    AL2(L'REAGYTYP,REAGYTYP-REAGYD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REAGYACT,REAGYACT-REAGYD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REAGYDAT+L'REAGYTME+1,REAGYDAT-REAGYD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REAGYREP,REAGYREP-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYAGY,REAGYAGY-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYNAM,REAGYNAM-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYAD1,REAGYAD1-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYAD2,REAGYAD2-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYCTY,REAGYCTY-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYSTA,REAGYSTA-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYZIP,REAGYZIP-REAGYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REAGYPHO,REAGYPHO-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYCRR,REAGYCRR-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYLIA,REAGYLIA-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYFAX,REAGYFAX-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYTER,REAGYTER-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYICO,REAGYICO-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYDLU,REAGYDLU-REAGYD),AL1(REQ,OPT,EXTDATE,0)           
         DC    AL2(L'REAGYRTS,REAGYRTS-REAGYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REAGYDEL,REAGYDEL-REAGYD),AL1(OPT,OPT,CHAR,0)              
DB2AGYX  DS    0C                                                               
*                                                                               
*                                                                               
DB2ADV   DC    AL2(DB2ADVX-DB2ADV)                                              
         DC    AL2(L'READVTYP,READVTYP-READVD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'READVACT,READVACT-READVD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'READVDAT+L'READVTME+1,READVDAT-READVD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'READVREP,READVREP-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVADV,READVADV-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVNAM,READVNAM-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVCAT,READVCAT-READVD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'READVNET,READVNET-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVCTY,READVCTY-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA1,READVAA1-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA2,READVAA2-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAA3,READVAA3-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVCTA,READVCTA-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVAOF,READVAOF-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVRTS,READVRTS-READVD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'READVDEL,READVDEL-READVD),AL1(OPT,OPT,CHAR,0)              
DB2ADVX  DS    0C                                                               
*                                                                               
*                                                                               
DB2SAL   DC    AL2(DB2SALX-DB2SAL)                                              
         DC    AL2(L'RESALTYP,RESALTYP-RESALD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESALACT,RESALACT-RESALD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESALDAT+L'RESALTME+1,RESALDAT-RESALD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESALREP,RESALREP-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALSAL,RESALSAL-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALNAM,RESALNAM-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALOFF,RESALOFF-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALTEM,RESALTEM-RESALD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESALTEL,RESALTEL-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALFAX,RESALFAX-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALEML,RESALEML-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALLDT,RESALLDT-RESALD),AL1(REQ,OPT,EXTDATE,0)           
         DC    AL2(L'RESALRTS,RESALRTS-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALRTS,RESALRTS-RESALD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESALDEL,RESALDEL-RESALD),AL1(OPT,OPT,CHAR,0)              
DB2SALX  DS    0C                                                               
*                                                                               
*                                                                               
DB2DSP   DC    AL2(DB2DSPX-DB2DSP)                                              
         DC    AL2(L'REDSPTYP,REDSPTYP-REDSPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDSPACT,REDSPACT-REDSPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDSPDAT+L'REDSPTME+1,REDSPDAT-REDSPD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDSPREP,REDSPREP-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPSAL,REDSPSAL-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPNAM,REDSPNAM-REDSPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDSPTEL,REDSPTEL-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPFAX,REDSPFAX-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPLDT,REDSPLDT-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPRTS,REDSPRTS-REDSPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDSPDEL,REDSPDEL-REDSPD),AL1(OPT,OPT,CHAR,0)              
DB2DSPX  DS    0C                                                               
*                                                                               
*                                                                               
DB2CTY   DC    AL2(DB2CTYX-DB2CTY)                                              
         DC    AL2(L'RECTYTYP,RECTYTYP-RECTYD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECTYACT,RECTYACT-RECTYD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECTYDAT+L'RECTYTME+1,RECTYDAT-RECTYD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECTYREP,RECTYREP-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYCTY,RECTYCTY-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYNAM,RECTYNAM-RECTYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECTYCCM,RECTYCCM-RECTYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECTYRTS,RECTYRTS-RECTYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECTYDEL,RECTYDEL-RECTYD),AL1(OPT,OPT,CHAR,0)              
DB2CTYX  DS    0C                                                               
*                                                                               
*                                                                               
DB2DCT   DC    AL2(DB2DCTX-DB2DCT)                                              
         DC    AL2(L'REDCTTYP,REDCTTYP-REDCTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDCTACT,REDCTACT-REDCTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REDCTDAT+L'REDCTTME+1,REDCTDAT-REDCTD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDCTREP,REDCTREP-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTDCT,REDCTDCT-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTNAM,REDCTNAM-REDCTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDCTRTS,REDCTRTS-REDCTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDCTDEL,REDCTDEL-REDCTD),AL1(OPT,OPT,CHAR,0)              
DB2DCTX  DS    0C                                                               
*                                                                               
*                                                                               
DB2STA   DC    AL2(DB2STAX-DB2STA)                                              
         DC    AL2(L'RESTATYP,RESTATYP-RESTAD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTAACT,RESTAACT-RESTAD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTADAT+L'RESTATME+1,RESTADAT-RESTAD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTAREP,RESTAREP-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTASTA,RESTASTA-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTAGRP,RESTAGRP-RESTAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTAJDT,RESTAJDT-RESTAD),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RESTALDT,RESTALDT-RESTAD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RESTACDT,RESTACDT-RESTAD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RESTAMKT,RESTAMKT-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAAFF,RESTAAFF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAOWN,RESTAOWN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTACHN,RESTACHN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAINF,RESTAINF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAIDN,RESTAIDN-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTANEW,RESTANEW-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAFRM,RESTAFRM-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTATVB,RESTATVB-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTARNK,RESTARNK-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAMOU,RESTAMOU-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAURL,RESTAURL-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTATZ,RESTATZ-RESTAD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'RESTAFAX,RESTAFAX-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTALIA,RESTALIA-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAINV,RESTAINV-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTAEC,RESTAEC-RESTAD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'RESTATRF,RESTATRF-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASTT,RESTASTT-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADLU,RESTADLU-RESTAD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RESTACBY,RESTACBY-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTACLU,RESTACLU-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADCL,RESTADCL-RESTAD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RESTACCM,RESTACCM-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASC1,RESTASC1-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTASC2,RESTASC2-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTARTS,RESTARTS-RESTAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTADEL,RESTADEL-RESTAD),AL1(OPT,OPT,CHAR,0)              
DB2STAX  DS    0C                                                               
*                                                                               
*                                                                               
DB2GRP   DC    AL2(DB2GRPX-DB2GRP)                                              
         DC    AL2(L'REGRPTYP,REGRPTYP-REGRPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REGRPACT,REGRPACT-REGRPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REGRPDAT+L'REGRPTME+1,REGRPDAT-REGRPD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REGRPREP,REGRPREP-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPGRP,REGRPGRP-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPNAM,REGRPNAM-REGRPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REGRPSNM,REGRPSNM-REGRPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REGRPRTS,REGRPRTS-REGRPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REGRPDEL,REGRPDEL-REGRPD),AL1(OPT,OPT,CHAR,0)              
DB2GRPX  DS    0C                                                               
*                                                                               
*                                                                               
DB2TEM   DC    AL2(DB2TEMX-DB2TEM)                                              
         DC    AL2(L'RETEMTYP,RETEMTYP-RETEMD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RETEMACT,RETEMACT-RETEMD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RETEMDAT+L'RETEMTME+1,RETEMDAT-RETEMD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RETEMREP,RETEMREP-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMTEM,RETEMTEM-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMNAM,RETEMNAM-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMDIV,RETEMDIV-RETEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETEMRTS,RETEMRTS-RETEMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RETEMDEL,RETEMDEL-RETEMD),AL1(OPT,OPT,CHAR,0)              
DB2TEMX  DS    0C                                                               
*                                                                               
*                                                                               
DB2PRD   DC    AL2(DB2PRDX-DB2PRD)                                              
         DC    AL2(L'REPRDTYP,REPRDTYP-REPRDD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REPRDACT,REPRDACT-REPRDD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REPRDDAT+L'REPRDTME+1,REPRDDAT-REPRDD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPRDREP,REPRDREP-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDADV,REPRDADV-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDPRD,REPRDPRD-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDNAM,REPRDNAM-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDCAT,REPRDCAT-REPRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPRDPTP,REPRDPTP-REPRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPRDRTS,REPRDRTS-REPRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPRDDEL,REPRDDEL-REPRDD),AL1(OPT,OPT,CHAR,0)              
DB2PRDX  DS    0C                                                               
*                                                                               
*                                                                               
DB2CLS   DC    AL2(DB2CLSX-DB2CLS)                                              
         DC    AL2(L'RECLSTYP,RECLSTYP-RECLSD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECLSACT,RECLSACT-RECLSD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECLSDAT+L'RECLSTME+1,RECLSDAT-RECLSD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECLSREP,RECLSREP-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSCOD,RECLSCOD-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSNAM,RECLSNAM-RECLSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECLSRTS,RECLSRTS-RECLSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECLSDEL,RECLSDEL-RECLSD),AL1(OPT,OPT,CHAR,0)              
DB2CLSX  DS    0C                                                               
*                                                                               
*                                                                               
DB2CAT   DC    AL2(DB2CATX-DB2CAT)                                              
         DC    AL2(L'RECATTYP,RECATTYP-RECATD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECATACT,RECATACT-RECATD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RECATDAT+L'RECATTME+1,RECATDAT-RECATD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECATREP,RECATREP-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATCOD,RECATCOD-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATNAM,RECATNAM-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATCLS,RECATCLS-RECATD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECATRTS,RECATRTS-RECATD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECATDEL,RECATDEL-RECATD),AL1(OPT,OPT,CHAR,0)              
DB2CATX  DS    0C                                                               
*                                                                               
*                                                                               
DB2OFF   DC    AL2(DB2OFFX-DB2OFF)                                              
         DC    AL2(L'REOFFTYP,REOFFTYP-REOFFD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REOFFACT,REOFFACT-REOFFD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REOFFDAT+L'REOFFTME+1,REOFFDAT-REOFFD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOFFREP,REOFFREP-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFCOD,REOFFCOD-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFNAM,REOFFNAM-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFREG,REOFFREG-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFAD1,REOFFAD1-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFAD2,REOFFAD2-REOFFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFFSTT,REOFFSTT-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFZIP,REOFFZIP-REOFFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFFFAX,REOFFFAX-REOFFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFFNL,REOFFNL-REOFFD),AL1(REQ,OPT,CHAR,0)                
         DC    AL2(L'REOFFRTS,REOFFRTS-REOFFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFFDEL,REOFFDEL-REOFFD),AL1(OPT,OPT,CHAR,0)              
DB2OFFX  DS    0C                                                               
*                                                                               
*                                                                               
DB2OWN   DC    AL2(DB2OWNX-DB2OWN)                                              
         DC    AL2(L'REOWNTYP,REOWNTYP-REOWND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REOWNACT,REOWNACT-REOWND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REOWNDAT+L'REOWNTME+1,REOWNDAT-REOWND)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOWNREP,REOWNREP-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNCOD,REOWNCOD-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNNAM,REOWNNAM-REOWND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOWNRTS,REOWNRTS-REOWND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOWNDEL,REOWNDEL-REOWND),AL1(OPT,OPT,CHAR,0)              
DB2OWNX  DS    0C                                                               
*                                                                               
*                                                                               
DB2MKT   DC    AL2(DB2MKTX-DB2MKT)                                              
         DC    AL2(L'REMKTTYP,REMKTTYP-REMKTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REMKTACT,REMKTACT-REMKTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REMKTDAT+L'REMKTTME+1,REMKTDAT-REMKTD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REMKTREP,REMKTREP-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTCOD,REMKTCOD-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTNAM,REMKTNAM-REMKTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMKTRTS,REMKTRTS-REMKTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REMKTDEL,REMKTDEL-REMKTD),AL1(OPT,OPT,CHAR,0)              
DB2MKTX  DS    0C                                                               
*                                                                               
*                                                                               
DB2MST   DC    AL2(DB2MSTX-DB2MST)                                              
         DC    AL2(L'REMSTTYP,REMSTTYP-REMSTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REMSTACT,REMSTACT-REMSTD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REMSTDAT+L'REMSTTME+1,REMSTDAT-REMSTD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REMSTSUB,REMSTSUB-REMSTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMSTMST,REMSTMST-REMSTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REMSTRTS,REMSTRTS-REMSTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REMSTDEL,REMSTDEL-REMSTD),AL1(OPT,OPT,CHAR,0)              
DB2MSTX  DS    0C                                                               
*                                                                               
*                                                                               
DB2REP   DC    AL2(DB2REPX-DB2REP)                                              
         DC    AL2(L'REREPTYP,REREPTYP-REREPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REREPACT,REREPACT-REREPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REREPDAT+L'REREPTME+1,REREPDAT-REREPD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REREPSUB,REREPSUB-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPMAS,REREPMAS-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPNAM,REREPNAM-REREPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REREPRTS,REREPRTS-REREPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REREPDEL,REREPDEL-REREPD),AL1(OPT,OPT,CHAR,0)              
DB2REPX  DS    0C                                                               
*                                                                               
*                                                                               
DB2BD1   DC    AL2(DB2BD1X-DB2BD1)                                              
         DC    AL2(L'REBD1TYP,REBD1TYP-REBD1D),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REBD1ACT,REBD1ACT-REBD1D),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REBD1DAT+L'REBD1TME+1,REBD1DAT-REBD1D)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBD1REP,REBD1REP-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1RTP,REBD1RTP-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1STA,REBD1STA-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1OFF,REBD1OFF-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1BYR,REBD1BYR-REBD1D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD1MOS,REBD1MOS-REBD1D),AL1(REQ,OPT,EXTDATE,0)           
         DC    AL2(L'REBD1BUD,REBD1BUD-REBD1D),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REBD1RTS,REBD1RTS-REBD1D),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBD1DEL,REBD1DEL-REBD1D),AL1(OPT,OPT,CHAR,0)              
DB2BD1X  DS    0C                                                               
*                                                                               
*                                                                               
DB2BD2   DC    AL2(DB2BD2X-DB2BD2)                                              
         DC    AL2(L'REBD2TYP,REBD2TYP-REBD2D),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REBD2ACT,REBD2ACT-REBD2D),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REBD2DAT+L'REBD2TME+1,REBD2DAT-REBD2D)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBD2REP,REBD2REP-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2OFF,REBD2OFF-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2TEM,REBD2TEM-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2GSG,REBD2GSG-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2BYR,REBD2BYR-REBD2D),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBD2MOS,REBD2MOS-REBD2D),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'REBD2BUD,REBD2BUD-REBD2D),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REBD2RTS,REBD2RTS-REBD2D),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBD2DEL,REBD2DEL-REBD2D),AL1(OPT,OPT,CHAR,0)              
DB2BD2X  DS    0C                                                               
*                                                                               
*                                                                               
DB2PTP   DC    AL2(DB2PTPX-DB2PTP)                                              
         DC    AL2(L'REPTPTYP,REPTPTYP-REPTPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REPTPACT,REPTPACT-REPTPD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'REPTPDAT+L'REPTPTME+1,REPTPDAT-REPTPD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPTPREP,REPTPREP-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPPTP,REPTPPTP-REPTPD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPTPNAM,REPTPNAM-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPOFF,REPTPOFF-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPTEL,REPTPTEL-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPFAX,REPTPFAX-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPEML,REPTPEML-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPSPR,REPTPSPR-REPTPD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPTPRTS,REPTPRTS-REPTPD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPTPDEL,REPTPDEL-REPTPD),AL1(OPT,OPT,CHAR,0)              
DB2PTPX  DS    0C                                                               
*                                                                               
***SET HEADER                                                                   
*                                                                               
DB2STN   DC    AL2(DB2STNX-DB2STN)                                              
         DC    AL2(L'RESTNTYP,RESTNTYP-RESTND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTNACT,RESTNACT-RESTND),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTNDAT+L'RESTNTME+1,RESTNDAT-RESTND)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTNREP,RESTNREP-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSTY,RESTNSTY-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSNM,RESTNSNM-RESTND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTNSFL,RESTNSFL-RESTND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESTNSDS,RESTNSDS-RESTND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTNRTS,RESTNRTS-RESTND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTNDEL,RESTNDEL-RESTND),AL1(OPT,OPT,CHAR,0)              
DB2STNX  DS    0C                                                               
*                                                                               
***SET HEADER                                                                   
***SET DETAIL                                                                   
*                                                                               
DB2STC   DC    AL2(DB2STCX-DB2STC)                                              
         DC    AL2(L'RESTCTYP,RESTCTYP-RESTCD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTCACT,RESTCACT-RESTCD),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESTCDAT+L'RESTCTME+1,RESTCDAT-RESTCD)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESTCREP,RESTCREP-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSTY,RESTCSTY-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSNM,RESTCSNM-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCSCD,RESTCSCD-RESTCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESTCCTR,RESTCCTR-RESTCD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESTCRTS,RESTCRTS-RESTCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESTCDEL,RESTCDEL-RESTCD),AL1(OPT,OPT,CHAR,0)              
DB2STCX  DS    0C                                                               
*                                                                               
***SET DETAIL                                                                   
***SWI DETAIL                                                                   
*                                                                               
DB2SWI   DC    AL2(DB2SWIX-DB2SWI)                                              
         DC    AL2(L'RESWITYP,RESWITYP-RESWID),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESWIACT,RESWIACT-RESWID),AL1(REQ,REQ,CHAR,0)              
***      DC    AL2(L'RESWIDAT+L'RESWITME+1,RESWIDAT-RESWID)                     
***      DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESWIREP,RESWIREP-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWISDT,RESWISDT-RESWID),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RESWISTY,RESWISTY-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIOLD,RESWIOLD-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWISEQ,RESWISEQ-RESWID),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESWINEW,RESWINEW-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIIT1,RESWIIT1-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIC1,RESWIIC1-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIT2,RESWIIT2-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIIC2,RESWIIC2-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIDDS,RESWIDDS-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIDTS,RESWIDTS-RESWID),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'RESWIDTW,RESWIDTW-RESWID),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWIRTS,RESWIRTS-RESWID),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWIDEL,RESWIDEL-RESWID),AL1(OPT,OPT,CHAR,0)              
DB2SWIX  DS    0C                                                               
*                                                                               
***SWF DETAIL                                                                   
*                                                                               
DB2SWF   DC    AL2(DB2SWFX-DB2SWF)                                              
         DC    AL2(L'RESWFTYP,RESWFTYP-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFACT,RESWFACT-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFDAT+L'RESWFTME+1,RESWFDAT-RESWFD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESWFREP,RESWFREP-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFSDT,RESWFSDT-RESWFD),AL1(REQ,REQ,EXTDATE,0)           
         DC    AL2(L'RESWFSTY,RESWFSTY-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFOLD,RESWFOLD-RESWFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESWFSEQ,RESWFSEQ-RESWFD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESWFF1T,RESWFF1T-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFF1C,RESWFF1C-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFRTS,RESWFRTS-RESWFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESWFDEL,RESWFDEL-RESWFD),AL1(OPT,OPT,CHAR,0)              
DB2SWFX  DS    0C                                                               
*                                                                               
*                                                                               
DB2CPT   DC    AL2(DB2CPTX-DB2CPT)                                              
         DC    AL2(L'RECPTTYP,RECPTTYP-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTACT,RECPTACT-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTDAT+L'RECPTTME+1,RECPTDAT-RECPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECPTREP,RECPTREP-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTCON,RECPTCON-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTSTA,RECPTSTA-RECPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECPTPCT,RECPTPCT-RECPTD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RECPTRTS,RECPTRTS-RECPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECPTDEL,RECPTDEL-RECPTD),AL1(OPT,OPT,CHAR,0)              
DB2CPTX  DS    0C                                                               
*                                                                               
DB2DPT   DC    AL2(DB2DPTX-DB2DPT)                                              
         DC    AL2(L'REDPTTYP,REDPTTYP-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTACT,REDPTACT-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTDAT+L'REDPTTME+1,REDPTDAT-REDPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDPTREP,REDPTREP-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTCON,REDPTCON-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTDPT,REDPTDPT-REDPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDPTCPP,REDPTCPP-REDPTD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REDPTRTS,REDPTRTS-REDPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDPTDEL,REDPTDEL-REDPTD),AL1(OPT,OPT,CHAR,0)              
DB2DPTX  DS    0C                                                               
*                                                                               
*                                                                               
DB2LEN   DC    AL2(DB2LENX-DB2LEN)                                              
         DC    AL2(L'RELENTYP,RELENTYP-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENACT,RELENACT-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENDAT+L'RELENTME+1,RELENDAT-RELEND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RELENREP,RELENREP-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENCON,RELENCON-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENCTR,RELENCTR-RELEND),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RELENLTH,RELENLTH-RELEND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RELENRTS,RELENRTS-RELEND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RELENDEL,RELENDEL-RELEND),AL1(OPT,OPT,CHAR,0)              
DB2LENX  DS    0C                                                               
*                                                                               
*                                                                               
DB2BKS   DC    AL2(DB2BKSX-DB2BKS)                                              
         DC    AL2(L'REBKSTYP,REBKSTYP-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSACT,REBKSACT-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSDAT+L'REBKSTME+1,REBKSDAT-REBKSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBKSREP,REBKSREP-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSCON,REBKSCON-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSCTR,REBKSCTR-REBKSD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REBKSBOK,REBKSBOK-REBKSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBKSRTS,REBKSRTS-REBKSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBKSDEL,REBKSDEL-REBKSD),AL1(OPT,OPT,CHAR,0)              
DB2BKSX  DS    0C                                                               
*                                                                               
DB2PID   DC    AL2(DB2PIDX-DB2PID)                                              
         DC    AL2(L'REPIDTYP,REPIDTYP-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDACT,REPIDACT-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDDAT+L'REPIDTME+1,REPIDDAT-REPIDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPIDREP,REPIDREP-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDSTA,REPIDSTA-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDPID,REPIDPID-REPIDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPIDRTS,REPIDRTS-REPIDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPIDDEL,REPIDDEL-REPIDD),AL1(OPT,OPT,CHAR,0)              
DB2PIDX  DS    0C                                                               
DB2SOF   DC    AL2(DB2SOFX-DB2SOF)                                              
         DC    AL2(L'RESOFTYP,RESOFTYP-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFACT,RESOFACT-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFDAT+L'RESOFTME+1,RESOFDAT-RESOFD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESOFREP,RESOFREP-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFSTA,RESOFSTA-RESOFD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESOFOFF,RESOFOFF-RESOFD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESOFRTS,RESOFRTS-RESOFD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESOFDEL,RESOFDEL-RESOFD),AL1(OPT,OPT,CHAR,0)              
DB2SOFX  DS    0C                                                               
*                                                                               
DB2CCO   DC    AL2(DB2CCOX-DB2CCO)                                              
         DC    AL2(L'RECCOTYP,RECCOTYP-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCOACT,RECCOACT-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCODAT+L'RECCOTME+1,RECCODAT-RECCOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECCOREP,RECCOREP-RECCOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECCOCON,RECCOCON-RECCOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECCORTS,RECCORTS-RECCOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECCODEL,RECCODEL-RECCOD),AL1(OPT,OPT,CHAR,0)              
DB2CCOX  DS    0C                                                               
*                                                                               
DB2PFC   DC    AL2(DB2PFCX-DB2PFC)                                              
         DC    AL2(L'REPFCTYP,REPFCTYP-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCACT,REPFCACT-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCDAT+L'REPFCTME+1,REPFCDAT-REPFCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REPFCREP,REPFCREP-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCCON,REPFCCON-REPFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REPFCCO#,REPFCCO#-REPFCD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REPFCLIN,REPFCLIN-REPFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REPFCRTS,REPFCRTS-REPFCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REPFCDEL,REPFCDEL-REPFCD),AL1(OPT,OPT,CHAR,0)              
DB2PFCX  DS    0C                                                               
*                                                                               
DB2SEM   DC    AL2(DB2SEMX-DB2SEM)                                              
         DC    AL2(L'RESEMTYP,RESEMTYP-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMACT,RESEMACT-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMDAT+L'RESEMTME+1,RESEMDAT-RESEMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESEMREP,RESEMREP-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMSTA,RESEMSTA-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMEM#,RESEMEM#-RESEMD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'RESEMEML,RESEMEML-RESEMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESEMRTS,RESEMRTS-RESEMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESEMDEL,RESEMDEL-RESEMD),AL1(OPT,OPT,CHAR,0)              
DB2SEMX  DS    0C                                                               
*                                                                               
DB2CMS   DC    AL2(DB2CMSX-DB2CMS)                                              
         DC    AL2(L'RECMSTYP,RECMSTYP-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSACT,RECMSACT-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSDAT+L'RECMSTME+1,RECMSDAT-RECMSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RECMSREP,RECMSREP-RECMSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RECMSRST,RECMSRST-RECMSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECMSCST,RECMSCST-RECMSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECMSAFF,RECMSAFF-RECMSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RECMSRTS,RECMSRTS-RECMSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RECMSDEL,RECMSDEL-RECMSD),AL1(OPT,OPT,CHAR,0)              
DB2CMSX  DS    0C                                                               
*                                                                               
DB2OTM   DC    AL2(DB2OTMX-DB2OTM)                                              
         DC    AL2(L'REOTMTYP,REOTMTYP-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMACT,REOTMACT-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMDAT+L'REOTMTME+1,REOTMDAT-REOTMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOTMREP,REOTMREP-REOTMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOTMRST,REOTMRST-REOTMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOTMCOF,REOTMCOF-REOTMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOTMATM,REOTMATM-REOTMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOTMRTS,REOTMRTS-REOTMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOTMDEL,REOTMDEL-REOTMD),AL1(OPT,OPT,CHAR,0)              
DB2OTMX  DS    0C                                                               
*                                                                               
DB2RGN   DC    AL2(DB2RGNX-DB2RGN)                                              
         DC    AL2(L'RERGNTYP,RERGNTYP-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNACT,RERGNACT-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNDAT+L'RERGNTME+1,RERGNDAT-RERGND)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RERGNREP,RERGNREP-RERGND),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RERGNREG,RERGNREG-RERGND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RERGNNAM,RERGNNAM-RERGND),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RERGNRTS,RERGNRTS-RERGND),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RERGNDEL,RERGNDEL-RERGND),AL1(OPT,OPT,CHAR,0)              
DB2RGNX  DS    0C                                                               
*                                                                               
DB2TER   DC    AL2(DB2TERX-DB2TER)                                              
         DC    AL2(L'RETERTYP,RETERTYP-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERACT,RETERACT-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERDAT+L'RETERTME+1,RETERDAT-RETERD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RETERREP,RETERREP-RETERD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RETERTER,RETERTER-RETERD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETERNAM,RETERNAM-RETERD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RETERRTS,RETERRTS-RETERD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RETERDEL,RETERDEL-RETERD),AL1(OPT,OPT,CHAR,0)              
DB2TERX  DS    0C                                                               
*                                                                               
DB2SCM   DC    AL2(DB2SCMX-DB2SCM)                                              
         DC    AL2(L'RESCMTYP,RESCMTYP-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMACT,RESCMACT-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMDAT+L'RESCMTME+1,RESCMDAT-RESCMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESCMREP,RESCMREP-RESCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESCMCOD,RESCMCOD-RESCMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESCMCO#,RESCMCO#-RESCMD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RESCMLIN,RESCMLIN-RESCMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESCMRTS,RESCMRTS-RESCMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESCMDEL,RESCMDEL-RESCMD),AL1(OPT,OPT,CHAR,0)              
DB2SCMX  DS    0C                                                               
*                                                                               
DB2OFC   DC    AL2(DB2OFCX-DB2OFC)                                              
         DC    AL2(L'REOFCTYP,REOFCTYP-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCACT,REOFCACT-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCDAT+L'REOFCTME+1,REOFCDAT-REOFCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REOFCREP,REOFCREP-REOFCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REOFCCOO,REOFCCOO-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCCOD,REOFCCOD-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCCO#,REOFCCO#-REOFCD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REOFCLIN,REOFCLIN-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCDES,REOFCDES-REOFCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REOFCRTS,REOFCRTS-REOFCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REOFCDEL,REOFCDEL-REOFCD),AL1(OPT,OPT,CHAR,0)              
DB2OFCX  DS    0C                                                               
*                                                                               
DB2DAO   DC    AL2(DB2DAOX-DB2DAO)                                              
         DC    AL2(L'REDAOTYP,REDAOTYP-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAOACT,REDAOACT-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAODAT+L'REDAOTME+1,REDAODAT-REDAOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REDAOREP,REDAOREP-REDAOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REDAOAGY,REDAOAGY-REDAOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REDAOAGO,REDAOAGO-REDAOD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REDAOCTR,REDAOCTR-REDAOD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REDAORTS,REDAORTS-REDAOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REDAODEL,REDAODEL-REDAOD),AL1(OPT,OPT,CHAR,0)              
DB2DAOX  DS    0C                                                               
*                                                                               
DB2ACO   DC    AL2(DB2ACOX-DB2ACO)                                              
         DC    AL2(L'REACOTYP,REACOTYP-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACOACT,REACOACT-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACODAT+L'REACOTME+1,REACODAT-REACOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REACOREP,REACOREP-REACOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REACOAGY,REACOAGY-REACOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REACOCOM,REACOCOM-REACOD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'REACOCTR,REACOCTR-REACOD),AL1(REQ,REQ,INT,0)               
         DC    AL2(L'REACORTS,REACORTS-REACOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REACODEL,REACODEL-REACOD),AL1(OPT,OPT,CHAR,0)              
DB2ACOX  DS    0C                                                               
*                                                                               
DB2EAG   DC    AL2(DB2EAGX-DB2EAG)                                              
         DC    AL2(L'REEPATYP,REEPATYP-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPAACT,REEPAACT-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPADAT+L'REEPATME+1,REEPADAT-REEPAD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPAREP,REEPAREP-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPATRF,REEPATRF-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPASTA,REEPASTA-REEPAD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPAAGY,REEPAAGY-REEPAD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPAEAG,REEPAEAG-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPASTT,REEPASTT-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPATOF,REEPATOF-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPARTS,REEPARTS-REEPAD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPADEL,REEPADEL-REEPAD),AL1(OPT,OPT,CHAR,0)              
DB2EAGX  DS    0C                                                               
*                                                                               
DB2EAD   DC    AL2(DB2EADX-DB2EAD)                                              
         DC    AL2(L'REEPDTYP,REEPDTYP-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDACT,REEPDACT-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDDAT+L'REEPDTME+1,REEPDDAT-REEPDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPDREP,REEPDREP-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDTRF,REEPDTRF-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDSTA,REEPDSTA-REEPDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPDADV,REEPDADV-REEPDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPDEAD,REEPDEAD-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDSTT,REEPDSTT-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDRTS,REEPDRTS-REEPDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPDDEL,REEPDDEL-REEPDD),AL1(OPT,OPT,CHAR,0)              
DB2EADX  DS    0C                                                               
*                                                                               
DB2EOF   DC    AL2(DB2EOFX-DB2EOF)                                              
         DC    AL2(L'REEPOTYP,REEPOTYP-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOACT,REEPOACT-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPODAT+L'REEPOTME+1,REEPODAT-REEPOD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPOREP,REEPOREP-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOTRF,REEPOTRF-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOSTA,REEPOSTA-REEPOD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPOOFF,REEPOOFF-REEPOD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPOEOF,REEPOEOF-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPOSTT,REEPOSTT-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPORTS,REEPORTS-REEPOD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPODEL,REEPODEL-REEPOD),AL1(OPT,OPT,CHAR,0)              
DB2EOFX  DS    0C                                                               
*                                                                               
DB2ESP   DC    AL2(DB2ESPX-DB2ESP)                                              
         DC    AL2(L'REEPSTYP,REEPSTYP-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSACT,REEPSACT-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSDAT+L'REEPSTME+1,REEPSDAT-REEPSD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REEPSREP,REEPSREP-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSTRF,REEPSTRF-REEPSD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REEPSSTA,REEPSSTA-REEPSD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REEPSSP,REEPSSP-REEPSD),AL1(REQ,REQ,CHAR,0)                
         DC    AL2(L'REEPSESP,REEPSESP-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSSTT,REEPSSTT-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSRTS,REEPSRTS-REEPSD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REEPSDEL,REEPSDEL-REEPSD),AL1(OPT,OPT,CHAR,0)              
DB2ESPX  DS    0C                                                               
*                                                                               
DB2SPC   DC    AL2(DB2SPCX-DB2SPC)                                              
         DC    AL2(L'RESPCTYP,RESPCTYP-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCACT,RESPCACT-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCDAT+L'RESPCTME+1,RESPCDAT-RESPCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'RESPCREP,RESPCREP-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCCON,RESPCCON-RESPCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'RESPCCO#,RESPCCO#-RESPCD),AL1(REQ,OPT,INT,0)               
         DC    AL2(L'RESPCLIN,RESPCLIN-RESPCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'RESPCRTS,RESPCRTS-RESPCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'RESPCDEL,RESPCDEL-RESPCD),AL1(OPT,OPT,CHAR,0)              
DB2SPCX  DS    0C                                                               
*                                                                               
*                                                                               
DB2BCD   DC    AL2(DB2BCDX-DB2BCD)                                              
         DC    AL2(L'REBCDTYP,REBCDTYP-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDACT,REBCDACT-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDDAT+L'REBCDTME+1,REBCDDAT-REBCDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBCDREP,REBCDREP-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDRTY,REBCDRTY-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDCOD,REBCDCOD-REBCDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCDDES,REBCDDES-REBCDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY1,REBCDTY1-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY2,REBCDTY2-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDTY3,REBCDTY3-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDDTE,REBCDDTE-REBCDD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'REBCDDTC,REBCDDTC-REBCDD),AL1(OPT,OPT,EXTDATE,0)           
         DC    AL2(L'REBCDLUI,REBCDLUI-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDRTS,REBCDRTS-REBCDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCDDEL,REBCDDEL-REBCDD),AL1(OPT,OPT,CHAR,0)              
DB2BCDX  DS    0C                                                               
*                                                                               
*                                                                               
DB2BYH   DC    AL2(DB2BYHX-DB2BYH)                                              
         DC    AL2(L'REBUYTYP,REBUYTYP-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYACT,REBUYACT-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYDAT+L'REBUYTIM+1,REBUYDAT-REBUYD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBUYREP,REBUYREP-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYCON,REBUYCON-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYPLN,REBUYPLN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYMLN,REBUYMLN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYLIN,REBUYLIN-REBUYD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBUYNW,REBUYNW-REBUYD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'REBUYCOS,REBUYCOS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCLS,REBUYCLS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSEC,REBUYSEC-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCRE,REBUYCRE-REBUYD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBUYCRD,REBUYCRD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYLCD,REBUYLCD-REBUYD),AL1(OPT,OPT,SMALLDTE,0)          
         DC    AL2(L'REBUYKMD,REBUYKMD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYCHI,REBUYCHI-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYTSP,REBUYTSP-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYTCS,REBUYTCS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYWKD,REBUYWKD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTD,REBUYSTD-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYEND,REBUYEND-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDUR,REBUYDUR-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYMFG,REBUYMFG-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSPT,REBUYSPT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTY,REBUYSTY-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYFLT,REBUYFLT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYVER,REBUYVER-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYPTP,REBUYPTP-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDPT,REBUYDPT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYSTT,REBUYSTT-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYAGN,REBUYAGN-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYST2,REBUYST2-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYRTS,REBUYRTS-REBUYD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBUYDEL,REBUYDEL-REBUYD),AL1(OPT,OPT,CHAR,0)              
DB2BYHX  DS    0C                                                               
*                                                                               
DB2BDT   DC    AL2(DB2BDTX-DB2BDT)                                              
         DC    AL2(L'REBDTTYP,REBDTTYP-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTACT,REBDTACT-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTDAT+L'REBDTTIM+1,REBDTDAT-REBDTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBDTREP,REBDTREP-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTCON,REBDTCON-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTLIN,REBDTLIN-REBDTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDTSTR,REBDTSTR-REBDTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDTEND,REBDTEND-REBDTD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDTDYS,REBDTDYS-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTTM1,REBDTTM1-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTTM2,REBDTTM2-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTSSB,REBDTSSB-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTWTF,REBDTWTF-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTRTS,REBDTRTS-REBDTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDTDEL,REBDTDEL-REBDTD),AL1(OPT,OPT,CHAR,0)              
DB2BDTX  DS    0C                                                               
*                                                                               
DB2BED   DC    AL2(DB2BEDX-DB2BED)                                              
         DC    AL2(L'REBEDTYP,REBEDTYP-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDACT,REBEDACT-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDDAT+L'REBEDTIM+1,REBEDDAT-REBEDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBEDREP,REBEDREP-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDCON,REBEDCON-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDLIN,REBEDLIN-REBEDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBEDSTR,REBEDSTR-REBEDD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REBEDEND,REBEDEND-REBEDD),AL1(REQ,OPT,SMALLDTE,0)          
         DC    AL2(L'REBEDALT,REBEDALT-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNPO,REBEDNPO-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNPW,REBEDNPW-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDNOW,REBEDNOW-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDRTS,REBEDRTS-REBEDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBEDDEL,REBEDDEL-REBEDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BEDX  DS    0C                                                               
*                                                                               
DB2BCM   DC    AL2(DB2BCMX-DB2BCM)                                              
         DC    AL2(L'REBCMTYP,REBCMTYP-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMACT,REBCMACT-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMDAT+L'REBCMTIM+1,REBCMDAT-REBCMD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBCMREP,REBCMREP-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMCON,REBCMCON-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMLIN,REBCMLIN-REBCMD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBCMCMT,REBCMCMT-REBCMD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBCMRTS,REBCMRTS-REBCMD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBCMDEL,REBCMDEL-REBCMD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BCMX  DS    0C                                                               
*                                                                               
DB2BDD   DC    AL2(DB2BDDX-DB2BDD)                                              
         DC    AL2(L'REBDDTYP,REBDDTYP-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDACT,REBDDACT-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDDAT+L'REBDDTIM+1,REBDDDAT-REBDDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBDDREP,REBDDREP-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDCON,REBDDCON-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDLIN,REBDDLIN-REBDDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBDDCAT,REBDDCAT-REBDDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDDVAL,REBDDVAL-REBDDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBDDPVL,REBDDPVL-REBDDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDDRTS,REBDDRTS-REBDDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBDDDEL,REBDDDEL-REBDDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BDDX  DS    0C                                                               
*                                                                               
DB2BRD   DC    AL2(DB2BRDX-DB2BRD)                                              
         DC    AL2(L'REBRDTYP,REBRDTYP-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDACT,REBRDACT-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDDAT+L'REBRDTIM+1,REBRDDAT-REBRDD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBRDREP,REBRDREP-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDCON,REBRDCON-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDLIN,REBRDLIN-REBRDD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBRDCAT,REBRDCAT-REBRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBRDVAL,REBRDVAL-REBRDD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBRDPVL,REBRDPVL-REBRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBRDRTS,REBRDRTS-REBRDD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBRDDEL,REBRDDEL-REBRDD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BRDX  DS    0C                                                               
*                                                                               
DB2BPT   DC    AL2(DB2BPTX-DB2BPT)                                              
         DC    AL2(L'REBPTTYP,REBPTTYP-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTACT,REBPTACT-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTDAT+L'REBPTTIM+1,REBPTDAT-REBPTD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBPTREP,REBPTREP-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTCON,REBPTCON-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTLIN,REBPTLIN-REBPTD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPTPT,REBPTPT-REBPTD),AL1(OPT,OPT,CHAR,0)                
         DC    AL2(L'REBPTNOT,REBPTNOT-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTFLG,REBPTFLG-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTRTS,REBPTRTS-REBPTD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPTDEL,REBPTDEL-REBPTD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BPTX  DS    0C                                                               
*                                                                               
DB2BPG   DC    AL2(DB2BPGX-DB2BPG)                                              
         DC    AL2(L'REBPGTYP,REBPGTYP-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGACT,REBPGACT-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGDAT+L'REBPGTIM+1,REBPGDAT-REBPGD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBPGREP,REBPGREP-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGCON,REBPGCON-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGLIN,REBPGLIN-REBPGD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBPGPGN,REBPGPGN-REBPGD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPGRTS,REBPGRTS-REBPGD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBPGDEL,REBPGDEL-REBPGD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BPGX  DS    0C                                                               
*                                                                               
DB2BBC   DC    AL2(DB2BBCX-DB2BBC)                                              
         DC    AL2(L'REBBCTYP,REBBCTYP-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCACT,REBBCACT-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCDAT+L'REBBCTIM+1,REBBCDAT-REBBCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBBCREP,REBBCREP-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCCON,REBBCCON-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCLIN,REBBCLIN-REBBCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBBCBCD,REBBCBCD-REBBCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBBCRTS,REBBCRTS-REBBCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBBCDEL,REBBCDEL-REBBCD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BBCX  DS    0C                                                               
*                                                                               
DB2BSB   DC    AL2(DB2BSBX-DB2BSB)                                              
         DC    AL2(L'REBSBTYP,REBSBTYP-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBACT,REBSBACT-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBDAT+L'REBSBTIM+1,REBSBDAT-REBSBD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBSBREP,REBSBREP-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBCON,REBSBCON-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBLIN,REBSBLIN-REBSBD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBSBCMT,REBSBCMT-REBSBD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBSBRTS,REBSBRTS-REBSBD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBSBDEL,REBSBDEL-REBSBD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BSBX  DS    0C                                                               
*                                                                               
DB2BOC   DC    AL2(DB2BOCX-DB2BOC)                                              
         DC    AL2(L'REBOCTYP,REBOCTYP-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCACT,REBOCACT-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCDAT+L'REBOCTIM+1,REBOCDAT-REBOCD)                     
         DC    AL1(REQ,REQ,DATETIME,0)                                          
         DC    AL2(L'REBOCREP,REBOCREP-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCCON,REBOCCON-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCLIN,REBOCLIN-REBOCD),AL1(REQ,REQ,CHAR,0)              
         DC    AL2(L'REBOCROS,REBOCROS-REBOCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBOCCMT,REBOCCMT-REBOCD),AL1(REQ,OPT,CHAR,0)              
         DC    AL2(L'REBOCRTS,REBOCRTS-REBOCD),AL1(OPT,OPT,CHAR,0)              
         DC    AL2(L'REBOCDEL,REBOCDEL-REBOCD),AL1(OPT,OPT,CHAR,0)              
*                                                                               
DB2BOCX  DS    0C                                                               
*                                                                               
         DS    0F                  ALIGNMENT                                    
*                                                                               
*ANNER   DC    C'BILL UHR: R. MARTINEZ VERSION   '                              
*        DC    C'BILL UHR: 2/7/07: BUYCODE VERSION'                             
BANNER   DC    C'SONNY KUI: 9/8/07: BUY RECORD VERSION'                         
         DS    0F                                                               
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE AND OTHER DSECTS                                    *         
***********************************************************************         
         SPACE 1                                                                
WORKD    DSECT                                                                  
DUB      DS    D                                                                
DMCB     DS    6F                                                               
APARM    DS    A                   A(PARAMETER LIST)                            
ANOW     DS    A                   CURRENT ADDRESS REACHED IN SQL BUFF          
*                                                                               
PLATINFO DS    XL(PLATTABL)        CURRENT PLATFORM RECORD                      
*                                                                               
WORK     DS    CL256                                                            
*                                                                               
PARM     DS    0XL16               PARAMETER LIST                               
MODE     DS    XL1                                                              
AEXTRACT DS    XL3                                                              
PLATFORM DS    XL1                                                              
ASQLBUFF DS    XL3                                                              
ALLOUT   DS    XL1                                                              
ARECTYPE DS    XL3                                                              
AVERSION DS    XL4                                                              
*                                                                               
VERSION  DS    XL1                                                              
OPTIONAL DS    XL1                                                              
SIGNFLAG DS    XL1                                                              
OUTPUTL  DS    XL1                                                              
SEPARATE DS    XL1                                                              
LOADMODE DS    XL1                                                              
KILLMODE DS    XL1                                                              
*                                                                               
WORKL    EQU   *-WORKD                                                          
         EJECT                                                                  
*                                                                               
PLATTABD DSECT                    COVERS PLATTAB - PLATFORM SETTINGS            
PLATTYPE DS    XL1                                                              
PLATDSEP DS    XL1                PUTSEP Y/N FLAG                               
PLATFCNV DS    XL4                A(CONVERT TABLE)                              
PLATREC  DS    XL4                A(RECORD TABLE)                               
PLATTABL EQU   *-PLATTABD                                                       
         SPACE 3                                                                
*                                                                               
FCNVTABD DSECT                    COVERS FCNVTAB - CONVERT TABLE                
FCNVTYPE DS    XL1                                                              
FCNVROUT DS    XL4                                                              
FCNVTABL EQU   *-FCNVTABD                                                       
         SPACE 3                                                                
*                                                                               
RECTYPD  DSECT                    COVERS RECTYPE - RECORD TABLE                 
RECLEN   DS    XL2                LENGTH OF UNCONVERTED DATA                    
RECDISP  DS    XL2                DISPLACEMENT TO UNCONVERTED DATA              
RECREQN  DS    XL1                REQUIRED FOR NORMAL BUILD                     
RECREQK  DS    XL1                REQUIRED FOR KILL BUILD                       
RECCNVT  DS    XL1                DATA TYPE FOR CONVERSION                      
RECVRSN  DS    XL1                VERSION LEVEL FOR DATA                        
RECTYPLQ EQU   *-RECTYPD                                                        
*                                                                               
*                                                                               
* RXRECD                                                                        
       ++INCLUDE RXRECD12                                                       
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'104RXCNVX12  07/07/09'                                      
         END                                                                    
