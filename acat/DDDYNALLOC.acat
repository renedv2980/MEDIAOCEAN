*          DATA SET DDDYNALLOC AT LEVEL 046 AS OF 10/30/18                      
*PROCESS USING(WARN(15))                                                        
*CATALP DYNALLOC                                                                
*                                                                               
*                                                                               
*TAPEOUT DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DSN=DATASETNAME(+N),              
*-------    FREE=CLOSE,                                                         
*           DCB=PATTERN.SYSTAPE.DCB,           (US ONLY)                        
*           DCB=(TRTCH=NOCOMP)                 (OPTIONAL)                       
*                                                                               
*XL1 P1  TYPE  X'00'=TAPE, X'08'=SPOOL, X'04'=NON-COMPACTION MODE               
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  N FOR GSD GENERATION NUM DSN=DATASETNAME(+N)                           
*        IF X'FE', USE OPTIONAL 3RD AND 4TH PARMS                               
*AL3     A(CL35'DATASETNAME')                                                   
*AL1 P3  OPTIONAL 3RD PARAM IF X'80' BIT ON                                     
*        THEN GEN# IS BASE ON THE MOST RECENT CATALOG INFOMATION                
*        ELSE GEN# IS BASE ON CATALOG INFO FROM JOB STARTED                     
*        IF X'40' BIT ON DON'T ABEND. RETURN RBLKERR/RBLKINFO IN P4.            
*        IF X'20' CREATE NON-GDG TAPE                                           
*XL3     A(XL1'GEN#')                                                           
*XL2 P4  RBLKERR   OPTIONAL 4TH PARAM                                           
*XL2     RBLKINFO                                                               
*CL4 P5  C'!P6!'                   P6 CONTAINS A VALID PARAMETER                
*XL1 P6  X'80' = USE DCB PARAMETERS FROM GIVEN DDNAME                           
*AL3     A(CL8'DDNAME')                                                         
*        IF SET, THEN 'DDNAME' MUST HAVE BEEN PREVIOUSLY ALLOCATED              
*        (DYNAMICALLY OR OTHERWISE). THE DCB ATTRIBUTES FOR THIS                
*        *TAPEOUT* ALLOCATION WILL BE EXTRACTED FROM *THIS* DD'S                
*        ALLOCATION (AS OPPOSED TO TAKING THE DCB ATTRIBUTES FROM               
*        'PATTERN.SYSTAPE.DCB').                                                
*                                                                               
*                                                                               
*TAPEIN  DD UNIT=TAPE,DISP=OLD,DSN=DATASETNAME,VOL=SER=VOLSER                   
*------                                                                         
*XL1 P1  X'00'                                                                  
*AL3     A(CL8'DDNAME')                                                         
*AL1 P2  X'FF'                                                                  
*XL3     A(CL35'DATASETNAME'/CL6'VOLSER')                                       
*                                                                               
*                                                                               
*DISKOUT DD UNIT=UNIT,SPACE=(TYPE,(PRIM,SEC)),DCB=(BUFNO=2))                    
*-------                                                                        
*XL1 P1  UNIT X'80'=SYSDA,X'40'=VIO (SEE UNITAB FOR OTHERS)                     
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  TYPE X'80'=TRACKS,X'40'=CYLS (SEE SPACETAB)                            
*        X'08' IF P5 IS PRESENT                                                 
*        X'04' IF 3RD PARAMETER HAS CL44 DSN                                    
*        X'02' IF RELEASE UNUSED SPACE WHEN CLOSE DATASET                       
*        X'01' IF 3RD PARAMETER PRESENT                                         
*AL3     A(XL3'PRIMARY-ALLOC'/XL3'SECNDRY-ALLOC')                               
*AL1 P3  OPTIONAL 3RD PARAM                                                     
*        IF X'80' BIT ON UNALLOCATE FILE ON CLOSE (FREE=CLOSE)                  
*        IF X'40' BIT ON DON'T ABEND ON FAILURE. RETURN DATA IN P4.             
*XL3     A(CL35'DSN') OR A(CL44'DSN') SEE FIRST BYTE OF SECOND PARAM            
*XL2 P4  RBLKERR  OPTIONAL 4TH PARAM                                            
*XL2     RBLKINFO                                                               
*XL1 P5  X'80' = ALLOCATE WITH DISP=MOD (NOT DISP=NEW)                          
*XL3     A(ADDITIONAL TEXT UNITS) A(LIST OF ADDRESSES) OF USER-PROVIDED         
*                                 ADDITIONAL TEXT UNITS TO BE APPENDED          
*                                 TO THIS ROUTINE'S CONSTRUCTED LIST.           
*                                 ADDRESSES MUST RELOCATED IF ONLINE.           
*                                 MAXUTEXT = MAX # USER TEXT UNITS.             
*                                 IF A(LIST) IS 0 THEN IT IS IGNORED.           
*                                                                               
*                                                                               
*DISKIN  DD  DSN='DATASETNAME',DISP=SHR,FREE=CLOSE                              
*------                                                                         
*XL1 P1  X'FF'                                                                  
*AL3     A(CL8'DDNAME')                                                         
*AL1 P2  X'00' **** MUST BE SET AS DEFAULT !!!!! *****                          
*        X'80' = DO **NOT** UNALLOCATE FILE ON CLOSE (OMIT FREE=CLOSE)          
*        X'40' = DON'T ABEND. RETURN RBLKERR/RBLKINFO IN P4.                    
*        X'08' = P5 IS PRESENT                                                  
*        X'05' = 44-CHARACTER DSN IS PROVIDED                                   
*XL3     A(CL35'DSN') DEFAULT                                                   
*        A(CL44'DSN') IF X'05' BITS ARE SET IN HOB OF P2                        
*XL4 P3  UNUSED                                                                 
*XL2 P4  RBLKERR   OPTIONAL 4TH PARAM (SEE P2 X'40' BIT)                        
*XL2     RBLKINFO                                                               
*XL1 P5  MUST BE 0                (IF P2 BIT X'08' IS ON)                       
*XL3     A(ADDITIONAL TEXT UNITS) A(LIST OF ADDRESSES) OF USER-PROVIDED         
*                                 ADDITIONAL TEXT UNITS TO BE APPENDED          
*                                 TO THIS ROUTINE'S CONSTRUCTED LIST.           
*                                 ADDRESSES MUST RELOCATED IF ONLINE.           
*                                 MAXUTEXT = MAX # USER TEXT UNITS.             
*                                                                               
*                                                                               
*RDPANMBR DD DSN=<PANLIB DSN>,SUBSYS=(PANV,,<PAN MEMBER>),DISP=SHR              
*--------                                                                       
* (FOR READING A PANVALET MEMBER VIA THE PANV SUBSYSTEM)                        
*XL1 P1  C'P'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  MUST BE 0 (RESERVED FOR FUTURE USE)                                    
*AL3     A(CL44'PANVALET LIBRARY DSN')                                          
*XL1 P3  MUST BE 0 (RESERVED FOR FUTURE USE)                                    
*AL3     A(CL10'PANVALET MEMBER NAME')                                          
*XL2 P4  RBLKERR   OPTIONAL RETURNED VALUE (SEE P2 X'40' BIT)                   
*XL2     RBLKINFO                                                               
*XL4 P5  MUST BE 0 (RESERVED FOR FUTURE USE)                                    
*                                                                               
*                                                                               
*SYSOUT  DD  SYSOUT=C,DCB=(RECFM=F,LRECL=80),DEST=(NODEID,USERID)               
*------                                                                         
*XL1 P1  X'FE'                                                                  
*AL3     A(CL8'DDNAME')                                                         
*AL1 P2  X'00'                                                                  
*AL3     A(CL1'C'/CL8'NODEID'/CL8'USERID')                                      
*                                                                               
*                                                                               
*SYSOUT  DD  SYSOUT=C,DEST=(NODEID,USERID),FREE=CLOSE,FORM=FCDE                 
*SYSOUT  DD  SYSOUT=(C,WRITERNAME),FREE=CLOSE,FORM=FCDE                         
*                                                                               
*XL1 P1  X'FD'                                                                  
*AL3     A(CL8'DDNAME')                                                         
*AL1 P2  X'00' **** MUST BE SET AS DEFAULT !!!!! *****                          
*        X'80' = DO **NOT** UNALLOCATE FILE ON CLOSE (OMIT FREE=CLOSE)          
*AL3     A(CL1'C'/CL8'NODEID'/CL8'USERID'/CL4'FCDE')                            
*------      (FOR DEFAULT SYSOUT CLASS, USE BLANK)                              
*------      (IF NODEID IS BLANK, AND USERID IS PRESENT, THEN THE               
*------       USERID WILL BE TREATED AS A WRITER NAME)                          
*------      (IF FCDE IS BLANK, THEN NO FCDE IS GENERATED)                      
*------      E.G.: IF P2 POINTS TO ALL BLANKS, IT'S SYSOUT=*                    
*                                                                               
*                                                                               
*RETURNS WHETHER OR NOT THE GIVEN DDNAME HAS BEEN ALLOCATED                     
*----------------------------------------------------------                     
*CL1 P1  C'A'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  ZERO IF DDNAME NOT ALLOCATED, O/W ALLOCATED                            
*                                                                               
*                                                                               
*RETURNS DSN OF PREVIOUSLY ALLOCATED DATASET WITH GIVEN DDNAME                  
*-------------------------------------------------------------                  
*CL1 P1  C'D'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  L'DSN RETURNED HERE (ZERO IF DDNAME NOT ALLOCATED)                     
*AL3     A(CL44 IN WHICH DSN IS RETURNED)                                       
*                                                                               
*                                                                               
*HFSFILE DD  PATH='MY_HFS_FILE_PATHNAME',                                       
*-------     PATHOPTS=(ORDWR,OCREAT) OR ORDWR OR ORDONLY                        
*            PATHMODE=(SIRWXU,SIRWXG,SIRWXO),                                   
*            FILEDATA=TEXT OR BINARY,                                           
*CL1 P1  C'H'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  L'MY_HFS_FILE_PATHNAME                                                 
*AL3     A(CL255, MY_HFS_FILE_PATHNAME)                                         
*XL1 P3  X'80' BINARY FILE ORGANIZATION - RECORDS NOT DELIMITED                 
*        X'40' TEXT FILE ORGANIZATION - RECORDS ARE EBCDIC DELIMITED BY         
*        NEWLINE CHARACTERS (X'15')                                             
*        X'20' ADD PATHOPTS=OCREAT - CREATE NEW FILE WHEN NOT EXIST             
*        IF THIS BIT IS NOT ON AND FILE NOT FOUND, THIS BIT WILL BE             
*        TURNED ON AND RETURNED TO THE CALLER, SO THE CALLLER CAN JUST          
*        DO GOTO1 (RF) RIGHT AFTER THIS.                                        
*        X'10' PATHOPTS=ORDONLY (OTHERWISE ORDWR)                               
*        X'08' ASK DYNALLOC TO PROVIDE A DDNAME, AND RETURN IT IN AREA          
*        POINTED TO BY P1 ABOVE. (NOTE: THE LENGTH OF THE GENERATED             
*        DDNAME MAY BE LESS THAN 8! SEE LOW-ORDER 3 BITS ON RETURN.)            
*        ON *INPUT* :                                                           
*        X'04' WTO *ALL* SVC99 MESSAGES (NOT JUST SEVERE ONES)                  
*        X'02' RESERVED FOR FUTURE                                              
*        X'01' RESERVED FOR FUTURE                                              
*        ON *OUTPUT* :                                                          
*        X'04'-X'01': IF THE X'08' BIT IS SET ON INPUT, THEN THIS               
*        NIBBLE WILL CONTAIN *ONE LESS* THAN THE LENGTH OF THE                  
*        RETURNED DDNAME. (USEFUL FOR EX INSTRUCTIONS!)                         
*AL3     A(0) OR A(DCB). IF A(DCB) IS SPECIFIED, THEN DYNALLOC WILL             
*        EXTRACT THE RECFM, LRECL, AND BLKSIZE FROM THE DCB AND USE             
*        THOSE VALUES IN THE ALLOCATION.                                        
*                                                                               
*NOTE:   IF YOU ALLOCATE A FILE WHICH IS ALREADY EXIST WITH THE                 
*        PATHOPTS=OCREAT, WHEN YOU OPEN IT TO WRITE, YOU ARE APPENDING          
*        TO IT.                                                                 
*                                                                               
*UNALLOCATE A DATASET WITH GIVEN DDNAME                                         
*--------------------------------------                                         
*CL1 P1  C'U'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL4 P2  INPUT:  C'INFO' MEANS ISSUE WTO FOR *ALL* DYNALLOC MESSAGES            
*XL4     OUTPUT: DYNALLOC RETURN CODE (RF) IS RETURNED IN P2                    
*                                                                               
*                                                                               
*DYNAMIC CONCATENATION                                                          
*---------------------                                                          
*CL1 P1  C'C'                                                                   
*AL3     A(CL8 PRIMARY DDNAME)                                                  
*XL1 P2  X'80': DO NOT ABEND IF THE TIOT FILLS UP.                              
*        ON OUTPUT, THE X'80' FLAG INDICATES THAT THE CONCATENATION             
*        FAILED BECAUSE THE TIOT IS FULL.                                       
*        X'40': DO *NOT* REQUEST THE PERMANENTLY CONCATENATED                   
*        ATTRIBUTE.                                                             
*AL3     A(CL8 SECONDARY DDNAME)                                                
*                                                                               
*        THE SECONDARY DDNAME WILL BE DYNAMICALLY CONCATENATED BEHIND           
*        THE PRIMARY DDNAME. BOTH DDNAMES MUST HAVE BEEN PREVIOUSLY             
*        ALLOCATED (DYNAMICALLY OR OTHERWISE). THIS YIELDS A SINGLE,            
*        LOGICALLY-CONCATENATED DATASET UNDER THE PRIMARY DDNAME ONLY.          
*        BY DEFAULT, THE RESULTING CONCATENATED GROUP WILL BE GIVEN THE         
*        "PERMANENTLY CONCATENATED" ATTRIBUTE (WHICH MIRRORS WHAT               
*        HAPPENS IN A JCL CONCATENATION). THIS MEANS THAT THE                   
*        SECONDARY DDNAME WILL NO LONGER BE ASSOCIATED WITH ITS                 
*        ORIGINAL ALLOCATION. THIS ATTRIBUTE CAN BE INHIBITED BY                
*        SETTING THE X'40' BIT ON IN THE HOB OF P2.                             
*                                                                               
*        NOTE THAT THIS FUNCTION MAY BE CALLED WITHIN A                         
*        LOOP (WITH THE PRIMARY DDNAME REMAINING UNCHANGED), WHICH              
*        PERMITS MULTIPLE DATASETS TO BE CONCATENATED TOGETHER UNDER            
*        THE PRIMARY DDNAME. (EVENTUALLY, THE TIOT WILL FILL UP, SO             
*        THERE IS A PRACTICAL LIMIT TO THE NUMBER OF DATASETS WHICH             
*        CAN BE CONCATENATED WITHIN A JOB STEP.)                                
*                                                                               
*                                                                               
*DYNAMIC DECONCATENATION                                                        
*-----------------------                                                        
*CL1 P1  C'E'                                                                   
*AL3     A(CL8 DDNAME OF CONCATENATED GROUP)                                    
*AL1 P2  X'00' MUST BE SET AS DEFAULT                                           
*        X'80' = DON'T ABEND. RETURN RF/S99ERROR IN P3.                         
*                             RETURN RBLKERR/RBLKINFO IN P4.                    
*AL3     AL3(0)                                                                 
*XL2 P3  RETURN CODE (RF LOW-ORDER HALFWORD) (SEE P2 X'80' BIT)                 
*XL2     S99ERROR                                                               
*XL2 P4  RBLKERR   OPTIONAL 4TH PARAM (SEE P2 X'80' BIT)                        
*XL2     RBLKINFO                                                               
*                                                                               
*                                                                               
*DUMMY ALLOCATION                                                               
*----------------                                                               
*DDNAME DD DUMMY                                                                
*                                                                               
*CL1 P1  C'N'                                                                   
*AL3     A(CL8'DDNAME')                                                         
*XL1 P2  X'00' MUST BE SET AS DEFAULT                                           
*        X'80' = P3 IS PRESENT (DCB ADDRESS)                                    
*AL3     AL3(0)                                                                 
*        DYNALLOC RETURN CODE (RF) IS RETURNED IN P2                            
*XL1 P3  MUST BE SET TO 0 ON INPUT                                              
*AL3     IF P2 HOB X'80' BIT IS SET:                                            
*        A(DCB). DYNALLOC WILL EXTRACT THE RECFM, LRECL, AND BLKSIZE            
*        FROM THIS DCB AND USE THOSE VALUES IN THE DUMMY ALLOCATION.            
*                                                                               
*                                                                               
         TITLE 'ROUTINE TO DYNAMICALLY ALLOCATE A DD STATEMENT'                 
DYNALLOC RSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WKX-WKD,**DYNAM0,RA,CLEAR=YES                                    
         USING WKD,RC                                                           
*                                                                               
         ST    R1,SAVER1           SAVE CALLER'S R1                             
         MVC   SAVEPL,0(R1)        SAVE COPY OF CALLER'S PARM LIST              
         MVI   ABENDFLG,C'Y'       DEFAULT IS ABEND ON DYNALLOC FAILURE         
*                                                                               
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         USING S99RBX,RF                                                        
         MVC   S99EID,=CL6'S99RBX' REQUEST BLOCK EXTENSION IDENTIFIER           
         MVI   S99EVER,S99RBXVR    VERSION                                      
         MVI   S99EOPTS,S99EIMSG+S99EWTP MESSAGES GO TO CONSOLE VIA WTO         
         MVI   S99EMGSV,S99XSEVE   ONLY PUT OUT SEVERE MESSAGES                 
         DROP  RF                                                               
*                                                                               
         MVC   TYPE1,0(R1)         SAVE INPUT TYPE                              
         L     R4,0(R1)                                                         
         MVC   DDNAME,0(R4)        SAVE DDNAME                                  
*                                                                               
         LHI   R0,L'DDNAME         COUNT SIGNIFICANT CHARS IN DDNAME            
         LA    RF,DDNAME+L'DDNAME-1  A(LAST BYTE OF DDNAME)                     
         CLI   0(RF),C' '          SCAN BACKWARDS FOR LAST CHARACTER            
         BH    *+10                GOT IT: R0 = NO. OF CHARS IN DDNAME          
         BCTR  RF,0                NOT YET: BACK UP ONE CHARACTER               
         BCT   R0,*-10             DECREMENT LENGTH AND TRY AGAIN               
*                                  IF WE FALL THROUGH TO HERE, NO               
*                                   DDNAME WAS SPECIFIED                        
*                                                                               
         STH   R0,DDNAMELN         SAVE NUMBER OF CHARS IN DDNAME               
*                                                                               
         CLI   TYPE1,C'C'          DYNAMIC CONCATENATION?                       
         BNE   *+12                                                             
         BAS   RE,CONCAT                                                        
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'E'          DYNAMIC DECONCATENATION?                     
         BNE   *+12                                                             
         BAS   RE,DECONCAT                                                      
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'H'          HFS FILE ALLOCATION?                         
         BNE   *+12                                                             
         BAS   RE,HFSALLOC                                                      
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'P'          PANVALET MEMBER ALLOCATION?                  
         BNE   *+12                                                             
         BAS   RE,PANALLOC                                                      
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'U'          UNALLOCATE BY DDNAME                         
         BNE   *+12                                                             
         BAS   RE,DDUNALLO                                                      
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'N'          DUMMY ALLOCATION                             
         BNE   *+12                                                             
         BAS   RE,DUMMYALO                                                      
         B     DYNX                                                             
*                                                                               
         CLI   TYPE1,C'A'          DOES CALLER JUST WANT TO KNOW IF...          
         BNE   DYN0E               ... DDNAME HAS BEEN ALLOCATED?               
         L     R3,SAVER1           YES                                          
         MVI   4(R3),0             ASSUME DDNAME NOT ALLOCATED                  
         BAS   RE,CHKALLOC                                                      
         BNE   DYNX                                                             
         MVI   4(R3),1             DDNAME IS ALLOCATED                          
         B     DYNX                                                             
*                                                                               
DYN0E    DS    0H                                                               
         CLI   TYPE1,C'D'          CALLER WANTS DSN RETURNED?                   
         BNE   *+12                NO                                           
         BAS   RE,GETDSN           YES: GET THE DSN FOR GIVEN DDNAME            
         B     DYNX                NOTHING TO DYAMICALLY ALLOCATE               
*                                                                               
         BAS   RE,CHKALLOC         IS THE DDNAME ALREADY ALLOCATED?             
         BE    DYNX                YES: NO NEED TO ATTEMPT ALLOCATION           
         EJECT                                                                  
         MVC   TYPE2,4(R1)         SAVE SUB TYPE                                
         L     R2,4(R1)            R2=A(DATA REQUIRED FOR TYPE)                 
*                                                                               
         MVC   DSNFLAG,8(R1)       SAVE DSN CONTROL FLAG                        
         LA    R3,8(R1)            R3=A(POSSIBLE THIRD PARAMETER)               
*                                                                               
         LA    R1,RBLK             SET UP REQ BLK POINTER                       
         ST    R1,ARBLK                                                         
         OI    ARBLK,X'80'                                                      
*                                                                               
         MVI   RBLKLEN,20          SET UP REQ BLK LEN                           
         MVI   RBLKVERB,S99VRBAL   SET ALLOCATE BY DSN VERB CODE                
         LA    R1,ATXT                                                          
         CLI   TYPE1,UDISKIN       TEST DISKIN TYPE                             
         BNE   *+8                                                              
         LA    R1,ATXT2                                                         
         CLI   TYPE1,USYSOUT       TEST SYSOUT TYPE                             
         BNE   *+8                                                              
         LA    R1,ATXT2                                                         
         CLI   TYPE1,USYSOUT2      TEST SYSOUT TYPE                             
         BNE   *+8                                                              
         LA    R1,ATXT2                                                         
         ST    R1,RBLKATXT         SET POINTER TO TEXT POINTER LIST             
*                                                                               
         LA    R1,TXTDD            SET UP POINTER TO DDNAME TEXT                
         ST    R1,ATXTDD                                                        
         MVC   0(2,R1),=AL2(DALDDNAM)  SET DDNAME TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(L'DDNAME,R1),DDNAME                                            
         MVC   4(2,R1),DDNAMELN    SET LEN IN DDNAME TEXT HEADER                
*                                                                               
         CLI   TYPE1,UDISKIN       TEST DISK IN                                 
         BE    DYN2                                                             
         CLI   TYPE1,USYSOUT       TEST SYSOUT                                  
         BE    DYNS                                                             
         CLI   TYPE1,USYSOUT2      TEST SYSOUT TYPE 2                           
         BE    DYNST2                                                           
         LA    R1,TXTUNIT          SET UP UNIT TEXT CODE                        
         ST    R1,ATXTUNIT                                                      
         MVC   0(2,R1),=AL2(DALUNIT)   SET UNIT TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
*                                                                               
         L     RE,=V(SSB)          PICK UP A(MASTC)                             
         ICM   RE,15,SSOMASTC-SSOOFF(RE)                                        
         BZ    DYN15A                                                           
*                                                                               
         CLI   TYPE1,UTAPE         TAPE UNIT?                                   
         BE    DYN15#0             YES                                          
         TM    TYPE1,USPLT         SPOOL UNIT?                                  
         BO    DYN15#0             YES                                          
         CLI   TYPE1,UTAPENC                                                    
         BNE   DYN15A              NOT A TAPE/SPOOL UNIT                        
*                                                                               
         USING MASTD,RE                                                         
DYN15#0  CLI   MCTAPETY,C'V'       VTS TYPE?                                    
         BNE   DYN15#4                                                          
         MVI   TYPE1,UVTS          USE UNIT=VTS FOR TAPE                        
         TM    TYPE1,USPLT         SPOOL UNIT?                                  
         BNO   DYN15A              NO                                           
         MVI   TYPE1,UVTSPLT       USE UNIT=VTS FOR SPOOL                       
         B     DYN15A                                                           
*                                                                               
DYN15#4  CLI   MCTAPETY,C'*'       DEFAULT TYPE?                                
         BNE   *+8                                                              
         MVI   TYPE1,UTAPE         USE DEFAULT UNIT=TAPE                        
         DROP  RE                                                               
*                                                                               
DYN15A   LA    RF,UNITAB           TABLE OF VALID UNITS                         
DYN15B   CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                INVALID UNIT EQUATE                          
         CLC   TYPE1,0(RF)                                                      
         BE    *+12                                                             
         LA    RF,L'UNITAB(RF)                                                  
         B     DYN15B                                                           
         MVC   4(2,R1),1(RF)       SET L'UNIT DESCRIPTION                       
         MVC   6(5,R1),3(RF)       SET UNIT DESCRIPTION                         
*                                                                               
         TM    TYPE1,UDISK         IF ALLOCATING FOR DISK                       
         BNZ   DYN7                BRANCH HERE                                  
*                                                                               
         MVI   RBLKFLAG,X'19'      SET WAIT FOR UNIT AND CONSIDER               
*                                  OFFLINE DEVICES                              
*                                                                               
DYN2     LA    R1,TXTDSN           SET UP POINTER TO DSN TEXT                   
         ST    R1,ATXTDSN                                                       
         MVC   0(2,R1),=AL2(DALDSNAM)   SET DSN TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         LR    RF,R2               FIND LEN OF DSN                              
         LHI   R0,35               DEFAULT IS 35                                
         TM    SAVEPL+4,X'05'                                                   
         BNO   *+8                                                              
         LHI   R0,44               CALLER IS PASSING 44 CHR AREA                
DYN2A    CLI   0(RF),C' '                                                       
         BE    DYN2B               NAME ENDS WITH SPACE OR C'('                 
         CLI   0(RF),C'('                                                       
         BE    DYN2B                                                            
         LA    RF,1(RF)                                                         
         BCT   R0,DYN2A                                                         
DYN2B    LR    RE,RF               SAVE POINTER TO NAME TERMINATOR              
         SR    RF,R2                                                            
         STH   RF,4(R1)            SAVE LEN IN TEXT BLOCK                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,R1),0(R2)       MOVE DSN TO TEXT BLOCK                       
*                                                                               
         CLI   0(RE),C'('          TEST DSN ENDED WITH PAREN.                   
         BNE   DYN3                                                             
         LA    R1,TXTMBR           SET UP POINTER TO MEMBER TEXT                
         ST    R1,ATXTMBR                                                       
         MVC   0(2,R1),=AL2(DALMEMBR)   SET MEMBER TEXT CODE                    
         MVC   2(2,R1),=X'0001'                                                 
         LA    RE,1(RE)                                                         
         LR    RF,RE               FIND LEN OF MEMBER                           
         CLI   0(RF),C')'                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         SR    RF,RE                                                            
         STH   RF,4(R1)            SAVE LEN IN TEXT BLOCK                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,R1),0(RE)       MOVE MEMBER TO TEXT BLOCK                    
*                                                                               
DYN3     CLI   TYPE2,X'FF'         MEANS USE AS INPUT TAPE                      
         BE    DYN4                SO NO GENERATION REQUIRED                    
         CLI   TYPE1,UDISKIN       SAME FOR DISP=SHR                            
         BE    DYN4                                                             
         TM    DSNFLAG,X'20'       NON-GDG TAPE                                 
         BO    DYN3C                                                            
*                                                                               
         CLI   TYPE2,X'FE'         USE GEN# FROM 3RD PARM?                      
         BNE   DYN3B                                                            
         L     RE,0(R3)            GET A(GEN#)                                  
         MVC   TYPE2,0(RE)         SAVE GEN#                                    
*                                                                               
         TM    DSNFLAG,X'80'       GET MOST RECENT GEN#?                        
         BZ    *+8                 NO                                           
         OI    RBLKFLG1,S99GDGNT   YES                                          
*                                                                               
         TM    DSNFLAG,X'40'       CALLER WANTS TO AVOID ABEND?                 
         BZ    DYN3B                                                            
         MVI   ABENDFLG,C'N'       YES                                          
         L     R1,SAVER1                                                        
         XC    12(4,R1),12(R1)     CLEAR P4 (ASSUME NO ERROR)                   
*                                                                               
DYN3B    LA    R1,TXTGEN           SET UP RELATIVE GENERATION NO.               
         ST    R1,ATXTGEN                                                       
         MVC   0(2,R1),=AL2(DALMEMBR)   SET REL GEN CODE                        
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0004'                                                 
         MVI   6(R1),C'+'                                                       
         XR    RF,RF               CHECK FOR BINARY OVERRIDE                    
         ICM   RF,1,TYPE2                                                       
         BNZ   *+8                                                              
         LA    RF,1                DEFAULT IS +001                              
         CVD   RF,DUB              CONVERT TO PACKED                            
         OI    DUB+7,X'0F'                                                      
         UNPK  7(3,R1),DUB+6(2)    AND EBCDICIZE                                
                                                                                
DYN3C    DS    0H                                                               
*&&US                                                                           
         L     R1,SAVER1                                                        
         CLC   =C'!P6!',16(R1)     P5 SAYS THAT P6 IS PROVIDED?                 
         BNE   DYN3D0              NO                                           
         TM    20(R1),X'80'        P6 SAYS THAT A(DDNAME) IS PROVIDED?          
         BZ    DYN3D0              NO                                           
         SR    RF,RF                                                            
         ICM   RF,7,21(R1)         P6 MUST CONTAIN AN ADDRESS                   
         JZ    *+2                 IT DOESN'T!                                  
*                                                                               
         LA    R1,TXTDCB           SET UP DCB=DDNAME TEXT CODE                  
         ST    R1,ATXTDCB                                                       
         MVC   0(2,R1),=AL2(DALDCBDD)   SET DCB REFERENCE TO DDNAME             
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=AL2(8)     SET L'DDNAME (CALLER MUST PASS CL8)          
         MVC   6(8,R1),0(RF)       SET DDNAME TO USE FOR DCB ATTRIBUTES         
         B     DYN3L                                                            
*                                                                               
DYN3D0   DS    0H                                                               
         LA    R1,TXTDCB           SET UP DCB=DSN TEXT CODE                     
         ST    R1,ATXTDCB                                                       
         MVC   0(2,R1),=AL2(DALDCBDS)   SET DCB REFERENCE TO DSN CODE           
         MVC   2(2,R1),=X'0001'                                                 
         LA    RF,DCBTAB           LOOK UP UNIT IN DCB TABLE                    
         USING DCBTABD,RF                                                       
DYN3D    CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                NO DCB DSN DEFINED FOR UNIT                  
         CLC   TYPE1,DCBUNIT                                                    
         BE    *+12                                                             
         LA    RF,DCBTABLQ(RF)                                                  
         B     DYN3D                                                            
         MVC   4(2,R1),DCBDSNLN    SET L'DCB DSN                                
         MVC   6(20,R1),DCBDSN     SET DCB DSN                                  
         MVC   14(3,R1),0(R2)      SET SYSTEM FROM 1ST 3 CHARS OF DSN           
         DROP  RF                                                               
*                                                                               
DYN3L    DS    0H                                                               
*&&                                                                             
         TM    TYPE1,UNOCOMP       TEST NON-COMPACTION MODE REQUIRED            
         BZ    DYN4                                                             
         LA    R1,TXTTRTCH         SET UP POINTER TO TRTCH TEXT                 
         ST    R1,ATXTTCH                                                       
         MVC   0(2,R1),=AL2(DALTRTCH)    SET TRTCH TEXT CODE                    
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'04'         SET NON-COMPACTION MODE                      
*                                                                               
DYN4     LA    R1,TXTDISP          SET UP POINTER TO DISP TEXT                  
         ST    R1,ATXTDISP                                                      
         MVC   0(2,R1),=AL2(DALSTATS)    SET DISP TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'01'         SET DISP=OLD CODE                            
         CLI   TYPE2,X'FF'         MEANS USE AS INPUT TAPE                      
         BE    DYN10               SO BRANCH HERE                               
         MVI   6(R1),X'04'         SET DISP=NEW CODE                            
         CLI   TYPE1,UDISKIN       MEANS DISP=SHR DSN                           
         BNE   DYN5                IT'S NOT, SO BRANCH HERE                     
*                                                                               
         MVI   6(R1),X'08'         SET DISP=SHR CODE                            
         LA    R1,TXTUNAL          SET UP POINTER TO UNALLOCATE TEXT            
         ST    R1,ATXTUNA1                                                      
         XC    0(2,R1),0(R1)       ASSUME NO FREE=CLOSE                         
         TM    SAVEPL+4,X'80'      INHIBIT FREE=CLOSE?                          
         BO    *+10                                                             
         MVC   0(2,R1),=AL2(DALCLOSE)  NO: SET UNALLOCATE TEXT CODE             
         XC    2(2,R1),2(R1)                                                    
         OI    ATXTLST4,X'80'      SET END OF TEXT POINTER LIST                 
         TM    SAVEPL+4,X'40'      CALLER WANTS TO AVOID ABEND?                 
         BZ    *+18                                                             
         MVI   ABENDFLG,C'N'       YES                                          
         L     R1,SAVER1                                                        
         XC    12(4,R1),12(R1)     CLEAR P4 (ASSUME NO ERROR)                   
         B     DYN12               NOW FINISH UP                                
*                                                                               
DYN5     LA    R1,TXTNDISP         SET UP POINTER TO NORM DISP TEXT             
         ST    R1,ATXTNDSP                                                      
         MVC   0(2,R1),=AL2(DALNDISP)   SET NORMAL DISP TEXT CODE               
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'02'         SET DISP=CATLG CODE                          
*                                                                               
         LA    R1,TXTCDISP         SET UP POINTER TO COND DISP TEXT             
         ST    R1,ATXTCDSP                                                      
         MVC   0(2,R1),=AL2(DALCDISP)   SET CONDITIONAL DISP TEXT CODE          
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'04'         SET DISP=DELETE CODE                         
*                                                                               
         LA    R1,TXTUNAL          SET UP POINTER TO UNALLOCATE TEXT            
         ST    R1,ATXTUNAL                                                      
         MVC   0(2,R1),=AL2(DALCLOSE)   SET UNALLOCATE TEXT CODE                
         XC    2(2,R1),2(R1)                                                    
         OI    ATXTLAST,X'80'      SET END OF TEXT POINTER LIST                 
         B     DYN12               NOW FINISH UP                                
*                                                                               
DYN10    LA    R1,TXTVSER          SET UP POINTER TO VOLUME SERIAL TEXT         
         ST    R1,ATXTVSER                                                      
         MVC   0(2,R1),=AL2(DALVLSER)   SET VOLUME SERIAL TEXT CODE             
         MVC   2(2,R1),=X'0001'    SET ONE VOLUME                               
         MVC   4(2,R1),=X'0006'    SET N'DIGITS IN VOLSER NUMBER                
         MVC   6(6,R1),20(R2)      AFTER DSN IN PARAMETER 2                     
         OI    ATXTLST3,X'80'      SET END OF TEXT POINTER LIST                 
*                                                                               
DYN12    DS    0H                                                               
         CLI   TYPE1,UDISKIN       DISKIN CALL?                                 
         BNE   DYNLST              NO                                           
         TM    TYPE2,X'08'         ADDITIONAL TEXT UNITS AT P5?                 
         BNO   DYNLST                                                           
         L     RF,SAVER1           YES: GET A(ADDITIONAL TEXT UNITS)            
         L     RF,16(RF)                                                        
*                                                                               
         L     R1,RBLKATXT         A(CURRENT TEXT UNITS)                        
         TM    0(R1),X'80'         EOL?                                         
         BO    *+12                YES                                          
         LA    R1,4(R1)            NO: BUMP TO NEXT A(TEXT UNIT)                
         B     *-12                                                             
*                                                                               
         NI    0(R1),X'FF'-X'80'   RESET EOL BIT                                
         L     R0,=A(MAXUTEXT)     MAXIMUM NUMBER OF USER TEXT UNITS            
DYN14    DS    0H                                                               
         LA    R1,4(R1)            BUMP TO NEXT TEXT UNIT SLOT                  
         MVC   0(4,R1),0(RF)       MOVE IN A(USER TEXT UNIT)                    
         TM    0(R1),X'80'         EOL?                                         
         BO    DYNLST              YES                                          
         LA    RF,4(RF)            NO: MOVE IN A(NEXT TEXT UNIT)                
         BCT   R0,DYN14                                                         
         DC    H'0'                INCREASE MAXUTEXT                            
         EJECT                                                                  
***********************************************************************         
* HERE TO PROCESS DISKOUT MODE                                                  
***********************************************************************         
DYN7     MVI   DISKFLAG,0          TEST NEW DATA SET NAME IN 3RD PARM           
         TM    TYPE2,X'01'                                                      
         BNO   *+8                                                              
         OI    DISKFLAG,X'01'      SET INTERNAL FLAG                            
         TM    TYPE2,X'02'         RELEASE UNUSED SPACE ON CLOSE                
         BNO   *+8                                                              
         OI    DISKFLAG,X'02'      SET INTERNAL FLAG                            
         TM    TYPE2,X'05'         PASSING 44 CHR DSN                           
         BNO   *+8                                                              
         OI    DISKFLAG,X'04'      SET USER PASSING 44 CHR DSN                  
         TM    TYPE2,X'08'         ADDITIONAL TEXT UNITS AT P5?                 
         BNO   *+8                                                              
         OI    DISKFLAG,X'08'      YES                                          
         NI    TYPE2,X'F0'         CLEAR TYPE2 FLAG                             
*                                                                               
         LA    R1,TXTSPACE         SET UP SPACE TEXT CODE                       
         ST    R1,ATXTSPAC                                                      
         MVC   2(2,R1),=X'0000'                                                 
         LA    RF,SPACETAB         TABLE OF VALID SPACE TYPES                   
         USING SPACETBD,RF                                                      
DYN7B    CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                INVALID SPACE EQUATE                         
         CLC   TYPE2,SPACEEQU                                                   
         BE    *+12                                                             
         LA    RF,SPACETBQ(RF)                                                  
         B     DYN7B                                                            
         MVC   0(2,R1),SPACETXT    SET SPACE TEXT CODE                          
         DROP  RF                                                               
*                                                                               
         LA    R1,TXTPRI           SET UP POINTER TO PRIMARY QUANTITY           
         ST    R1,ATXTPRI                                                       
         MVC   0(2,R1),=AL2(DALPRIME)                                           
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0003'                                                 
         MVC   6(3,R1),0(R2)       SET PRIMARY QUANTITY FROM PARAM. 2           
*                                                                               
         LA    R1,TXTSEC           SET UP POINTER TO SECONDARY QUANTITY         
         ST    R1,ATXTSEC                                                       
         MVC   0(2,R1),=AL2(DALSECND)                                           
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0003'                                                 
         MVC   6(3,R1),3(R2)       SET SECONDARY QUANTITY FROM PARAM. 2         
*                                                                               
         LA    R1,TXTBUF           SET UP POINTER TO N'BUFFERS                  
         ST    R1,ATXTBUF                                                       
         MVC   0(2,R1),=AL2(DALBUFNO)                                           
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),2             SET N'BUFFERS = 2                            
*                                                                               
         LA    R1,TXTDISP          SET UP POINTER TO DISP TEXT                  
         ST    R1,ATXTDDSP                                                      
         MVC   0(2,R1),=AL2(DALSTATS)    SET DISP TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'04'         DEFAULT IS DISP=NEW                          
         TM    DISKFLAG,X'08'      P5 IS PRESENT?                               
         BZ    DYN7E               NO: STICK WITH DEFAULT OF DISP=NEW           
         L     RF,SAVER1           RF = CALLER'S R1                             
         TM    16(RF),X'80'        DISP=MOD REQUESTED?                          
         BZ    DYN7E                                                            
         MVI   6(R1),X'02'         YES: SET DISP=MOD                            
*                                                                               
DYN7E    DS    0H                                                               
         TM    DISKFLAG,X'01'      TEST THIRD PARAMETER PRESENT                 
         BO    DYN40                                                            
         TM    DISKFLAG,X'02'      NEED RLSE TEXT BLOCK?                        
         BO    *+12                YES                                          
         OI    ATXTLST2,X'80'      SET END OF DISK TEXT POINTER LIST            
         B     DYND10                                                           
*                                                                               
         LA    R1,TXTRLSE          ADD RLSE TEXT BLOCK AT THE END               
         ST    R1,ATXTLST2+4                                                    
         MVC   0(2,R1),=AL2(DALRLSE)                                            
         MVC   2(2,R1),=X'0000'                                                 
         OI    ATXTLST2+4,X'80'    SET END OF DISK TEXT POINTER LIST            
         B     DYND10                                                           
         EJECT                                                                  
***********************************************************************         
*   PROCESS ADDITIONAL PARAMETERS TO CREATE NEW DATA SET NAME                   
***********************************************************************         
DYN40    L     R3,0(R3)            GET ADDRESS OF DSN FROM PLIST PARM3          
         LA    R3,0(R3)                                                         
         TM    DSNFLAG,X'40'       CALLER WANTS TO AVOID ABEND?                 
         BZ    *+18                                                             
         MVI   ABENDFLG,C'N'       YES                                          
         L     R1,SAVER1                                                        
         XC    12(4,R1),12(R1)     CLEAR P4 (ASSUME NO ERROR)                   
*                                                                               
         LA    R1,TXTDSN           SET UP POINTER TO DSN TEXT                   
         ST    R1,ATXTDDSN                                                      
         MVC   0(2,R1),=AL2(DALDSNAM)   SET DSN TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         LR    RF,R3               FIND LEN OF DSN                              
         LHI   R0,35               DEFAULT IS 35                                
         TM    SAVEPL+4,X'05'                                                   
         BNO   *+8                                                              
         LHI   R0,44               CALLER IS PASSING 44 CHR AREA                
DYN40A   CLI   0(RF),C' '                                                       
         BE    DYN40B              NAME ENDS WITH SPACE OR C'('                 
         CLI   0(RF),C'('                                                       
         BE    DYN40B                                                           
         LA    RF,1(RF)                                                         
         BCT   R0,DYN40A                                                        
DYN40B   LR    RE,RF               SAVE POINTER TO NAME TERMINATOR              
         SR    RF,R3                                                            
         STH   RF,4(R1)            SAVE LEN IN TEXT BLOCK                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,R1),0(R3)       MOVE DSN TO TEXT BLOCK                       
*                                                                               
         CLI   0(RE),C'('          TEST DSN ENDED WITH PAREN.                   
         BNE   DYN43                                                            
         LA    R1,TXTMBR           SET UP POINTER TO MEMBER TEXT                
         ST    R1,ATXTDMBR                                                      
         MVC   0(2,R1),=AL2(DALMEMBR)   SET MEMBER TEXT CODE                    
         MVC   2(2,R1),=X'0001'                                                 
         LA    RE,1(RE)                                                         
         LR    RF,RE               FIND LEN OF MEMBER                           
         CLI   0(RF),C')'                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         SR    RF,RE                                                            
         STH   RF,4(R1)            SAVE LEN IN TEXT BLOCK                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,R1),0(RE)       MOVE MEMBER TO TEXT BLOCK                    
*                                                                               
DYN43    DS    0H                                                               
         LA    R1,TXTNDISP         SET UP POINTER TO NORM DISP TEXT             
         ST    R1,ATXTDNDS                                                      
         MVC   0(2,R1),=AL2(DALNDISP)    SET NORMAL DISP TEXT CODE              
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'02'         SET DISP=CATLG CODE                          
*                                                                               
         LA    R1,TXTCDISP         SET UP POINTER TO COND DISP TEXT             
         ST    R1,ATXTDCDS                                                      
         MVC   0(2,R1),=AL2(DALCDISP)    SET CONDITIONAL DISP TEXT CODE         
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'04'         SET DISP=DELETE CODE                         
         TM    DSNFLAG,X'80'       SEE IF UNALLOCATE BIT ON IN PARM3            
         BO    DYN45                                                            
         TM    DISKFLAG,X'02'      NEED RLSE TEXT BLOCK?                        
         BO    *+12                YES                                          
         OI    ATXTLST5,X'80'      SET END OF DISK TEXT POINTER LIST            
         B     DYND10                                                           
*                                                                               
         LA    R1,TXTRLSE          ADD RLSE TEXT BLOCK AT THE END               
         ST    R1,ATXTLST5+4                                                    
         MVC   0(2,R1),=AL2(DALRLSE)                                            
         MVC   2(2,R1),=X'0000'                                                 
         OI    ATXTLST5+4,X'80'    SET END OF DISK TEXT POINTER LIST            
         B     DYND10                                                           
*                                                                               
DYN45    LA    R1,TXTUNAL          SET UP POINTER TO UNALLOCATE TEXT            
         ST    R1,ATXTUNA3                                                      
         MVC   0(2,R1),=AL2(DALCLOSE)    SET UNALLOCATE TEXT CODE               
         XC    2(2,R1),2(R1)                                                    
         TM    DISKFLAG,X'02'      NEED RLSE TEXT BLOCK?                        
         BO    *+12                YES                                          
         OI    ATXTLST6,X'80'      SET END OF DISK TEXT POINTER LIST            
         B     DYND10                                                           
*                                                                               
         LA    R1,TXTRLSE          ADD RLSE TEXT BLOCK AT THE END               
         ST    R1,ATXTLST6+4                                                    
         MVC   0(2,R1),=AL2(DALRLSE)                                            
         MVC   2(2,R1),=X'0000'                                                 
         OI    ATXTLST6+4,X'80'    SET END OF DISK TEXT POINTER LIST            
*                                                                               
DYND10   DS    0H                                                               
         TM    DISKFLAG,X'08'      P5 IS PRESENT?                               
         BNO   DYNLST                                                           
         L     RF,SAVER1           CALLER'S R1                                  
         ICM   RF,B'0111',17(RF)   IS A(TEXT UNIT LIST) PRESENT?                
         BZ    DYNLST              NO                                           
*                                                                               
         LA    RF,0(,RF)           CLEAR HOB                                    
         L     R1,RBLKATXT         A(CURRENT TEXT UNITS)                        
         TM    0(R1),X'80'         EOL?                                         
         BO    *+12                YES                                          
         LA    R1,4(R1)            NO: BUMP TO NEXT A(TEXT UNIT)                
         B     *-12                                                             
*                                                                               
         NI    0(R1),X'FF'-X'80'   RESET EOL BIT                                
         L     R0,=A(MAXUTEXT)     MAXIMUM NUMBER OF USER TEXT UNITS            
DYND20   DS    0H                                                               
         LA    R1,4(R1)            BUMP TO NEXT TEXT UNIT SLOT                  
         MVC   0(4,R1),0(RF)       MOVE IN A(USER TEXT UNIT)                    
*                                                                               
*                                  WE BUILT A DALSTATS TEXT UNIT ABOVE,         
*                                   BUT IF ONE IS PRESENT IN THE USER'S         
*                                   LIST, THEN IT TAKES PRECEDENCE OVER         
*                                   THE ONE THAT WE BUILT ABOVE.                
         L     RE,0(R1)            RE = A(USER TEXT UNIT)                       
         CLC   =AL2(DALSTATS),0(RE)  IF THE CALLER PASSED A DALSTATS...         
         BNE   *+10                                                             
         XC    ATXTDDSP,ATXTDDSP     ...THEN WE CAN'T ADD ANOTHER ONE!          
*                                                                               
         TM    0(R1),X'80'         EOL?                                         
         BO    DYNLST              YES                                          
         LA    RF,4(RF)            NO: MOVE IN A(NEXT TEXT UNIT)                
         BCT   R0,DYND20                                                        
         DC    H'0'                INCREASE MAXUTEXT                            
         EJECT                                                                  
***********************************************************************         
*BUILD TEXT ELEMENTS FOR SYSOUT DD CARD                                         
***********************************************************************         
DYNS     LA    R1,TXTSYSO          SET UP POINTER TO SYSOUT TEXT                
         ST    R1,ATXTSYSO                                                      
         MVC   0(2,R1),=AL2(DALSYSOU) SET SYSOUT TEXT CODE                      
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVC   6(1,R1),0(R2)       SET SYSOUT CLASS                             
*                                                                               
         LA    R1,TXTRECL          SET UP POINTER TO LRECL TEXT                 
         ST    R1,ATXTRECL                                                      
         MVC   0(2,R1),=AL2(DALLRECL) SET LRECL TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0002'                                                 
         MVC   6(2,R1),=H'80'      SET 80 BYTE RECORDS                          
*                                                                               
         LA    R1,TXTRECF          SET UP POINTER TO RECFM TEXT                 
         ST    R1,ATXTRECF                                                      
         MVC   0(2,R1),=AL2(DALRECFM) SET RECFM TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'80'         SET FIXED LEN                                
*                                                                               
         LA    R1,TXTNODE          SET UP POINTER TO NODEID TEXT                
         ST    R1,ATXTNODE                                                      
         MVC   0(2,R1),=AL2(DALSUSER) SET NODEID TEXT CODE                      
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(8,R1),1(R2)                                                    
         LA    RF,6(R1)            FIND LEN OF NODEID                           
         MVI   8(RF),C' '                                                       
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN NODE TEXT HEADER                  
*                                                                               
         LA    R1,TXTUSER          SET UP POINTER TO USERID TEXT                
         ST    R1,ATXTUSER                                                      
         MVC   0(2,R1),=AL2(DALUSRID)   SET USERID TEXT CODE                    
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(8,R1),9(R2)                                                    
         LA    RF,6(R1)            FIND LEN OF USERID                           
         MVI   8(RF),C' '                                                       
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN USER TEXT HEADER                  
*                                                                               
         OI    ATXTSX,X'80'        SET END OF LIST                              
         B     DYNLST                                                           
         EJECT                                                                  
***********************************************************************         
*BUILD TEXT ELEMENTS FOR SYSOUT TYPE 2 DD CARD                                  
***********************************************************************         
DYNST2   LA    R1,TXTSYSO          SET UP POINTER TO SYSOUT TEXT                
         ST    R1,ATXTSYS2                                                      
         MVC   0(2,R1),=AL2(DALSYSOU) SET SYSOUT TEXT CODE                      
         XC    2(2,R1),2(R1)       ASSUME DEFAULT SYSOUT CLASS                  
         CLI   0(R2),C' '          USE DEFAULT SYSOUT CLASS?                    
         BE    DYNST2E             YES                                          
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVC   6(1,R1),0(R2)       SET SYSOUT CLASS                             
*                                                                               
DYNST2E  DS    0H                                                               
         LA    R1,TXTNODE          SET UP POINTER TO NODEID TEXT                
         ST    R1,ATXTNOD2                                                      
         MVC   0(2,R1),=AL2(DALSUSER) SET NODEID TEXT CODE                      
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(8,R1),1(R2)                                                    
         LA    RF,6(R1)            FIND LEN OF NODEID                           
         MVI   8(RF),C' '                                                       
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN NODE TEXT HEADER                  
         MVC   HALF,=AL2(DALUSRID) ASSUME WE'LL HAVE A USERID                   
         CLC   =C'        ',1(R2)  IS NODEID GIVEN?                             
         BNE   *+16                                                             
         XC    ATXTNOD2,ATXTNOD2   NO: DON'T PASS THIS TEXT UNIT                
         MVC   HALF,=AL2(DALSPGNM) AND USE WRITER NAME INSTEAD                  
*                                                                               
         LA    R1,TXTUSER          SET UP POINTER TO USERID TEXT                
         ST    R1,ATXTUSE2                                                      
         MVC   0(2,R1),HALF        SET TEXT UNIT DEPENDING ON NODEID            
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(8,R1),9(R2)                                                    
         LA    RF,6(R1)            FIND LEN OF USERID                           
         MVI   8(RF),C' '                                                       
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN USER TEXT HEADER                  
         CLC   =C'        ',9(R2)  IS USERID GIVEN?                             
         BNE   *+10                                                             
         XC    ATXTUSE2,ATXTUSE2   NO: DON'T PASS THIS TEXT UNIT                
*                                                                               
         LA    R1,TXTUNAL          SET UP POINTER TO UNALLOCATE TEXT            
         ST    R1,ATXTUNA2                                                      
         XC    0(2,R1),0(R1)       ASSUME NO FREE=CLOSE                         
         TM    SAVEPL+4,X'80'      INHIBIT FREE=CLOSE?                          
         BO    *+10                YES                                          
         MVC   0(2,R1),=AL2(DALCLOSE)    SET UNALLOCATE TEXT CODE               
         XC    2(2,R1),2(R1)                                                    
*                                                                               
         CLC   =C'    ',17(R2)     IS FORM CODE GIVEN?                          
         BNE   *+12                                                             
         OI    ATXTSX2,X'80'       NO -- SET END OF LIST                        
         B     DYNLST                                                           
*                                                                               
         LA    R1,TXTFORM          SET UP POINTER TO FORM NUMBER TEXT           
         ST    R1,ATXTFORM                                                      
         MVC   0(2,R1),=AL2(DALSFMNO)   SET FORM NUMBER TEXT CODE               
         MVC   2(2,R1),=X'0001'                                                 
         MVC   6(4,R1),17(R2)      SET FORM NUMBER                              
         LA    RF,6(R1)            FIND LEN OF FORM CODE                        
         MVI   4(RF),C' '                                                       
         CLI   0(RF),C' '                                                       
         BE    *+12                                                             
         LA    RF,1(RF)                                                         
         B     *-12                                                             
         LA    RE,6(R1)                                                         
         SR    RF,RE                                                            
         STH   RF,4(R1)            SET LEN IN FORM TEXT HEADER                  
*                                                                               
         OI    ATXTSX2A,X'80'      SET END OF LIST                              
         B     DYNLST                                                           
         EJECT                                                                  
***********************************************************************         
*INVOKE SVC 99 TO DYNAMICALLY ALLOCATE DD CARD                                  
***********************************************************************         
DYNLST   LA    R1,ARBLK                                                         
         LR    R5,R1               R5=A(REQ BLK IN DUMP)                        
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,RBLKS99X                                                      
         DYNALLOC                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         LTR   RF,RF               TEST FOR ERRORS                              
         BZ    DYNX                NO                                           
*                                                                               
         MVI   MYWORK,C' '                                                      
         MVC   MYWORK+1(L'MYWORK-1),MYWORK                                      
         MVC   MYWORK(2),=AL2(L'MYWORK-2)                                       
         MVC   MYWORK+2(9),=C'DISP=OLD '                                        
         CLI   TXTDISP+6,X'01'     DISP=OLD?                                    
         BE    *+10                                                             
         MVC   MYWORK+2(9),=C'DISP=SHR '                                        
         CLI   TXTDISP+6,X'04'     DISP=NEW                                     
         BNE   *+10                                                             
         MVC   MYWORK+2(9),=C'DISP=NEW '                                        
         MVC   MYWORK+11(23),=C'ALLOCATION FAILURE FOR '                        
         LLC   R1,TXTDSN+5         2ND BYTE OF 2-BYTE LENGTH FIELD              
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   MYWORK+34(0),TXTDSN+6  PUT DSN IN MESSAGE                        
         LA    R4,MYWORK                                                        
         WTO   TEXT=(R4)                                                        
*                                                                               
         CLI   TXTDISP+6,X'01'     DISP=OLD?                                    
         BNE   DYNLST5             NO, DON'T RETRY                              
         CHI   R6,4                ALLOC FAILED DUE TO FILE IN USE?             
         BNE   DYNLST5                                                          
*                                  RETURN CODE=4, THEN RETRY                    
         XC    ECBAD,ECBAD                                                      
         XC    REPLY,REPLY                                                      
         LA    R3,ECBAD                                                         
         LA    R4,REPLY                                                         
         WTOR  'RETRY OR CANCEL',(R4),1,(R3),ROUTCDE=(1)                        
         WAIT  ECB=ECBAD                                                        
         CLI   REPLY,C'R'                                                       
         BE    DYNLST                                                           
         ABEND 990                 FILE IS INUSE NO DUMP                        
*                                                                               
DYNLST5  CLI   ABENDFLG,C'Y'       CALLER WANTS TO AVOID ABEND?                 
         BE    DIE                                                              
         L     R1,SAVER1           YES -- RETURN RBLKERR/RBLKINFO IN P4         
         ST    R7,12(R1)                                                        
         B     DYNX                AVOID ABEND                                  
*                                                                               
DIE      ABEND 990,DUMP            ABEND IF ALLOCATION FAILURE                  
*                                                                               
DYNX     XMOD1 1                                                                
         EJECT                                                                  
***********************************************************************         
* PERFORM A DYNAMIC INFORMATION RETRIEVAL, REQUESTING THE TYPE                  
* SPECIFICATION FOR THE GIVEN DDNAME. IF THIS COMPLETES WITHOUT ERROR,          
* THEN THE DDNAME IS ALREADY ALLOCATED. THIS CHECK OBVIATES THE NEED            
* TO ATTEMPT A DYNAMIC ALLOCATION LATER ON THAT CANNOT SUCCEED.                 
*                                                                               
***********************************************************************         
CHKALLOC NTR1                                                                   
         XC    INFRBLK,INFRBLK     DYNAMIC INFORMATION RETRIEVAL BLOCK          
         USING S99RB,R4                                                         
         LA    R4,INFRBLK                                                       
         ST    R4,AINFRBLK         A(INFORMATION RETRIEVAL BLOCK)               
         MVI   AINFRBLK,X'80'      EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBIN    INFORMATION RETRIEVAL VERB CODE              
         LA    RF,AINFRTXT         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
*                                                                               
         LA    RF,TXTIDDN          A(DDNAME TEXT UNIT)                          
         ST    RF,AINFRTXT                                                      
         LA    RF,TXTITYPE         A(TYPE SPECIFICATION TEXT UNIT)              
         ST    RF,AINFRTXT+4                                                    
         MVI   AINFRTXT+4,X'80'    EOL MARKER                                   
*                                                                               
         MVC   TXTIDDN(2),=AL2(DINDDNAM)  DDNAME TEXT UNIT                      
         MVC   TXTIDDN+2(2),=X'0001'                                            
         MVC   TXTIDDN+4(2),DDNAMELN                                            
         MVC   TXTIDDN+6(8),DDNAME                                              
         MVC   TXTITYPE(2),=AL2(DINRTTYP) TYPE SPECIFICATION TEXT UNIT          
         MVC   TXTITYPE+2(5),=X'0001000100'                                     
*                                                                               
         LA    R1,AINFRBLK         A(DYNAMIC INF. RETRIEVAL BLOCK)              
         DYNALLOC                                                               
         LTR   RF,RF               ANY ERRORS?                                  
         BZ    YES                 NO: DDNAME IS ALREADY ALLOCATED              
         CHI   RF,4                RETURN CODE OF 4?                            
         BNE   *+14                NO: OTHER RETURN CODES UNACCEPTABLE          
         CLC   S99ERROR,=X'0438'   'DDNAME NOT FOUND' ERROR?                    
         BE    NO                  YES: RETURN CC NOT EQUAL                     
         ABEND 992,DUMP            NO: OTHER REASON CODES UNACCEPTABLE          
         DROP  R4                                                               
*                                                                               
         ANSR                                                                   
         EJECT                                                                  
***********************************************************************         
* PERFORM A DYNAMIC INFORMATION RETRIEVAL, REQUESTING THE DSN FOR THE           
* GIVEN DDNAME. IF THIS COMPLETES WITHOUT ERROR, RETURN THE DSN AND             
* THE LENGTH OF THE DSN. OTHERWISE, RETURN A DSN LENGTH OF ZERO.                
*                                                                               
***********************************************************************         
GETDSN   NTR1                                                                   
         L     R3,SAVER1           CALLER'S R1                                  
         MVI   4(R3),0             ASSUME DDNAME NOT ALLOCATED                  
*                                   (RETURN DSN LENGTH OF ZERO)                 
*                                                                               
         XC    INFRBLK,INFRBLK     DYNAMIC INFORMATION RETRIEVAL BLOCK          
         USING S99RB,R4                                                         
         LA    R4,INFRBLK                                                       
         ST    R4,AINFRBLK         A(INFORMATION RETRIEVAL BLOCK)               
         MVI   AINFRBLK,X'80'      EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBIN    INFORMATION RETRIEVAL VERB CODE              
         LA    RF,AINFRTXT         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
*                                                                               
         LA    RF,TXTIDDN          A(DDNAME TEXT UNIT)                          
         ST    RF,AINFRTXT                                                      
         LA    RF,TXTIDSN          A(DSN TEXT UNIT)                             
         ST    RF,AINFRTXT+4                                                    
         MVI   AINFRTXT+4,X'80'    EOL MARKER                                   
*                                                                               
         MVC   TXTIDDN(2),=AL2(DINDDNAM)  DDNAME TEXT UNIT                      
         MVC   TXTIDDN+2(2),=X'0001'                                            
         MVC   TXTIDDN+4(2),DDNAMELN                                            
         MVC   TXTIDDN+6(8),DDNAME                                              
         MVC   TXTIDSN(2),=AL2(DINRTDSN)  DSN SPECIFICATION TEXT UNIT           
         MVC   TXTIDSN+2(4),=X'0001002C'                                        
         XC    TXTIDSN+6(44),TXTIDSN+6                                          
*                                                                               
         LA    R1,AINFRBLK         A(DYNAMIC INF. RETRIEVAL BLOCK)              
         DYNALLOC                                                               
         LTR   RF,RF               ANY ERRORS?                                  
         BNZ   GETDSN10            YES: ANALYZE                                 
*                                                                               
         MVC   4(1,R3),TXTIDSN+5   RETURNED L'DSN                               
         SR    RF,RF                                                            
         ICM   RF,7,5(R3)          A(CALLER'S AREA TO RETURN DSN)               
         MVC   0(44,RF),TXTIDSN+6  RETURNED DSN                                 
         B     GETDSNX                                                          
*                                                                               
GETDSN10 CHI   RF,4                RETURN CODE OF 4?                            
         BNE   *+14                NO: OTHER RETURN CODES UNACCEPTABLE          
         CLC   S99ERROR,=X'0438'   'DDNAME NOT FOUND' ERROR?                    
         BE    GETDSNX             YES: OK                                      
         ABEND 992,DUMP            NO: OTHER REASON CODES UNACCEPTABLE          
         DROP  R4                                                               
*                                                                               
GETDSNX  XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* ALLOCATE A HFS FILE                                                           
***********************************************************************         
HFSALLOC NTR1                                                                   
         L     R3,SAVER1           CALLER'S R1                                  
         TM    8(R3),X'08'         DYNALLOC SHOULD PROVIDE DDNAME?              
         BO    *+12                YES: IT WILL BE SYSTEM-DERIVED               
         BAS   RE,CHKALLOC         IS THE DDNAME ALREADY ALLOCATED?             
         BE    HFSAX               YES: DON'T ATTEMPT THE ALLOCATION            
*                                                                               
         XC    RBLK,RBLK                                                        
         USING S99RB,R4                                                         
         LA    R4,RBLK                                                          
         ST    R4,ARBLK            A(REQUEST BLOCK)                             
         OI    ARBLK,X'80'         EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBAL    VERB CODE FOR ALLOCATION                     
         LA    RF,ATXT2            A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         TM    8(R3),X'04'         WTO *ALL* MESSAGES?                          
         BNO   *+8                                                              
         MVI   S99EMGSV-S99RBX(RF),S99XINFO   YES                               
         ST    RF,S99S99X                                                       
*                                                                               
         LA    RF,TXTDD            A(DDNAME TEXT UNIT)                          
         ST    RF,ATXTDD                                                        
         LA    RF,TXTPATH          A(HFS FILE PATHNAME TEXT UNIT)               
         ST    RF,ATXTPATH                                                      
         LA    RF,TXTPOPT          A(HFS FILE OPTIONS TEXT UNIT)                
         ST    RF,ATXTPOPT                                                      
         LA    RF,TXTPMDE          A(HFS FILE MODES TEXT UNIT)                  
         ST    RF,ATXTPMDE                                                      
*                                                                               
         MVC   BYTE,8(R3)                                                       
         MVC   PATHOPT,=A(SJVLRDWR)       ASSUME PATHOPTS=ORDWR                 
         TM    BYTE,X'10'                                                       
         BNO   *+10                                                             
         MVC   PATHOPT,=A(SJVLRDON)       NO: PATHOPTS=ORDONLY                  
         TM    BYTE,X'20'                                                       
         BNO   *+8                                                              
         OI    PATHOPT+3,SJVLCREA         OCREAT                                
*                                                                               
         TM    BYTE,X'FF'-X'20'    OTHER HFS BITS SET BESIDES OCREAT ?          
         BNZ   *+12                                                             
         MVI   ATXTPMDE,X'80'      EOL MARKER                                   
         B     HFSA20                                                           
*                                                                               
         MVC   TXTFDAT(2),=AL2(DALFDAT)   HFS FILE ORG TEXT UNIT                
         MVC   TXTFDAT+2(4),=X'00010001'                                        
         TM    BYTE,X'80'                 BINARY?                               
         BNO   *+8                                                              
         OI    TXTFDAT+6,SJVLBIN                                                
         TM    BYTE,X'40'                 TEXT?                                 
         BNO   *+8                                                              
         OI    TXTFDAT+6,SJVLTEXT                                               
         LA    RF,TXTFDAT          A(HFS FILE ORG TEXT UNIT)                    
         ST    RF,ATXTFDAT                                                      
*                                                                               
         SR    R2,R2                                                            
         ICM   R2,7,9(R3)          A(DCB) OR 0                                  
         BNZ   *+12                                                             
         MVI   ATXTFDAT,X'80'      EOL MARKER                                   
         B     HFSA20                                                           
*                                                                               
         USING IHADCB,R2                                                        
         LA    R1,TXTRECF          SET UP POINTER TO RECFM TEXT                 
         ST    R1,ATXTRCFM                                                      
         MVC   0(2,R1),=AL2(DALRECFM) SET RECFM TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVC   6(1,R1),DCBRECFM                                                 
*                                                                               
         LA    R1,TXTRECL          SET UP POINTER TO LRECL TEXT                 
         ST    R1,ATXTLREC                                                      
         MVC   0(2,R1),=AL2(DALLRECL) SET LRECL TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0002'                                                 
         MVC   6(2,R1),DCBLRECL                                                 
*                                                                               
         LA    R1,TXTBLKSZ         SET UP POINTER TO BLKSIZE TEXT               
         ST    R1,ATXTBKSZ                                                      
         MVC   0(2,R1),=AL2(DALBLKSZ) SET BLKSIZE TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0002'                                                 
         MVC   6(2,R1),DCBBLKSI                                                 
*                                                                               
         MVI   ATXTBKSZ,X'80'      EOL MARKER                                   
         DROP  R2                                                               
*                                                                               
HFSA20   DS    0H                                                               
         TM    BYTE,X'08'          DYNALLOC SHOULD PROVIDE DDNAME?              
         BZ    HFSA30              NO: CALLER PROVIDED DDNAME                   
         MVC   TXTDD(2),=AL2(DALRTDDN)    DYNALLOC PROVIDES DDNAME              
         MVC   TXTDD+2(2),=X'0001'                                              
         MVC   TXTDD+4(2),=X'0008'                                              
         B     HFSA40                                                           
*                                                                               
HFSA30   DS    0H                                                               
         MVC   TXTDD(2),=AL2(DALDDNAM)    DDNAME TEXT UNIT                      
         MVC   TXTDD+2(2),=X'0001'                                              
         MVC   TXTDD+4(2),DDNAMELN                                              
         MVC   TXTDD+6(8),DDNAME                                                
*                                                                               
HFSA40   DS    0H                                                               
         MVC   TXTPATH(2),=AL2(DALPATH)   HFS FILE PATHNAME TEXT UNIT           
         MVC   TXTPATH+2(2),=X'0001'                                            
         MVI   TXTPATH+4,X'00'                                                  
         MVC   TXTPATH+5(1),4(R3)         HFS FILE PATHNAME LENGTH              
*                                                                               
         ZIC   R1,4(R3)                                                         
         SR    RE,RE                                                            
         ICM   RE,7,5(R3)                                                       
*                                                                               
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   TXTPATH+6(0),0(RE)         HFS FILE PATHNAME                     
*                                                                               
         MVC   TXTPOPT(2),=AL2(DALPOPT)   HFS FILE OPTION TEXT UNIT             
         MVC   TXTPOPT+2(4),=X'00010004'                                        
         MVC   TXTPOPT+6(4),PATHOPT                                             
*                                                                               
         MVC   TXTPMDE(2),=AL2(DALPMDE)   HFS FILE MODE TEXT UNIT               
         MVC   TXTPMDE+2(4),=X'00010004'                                        
*                                         SIRWXU,SIRWXG,SIRWXO                  
         MVC   TXTPMDE+6(4),=A(SJVLRWXU+SJVLRWXG+SJVLRWXO)                      
*                                                                               
         LA    R1,ARBLK                                                         
         DYNALLOC                                                               
*                                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         LTR   RF,RF               TEST FOR ERRORS                              
         BZ    HFSA100             NO                                           
*                                                                               
         CHI   RF,4                RETURN CODE OF 4?                            
         BNE   HFSA90              NO: OTHER RETURN CODES UNACCEPTABLE          
         CLC   S99ERROR,=X'1708'   CATALOG LOCATE ERROR?                        
         BNE   HFSA90              NO: ABEND                                    
         CLC   S99INFO,=AL2(DALPATH)   PATHNAME ERROR?                          
         BNE   HFSA90              NO: ABEND                                    
*                                                                               
         TM    PATHOPT+3,X'80'     OCREAT?                                      
         BO    HFSA90              YES: ABEND                                   
*                                  NO: MOST LIKELY FILE NOT FOUND               
*RETURN X'20' IN P3, SO THE CALLER CAN TRY AGAIN WITH OCREAT BIT ON.            
         OI    8(R3),X'20'                                                      
         B     HFSA100                                                          
*                                                                               
HFSA90   MVI   MYWORK,C' '                                                      
         MVC   MYWORK+1(L'MYWORK-1),MYWORK                                      
         MVC   MYWORK(2),=AL2(L'MYWORK-2)                                       
         MVC   MYWORK+2(27),=C'HFS ALLOCATION FAILURE FOR '                     
         LLC   R1,TXTPATH+5        2ND BYTE OF 2-BYTE LENGTH FIELD              
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   MYWORK+29(0),TXTPATH+6  PUT DSN IN MESSAGE                       
         LA    R2,MYWORK                                                        
         WTO   TEXT=(R2)                                                        
         ABEND 990,DUMP            ABEND IF ALLOCATION FAILURE                  
         DROP  R4                                                               
*                                                                               
HFSA100  DS    0H                                                               
         TM    BYTE,X'08'          DYNALLOC ASKED TO RETURN DDNAME?             
         BZ    HFSAX               NO                                           
         LA    RE,RBLKRBX          A(REQUEST BLOCK EXTENSION)                   
         OC    S99ESIRC-S99RBX(,RE),S99ESIRC-S99RBX(RE)                         
         BZ    *+6                 S99EERR AND S99EINFO ARE BOTH ZERO?          
         DC    H'0'                NO: DDNAME COULD NOT BE OBTAINED!            
         SR    RE,RE               RETURN OBTAINED DDNAME TO CALLER             
         ICM   RE,7,1(R3)          A(DDNAME PARAMETER)                          
         XC    0(8,RE),0(RE)       CLEAR CALLER'S DDNAME AREA                   
         OC    TXTDD+4(2),TXTDD+4                                               
         BNZ   *+6                                                              
         DC    H'0'                NO L'DDNAME RETURNED FROM SVC99 ???          
         ZIC   R1,TXTDD+5          L'RETURNED DDNAME (LOW-ORDER BYTE)           
         BCTR  R1,0                RETURN *DECREMENTED* LENGTH!                 
         ZIC   R0,8(R3)            HOB OF CALLER'S P3                           
         OR    R0,R1               "OR" LOW-ORDER NIBBLE                        
         STC   R0,8(R3)            RETURN (L'DDNAME-1) TO CALLER                
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),TXTDD+6     PUT RETURNED DDNAME IN P1 ADDRESS            
*                                                                               
HFSAX    XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* ALLOCATE A PANVALET LIBRARY MEMBER                                            
***********************************************************************         
PANALLOC NTR1  ,                                                                
*                                                                               
         L     R3,SAVER1           CALLER'S PARAMETER LIST                      
*                                                                               
         XC    RBLK,RBLK                                                        
         USING S99RB,R4                                                         
         LA    R4,RBLK                                                          
         ST    R4,ARBLK            A(REQUEST BLOCK)                             
         OI    ARBLK,X'80'         EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBAL    VERB CODE FOR ALLOCATION                     
         LA    RF,ATXT2            A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,S99S99X                                                       
*                                                                               
         LA    R1,TXTDD            A(DDNAME TEXT UNIT)                          
         ST    R1,ATXTDD                                                        
         MVC   TXTDD(2),=AL2(DALDDNAM)    DDNAME TEXT UNIT                      
         MVC   TXTDD+2(2),=X'0001'                                              
         MVC   TXTDD+4(2),DDNAMELN                                              
         MVC   TXTDD+6(8),DDNAME                                                
*                                                                               
         LA    R1,TXTDISP          SET UP POINTER TO DISP TEXT                  
         ST    R1,ATXTDISP                                                      
         MVC   0(2,R1),=AL2(DALSTATS)    SET DISP TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVI   6(R1),X'08'         SET DISP=SHR CODE                            
*                                                                               
         LA    R1,TXTDSN           SET UP POINTER TO DSN TEXT                   
         ST    R1,ATXTDSN                                                       
         MVC   0(2,R1),=AL2(DALDSNAM)   SET DSN TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         L     RF,4(R3)            A(DSN)                                       
         LHI   R0,44               CALLER MUST PASS 44 CHR AREA                 
         CLI   0(RF),C' '                                                       
         BE    *+12                NAME ENDS WITH SPACE                         
         LA    RF,1(RF)                                                         
         BCT   R0,*-12                                                          
         SR    RE,RE                                                            
         ICM   RE,B'0111',5(R3)    A(DSN)                                       
         SR    RF,RE                                                            
         STH   RF,4(R1)            SAVE LEN IN TEXT BLOCK                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,R1),0(RE)       MOVE DSN TO TEXT BLOCK                       
*                                                                               
         LA    R1,TXTSUBSYS_NAME   A(TEXT UNIT)                                 
         ST    R1,ATXTSBSN                                                      
         MVC   TXTSUBSYS_NAME(2),=AL2(DALSSNM)  SUBSYS NAME                     
         MVC   TXTSUBSYS_NAME+2(4),=AL2(1,4)    NAME IS ALWAYS 'PANV'           
         MVC   TXTSUBSYS_NAME+6(4),=C'PANV'     PANVALET SUBSYSTEM              
*                                                                               
         LA    R1,TXTSUBSYS_PARM   A(TEXT UNIT)                                 
         ST    R1,ATXTSBSP                                                      
         MVC   TXTSUBSYS_PARM(2),=AL2(DALSSPRM) SUBSYS PARM                     
         MVC   TXTSUBSYS_PARM+2(6),=AL2(2,0,10)                                 
         L     RF,8(R3)            A(PANVALET MEMBER NAME)                      
         MVC   TXTSUBSYS_PARM+8(10),0(RF) CALLER MUST PASS 10-CHAR NAME         
*                                                                               
         OI    ATXTLST4,X'80'      SET END OF TEXT POINTER LIST                 
*                                                                               
         LA    R1,ARBLK                                                         
         LR    R5,R1               R5=A(REQ BLK IN DUMP)                        
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,RBLKS99X                                                      
         DYNALLOC ,                                                             
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         LTR   RF,RF               ANY ERRORS?                                  
         JNZ   *+2                 YES: FATAL                                   
*                                                                               
         XIT1  ,                                                                
         EJECT                                                                  
***********************************************************************         
* UNALLOCATE BY DDNAME                                                          
***********************************************************************         
DDUNALLO NTR1                                                                   
*                                                                               
         L     R3,SAVER1           CALLER'S PARAMETER LIST                      
*                                                                               
         XC    UNRBLK,UNRBLK                                                    
         USING S99RB,R4                                                         
         LA    R4,UNRBLK                                                        
         ST    R4,AUNRBLK          A(REQUEST BLOCK)                             
         OI    AUNRBLK,X'80'       EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBUN    VERB CODE FOR UNALLOCATION                   
         LA    RF,ATXTUNDD         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         CLC   =C'INFO',4(R3)      WTO *ALL* MESSAGES?                          
         BNE   *+8                                                              
         MVI   S99EMGSV-S99RBX(RF),S99XINFO   YES                               
         ST    RF,S99S99X                                                       
*                                                                               
         LA    RF,TXTUNDD          A(DDNAME TEXT UNIT)                          
         ST    RF,ATXTUNDD                                                      
         MVI   ATXTUNDD,X'80'      LAST (AND ONLY) TEXT UNIT                    
*                                                                               
         MVC   TXTUNDD(2),=AL2(DUNDDNAM)    DDNAME TEXT UNIT                    
         MVC   TXTUNDD+2(2),=X'0001'                                            
         MVC   TXTUNDD+4(2),DDNAMELN                                            
         MVC   TXTUNDD+6(8),DDNAME                                              
*                                                                               
         LA    R1,AUNRBLK         DYNAMIC UNALLOCATION PARAMETER BLOCK          
         DYNALLOC                                                               
*                                                                               
         ST    RF,4(R3)            PASS RETURN CODE BACK TO CALLER              
         DROP  R4                                                               
         XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* DUMMY ALLOCATION                                                              
***********************************************************************         
DUMMYALO NTR1                                                                   
*                                                                               
         L     R3,SAVER1           CALLER'S PARAMETER LIST                      
*                                                                               
         XC    CORBLK,CORBLK       USE DYNAMIC CONCATENATION AREA               
         USING S99RB,R6                                                         
         LA    R6,CORBLK                                                        
         ST    R6,ACORBLK          A(REQUEST BLOCK)                             
         OI    ACORBLK,X'80'       EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBAL    VERB CODE FOR ALLOCATION                     
         LA    RF,ATXTCONC         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,S99S99X                                                       
*                                                                               
         LA    RF,TXTDCCDD         A(DDNAME LIST TEXT UNIT)                     
         ST    RF,ATXTCCDD                                                      
         MVC   TXTDCCDD(2),=AL2(DALDDNAM)  DDNAME SPECIFICATION                 
         MVC   TXTDCCDD+2(2),=X'0001'  1 DDNAME IN THE LIST                     
         MVC   TXTDCCDD+4(2),DDNAMELN  L'DDNAME                                 
         LH    R1,DDNAMELN                                                      
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   TXTDCCDD+6(0),DDNAME    DDNAME                                   
*                                                                               
         LA    RF,TXTDUMMY                                                      
         ST    RF,ATXTDUMM                                                      
         MVC   TXTDUMMY,=AL2(DALDUMMY)  DUMMY DATA SET ALLOCATION               
         XC    TXTDUMMY+2(2),TXTDUMMY+2 MUST ALWAYS BE ZERO                     
*                                                                               
         TM    4(R3),X'80'         IS A(DCB) PASSED IN P3?                      
         BO    *+12                YES                                          
         MVI   ATXTDUMM,X'80'      EOL MARKER                                   
         B     DUMMYA20            NO                                           
*                                                                               
         SR    R2,R2                                                            
         ICM   R2,7,9(R3)          GET A(DCB)                                   
         USING IHADCB,R2                                                        
         LA    R1,TXTRECF          SET UP POINTER TO RECFM TEXT                 
         ST    R1,ATXTRCFM_DUMMY                                                
         MVC   0(2,R1),=AL2(DALRECFM) SET RECFM TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0001'                                                 
         MVC   6(1,R1),DCBRECFM                                                 
*                                                                               
         LA    R1,TXTRECL          SET UP POINTER TO LRECL TEXT                 
         ST    R1,ATXTLREC_DUMMY                                                
         MVC   0(2,R1),=AL2(DALLRECL) SET LRECL TEXT CODE                       
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0002'                                                 
         MVC   6(2,R1),DCBLRECL                                                 
*                                                                               
         LA    R1,TXTBLKSZ         SET UP POINTER TO BLKSIZE TEXT               
         ST    R1,ATXTBKSZ_DUMMY                                                
         MVC   0(2,R1),=AL2(DALBLKSZ) SET BLKSIZE TEXT CODE                     
         MVC   2(2,R1),=X'0001'                                                 
         MVC   4(2,R1),=X'0002'                                                 
         MVC   6(2,R1),DCBBLKSI                                                 
*                                                                               
         MVI   ATXTBKSZ_DUMMY,X'80'      EOL MARKER                             
         DROP  R2                                                               
*                                                                               
DUMMYA20 DS    0H                                                               
         LA    R1,ACORBLK          DYNAMIC CONCATENATION PARAM. BLOCK           
         DYNALLOC                                                               
*                                                                               
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         SR    R8,R8                                                            
         ICM   R8,3,S99ERROR       R8=S99ERROR IN DUMP                          
         DROP  R6                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
         ST    R6,4(R3)            PUT RETURN CODE IN P2                        
*                                                                               
         XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* DYNAMIC CONCATENATION                                                         
***********************************************************************         
CONCAT   NTR1                                                                   
         L     R3,SAVER1           CALLER'S PARAMETER LIST                      
         TM    4(R3),X'80'         CALLER WANTS TO AVOID ABEND?                 
         BZ    *+8                                                              
         MVI   ABENDFLG,C'N'       YES                                          
*                                                                               
         MVI   PERMCAT,C'Y'        DEFAULT IS TO REQUEST THE                    
*                                   PERMANENTLY CONCATENATED ATTRIBUTE          
         TM    4(R3),X'40'         INHIBIT PERMANENT CONCATENATION?             
         BZ    *+8                                                              
         MVI   PERMCAT,C'N'        YES                                          
*                                                                               
         NI    4(R3),X'FF'-X'C0'   RESET PARAMETER BITS                         
         L     R3,4(R3)            A(SECONDARY DDNAME)                          
*                                                                               
         XC    CORBLK,CORBLK                                                    
         USING S99RB,R6                                                         
         LA    R6,CORBLK                                                        
         ST    R6,ACORBLK          A(REQUEST BLOCK)                             
         OI    ACORBLK,X'80'       EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBCC    VERB CODE FOR CONCATENATION                  
         LA    RF,ATXTCONC         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,S99S99X                                                       
*                                                                               
         LA    RF,TXTDCCDD         A(DDNAME LIST TEXT UNIT)                     
         ST    RF,ATXTCCDD                                                      
         MVC   TXTDCCDD(2),=AL2(DCCDDNAM)  DDNAME SPECIFICATION                 
         MVC   TXTDCCDD+2(2),=X'0002'  2 DDNAMES IN THE LIST                    
*                                                                               
         MVC   TXTDCCDD+4(2),DDNAMELN      L'FIRST DDNAME                       
         LH    R1,DDNAMELN                                                      
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   TXTDCCDD+6(0),DDNAME        FIRST DDNAME                         
         LA    R2,TXTDCCDD+6+1(R1)         R2 = A(NEXT DDNAME ENTRY)            
*                                                                               
         LHI   R1,L'DDNAME         COUNT SIGNIFICANT CHARS IN DDNAME            
         LA    RF,L'DDNAME-1(R3)   A(LAST BYTE OF SECONDARY DDNAME)             
         CLI   0(RF),C' '          SCAN BACKWARDS FOR LAST CHARACTER            
         BH    *+12                GOT IT: R1 = NO. OF CHARS IN DDNAME          
         BCTR  RF,0                NOT YET: BACK UP ONE CHARACTER               
         BCT   R1,*-10             DECREMENT LENGTH AND TRY AGAIN               
         DC    H'0'                NO SECONDARY DDNAME SPECIFIED                
         STH   R1,0(R2)            SAVE NUMBER OF CHARS IN DDNAME               
*                                                                               
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   2(0,R2),0(R3)       SECONDARY DDNAME                             
*                                                                               
         LA    RF,TXTDCCPE         SET A(PERMANENTLY CONC. TEXT)                
         ST    RF,ATXTDCPE                                                      
         MVI   ATXTDCPE,X'80'      LAST TEXT UNIT                               
         MVC   TXTDCCPE(2),=AL2(DCCPERMC)  PERMANENTLY CONCATENATED             
         CLI   PERMCAT,C'N'        CALLER WANTS TO INHIBIT THIS?                
         BNE   *+10                                                             
         XC    TXTDCCPE(2),TXTDCCPE  YES: REMOVE THE TEXT UNIT                  
         XC    TXTDCCPE+2(2),TXTDCCPE+2                                         
*                                                                               
         LA    R1,ACORBLK          DYNAMIC CONCATENATION PARAM. BLOCK           
         DYNALLOC                                                               
*                                                                               
         LTR   RF,RF               SUCCESSFUL CONCATENATION?                    
         BZ    CONCATX             YES                                          
*                                                                               
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         SR    R8,R8                                                            
         ICM   R8,3,S99ERROR       R8=S99ERROR IN DUMP                          
         DROP  R6                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
*                                                                               
         CLI   ABENDFLG,C'Y'       AVOID ABEND WHEN TIOT IS FULL?               
         BE    CONCAT50            NO                                           
*                                                                               
         CHI   R8,X'0238'          TIOT IS FULL?                                
         BNE   CONCAT50            NO: ABEND                                    
         L     R3,SAVER1           YES: SET RETURN FLAG FOR CALLER              
         OI    4(R3),X'80'                                                      
         B     CONCATX             ...AND DON'T ABEND                           
*                                                                               
CONCAT50 DS    0H                                                               
         ABEND 993,DUMP            DYNAMIC CONCATENATION FAILURE                
*                                                                               
CONCATX  XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* DYNAMIC DECONCATENATION                                                       
***********************************************************************         
DECONCAT NTR1                                                                   
*                                                                               
         L     R3,SAVER1           CALLER'S PARAMETER LIST                      
         XC    8(8,R3),8(R3)       CLEAR P3 AND P4 (ASSUME NO ERROR)            
         TM    4(R3),X'80'         CALLER WANTS TO AVOID ABEND?                 
         BZ    *+8                                                              
         MVI   ABENDFLG,C'N'       YES                                          
*                                                                               
         XC    UNRBLK,UNRBLK                                                    
         USING S99RB,R6                                                         
         LA    R6,UNRBLK                                                        
         ST    R6,AUNRBLK          A(REQUEST BLOCK)                             
         OI    AUNRBLK,X'80'       EOL MARKER                                   
*                                                                               
         MVI   S99RBLN,20          L'BLOCK                                      
         MVI   S99VERB,S99VRBDC    VERB CODE FOR DECONCATENATION                
         LA    RF,ATXTUNDD         A(TEXT UNITS)                                
         ST    RF,S99TXTPP                                                      
         LA    RF,RBLKRBX          REQUEST BLOCK EXTENSION                      
         ST    RF,S99S99X                                                       
*                                                                               
         LA    RF,TXTUNDD          A(DDNAME TEXT UNIT)                          
         ST    RF,ATXTUNDD                                                      
         MVI   ATXTUNDD,X'80'      LAST (AND ONLY) TEXT UNIT                    
*                                                                               
         MVC   TXTUNDD(2),=AL2(DDCDDNAM)  DDNAME SPECIFICATION                  
         MVC   TXTUNDD+2(2),=X'0001'  1 DDNAME IN THE LIST                      
         MVC   TXTUNDD+4(2),DDNAMELN  L'DDNAME                                  
         MVC   TXTUNDD+6(8),DDNAME    DDNAME                                    
*                                                                               
         LA    R1,AUNRBLK          DYNAMIC DECONCATENATION PARAM. BLOCK         
         DYNALLOC                                                               
*                                                                               
         LTR   RF,RF               SUCCESSFUL DECONCATENATION?                  
         BZ    DECONX              YES                                          
*                                                                               
         L     R7,RBLKERR          R7=RBLKERR/RBLKINFO IN DUMP                  
         SR    R8,R8                                                            
         ICM   R8,3,S99ERROR       R8=S99ERROR IN DUMP                          
         DROP  R6                                                               
         LR    R6,RF               R6=RETURN CODE IN DUMP                       
*                                                                               
         CLI   ABENDFLG,C'Y'       AVOID ABEND?                                 
         BE    DECON10             NO                                           
         STCM  RF,3,8(R3)          RETURN CODE IN P3 (HIGH HALFWORD)            
         STCM  R8,3,10(R3)         ERROR CODE IN P3 (LOW HALFWORD)              
         ST    R7,12(R3)           RBLKERR/RBLKINFO IN P4                       
         B     DECONX                                                           
*                                                                               
DECON10  DS    0H                                                               
         ABEND 994,DUMP            DYNAMIC DECONCATENATION FAILURE              
*                                                                               
DECONX   XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* DIFFERENT OPTIONS                                                             
***********************************************************************         
UTAPE    EQU   X'00'               EQUATES FOR UNIT TYPES                       
USYSDA   EQU   X'80'                                                            
UVIO     EQU   X'40'                                                            
*              X'20'               AVAILABLE                                    
*              X'10'               AVAILABLE                                    
USPLT    EQU   X'08'                                                            
UNOCOMP  EQU   X'04'                                                            
UVTS     EQU   X'02'                                                            
UVTSPLT  EQU   X'01'                                                            
UTAPENC  EQU   UTAPE+UNOCOMP                                                    
USPLTNC  EQU   USPLT+UNOCOMP                                                    
USYSOUT2 EQU   X'FD'                                                            
USYSOUT  EQU   X'FE'                                                            
UDISKIN  EQU   X'FF'                                                            
UDISK    EQU   USYSDA+UVIO                                                      
*                                                                               
STRK     EQU   X'80'               EQUATES FOR SPACE TYPES                      
SCYL     EQU   X'40'                                                            
         SPACE 1                                                                
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
*TABLE OF VALID UNIT TYPES                                                      
*+0 = UNIT TYPE EQUATE                                                          
*+1 = L'TYPE DESCRIPTION                                                        
*+3 = TYPE DESCRIPTION                                                          
***********************************************************************         
UNITAB   DS    0CL8                                                             
         DC    AL1(UTAPE),AL2(4),CL5'TAPE'                                      
         DC    AL1(UTAPENC),AL2(4),CL5'TAPE'                                    
         DC    AL1(USYSDA),AL2(5),CL5'SYSDA'                                    
         DC    AL1(UVIO),AL2(3),CL5'VIO'                                        
*&&US*&& DC    AL1(UVTS),AL2(3),CL5'VTS'                                        
*&&US*&& DC    AL1(UVTSPLT),AL2(3),CL5'VTS'                                     
*&&US*&& DC    AL1(USPLT),AL2(4),CL5'TAPE'                                      
*&&UK*&& DC    AL1(USPLT),AL2(4),CL5'3480'                                      
*&&US*&& DC    AL1(USPLTNC),AL2(4),CL5'TAPE'                                    
*&&UK*&& DC    AL1(USPLTNC),AL2(4),CL5'3480'                                    
         DC    X'FF'                                                            
         SPACE 1                                                                
***********************************************************************         
*TABLE OF VALID SPACE TYPES                                                     
*+0 = SPACE TYPE EQUATE                                                         
*+1 = TEXT BLOCK CODE                                                           
***********************************************************************         
SPACETAB DS    0XL3                                                             
         DC    AL1(STRK),AL2(DALTRK)                                            
         DC    AL1(SCYL),AL2(DALCYL)                                            
         DC    X'FF'                                                            
         SPACE 1                                                                
***********************************************************************         
*TABLE OF VALID DCB DSNS                                                        
*+0 = UNIT TYPE EQUATE                                                          
*+1 = L'DSN                                                                     
*+2 = DSN                                                                       
***********************************************************************         
DCBTAB   DS    0CL23                                                            
         DC    AL1(UVTS),AL2(19),CL20'PATTERN.XXXTAPE.DCB'                      
         DC    AL1(UVTSPLT),AL2(20),CL20'PATTERN.XXXSPOOL.DCB'                  
         DC    AL1(UTAPE),AL2(19),CL20'PATTERN.XXXTAPE.DCB'                     
         DC    AL1(USPLT),AL2(20),CL20'PATTERN.XXXSPOOL.DCB'                    
         DC    AL1(UTAPENC),AL2(19),CL20'PATTERN.XXXTAPE.DCB'                   
         DC    AL1(USPLTNC),AL2(20),CL20'PATTERN.XXXSPOOL.DCB'                  
         DC    X'FF'                                                            
         SPACE 1                                                                
SPACETBD DSECT                                                                  
SPACEEQU DS    AL1                 UNIT TYPE                                    
SPACETXT DS    XL2                 TEXT UNIT CODE                               
SPACETBQ EQU   *-SPACETBD                                                       
         SPACE 1                                                                
DCBTABD  DSECT                                                                  
DCBUNIT  DS    AL1                 UNIT TYPE                                    
DCBDSNLN DS    XL2                 L'DSN                                        
DCBDSN   DS    CL20                DSN                                          
DCBTABLQ EQU   *-DCBTABD                                                        
         EJECT                                                                  
WKD      DSECT                                                                  
DUB      DS    D                                                                
SAVER1   DS    F                   CALLER'S R1                                  
SAVEPL   DS    XL24                COPY OF PARAM LIST                           
HALF     DS    H                                                                
DDNAMELN DS    H                   NO OF SIGNIFICANT CHARS IN DDNAME            
DDNAME   DS    CL8                                                              
TYPE1    DS    XL1                 MAIN TYPE OF DDCARD REQUIRED                 
TYPE2    DS    XL1                 SUB TYPE DEPENDS ON MAIN TYPE                
DSNFLAG  DS    XL1                 DSN CONTROL FLAG                             
DISKFLAG DS    XL1                 FLAG FOR DISK OUT DSN IN 3RD PARM            
ABENDFLG DS    C                   CALLER WANTS TO AVOID ABEND                  
PERMCAT  DS    C                   PERMANENT CONCATENATION FLAG                 
BYTE     DS    X                                                                
*                                                                               
MYWORK   DS    CL100                                                            
ECBAD    DS    F                   WTOR FIELDS ECB                              
PATHOPT  DS    XL4                                                              
REPLY    DS    C                                                                
*                                                                               
ACORBLK  DS    A                   A(DYNAMIC CONCATENATION REQUEST BLK)         
*                                   (ALSO USED FOR DUMMY ALLOCATION)            
CORBLK   DS    XL20                DYNAMIC CONCATENATION REQUEST BLOCK          
ATXTCONC DS    0A                  A(TEXT FOR DYNAMIC CONCATENATION)            
ATXTCCDD DS    A                   A(DDNAME LIST TEXT UNIT)                     
ATXTDCPE DS    A                   A(PERMANENTLY CONCATENATED TXT UNIT)         
         ORG   *-4                                                              
ATXTDUMM DS    A                   A(DUMMY DATA SET TXT UNIT)                   
ATXTRCFM_DUMMY DS A                A(RECFM TEXT UNIT)                           
ATXTLREC_DUMMY DS A                A(LRECL TEXT UNIT)                           
ATXTBKSZ_DUMMY DS A                A(BLKSIZE TEXT UNIT)                         
*                                                                               
AUNRBLK  DS    A                   A(DYNAMIC UNALLOCATION BLOCK)                
*                                   (ALSO USED FOR DECONCATENATION)             
UNRBLK   DS    XL20                DYNAMIC UNALLOCATION BLOCK                   
ATXTUNDD DS    A                                                                
TXTUNDD  DS    XL6,CL8             TEXT BLOCK DDNAME UNALLOCATE  0001           
*                                                                               
AINFRBLK DS    A                   A(DYNAMIC INF. RETRIEVAL BLOCK)              
INFRBLK  DS    XL20                DYNAMIC INFORMATION RETRIEVAL BLOCK          
AINFRTXT DS    2A                                                               
TXTIDDN  DS    XL6,CL8             DDNAME TEXT UNIT                             
TXTITYPE DS    XL6,XL1             TYPE SPECIFICATION TEXT UNIT                 
TXTIDSN  DS    XL6,CL44            DSN TEXT UNIT                                
*                                                                               
ARBLK    DS    A                   REQUEST BLOCK POINTER                        
*                                                                               
RBLK     DS    0XL20               REQUEST BLOCK                                
RBLKLEN  DS    XL1                                                              
RBLKVERB DS    XL1                                                              
RBLKFLG1 DS    XL2                                                              
RBLKERR  DS    XL2                                                              
RBLKINFO DS    XL2                                                              
RBLKATXT DS    A                                                                
RBLKS99X DS    A                   A(REQUEST BLOCK EXTENSION)                   
RBLKFLAG DS    XL4                                                              
*                                                                               
ATXT     DS    0A                  TEXT BLOCK POINTERS FOR ALL                  
ATXTUNIT DS    A                                                                
*                                                                               
ATXT2    DS    0A                  TEXT BLOCK POINTERS FOR DISP=SHR             
ATXTDD   DS    A                                                                
*                                                                               
ATXTTAPE DS    0A                  POINTERS FOR DSN ALLOCATION ONLY             
ATXTDSN  DS    A                                                                
ATXTDISP DS    A                                                                
ATXTMBR  DS    A                                                                
ATXTUNA1 DS    A                                                                
         ORG   *-8                                                              
ATXTSBSN DS    A                                                                
ATXTSBSP DS    A                                                                
         ORG   *-4                                                              
ATXTLST4 DS    X                   LAST TEXT BLOCK POINTER FOR DISP=SHR         
         ORG                                                                    
*                                                                               
ATXTOUT  DS    0A                  POINTERS FOR O/P TAPES ONLY                  
ATXTNDSP DS    A                                                                
ATXTCDSP DS    A                                                                
ATXTGEN  DS    A                                                                
*&&US                                                                           
ATXTDCB  DS    A                                                                
*&&                                                                             
ATXTTCH  DS    A                                                                
ATXTUNAL DS    A                                                                
         ORG   *-4                                                              
ATXTLAST DS    A                   LAST TEXT BLOCK POINTER FOR O/P TAPE         
*                                                                               
         ORG   ATXTOUT                                                          
ATXTVSER DS    A                   POINTER FOR I/P TAPES ONLY                   
         ORG   *-4                                                              
ATXTLST3 DS    A                   LAST TEXT BLOCK POINTER FOR I/P TAPE         
*                                                                               
         ORG   ATXTTAPE                                                         
ATXTSPAC DS    A                   POINTERS FOR DISK ALLOCATION ONLY            
ATXTPRI  DS    A                                                                
ATXTSEC  DS    A                                                                
ATXTBUF  DS    A                                                                
ATXTDDSP DS    A                                                                
         ORG   *-4                                                              
ATXTLST2 DS    A                   LAST TEXT BLOCK POINTER FOR DISK             
*                                                                               
ATXTDDSN DS    A                   ADDITIONAL DISKOUT POINTERS                  
ATXTDMBR DS    A                                                                
ATXTDNDS DS    A                                                                
ATXTDCDS DS    A                                                                
         ORG   *-4                                                              
ATXTLST5 DS    A                   LAST TEXT BLOCK POINTER FOR DSN              
ATXTUNA3 DS    A                                                                
         ORG   *-4                                                              
ATXTLST6 DS    A                   LAST TEXT BLOCK POINTER FOR DSN/UNA          
         DS    A                   ROOM FOR RLSE TEXT BLOCK WHEN NEEDED         
         ORG                                                                    
*                                                                               
ATXTS    DS    0A                  TEXT BLOCK POINTERS FOR SYSOUT               
         ORG   ATXT2+4                                                          
ATXTSYSO DS    A                                                                
ATXTRECL DS    A                                                                
ATXTRECF DS    A                                                                
ATXTNODE DS    A                                                                
ATXTUSER DS    A                                                                
         ORG   *-4                                                              
ATXTSX   DS    A                   LAST TEXT BLOCK POINTER FOR SYSOUT           
         ORG                                                                    
*                                                                               
ATXTS2   DS    0A                  TEXT BLOCK POINTERS FOR SYSOUT 2             
         ORG   ATXT2+4                                                          
ATXTSYS2 DS    A                                                                
ATXTNOD2 DS    A                                                                
ATXTUSE2 DS    A                                                                
ATXTUNA2 DS    A                                                                
         ORG   *-4                                                              
ATXTSX2  DS    A                   LAST TEXT BLOCK POINTER FOR SYSOUT 2         
ATXTFORM DS    A                                                                
         ORG   *-4                                                              
ATXTSX2A DS    A                   LAST TEXT BLOCK POINTER FOR SYSOUT 2         
         ORG                                                                    
*                                                                               
ATXTHFS  DS    0A                  TEXT BLOCK POINTERS FOR HFS FILE             
         ORG   ATXT2+4                                                          
ATXTPATH DS    A                   HFS FILE PATHNAME                            
ATXTPOPT DS    A                   HFS FILE OPTIONS                             
ATXTPMDE DS    A                   HFS FILE MODES                               
ATXTFDAT DS    A                   HFS FILE ORGANIZATION                        
ATXTRCFM DS    A                   HFS RECFM                                    
ATXTLREC DS    A                   HFS LRECL                                    
ATXTBKSZ DS    A                   HFS BLKSIZE                                  
         ORG                                                                    
*                                                                               
* *** LEAVE SPARE FOR ADDITIONAL A(TEXT UNITS) PASSED IN P5 ***                 
MAXUTEXT EQU   20                                                               
         DS    (MAXUTEXT)A         ADDRESSES OF USER-PASSED TEXT UNITS          
*                                                                               
         SPACE 1                                                                
TXTDD    DS    XL6,CL8             TEXT BLOCK DDNAME        0001                
TXTDSN   DS    XL6,CL44            TEXT BLOCK DSN           0002                
TXTMBR   DS    XL6,CL20            TEXT BLOCK MEMBER NAME   0002                
TXTGEN   DS    XL6,CL4             TEXT BLOCK REL GEN NUM   0003                
TXTDISP  DS    XL6,XL1             TEXT BLOCK DISP          0004                
TXTNDISP DS    XL6,XL1             TEXT BLOCK NORM DISP     0005                
TXTCDISP DS    XL6,XL1             TEXT BLOCK COND DISP     0006                
TXTSPACE DS    XL4                 TEXT BLOCK SPACE TYPE    0007/0008           
TXTPRI   DS    XL6,XL3             TEXT BLOCK PRMRY SPACE   000A                
TXTSEC   DS    XL6,XL3             TEXT BLOCK SCNDRY SPACE  000B                
TXTRLSE  DS    XL4                 TEXT BLOCK RLSE SPACE    000D                
TXTVSER  DS    XL6,XL6             TEXT BLOCK VOLSER NUMBER 0010                
TXTUNIT  DS    XL6,CL5             TEXT BLOCK UNIT TYPE     0015                
TXTFORM  DS    XL6,CL4             TEXT BLOCK FORM NUMBER   001A                
TXTUNAL  DS    XL4                 TEXT BLOCK UNALLOC       001C                
TXTDCB   DS    XL6,CL20            TEXT BLOCK DCB           002C                
TXTBUF   DS    XL6,XL1             TEXT BLOCK N'BUFFERS     0034                
TXTSYSO  DS    XL6,XL1             TEXT BLOCK SYSOUT=C      0018                
TXTRECL  DS    XL6,XL2             TEXT BLOCK LRECL=NNNN    0042                
TXTRECF  DS    XL6,XL1             TEXT BLOCK RECFM=F       0049                
TXTBLKSZ DS    XL6,XL2             TEXT BLOCK BLKSIZE=      0030                
TXTTRTCH DS    XL6,XL1             TEXT BLOCK DCB=TRTCH=X   004F                
TXTNODE  DS    XL6,CL9             TEXT BLOCK NODE ID       0058                
TXTUSER  DS    XL6,CL9             TEXT BLOCK USER ID       0063                
TXTDUMMY DS    XL2,XL2             TEXT BLOCK DUMMY         0024                
*                                                                               
TXTPATH  DS    XL6,CL255       TEXT BLOCK HFS FILE PATHNAME      8017           
TXTPOPT  DS    XL6,XL4         TEXT BLOCK HFS FILE OPTIONS       8018           
TXTPMDE  DS    XL6,XL4         TEXT BLOCK HFS FILE MODES         8019           
TXTFDAT  DS    XL6,XL1         TEXT BLOCK HFS FILE ORGANIZATION  801D           
*                                                                               
TXTSUBSYS_NAME DS AL2,AL2,AL2,CL4        SUBSYSTEM NAME                         
TXTSUBSYS_PARM DS AL2,AL2,AL2,AL2,CL10   SUBSYSTEM PARMS                        
*                                                                               
TXTDCCPE DS    XL2,XL2         PERMANENTLY CONCATENATED ATTRIBUTE 0004          
TXTDCCDD DS    XL2,XL2,(2*(2+8))X    DDNAME LIST                  0001          
*                      THE SECOND XL2 CONTAINS THE NUMBER OF DDNAMES            
*                      BEING CONCATENATED (ALWAYS X'0002'). THIS IS             
*                      FOLLOWED BY:                                             
*                       DS  XL2        L'(PRIMARY DDNAME)                       
*                       DS  CL(N)      PRIMARY DDNAME                           
*                       DS  XL2        L'(SECONDARY DDNAME)                     
*                       DS  CL(N)      SECONDARY DDNAME                         
*                      FOR EXAMPLE, TO CONCATENATE DDNAME "IN1" AHEAD           
*                      OF DDNAME "FILE2":                                       
*                        0001 0002 0003 (IN1) 0005 (FILE2)                      
*                                                                               
*                                                                               
*                                                                               
         DS    0F                  RBX MUST BE FULLWORD ALIGNED                 
RBLKRBX  DS    XL(S99RBXLN)        REQUEST BLOCK EXTENSION                      
*                                                                               
WKX      EQU   *                                                                
         EJECT                                                                  
         PRINT GEN                                                              
         IEFZB4D0                                                               
         EJECT                                                                  
         IEFZB4D2                                                               
         EJECT                                                                  
         IEFSJDKY                                                               
         EJECT                                                                  
         PRINT NOGEN                                                            
         DCBD  DSORG=PS,DEVD=DA                                                 
         SPACE 3                                                                
*FASSBOFF                                                                       
         PRINT OFF                                                              
SSBOFFD  DSECT                                                                  
       ++INCLUDE FASSBOFF                                                       
         PRINT ON                                                               
*DDMASTD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DDMASTD                                                        
         PRINT ON                                                               
         EJECT                                                                  
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'046DDDYNALLOC10/30/18'                                      
         END                                                                    
