*          DATA SET DMWRKR     AT LEVEL 019 AS OF 04/04/16                      
*CATALP DMWRKR                                                                  
***********************************************************************         
* R2 POINTS TO PARAM LIST FOR ENTRY VIA DATAMGR TO V(DMWRKR)                    
*                                                                               
*        A(ACTION)                                                              
*        A(FILE NAME)                                                           
*        A(KEY)                                                                 
*        A(WRKR RECORD - FOUR CHR LEN THEN DATA)                                
*        A(WRKR BUFFER)                                                         
*                                                                               
* R1 POINTS TO DATAMGR PARAMS WITH PARAM4=FILNUM/A(DTF)                         
* ---------------------------------------------------------------------         
* R1 POINTS TO PARAM LIST FOR ENTRY VIA DIRECT CALL TO V(WORKER)                
*                                                                               
*        A(ACTION)                                                              
*        A(WRKR BUFFER)                                                         
*        A(KEY)                                                                 
*        A(WRKR RECORD - FOUR CHR LEN THEN DATA)                                
*                                                                               
* FILE IS DEFINED TO BE STANDARD C'WKFILE'                                      
***********************************************************************         
         TITLE 'DMWRKR - ROUTINES TO PROCESS WKFILE'                            
         PRINT NOGEN                                                            
DMWRKR   CSECT                                                                  
         ENTRY WORKER                                                           
*                                                                               
         NMOD1 WRKX-WRKD,**WRKR**,CLEAR=YES  ENTRY=DMWRKR                       
         USING WRKD,RC                                                          
         ST    R2,APARM                                                         
         MVC   PARM1(24),0(R2)     SAVE PARAMS                                  
         B     DMWRKR2                                                          
*                                                                               
WORKER   NMOD1 WRKX-WRKD,**WRKR**,CLEAR=YES  ENTRY=WORKER                       
         ST    R1,APARM                                                         
         MVC   PARM1(24),0(R1)     SAVE AND ADJUST PARAMS                       
         MVC   PARM5,PARM2                                                      
         L     RB,ADMWRKR          RESET BASE                                   
         USING DMWRKR,RB                                                        
         SR    R1,R1               SET ENTRY=WORKER FLAG                        
         B     DMWRKR2                                                          
ADMWRKR  DC    A(DMWRKR)                                                        
*                                                                               
DMWRKR2  LA    RA,2048(RB)         RA=SECOND BASE REG                           
         LA    RA,2048(RA)                                                      
         LA    R9,2048(RA)         R9=THIRD BASE REG                            
         LA    R9,2048(R9)                                                      
         LA    R8,2048(R9)         R8=FOURTH BASE REG                           
         LA    R8,2048(R8)                                                      
         USING DMWRKR+4096,RA,R9,R8                                             
         MVI   PARM3,0                                                          
         LM    R2,R4,PARM3         R3=A(RECORD)                                 
         USING UKRECD,R2           R2=A(KEY)                                    
         LA    R4,0(R4)            R4=A(BUFFER)                                 
*                                                                               
         L     RE,=V(SSB)          SET OFFLINE/ONLINE FLAG                      
         MVI   OFFLINE,C'Y'                                                     
         MVC   MYLABEL,LABEL                                                    
         LTR   RE,RE                                                            
         BZ    DMWRKR4                                                          
         OC    0(2,RE),0(RE)                                                    
         BZ    DMWRKR4                                                          
         MVI   OFFLINE,C'N'                                                     
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBSIN-TCBD(RE)                                               
         LA    RE,0(RE)                                                         
         STCM  RE,15,MYLABEL+3     SET ONLINE LABEL WITH TASK SIN               
         EJECT                                                                  
DMWRKR4  LTR   R1,R1               SAVE WORK FILE DATA                          
         BNZ   DMWRKR4A                                                         
         MVC   WORKFIL,=CL8'WKFILE'                                             
         MVC   VWKFILE,=V(WKFILE)                                               
         MVI   VWKFILE,X'F4'                                                    
         B     DMWRKR5                                                          
DMWRKR4A L     RE,PARM2                                                         
         MVC   WORKFIL,0(RE)                                                    
         MVC   VWKFILE,12(R1)                                                   
*                                                                               
DMWRKR5  CLI   JOBNAME,C' '        GET JOBNAME ONCE ONLY                        
         BNE   DMWRKR6                                                          
         LA    R6,FUL              GET JOB NAME INTO JOBNAME                    
         EXTRACT (6),FIELDS=TIOT                                                
         L     R6,FUL                                                           
         MVC   JOBNAME,0(R6)                                                    
*                                                                               
DMWRKR6  L     RE,VENQDEQ          SAVE CONTROL INTERVAL DATA                   
         ST    RE,CIENQDEQ                                                      
         MVI   ENQFLAG,0           SET ENQUEUE/DEQUEUE FLAG                     
         LA    RE,L'WKINDEX                                                     
         STH   RE,CINDXLN                                                       
         AR    RE,RE               RE=2*INDEX-ENTRY-LENGTH                      
         L     RF,VWKFILE                                                       
         LA    RF,0(RF)                                                         
         SR    RF,RE                                                            
         ST    RF,VWKTAB           CI DATA LIVES INFRONT OF DTF                 
         OC    0(4,RF),0(RF)                                                    
         BZ    INI                 INITIALIZE CI DATA ON FIRST CALL             
         MVC   CIDATA,0(RF)                                                     
DMWRKR6A LR    R7,R4                                                            
         AH    R7,CIBLKLN          R7=A(SAVE AREA AT END OF BUFFER)             
         LA    R7,3(R7)                                                         
         SRL   R7,2                                                             
         SLL   R7,2                                                             
         USING SKBUFFD,R7                                                       
*                                                                               
DMWRKR7  CLC   SKLABEL,MYLABEL     INITIALISE SAVE AREA                         
         BE    DMWRKRA                                                          
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
                                                                                
*----------------------------------------------------------------------         
* VALIDATE WKFILE ACTION AND PASS CONTROL TO ROUTINE                            
*----------------------------------------------------------------------         
DMWRKRA  L     RE,PARM1            RE=A(WKFILE ACTION)                          
         LA    RF,WKACTNS          RF=A(ACTION TABLE)                           
DMWRKRA1 CLI   0(RF),0                                                          
         BE    DMWRKRA2                                                         
         CLC   1(3,RF),0(RE)       MATCH ON FIRST THREE CHRS                    
         BE    *+12                                                             
         LA    RF,12(RF)                                                        
         B     DMWRKRA1                                                         
         MVC   SKACTN,0(RF)        SAVE THIS ACTION VALUE                       
         MVC   SAVEACT,1(RF)       SAVE THIS ACTION LETTER                      
         L     RF,8(RF)                                                         
         BR    RF                                                               
DMWRKRA2 DC    H'0',C'INVALID WKFILE ACTION '                                   
*                                                                               
DMWRKRX  MVC   SKLACTN,SKACTN      SAVE LAST ACTION VALUE                       
         L     R1,APARM                                                         
         MVC   8(1,R1),PARM3                                                    
         XMOD1 1                                                                
                                                                                
***********************************************************************         
* ACTION table                                                                  
***********************************************************************         
WKACTNS  DC    0F'0'                                                            
         DC    X'01',C'ADD    ',A(ADD)                                          
         DC    X'02',C'CLOSE  ',A(ADD)                                          
         DC    X'03',C'DELETE ',A(STA)                                          
         DC    X'04',C'HOLD   ',A(STA)                                          
         DC    X'05',C'INDEX  ',A(NDX)                                          
         DC    X'06',C'KEEP   ',A(STA)                                          
         DC    X'07',C'OPEN   ',A(ADD)                                          
         DC    X'08',C'PURGE  ',A(STA)                                          
         DC    X'09',C'READ   ',A(RDF)                                          
         DC    X'0A',C'RESTORE',A(STA)                                          
         DC    X'0B',C'SEQ    ',A(SEQ)                                          
         DC    X'0C',C'UNKEEP ',A(STA)                                          
         DC    X'0D',C'WRITE  ',A(WRF)                                          
         DC    X'0E',C'KEY    ',A(KEY)                                          
         DC    X'0F',C'RANDOM ',A(RDR)                                          
         DC    X'10',C'RETAIN ',A(ATT)                                          
         DC    X'11',C'COMMENT',A(ATT)                                          
         DC    X'12',C'RDBLOCK',A(RDB)                                          
         DC    X'20',C'LIBRARY',A(LIB)                                          
         DC    X'30',C'BUFFER ',A(BUF)                                          
         DC    X'31',C'BURSTR ',A(BUF)                                          
         DC    X'32',C'BUSAVE ',A(BUS)                                          
WKACTNX  DC    X'FF',C'INIT   ',A(INI)                                          
         DC    X'0000'                                                          
                                                                                
***********************************************************************         
* DUMMY CALL TO INITIALISE BUFFER - PASS BACK IN BUFFER                         
*                                                                               
* AL4    V(WKTAB)                                                               
* AL4    V(WKFILE)                                                              
* AL4    DISPLACEMENT OF START OF BUFFER SAVE                                   
* CL40   CIDATA FROM WKTAB                                                      
***********************************************************************         
BUF      MVC   0(4,R4),VWKTAB                                                   
         MVC   4(4,R4),VWKFILE                                                  
         LR    R0,R7                                                            
         SR    R0,R4                                                            
         ST    R0,8(R4)                                                         
         MVC   12(L'CIDATA,R4),CIDATA                                           
         MVC   FUL(1),SKACTN                                                    
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
         CLI   FUL,X'31'                                                        
         BNE   DMWRKRX                                                          
         USING KSBUFFD,R3                                                       
         MVC   SKINDEX,KSINDEX     RESTORE BUFFER DATA FROM RECORD AREA         
         MVC   SKFSTCI,KSFSTCI                                                  
         MVC   UKINDEX,KSINDEX     RESTORE USERS KEY                            
         B     DMWRKRX                                                          
*                                                                               
BUS      MVC   KSINDEX,SKINDEX     SAVE BUFFER DATA INTO RECORD AREA            
         MVC   KSFSTCI,SKFSTCI                                                  
         B     DMWRKRX                                                          
         DROP  R3                                                               
                                                                                
***********************************************************************         
* INITIALISATION FOR WKFILE - BUILD WKTAB AND PURGE TEMPORARY FILES             
***********************************************************************         
INI      CLI   OFFLINE,C'Y'        OPEN WKFILE IF OFFLINE                       
         BNE   INI0                                                             
         L     RE,VWKFILE                                                       
         MVI   P1,C'N'             SET OPEN FILE LIST                           
         MVC   P1+1(7),22(RE)                                                   
         MVI   P1+8,C'X'                                                        
         SR    R5,R5               SET OPEN SYSTEM NAME                         
         IC    R5,VWKFILE                                                       
         SRL   R5,4                                                             
         MHI   R5,3                                                             
         LA    R5,INISYS(R5)                                                    
         GOTO1 DATAMGR,DMCB,=C'DMOPEN',(R5),P1                                  
         B     INI0                                                             
INISYS   DS    0C                                                               
*&&US*&& DC    C'SER   SPO   PRIMPLACCTALREPMBACON   CPPTRAPERSER'              
*&&UK*&& DC    C'SER         MEDMPLACCFEE   MBACON         PERSER'              
*                                                                               
INI0     XC    P1(24),P1           BUILD DADDS PARM LIST                        
         MVC   P1,VRDID                                                         
         LA    RE,CXREC                                                         
         ST    RE,P2                                                            
         MVC   P4,VWKFILE                                                       
         LA    RE,CXADDR                                                        
         ST    RE,P5                                                            
         MVC   CXADDR,=X'00010100'                                              
         GOTO1 VDADDS,P1                                                        
*                                                                               
         L     RE,VWKFILE              A(WKFILE DTF)                            
         TM    DTFOPEN-DTF(RE),DTF_RO  READ-ONLY?                               
         BO    *+8                     NO NEED TO LOCK                          
         BAS   RE,LOCKWK               LOCK WKFILE                              
*                                                                               
         GOTO1 VDADDS,P1           READ FIRST REC TO SET WKTAB                  
         OC    P3(2),P3                                                         
         BNZ   INIERR                                                           
         L     RE,VWKTAB                                                        
         MVC   0(20,RE),CXREC      SET PART1 INDEX DATA                         
         MVC   20(20,RE),PART2IND                                               
         TM    0(RE),X'80'                                                      
         BZ    *+14                                                             
         MVC   20(20,RE),CXREC+20  SET PART2 INDEX DATA IF PRESENT              
         NI    0(RE),X'7F'                                                      
         MVC   CIDATA,0(RE)                                                     
         L     RE,VWKFILE          SET F/L RECORD SIZE IN WKFILE DTF            
         LA    RE,52(RE)                                                        
         MVC   0(2,RE),CIBLKLN                                                  
         OI    0(RE),X'80'                                                      
*                                                                               
         L     RE,VWKFILE              A(WKFILE DTF)                            
         TM    DTFOPEN-DTF(RE),DTF_RO  READ-ONLY?                               
         BO    INIX                    YES: JUST EXIT, NO CLEANING              
*                                                                               
         MVI   FLAG,0              POINT TO FIRST INDEX ENTRY                   
         BAS   RE,CXLOOPI                                                       
         USING WKRECD,R5                                                        
         B     INI8                                                             
*                                                                               
INI6     CLI   FLAG,0              WRITE BACK PAGE IF UPDATED                   
         BE    INI6A                                                            
         GOTO1 VDADDS,P1,VWTID                                                  
         OC    P3(2),P3                                                         
         BNZ   INIERR                                                           
INI6A    BAS   RE,GETXAD           READ IN NEXT PAGE                            
         GOTO1 VDADDS,P1,VRDID                                                  
         OC    P3(2),P3                                                         
         BNZ   INIERR                                                           
         MVI   FLAG,0                                                           
*                                                                               
INI8     TM    WKSTAT,WKSTTE       PURGE TEMP FILES FOR THIS PARTN              
         BZ    INIA                                                             
         CLC   WKAGED(4),CIP3                                                   
         BNE   INIA                                                             
         XC    WKINDEX,WKINDEX                                                  
         MVI   FLAG,1                                                           
*                                                                               
INIA     BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     INI8                                                             
         B     INI6                END OF INDEX PAGE                            
         MVC   FUL(2),CXPAGE       SAVE LAST INDEX PAGE NUMBER                  
         CLC   CXPAGE(4),CJPAGE                                                 
         BH    INIC                EXIT IF END OF PART2 INDEX                   
         OC    CJCITOT,CJCITOT                                                  
         BZ    INIC                EXIT IF NO PART2 INDEX                       
         BAS   RE,CXLOOPJ          POSN TO FIRST PART2 INDEX ENTRY              
         CLC   CXPAGE,FUL                                                       
         BE    INI8                STARTS IN SAME PAGE AS END OF PART1          
         B     INI6                                                             
*                                                                               
INIC     CLI   FLAG,0              WRITE BACK LAST PAGE IF UPDATED              
         BE    INIXUNLK                                                         
         GOTO1 VDADDS,P1,VWTID                                                  
         OC    P3(2),P3                                                         
         BZ    INIXUNLK                                                         
*                                                                               
INIERR   BAS   RE,UNLKWK           DISK ERROR ON INITIALISATION                 
         MVI   PARM3,X'40'                                                      
         CLI   OFFLINE,C'Y'        EXIT WITH ERROR IF ONLINE                    
         BNE   DMWRKRX                                                          
         DC    H'0',C'WKFILE INITIALISE ERROR '                                 
*                                                                               
INIXUNLK BAS   RE,UNLKWK           WKFILE INITIALISED OK                        
*                                                                               
INIX     MVI   PARM3,0                                                          
         L     RE,PARM1                                                         
         CLC   0(3,RE),WKACTNX+1                                                
         BNE   DMWRKR6A                                                         
         B     DMWRKRX             EXIT IF SPECIFIC INIT COMMAND                
                                                                                
***********************************************************************         
* READ WKFILE SEQUENTIALLY FILTERED BY KEY - DATA PASSED BACK IN PARM4          
*                                                                               
* SET PARM1(1) TO X'80' TO PERFORM INDEX READ FOR UPDATE.                       
* SET PARM1(1) TO X'08' TO OBTAIN ALL INDEX ENTRYS.                             
* USER INDEX IS NOT CHANGED - ALL NON ZERO FIELDS ARE FILTERS.                  
*                                                                               
* IF INDEX+13=X'80' BIT IS OFF THEN INDEX DATA WILL BE RETURNED IN              
* PARM4 WITH RECORD FORMAT AS FOLLOWS                                           
*                                                                               
* LL00*SOFSOF*USERINDEX.......ACTUALINDEX.........                              
*                                                                               
* IF INDEX+13=X'80' BIT IS ON THEN FILE DATA WILL BE RETURNED BETWEEN           
* HDR AND TRL RECORDS BY SUCESSIVE CALLS AS FOLLOWS                             
*                                                                               
* LL00*SOFSOF*USERINDEX.......ACTUALINDEX.........ATTRIBUTES..........          
* LL00RECORD-1................                                                  
* LL00RECORD-2................                                                  
* LL00*EOFEOF*                                                                  
*                                                                               
* IF A READ ERROR REC+8(3) IS SET TO C'ERR' EG *EOFERR*                         
***********************************************************************         
SEQ      TM    SKSCTRL,X'01'       INITIALISE BUFFER ON FIRST CALL              
         BO    SEQ0                                                             
         MVI   SKSCTRL,X'01'                                                    
         MVI   SKACTRL,0                                                        
         MVI   SKLCTRL,0                                                        
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKYCTRL,SKYCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         XC    0(16,R3),0(R3)                                                   
         BAS   RE,CXLOOPI                                                       
         USING WKRECD,R5           R5=A(FIRST INDEX ENTRY IN CXREC)             
         LH    R0,CXENTRY                                                       
         BCTR  R0,0                                                             
         STH   R0,CXENTRY                                                       
         MVC   SKPAGE(4),CXPAGE                                                 
*                                                                               
SEQ0     TM    SKSCTRL,X'80'       READ INDEX MODE                              
         BO    SEQE                                                             
         MVC   CXPAGE(4),SKPAGE    RESTORE LAST INDEX ENTRY DATA                
         LH    R5,CXENTRY                                                       
         MH    R5,CINDXLN                                                       
         LA    R5,CXREC(R5)        R5=A(LAST INDEX ENTRY IN CXREC)              
         MVI   FLAG,0                                                           
*                                                                               
SEQ2     LA    RE,CXREC            READ INDEX PAGE INTO CALLERS BUFFER          
         SR    R5,RE                                                            
         AR    R5,R4                                                            
         BAS   RE,GETXAD                                                        
         CLC   SKXADDR,CXADDR      TEST IF PAGE ALREADY IN BUFFER               
         BE    SEQ2A                                                            
         MVC   SKXADDR,CXADDR                                                   
         XC    SKADDR,SKADDR                                                    
         LA    R0,X'80'            TEST/SET INDEX READ FOR UPDATE               
         TM    PARM1,X'80'                                                      
         BO    *+6                                                              
         SR    R0,R0                                                            
         GOTO1 DATAMGR,DMCB,((R0),DMREAD),WORKFIL,CXADDR,(R4)                   
         CLI   8(R1),0                                                          
         BNE   SEQERR                                                           
*                                                                               
SEQ2A    CLI   FLAG,0                                                           
         BNE   SEQ4                                                             
         TM    UKFLAG,X'C0'        TEST IF INDEX LAST AND DATA THIS             
         BNO   SEQ8                                                             
         NI    UKFLAG,X'BF'                                                     
         B     SEQA                SET TO RETURN LAST FULL DATA HDR             
*                                                                               
SEQ4     CLI   WKSTAT,WKSTPU       IGNORE PURGED ENTRYS                         
         BE    SEQ4A                                                            
         TM    WKSTAT,WKSTTE       IGNORE TEMP ENTRYS                           
         BZ    SEQ6                                                             
SEQ4A    TM    PARM1,X'08'         UNLESS CALLER WANTS THEM                     
         BZ    SEQ8                                                             
         B     SEQA                                                             
*                                                                               
SEQ6     OC    UKUSRID,UKUSRID     FILTER ON USER ID                            
         BZ    SEQ6A                                                            
         CLC   UKUSRID,WKUSRID                                                  
         BNE   SEQ8                                                             
SEQ6A    OC    UKSYSPRG,UKSYSPRG   FILTER ON SYSTEM/PROGRAM                     
         BZ    SEQ6B                                                            
         CLI   UKSYSPRG,0                                                       
         BE    *+14                                                             
         CLC   UKSYSPRG(1),WKSYSPRG                                             
         BNE   SEQ8                                                             
         OC    UKSYSPRG+1(2),UKSYSPRG+1                                         
         BZ    SEQ6B                                                            
         CLC   UKSYSPRG+1(2),WKSYSPRG+1                                         
         BNE   SEQ8                                                             
SEQ6B    CLI   UKSUBPRG,0          FILTER ON SUB PROGRAM VALUE                  
         BE    SEQ6C                                                            
         CLC   UKSUBPRG,WKSUBPRG                                                
         BNE   SEQ8                                                             
SEQ6C    CLI   UKDAY,0             FILTER ON DAY NUMBER                         
         BE    SEQ6D                                                            
         CLC   UKDAY,WKDAY                                                      
         BNE   SEQ8                                                             
SEQ6D    CLI   UKCLASS,0           FILTER ON CLASS                              
         BE    SEQ6E                                                            
         CLC   UKCLASS,WKCLASS                                                  
         BNE   SEQ8                                                             
SEQ6E    CLI   UKSTAT,0            FILTER ON STATUS                             
         BE    SEQ6F                                                            
         MVC   DUB(1),UKSTAT                                                    
         TM    DUB,WKSTKE                                                       
         BZ    *+12                                                             
         TM    WKSTAT,WKSTKE                                                    
         BZ    SEQ8                                                             
         NI    DUB,255-WKSTKE                                                   
         BZ    SEQ6F                                                            
         NC    DUB,WKSTAT                                                       
         BZ    SEQ8                                                             
SEQ6F    OC    UKFILNO,UKFILNO     FILTER ON FILE NUMBER                        
         BZ    SEQ6G                                                            
         CLC   UKFILNO,WKFILNO                                                  
         BE    SEQ6G                                                            
         BH    SEQ8                                                             
         OC    UKCIADDR,UKCIADDR                                                
         BZ    SEQ6G                                                            
         CLC   UKCIADDR,WKFILNO                                                 
         BL    SEQ8                                                             
SEQ6G    B     SEQA                ENTRY FOUND VALID FOR ALL FILTERS            
*                                                                               
SEQ8     MVI   FLAG,1              BUMP TO NEXT INDEX ENTRY                     
         BAS   RE,CXLOOPX                                                       
         B     SEQ4                                                             
         B     SEQ2                END OF INDEX PAGE                            
         B     SEQEOF                                                           
*                                                                               
SEQA     BAS   RE,GETCAD           SAVE INDEX DATA IN BUFFER                    
         XC    SKINDEX,SKINDEX                                                  
         MVC   SKKEY,WKBKEY                                                     
         MVC   SKFILNO,WKFILNO                                                  
         MVC   SKSTAT,WKSTAT                                                    
         MVC   SKCIADDR,CIADDR                                                  
         MVC   SKPAGE(4),CXPAGE                                                 
         XC    SKFCTRL,SKFCTRL                                                  
         MVC   SKFSTCI,CIADDR      SAVE DISK ADDR OF FILE IN BUFFER             
*                                                                               
SEQB     LA    R6,4(R3)            PASS BACK FILE HEADER IN PARM4               
         MVC   0(L'SOFLAB,R6),SOFLAB                                            
         LA    R6,L'SOFLAB(R6)                                                  
         MVC   0(L'SKINDEX,R6),SKINDEX                                          
         LA    R6,L'SKINDEX(R6)                                                 
         MVC   0(L'WKINDEX,R6),WKINDEX                                          
         LA    R6,L'WKINDEX(R6)                                                 
*                                                                               
SEQC     TM    UKFLAG,X'80'        TEST IF CALLER WANTS DATA AS WELL            
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO-SET IN INDEX READ MODE                    
         B     SEQF1                                                            
         OI    SKSCTRL,X'80'       YES- SET IN DATA READ MODE                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST                                                        
         BE    SEQD                                                             
         MVC   8(3,R3),=C'ERR'     ERROR ON FIRST DATA READ                     
         NI    SKSCTRL,X'7F'                                                    
         B     SEQF1                                                            
*                                                                               
SEQD     LR    R5,R4               RETURN EXTENDED FILE HEADER                  
         MVC   0(L'WKBATTR+L'WKFATTR,R6),WKBATTR                                
         LA    R6,L'WKBATTR+L'WKFATTR(R6)                                       
         B     SEQF1                                                            
*                                                                               
SEQE     TM    UKFLAG,X'80'        DATA READ MODE                               
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO LONGER REQUIRED RETURN TO INDEX           
         B     SEQ0                                                             
         BAS   RE,RDFNXT           READ NEXT DATA RECORD                        
         BNE   SEQF                                                             
         B     DMWRKRX                                                          
*                                                                               
SEQF     LA    R6,4(R3)            RETURN EOF/ERR TRAILER RECORD                
         MVC   0(L'EOFLAB,R6),EOFLAB                                            
         TM    DMCB+8,X'80'                                                     
         BO    *+10                                                             
         MVC   8(3,R3),=C'ERR'                                                  
         LA    R6,L'EOFLAB(R6)                                                  
         NI    SKSCTRL,X'7F'       RESET TO INDEX READ MODE                     
SEQF1    LA    R3,0(R3)                                                         
         SR    R6,R3                                                            
         SLL   R6,16                                                            
         ST    R6,0(R3)            SET RECORD LENGTH                            
         B     DMWRKRX                                                          
*                                                                               
SEQERR   MVI   PARM3,X'40'         ERROR ON INDEX READ                          
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
SEQEOF   MVI   PARM3,X'90'         END OF FILE ON INDEX READ                    
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKRX                                                          
                                                                                
***********************************************************************         
* READ WKFILE INDEX - PASS BACK INDEX ENTRY IN PARM3                            
*                                                                               
* SET PARM1(1) TO X'08' TO OBTAIN USED/DELETED INDEX ENTRYS.                    
* SET USER INDEX BEFORE FIRST CALL. IT IS THEN UPDATED BY THIS LOGIC.           
* IF USER KEY IS ZERO FIRST CALL GIVES FIRST INDEX ENTRY.                       
* IF USER KEY IS NONZERO FIRST CALL GIVES FIRST ENTRY WITH SAME KEY.            
* SUBSEQUENT CALLS GIVE NEXT INDEX AFTER THAT GIVEN BY FIRST CALL.              
***********************************************************************         
NDX      XC    SKFCTRL,SKFCTRL     RESET FILE I/O CONTROL                       
         XC    SKYCTRL,SKYCTRL                                                  
         MVI   SKACTRL,0                                                        
         MVI   SKLCTRL,0                                                        
         MVI   SKSCTRL,0                                                        
         MVI   FLAG,0                                                           
         BAS   RE,CXLOOPI          R5=A(FIRST INDEX ENTRY IN CXREC)             
         USING WKRECD,R5                                                        
         LH    R0,CXENTRY          CUT BACK TO PREVIOUS INDEX ENTRY             
         BCTR  R0,0                                                             
         STH   R0,CXENTRY                                                       
*                                                                               
         MVC   SVINDEX,UKINDEX     SAVE CALLERS INDEX ENTRY                     
         OC    SVKEY,SVKEY                                                      
         BZ    NDX0                CALLER WANTS FIRST INDEX ENTRY               
         CLC   SVINDEX,SKINDEX                                                  
         BNE   NDX0                CALLER WANTS SPECIFIC INDEX ENTRY            
         XC    SVKEY,SVKEY                                                      
         MVC   CXPAGE(4),SKPAGE    CALLER WANTS NEXT INDEX ENTRY                
         B     NDX0+6                                                           
*                                                                               
NDX0     XC    SKXADDR,SKXADDR     RESET INDEX DISK ADDR IN BUFFER              
         LH    R5,CXENTRY                                                       
         MH    R5,CINDXLN                                                       
         LA    R5,CXREC(R5)        R5=A(INDEX START ENTRY IN CXREC)             
*                                                                               
NDX2     LA    RE,CXREC            READ INDEX PAGE INTO CALLERS BUFFER          
         SR    R5,RE                                                            
         AR    R5,R4                                                            
         BAS   RE,GETXAD                                                        
         CLC   SKXADDR,CXADDR      TEST IF PAGE ALREADY IN BUFFER               
         BE    NDX2A                                                            
         MVC   SKXADDR,CXADDR                                                   
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CXADDR,(R4)                  
         CLI   8(R1),0                                                          
         BNE   NDXERR                                                           
NDX2A    CLI   FLAG,0              TEST FIRST TIME FLAG                         
         BE    NDX8                                                             
*                                                                               
NDX4     CLI   WKSTAT,WKSTPU       IGNORE PURGED ENTRYS                         
         BE    NDX8                                                             
         TM    WKSTAT,WKSTTE       IGNORE TEMP ENTRYS                           
         BO    NDX8                                                             
         TM    WKSTAT,WKSTUS       IGNORE USED ENTRYS                           
         BZ    *+12                                                             
         TM    PARM1,X'08'         UNLESS CALLER WANTS THEM                     
         BZ    NDX8                                                             
         OC    WKBKEY,WKBKEY       IGNORE ZERO KEY FILES                        
         BZ    NDX8                                                             
*                                                                               
NDX6     OC    SVKEY,SVKEY         CALLER WANTS NEXT ENTRY                      
         BZ    NDXA                                                             
         CLC   SVKEY,WKBKEY        CALLER WANTS SPECIFIC ENTRY                  
         BNE   NDX8                                                             
         OC    UKFILNO,UKFILNO     TEST IF CALLER PASSED FILE NUMBER            
         BZ    *+14                                                             
         CLC   UKFILNO,WKFILNO                                                  
         BNE   NDX8                                                             
         B     NDXA                                                             
*                                                                               
NDX8     MVI   FLAG,1                                                           
         BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     NDX4                                                             
         B     NDX2                END OF INDEX PAGE                            
         B     NDXEOF                                                           
*                                                                               
NDXA     BAS   RE,GETCAD           PASS INDEX ENTRY BACK TO CALLER              
         XC    UKINDEX,UKINDEX                                                  
         MVC   UKBKEY,WKBKEY                                                    
         MVC   UKFILNO,WKFILNO                                                  
         MVC   UKSTAT,WKSTAT                                                    
         MVC   UKCIADDR,CIADDR                                                  
*                                                                               
         MVC   SKPAGE(4),CXPAGE    SAVE INDEX CTRL DATA IN BUFFER               
         MVC   SKINDEX,UKINDEX                                                  
         MVC   SKFSTCI,CIADDR      SAVE DISK ADDR OF FILE IN BUFFER             
         B     DMWRKRX                                                          
*                                                                               
NDXERR   MVI   PARM3,X'40'         DISK ERROR ON INDEX READ                     
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
NDXEOF   MVI   PARM3,X'90'         EOF ON INDEX READ                            
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKRX                                                          
                                                                                
***********************************************************************         
* READ WKFILE DATA RECORDS - PASS BACK RECORD IN PARM4                          
***********************************************************************         
RDF      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   RDF2                                                             
RDF1     DC    H'0',C'INVALID WKFILE READ SEQUENCE'                             
*                                                                               
RDF2     OC    SKADDR,SKADDR       TEST IF FIRST READ                           
         BNZ   RDF4                                                             
         MVC   CIADDR,SKFSTCI                                                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST           READ FIRST BLOCK AND INITIALISE              
         BE    RDF4                                                             
         MVC   PARM3(1),DMCB+8     RETURN READ ERROR                            
         B     DMWRKRX                                                          
*                                                                               
RDF4     BAS   RE,RDFNXT           GET NEXT RECORD                              
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
                                                                                
**********************************************************************          
* READ RANDOM WKFILE DATA RECORDS - REC NUM AT START OF PARM4                   
**********************************************************************          
RDR      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BZ    RDF1                                                             
         MVC   FUL,0(R3)           SET FUL TO REC NUM REQUIRED                  
         BAS   RE,RAN                                                           
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
                                                                                
**********************************************************************          
* WRITE BACK LAST WKFILE RECORD READ - NEW RECORD IN PARM4                      
**********************************************************************          
WRF      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI     MUST HAVE FILE DEFINED                       
         BZ    WRF2                                                             
         OC    SKADDR,SKADDR       MUST HAVE BLOCK DEFINED                      
         BZ    WRF2                                                             
         CLC   SKLEN,0(R3)         MUST HAVE SAME LENGTH                        
         BE    WRF4                                                             
WRF2     DC    H'0',C'INVALID WKFILE WRITE SEQUENCE '                           
*                                                                               
WRF4     LH    R1,SKLEN            MOVE REC BACK TO BUFFER                      
         LR    RF,R4                                                            
         AH    RF,SKDISP                                                        
         SR    RF,R1                                                            
         MOVE  ((RF),(R1)),(R3)                                                 
*                                                                               
WRF6     GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,SKADDR,(R4)                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
                                                                                
**********************************************************************          
* FORCED RE-READ OF CURRENT BLOCK                                               
**********************************************************************          
RDB      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI     MUST HAVE FILE DEFINED                       
         BZ    RDB2                                                             
         OC    SKADDR,SKADDR       MUST HAVE BLOCK DEFINED                      
         BNZ   RDB4                                                             
RDB2     DC    H'0',C'INVALID WKFILE RDBLOCK'                                   
*                                                                               
RDB4     GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKADDR,(R4)                  
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
         EJECT                                                                  
* CHANGE STATUS OF FILE DEFINED IN BUFFER BY SKFSTCI                            
* SET PARM1(1)=X'40' TO INHIBIT ENQUEUE/DEQUEUE.                                
*                                                                               
STA      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   STA2                                                             
         DC    H'0',C'INVALID WKFILE STATUS SEQUENCE'                           
*                                                                               
STA2     XC    STPARM,STPARM       SET ACTION VALUES FOR STATUS CHANGE          
         MVC   STACTN,SKACTN                                                    
         MVI   STCTRL,X'23'        SET FILE AND INDEX CHANGE REQUIRED           
         TM    PARM1,X'40'                                                      
         BZ    *+8                                                              
         OI    STCTRL,X'40'        SET INHIBIT LOCK                             
         MVC   STFSTCI,SKFSTCI                                                  
         LA    RE,CXREC            USE CXREC AS I/O BUFFER                      
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO STATUS CHANGE ROUTINE                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
                                                                                
***********************************************************************         
* CHANGE KEY OF FILE DEFINED IN BUFFER BY SKFSTCI AND SKKEY.                    
* SET PARM1(1)=X'40' TO INHIBIT ENQUEUE/DEQUEUE.                                
* THE NEW KEY IS DEFINED BY UKKEY WHICH MUST HAVE SAME USERID.                  
***********************************************************************         
KEY      MVI   SKACTRL,0                                                        
         LTR   R2,R2                                                            
         BZ    KEY2                                                             
         OC    SKFSTCI,SKFSTCI                                                  
         BZ    KEY2                                                             
         CLC   UKUSRID,SKUSRID     CANT CHANGE USER ID                          
         BNE   KEY2                                                             
         CLI   UKSYSPRG,0          SYSTEM MUST BE SPECIFIED                     
         BE    KEY2                                                             
         B     STA2                                                             
KEY2     DC    H'0',C'INVALID WKFILE KEY CHANGE '                               
                                                                                
***********************************************************************         
* CHANGE ATTRIBUTES OF FILE DEFINED IN BUFFER BY SKFSTCI                        
***********************************************************************         
ATT      MVI   SKACTRL,0           FILE MUST BE DEFINED                         
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   ATT2                                                             
         DC    H'0',C'INVALID WKFILE ATTRIBUTE CHANGE '                         
*                                                                               
ATT2     MVC   CIADDR,SKFSTCI      READ FIRST CI REC INTO CXREC                 
         LA    R5,CXREC                                                         
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,(R5)                  
         MVC   PARM3(1),DMCB+8                                                  
         CLI   DMCB+8,0                                                         
         BNE   DMWRKRX                                                          
         LA    R6,4+L'SOFLAB+L'SKINDEX(R3)                                      
*                                                                               
ATT4     CLI   SKACTN,X'10'        SET RETENTION DAYS                           
         BNE   ATT4A                                                            
         MVC   WKRETN,WKRETN-WKINDEX(R6)                                        
         B     ATT6                                                             
ATT4A    CLI   SKACTN,X'11'        SET COMMENT DATA                             
         BNE   ATT4B                                                            
         MVC   WKCOMNT,WKCOMNT-WKINDEX(R6)                                      
         B     ATT6                                                             
ATT4B    DC    H'0'                                                             
*                                                                               
ATT6     GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,CIADDR,(R5)                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKRX                                                          
                                                                                
***********************************************************************         
* LIBRARY FUNCTIONS - ACTION DEFINED BY PARM3 EXTENSION AREA                    
***********************************************************************         
LIB      MVI   SKACTRL,0                                                        
         LR    R5,R4                                                            
         NI    SKLCTRL,X'FB'       SET NO INDEX REC IN CXREC                    
         OC    SKFSTCI,SKFSTCI     FILE MUST BE DEFINED                         
         BZ    LIB0                                                             
         CLC   SKKEY,UKBKEY         KEY MUST BE UNCHANGED                       
         NOP   LIB0                                                             
         B     LIB2                                                             
LIB0     DC    H'0',C'INVALID WKFILE LIBRARY SEQUENCE '                         
*                                                                               
LIB2     TM    SKLCTRL,X'01'       TEST IF FIRST CALL                           
         BO    LIB4                                                             
         MVC   CIADDR,SKFSTCI      READ FIRST BLOCK                             
         LR    R0,R4                                                            
         BAS   RE,RDFFST                                                        
         BNE   LIBERR              ERROR CANT READ INDEX RECORD                 
         TM    SKLCTRL,X'01'                                                    
         BZ    LIB0                FILE IS NOT LIBRARY FILE                     
*                                                                               
LIB4     MVC   SKYLACTN,SKYACTN    SAVE LAST LIB ACTION                         
         LA    RF,LIBACTNS                                                      
LIB4A    CLI   0(RF),0             SEARCH LIB ACTION NAME TABLE                 
         BE    LIB4B                                                            
         CLC   1(3,RF),UKLACTN                                                  
         BE    *+12                                                             
         LA    RF,8(RF)                                                         
         B     LIB4A                                                            
         MVC   SKYACTN,0(RF)       SAVE THIS LIB ACTION                         
         L     RF,4(RF)                                                         
         BR    RF                                                               
LIB4B    DC    H'0',C'INVALID WKFILE LIBRARY ACTION '                           
*                                                                               
LIBERR   MVC   PARM3(1),DMCB+8                                                  
*                                                                               
LIBX     MVC   UKLRECS,SKYRECS                                                  
         B     DMWRKRX                                                          
*                                                                               
LIBACTNS DC    0F'0'                                                            
         DC    X'01',C'ADD',A(LIBADD)                                           
         DC    X'02',C'CLO',A(LIBCLO)                                           
         DC    X'03',C'DEL',A(LIBDEL)                                           
         DC    X'04',C'GET',A(LIBGET)                                           
         DC    X'05',C'PUT',A(LIBPUT)                                           
         DC    X'0000'                                                          
         EJECT                                                                  
LIBADD   MVC   SKLEN,0(R3)         SAVE AND CHECK REC LEN                       
         CLC   SKLEN,=H'2'                                                      
         BL    LIBADD0                                                          
         LH    RF,CIBLKLN                                                       
         LA    RE,(WKDATA1-WKINDEX)+2                                           
         SR    RF,RE               RF=MAX LOGICAL RECORD SIZE                   
         CH    RF,SKLEN                                                         
         BNL   LIBADD2             FORMAT ERROR IF TOO SHORT                    
LIBADD0  MVI   DMCB+8,X'41'        RETURN FORMAT ERROR IF BAD LEN               
         B     LIBERR                                                           
*                                                                               
LIBADD2  MVC   FUL,UKLREC1         FUL=INSERTION RECORD NUM                     
         BAS   RE,LIBXPE                                                        
         BNE   LIBERR              ERROR IF OUT OF RANGE                        
         MVI   CXADDR,X'C0'        SET GETPAGE/WRITE                            
         BAS   RE,LIBXRD           READ INDEX REC IF PAGE ABSENT                
         BNE   LIBERR                                                           
*                                                                               
LIBADD4  LH    RE,SKYEOFSP         TEST IF RECORD FITS IN EOF BLOCK             
         AH    RE,SKLEN                                                         
         LA    RE,2(RE)                                                         
         CH    RE,CIBLKLN                                                       
         BH    LIBADD4A                                                         
         CLC   SKYRNO,MAXRNO                                                    
         BNH   LIBADD6                                                          
LIBADD4A MVC   CIADDR,SKYEOFAD     SET TO NEXT BLOCK IF WONT FIT                
         ZIC   RE,CIADDR+2                                                      
         LA    RE,1(RE)                                                         
         STC   RE,CIADDR+2                                                      
         CH    RE,CIHIREC                                                       
         BNH   LIBADD4B                                                         
         SR    RE,RE                                                            
         ICM   RE,3,CIADDR         SET TO NEXT TRACK                            
         LA    RE,1(RE)                                                         
         STH   RE,CIADDR                                                        
         MVI   CIADDR+2,1                                                       
         CLM   RE,3,SKENDCI                                                     
         BH    LIBADD4C                                                         
LIBADD4B LH    RE,SKYBNO           SET NEW EOF ADDRESS ATTRIBUTES               
         LA    RE,1(RE)                                                         
         CH    RE,MAXBNO                                                        
         BH    LIBADD4C                                                         
         STH   RE,SKYBNO                                                        
         XC    SKYRNO,SKYRNO                                                    
         LA    RE,WKDATA-WKINDEX                                                
         STH   RE,SKYEOFSP                                                      
         MVC   SKYEOFAD,CIADDR                                                  
         STH   RE,SKDISP                                                        
         XC    CIADDR,CIADDR       WRITE BACK OLD EOF BLOCK                     
         BAS   RE,LIBFRD                                                        
         BNE   LIBERR                                                           
         LA    RE,WKDATA-WKINDEX(R4)                                            
         LH    RF,CIBLKLN                                                       
         SH    RF,SKDISP                                                        
         XCEF                                                                   
         MVC   SKADDR,SKYEOFAD     SET DISK ADDR OF NEW EOF BLOCK               
         B     LIBADD6A                                                         
LIBADD4C MVI   DMCB+8,X'80'        RETURN EOF ERROR IF NO ROOM                  
         B     LIBERR                                                           
*                                                                               
LIBADD6  MVC   CIADDR,SKYEOFAD     READ EOF BLOCK                               
         BAS   RE,LIBFRD                                                        
         BNE   LIBERR                                                           
LIBADD6A LR    RF,R4               MOVE RECORD TO BLOCK                         
         AH    RF,SKYEOFSP                                                      
         LH    R1,SKLEN                                                         
         MOVE  ((RF),(R1)),(R3)                                                 
         OI    SKLCTRL,X'80'       SET BLOCK WRITE PENDING                      
         LH    R1,SKLEN                                                         
         AH    R1,SKYEOFSP                                                      
         STH   R1,SKYEOFSP         SET NEW EOF DISP                             
         STH   R1,SKDISP                                                        
         LA    RF,0(R1,R4)                                                      
         MVC   0(2,RF),=H'1'                                                    
         L     RF,SKYRECS          SET NEW REC COUNT                            
         LA    RF,1(RF)                                                         
         ST    RF,SKYRECS                                                       
*                                                                               
LIBADDA  ZIC   RF,FUL1+1           TEST IF NEW ENTRY FITS IN PAGE               
         SLL   RF,1                                                             
         LA    RF,SKYPAGE(RF)      RF=A(NEW ENTRY IN INDEX PAGE)                
         OC    0(2,RF),0(RF)                                                    
         BNZ   LIBADDA4                                                         
LIBADDA2 MVC   0(1,RF),SKYBNO+1    BUILD NEW ENTRY IN INDEX PAGE                
         MVC   1(1,RF),SKYRNO+1                                                 
         LH    RE,SKYRNO           BUMP REC NUM FOR NEXT ADD                    
         LA    RE,1(RE)                                                         
         STH   RE,SKYRNO                                                        
         OI    SKLCTRL,X'40'       SET INDEX PAGE WRITE PENDING                 
         B     LIBX                                                             
LIBADDA4 LH    RE,MAXENO                                                        
         SLL   RE,1                                                             
         LA    RE,SKYPAGE(RE)      RE-A(LAST ENTRY IN INDEX PAGE)               
         OC    0(2,RE),0(RE)                                                    
         BNZ   LIBADDB             NO SPACE IN THIS INDEX PAGE                  
         SH    RE,=H'2'                                                         
         MVC   2(2,RE),0(RE)       SHIFT RIGHT ONE ENTRY                        
         CR    RE,RF                                                            
         BNE   *-12                                                             
         B     LIBADDA2            INSERT NEW ENTRY IN HOLE                     
*                                                                               
LIBADDB  TM    SKLCTRL,X'80'       TEST IF DATA BLOCK WRITE PENDING             
         BZ    *+18                                                             
         XC    CIADDR,CIADDR       WRITE BACK DATA BLOCK                        
         BAS   RE,LIBFRD                                                        
         BNE   LIBERR                                                           
         MVI   CXADDR,X'00'        READ INDEX REC INTO CXREC                    
         BAS   RE,LIBXRD                                                        
         BNE   LIBERR                                                           
         ZIC   RF,FUL1             SET RE=A(LAST ENTRY IN INDEX)                
         LA    RE,L'SKYPAGE        SET RF=A(NEW ENTRY IN INDEX)                 
         MR    RE,RE                                                            
         IC    RE,FUL1+1                                                        
         SLL   RE,1                                                             
         AR    RF,RE                                                            
         LA    RF,CXREC+WKLIBNDX-WKINDEX(RF)                                    
         LH    R1,MAXPNO                                                        
         LA    R0,L'SKYPAGE                                                     
         MR    R0,R0                                                            
         LH    RE,MAXENO                                                        
         SLL   RE,1                                                             
         AR    RE,R1                                                            
         LA    RE,CXREC+WKLIBNDX-WKINDEX(RE)                                    
         OC    0(2,RE),0(RE)                                                    
         BZ    *+6                                                              
         DC    H'0'                DIE IF NO ROOM IN INDEX                      
         SH    RE,=H'2'                                                         
         MVC   2(2,RE),0(RE)                                                    
         CR    RE,RF                                                            
         BNE   *-12                                                             
         MVC   0(1,RF),SKYBNO+1    BUILD NEW ENTRY IN HOLE                      
         MVC   1(1,RF),SKYRNO+1                                                 
         LH    RE,SKYRNO           BUMP REC NUM FOR NEXT ADD                    
         LA    RE,1(RE)                                                         
         STH   RE,SKYRNO                                                        
         BAS   RE,LIBXWT           WRITE BACK INDEX RECORD                      
         BNE   LIBERR                                                           
         B     LIBX                                                             
*                                                                               
LIBCLO   TM    SKLCTRL,X'80'       TEST IF DATA BLOCK WRITE PENDING             
         BZ    LIBCLO2                                                          
         XC    CIADDR,CIADDR                                                    
         BAS   RE,LIBFRD           WRITE BACK DATA BLOCK                        
         BNE   LIBERR                                                           
LIBCLO2  TM    SKLCTRL,X'40'       TEST INDEX BLOCK WRITE PENDING               
         BZ    LIBCLO4                                                          
         MVI   CXADDR,X'40'                                                     
         BAS   RE,LIBXRD           WRITE BACK INDEX BLOCK                       
         BNE   LIBERR                                                           
LIBCLO4  B     LIBX                                                             
*                                                                               
LIBDEL   TM    SKLCTRL,X'80'       TEST IF DATA BLOCK WRITE PENDING             
         BZ    *+18                                                             
         XC    CIADDR,CIADDR                                                    
         BAS   RE,LIBFRD                                                        
         BNE   LIBERR                                                           
         OC    UKLREC2,UKLREC2     IF REC2 IS ZERO SET IT TO REC1               
         BNZ   *+10                                                             
         MVC   UKLREC2,UKLREC1                                                  
         CLC   UKLREC1,UKLREC2                                                  
         BH    LIB0                ERROR IF REC1 GT REC2                        
         MVC   FUL,UKLREC2                                                      
         BAS   RE,LIBXPE                                                        
         BNE   LIBERR              ERROR IF REC2 OUT OF RANGE                   
         MVC   FUL1+2(2),FUL1                                                   
         MVC   FUL,UKLREC1                                                      
         BAS   RE,LIBXPE                                                        
         BNE   LIBERR              ERROR IF REC1 OUT OF RANGE                   
         MVI   CXADDR,X'00'        SET NOGET/NOWRITE                            
         BAS   RE,LIBXRD                                                        
         BNE   LIBERR                                                           
*                                                                               
LIBDEL2  LA    R5,CXREC                                                         
         L     RE,UKLREC1                                                       
         BCTR  RE,0                                                             
         SLL   RE,1                                                             
         LA    RE,WKLIBNDX(RE)     RE=A(1ST INDEX ENTRY)                        
         L     RF,UKLREC2                                                       
         SLL   RF,1                                                             
         LA    RF,WKLIBNDX(RF)     RF=A(2ND INDEX ENTRY + 2)                    
         L     R1,SKYRECS                                                       
         S     R1,UKLREC2                                                       
         BZ    LIBDEL2A            R1=NUM OF MOVES                              
         MVC   0(2,RE),0(RF)                                                    
         LA    RE,2(RE)                                                         
         LA    RF,2(RF)                                                         
         BCT   R1,*-14                                                          
LIBDEL2A SR    RF,RE               CLEAR END OF INDEX                           
         XCEF                                                                   
         LR    R5,R4                                                            
*                                                                               
LIBDEL4  L     RF,SKYRECS          SET NEW RECORD COUNT                         
         A     RF,UKLREC1                                                       
         S     RF,UKLREC2                                                       
         BCTR  RF,0                                                             
         ST    RF,SKYRECS                                                       
         BAS   RE,LIBXWT           WRITE BACK INDEX REC                         
         BNE   LIBERR                                                           
         B     LIBX                                                             
*                                                                               
LIBGET   MVC   FUL,UKLREC1         FUL=RECORD NUM REQUIRED                      
         BAS   RE,LIBXPE                                                        
         BNE   LIBERR              ERROR IF OUT OF RANGE                        
         MVI   CXADDR,X'C0'        SET GETPAGE/WRITE                            
         BAS   RE,LIBXRD           READ INDEX REC IF PAGE ABSENT                
         BNE   LIBERR                                                           
         BAS   RE,LIBXBR           CALC BR AND DATA BLOCK ADDRESS               
         BNE   LIBERR                                                           
         BAS   RE,LIBFRD           READ FILE DATA RECORD                        
         BNE   LIBERR                                                           
         MVC   SKYRECNO,FUL        SAVE RECORD NUMBER                           
         LH    R1,SKLEN            MOVE RECORD TO USERS RECORD AREA             
         LH    RE,SKDISP                                                        
         SR    RE,R1                                                            
         AR    RE,R4                                                            
         MOVE  ((R3),(R1)),(RE)                                                 
         B     LIBX                                                             
*                                                                               
LIBPUT   CLI   SKYLACTN,X'04'                                                   
         BNE   LIB0                ERROR IF LAST ACTION NOT GET                 
         CLC   UKLREC1,SKYRECNO                                                 
         BNE   LIB0                ERROR IF REC NUM CHANGED                     
         CLC   0(2,R3),SKLEN                                                    
         BNE   LIB0                ERROR IF REC LEN CHANGED                     
         LH    R1,SKLEN                                                         
         LR    RF,R4               MOVE REC BACK TO CALLERS BUFF                
         AH    RF,SKDISP                                                        
         SR    RF,R1                                                            
         MOVE  ((RF),(R1)),(R3)                                                 
         OI    SKLCTRL,X'80'       SET BLOCK WRITE PENDING                      
         B     LIBX                                                             
                                                                                
***********************************************************************         
* CALCULATE INDEX ADDRESS FOR RECNUM=FUL - SAVE PAGE/ENTRY IN FUL1              
***********************************************************************         
LIBXPE   ST    RE,SAVRE                                                         
         MVI   DMCB+8,0                                                         
         OC    FUL,FUL                                                          
         BNZ   LIBXPE2                                                          
         CLI   SKYACTN,X'01'       ZERO OK FOR ADD                              
         BNE   LIBXPE4                                                          
         L     RE,SKYRECS                                                       
         LA    RE,1(RE)                                                         
         ST    RE,FUL              SET FUL=LAST+1 IF ZERO                       
         B     LIBXPE6                                                          
LIBXPE2  CLC   FUL,SKYRECS                                                      
         BNH   LIBXPE6                                                          
LIBXPE4  MVI   DMCB+8,X'90'        SET NOTFOUND/EOF                             
         B     LIBXPEX                                                          
LIBXPE6  SR    RE,RE               COMPUTE INDEX PAGE/ENTRY                     
         L     RF,FUL                                                           
         BCTR  RF,0                                                             
         LH    R1,MAXENO                                                        
         LA    R1,1(R1)                                                         
         DR    RE,R1                                                            
         STC   RF,FUL1             FUL1=PE                                      
         STC   RE,FUL1+1                                                        
         CH    RF,MAXPNO                                                        
         BH    LIBXPE4                                                          
LIBXPEX  CLI   DMCB+8,0                                                         
         L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* GET INDEX BLOCK/RECORD FROM FUL1=PEBR AND SET CIADDR TO BLOCK D/A             
***********************************************************************         
LIBXBR   ST    RE,SAVRE                                                         
         MVI   DMCB+8,0                                                         
         ZIC   RF,FUL1+1           GET ENTRY NUMBER                             
         SLL   RF,1                                                             
         LA    RF,SKYPAGE(RF)                                                   
         MVC   FUL1+2(2),0(RF)     SET BLOCK/RECORD IN FUL1=PEBR                
         SR    RE,RE                                                            
         ZIC   RF,FUL1+2                                                        
         LH    R1,CIHIREC                                                       
         DR    RE,R1                                                            
         LA    RE,1(RE)            RE=ACTUAL BLK NUM                            
         SR    R1,R1                                                            
         ICM   R1,3,SKFSTCI                                                     
         AR    RF,R1               RF=ACTUAL TRK NUM                            
         STH   RF,CIADDR                                                        
         STC   RE,CIADDR+2                                                      
         MVI   CIADDR+3,0                                                       
LIBXBRX  CLI   DMCB+8,0                                                         
         L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* READ LIBRARY FILE RECORD WITH D/A=CIADDR                                      
***********************************************************************         
LIBFRD   ST    RE,SAVRE            BLOCK WILL BE READ INTO USERS BUFF           
         MVI   DMCB+8,0                                                         
         OC    CIADDR,CIADDR       NO READ IF ZERO DISK ADDR                    
         BZ    *+14                                                             
         CLC   CIADDR,SKADDR       NO I/O IF BLOCK IN CORE                      
         BE    LIBFRD4                                                          
         TM    SKLCTRL,X'80'       TEST IF BLOCK WRITE PENDING                  
         BZ    LIBFRD2                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,SKADDR,(R4)                   
         CLI   DMCB+8,0                                                         
         BNE   LIBFRDX             TURN OFF BLOCK WRITE PENDING                 
         NI    SKLCTRL,X'7F'                                                    
LIBFRD2  OC    CIADDR,CIADDR       EXIT IF DUMMY CALL                           
         BZ    LIBFRDX                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,(R4)                  
         CLI   DMCB+8,0                                                         
         BNE   LIBFRDX                                                          
         MVC   SKADDR,CIADDR       SAVE D/A OF BLOCK IN USERS BUFF              
LIBFRD4  CLI   SKYACTN,X'04'       TEST TO LOCATE RECORD FOR GET                
         BNE   LIBFRDX                                                          
         ZIC   R1,FUL1+3           R1=RELATIVE RECORD NUMBER IN BLOCK           
         LA    RE,WKDATA-WKINDEX(R4)                                            
         LTR   R1,R1                                                            
         BZ    LIBFRD4B                                                         
LIBFRD4A MVC   HALF,0(RE)                                                       
         LH    RF,HALF                                                          
         CH    RF,=H'1'                                                         
         BNH   LIBFRD4C            FORMAT ERROR ON END OF BLOCK                 
         AR    RE,RF                                                            
         BCT   R1,LIBFRD4A                                                      
LIBFRD4B MVC   SKLEN,0(RE)         SAVE LENGTH OF RECORD                        
         LH    R1,SKLEN                                                         
         CH    R1,=H'1'                                                         
         BNH   LIBFRD4C            FORMAT ERROR IF END OF BLOCK                 
         LA    RF,0(RE,R1)                                                      
         SR    RF,R4                                                            
         STH   RF,SKDISP           SAVE DISPLACEMENT OF NEXT RECORD             
         MVC   SKCHRS,FUL                                                       
         B     LIBFRDX                                                          
LIBFRD4C MVI   DMCB+8,X'41'                                                     
LIBFRDX  CLI   DMCB+8,0                                                         
         L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* READ LIBRARY INDEX REC WITH CXADDR 80=GETPAGE,40=WRITE                        
***********************************************************************         
LIBXRD   ST    RE,SAVRE                                                         
         MVI   DMCB+8,0                                                         
         TM    CXADDR,X'80'        TEST IF GETPAGE REQUIRED                     
         BZ    LIBXRD0                                                          
         TM    SKLCTRL,X'02'       TEST IF PAGE SAVED IN BUFFER                 
         BZ    LIBXRD0                                                          
         CLC   FUL1(1),SKYPNO+1    TEST IF SAME PAGE AS FOR GET                 
         BE    LIBXRDX                                                          
LIBXRD0  TM    SKLCTRL,X'04'       NO I/O IF INDEX REC IN CXREC                 
         BO    LIBXRD4                                                          
         CLC   SKADDR,SKFSTCI      TEST IF INDEX REC IN USERS BUFF              
         BNE   LIBXRD2                                                          
         LA    RF,CXREC            MOVE INDEX REC TO CXREC                      
         LR    RE,R4                                                            
         LH    R1,CIBLKLN                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
         B     LIBXRD4                                                          
LIBXRD2  GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKFSTCI,CXREC                
         CLI   DMCB+8,0                                                         
         BNE   LIBXRDX                                                          
LIBXRD4  OI    SKLCTRL,X'04'       SET INDEX REC IN CXREC                       
         TM    SKLCTRL,X'40'       TEST IF INDEX WRITE PENDING                  
         BZ    LIBXRD6                                                          
         LA    R5,CXREC            MOVE SAVED INDEX DATA TO CXREC               
         LH    RF,SKYPNO                                                        
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,WKLIBNDX(RF)                                                  
         MVC   0(L'SKYPAGE,RF),SKYPAGE                                          
         MVC   WKLIBXAD,SKYEOFAD                                                
         MVC   WKLIBXSP,SKYEOFSP                                                
         MVC   WKLIBXBR(1),SKYBNO+1                                             
         MVC   WKLIBXBR+1(1),SKYRNO+1                                           
         MVC   WKRECS,SKYRECS                                                   
         LR    R5,R4                                                            
         TM    CXADDR,X'40'        TEST IF WRITE OF INDEX REC REQUIRED          
         BZ    LIBXRD6                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,SKFSTCI,CXREC                 
         CLI   DMCB+8,0                                                         
         BNE   LIBXRDX                                                          
         NI    SKLCTRL,X'BF'       TURN OFF INDEX WRITE PENDING                 
*                                                                               
LIBXRD6  TM    CXADDR,X'80'        TEST IF GET PAGE REQUIRED                    
         BZ    LIBXRDX                                                          
         OI    SKLCTRL,X'02'       SET PAGE DEFINED                             
         MVC   SKYPNO+1(1),FUL1    SET PAGE NUMBER                              
         LH    RF,SKYPNO                                                        
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,CXREC+WKLIBNDX-WKINDEX(RF)                                    
         MVC   SKYPAGE,0(RF)                                                    
*                                                                               
LIBXRDX  CLI   DMCB+8,0                                                         
         L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* WRITE LIBRARY INDEX RECORD                                                    
***********************************************************************         
LIBXWT   ST    RE,SAVRE                                                         
         MVI   DMCB+8,0                                                         
         LA    R5,CXREC            MOVE SAVED INDEX DATA TO CXREC               
         MVC   WKLIBXAD,SKYEOFAD                                                
         MVC   WKLIBXSP,SKYEOFSP                                                
         MVC   WKLIBXBR(1),SKYBNO+1                                             
         MVC   WKLIBXBR+1(1),SKYRNO+1                                           
         MVC   WKRECS,SKYRECS                                                   
         LR    R5,R4                                                            
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,SKFSTCI,CXREC                 
         CLI   DMCB+8,0                                                         
         BNE   LIBXWTX                                                          
         NI    SKLCTRL,X'BF'       TURN OFF INDEX WRITE PENDING                 
LIBXWT2  SR    RF,RF               COPY PAGE TO USERS BUFFER                    
         OI    SKLCTRL,X'02'                                                    
         STH   RF,SKYPNO           SET PAGE NUMBER                              
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,CXREC+WKLIBNDX-WKINDEX(RF)                                    
         MVC   SKYPAGE,0(RF)                                                    
LIBXWT4  MVC   SKADDR,SKFSTCI      COPY INDEX REC TO USERS BUFFER               
         LR    RF,R4                                                            
         LA    RE,CXREC                                                         
         LH    R1,CIBLKLN                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
LIBXWTX  CLI   DMCB+8,0                                                         
         L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* SUBROUTINE TO READ FIRST RECORD IN A WKFILE CONTROL INTERVAL                  
***********************************************************************         
RDFFST   NTR1  ,                   READ FIRST FILE RECORD                       
         LA    R1,1                                                             
         B     RDFFST0                                                          
RDFADD   NTR1  ,                   READ FIRST FILE RECORD FOR ADD               
         SR    R1,R1                                                            
         B     RDFFST0                                                          
*                                                                               
RDFFST0  MVI   DMCB+8,0                                                         
         LR    R5,R0               R0=A(BUFFER) & CIADDR GIVES CI               
         SR    R7,R4                                                            
         AR    R7,R0                                                            
*                                                                               
         XC    SKXADDR,SKXADDR     RESET INDEX ADDR IN BUFFER                   
         MVC   SKADDR,CIADDR       SET FILE ADDR IN BUFFER                      
         MVC   SKSTRCI,CIADDR      SET START OF THIS CI                         
         LTR   R1,R1                                                            
         BZ    RDFFST2                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,(R5)                  
         CLI   DMCB+8,0                                                         
         BE    RDFFST2                                                          
         XC    SKADDR,SKADDR       RESET FILE ADDR ON ERROR                     
         B     RDFFSTX                                                          
*                                                                               
RDFFST2  XC    SKCHRS,SKCHRS       SET NUMBER OF RECS READ                      
         MVC   SKNXTCI(2),WKCINEXT SET START OF NEXT CI                         
         MVC   SKNXTCI+2(2),=X'0100'                                            
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LH    R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    *+8                                                              
         LH    R0,CJTRKS                                                        
         AR    RF,R0                                                            
         BCTR  RF,0                                                             
         SLL   RF,16                                                            
         ST    RF,SKENDCI          SET END OF THIS CI                           
         MVC   SKENDCI+2(1),CIHIREC+1                                           
         LA    RF,WKDATA-WKINDEX                                                
         CLC   CIADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,WKDATA1-WKINDEX                                               
         STH   RF,SKDISP                                                        
         XC    SKLEN,SKLEN                                                      
*                                                                               
RDFFST4  CLC   CIADDR,SKFSTCI      TEST FOR FIRST CI                            
         BNE   RDFFSTX                                                          
         TM    WKFTYPE,X'02'       TEST/SET LIBRARY TYPE FILE                   
         BO    RDFFST4A                                                         
         MVI   SKLCTRL,0                                                        
         XC    SKYCTRL,SKYCTRL                                                  
         B     RDFFSTX                                                          
RDFFST4A OI    SKLCTRL,X'03'       INITIALISE LIBRARY CONTROL                   
         MVC   DMCB(2),SKYCTRL                                                  
         XC    SKYCTRL,SKYCTRL                                                  
         LTR   R1,R1                                                            
         BZ    *+10                                                             
         MVC   SKYCTRL(2),DMCB                                                  
         MVC   SKYRECS,WKRECS      SET NUM OF RECS                              
         MVC   SKYEOFAD,WKLIBXAD   SET EOF ADDR                                 
         MVC   SKYEOFSP,WKLIBXSP   SET EOF DISP                                 
         MVC   SKYBNO+1(1),WKLIBXBR                                             
         MVC   SKYRNO+1(1),WKLIBXBR+1                                           
         MVC   SKYPAGE,WKLIBNDX    SET FIRST INDEX PAGE                         
*                                                                               
RDFFSTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
                                                                                
***********************************************************************         
* SUBROUTINE TO READ NEXT RECORD IN A WKFILE FILE                               
***********************************************************************         
RDFNXT   NTR1                      READ NEXT FILE RECORD                        
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
         TM    SKLCTRL,X'01'       TEST IF LIBRARY FILE                         
         BZ    RDFNXT2                                                          
         L     RE,SKYRECNO         NEXT REC IS THIS+1                           
         LA    RE,1(RE)                                                         
         ST    RE,SKYRECNO                                                      
         ST    RE,FUL              READ RANDOM ON LIBRARY FILE                  
         BAS   RE,RAN                                                           
         B     RDFNXTX                                                          
*                                                                               
RDFNXT2  LR    RE,R5               POINT TO NEXT REC IN BUFFER                  
         AH    RE,SKDISP                                                        
         MVC   SKLEN,0(RE)         SAVE LENGTH                                  
         LH    R1,SKLEN                                                         
         CH    R1,=H'1'                                                         
         BE    RDFNXT8             END OF REPORT                                
         BL    RDFNXT4             END OF BLOCK                                 
*                                                                               
         MOVE  ((R3),(R1)),(RE)    MOVE REC TO CALLERS PARM4                    
         LH    R1,SKLEN                                                         
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP           BUMP BUFFER DISPLACEMENT                     
         L     R1,SKCHRS           BUMP REC COUNT                               
         LA    R1,1(R1)                                                         
         ST    R1,SKCHRS                                                        
         B     RDFNXTX                                                          
*                                                                               
RDFNXT4  SR    RF,RF               BUMP TO NEXT BLOCK                           
         IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   RDFNXT6                                                          
         SR    RF,RF               BUMP TO NEXT TRACK                           
         ICM   RF,3,SKADDR                                                      
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
         CLM   RF,3,SKENDCI                                                     
         BNH   RDFNXT6                                                          
         MVC   SKSTRCI,SKNXTCI     BUMP TO NEXT CI                              
         MVC   SKADDR,SKNXTCI                                                   
         SR    RF,RF                                                            
         ICM   RF,3,SKADDR                                                      
         BZ    RDFNXTA                                                          
         LH    R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    *+8                                                              
         LH    R0,CJTRKS                                                        
         AR    RF,R0                                                            
         BCTR  RF,0                                                             
         STH   RF,SKENDCI                                                       
*                                                                               
RDFNXT6  GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKADDR,(R5)                  
         CLI   DMCB+8,0                                                         
         BNE   RDFNXTA+4                                                        
         LA    RF,WKDATA-WKINDEX                                                
         CLC   SKADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,WKDATA1-WKINDEX                                               
         STH   RF,SKDISP                                                        
         CLC   SKADDR,SKNXTCI      IS THIS FIRST REC OF CI                      
         BNE   RDFNXT2             NO                                           
         MVC   SKNXTCI(2),WKCINEXT YES SAVE START OF NEXT CI                    
         B     RDFNXT2                                                          
*                                                                               
RDFNXT8  MVI   DMCB+8,X'90'        SET EOF                                      
         B     RDFNXTB                                                          
RDFNXTA  MVI   DMCB+8,X'41'        FORMAT ERROR                                 
         CLI   SKACTN,X'09'                                                     
         BNE   *+10                                                             
         XC    SKFSTCI,SKFSTCI     RESET FOR NO I/O                             
RDFNXTB  XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
*                                                                               
RDFNXTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
                                                                                
***********************************************************************         
* SUBROUTINE TO READ RANDOM WKFILE RECORDS - RECORD NUMBER IN FUL               
***********************************************************************         
RAN      NTR1                                                                   
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
         OC    FUL,FUL             TEST IF WANT 0TH RECORD (HEADER)             
         BZ    RAN2                                                             
         CLC   FUL,=X'FFFFFFFF'    TEST IF WANT LAST RECORD                     
         BE    RAN2                                                             
         CLI   FUL,0               EXIT WITH ERROR IF SILLY RECNUM              
         BNE   RANE                                                             
*                                                                               
RAN1     OC    SKADDR,SKADDR       TEST IF ANY DATA IN CALLERS BUFFER           
         BZ    RAN2                NO READ FIRST BLOCK                          
         LR    R1,R7               YES COPY SAVE INTO WKREC                     
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
         B     RAN2E               GO AND SEE IF BUFFER IS USEFUL               
*                                                                               
RAN2     LR    R0,R4               READ FIRST BLOCK INTO CALLERS BUFFER         
         MVC   CIADDR,SKFSTCI                                                   
         CLC   SKADDR,SKFSTCI      TEST IF ALREADY IN CALLERS BUFFER            
         BE    RAN2B                                                            
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
RAN2B    MVC   SVLAST,WKTTBL       SAVE LAST BLOCK ADDR                         
         LR    R1,R7               COPY SAVE INTO WKREC                         
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
*                                                                               
RAN2C    OC    FUL,FUL             RETURN HEADER RECORD IF FUL=ZERO             
         BNZ   RAN2D                                                            
         LA    R6,4(R3)                                                         
         MVC   0(L'SOFLAB,R6),SOFLAB                                            
         LA    R6,L'SOFLAB(R6)                                                  
         MVC   0(L'SKINDEX,R6),SKINDEX                                          
         LA    R6,L'SKINDEX(R6)                                                 
         MVC   0(WKDATA1-WKINDEX,R6),WKINDEX                                    
         LA    R6,WKDATA1-WKINDEX(R6)                                           
         LA    R3,0(R3)                                                         
         SR    R6,R3                                                            
         SLL   R6,16                                                            
         ST    R6,0(R3)                                                         
         B     RANX                                                             
*                                                                               
RAN2D    CLC   FUL,=X'FFFFFFFF'    RETURN LAST RECORD IF FUL=FFFFFFFF           
         BNE   RAN2E                                                            
         TM    SKLCTRL,X'01'       TEST IF LIBRARY FILE                         
         BO    RANL                                                             
         MVC   FUL,WKRECS          EXTRACT LAST RECORD NUMBER                   
         OC    WKTTBL,WKTTBL                                                    
         BZ    RAN4                                                             
         MVC   SKADDR(3),WKTTBL    AND GET DISK ADDR OF LAST BLOCK              
         MVI   SKADDR+3,0                                                       
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKADDR,(R4)                  
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
         B     RAN4A               RECORD SHOULD BE IN THIS BLOCK               
*                                                                               
RAN2E    TM    SKLCTRL,X'01'                                                    
         BO    RANL                WKFILE IS LIBRARY FILE                       
*                                                                               
RAN4     L     R0,FUL              TEST IF RECORD IN BUFFER                     
         BCTR  R0,0                                                             
         C     R0,SKCHRS                                                        
         BNE   RAN4A                                                            
         BAS   RE,RDFNXT           RECNUM IS ONE HIGHER THAN PREV               
         BE    DMWRKRX                                                          
         TM    DMCB+8,X'90'                                                     
         BO    RANE                                                             
         B     RANG                                                             
RAN4A    LA    R0,1                R0=LOW REC IN BLOCK                          
         CLC   SKADDR,SKFSTCI                                                   
         BE    *+8                                                              
         L     R0,WKRECS                                                        
         C     R0,FUL                                                           
         BH    *+14                                                             
         CLC   WKRECH,FUL                                                       
         BNL   RANC                RECORD IS IN THIS BLOCK                      
         CLC   SKADDR,SKFSTCI                                                   
         BE    *+14                                                             
         XC    SKADDR,SKADDR       RECORD NOT IN BLOCK SO READ FIRST            
         B     RAN2                                                             
         CLC   FUL,WKRECS          TEST RECNUM TOO HIGH                         
         BH    RANE                                                             
*                                                                               
RAN6     OC    SKNXTCI(2),SKNXTCI  CALLERS BUFFER HAS FIRST CI REC              
         BZ    RAN8                                                             
         LA    R0,CXREC            READ FIRST REC IN NEXT CI INTO CXREC         
         MVC   CIADDR,SKNXTCI                                                   
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
         MVC   SVLAST,WKTTBL       SAVE LAST BLOCK ADDR                         
         CLC   FUL,CXREC+WKRECS-WKINDEX                                         
         BL    RAN8                                                             
         LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LR    R1,R7                                                            
         SR    R1,R4                                                            
         LA    R1,SKEND-SKBCTRL(R1)                                             
         MOVE  ((RF),(R1)),(RE)                                                 
         CLC   FUL,WKRECS                                                       
         BE    RANC                RECORD IS IN 1ST BLOCK OF THIS CI            
         B     RAN6                                                             
*                                                                               
RAN8     CLC   SKADDR(2),SKENDCI   CALLERS BUFFER HAS THE HOME CI               
         BE    RANA                                                             
         CLC   SVLAST(2),SKADDR    DON'T BUMP IF LAST TRACK                     
         BE    RANA                                                             
         MVC   CIADDR,SKADDR       BUMP TO NEXT TRACK                           
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LA    RF,1(RF)                                                         
         STH   RF,CIADDR                                                        
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,CXREC                 
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
*                                                                               
         CLC   WKUSRID,CXREC+WKUSRID-WKINDEX                                    
         BNE   RANA                                                             
         CLC   WKAGED(5),CXREC+WKAGED-WKINDEX                                   
         BNE   RANA                                                             
*                                                                               
         CLC   FUL,CXREC+WKRECS-WKINDEX                                         
         BL    RANA                                                             
         MVC   SKADDR,CIADDR                                                    
         LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LH    R1,CIBLKLN                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
         CLC   FUL,WKRECS          RECORD IS IN 1ST BLOCK OF THIS TRK           
         BE    RANC                                                             
         B     RAN8                                                             
*                                                                               
RANA     LA    R0,1                CALLERS BUFFER HAS THE HOME TRK              
         CLC   SKADDR,SKFSTCI                                                   
         BE    *+8                                                              
         L     R0,WKRECS                                                        
         C     R0,FUL                                                           
         BH    *+14                                                             
         CLC   WKRECH,FUL                                                       
         BNL   RANC                RECORD IS IN THIS BLOCK                      
         IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CLC   SKADDR+2(1),SKENDCI+2                                            
         BH    RANB                                                             
RANA1    GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKADDR,(R4)                  
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
         B     RANA                                                             
*                                                                               
RANB     CLC   SKADDR(2),SKENDCI   TEST LAST TRACK IN THIS CI                   
         BE    RANF                YES FORMAT ERROR                             
         SR    RF,RF                                                            
         ICM   RF,3,SKADDR         TRY NEXT TRACK                               
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
         B     RANA1                                                            
*                                                                               
RANC     LA    R0,1                CALLERS BUFFER HAS THE HOME BLOCK            
         LA    RE,WKDATA1                                                       
         CLC   SKADDR,SKFSTCI                                                   
         BE    *+12                                                             
         L     R0,WKRECS                                                        
         LA    RE,WKDATA                                                        
         L     R1,FUL                                                           
         SR    R1,R0               R1=RELATIVE REC IN BLOCK                     
         TM    SKLCTRL,X'01'                                                    
         BZ    *+8                                                              
         LH    R1,SKYRNO           LIBRARY FILE RELATIVE REC                    
         LTR   R1,R1                                                            
         BZ    RANC2                                                            
RANC1    MVC   HALF,0(RE)                                                       
         LH    R0,HALF                                                          
         CH    R0,=H'1'                                                         
         BNH   RANF                FORMAT ERROR ON END OF BLOCK                 
         AR    RE,R0                                                            
         BCT   R1,RANC1                                                         
RANC2    MVC   SKLEN,0(RE)         SAVE LEN OF RECORD                           
         LH    R1,SKLEN                                                         
         CH    R1,=H'1'                                                         
         BNH   RANF                FORMAT ERROR IF END OF BLOCK                 
         LA    R0,0(RE,R1)         SAVE DISPLACEMENT OF NEXT REC                
         SR    R0,R4                                                            
         STH   R0,SKDISP                                                        
         MVC   SKCHRS,FUL          SAVE RECORD NUMBER                           
         MOVE  ((R3),(R1)),(RE)                                                 
         B     RANX                EXIT WITH RECORD IN PARM4                    
*                                                                               
RANE     MVI   DMCB+8,X'90'        SET EOF/NOTFOUND                             
         B     RANH                                                             
RANF     MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     RANH                                                             
RANG     EQU   *                   SET DISK ERROR                               
*                                                                               
RANH     XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
         XC    SKYRECNO,SKYRECNO                                                
         B     RANX                                                             
*                                                                               
RANL     CLC   FUL,=X'FFFFFFFF'    LIBRARY BOOK - CALC POSN IN INDEX            
         BNE   *+10                                                             
         MVC   FUL,SKYRECS                                                      
         L     R0,FUL                                                           
         C     R0,SKYRECS                                                       
         BH    RANE                                                             
         BCTR  R0,0                                                             
         SRDL  R0,6                                                             
         SRL   R1,26                                                            
         STH   R1,SKYENO           SET INDEX ENTRY NUM                          
         CH    R0,SKYPNO                                                        
         BE    RANL2               INDEX PAGE IS ALREADY SAVED                  
         STH   R0,SKYPNO                                                        
         LR    R1,R4                                                            
         CLC   SKADDR,SKFSTCI                                                   
         BE    RANL0               INDEX RECORD IS ALREADY IN BUFFER            
         MVC   CIADDR,SKFSTCI                                                   
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,CXREC                 
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
         LA    R1,CXREC                                                         
RANL0    LH    RF,SKYPNO           SAVE INDEX PAGE IN CALLERS BUFFER            
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,WKLIBNDX-WKINDEX(R1,RF)                                       
         MVC   SKYPAGE,0(RF)                                                    
*                                                                               
RANL2    LH    RF,SKYENO           CALC DISK ADDR OF DATA BLOCK                 
         SLL   RF,1                                                             
         LA    RF,SKYPAGE(RF)                                                   
         MVC   SKYBNO+1(1),0(RF)   SET RELATIVE BLK NUM                         
         MVC   SKYRNO+1(1),1(RF)   SET RELATIVE REC NUM                         
         SR    RE,RE                                                            
         LH    RF,SKYBNO                                                        
         LH    R0,CIHIREC                                                       
         DR    RE,R0                                                            
         LA    RE,1(RE)            RE=ACTUAL BLK NUM                            
         SR    R0,R0                                                            
         ICM   R0,3,SKFSTCI                                                     
         AR    RF,R0               RF=ACTUAL TRK NUM                            
         STH   RF,CIADDR                                                        
         STC   RE,CIADDR+2                                                      
         MVI   CIADDR+3,0                                                       
         CLC   CIADDR,SKADDR       DATA BLOCK IS ALREADY IN CORE                
         BE    RANL2A                                                           
         MVC   SKADDR,CIADDR                                                    
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,SKADDR,(R4)                  
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
RANL2A   B     RANC                                                             
*                                                                               
RANX     CLI   DMCB+8,0                                                         
         XIT1                                                                   
                                                                                
***********************************************************************         
* SUBROUTINE TO CHANGE STATUS OF FILE - DRIVEN BY STPARM VALUES                 
***********************************************************************         
STAT     NTR1                                                                   
         MVI   DMCB+8,0                                                         
*                                                                               
STAT0    CLI   STACTN,0            SET NI/OI BITS IF ACTION SET                 
         BE    STAT2                                                            
         CLI   STACTN,03           DELETE ACTION                                
         BNE   *+16                                                             
         MVI   STNI,255-WKSTAC-WKSTHO                                           
         MVI   STOI,WKSTUS                                                      
         B     STAT2                                                            
         CLI   STACTN,04           HOLD ACTION                                  
         BNE   *+16                                                             
         MVI   STNI,255-WKSTAC-WKSTUS                                           
         MVI   STOI,WKSTHO                                                      
         B     STAT2                                                            
         CLI   STACTN,06           KEEP ACTION                                  
         BNE   *+16                                                             
         MVI   STNI,255                                                         
         MVI   STOI,WKSTKE                                                      
         B     STAT2                                                            
         CLI   STACTN,08           PURGE ACTION                                 
         BNE   *+16                                                             
         MVI   STNI,0                                                           
         MVI   STOI,0                                                           
         B     STAT2                                                            
         CLI   STACTN,10           RESTORE ACTION                               
         BNE   *+16                                                             
         MVI   STNI,255-WKSTUS-WKSTHO                                           
         MVI   STOI,WKSTAC                                                      
         B     STAT2                                                            
         CLI   STACTN,12           UNKEEP ACTION                                
         BNE   *+16                                                             
         MVI   STNI,255-WKSTKE                                                  
         MVI   STOI,0                                                           
         B     STAT2                                                            
         CLI   STACTN,14           KEY CHANGE ACTION                            
         BNE   *+16                                                             
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         B     STAT2                                                            
         DC    H'0'                INVALID ACTION                               
*                                                                               
STAT2    TM    STCTRL,X'01'        SET STATUS IN FILE RECORDS                   
         BZ    STAT4                                                            
         L     R5,STBUFFA          R5=A(I/O BUFFER FOR FILE RECS)               
         LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         MVC   SVNEXT(2),STFSTCI                                                
         MVC   SVNEXT+2(2),=X'0100'                                             
         GOTO1 ,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,(R5)                         
         TM    STCTRL,X'20'        TEST IF NATIVE CALL FROM USER                
         BZ    STAT2A                                                           
         CLC   SVNEXT,SKADDR       TEST IF FIRST REC IN USERS BUFFER            
         BNE   STAT2A                                                           
         MVC   CIADDR,SVNEXT       COPY USERS BUFFER INTO CXREC                 
         LH    R1,CIBLKLN                                                       
         LR    RF,R5                                                            
         LR    RE,R4                                                            
         MOVE  ((RF),(R1)),(RE)                                                 
         B     STAT2B                                                           
*                                                                               
STAT2A   OC    SVNEXT(2),SVNEXT    READ FIRST REC OF NEXT CI                    
         BZ    STAT4                                                            
         MVC   CIADDR,SVNEXT                                                    
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD)                                      
         CLI   DMCB+8,0                                                         
         BNE   STAT2E                                                           
*                                                                               
STAT2B   CLC   CIADDR(2),STFSTCI   SAVE FIRST CI VALUES                         
         BNE   STAT2C                                                           
         MVC   SVDATA,WKINDEX                                                   
         SR    RE,RE                                                            
         IC    RE,WKSEQ                                                         
         SH    RE,=H'1'                                                         
         STC   RE,SVSEQ                                                         
*                                                                               
STAT2C   IC    RE,SVSEQ            BUMP SAVED CI SEQ NUM                        
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         CLC   WKSEQ,SVSEQ         CHECK SAME SEQ NUM                           
         BNE   *+14                                                             
         CLC   WKBKEY,SVKEY        CHECK SAME KEY                               
         BE    STAT2D                                                           
         MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     STAT2E                                                           
*                                                                               
STAT2D   MVC   SVNEXT(2),WKCINEXT  BUILD CI ADDR LIST                           
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         CLI   STACTN,0                                                         
         BE    *+20                                                             
         NC    WKSTAT,STNI         SET NEW STATUS FROM ACTION                   
         OC    WKSTAT,STOI                                                      
         B     *+10                                                             
         MVC   WKSTAT,STVAL        SET NEW STATUS FROM VALUE                    
         CLI   WKSTAT,WKSTPU       CLEAR INDEX VALUE IF PURGED                  
         BNE   *+10                                                             
         XC    WKINDEX,WKINDEX                                                  
         CLI   STACTN,14           SET NEW KEY IF KEY CHANGE                    
         BNE   *+10                                                             
         MVC   WKBKEY,UKBKEY                                                    
*                                                                               
         CLI   OFFLINE,C'Y'                                                     
         BNE   STAT2DA                                                          
         CLI   WKSEQ,1                                                          
         BH    STAT2DA                                                          
         MVI   WKCOMNT,C'S'        STATUS CHANGE                                
         MVC   WKCOMNT+1(1),SAVEACT                                             
         MVC   WKCOMNT+2(8),JOBNAME                                             
         DATE  DUB                 GET DATE                                     
         PACK  FUL,DUB(6)                                                       
         L     R1,FUL                                                           
         SLL   R1,4                                                             
         STCM  R1,7,WKCOMNT+10                                                  
         THMS                      GET TIME                                     
         ST    R1,WKCOMNT+12                                                    
*                                                                               
STAT2DA  GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BE    STAT2A                                                           
*                                                                               
STAT2E   B     STATX               ERROR ON FILE I/O                            
*                                                                               
STAT4    TM    STCTRL,X'02'        SET STATUS IN INDEX RECORDS                  
         BZ    STATX                                                            
STAT4A   LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         MVI   STFLAG,0                                                         
STAT4B   CLC   2(2,R6),FFS         SORT CI ADDRS INTO ASCENDING ORDER           
         BE    STAT4B2                                                          
         CLC   2(2,R6),0(R6)       COMPARE NEXT ENTRY TO THIS                   
         BNL   STAT4B1                                                          
         XC    2(2,R6),0(R6)       SWAP IF IN WRONG ORDER                       
         XC    0(2,R6),2(R6)                                                    
         XC    2(2,R6),0(R6)                                                    
         OI    STFLAG,X'01'                                                     
STAT4B1  LA    R6,2(R6)            BUMP TO NEXT CI ADDR                         
         B     STAT4B                                                           
STAT4B2  TM    STFLAG,X'01'        DONE IF NO SWAPS THIS PASS                   
         BO    STAT4A                                                           
         ST    R6,STCILAST         SAVE A(LAST ENTRY IN CI ADDR LIST)           
*                                                                               
STAT4C   TM    STCTRL,X'40'        LOCK WKFILE UNLESS SPECIFIED                 
         BO    *+8                                                              
         BAS   RE,LOCKWK                                                        
         XC    FUL,FUL                                                          
         LA    R6,STCIAS           R6=A(SORTED LIST OF CI ADDRS)                
         TM    STCTRL,X'80'                                                     
         BZ    STAT4D                                                           
         CLC   2(2,R6),FFS                                                      
         BE    STAT4D                                                           
         L     R5,STCILAST         ADD MUST UPDATE FIRST CI LAST                
         MVC   2(2,R5),0(R6)                                                    
         MVC   4(2,R5),FFS         PUT FIRST CI AT END OF LIST                  
         MVC   CIADDR(2),0(R6)                                                  
         LA    R6,2(R6)                                                         
         CLI   OFFLINE,C'Y'        MUST READ FIRST INDEX IF ONLINE              
         BE    STAT4D                                                           
         BAS   RE,GETXPE                                                        
         BAS   RE,GETXAD                                                        
         L     R5,STBUFFA                                                       
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),WORKFIL,CXADDR,(R5)                  
         CLI   DMCB+8,0                                                         
         BNE   STAT4I                                                           
*                                                                               
STAT4D   L     R5,STBUFFA          R5=A(I/O BUFFER FOR INDEX RECS)              
         CLC   0(2,R6),FFS                                                      
         BE    STAT4D1                                                          
         MVC   CIADDR(2),0(R6)     SET INDEX PAGE DISK ADDR                     
         BAS   RE,GETXPE                                                        
         BAS   RE,GETXAD                                                        
         CLC   FUL,CXADDR          TEST IF PAGE IN CORE                         
         BE    STAT4D3                                                          
         OC    FUL,FUL             TEST IF FIRST PAGE READ                      
         BZ    STAT4D2                                                          
STAT4D1  EQU   *                                                                
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),,FUL                                  
         CLI   DMCB+8,0                                                         
         BNE   STAT4I              ERROR IN WRITE OF OLD PAGE                   
         CLC   0(2,R6),FFS                                                      
         BE    STAT4H                                                           
STAT4D2  GOTO1 DATAMGR,DMCB,(X'80',DMREAD),WORKFIL,CXADDR,(R5)                  
         CLI   DMCB+8,0                                                         
         BNE   STAT4I              ERROR IN READ OF NEW PAGE                    
         MVC   FUL,CXADDR                                                       
STAT4D3  LH    RE,CXENTRY                                                       
         MH    RE,CINDXLN                                                       
         AR    R5,RE               R5=A(INDEX ENTRY)                            
*                                                                               
STAT4E   CLI   STACTN,0            UPDATE INDEX ENTRY                           
         BE    *+20                                                             
         NC    WKSTAT,STNI         SET NEW STATUS FROM ACTION                   
         OC    WKSTAT,STOI                                                      
         B     *+10                                                             
         MVC   WKSTAT,STVAL        SET NEW STATUS FROM VALUE                    
         CLI   WKSTAT,WKSTPU                                                    
         BNE   *+14                                                             
         XC    WKINDEX,WKINDEX     CLEAR INDEX ENTRY IF PURGED                  
         B     STAT4G                                                           
         CLI   STACTN,14                                                        
         BNE   *+14                                                             
         MVC   WKBKEY,UKBKEY       SET NEW KEY IF KEY CHANGE                    
         B     STAT4G                                                           
*                                                                               
STAT4F   TM    STCTRL,X'80'        SET ADD DATA IN INDEX ENTRY                  
         BZ    STAT4G                                                           
         MVC   WKAGED(6),SVDATA+WKAGED-WKINDEX                                  
         CLC   CIADDR(2),STFSTCI                                                
         BNE   *+10                                                             
         MVC   WKSEQ,SVDATA+WKSEQ-WKINDEX                                       
*                                                                               
STAT4G   CLC   STXDADR,CXADDR      UPDATE CALLERS INDEX PAGE IF SAME            
         BNE   STAT4G1                                                          
         LR    RF,R5                                                            
         S     RF,STBUFFA                                                       
         A     RF,STXCADR                                                       
         MVC   0(L'WKINDEX,RF),0(R5)                                            
STAT4G1  LA    R6,2(R6)                                                         
         B     STAT4D                                                           
*                                                                               
STAT4H   SH    R6,=H'2'            END OF INDEX UPDATE                          
         LA    RF,STCIAS                                                        
         CR    RF,R6                                                            
         BE    *+20                                                             
         CLC   0(2,R6),0(RF)       ADJUST LIST IF FIRST CI IS LAST              
         BNE   *+10                                                             
         MVC   0(2,R6),FFS                                                      
         TM    STCTRL,X'40'        UNLOCK WKFILE UNLESS SPECIFIED               
         BO    *+12                                                             
         BAS   RE,UNLKWK                                                        
         BAS   RE,RLSEWK                                                        
         B     STATX                                                            
*                                                                               
STAT4I   BAS   RE,UNLKWK           ERROR ON INDEX I/O                           
         BAS   RE,RLSEWK                                                        
         DC    H'0'                                                             
*                                                                               
STATX    CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
                                                                                
***********************************************************************         
* ADD RECORDS TO WKFILE WITH KEY SPECIFIED BY PARM3.                            
*                                                                               
* THE FIRST COMMAND CAN BE AN OPTIONAL 'OPEN' SPECIFING KEY. RECORDS            
* ARE ADDED BY SUCCESSIVE 'ADD' COMMANDS, FOLLOWED BY AN OPTIONAL               
* 'CLOSE' COMMAND. IF THE KEY VALUE IN PARM3 CHANGES BETWEEN SUCCESSIVE         
* 'ADD' COMMANDS THEN AN AUTO CLOSE-OLD/OPEN-NEW IS PERFORMED. AFTER            
* THE LAST 'ADD' OF THE LAST FILE A 'CLOSE' MUST BE SPECIFIED.                  
*                                                                               
* FOR AN 'OPEN' COMMAND UKFLAG AT INDEX+13 IS USED AS FOLLOWS -                 
* X'80' = USE VALUE IN SOF RECORD FOR KEY.                                      
* X'40' = USE VALUE IN SOF RECORD FOR STATUS.                                   
* X'20' = USE VALUE IN SOF RECORD FOR DATE/TIME.                                
* X'10' = USE VALUE IN SOF RECORD FOR RETENTION.                                
* X'08' = USE VALUE IN SOF RECORD FOR COMMENT.                                  
* X'04' = SET TO INDICATE WKSUBPRG HAS SE NUMBER.                               
* X'02' = LIBRARY FILE.                                                         
* X'01' = ALLOW DUPLICATE KEYS.                                                 
*                                                                               
* THE INDEX ENTRY AT PARM4 IS MODIFIED BY RETURNING THE FILE NUMBER             
* ASSIGNED AND THE DISK ADDRESS OF THE FIRST CI.                                
***********************************************************************         
ADD      TM    SKACTRL,X'01'       INITIALISE BUFFER IF FIRST CALL              
         BO    ADD0                                                             
         MVI   SKACTRL,X'01'                                                    
         MVI   SKLCTRL,0                                                        
         MVI   SKSCTRL,0                                                        
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         XC    SKYCTRL,SKYCTRL                                                  
*                                                                               
ADD0     TM    SKACTRL,X'02'       FILE IS NOT OPEN - SO OPEN IT                
         BO    ADD2                                                             
         CLI   SKACTN,2                                                         
         BE    DMWRKRX             EXIT ON SPECIFIC CLOSE IF NOT OPEN           
         BAS   RE,OPN                                                           
         BNE   DMWRKRX             EXIT IF OPEN ERROR                           
         TM    SKACTRL,X'80'                                                    
         BO    DMWRKRX             EXIT ON SPECIFIC OPEN                        
         B     ADD                                                              
*                                                                               
ADD2     LR    R5,R4               FILE IS ALREADY OPEN                         
         LA    R6,ADD                                                           
         CLI   SKACTN,2                                                         
         BL    ADD6                ADD COMMAND                                  
         BH    ADD4                OPEN COMMAND -CLOSE AND REPROCESS            
         LA    R6,DMWRKRX          CLOSE COMMAND-CLOSE AND EXIT                 
*                                                                               
ADD4     LR    RF,R4               WRITE LAST BLOCK WITH EOF RECORD             
         AH    RF,SKDISP                                                        
         MVC   0(2,RF),=H'1'                                                    
         B     ADDD                                                             
ADD4A    MVI   P1,0                SET NORMAL CLOSE                             
         OC    WKRECH,WKRECH                                                    
         BNZ   *+8                                                              
         MVI   P1,1                SET ERROR CLOSE IF EMPTY FILE                
         TM    SKACTRL,X'20'       LIBRARY FILE CAN HAVE NO RECORDS             
         BZ    *+8                                                              
         MVI   P1,0                                                             
         L     RE,PARM1                                                         
         CLC   0(7,RE),=C'CLO/PUR'                                              
         BNE   *+8                                                              
         MVI   P1,1                SET ERROR CLOSE IF CLO&PUR                   
         CLC   0(7,RE),=C'CLO/ERR'                                              
         BNE   *+8                                                              
         MVI   P1,2                SET ERROR CLOSE IF CLO/ERR                   
         CLC   0(7,RE),=C'CLO/KEE'                                              
         BNE   *+8                                                              
         MVI   P1,3                SET KEEP CLOSE IF CLO/KEE                    
         BAS   RE,CLS                                                           
         BER   R6                  EXIT OR REPROCESS IF NO ERROR                
         B     DMWRKRX                                                          
*                                                                               
ADD6     CLC   UKBKEY,SKKEY        ADD KEY CHNGE-CLOSE AND REPROCESS            
         BNE   ADD4                                                             
         CLC   UKFILNO,SKFILNO                                                  
         BNE   ADD4                                                             
         SR    R6,R6               SET NORMAL WRITE                             
         MVC   SKLEN,0(R3)         SAVE AND CHECK REC LEN                       
         CLC   SKLEN,=H'2'                                                      
         BL    ADDERR1             FORMAT ERROR IF TOO SHORT                    
         LH    RF,CIBLKLN                                                       
         LA    RE,(WKDATA1-WKINDEX)+2                                           
         SR    RF,RE               RF=MAX LOGICAL RECORD SIZE                   
         CH    RF,SKLEN                                                         
         BL    ADDERR1             FORMAT ERROR IF TOO SHORT                    
*                                                                               
ADD8     LH    RF,CIBLKLN          TEST IF RECORD FITS IN BUFFER                
         SH    RF,SKDISP                                                        
         LH    RE,SKLEN                                                         
         LA    RE,2(RE)            NEED LEN+2 FOR END OF BUFFER                 
         CR    RF,RE                                                            
         BL    ADDD                WONT FIT                                     
         TM    SKACTRL,X'20'                                                    
         BZ    ADDA                                                             
         CLC   SKYRNO,MAXRNO                                                    
         BH    ADDD                MAX REC NUM EXCEEDED FOR LIBRARY             
*                                                                               
ADDA     LH    R1,SKLEN            MOVE RECORD TO BUFFER                        
         L     R0,SKCHRS                                                        
         AR    R0,R1                                                            
         ST    R0,SKCHRS           BUMP TOTAL CHRS                              
         L     R0,WKRECH                                                        
         AHI   R0,1                                                             
         ST    R0,WKRECH           BUMP HIGH REC IN BLOCK                       
         LA    RE,WKDATA-WKINDEX                                                
         CLC   SKADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RE,WKDATA1-WKINDEX                                               
         CH    RE,SKDISP                                                        
         BNE   *+8                                                              
         ST    R0,WKRECS           SET LOW REC IN BLOCK                         
         LR    RF,R4                                                            
         AH    RF,SKDISP                                                        
         MOVE  ((RF),(R1)),(R3)                                                 
         LH    R1,SKLEN                                                         
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP           SAVE NEW BUFFER DISPLACEMENT                 
*                                                                               
ADDB     TM    SKACTRL,X'20'       SET LIBRARY INDEX ENTRY                      
         BZ    ADDX                                                             
         OI    SKACTRL,X'10'                                                    
         LH    RF,SKYENO           BUILD INDEX ENTRY = BR                       
         SLL   RF,1                                                             
         LA    RF,SKYPAGE(RF)                                                   
         MVC   0(1,RF),SKYBNO+1                                                 
         MVC   1(1,RF),SKYRNO+1                                                 
         LH    RF,SKYENO           BUMP TO NEXT INDEX ENTRY                     
         LA    RF,1(RF)                                                         
         STH   RF,SKYENO                                                        
         CH    RF,MAXENO                                                        
         BNH   ADDB2               WRITE FULL INDEX PAGE TO INDEX REC           
ADDB1    MVC   CIADDR,SKSTRCI                                                   
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,CXREC                 
         CLI   DMCB+8,0                                                         
         BNE   ADDERR2                                                          
         LH    RF,SKYPNO                                                        
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,CXREC+WKLIBNDX-WKINDEX(RF)                                    
         MVC   0(L'SKYPAGE,RF),SKYPAGE                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,CIADDR,CXREC                  
         CLI   DMCB+8,0                                                         
         BNE   ADDERR2                                                          
         NI    SKACTRL,X'EF'       TURN OFF INDEX PENDING                       
         XC    SKYPAGE,SKYPAGE                                                  
         XC    SKYENO,SKYENO       RESET ENTRY NUM                              
         LH    RF,SKYPNO                                                        
         LA    RF,1(RF)                                                         
         STH   RF,SKYPNO           BUMP PAGE NUM                                
         CH    RF,MAXPNO                                                        
         BH    ADDERR3             ERROR TOO MANY RECS FOR INDEX                
ADDB2    LH    RF,SKYRNO                                                        
         LA    RF,1(RF)                                                         
         STH   RF,SKYRNO           BUMP REC NUM WITHIN BLOCK                    
         B     ADDX                                                             
*                                                                               
ADDD     CLC   SKADDR(2),SKENDCI   IS THIS CI FULL                              
         BNH   ADDE                NO WRITE BLOCK IN THIS CI                    
         MVI   P1,2                                                             
         BAS   RE,GCI              YES GET HIGH ORDER CI AND WRITE              
         OC    P1,P1                                                            
         BZ    ADDERR3             END OF FILE                                  
         CLC   P1,FFS                                                           
         BE    ADDERR2             DISK ERROR                                   
         B     ADDE1                                                            
*                                                                               
ADDE     GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,SKADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   ADDERR2                                                          
ADDE1    LTR   R6,R6               TEST IF LAST BLOCK WRITE                     
         BNZ   ADD4A               CLOSE FILE                                   
*                                                                               
ADDF     LA    RF,WKDATA-WKINDEX   RESET BUFFER DISPLACEMENT                    
         STH   RF,SKDISP                                                        
         IC    RF,SKADDR+2         BUMP DISK ADDR FOR NEXT WRITE                
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   ADDG                                                             
         SR    RF,RF                                                            
         ICM   RF,3,SKADDR         BUMP TO NEXT TRACK                           
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
*                                                                               
ADDG     TM    SKACTRL,X'20'       SET LIBRARY FILE BLOCK DATA                  
         BZ    ADDH                                                             
         XC    SKYRNO,SKYRNO       RESET REC NUM                                
         LH    RF,SKYBNO                                                        
         LA    RF,1(RF)                                                         
         STH   RF,SKYBNO           BUMP BLOCK NUM WITHIN CI                     
         CH    RF,MAXBNO                                                        
         BH    ADDERR3             ERROR TOO MANY BLOCKS                        
         CLC   SKADDR(2),SKENDCI                                                
         BH    ADDERR3             ERROR TOO MANY CI'S                          
*                                                                               
ADDH     LH    R1,SKDISP           INITIALISE NEW BUFFER                        
         LA    RE,WKDATA                                                        
         LH    RF,CIBLKLN                                                       
         SR    RF,R1                                                            
         XCEF                                                                   
         B     ADDA                GO PUT RECORD IN NEW BUFFER                  
*                                                                               
ADDERR1  MVI   PARM3,X'41'         FORMAT ERROR                                 
         B     ADDERRX                                                          
ADDERR2  MVI   PARM3,X'40'         DISK ERROR                                   
         B     ADDERRX                                                          
ADDERR3  MVI   PARM3,X'80'         END OF FILE ERROR                            
ADDERRX  MVC   FLAG,PARM3          SAVE ERROR TYPE                              
         MVI   P1,1                                                             
         BAS   RE,CLS              CLOSE FILE DUE TO ERROR ON ADD               
         MVC   PARM3(1),FLAG                                                    
*                                                                               
ADDX     B     DMWRKRX                                                          
                                                                                
***********************************************************************         
* SUBROUTINE TO OPEN FILE - DRIVEN BY OPEN TYPE IN UKFLAG                       
***********************************************************************         
OPN      NTR1                                                                   
         SR    R6,R6               R6=ZERO IF ADD DATA IN INDEX PARM3           
         CLI   SKACTN,7            TEST FOR SPECIFIC OPEN COMMAND               
         BE    OPN0                                                             
         CLC   UKFILNO,=X'FFFF'    ALLOW IMPLICIT OPEN IF THIS IS TRUE          
         BNE   OPN1                                                             
         TM    UKFLAG,X'01'        ALLOW DUPLICATE KEYS         X'01'           
         BZ    *+8                                                              
         OI    SKACTRL,X'40'       SET ALLOW DUPS FOR IMPLICIT OPEN             
         B     OPN1                                                             
*                                                                               
OPN0     OI    SKACTRL,X'80'       SET SPECIFIC OPEN                            
         TM    UKFLAG,X'01'        ALLOW DUPLICATE KEYS         X'01'           
         BZ    *+8                                                              
         OI    SKACTRL,X'40'       SET ALLOW DUPLICATES                         
         TM    UKFLAG,X'02'        LIBRARY FILE                 X'02'           
         BZ    *+8                                                              
         OI    SKACTRL,X'20'       SET LIBRARY FILE                             
         LA    R6,4+L'SOFLAB+L'SKINDEX(R3)                                      
         TM    UKFLAG,X'80'        TEST IF KEY FROM SOF RECORD  X'80'           
         BZ    OPN1                                                             
         MVC   UKBKEY,0(R6)                                                     
*                                                                               
OPN1     DATE  DUB                 GET DATE AND SAVE AT P5 (PWOS)               
         SR    R1,R1                                                            
         CLI   DUB,C'9'            TEST X'FA' THRU X'FF'IN YEAR BYTE            
         BNH   OPN1A                                                            
         IC    R1,DUB              SAVE FIRST YEAR BYTE                         
         MVI   DUB,C'0'                                                         
OPN1A    PACK  FUL,DUB(7)                                                       
         LTR   R1,R1               TEST DATE EXTENDED DATE FORMAT               
         BZ    OPN1B                                                            
         SLL   R1,4                                                             
         STC   R1,FUL+3                                                         
         OC    FUL(1),FUL+3        SET EXTENDED YEAR 4-BIT CODE (A-F)           
OPN1B    MVI   P5,0                                                             
         MVC   P5+1(3),FUL                                                      
*                                                                               
         THMS                      GET TIME AND SAVE AT P6 (PWOS)               
         SRL   R1,12                                                            
         ST    R1,P6               P6=X'0000HHMM'                               
*                                                                               
OPN2     OC    UKUSRID,UKUSRID     USER ID MUST BE SPECIFIED                    
         BNZ   OPN2A                                                            
         L     RE,=V(SSB)          UNLESS ONLINE VALUE FROM UTL ENTRY           
         USING SSBD,RE                                                          
         CLI   OFFLINE,C'Y'                                                     
         BE    OPNERR1                                                          
         L     RE,SSBTKADR                                                      
         USING TCBD,RE                                                          
         L     RE,TCBUTL                                                        
         USING UTLD,RE                                                          
         OC    TUSER,TUSER                                                      
         BZ    OPNERR1                                                          
         MVC   UKUSRID,TUSER                                                    
         DROP  RE                                                               
OPN2A    CLI   UKSYSPRG,0          SYSTEM MUST BE SPECIFIED                     
         BE    OPNERR1                                                          
*                                                                               
OPN4     LR    RE,R4               INITIALISE CALLERS BUFFER                    
         LH    RF,CIBLKLN                                                       
         XCEF                                                                   
         LR    R5,R4               R5=A(CALLERS BUFFER TO BUILD HDR)            
         MVC   WKBKEY,UKBKEY                                                    
OPN4A    MVI   WKSTAT,WKSTTE       SET TEMP STATUS                              
         TM    SKACTRL,X'80'                                                    
         BO    OPN4B               SET STATUS FOR SPECIFIC OPEN                 
         OI    WKSTAT,WKSTAC                                                    
         B     OPN4E                                                            
*                                                                               
OPN4B    TM    UKFLAG,X'40'        TEST IF STATUS FROM SOF RECORD               
         BZ    OPN4C                                                            
         OC    WKSTAT,WKSTAT-WKINDEX(R6)                                        
         B     OPN4D                                                            
*                                                                               
OPN4C    TM    UKSTAT,WKSTHO                                                    
         BZ    *+12                                                             
         OI    WKSTAT,WKSTHO       SET HOLD STATUS                              
         B     *+8                                                              
         OI    WKSTAT,WKSTAC       SET ACTV STATUS                              
*                                                                               
         TM    UKSTAT,WKSTKE                                                    
         BZ    *+8                                                              
         OI    WKSTAT,WKSTKE       SET KEEP STATUS                              
OPN4D    TM    SKACTRL,X'20'                                                    
         BZ    *+8                                                              
         NI    WKSTAT,255-WKSTTE   LIBRARY FILES ARE CREATED LIVE               
*                                                                               
OPN4E    TM    SKACTRL,X'80'       SET DATE/TIME FOR SPECIFIC OPEN              
         BZ    OPN4F                                                            
         TM    UKFLAG,X'20'                                                     
         BZ    OPN4F                                                            
         MVC   P5+1(3),WKAGED-WKINDEX(R6)                                       
         MVC   P6+2(2),WKAGET-WKINDEX(R6)                                       
OPN4F    MVC   WKAGED,P5+1                                                      
         MVC   WKAGET,P6+2                                                      
         MVC   WKDATEC,P5+1                                                     
         MVC   WKTIMEC,P6+2                                                     
*                                                                               
OPN4G    TM    SKACTRL,X'80'       SET RETENTION DAYS FOR SPECIFIC OPEN         
         BZ    OPN4H                                                            
         TM    UKFLAG,X'10'                                                     
         BZ    OPN4H                                                            
         MVC   WKRETN,WKRETN-WKINDEX(R6)                                        
*                                                                               
OPN4H    TM    SKACTRL,X'80'       SET COMMENT FOR SPECIFIC OPEN                
         BZ    OPN4J                                                            
         TM    UKFLAG,X'08'                                                     
         BZ    OPN4J                                                            
         MVC   WKCOMNT,WKCOMNT-WKINDEX(R6)                                      
*                                                                               
OPN4J    CLI   OFFLINE,C'Y'                                                     
         BNE   OPN4K                                                            
         L     RE,=V(SSB)          PICK UP A(MASTC)                             
         ICM   RE,15,SSOMASTC-SSOOFF(RE)                                        
         BZ    OPN4K                                                            
         USING MASTD,RE                                                         
         USING PQRECD,RF                                                        
         LA    RF,MCREMPQK                                                      
         MVC   WKPQUSER,MCREMPQK   Save user id                                 
*&&UK*&& MVC   WKPQCI,MCREMPQA                                                  
*&&US*&& MVC   WKPQREP#,PQREPNO    save report number (sequence)                
*&&US*&& OI    WKIND1,WKIREP#      Set report # not CI                          
         DROP  RE,RF                                                            
*                                                                               
OPN4K    TM    SKACTRL,X'80'       SET FILE TYPE FOR SPECIFIC OPEN              
         BZ    OPN6                                                             
         TM    SKACTRL,X'40'                                                    
         BZ    *+8                                                              
         OI    WKFTYPE,X'01'       SET DUPS ALLOWED                             
         TM    SKACTRL,X'20'                                                    
         BZ    *+8                                                              
         OI    WKFTYPE,X'02'       SET LIBRARY FILE                             
*                                                                               
OPN6     MVI   P1,1                GET FIRST CI FOR FILE                        
         OI    WKFTYPE,X'80'       SET NEW STYLE FILE FOR COMPATABLE            
         BAS   RE,GCI                                                           
         OC    P1,P1               TEST FOR ERRORS                              
         BZ    OPNERR3                                                          
         CLC   P1,FFS                                                           
         BE    OPNERR2                                                          
         MVC   UKFILNO,WKFILNO     SET CALLERS INDEX DATA                       
         MVC   UKCIADDR,SKADDR                                                  
         MVC   SKPAGE(4),P1        SAVE INDEX DATA IN BUFFER                    
         MVC   SKINDEX,UKINDEX                                                  
         OI    SKACTRL,X'02'       SET FILE OPEN FLAG                           
         MVI   PARM3,0                                                          
*                                                                               
OPN8     TM    SKACTRL,X'20'       ADJUST FOR LIBRARY FILE                      
         BZ    OPNX                                                             
         LA    RF,WKDATA-WKINDEX   BUMP TO FIRST REC IN NEXT BLOCK              
         STH   RF,SKDISP                                                        
         IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         XC    WKFATTR,WKFATTR                                                  
         XC    SKYCTRL,SKYCTRL                                                  
         MVC   SKYBNO,=H'1'        SET BLOCK NUMBER                             
         B     OPNX                                                             
*                                                                               
OPNERR1  MVI   PARM3,X'41'         FORMAT ERROR                                 
         B     OPNERRX                                                          
OPNERR2  MVI   PARM3,X'40'         DISK ERROR                                   
         B     OPNERRX                                                          
OPNERR3  MVI   PARM3,X'80'         END OF FILE                                  
         B     OPNERRX                                                          
OPNERRX  EQU   *                                                                
OPNX     CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
                                                                                
***********************************************************************         
* SUBROUTINE TO CLOSE FILE - DRIVEN BY CLOSE TYPE IN P1                         
***********************************************************************         
CLS      NTR1                                                                   
         LR    R5,R4               R5=A(CALLERS BUFFER)                         
         CLI   P1,2                                                             
         BNE   *+12                                                             
         OI    WKSTAT,WKSTER       IF CLO/ERR SET WKSTER - ERROR STATUS         
         MVI   P1,0                                                             
         CLI   P1,3                                                             
         BNE   *+12                                                             
         OI    WKSTAT,WKSTKE       IF CLO/KEE SET WKSTKE - KEEP STATUS          
         MVI   P1,0                                                             
*                                                                               
         CLI   P1,0                                                             
         BNE   CLS0                                                             
*                                                                               
         MVC   P1+1(1),WKSEQ       NORMAL CLOSE SAVE BUFFER DATA                
         CLI   P1+1,0                                                           
         BNE   *+8                                                              
         MVI   P1+1,1              NUMBER OF CIS                                
         MVC   P3,WKRECH           NUMBER OF RECORDS                            
         MVC   P4,SKCHRS           NUMBER OF CHRS                               
         MVC   P5,SKADDR           DISK ADDRESS OF LAST BLOCK                   
         TM    SKACTRL,X'20'                                                    
         BZ    CLS0                                                             
         MVI   P1+1,0              LIBRARY FILE HAS ZERO CIS                    
*                                                                               
CLS0     MVC   CIADDR,SKSTRCI      SET FIRST RECORD IN LAST CI                  
         XC    FUL,FUL                                                          
         IC    RE,WKSEQ                                                         
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         LA    R6,STCIAS           R6=A(AREA TO BUILD LIST OF CI ADDRS)         
*                                                                               
CLS2     GOTO1 DATAMGR,DMCB,(X'00',DMREAD),WORKFIL,CIADDR,(R5)                  
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
         MVC   DUB(2),WKCINEXT     SAVE LINK BACK TO PREV CI                    
         MVC   WKCINEXT,FUL        SET LINK FORWARD TO NEXT CI                  
         OC    DUB(2),DUB                                                       
         BNZ   *+16                                                             
         CLI   SVSEQ,2             ADJUST SEQ NUM OF FIRST CI OF MULTI          
         BNE   *+8                                                              
         MVI   WKSEQ,1                                                          
         SR    RE,RE               CHECK SEQ NUM IS VALID                       
         IC    RE,SVSEQ                                                         
         BCTR  RE,0                                                             
         STC   RE,SVSEQ                                                         
         CLC   WKSEQ,SVSEQ                                                      
         BNE   CLSERR1                                                          
*                                                                               
CLS4     NI    WKSTAT,255-WKSTTE   TURN OFF TEMPORARY FILE FLAG                 
         MVC   WKAGES,P1+1         SET SIZE OF FILE                             
         CLI   P1,0                                                             
         BE    CLS6                                                             
         XC    WKINDEX,WKINDEX     CLEAR INDEX IF ERROR CLOSE                   
*                                                                               
CLS6     OC    DUB(2),DUB          SET VALUES IN FIRST CI                       
         BNZ   CLS8                                                             
         MVC   WKRECS,P3           SET TOTAL NUMBER OF RECORDS                  
         MVC   WKTTBL,P5           SET TTB ADDRESS OF LAST BLOCK                
         SR    RE,RE                                                            
         L     RF,P4                                                            
         L     R0,P3                                                            
         LTR   R0,R0                                                            
         BNZ   *+10                                                             
         SR    RF,RF                                                            
         B     *+6                                                              
         DR    RE,R0                                                            
         STH   RF,WKRECL           SET AVERAGE RECORD LENGTH                    
         TM    SKACTRL,X'20'                                                    
         BZ    CLS8                                                             
         MVC   WKLIBXAD,SKADDR     SET LIB EOF ADDR                             
         MVC   WKLIBXSP,SKDISP     SET LIB EOF DISP                             
         MVC   WKLIBXBR(1),SKYBNO+1                                             
         MVC   WKLIBXBR+1(1),SKYRNO+1                                           
         TM    SKACTRL,X'10'                                                    
         BZ    CLS8                                                             
         LH    RF,SKYPNO           SET LIB LAST INDEX PAGE                      
         LA    RE,L'SKYPAGE                                                     
         MR    RE,RE                                                            
         LA    RF,WKLIBNDX-WKINDEX(R5,RF)                                       
         MVC   0(L'SKYPAGE,RF),SKYPAGE                                          
*                                                                               
CLS8     GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         OC    DUB(2),DUB          TEST IF FIRST CI                             
         BZ    CLSA                                                             
         MVC   FUL,CIADDR          SAVE ADDR OF THIS CI                         
         MVC   CIADDR(2),DUB       SAVE ADDR OF PREV CI                         
         B     CLS2                                                             
*                                                                               
CLSA     MVC   STFSTCI,CIADDR      SAVE DISK ADDR OF FIRST CI                   
         TM    SKACTRL,X'20'       TEST IF LIBRARAY FILE                        
         BZ    *+12                                                             
         CLI   P1,0                                                             
         BE    CLSC                                                             
         MVC   SVDATA,WKINDEX      SET PARAMS FOR INDEX STATUS CHANGE           
         XC    STPARM,STPARM                                                    
         MVC   STVAL,WKSTAT        USE STATUS VALUE IN FIRST CI                 
         MVI   STCTRL,X'82'        SET UPDATE INDEX ON ADD                      
         MVC   STFSTCI(2),CIADDR                                                
         LA    RE,CXREC            USE CXREC AS INDEX I/O AREA                  
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO1 INDEX UPDATE ROUTINE                   
         BNE   CLSERR3                                                          
*                                                                               
CLSC     MVI   PARM3,0                                                          
         MVI   SKACTRL,X'01'                                                    
         XC    SKFCTRL,SKFCTRL     CLEAR FILE INFO AND SET FIRST CI             
         MVC   SKFSTCI(2),STFSTCI                                               
         MVC   SKFSTCI+2(2),=X'0100'                                            
         XC    SKXCTRL,SKXCTRL     CLEAR INDEX INFO                             
         LR    R0,R4               SET FILE INFO FOR FIRST CI                   
         MVC   CIADDR,SKFSTCI                                                   
         BAS   RE,RDFADD                                                        
         B     CLSX                                                             
*                                                                               
CLSERR1  MVI   PARM3,X'41'         FORMAT ERROR ON FILE UPDATE                  
         B     *+8                                                              
CLSERR2  MVI   PARM3,X'40'         DISK ERROR ON FILE UPDATE                    
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'01'                                                    
         B     CLSX                                                             
CLSERR3  XC    SKFCTRL,SKFCTRL     ERROR ON INDEX UPDATE                        
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'01'                                                    
         DC    H'0'                                                             
*                                                                               
CLSX     CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         XIT1                                                                   
                                                                                
***********************************************************************         
* SEARCH INDEX FOR ENTRY FOR NEW CONTROL INTERVAL FOR BUFFER AT R4              
* P1=01 FOR 1ST INDEX  - SMALL CI'S                                             
* P1=02 FOR 2ND INDEX  - LARGE CI'S                                             
* P1(4) SET TO ZEROS=EOF,FFS=ERROR,OR ELSE INDEX PAGE/ENTRY                     
* P2(4) SET TO FILE SEQUENCE NUMBER                                             
***********************************************************************         
GCI      NTR1                                                                   
         BAS   RE,LOCKWK           LOCK WKFILE DURING SEARCH OF INDEX           
         MVC   FLAG,P1                                                          
*                                                                               
GCI0     XC    P2,P2               SET P2 TO HIGH FILE NUM FOR USERID           
         LA    RE,AVSTAT                                                        
         LA    RF,AVTBL                                                         
GCI0A    XC    0(L'AVTBL,RF),0(RF) SET TABLE OF STATUS VALUES                   
         MVC   0(1,RF),0(RE)                                                    
         MVC   5(4,RF),FFS         SET OLDEST REPORT TO PWOS=YYMMDDHH           
         LA    RE,1(RE)                                                         
         LA    RF,L'AVTBL(RF)                                                   
         CLI   0(RE),X'FF'                                                      
         BNE   GCI0A                                                            
         MVI   0(RF),X'FF'                                                      
*                                                                               
GCI2     BAS   RE,CXLOOPI          R5=A(PART1 INDEX ENTRY IN CXREC)             
         USING WKRECD,R5                                                        
         TM    FLAG,X'01'                                                       
         BO    GCI4                                                             
         CLI   OFFLINE,C'Y'        MUST READ FIRST INDEX IF ONLINE              
         BE    GCI2A                                                            
         BAS   RE,GETXAD                                                        
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),WORKFIL,CXADDR,CXREC                 
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
GCI2A    BAS   RE,CXLOOPJ          R5=A(PART2 INDEX ENTRY IN CXREC)             
*                                                                               
GCI4     BAS   RE,GETXAD                                                        
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),WORKFIL,CXADDR,CXREC                 
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
*                                                                               
GCI6     TM    FLAG,X'02'          PART2 - EXIT WITH FIRST PURGED SLOT          
         BZ    GCI8                                                             
         CLI   WKSTAT,WKSTPU                                                    
         BNE   GCIE                                                             
         MVC   AVTBL+1(4),CXPAGE                                                
         B     GCIF                                                             
*                                                                               
GCI8     CLI   FLAG,X'01'          PART1 - TEST FOR DUPLICATE KEYS              
         BNE   GCIA                                                             
         TM    SKACTRL,X'40'       UNLESS DUPLICATES ALLOWED                    
         BO    GCIA                                                             
         CLC   WKBKEY,UKBKEY         TEST IF KEY ALREADY EXISTS                 
         BNE   GCIA                                                             
         TM    WKSTAT,WKSTTE       IGNORE TEMPORARY FILES                       
         BO    GCIA                                                             
         MVC   SVBUFF,0(R4)        SAVE USER BUFFER HDR                         
         XC    STPARM,STPARM                                                    
         MVI   STVAL,WKSTPU                                                     
         MVI   STCTRL,X'43'        SET NOLOCK/INDEX/FILE                        
         BAS   RE,GETCAD                                                        
         MVC   STFSTCI,CIADDR      SET FILE ADDR                                
         ST    R4,STBUFFA                                                       
         LA    RE,CXREC            SET ADDR OF MY COPY INDEX PAGE               
         ST    RE,STXCADR                                                       
         MVC   STXDADR,CXADDR                                                   
         MVC   P1,CXPAGE                                                        
         BAS   RE,STAT             PURGE DUPLICATE FILE                         
         BNE   GCIERR                                                           
         MVC   CXPAGE(4),P1        RESTORE SAVED DATA                           
         MVC   CXADDR,STXDADR                                                   
         LR    RE,R4                                                            
         LH    RF,CIBLKLN                                                       
         XCEF                                                                   
         MVC   0(L'SVBUFF,R4),SVBUFF                                            
*                                                                               
GCIA     CLI   WKSTAT,WKSTPU       SAVE ADDR OF FIRST PART1 PURGED SLOT         
         BNE   GCIB                                                             
         OC    AVTBL+1(4),AVTBL+1                                               
         BNZ   GCIE                                                             
         MVC   AVTBL+1(4),CXPAGE                                                
         B     GCIE                                                             
*                                                                               
GCIB     CLC   WKUSRID,UKUSRID     SAVE HIGH FILE NUMBER FOR USER ID            
         BNE   GCIC                                                             
         CLC   P2+2(2),WKFILNO                                                  
         BH    GCIC                                                             
         MVC   P2+2(2),WKFILNO                                                  
*                                                                               
GCIC     TM    WKSTAT,WKSTTE       IGNORE TEMPORARY ENTRYS                      
         BO    GCIE                                                             
         TM    FLAG,X'80'          IGNORE SINGLE ENTRYS IF PURGE SEARCH         
         BZ    GCID                                                             
         CLI   WKSEQ,0                                                          
         BE    GCIE                                                             
*                                                                               
GCID     LA    RF,AVTBL            SAVE OLDEST/LARGEST FILE FOR TYPE            
         LA    RF,L'AVTBL(RF)                                                   
         CLI   0(RF),X'FF'                                                      
         BE    GCIE                                                             
         CLC   0(1,RF),WKSTAT      COMPARE STATUS                               
         BNE   GCID+4                                                           
         CLC   5(4,RF),WKAGED      COMPARE YYMMDDHH                             
         BL    GCIE                                                             
         BH    *+14                                                             
         CLC   9(1,RF),WKAGES      COMPARE SIZE IF SAME YYMMDDHH                
         BH    GCIE                                                             
         MVC   1(4,RF),CXPAGE      SAVE PAGE/ENTRY                              
         MVC   5(4,RF),WKAGED      SAVE YYMMDDHH                                
         MVC   9(1,RF),WKAGES      SAVE SIZE                                    
*                                                                               
GCIE     BAS   RE,CXLOOPX          BUMP TO NEXT INDEX ENTRY                     
         B     GCI6                                                             
         B     GCI4                END OF INDEX PAGE                            
*                                                                               
GCIF     LA    RF,AVTBL            END OF INDEX SEARCH                          
         TM    FLAG,X'80'                                                       
         BZ    *+8                 IGNORE FIRST ENTRY IF PURGE SEARCH           
GCIF0    LA    RF,L'AVTBL(RF)                                                   
         CLI   0(RF),X'FF'                                                      
         BE    GCIF2                                                            
         OC    1(4,RF),1(RF)       FIND FIRST AVAIL ENTRY                       
         BZ    GCIF0                                                            
         MVC   P1,1(RF)            SAVE INDEX PAGE/ENTRY                        
         B     GCIG                                                             
*                                                                               
GCIF2    TM    FLAG,X'02'          NO SPACE IN PART2 INDEX                      
         BZ    GCIF4                                                            
         MVI   FLAG,X'81'          GO SEARCH PART1 FOR A FILE TO PURGE          
         B     GCI0                                                             
*                                                                               
GCIF4    XC    P1,P1               RETURN EOF IF NO SPACE IN PART1              
         B     GCIX                                                             
*                                                                               
GCIG     CLI   0(RF),WKSTPU        PURGE OLDEST/LARGEST FILE                    
         BE    GCII                                                             
         XC    STPARM,STPARM                                                    
         MVI   STVAL,WKSTPU                                                     
         MVI   STCTRL,X'43'        SET NOLOCK/INDEX/FILE                        
         MVC   CXPAGE(4),P1                                                     
         BAS   RE,GETCAD                                                        
         MVC   STFSTCI,CIADDR      SET FILE ADDR                                
         LA    RE,CXREC                                                         
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT                                                          
         BNE   GCIERR              CXADDR DEFINES PAGE LEFT IN CXREC            
*                                                                               
GCIH     MVC   CIADDR(2),STCIAS    USE FIRST CI OF PURGED FILE IF PART1         
         TM    FLAG,X'80'                                                       
         BZ    *+18                                                             
         MVI   FLAG,X'02'          RESET TO PART2 IF PURGE FOR PART2            
         L     RE,STCILAST                                                      
         MVC   CIADDR(2),0(RE)     USE LAST CI OF PURGED FILE IF PART2          
         BAS   RE,GETXPE                                                        
         MVC   P1,CXPAGE                                                        
*                                                                               
GCII     LR    R5,R4               ADJUST PART1 CI DATA IN BUFFER               
         TM    FLAG,X'01'                                                       
         BZ    GCIJ                                                             
         L     RF,P2                                                            
         C     RF,MAXSEQ                                                        
         BL    *+14                                                             
         XC    P1,P1               RETURN EOF IF MAX SEQ NUM EXCEEDED           
         B     GCIX                                                             
         LA    RF,1(RF)                                                         
         ST    RF,P2                                                            
         MVC   WKFILNO,P2+2        SET FILE NUMBER IN FIRST CI                  
         B     GCIK                                                             
*                                                                               
GCIJ     CLI   WKSEQ,255           ADJUST PART2 CI DATA IN BUFFER               
         BNE   *+14                                                             
         XC    P1,P1               RETURN EOF IF TOO MANY CI'S                  
         B     GCIX                                                             
         CLI   WKSEQ,0             SET SEQ NUM IN FIRST PART2 CI                
         BNE   *+8                                                              
         MVI   WKSEQ,1                                                          
         IC    RF,WKSEQ            BUMP SEQ NUM                                 
         LA    RF,1(RF)                                                         
         STC   RF,WKSEQ                                                         
         MVC   WKCINEXT,SKSTRCI    CHAIN THIS CI TO PREVIOUS CI                 
*                                                                               
GCIK     MVC   CXPAGE(4),P1        SET ADDRESS OF CI TO BE USED                 
         BAS   RE,GETCAD                                                        
         MVC   SKADDR,CIADDR       SAVE CI DATA IN BUFFER                       
         LA    RF,WKDATA-WKINDEX                                                
         TM    FLAG,X'01'                                                       
         BZ    *+8                                                              
         LA    RF,WKDATA1-WKINDEX                                               
         STH   RF,SKDISP                                                        
         MVC   SKSTRCI,CIADDR                                                   
         MVC   SKENDCI,CIADDRX                                                  
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,CIADDR,(R4)                   
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
*                                                                               
GCIL     MVC   FUL,CXADDR          UPDATE INDEX PAGE                            
         BAS   RE,GETXAD                                                        
         CLC   FUL,CXADDR          TEST IF STILL IN CXREC                       
         BE    GCIL0                                                            
         GOTO1 DATAMGR,DMCB,(X'80',DMREAD),WORKFIL,CXADDR,CXREC                 
         CLI   8(R1),0                                                          
         BNE   GCIERR                                                           
GCIL0    LH    RF,CXENTRY          SET INDEX ENTRY WITH PARTN/CPU               
         MH    RF,CINDXLN                                                       
         LA    RF,CXREC(RF)                                                     
         MVC   0(L'WKINDEX,RF),WKINDEX                                          
         TM    WKSTAT,WKSTTE       UNLESS PERMANENT CI                          
         BZ    *+10                                                             
         MVC   WKAGED-WKINDEX(4,RF),CIP3                                        
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),WORKFIL,CXADDR,CXREC                  
         CLI   8(R1),0                                                          
         BE    GCIX                                                             
*                                                                               
GCIERR   MVC   P1,FFS              RETURN DISK ERROR                            
*                                                                               
GCIX     BAS   RE,UNLKWK           UNLOCK WKFILE                                
         BAS   RE,RLSEWK                                                        
         XIT1                                                                   
                                                                                
***********************************************************************         
* LOCKING                                                                       
***********************************************************************         
LOCKWK   ST    RE,SAVRE            TEST TO ENQUEUE WKFILE                       
         CLI   VWKFILE,X'F4'                                                    
         BE    LOCKWK1                                                          
         BH    LOCKWK2                                                          
         BR    RE                                                               
LOCKWK1  BAS   RE,WKLOCK                                                        
         B     *+8                                                              
LOCKWK2  BAS   RE,FWLOCK                                                        
         MVI   ENQFLAG,C'E'        SET ENQUEUE PERFORMED                        
LOCKWKX  L     RE,SAVRE                                                         
         BR    RE                                                               
*                                                                               
UNLKWK   ST    RE,SAVRE            TEST TO DEQUEUE WKFILE                       
         CLI   VWKFILE,X'F4'                                                    
         BE    UNLKWK1                                                          
         BH    UNLKWK2                                                          
         BR    RE                                                               
UNLKWK1  BAS   RE,WKUNLK                                                        
         B     *+8                                                              
UNLKWK2  BAS   RE,FWUNLK                                                        
         MVI   ENQFLAG,C'D'        SET DEQUEUE PERFORMED                        
UNLKWKX  L     RE,SAVRE                                                         
         BR    RE                                                               
*                                                                               
RLSEWK   ST    RE,SAVRE            TEST TO RELEASE WKFILE FROM LOCKTAB          
         CLI   OFFLINE,C'Y'                                                     
         BER   RE                                                               
         LA    R1,CIP1                                                          
         XC    0(4,R1),0(R1)                                                    
         MVC   0(1,R1),VWKFILE     SET FILE NUMBER                              
         GOTO1 =V(LOCKER)                                                       
RLSEWKX  L     RE,SAVRE                                                         
         BR    RE                                                               
*                                                                               
       ++INCLUDE DMWRKRR           WRKR ROUTINES                                
*                                                                               
DATAMGR  DC    V(DATAMGR)                                                       
VENQDEQ  DC    V(DMENQDEQ)                                                      
VDADDS   DC    V(DADDS)                                                         
VRDID    DC    V(RDID)                                                          
VWTID    DC    V(WTID)                                                          
JOBNAME  DC    CL8'        '                                                    
MAXSEQ   DC    F'9999'                                                          
FFS      DC    8X'FF'                                                           
DMREAD   DC    CL8'DMREAD'                                                      
DMWRT    DC    CL8'DMWRT'                                                       
LABEL    DC    CL8'*WKSAVE*'                                                    
SOFLAB   DC    CL8'*SOFSOF*'                                                    
EOFLAB   DC    CL8'*EOFEOF*'                                                    
PART2IND DC    XL4'00',XL10'7FFF7FFF000000010100',XL6'00'                       
*                                                                               
MAXENO   DC    H'063'              064 = MAX ENTRYS PER INDEX PAGE              
MAXPNO   DC    H'023'              024 = MAX PAGES PER INDEX                    
MAXBNO   DC    H'255'              256 = MAX BLOCKS PER FILE                    
MAXRNO   DC    H'255'              256 = MAX RECS PER BLOCK                     
AVSTAT   DC    X'0020FF'           AVAIL=PURGED/USED                            
         LTORG                                                                  
                                                                                
WRKD     DSECT                                                                  
DUB      DS    D                                                                
FUL      DS    F                                                                
FUL1     DS    F                                                                
SAVRE    DS    F                                                                
DMCB     DS    6F                                                               
*                                                                               
VWKTAB   DS    A                                                                
VWKFILE  DS    A                                                                
WORKFIL  DS    CL8                                                              
MYLABEL  DS    CL8                                                              
OFFLINE  DS    C                                                                
ENQFLAG  DS    C                                                                
SAVEACT  DS    C                                                                
         DS    C                                                                
*                                                                               
PARM1    DS    F                                                                
PARM2    DS    F                                                                
PARM3    DS    F                                                                
PARM4    DS    F                                                                
PARM5    DS    F                                                                
PARM6    DS    F                                                                
*                                                                               
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
APARM    DS    F                                                                
SVLAST   DS    F                                                                
HALF     DS    H                                                                
FLAG     DS    X                                                                
SVSEQ    DS    X                                                                
SVNEXT   DS    F                                                                
SVKEY    DS    0CL9                LEN=L'KEY                                    
SVINDEX  DS    0CL16               LEN=L'USER-INDEX                             
SVDATA   DS    CL20                LEN=L'ACTUAL-INDEX                           
SVBUFF   DS    CL64                LEN=L'BUFFER-HEADER                          
*                                                                               
AVTBL    DS    6XL10               NUM ENTRYS GE NUM ENTRYS IN AVSTAT           
         DS    XL4                                                              
*                                                                               
STPARM   DS    0CL20                                                            
STACTN   DS    XL1                 ACTION VALUE FROM WKACTNS TABLE              
STVAL    DS    XL1                 STATUS VALUE IF ZERO ACTION VALUE            
STCTRL   DS    XL1                 CONTROL 01=FILE,02=INDEX,80=ADD              
STFLAG   DS    XL1                 FLAG FOR WORK                                
STNI     DS    XL1                 NI STATUS BITS                               
STOI     DS    XL1                 OI STATUS BITS                               
STFSTCI  DS    XL2                 TTTT OF FIRST CI                             
STBUFFA  DS    A                   A(I/O BUFFER)                                
STXCADR  DS    A                   CORE ADDR OF COPY INDEX PAGE                 
STXDADR  DS    F                   DISK ADDR OF COPY INDEX PAGE                 
STCILAST DS    A                   A(LAST ENTRY IN CI ADDR LIST)                
STCIAS   DS    258XL2              TTTT OF EACH CI IN FILE                      
*                                                                               
       ++INCLUDE DMWRKRW           WRKR WORKING STORAGE                         
         DS    2F                  EXTRA CIP4/CIP5 FOR LOCKER                   
*                                                                               
CXREC    DS    6144C                                                            
         DS    256C                ROOM FOR SAVE AREA                           
*                                                                               
WRKX     EQU   *                                                                
*                                                                               
       ++INCLUDE DMWRKRK           WRKR INTERFACE DSECT                         
       ++INCLUDE DMWRKRD           WRKR FILE DSECT                              
       ++INCLUDE DMWRKRS           WRKR BUFFER SAVE/RESTORE AREA                
*                                                                               
KSBUFFD  DSECT ,                   BUFFER SAVE/RESTORE AREA                     
KSINDEX  DS    CL16                                                             
KSFSTCI  DS    CL4                                                              
*                                                                               
* FASSB                                                                         
* FASSBOFF                                                                      
* FATCB                                                                         
* FAUTL                                                                         
* DMPRTQD                                                                       
* DDMASTD                                                                       
* DMDTFPH                                                                       
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
       ++INCLUDE FASSBOFF                                                       
       ++INCLUDE FATCB                                                          
       ++INCLUDE FAUTL                                                          
       ++INCLUDE DMPRTQD                                                        
       ++INCLUDE DDMASTD                                                        
       ++INCLUDE DMDTFPH                                                        
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'019DMWRKR    04/04/16'                                      
         END                                                                    
