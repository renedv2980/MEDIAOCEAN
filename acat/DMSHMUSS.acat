*          DATA SET DMSHMUSS   AT LEVEL 015 AS OF 12/02/20                      
*CATALP DMSHMUSS                                                                
DMSHMUSS AMODE 31                                                               
DMSHMUSS RMODE ANY                                                              
DMSHMUSS CSECT                                                                  
         TITLE 'DDS MVS Share Memory using UNIX System Services'                
***********************************************************************         
* Create / Get Shared Memory area                                               
* Pass number for area block (has to be known value)                            
* Segment IDs are all stored locally within this module                         
* Size are stored locally within this module                                    
* Call                                                                          
*         P1 = A(CL8'ACTION')               See ACTTAB                          
*         P2 = A(CL8'MEMORY BLOCK')         See SHMTAB                          
*??       P3 = A(Address SHM to be attached)    (optional)                      
*         P4 = A(Override SHM key) SE#          (optional)                      
*??       P5 = Permission R/W group             (optional)                      
*??       P6 = not used yet                                                     
*                                                                               
* Actions:                 Owner's Actions                                      
*        CL8'CREATE'               -Create Share Memory Segment                 
*        CL8'REMOVE'               -Remove  Share Memory Segment                
*        CL8'CRTLOCK'              -Create and Initialize a lock                
*        CL8'DSTLOCK'              -Destroy a lock                              
*                          User's Actions                                       
*        CL8'ATTACH'               -Attach to a Share Memory Segment            
*        CL8'DETACH'               -Detach a Share Memory Segment               
*        CL8'LOCK'                 -Lock a Share Memory Segment                 
*        CL8'UNLOCK'               -Unlock a Share Memory Segment               
*        CL8'CLEANUP'              -Clean up thread resources                   
*                                                                               
* Return                                                                        
*         P1 = not changed                                                      
*         P2 = not changed                                                      
*         P3 = A(Start address of storage)                                      
*         P4 = Size of storage  (Excluding header)                              
*                                                                               
* Note: Table numbers are in a factor of 8. This is so we can have              
*       upto 8 enviorments (aka DSPACE=x)                                       
*                                                                               
***********************************************************************         
         PRINT NOGEN                                                            
         NMOD1 WORKX-WORKD,*SHMUSS*                                             
*                                                                               
         ENTRY SHMTAB              For FASTART to set it in SSB                 
*                                                                               
         USING WORKD,RC                                                         
         LAY   RA,COMMON                                                        
         USING COMMON,RA                                                        
         SAM31 ,                                                                
         LR    R9,R1                                                            
         MVC   P1(24),0(R1)        SAVE PARM LIST                               
*                                                                               
         BRAS  RE,LOADUSS                                                       
         JE    *+6                                                              
         DC    H'00'               Failed to initialize                         
*                                                                               
         BRAS  RE,VALACT           Validate Action from P1                      
         JE    *+6                                                              
         DC    H'00'               Unknown Action                               
*                                                                               
         BRAS  RE,VALKEY           Validate and Build SHMKEY from P2            
         JE    *+6                                                              
         DC    H'00'               Unknown Share Memory Segment Name            
*                                                                               
         L     RF,ROUTINE                                                       
         BASR  RE,RF                                                            
         JE    *+6                                                              
         DC    H'00'               Call failed                                  
*                                                                               
         BRAS  RE,RTNPARMS         Set Return Parms                             
*                                                                               
XIT      XIT1  ,                                                                
         EJECT                                                                  
                                                                                
***********************************************************************         
* Exit Points                                                         *         
***********************************************************************         
EXITL    CLI   *,255               SET CC LOW                                   
         J     EXIT                                                             
EXITH    CLI   *,0                 SET CC HIGH                                  
         J     EXIT                                                             
EXITOK   CR    RB,RB               SET CC EQUAL                                 
         J     EXIT                                                             
EXIT     XIT1  ,                                                                
                                                                                
***********************************************************************         
* Load USS services                                                   *         
***********************************************************************         
LOADUSS  NTR1                                                                   
         MVC   RVLBL,=CL8'**RV===>'  Set Return/Reason labels                   
         MVC   RCVLBL,=CL8'**RCV==>'                                            
         MVC   RSNLBL,=CL8'**RSN==>'                                            
         MVC   WASTLBL,=CL8'**WAST=>'                                           
         XC    RV(8),RV              Init codes and size                        
         XC    RCV(8),RCV                                                       
         XC    RSN(8),RSN                                                       
         XC    SIZE,SIZE                                                        
*                                                                               
         CLC   ABPX1SLK,NULLS                                                   
         JNE   EXITOK              EXIT IF ALREADY LOADED                       
*                                                                               
         LOAD  EP=BPX1MGT          LOAD IN USS SHARED MEMORY CODE               
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1MGT                                                      
*                                                                               
         LOAD  EP=BPX1MAT                                                       
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1MAT                                                      
*                                                                               
         LOAD  EP=BPX1MCT                                                       
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1MCT                                                      
*                                                                               
         LOAD  EP=BPX1MDT                                                       
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1MDT                                                      
*                                                                               
         LOAD  EP=BPX1SLK                                                       
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1SLK                                                      
*                                                                               
         LOAD  EP=BPX1MPC                                                       
         LTR   RF,RF                                                            
         JNZ   EXITL                                                            
         ST    R0,ABPX1MPC                                                      
         J     EXITOK                                                           
         EJECT                                                                  
                                                                                
***********************************************************************         
* Set return parameters                                               *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
RTNPARMS NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
         CLC   SHMKSMID,NULLS      Has Segment ID?                              
         JE    EXITOK                                                           
         MVC   08(4,R9),SHMKSTAR   Return A(Table)             P3               
         ICM   R3,15,SHMKSIZE      Storage size                                 
         S     R3,SHMKHRLG         Minus header length                          
         STCM  R3,15,12(R9)        Return L'Table              P4               
*                                                                               
         MVC   16(4,R9),SHMKADDR   Return A(Header)            P5               
         MVC   20(4,R9),SHMKHRLG   Return L'Header             P6               
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Validate Actions from P1                                                      
***********************************************************************         
VALACT   NTR1                                                                   
         USING SHMACTD,RE                                                       
         LA    RE,ACTTAB                                                        
         L     R1,P1               Address(CL8'Action')                         
         LHI   R0,ACTTABQ                                                       
*                                                                               
VACT10   CLC   SHMAWORD,0(R1)                                                   
         JE    VACT20                                                           
         LA    RE,SHMACTLQ(,RE)    Next                                         
         BCT   R0,VACT10                                                        
         B     EXITL               Invalid action                               
*                                                                               
VACT20   MVC   ROUTINE,SHMARTN     Save A(Action table entry)                   
         B     EXITOK                                                           
         DROP  RE                                                               
                                                                                
***********************************************************************         
* Validate and Build Share Memory Key from P2                         *         
***********************************************************************         
VALKEY   NTR1                                                                   
         USING SSBD,RE                                                          
         ICM   RE,15,=V(SSB)                                                    
         JNZ   *+6                                                              
         DC    H'00'                                                            
*                                                                               
         MVI   ONLINE,YES                                                       
         MVC   DSPACE,SSBDSPAC                                                  
         OC    SSBCNTL,SSBCNTL     On-line?                                     
         JNZ   VKEY10              Yes                                          
         MVI   ONLINE,NO           No                                           
*                                                                               
         USING SSBOFFD,RE                                                       
         CLI   SSOXTND,X'FF'       Off-line                                     
         JE    *+6                 Must be extended                             
         DC    H'00'                                                            
         MVC   DSPACE,SSODSPAC                                                  
         DROP  RE                                                               
VKEY10   DS    0H                                                               
         CLI   DSPACE,C' '                                                      
         JH    *+6                                                              
         DC    H'00'               DSPACE must be set                           
*                                                                               
         USING SHMTABD,R3                                                       
         LA    R3,SHMTAB                                                        
         L     R1,P2               Address(CL8'MEMORY BLOCK')                   
         LHI   R0,SHMTABQ                                                       
*                                                                               
VKEY20   CLC   SHMTNAME,0(R1)                                                   
         JE    VKEY30                                                           
         LA    R3,SHMTABLQ(,R3)    Next                                         
         JCT   R0,VKEY20                                                        
         J     EXITL               Invalid Name                                 
*                                                                               
VKEY30   DS    0H                                                               
         ST    R3,ASHMNTRY         Save A(SHM table entry)                      
         L     R2,SHMTKEY                                                       
         ST    R2,AKEYNTRY         Save A(SHM Key)                              
         USING SHMKEYD,R2                                                       
*                                                                               
         TM    SHMTFLAG,SHMTDSPC+SHMTSREP     Need DSPACE?                      
         JZ    VKEY60              No                                           
         CLI   SHMKDSPC,0          Was it set?                                  
         JE    VKEY50              No, so set                                   
*                                                                               
         CLC   SHMKDSPC,DSPACE     Must match then                              
         JE    VKEY60                                                           
*                                                                               
         TM    SHMTFLAG,SHMTSREP   ADV and REP share key(P-Production)          
         JZ    *+2                 No - Dspace has changed, fail                
         CLI   SHMKDSPC,C'A'       Use 'A' as main value                        
         JNE   *+2                 Fail                                         
*                                                                               
VKEY50   TM    SHMTFLAG,SHMTSREP   ADV and REP share key(P-Production)          
         JZ    VKEY60              No - use DSPACE then                         
*                                  Yes - set it to 'P' if ADV/REP               
         MVI   SHMKDSPC,C'A'       Treat ADV and REP as one                     
         CLI   DSPACE,C'A'                                                      
         JE    VKEY62                                                           
         CLI   DSPACE,C'R'                                                      
         JE    VKEY62                                                           
*                                  Not ADV/REP, just use DSPACE then            
VKEY60   MVC   SHMKDSPC,DSPACE     Set DSPACE key value                         
                                                                                
VKEY62   TM    SHMTFLAG,SHMTSE#    Key has SE                                   
         JZ    VKEY80                                                           
         LLH   R6,P4+2             Get SE passed in P4                          
*                                                                               
NEW      USING SHMKEYD,R6                                                       
         MHI   R6,SHMKEYQ                                                       
         AR    R6,R2               Add base of table                            
         CLC   NEW.SHMKEY,NULLS    Initialized?                                 
         JNE   VKEY65              Yes                                          
         MVC   NEW.SHMKEY(SHMKEYQ),SHMKEY                                       
         MVC   NEW.SHMKEY#,P4+2    Set SE number in key                         
         DROP  NEW                                                              
*                                                                               
VKEY65   LR    R2,R6               Switch to this key entry                     
         ST    R2,AKEYNTRY         Save A(SHM Key)                              
                                                                                
VKEY80   DS    0H                                                               
         CLC   SHMKSIZE,NULLS                                                   
         JNE   VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZA                                                
         CLI   DSPACE,C'A'                                                      
         JE    VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZT                                                
         CLI   DSPACE,C'T'                                                      
         JE    VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZC                                                
         CLI   DSPACE,C'C'                                                      
         JE    VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZQ                                                
         CLI   DSPACE,C'Q'                                                      
         JE    VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZR                                                
         CLI   DSPACE,C'R'                                                      
         JNE   *+2                                                              
         TM    SHMTFLAG,SHMTSREP   ADV and REP share key(Production)            
         JZ    VKEY90                                                           
         MVC   SHMKSIZE,SHMKSIZA   USE ADV instead                              
*                                                                               
VKEY90   DS    0H                                                               
         J     EXITOK                                                           
         DROP  R3,R2                                                            
         EJECT                                                                  
                                                                                
***********************************************************************         
* Create or Get shared memeory segment                                *         
* Exit: Set Share memory segment ID, SHMKSMID                         *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
CREATE   NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
         CLC   SHMKSMID,NULLS      Has Segment ID?                              
         JNE   EXITOK              Yes, just exit                               
*                                                                               
         MVI   S_TYPE,IPC_CREAT    Create it if not yet created                 
         MVI   S_MODE1,0           Not used                                     
         MVI   S_MODE2,S_IRUSR     All read and write permission                
         MVI   S_MODE3,S_IWUSR+S_IRGRP+S_IWGRP+S_IROTH+S_IWOTH                  
*                                                                               
         USING SHMTABD,R1                                                       
         L     R1,ASHMNTRY                                                      
*                                                                               
         L     R3,SHMKSIZE         Table Size                                   
         TM    SHMTFLAG,SHMTMEGA   Storage allocated by megabyte?               
         JZ    *+12                No: add Header Length                        
         OI    S_TYPE,IPC_MEGA     Yes: indicate so                             
         J     *+8                 skip, header included in mega                
         A     R3,SHMKHRLG         Add Header Length                            
         ST    R3,SIZE             set size                                     
*                                                                               
         TM    SHMTFLAG,SHMTSHAS   Shared by tasks within address spce?         
         JZ    *+8                 No                                           
         OI    S_TYPE,IPC_SHAREAS  Yes: indicate so                             
         DROP  R1                                                               
*                                                                               
         L     RF,ABPX1MGT                                                      
         CALL  (15),(SHMKEY,                                           +        
               SIZE,                                                   +        
               S_MODE,                                                 +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL               Error                                        
         ST    RF,SHMKSMID         Good store for use in BPX1MAT                
*                                                                               
         J     EXITOK              DONE                                         
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Attach to a shared memeory segment                                  *         
* Exit: Set share memory address, SHMKADDR                            *         
*       Set share memory lock address, SHMKLKAR, if applied           *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
ATTACH   NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
         CLC   SHMKADDR,NULLS                                                   
         JNE   EXITOK              Already attached                             
*                                                                               
         CLC   SHMKSMID,NULLS      Has Segment ID?                              
         JNE   ATT30               Yes, attach it                               
*                                                                               
*                                  Set up parm to get SHM_ID                    
         MVI   S_TYPE,0                                                         
         MVI   S_MODE1,0                                                        
         MVI   S_MODE2,0                                                        
         MVI   S_MODE3,0                                                        
*                                                                               
         L     R3,SHMKSIZE         Table Size                                   
*                                                                               
         USING SHMTABD,R1                                                       
         L     R1,ASHMNTRY                                                      
         TM    SHMTFLAG,SHMTMEGA   Was storage allocated by megabyte?           
         JO    *+8                 Yes: header included in length               
         A     R3,SHMKHRLG         No: add Header Length                        
         DROP  R1                                                               
*                                                                               
         ST    R3,SIZE                                                          
*                                                                               
         L     RF,ABPX1MGT                                                      
         CALL  (15),(SHMKEY,                                           +        
               SIZE,                                                   +        
               S_MODE,                                                 +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         ST    RF,SHMKSMID         Now, we can attach to this SHM_ID            
*                                                                               
ATT30    DS    0H                                                               
         L     RF,ABPX1MAT                                                      
         CALL  (15),(SHMKSMID,                                         +        
               SHMKADDR,                                               +        
               =A(0),                                                  +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL               Error                                        
*                                                                               
         USING SHMTABD,R3                                                       
         L     R3,ASHMNTRY                                                      
         TM    SHMTLOCK,SHMTLUSS   Use USS Latch lock?                          
         JZ    ATT50                                                            
         ST    RF,SHMKLKAR         Save this for lock KEY                       
         DROP  R3                                                               
*                                                                               
ATT50    DS    0H                                                               
         ST    RF,SHMKADDR         Save start address                           
         A     RF,SHMKHRLG         + Header Length                              
         ST    RF,SHMKSTAR         Save start address                           
*                                                                               
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Detach a shared memory segment                                      *         
* Exit: Clear share memory address, SHMKADDR                          *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
DETACH   NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
         CLC   SHMKADDR,NULLS                                                   
         JE    EXITOK              Already detached                             
*                                                                               
         L     RF,ABPX1MDT                                                      
         CALL  (15),(SHMKADDR,                                         +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
*                                                                               
         XC    SHMKADDR,SHMKADDR   Clear it, so we can reattach later           
         XC    SHMKSMID,SHMKSMID                                                
         XC    SHMKSTAR,SHMKSTAR                                                
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Remove a shared memeory segment                                     *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
REMOVE   NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
*                                                                               
         CLC   SHMKSMID,NULLS      Has Segment ID?                              
         JNE   REM50               Yes, Remove it                               
         MVI   S_TYPE,0            Set up parm to get SHM_ID                    
         MVI   S_MODE1,0                                                        
         MVI   S_MODE2,0                                                        
         MVI   S_MODE3,0                                                        
*                                                                               
         L     R3,SHMKSIZE         Table Size                                   
*                                                                               
         USING SHMTABD,R1                                                       
         L     R1,ASHMNTRY                                                      
         TM    SHMTFLAG,SHMTMEGA   Was storage allocated by megabyte?           
         JO    *+8                 Yes: header included in length               
         A     R3,SHMKHRLG         No: add Header Length                        
         DROP  R1                                                               
*                                                                               
         ST    R3,SIZE                                                          
*                                                                               
         L     RF,ABPX1MGT                                                      
         CALL  (15),(SHMKEY,                                           +        
               SIZE,                                                   +        
               S_MODE,                                                 +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    REM20                                                            
         ST    RF,SHMKSMID                                                      
         B     REM50               Now remove this SHM_ID                       
*                                                                               
REM20    DS    0H                                                               
         CLC   RCV,=F'129'         Reason Code = Not Exit (ENOENT)?             
         BE    EXITOK              Not Exit, just exit ok                       
*                                                                               
REM50    DS    0H                                                               
         L     RF,ABPX1MCT                                                      
         CALL  (15),(SHMKSMID,                                         +        
               =A(IPC_RMID),                                           +        
               =A(0),                                                  +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Create a lock                                                       *         
* Exit: Set lock token, SHMKLKTK                                      *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
CRTLOCK  NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
*                                                                               
         LA    R3,SHMKLKTK                                                      
         L     RF,ABPX1SLK                                                      
         CALL  (15),(=A(SLK_INIT),                                     +        
               =A(SLK_NORMAL),                                         +        
               =A(SLK_SHARED),                                         +        
               SHMKLKAR,                                               +        
               =A(0),                                                  +        
               (R3),                                                   +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Destroy a lock                                                      *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
DSTLOCK  NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
*                                                                               
         LA    R3,SHMKLKTK                                                      
         L     RF,ABPX1SLK                                                      
         CALL  (15),(=A(SLK_DESTROY),                                  +        
               =A(0),                                                  +        
               =A(0),                                                  +        
               SHMKLKAR,                                               +        
               =A(0),                                                  +        
               (R3),                                                   +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Obtain a lock                                                       *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
LOCK     NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
*                                                                               
         LA    R3,SHMKLKTK                                                      
         L     RF,ABPX1SLK                                                      
         CALL  (15),(=A(SLK_OBTAIN_COND),                              +        
               =A(0),                                                  +        
               =A(0),                                                  +        
               SHMKLKAR,                                               +        
               =A(0),                                                  +        
               (R3),                                                   +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JNM   EXITOK                                                           
*                                                                               
* Need code for if the lock is already in use.  Return Code=EBUSY               
*                                                                               
         J     EXITL                                                            
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Release a lock                                                      *         
***********************************************************************         
         USING SHMKEYD,R2                                                       
UNLOCK   NTR1                                                                   
         L     R2,AKEYNTRY         Point to key entry                           
         LA    R3,SHMKLKTK                                                      
         L     RF,ABPX1SLK                                                      
         CALL  (15),(=A(SLK_RELEASE),                                  +        
               =A(0),                                                  +        
               =A(0),                                                  +        
               SHMKLKAR,                                               +        
               =A(0),                                                  +        
               (R3),                                                   +        
               RV,RCV,RSN),VL,MF=(E,PLIST)                                      
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         J     EXITOK                                                           
         DROP  R2                                                               
         EJECT                                                                  
                                                                                
***********************************************************************         
* Clean up UNIX related resources for this thread and/or process                
***********************************************************************         
CLEANUP  NTR1                                                                   
         XC    WASTE,WASTE                                                      
*                                                                               
         L     RF,ABPX1MPC                                                      
         CALL  (15),                 MVS Process cleanup               +        
               (WASTE,               Input: Ending status code 0-255   +        
               RV,                   Return value: 0, -1 or 1          +        
               RCV,                  Return code                       +        
               RSN),                 Reason code                       +        
               VL,MF=(E,PLIST)                                                  
         ICM   RF,15,RV                                                         
         JM    EXITL                                                            
         J     EXITOK                                                           
         EJECT                                                                  
                                                                                
***********************************************************************         
* COMMONLY ADDRESSABLE STORAGE                                        *         
***********************************************************************         
         ORG   DMSHMUSS+(((*-DMSHMUSS)+256)/256*256)                            
COMMON   DS    0X                                                               
         LTORG                                                                  
                                                                                
***********************************************************************         
* Valid actions                                                                 
***********************************************************************         
ACTTAB   DS    0D                                                               
         DC    CL8'CREATE  ',A(CREATE)   Create a SHM                           
         DC    CL8'REMOVE  ',A(REMOVE)   Remove a SHM                           
         DC    CL8'CRTLOCK ',A(CRTLOCK)  Create and Initialize a lock           
         DC    CL8'DSTLOCK ',A(DSTLOCK)  Destroy a lock                         
         DC    CL8'ATTACH  ',A(ATTACH)   Attach to a SHM                        
         DC    CL8'DETACH  ',A(DETACH)   Detach a SHM                           
         DC    CL8'LOCK    ',A(LOCK)     Lock   a SHM                           
         DC    CL8'UNLOCK  ',A(UNLOCK)   Unlock a SHM                           
         DC    CL8'CLEANUP ',A(CLEANUP)  Clean up thread resources              
ACTTABQ  EQU   (*-ACTTAB)/SHMACTLQ                                              
                                                                                
***********************************************************************         
* Constants and working storage                                       *         
***********************************************************************         
         DS    0D                                                               
NULLS    DS    0X                                                               
ZEROS    DC    XL8'00'                                                          
         DS    0D                                                               
         DC    CL8'BPXADDR*'                                                    
ABPX1MGT DS    A                                                                
ABPX1MAT DS    A                                                                
ABPX1MCT DS    A                                                                
ABPX1MDT DS    A                                                                
ABPX1SLK DS    A                                                                
ABPX1MPC DS    A                                                                
                                                                                
***********************************************************************         
* Valid Memory calls                                                            
***********************************************************************         
SHMTAB   DS    0D                                                               
         DC    CL8'UTLS    ',AL4(UTLKEY,0)                                      
         DC    AL1(SHMTDSPC,SHMTLUSS,0,0)                                       
         DC    CL8'TORS    ',AL4(TORKEY,0)                                      
         DC    AL1(SHMTDSPC,SHMTLUSS,0,0)                                       
         DC    CL8'SELIST  ',AL4(SELKEY,0)                                      
         DC    AL1(SHMTDSPC,SHMTLUSS,0,0)                                       
         DC    CL8'RCVB    ',AL4(RCVKEY,0)                                      
         DC    AL1(SHMTDSPC+SHMTSE#,SHMTLUSS,0,0)                               
         DC    CL8'STAPACK ',AL4(STPKEY,0)                                      
         DC    AL1(SHMTSREP,SHMTLCS,0,0)                                        
         DC    CL8'PRTQ    ',AL4(PRQKEY,0)                                      
         DC    AL1(SHMTDSPC+SHMTMEGA,SHMTLCS,0,0)                               
         DC    CL8'WRKF    ',AL4(WRKKEY,0)                                      
         DC    AL1(SHMTSREP+SHMTMEGA,SHMTLCS,0,0)                               
         DC    CL8'CBLLST  ',AL4(CBLKEY,0)                                      
         DC    AL1(SHMTSREP,SHMTLCS,0,0)                                        
SHMTABQ  EQU   (*-SHMTAB)/SHMTABLQ                                              
         DC    X'FF'               End of Table Marker                          
                                                                                
SHMLIST  DS    0D                                                               
         DC    CL16'*SHRUSS**UTLS****'                                          
UTLKEY   DC    X'00000001'          Key        UTL for FAST                     
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length of SHM Header                        
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    F'0'                 Table Size ADV                              
         DC    F'0'                 Table Size REP                              
         DC    F'0'                 Table Size CSC                              
         DC    F'0'                 Table Size TST/MEL                          
         DC    F'0'                 Table Size FQA                              
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**TOR BLK*'                                          
TORKEY   DC    X'00000002'          Key        TOR for FAST                     
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length of SHM Header                        
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    F'0'                 Table Size ADV                              
         DC    F'0'                 Table Size REP                              
         DC    F'0'                 Table Size CSC                              
         DC    F'0'                 Table Size TST/MEL                          
         DC    F'0'                 Table Size FQA                              
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**SELIST**'                                          
SELKEY   DC    X'00000003'          Key        SE LIST for FAST                 
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length of SHM Header                        
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    F'0'                 Table Size ADV                              
         DC    F'0'                 Table Size REP                              
         DC    F'0'                 Table Size CSC                              
         DC    F'0'                 Table Size TST/MEL                          
         DC    F'0'                 Table Size FQA                              
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**STAPACK*'                                          
STPKEY   DC    X'00000065'          Key        Agency table STAPACK             
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length of SHM Header                        
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    A(MSSHMLNQ)          Table Size ADV      12M                     
         DC    A(0)                 Table Size REP  No Canadian agy             
         DC    A(MSSHMLNQ)          Table Size CSC                              
         DC    A(MSSHMLNQ)          Table Size TST/MEL                          
         DC    A(MSSHMLNQ)          Table Size FQA                              
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**CBLLST**'                                          
CBLKEY   DC    X'00000068'          Key           CBLLST                        
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length  of SHM Header                       
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    A(24*K)              Table Size ADV      24K                     
         DC    A(0)                 Table Size REP      Shared w/ ADV           
         DC    A(24*K)              Table Size CSC      24K                     
         DC    A(24*K)              Table Size TST/MEL  24K                     
         DC    A(24*K)              Table Size FQA      24K                     
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**PRINTQ**'                                          
PRQKEY   DC    X'000000C9'          Key           PrintQ                        
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length of SHM Header                        
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    A(30*M)              Table Size ADV      30M                     
         DC    A(20*M)              Table Size REP      20M                     
         DC    A(04*M)              Table Size CSC      4M                      
         DC    A(03*M)              Table Size TST/MEL  3M                      
         DC    A(02*M)              Table Size FQA      2M                      
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**WRKFIL**'                                          
WRKKEY   DC    X'000000CA'          Key           WRKFIL                        
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length  of SHM Header                       
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (ACTUAL)                         
         DC    A(60*M)              Table Size ADV      60M                     
         DC    A(0)                 Table Size REP      0M                      
         DC    A(02*M)              Table Size CSC      2M                      
         DC    A(02*M)              Table Size TST/MEL  2M                      
         DC    A(02*M)              Table Size FQA      2M                      
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
         DC    CL16'*SHRUSS**RCVBUF**'                                          
RCVKEY   DC    X'01000000'          KEY           RCVBUFF                       
         DC    F'0'                 Segment ID                                  
         DC    F'0'                 Address of SHM Segment                      
         DC    A(16)                Length  of SHR header                       
         DC    F'0'                 Starting Address of table                   
         DC    F'0'                 Table Size (Actual)                         
         DC    A(128*16*K)          Table Size ADV   128*16K                    
         DC    A(016*16*K)          Table Size REP    16*16K                    
         DC    A(128*16*K)          Table Size CSC   =ADV                       
         DC    A(128*16*K)          Table Size TST/MEL =ADV                     
         DC    A(128*16*K)          TABLE SIZE FQA     =ADV                     
         DS    F'0'                 Lock Address                                
         DS    F'0'                 Lock Token                                  
*                                                                               
RCVKEYS  DS    255XL(SHMKEYQ)                                                   
         EJECT ,                                                                
                                                                                
***********************************************************************         
* Common equates                                                                
***********************************************************************         
YES      EQU   C'Y'                                                             
NO       EQU   C'N'                                                             
K        EQU   1024                                                             
M        EQU   K*K                                                              
                                                                                
***********************************************************************         
* Working storage                                                               
***********************************************************************         
WORKD    DSECT                                                                  
*                                                                               
P1       DS    F                   Action                                       
P2       DS    F                   A(shared memory name)                        
P3       DS    F                   return parm A(shared memory)                 
P4       DS    F                   return parm SHM size                         
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
PLIST    DS    16A                 Unix calls parm list                         
*                                                                               
RVLBL    DS    CL8                 **RV===>                                     
RV       DS    2F                  Returned value                               
RCVLBL   DS    CL8                 **RCV==>                                     
RCV      DS    2F                  Return code                                  
RSNLBL   DS    CL8                 **RSN==>                                     
RSN      DS    2F                  Reason code                                  
*                                                                               
ASHMNTRY DS    A                   Shared memory table entry                    
AKEYNTRY DS    A                   Shared memory key table entry                
ROUTINE  DS    A                   Address of SHM routine                       
*                                                                               
ONLINE   DS    C                                                                
DSPACE   DS    C                                                                
*                                                                               
WASTLBL  DS    CL8                                                              
WASTE    DS    XL(WAST#LENGTH)                                                  
*                                                                               
SIZE     DS    F                                                                
*                                                                               
         BPXYMODE DSECT=NO                                                      
*                                                                               
WORKX    EQU   *                                                                
         EJECT ,                                                                
                                                                                
***********************************************************************         
* DSECT Shared Memory action table                                              
***********************************************************************         
SHMACTD  DSECT                                                                  
SHMAWORD DS    CL8                 Action word                                  
SHMARTN  DS    AL4                 Address of Routine                           
SHMACTLQ EQU   *-SHMACTD                                                        
                                                                                
***********************************************************************         
* DSECT Shared Memory table definition                                          
***********************************************************************         
       ++INCLUDE DMSHMUSSD                                                      
         EJECT                                                                  
                                                                                
***********************************************************************         
* DSECTS for STAPACK                                                            
***********************************************************************         
       ++INCLUDE SPSTAPACKD                                                     
         EJECT                                                                  
                                                                                
***********************************************************************         
* DSECTS for SSB                                                                
***********************************************************************         
       ++INCLUDE FASSB                                                          
SSBOFFD  DSECT                                                                  
       ++INCLUDE FASSBOFF                                                       
         EJECT                                                                  
                                                                                
***********************************************************************         
* DSECTS Unix                                                         *         
***********************************************************************         
         BPXYSHM                                                                
         BPXYIPCP                                                               
         BPXYCONS                                                               
         BPXYWAST                                                               
         EJECT                                                                  
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'015DMSHMUSS  12/02/20'                                      
         END                                                                    
