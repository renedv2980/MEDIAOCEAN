*          DATA SET DDUPGRD    AT LEVEL 154 AS OF 05/01/02                      
*CATALP UPGD                                                                    
         TITLE 'DDUPGRD - DATA DICTIONARY UPGRADE'                              
***********************************************************************         
*==================== MAIN (HIGHEST LEVEL ROUTINE) ===================*         
DDUPGRD  CSECT                                                                  
         PRINT NOGEN                                                            
         NBASE 0,*DDUPGR*,=V(REGSAVE),RA,R9,R8                                  
*                                                                               
         GOTO1 =V(STXITER),DMCB,A(DUMPLIST)                                     
*                                                                               
         L     R7,=V(CPRINT)                                                    
         USING DPRINT,R7                                                        
         SPACE 1                                                                
         ENTRY UTL                                                              
         ENTRY SSB                                                              
         SPACE 2                                                                
MAIN     MVI   RETCODE,1           MAKE RETCODE<>0 TO ASSUME ERRORS             
         BAS   RE,VALCARDS         VALIDATE JCL CARD DATA LINES                 
         BNE   BXIT                 EXIT IF ERROR                               
         OPEN  (TAPEOUT,OUTPUT)     IF NO ERROR, OPEN OUTPUT FILE               
         GOTO1 =V(SORTER),DMCB,SORTCARD,RECCARD,0                               
*                                                                               
MAIN10   BAS   RE,BEGCNTRL         GO INITIALIZE PANPREF                        
*                                                                               
MAIN20   L     R1,=A(MSHRTWKQ)     CLEAR MY (SHORT) STORAGE AREA FOR            
         XCEF  MISCWORK,(R1)        EACH SYSTEM                                 
         BAS   RE,INITIAL          DO GENERAL INITIALIZATION                    
*                                                                               
         MVC   PANNAME,PANDDEQU    FOR 1ST RUN, DO PANDDEQU                     
         B     MAIN40                                                           
MAIN30   MVC   PANNAME,PANDDNEW    FOR 2ND RUN, DO PANDDNEW                     
*                                                                               
MAIN40   BAS   RE,GPANIC           OPEN BOOK                                    
         BE    MAIN50              OPENED SUCCESSFULLY, DO NEXT STEP            
*                                                                               
         CLC   PANNAME,PANDDEQU    COULDN'T FIND PANDDEQU?                      
         BE    MAIN80                                                           
         CLC   PANNAME,PANDDNEW     OR PANDDNEW?                                
         BE    MAIN80              DO ENDCNTRL                                  
         DC    H'0'                                                             
*                                                                               
MAIN50   BAS   RE,INITPAN          INITIALIZE PAN BOOK                          
         BNE   MAIN80                                                           
MAIN60   BAS   RE,GPANIC           GET NEXT LINE IN BOOK                        
         CLI   EOFFLAG,0           END OF FILE?                                 
         BNE   MAIN70               YEP!                                        
         BAS   RE,VALLINE          VALIDATE PAN CONTROL LINE                    
         BNE   MAIN60               IT'S A CNTRL LINE, GET NEXT LINE            
         BAS   RE,PROCLANG         PROCESS PAN DATA LINE FOR LANGUAGE           
         B     MAIN60              REPEAT PROCESSING DATA LINE                  
*                                                                               
MAIN70   BAS   RE,EOPPROC          END OF PAN-BOOK PROCESSING                   
*                                                                               
         CLC   PANNAME,PANDDEQU    IF WE HAVE JUST PROCESSED PANDDEQU,          
         BE    MAIN30               THEN DO SAME PROCESS FOR PANDDNEW           
*                                                                               
         ZICM  RE,MSGNUM,(3)                                                    
         LA    RE,1(RE)                                                         
         STCM  RE,3,HIMSGNM1                                                    
*                                                                               
         BAS   RE,PRCGEND          GET MESSAGES FROM GENFIL                     
         ZICM  RE,HIMSGNM2,(3)                                                  
         LA    RE,1(RE)                                                         
         STCM  RE,3,HIMSGNM2                                                    
         CLC   HIMSGNM2,=H'1'      IN CASE THERE WERE NO RECORDS                
         BH    *+8                  IN GENDIR/GENFIL                            
         OI    HIMSGNM2,DD#DISK                                                 
         BAS   RE,MYSRTREC         BUILD MY SORT RECORDS                        
         BAS   RE,HICTLREC         BUILD HIGH (CONTROL) RECORDS                 
*                                                                               
MAIN80   BAS   RE,ENDCNTRL                                                      
         BE    MAIN20                                                           
*                                                                               
MXIT     BAS   RE,GETSORT          GET SORT RECORDS AND PROCESS THEM            
         GOTO1 =V(SORTER),DMCB,=C'END'                                          
         CLOSE (TAPEOUT,)                                                       
*                                                                               
BXIT     BAS   RE,CHKERR           CHECK IF ANY ERROR ENCOUNTERED               
         XBASE RC=RETCODE,RL=1                                                  
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*=========== EXIT FOR NTR'S RETURNING CONDITION CODE (CC) ============*         
CCEQUAL  SR    RF,RF               CC = 0                                       
CCNEQUAL LTR   RF,RF               CC <>0                                       
EXIT     XIT1                                                                   
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*============================ CHECK ERRORS ===========================*         
*                                                                               
CHKERR   NTR1                                                                   
*                                                                               
         GOTO1 =V(PRINTER)         PRINT BLANK LINE                             
*                                                                               
         LA    RF,BXIT+4           DO THIS COMPARISON FIRST!                    
         L     RE,4(RD)                                                         
         L     RE,12(RE)           RE=RETURN ADDRS WHEN EXITING CHKERR          
         SLL   RE,8                ZERO OUT THE                                 
         SRL   RE,8                 HIGH-ORDER BYTE                             
         CR    RE,RF               ARE WE NEAR THE XBASE MACRO?                 
         BE    CHK50               IF YES, PRINT A DIFFERENT MESSAGE            
*                                                                               
         MVC   P+53(L'ERRNFND),ERRNFND ASSUME NO ERRORS FOUND                   
         TM    SWITCH1,SWIERR1        ANY ERROR FOUND IN RECENT TASK?           
         BZ    CHK100                  NO                                       
         OI    SWITCH1,SWIERR2        THERE WERE ERRORS                         
         NI    SWITCH1,X'FF'-SWIERR1                                            
         MVC   P,SPACES                                                         
         MVC   P+57(L'ERRFND),ERRFND                                            
         B     CHK100                                                           
*                                                                               
CHK50    MVC   P+50(L'ERRJOB),ERRJOB  ASSUME JOB HAS AT LEAST 1 ERROR           
         TM    SWITCH1,SWIERR2                                                  
         BO    CHK100              GOOD ASSUMPTION                              
         MVI   RETCODE,0           RETCODE=0 ==> NO ERROR                       
         MVC   P,SPACES                                                         
         MVC   P+48(L'ERRNJOB),ERRNJOB                                          
*                                                                               
CHK100   GOTO1 =V(PRINTER)                                                      
XCHKERR  B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========= VALIDATE JCL CARD DATA LINES AS DEFINED IN CARDTBL ========*         
VALCARDS NTR1                                                                   
*                                                                               
         XC    SVSYS,SVSYS         STARTING FROM BEGINNING--CLEAR               
         XC    SVNSYS,SVNSYS        SAVED FIELDS.                               
         XC    SVLANG,SVLANG                                                    
*                                                                               
VCLP1    GOTO1 =V(CARDS),DMCB,P,=C'RE00'                                        
         CLC   =C'/*',P            IF END OF JCL                                
         BE    VCEND                 CHECK REQUIRED CARDS INPUT                 
*                                                                               
         LA    RE,CARDTBL          INITIALIZE TABLE POINTER                     
*                                                                               
VCLP2    MVI   ERROR,5             ASSUME INVALID CARD ERROR                    
         CLI   0(RE),0             AT END OF TABLE?                             
         BE    PBADLINE             YEP, SOMETHING WRONG WITH CARD              
         ZIC   RF,CLENGTH(RE)                                                   
         BCTR  RF,0                                                             
         EXCLC RF,P,CSTRING(RE)                                                 
         BE    VCLP2X                                                           
         LA    RE,L'CARDTBL(RE)    GET NEXT ENTRY                               
         B     VCLP2                                                            
*                                                                               
VCLP2X   MVC   ERROR,CERRCODE(RE)  SET ERROR CODE, IN CASE OF ERROR             
         ZIC   RF,CROUTINE(RE)                                                  
         SLL   RF,2                MULTIPLY BY 4.                               
         B     *+0(RF)             BRANCH TO PROCESSING ROUTINE                 
*                                    FROM JUMP TABLE                            
         B     VCSYS                                                            
         B     VCLANG                                                           
*                                                                               
VCEND    MVI   ERROR,6             ASSUME SYS= CARD IS MISSING                  
         OC    SVSYS,SVSYS         SVSYS=NULLS ==> NO SYSTEM CARD               
         BZ    VCERR                                                            
         MVI   ERROR,7             ASSUME LANG= CARD IS MISSING                 
         OC    SVLNG,SVLNG         SVLNG=NULLS ==> NO LANGUAGE CARD             
         BZ    VCERR                                                            
         B     CCEQUAL             RETURN TO MAIN W/. CC=0                      
         SPACE 3                                                                
*================== ERRORS FROM JCL CARD-VALIDATION =================*          
*                                                                               
VCERR    GOTO1 =V(PRINTER)                                                      
         BAS   RE,ERRPRT           ERROR CODE WAS ALREADY SET, WILL             
         B     CCNEQUAL             BE RESETTED UPON RETURN                     
         EJECT                                                                  
*============ ROUTINES TO PROCESS EACH JCL CARD DATA LINE ============*         
*                                                                               
*------------------------------ SYSTEM= ------------------------------*         
*                                                                               
VCSYS    CLC   P+7(7),SPACES       ANY INPUT FOR THIS CARD?                     
         BNH   VCLP1                NOPE, EXIT AND ASSUME ALL SYSTEMS           
*                                                                               
         MVC   SVSYS,=C'ALL'       ASSUME USER WANTS ALL SYSTEMS                
VCSYS10  CLC   P+7(3),=C'ALL'      DID USER TYPED IN "ALL"?                     
         BE    VCLP1                YEP                                         
*                                   NOPE, SEE WHICH SYSTEM USER WANTS           
         LA    RE,SYSLST           SYSTEM=<FASYSLST ENTRY>                      
         USING SYSLSTD,RE                                                       
         LH    R2,0(RE)            R2=LENGTH OF SYSTEM TABLE ENTRY              
         LA    R3,EXSYSLX-1        R3=A(END OF TABLE), EXTENDED                 
         LA    RE,6(RE)            RE-->FIRST ENTRY                             
*                                                                               
VCSLP1   CLC   P+7(7),SYSLNAME     MATCH AGAINST LONG EXPRESSION                
         BE    VCSLP1X                                                          
         CLC   P+7(3),SYSLSHRT     MATCH AGAINST SHORT EXPRESSION               
         BE    VCSLP1X                                                          
         BXLE  RE,R2,VCSLP1                                                     
         B     VCERR               ERROR, INVALID SYSTEM INPUTTED               
*                                                                               
VCSLP1X  MVC   SVSYS,SYSLSHRT      SAVE SHORT SYS NAME                          
         MVC   SVNSYS,SYSLNUM      SAVE NATIVE SYSTEM #                         
         MVC   SVSYSNME,SYSLNAME   SAVE FULL SYSTEM NAME                        
         B     VCLP1                                                            
         DROP  RE                                                               
         SPACE 2                                                                
*------------------------------- LANG= -------------------------------*         
*                                                                               
VCLANG   MVC   SVLANG,P+5                                                       
         OC    SVLANG,SPACES       CONVERT TO UPPER CASE                        
         XC    SVBLNG,SVBLNG       CLEAR LANGUAGE CODE                          
*                                                                               
         CLC   =C'ALL',SVLANG      ALL LANGUAGES?                               
         BNE   VCL10                NOPE                                        
         MVI   SVLNG,C'*'           YEP, USER WANT THEM ALL                     
         B     VCLP1               EXIT TO DO NEXT CARD                         
*                                                                               
VCL10    LA    RE,LANGTAB          RE-->LANGUAGE TABLE                          
         USING LANGTABD,RE                                                      
         LH    R2,0(RE)            R2=L(ENTRY)                                  
         L     R3,2(RE)            R3-->END OF TABLE                            
         LA    RE,6(RE)            RE-->FIRST ENTRY                             
VCLLP1   CLC   SVLANG,LANGSHR      CHECK AGAINST SHORT ENGLISH NAME             
         BE    VCL20                                                            
         CLC   SVLANG,LANGSHRN     CHECK AGAINST SHORT NATIVE NAME              
         BE    VCL20                                                            
         BXLE  RE,R2,VCLLP1                                                     
         B     VCERR               ERROR, INVALID LANGUAGE INPUTTED             
*                                                                               
VCL20    MVC   SVLNG,LANGSHR       KEEP INITIAL SHORT ENGLISH NAME              
         MVC   SVBLNG,LANGCODE     SAVE                                         
         XI    SVBLNG,X'FF'             INVERTED LANGUAGE CODE                  
         B     VCLP1                                                            
         DROP  RE                                                               
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=========================== BEGIN CONTROL ===========================*         
BEGCNTRL NTR1                                                                   
*         SETS TITLE AND PREPARES FOR PROCESS CONTROL                           
*                                                                               
         MVC   TITLE+L'SVSYSNME+1(26),=C'DATA DICTIONARY CONVERSION'            
         CLC   SVSYS,=C'ALL'       PROCESS ALL SYSTEMS?                         
         BNE   XBEGCNTL             NO, USER SPECIFIED WHICH SYSTEM             
*                                   YES, WILL NEED TO GET SYS NOS.              
         LA    RE,SYSLST             FOR ALL SYSTEMS                            
         USING SYSLSTD,RE                                                       
         MVC   TBLENTLN,0(RE)      STORE L(TABLE ENTRY)                         
         LA    R1,EXSYSLX          R1-->END OF TABLE                            
         ST    R1,ATBLEND          STORE A(END OF TABLE)                        
*                                                                               
         LA    RE,6(RE)            RE-->1ST ENTRY                               
         ST    RE,ATBLCURR         STORE A(CURRENT TABLE ENTRY)                 
         MVC   SVNSYS,SYSLNUM      NATIVE SYSTEM NUMBER                         
         MVC   SVSYSNME,SYSLNAME   NATIVE SYSTEM NAME                           
         DROP  RE                                                               
*                                                                               
         XC    SVSYSTAB,SVSYSTAB   KEEP TRACK OF SYSTEMS PROCESSED              
         MVC   SVSYSTAB(1),SVNSYS                                               
*                                                                               
XBEGCNTL XIT1                                                                   
***********************************************************************         
         SPACE 2                                                                
***********************************************************************         
*============================ END CONTROL ============================*         
ENDCNTRL NTR1                                                                   
*         COMPLEMENTS THE BEGCNTRL ROUTINE                                      
*                                                                               
EC010    CLC   SVSYS,=C'ALL'       DID USER WANT ALL SYSTEMS?                   
         BNE   CCNEQUAL             NO, FORGET OTHER SYSTEMS                    
         L     RE,ATBLCURR         RE-->CURRENT SYSTEM IN SYSLST TABLE          
         L     RF,ATBLEND          RF-->1 BYTE BEYOND END OF TABLE              
         LA    RE,L'SYSLST(RE)     BUMP RE TO NEXT SYSTEM IN TABLE              
         CR    RE,RF               WAS THAT THE LAST SYSTEM                     
         BNL   CCNEQUAL             YEP!                                        
         ST    RE,ATBLCURR         STORE A(NEW CURRENT SYSTEM)                  
         SPACE 1                                                                
         LA    R2,SVSYSTAB         CHECK IF SYSTEM ALREADY PROCESSED            
EC020    CLI   0(R2),0             @ EOTABLE YET?                               
         BE    EC030                YEP, SYSTEM NOT PROCESSED                   
         CLC   (SYSLNUM-SYSLSTD)(,RE),0(R2)                                     
         BE    EC010               SYSTEM ALREADY IN TABLE                      
         LA    R2,1(R2)                                                         
         B     EC020                                                            
         SPACE 1                                                                
EC030    MVC   SVNSYS,(SYSLNUM-SYSLSTD)(RE)    GET NEW NATIVE SYS #             
         MVC   SVSYSNME,(SYSLNAME-SYSLSTD)(RE) GET NEW FULL SYS NAME            
         MVC   0(1,R2),SVNSYS      PUT SYSTEM IN TABLE                          
         ZAP   LINE,=P'99'         FORCE NEW PAGE                               
         XC    EQENTCNT,EQENTCNT   INITIALIZE EQUATE-ENTRIES COUNTER.           
         XC    NWENTCNT,NWENTCNT   INITIALIZE "NEW"-ENTRIES COUNTER.            
XENDCNTL B     CCEQUAL             EXIT WITH CC=0                               
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*====================== GENERAL INITIALIZATION =======================*         
INITIAL  NTR1                                                                   
*         SETS PANPREF, PANDDEQU, & PANDDNEW FROM PANTABLE GIVEN SVNSYS         
*         SETS NAME OF SYSTEM IN TITLE GIVEN SVSYSNME                           
*                                                                               
         MVC   TITLE(L'SVSYSNME),SVSYSNME                                       
         ZIC   R1,SVNSYS           R1 = NTH ROW IN PANTABLE                     
         L     R2,=A(PANTABLF-PANTABLE)   R2 = L(PANTABLE ENTRY)                
         MR    R0,R2               R1 = DISPLACEMENT FROM PANTABLE              
         LA    R1,PANTABLE(R1)     R1-->ROW CORRESP TO SYSTEM                   
         C     R1,APANTABX         MAKE SURE R1 DOESN'T POINT                   
         BL    *+6                  PASS THE END OF TABLE                       
         DC    H'0'                                                             
         MVC   PANDDEQU,0(R1)                                                   
         MVC   PANDDNEW,L'PANDDEQU(R1)                                          
         MVC   PANPREF,L'PANDDEQU+L'PANDDNEW(R1)                                
         XC    PANNAME,PANNAME                                                  
*                                                                               
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================== INITIALIZE PAN BOOK ========================*         
INITPAN  NTR1                                                                   
*                                                                               
*         ON ENTRY,                                                             
*           LINEBUFF=1ST LINE OF __DDEQUS/__DDNEW BOOK                          
*         AT EXIT,                                                              
*           LINEBUFF=LINE PRIOR TO 1ST NEED-TO-BE-PROCESSED LINE                
*                    IN RESPECTIVE PAN BOOKS                                    
*           PLERRCNT=0, INITIALIZED FOR PROCLANG                                
*                                                                               
         LA    R2,LINEBUFF                                                      
         CLC   =C'*          DATA SET',0(R2)                                    
         BE    *+6                                                              
         DC    H'0'                         NOT THE CORRECT FIRST LINE          
         MVC   P(80),0(R2)                                                      
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         CLC   PANNAME,PANDDEQU    DOING THE EQUATES BOOK?                      
         BE    INITP10              YEP                                         
         CLC   PANNAME,PANDDNEW     NOPE, SO IS IT THE "NEW" BOOK?              
         BE    XINITPAN              YEP, WE CAN JUST EXIT                      
         DC    H'0'                  NOPE, SOMETHING'S WRONG!                   
*                                                                               
INITP10  BAS   RE,GPANIC           GET NEXT LINE IN BOOK                        
         BNE   CCNEQUAL             ERROR OCCURRED, RETURN W/. CC<>0            
         CLI   EOFFLAG,0           END OF BOOK?                                 
         BNE   CCNEQUAL             YEP, CAN'T FIND START-OFF POINT             
         CLC   STARTOFF,LINEBUFF   START-OFF POINT?                             
         BNE   INITP10              NOPE, NOT YET...TRY NEXT LINE               
*                                                                               
XINITPAN XC    PLERRCNT,PLERRCNT   INITIALIZE BEFORE PROCLANG                   
         XC    ERROR,ERROR         NO ERROR CODE AT FIRST                       
         B     CCEQUAL             RETURN W/. CC=0                              
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========= VALIDATE SYNTAX OF EQUATES PAN BOOK CONTROL LINE ==========*         
VALLINE  NTR1                                                                   
*         ON ENTRY,                                                             
*           LINEBUFF=MOST RECENT LINE READ FROM BOOK                            
*                                                                               
         LA    R2,LINEBUFF                                                      
*                                                                               
         CLC   =C'TITLE',9(R2)                                                  
         BE    CCNEQUAL              CONTROL LINE OK, RTRN W/. CC<>0            
*                                                                               
         CLC   =C'EJECT',9(R2)                                                  
         BE    CCNEQUAL              CONTROL LINE OK, RTRN W/. CC<>0            
*                                                                               
         CLC   =C'SPACE',9(R2)                                                  
         BE    CCNEQUAL              CONTROL LINE OK, RTRN W/. CC<>0            
*                                                                               
         CLI   0(R2),C'*'                                                       
         BE    CCNEQUAL                                                         
*                                                                               
         B     CCEQUAL               DATA LINE, RTRN W/. CC=0                   
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========= PROCESS  PAN BOOK DATA LINE FOR CURRENT LANGUAGE ==========*         
PROCLANG NTR1                                                                   
*         ON ENTRY,                                                             
*           LINEBUFF=MOST RECENT READ LINE                                      
*           PANNAME =CORRESPONDING PAN BOOK                                     
*                                                                               
         LA    R2,LINEBUFF                                                      
*                                                                               
         CLC   PANNAME,PANDDEQU                                                 
         BE    PLEQU               COMPILE FOR EQUATE BOOK                      
         CLC   PANNAME,PANDDNEW                                                 
         BE    PLNEW               COMPILE FOR "NEW" BOOK                       
         DC    H'0'                                                             
*                                                                               
*------------------ DDEQU: VALIDATE SYNTAX OF LINE -------------------*         
*                                                                               
PLEQU    MVI   ERROR,13            ASSUME IT ISN'T AN EQU STATEMENT             
         CLC   =C'EQU',9(R2)       DATA LINE MUST BE AN EQU STATEMENT           
         BNE   PBADLINE             PRINT OUT THE BAD LINE AND EXIT             
         CLI   0(R2),C'#'          GEDDEQUS HAS # IN 1ST COLUMN                 
         BE    PLEQU100                                                         
*                                                                               
** EQUATE SYMBOL ENTRY                                                          
*                                                                               
PLEQU005 MVI   ERROR,8             ASSUME BAD PREFIX                            
         CLC   PANPREF,0(R2)       CHECK FOR CORRECT PREFIX                     
         BNE   PBADLINE             NOT CORRECT, PRINT BAD LINE                 
         MVI   ERROR,9             ASSUME C'#' IS MISSING                       
         CLI   2(R2),C'#'                                                       
         BNE   PBADLINE                                                         
*                                                                               
*** VALIDATE NUMERIC MSG#S                                                      
*                                                                               
         LA    R3,15(R2)           R3-->1ST COL OF DIGIT OF MESSAGE #           
         LA    R4,19(R2)           R4-->1ST COL AFTER MESSAGE #                 
         MVI   ERROR,10            ASSUME INVALID DIGIT IN MSG #                
PLEQU010 CLI   0(R3),C'0'          CHECK FOR VALID DIGITS IN MSG #              
         BL    PBADLINE                                                         
         CLI   0(R3),C'9'                                                       
         BH    PBADLINE                                                         
         LA    R3,1(R3)            BUMP TO NEXT DIGIT                           
         CR    R3,R4                                                            
         BL    PLEQU010             AND CHECK IT                                
*                                                                               
*** SET DDFLAG                                                                  
*                                                                               
PLEQU020 MVI   DDFLAG,0            CLEAR FLAG                                   
         LA    RE,A8EOL            WILL SET A7EOL AND A6EOL                     
         LA    R3,71                                                            
         LA    R4,3                                                             
PLEQU025 LR    R1,R3                                                            
         AR    R1,R2                                                            
         ST    R1,0(RE)                                                         
         LA    R3,1(R3)                                                         
         LA    RE,L'A8EOL(RE)                                                   
         BCT   R4,PLEQU025                                                      
*                                                                               
         LR    R3,R2               SET DDFLAG                                   
PLEQU030 C     R3,A8EOL            PAST 8TH LAST CHAR?                          
         BH    PLEQU032             YEP, DON'T BOTHER WITH THIS CHECK           
         CLC   =C'DD#TABLE',0(R3)                                               
         BNE   PLEQU031                                                         
         OI    DDFLAG,DD#TABLE                                                  
         LH    R1,TABLECNT                                                      
         LA    R1,1(R1)                                                         
         STH   R1,TABLECNT                                                      
PLEQU031 CLC   =C'DD#DISKG',0(R3)                                               
         BNE   PLEQU032                                                         
         OI    DDFLAG,DD#DISKG                                                  
         LH    R1,DISKGCNT                                                      
         LA    R1,1(R1)                                                         
         STH   R1,DISKGCNT                                                      
*                                                                               
PLEQU032 C     R3,A7EOL            PAST 7TH LAST CHAR?                          
         BH    PLEQU034             YEP, DON'T BOTHER WITH THIS CHECK           
         CLC   =C'DD#DISK',0(R3)                                                
         BNE   PLEQU033                                                         
         OI    DDFLAG,DD#DISK                                                   
         LH    R1,DISKCNT                                                       
         LA    R1,1(R1)                                                         
         STH   R1,DISKCNT                                                       
PLEQU033 CLC   =C'GE#DISK',0(R3)                                                
         BNE   PLEQU034                                                         
         OI    DDFLAG,GE#DISK                                                   
         LH    R1,DISKCNT                                                       
         LA    R1,1(R1)                                                         
         STH   R1,DISKCNT                                                       
*                                                                               
PLEQU034 C     R3,A6EOL            PAST 6TH LAST CHAR?                          
         BH    PLEQU200             YEP, END OF CHECK                           
         CLC   =C'DD#GEN',0(R3)                                                 
         BNE   PLEQU035                                                         
         OI    DDFLAG,DD#GEN                                                    
         LH    R1,GENCNT                                                        
         LA    R1,1(R1)                                                         
         STH   R1,GENCNT                                                        
PLEQU035 CLC   =C'GE#GEN',0(R3)                                                 
         BNE   PLEQU036                                                         
         OI    DDFLAG,GE#GEN                                                    
         LH    R1,GENCNT                                                        
         LA    R1,1(R1)                                                         
         STH   R1,GENCNT                                                        
*                                                                               
PLEQU036 LA    R3,1(R3)            BUMP TO NEXT CHAR ON LINE                    
         B     PLEQU030             AND REPEAT PROCESS                          
*                                                                               
** LENGTH-EQUATE ENTRY                                                          
*                                                                               
PLEQU100 ZIC   R1,NUMLINE                                                       
         LA    R1,1(R1)                                                         
         STC   R1,NUMLINE                                                       
*                                                                               
         LA    R3,71(R2)           R3-->LAST CHAR ON PANLINE                    
PLEQU110 CLI   0(R3),C' '          LOOK FOR LAST NON-SPACE CHAR                 
         BNE   PLEQU120                                                         
         BCTR  R3,0                                                             
         CR    R2,R3                                                            
         BL    PLEQU110                                                         
         DC    H'0'                                                             
*                                                                               
PLEQU120 SR    R3,R2                                                            
         LR    R1,R3               R1 = L(ENTRY) FOR EX INSTRUCTION             
         LA    R0,1(R1)            R0 = L(ENTRY)                                
         B     PLEQU220                                                         
*                                                                               
*------------------------ DDEQU: PROCESS LINE ------------------------*         
*                                                                               
PLEQU200 XC    SRTENTRY,SRTENTRY   CLEAR BUFFER OUT                             
         LA    RF,SRTENTRY                                                      
         USING SRTRECD,RF                                                       
         MVC   SRTKSYS,SVNSYS      SYSTEM #                                     
         PACK  DUB,15(4,R2)        CONVERT MESSAGE NUMBER                       
         CVB   R3,DUB               INTO BINARY.                                
         STCM  R3,3,SRTKMNUM       STORE MESSAGE #                              
         OC    SRTKMNUM,DDFLAG     DENOTE DD#DISK, ETC. IF NECESSARY            
         DROP  RF                                                               
         MVI   NUMLINE,0           RESET THE NTH LINE                           
         LA    R1,7                R1 = L(EQUNAME) FOR EX INSTR.                
         LA    R0,8                                                             
*                                                                               
PLEQU220 LA    R3,SRTENTRY                                                      
         USING SRTRECD,R3                                                       
         MVC   SRTKTYPE,=C'EQU'                                                 
         MVC   SRTKNEQU,NUMLINE            NTH EQU ENTRY                        
         STC   R0,SRTINFO                                                       
         EXMVC R1,SRTINFO+1,0(R2)                                               
         LA    R1,SRTKEYQ+4+1(R1)  R1 = L(IBM SORT RECORD)-1                    
         L     R4,AMSGREC                                                       
         XC    0(256,R4),0(R4)                                                  
         EXMVC R1,4(R4),SRTENTRY                                                
         LA    R1,1(R1)                                                         
         STCM  R1,3,0(R4)          STICK IN IBM RECORD LEN                      
         DROP  R3                                                               
*                                                                               
         GOTO1 =V(SORTER),DMCB,=C'PUT',(R4)                                     
*                                                                               
         LH    R1,PRLINCNT         INCREASE # LINES PROCESSED                   
         LA    R1,1(R1)                                                         
         STH   R1,PRLINCNT                                                      
*                                                                               
         CLI   NUMLINE,0           DON'T PROCESS THESE COUNTS                   
         BNE   XPLEQU               WITH OTHER EQUATE ENTRIES                   
*                                                                               
         LH    R1,EQENTCNT         EQUATE NAME ENTRIES                          
         LA    R1,1(R1)                                                         
         STH   R1,EQENTCNT                                                      
*                                                                               
         CLI   DDFLAG,0            WAS THIS A 'STRAIGHT' ENTRY?                 
         BNE   PLEQU230             NOPE                                        
         LH    R1,NDISKCNT                                                      
         LA    R1,1(R1)                                                         
         STH   R1,NDISKCNT                                                      
         B     XPLEQU                                                           
*                                                                               
PLEQU230 TM    DDFLAG,DD#TABLE                                                  
         BNO   XPLEQU                                                           
*                                                                               
** MAKE 'FIC' ENTRIES FOR GENERAL'S COMMON TABLE                                
*                                                                               
         LA    R3,SRTENTRY                                                      
         USING SRTRECD,R3                                                       
         MVC   SRTKTYPE,=C'FIC'                                                 
         MVI   SRTKELNG,SYMBENG                                                 
         MVI   SRTKNLIN,1                                                       
         MVI   SRTINFO,L'GNCMNTAB                                               
         MVC   SRTINFO+1(L'GNCMNTAB),GNCMNTAB                                   
         LA    R1,L'GNCMNTAB+SRTKEYQ+4+1                                        
         DROP  R3                                                               
         L     R4,AMSGREC                                                       
         STCM  R1,3,0(R4)                                                       
         MVC   4(L'SRTENTRY,R4),SRTENTRY                                        
         GOTO1 =V(SORTER),DMCB,=C'PUT',(R4)                                     
*                                                                               
** MAKE 'DEC' ENTRIES FOR GENERAL'S COMMON TABLE                                
*                                                                               
         LA    R3,SRTENTRY                                                      
         USING SRTRECD,R3                                                       
         MVC   SRTKTYPE,=C'DEC'                                                 
         MVI   SRTKNLNG,1                                                       
         MVI   SRTKNLIN,0                                                       
         MVC   SRTINFO(4),=X'C5FF0100'   HARD-CODED LNGLIST                     
         DROP  R3                                                               
         LA    R1,SRTKEYQ+4+4      IBM RECORD LENGTH                            
         L     R4,AMSGREC                                                       
         STCM  R1,3,0(R4)                                                       
         MVC   4(L'SRTENTRY,R4),SRTENTRY                                        
         GOTO1 =V(SORTER),DMCB,=C'PUT',(R4)                                     
*                                                                               
XPLEQU   B     EXIT                PROCESS NEXT EQUATE LINE FROM BOOK           
         SPACE 2                                                                
*                                                                               
*---------------------- DDNEW: VALIDATE SYNTAX -----------------------*         
*                                                                               
PLNEW    DS    0H                                                               
*&&UK                                                                           
         CLI   LINEBUFF+4,SYMBUSA  DON'T USE AMERICAN AND                       
         BE    XPLNEW                                                           
         CLI   LINEBUFF+4,SYMBCAN   CANADIAN-FRENCH IN THE UK                   
         BE    XPLNEW                                                           
*&&                                                                             
         CLC   EBCMSGNM,LINEBUFF   SAME MSG # AS THE PREVIOUS LINE?             
         BE    *+16                 YEP, SKIP TO CHKLANG                        
         BAS   RE,MKHDRSRT         MAKE HEADER SORT RECORDS                     
         BAS   RE,CHKNUM           CHECK MSG-EQU NUMBER                         
         BNE   PBADLINE             LINE CONTAINS AN ERROR                      
         BAS   RE,CHKLANG          CHECK LANGUAGE SYMBOL                        
         BNE   PBADLINE             LINE CONTAINS AN ERROR                      
         BAS   RE,GETMSG           GET MESSAGES                                 
         BNE   PBADLINE             LINE CONTAINS AN ERROR                      
*                                                                               
*---------------------- DDNEW: BUILD SRTENTRY ------------------------*         
*                                                                               
         XC    SRTENTRY,SRTENTRY                                                
         LA    RF,SRTENTRY+4                                                    
         USING SRTRECD,RF                                                       
         MVC   SRTKSYS,SVNSYS       SORT KEYFIELD: SYSTEM #                     
         MVC   SRTKMNUM,MSGNUM      SORT KEYFIELD: MSG #                        
         CLI   SVNSYS,15            IF SYS=GENERAL,                             
         BNE   *+8                                                              
         OI    SRTKMNUM,DD#GEN       TURN ON X'4000' BIT                        
         MVC   SRTKTYPE,=C'FIC'     SORT KEYFIELD: MSG TYPE                     
         MVC   SRTKELNG,LINEBUFF+4  SORT KEYFIELD: EBCDIC LANG SYMB             
         MVC   SRTKNLIN,NUMLINE     SORT KEYFIELD: MSG LIN#                     
         ZIC   R1,LMESSAGE                                                      
         LR    R0,R1                                                            
         STC   R1,SRTINFO           L(MESSAGE)                                  
         BCTR  R1,0                                                             
         EXMVC R1,SRTINFO+1,MESSAGE  SORT RECORD: DATA                          
         LR    R1,R0                                                            
         LA    R1,SRTKEYQ+5(R1)                                                 
         STCM  R1,3,SRTENTRY                  IBM: L(SORT RECD)                 
         DROP  RF                                                               
         GOTO1 =V(SORTER),DMCB,=C'PUT',SRTENTRY                                 
*                                                                               
         LH    R1,NWENTCNT                                                      
         LA    R1,1(R1)                                                         
         STH   R1,NWENTCNT                                                      
*                                                                               
XPLNEW   B     EXIT                                                             
*                                                                               
*-------------------------- PROCLANG ERRORS --------------------------*         
*                                                                               
PBADLINE MVC   P(L'LINEBUFF),LINEBUFF                                           
         GOTO1 =V(PRINTER)                                                      
         L     R1,PLERRCNT         INCREMENT # OF UNPROCESSED LINES             
         LA    R1,1(R1)                                                         
         ST    R1,PLERRCNT                                                      
*                                                                               
         LA    RE,CCEQUAL                                                       
         OC    ERROR,ERROR         ANY ERROR FLAGGED?                           
         BNZ   ERRPRT               YES, GO AND PRINT ERROR MESSAGE             
*                                                                               
         BR    RE                  NO, EXIT AND DO NEXT LINE IN BOOK            
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=============== ROUTINES FOR COMPILING "NEW" PAN BOOK ===============*         
*                                                                               
*-------------------- CHECK MESSAGE-EQUATE NUMBER --------------------*         
*                                                                               
CHKNUM   NTR1                                                                   
*         ON ENTRY,                                                             
*          LINEBUFF=MOST RECENT DATA LINE FROM A __DDNEW BOOK                   
*          EBCMSGNM=PREVIOUS MESSAGE # IN EBCDIC                                
*         AT EXIT,                                                              
*          MSGNUM  =EQUATED NUMBER OF CURRENT MESSAGE IN BINARY                 
*          EBCMSGNM=UPDATED EBCDIC OF EQUATED #                                 
*                                                                               
         LA    R1,4                MAX OF 4 DIGITS FOR MSG #                    
         LA    R2,LINEBUFF                                                      
         MVI   ERROR,3             ASSUME INVALID DIGIT ERROR                   
CHKNUM10 CLI   0(R2),C'0'          CHECK FOR VALID DIGITS                       
         BL    CCNEQUAL                                                         
         CLI   0(R2),C'9'                                                       
         BH    CCNEQUAL                                                         
         LA    R2,1(R2)            THIS DIGIT IS OK, BUMP TO NEXT ONE           
         BCT   R1,CHKNUM10                                                      
*                                                                               
         MVC   EBCMSGNM,LINEBUFF   UPDATE MESSAGE NUMBER                        
         PACK  DUB,EBCMSGNM                                                     
         CVB   R1,DUB                                                           
         STCM  R1,3,MSGNUM         GET BINARY OF MESSAGE #                      
*                                                                               
         MVI   NUMLINE,1           INITIALIZE # OF LINES OF MSG                 
         MVI   NUMLANG,0                                                        
         MVC   ANXLGLST,ALNGLIST   INITIALIZE ANXLGLST                          
         XC    LNGLIST,LNGLIST                                                  
         B     CCEQUAL                                                          
         SPACE 2                                                                
*                                                                               
*----------------------- CHECK LANGUAGE SYMBOL -----------------------*         
*                                                                               
CHKLANG  NTR1                                                                   
*         CHECKS TO SEE IF LANGUAGE SYMBOL IS CORRECT                           
*         ON ENTRY,                                                             
*          LINEBUFF=MOST RECENT DATA LINE FROM A __DDNEW BOOK                   
*         AT EXIT,                                                              
*          BINLANG =EXCLUSIVE-OR OF LANGUAGE CODE                               
*                                                                               
         CLI   SVLNG,C'*'          ALL LANGUAGES REQUESTED?                     
         BE    CHKLNG05             YEP, SKIP NEXT STEP                         
         MVI   ERROR,4             ASSUME LANG SYMBOLS DO NOT MATCH             
         CLC   SVLNG,LINEBUFF+4    LANGUAGE SYMBOL MATCHES?                     
         BNE   CCNEQUAL             NOPE, DON'T DO THIS LINE                    
*                                                                               
CHKLNG05 LA    R2,SYMBLTAB         R2-->TABLE OF VALID LANG SYMBOLS             
         MVI   ERROR,3                ASSUME INVALID LANG CODE ERROR            
CHKLNG10 CLI   0(R2),SYMBNOT          END OF SYMBLTAB YET?                      
         BE    CCNEQUAL                YEP WITH CC<>0                           
         CLC   LINEBUFF+4(1),0(R2)    MATCH AGAINST SYMBLTAB                    
         BE    CHKLNG20               MATCHED, DO NEXT THING                    
         LA    R2,2(R2)               DIDN'T MATCH,                             
         B     CHKLNG10                TRY NEXT ENTRY IN TABLE                  
*                                                                               
CHKLNG20 MVC   BINLANG,1(R2)       GET LANGUAGE CODE                            
         XI    BINLANG,X'FF'       INVERTING THE LANGUAGE CODE WAS              
*                                    DONE BY CTGEN03                            
         L     RE,ANXLGLST                                                      
         CLC   0(1,RE),LINEBUFF+4  LANG SYMB CHANGED?                           
         BNE   CHKLNG40             YEP                                         
         ZIC   R1,NUMLINE           NOPE, INCREASE # OF LINES                   
         LA    R1,1(R1)              FOR CURRENT LANGUAGE                       
         STC   R1,NUMLINE                                                       
         B     CCEQUAL                                                          
*                                                                               
CHKLNG40 CLI   LINEBUFF+4,SYMBUSA  IS IT USA ENGLISH?                           
         BNE   CHKLNG50             NOPE                                        
         MVI   0(RE),SYMBUSA        YEP, OVRWRTE PREV ENTRY IN LNGLIST          
         MVI   NUMLINE,1           RESET THE # OF LINES FOR MSG                 
         B     CCEQUAL                                                          
*                                                                               
CHKLNG50 CLI   LINEBUFF+4,SYMBCAN  IS IT CANADIAN FRENCH?                       
         BNE   CHKLNG70             NOPE                                        
         MVI   0(RE),SYMBCAN        YEP, OVRWRTE PREV ENTRY IN LNGLIST          
         MVI   NUMLINE,1           RESET THE # OF LINES FOR MSG                 
         B     CCEQUAL                                                          
*                                                                               
CHKLNG70 MVC   2(1,RE),NUMLINE     STICK # OF LINES INTO LNGLIST                
         MVI   NUMLINE,1           RESET NUMLINE COUNTER                        
         CLI   NUMLANG,0           FIRST LANG OF NEW MSG#?                      
         BE    *+8                                                              
         LA    RE,3(RE)            BUMP POINTER TO STORE NEXT ENTRY             
         ST    RE,ANXLGLST                                                      
         MVC   0(1,RE),LINEBUFF+4                                               
         MVC   1(1,RE),BINLANG                                                  
         ZIC   R1,NUMLANG          TOTALLY NEW LANGUAGE, INCREMENT              
         LA    R1,1(R1)             COUNTER                                     
         STC   R1,NUMLANG                                                       
*                                                                               
         B     CCEQUAL                                                          
         SPACE 2                                                                
*                                                                               
*--------------------------- GET MESSAGES ----------------------------*         
*                                                                               
GETMSG   NTR1                                                                   
*         ON ENTRY,                                                             
*          LINEBUFF=MOST CURRENT LINE READ                                      
*                                                                               
         MVI   ERROR,1             ASSUME DELIMITER MISSING                     
         CLI   LINEBUFF+5,DELIM    PROPER BEGINNING DELIMITERS ARE '>'          
         BE    GTMSG10                                                          
         CLI   LINEBUFF+5,COMMON    OR C'?'                                     
         BE    GTMSG10                                                          
         CLI   LINEBUFF+5,COMMON2   OR C'<'                                     
         BNE   CCNEQUAL                                                         
*                                                                               
GTMSG10  LA    R2,LINEBUFF+5       R2-->START DELIMITER OF STRING               
         LA    RF,LINEBUFF+71      RF-->LAST POSSIBLE COLUMN FOR INPUT          
GTMSG03  CLI   0(RF),C' '          SEARCH BACKWARD FOR END DELIMITER            
         BNE   GTMSG06              LAST NON-BLANK CHAR REACHED, OR             
         BCTR  RF,0                 BUMP BACKWARD                               
         CR    R2,RF               R2>=RF ==> BLANK ENTRY ==> ERROR             
         BL    GTMSG03             CONTINUE SEARCH                              
         MVI   ERROR,14                                                         
         B     CCNEQUAL            RETURN TO PROCLANG WITH CC<>0                
*                                                                               
GTMSG06  MVI   ERROR,15            ASSUME END DELIMITER MISSING                 
         CLI   0(RF),DELIM         CHECK IF IT IS END DELIMITER                 
         BNE   CCNEQUAL                                                         
*                                                                               
         XR    R3,R3               INITIALIZE LENGTH OF MESSAGE                 
         XC    MESSAGE,MESSAGE     CLEAR MESSAGE BUFFER                         
         LA    R4,MESSAGE                                                       
*                                                                               
         SR    RF,R2                                                            
         BP    *+6                                                              
         DC    H'0'                                                             
         EXMVC RF,MESSAGE,0(R2)                                                 
         LA    RF,1(RF)                                                         
*                                                                               
GTMSG30  MVI   ERROR,2             ASSUME LENGTH < 1                            
         CH    RF,=H'1'            LENGTH MUST BE AT LEAST 1                    
         BL    CCNEQUAL            L(MESSAGE)<1, ERROR                          
*                                                                               
         STCM  RF,1,LMESSAGE       STORE L(MESSAGE)                             
         B     CCEQUAL             EXIT WITH CC=0                               
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*================ PROCESS MESSAGE RECORDS FROM GENDIR ================*         
PRCGEND  NTR1                                                                   
*         SORT RECORDS FROM GENDIR/GENFIL LOOKS LIKE                            
*          MSGREC(2)   = L(SORT RECORD)    - IBM                                
*          MSGREC+2(2) = CONTROL BYTES     - IBM                                
*          MSGREC+4(2) = MESSAGE NUMBER    - SORT KEYFIELD                      
*          MSGREC+6(3) = MESSAGE TYPE      - SORT KEYFIELD                      
*          MSGREC+9(1) = MESSAGE LANGUAGE  - SORT KEYFIELD                      
*          MSGREC+10   = MESSAGE RECORD    - DATA                               
*                                                                               
*                                                                               
         GOTO1 =V(DATAMGR),DMCB,=C'DMOPEN  ',=C'CONTROL ',FLIST,MSGREC          
*                                                                               
         MVC   P(23),=C'*         GENDIR/GENFIL'                                
         BAS   RE,P2BLINE                                                       
*                                                                               
         XC    GENDCNT,GENDCNT                                                  
         XC    KEY,KEY                                                          
         LA    R3,KEY                                                           
         USING GMSGD,R3            GET RECORD FROM GENDIR FIRST                 
         MVI   GMKREC,GMKRECQ      RECORD TYPE                                  
         MVC   GMKSYS,SVNSYS       SYSTEM NUMBER                                
         CLI   SVNSYS,15                                                        
         BNE   *+8                                                              
         MVI   GMKSYS,0                                                         
         MVI   GMKTYP,GMKTDIC      DICTIONARY MESSAGE TYPE                      
         MVC   KEYSAVE,KEY                                                      
         GOTO1 =V(DATAMGR),DMCB,=C'DMRDHI  ',=C'GENDIR  ',KEYSAVE,KEY           
         B     PG20                                                             
PG10     GOTO1 =V(DATAMGR),DMCB,=C'DMRSEQ  ',=C'GENDIR  ',KEYSAVE,KEY           
PG20     TM    DMCB+8,X'F0'        ANY DRASTIC ERRORS?                          
         BZ    *+6                  NOPE                                        
         DC    H'0'                                                             
*                                                                               
         CLC   KEY(GMKMSG-GMSGD),KEYSAVE   DOES RETRIEVED KEY MATCH?            
         BNE   XPG                                                              
         MVC   KEYSAVE,KEY                  YES, SAVE KEY                       
         TM    DMCB+8,X'02'        RECORD DELETED?                              
         BO    PG10                 YEP, READ NEXT RECORD                       
         OC    SVBLNG,SVBLNG       DID USER SPECIFY LANGUAGE?                   
         BZ    PG30                 NO                                          
         CLC   GMKLANG,SVBLNG      IS LANG WHAT USER WANT?                      
         BNE   PG10                 NO, READ NEXT RECORD                        
*                                                                               
PG30     LA    R2,MSGREC+4+(SRTINFO-SRTRECD)                                    
         GOTO1 =V(DATAMGR),DMCB,=C'GETREC  ',=C'GENFIL  ',GMDDA,(R2),  +        
               DMWORK                                                           
         DROP  R3                                                               
         CLI   DMCB+8,0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         USING GMSGD,R2                                                         
         LA    R3,MSGREC+4                                                      
         USING SRTRECD,R3                                                       
         MVC   SRTKSYS,SVNSYS      PUT SYS# IN SORT RECORD                      
         MVC   SRTKMNUM,GMKMSG     PUT MSG # IN SORT RECORD                     
         OI    SRTKMNUM,DDDISKQ    TURN ON DD#DISK ON SORT RECORD               
         MVC   HIMSGNM2,SRTKMNUM   SAVE CURRENT HIMSGNM2                        
         CLI   SVNSYS,15           IF SYS=GENERAL,                              
         BNE   *+8                                                              
         OI    SRTKMNUM,DD#GEN      TURN ON X'4000' BIT                         
         MVC   SRTKTYPE,=C'FIL'    SORT RECORD TYPE                             
         MVC   SRTKLANG,GMKLANG    SORT RECORD LANGUAGE                         
         ZICM  R1,GMFLEN,(3)       L(MESSAGE RECORD FROM GENFIL) +              
         LA    R1,4+SRTKEYQ(R1)     L(SORT KEY) + L(IBM OVERHEAD)               
         STCM  R1,3,MSGREC         = L(SORT RECORD)                             
         DROP  R2,R3                                                            
*                                                                               
         GOTO1 =V(SORTER),DMCB,=C'PUT',MSGREC                                   
         L     R1,GENDCNT          INCREMENT # OF RECORDS FROM                  
         LA    R1,1(R1)             GENDIR FILE                                 
         ST    R1,GENDCNT                                                       
         LA    R3,KEY              RESTORE R3 TO POINT TO KEY                   
         B     PG10                DO NEXT RECORD                               
*                                                                               
XPG      MVC   P(24),=C'# MESSAGES FROM GENDIR ='                               
         EDIT  GENDCNT,(6,P+27),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK              
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BAS   RE,CHKERR                                                        
         ZAP   LINE,=P'99'                                                      
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*==================== BUILD DEC(IDER) SORT RECORD ====================*         
MKHDRSRT NTR1                                                                   
*         THESE SORT RECORDS ARE FOR CONTROLLING WHAT TO DO WITH THOSE          
*          SORT RECORDS WITH THE SAME MESSAGE #.  THEY LOOK LIKE                
*           SRTENTRY(2)   = L(SORT RECORD)  - IBM                               
*           SRTENTRY+2(2) = CONTROL BYTES   - IBM                               
*           SRTENTRY+4(2) = MESSAGE #       - SORT KEYFIELD                     
*           SRTENTRY+6(3) = MESSAGE TYPE    - SORT KEYFIELD = C'DEC'            
*           SRTENTRY+9(1) = # OF LANGUAGES  - SORT KEYFIELD = XL1               
*           SRTENTRY+10(1)= NULLS           - SORT KEYFIELD = X'00'             
*           SRTENTRY+11(?)= LNGLIST         - SORT DATAFLD  = CL?               
*                                                                               
         CLI   NUMLANG,0           NO LANGUAGES==>NO MESSAGES                   
         BE    XMKHDRSR                                                         
*                                                                               
         ZIC   RF,NUMLANG                                                       
         LR    R1,RF                                                            
         BCTR  RF,0                                                             
         MH    RF,=H'3'                                                         
         LA    RE,LNGLIST(RF)                                                   
         MVC   2(1,RE),NUMLINE                                                  
*                                                                               
         XC    SRTENTRY,SRTENTRY                                                
         LA    R3,SRTENTRY+4                                                    
         USING SRTRECD,R3                                                       
         MVC   SRTKSYS,SVNSYS      SYS#                                         
         MVC   SRTKMNUM,MSGNUM     MSG #                                        
         CLI   SVNSYS,15           IF SYS=GENERAL,                              
         BNE   *+8                                                              
         OI    SRTKMNUM,DD#GEN      TURN ON X'4000' BIT                         
         MVC   SRTKTYPE,=C'DEC'    MSG TYPE                                     
         STC   R1,SRTKNLNG         # OF LANGUAGES                               
         MH    R1,=H'3'            R1=L(LNGLIST)                                
         EXMVC R1,SRTINFO,LNGLIST  MOVE IN X'00' FOR EOL MARKER                 
         DROP  R3                                                               
         LA    R1,SRTKEYQ+4+1(R1)  R1=L(ENTIRE SRTENTRY)                        
         STCM  R1,3,SRTENTRY                                                    
         GOTO1 =V(SORTER),DMCB,=C'PUT',SRTENTRY                                 
*                                                                               
XMKHDRSR B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*===================== BUILD MY OWN SORT RECORDS =====================*         
MYSRTREC NTR1                                                                   
*         THESE SORT RECORDS ARE FOR INDICATING THE END OF A BUNCH OF           
*          SORT RECORDS WHICH HAVE THE SAME MESSAGE #.  THEY LOOK LIKE          
*           SRTENTRY(2)   = L(SORT RECORD)  - IBM                               
*           SRTENTRY+2(2) = CONTROL BYTES   - IBM                               
*           SRTENTRY+4(2) = MESSAGE #       - SORT KEYFIELD                     
*           SRTENTRY+6(3) = MESSAGE TYPE    - SORT KEYFIELD = XL3'FF'           
*           SRTENTRY+9(1) = MESSAG LANGUAGE - SORT KEYFIELD = X'00'             
*                                                                               
         LA    R2,1                                                             
         SR    R3,R3                                                            
         ICM   R3,3,=X'C100'        GO UP TO 49408, BUT SKIP THOSE              
MYSRT10  XC    SRTENTRY,SRTENTRY                                                
         C     R2,=F'4096'           BETWEEN 4096=X'1000'                       
         BL    MYSRT15                                                          
         C     R2,=F'16383'          AND 16383=X'3FFF', INCLUSIVE               
         BNH   MYSRT20             (49408 WAS ARBITRARILY CHOSEN)               
MYSRT15  MVC   SRTENTRY(2),=H'12'           12=5+SRTKEYQ                        
         MVC   SRTENTRY+4(L'SVNSYS),SVNSYS                                      
         STCM  R2,3,SRTENTRY+5              MESSAGE #                           
         MVC   SRTENTRY+7(3),=X'FFFFFF'     MY OWN TYPE                         
         GOTO1 =V(SORTER),DMCB,=C'PUT',SRTENTRY                                 
         CR    R2,R3                                                            
         BE    EXIT                                                             
MYSRT20  LA    R2,1(R2)                                                         
         B     MYSRT10                                                          
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================= HIGH (CONTROL) RECORD =======================*         
HICTLREC NTR1                                                                   
         SPACE 1                                                                
         XC    SRTENTRY,SRTENTRY                                                
         LA    R3,SRTENTRY+4                                                    
         USING SRTRECD,R3          BUILD SORT KEY                               
         MVC   SRTKSYS,SVNSYS                                                   
         MVC   SRTKTYPE,=C'EQU'                                                 
         LA    R4,SRTINFO                                                       
         USING GMSGD,R4            BUILD MSG RECORD KEY                         
         MVI   GMKREC,GMKRECQ                                                   
         MVC   GMKSYS,SVNSYS                                                    
         MVI   GMKTYP,GMKTGDIC                                                  
         LA    R5,GMSGD+GMFIRST                                                 
         USING GMCTLD,R5           BUILD CONTROL ELEMENT                        
         MVI   GMCTLEL,GMCTLELC                                                 
         MVI   GMCTLELL,GMCTLLNQ                                                
         CLC   HIMSGNM1,=X'8000'                                                
         BL    *+8                                                              
         OI    GMCTLFLG,GCFCNUM2                                                
         MVC   GMCTLNM1,HIMSGNM1                                                
         MVC   GMCTLNM2,HIMSGNM2                                                
         LA    R1,GMFIRST+GMCTLLNQ+1                                            
         STCM  R1,3,GMFLEN                                                      
         DROP  R5,R4,R3                                                         
         LA    R1,SRTKEYQ+4(R1)                                                 
         STCM  R1,3,SRTENTRY                                                    
         SPACE 1                                                                
         GOTO1 =V(SORTER),DMCB,=C'PUT',SRTENTRY                                 
         SPACE 1                                                                
         XC    HIMSGNM1,HIMSGNM1                                                
         XC    HIMSGNM2,HIMSGNM2                                                
*                                                                               
** PUT NAME OF CURRENT INTO SORT TOO                                            
*                                                                               
         XC    SRTENTRY,SRTENTRY                                                
         LA    R3,SRTENTRY+4                                                    
         USING SRTRECD,R3          BUILD SORT KEY                               
         MVC   SRTKSYS,SVNSYS                                                   
         MVC   SRTKTYPE,=C'CYS'    'CYS' -> SYSTEM NAME                         
         MVC   SRTINFO(L'SVSYSNME),SVSYSNME                                     
         DROP  R3                                                               
         LA    R1,SRTKEYQ+L'SVSYSNME+4                                          
         STCM  R1,3,SRTENTRY                                                    
         SPACE 1                                                                
         GOTO1 =V(SORTER),DMCB,=C'PUT',SRTENTRY                                 
*                                                                               
XHICTLRC B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*========================= GET SORT RECORDS ==========================*         
GETSORT  NTR1                                                                   
*         GET SORT RECORDS BACK AND PROCESS THEM                                
*                                                                               
         CLC   SVSYS,=C'ALL'             ADJUST THE SYSTEM NAME                 
         BNE   *+16                       IN THE TITLE TO REFLECT               
         MVC   TITLE(L'SYSNAME),SPACES    THE ENTIRE JOB                        
         MVC   TITLE(L'SVSYS),SVSYS                                             
         MVC   P(24),=C'*         OUTPUT RESULTS'                               
         BAS   RE,P2BLINE                                                       
*                                                                               
         XC    TPOUTCNT,TPOUTCNT    CLEAR COUNTERS                              
         XC    BYSYSCNT,BYSYSCNT                                                
         XC    BYTESCNT,BYTESCNT                                                
         XC    GENDCNT,GENDCNT                                                  
         XC    NWENTCNT,NWENTCNT                                                
         XC    GSERRCNT,GSERRCNT                                                
         XC    HICTLCNT,HICTLCNT                                                
         XC    SYSNAME,SYSNAME     CLEAR SYSTEM NAME FOR 1ST TIME               
*                                                                               
GS10     XC    SRTFLAG,SRTFLAG     CLEAR THESE FOR EVERY NEW                    
         MVC   EQSYMB,SPACES        MESSAGE ENCOUNTERED                         
GS20     GOTO1 =V(SORTER),DMCB,=C'GET'                                          
*                                                                               
         ICM   R2,15,4(R1)                                                      
         BZ    XGETSORT                                                         
*                                                                               
         LA    R2,4(R2)                                                         
         USING SRTRECD,R2                                                       
*                                                                               
         CLC   SRTKTYPE,=C'CYS'     IS IT TYPE 'CYS'?                           
         BE    DOCYS                                                            
         CLC   SRTKTYPE,=C'DEC'     IS IT TYPE 'DEC'?                           
         BE    DODEC                                                            
         CLC   SRTKTYPE,=C'EQU'     IS IT TYPE 'EQU'?                           
         BE    DOEQU                                                            
         CLC   SRTKTYPE,=C'FIC'     IS IT TYPE 'FIC'?                           
         BE    DOFIC                                                            
         CLC   SRTKTYPE,=C'FIL'     IS IT TYPE 'FIL'?                           
         BE    DOFIL                                                            
         CLC   SRTKTYPE,=X'FFFFFF'  IS IT TYPE X'FFFFFF'?                       
         BE    DOFFF                                                            
         DC    H'0'                MUST BE ONE OF THE ABOVE                     
*                                                                               
*------------------------ DOCYS: GET SYSNAME -------------------------*         
*                                                                               
DOCYS    OC    SYSNAME,SYSNAME     IS THIS THE FIRST TIME?                      
         BZ    DOCYS10              YES                                         
         SPACE 1                                                                
         GOTO1 =V(PRINTER)                                                      
         MVC   P(39),=C'PROCESSING COMPLETED FOR         SYSTEM'                
         MVC   P+25(L'SYSNAME),SYSNAME                                          
         GOTO1 =V(PRINTER)                                                      
         SPACE 1                                                                
         MVC   P(33),=C'# OF RECORDS FOR         SYSTEM ='                      
         MVC   P+17(L'SYSNAME),SYSNAME                                          
         EDIT  BYSYSCNT,(6,P+35),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
         XC    BYSYSCNT,BYSYSCNT                                                
         XC    MSGNUM,MSGNUM                                                    
         SPACE 1                                                                
DOCYS10  ZAP   LINE,=P'99'                                                      
         MVC   SYSNAME,SRTINFO                                                  
         MVC   SYSNUM,SRTKSYS                                                   
         MVC   TITLE(L'SYSNAME),SYSNAME                                         
         B     GS10                                                             
*                                                                               
*------------------------ DODEC: GET LNGLIST -------------------------*         
*                                                                               
DODEC    XC    LNGLIST,LNGLIST                                                  
         ZIC   R1,SRTKNLNG         R1=# OF DIFFERENT LANG FOR MSG               
         MH    R1,=H'3'                                                         
         EXMVC R1,LNGLIST,SRTINFO                                               
         B     GS20                 THIS BUFFER FOR  DOEQU  USE                 
*                                                                               
*------------------ DOEQU: HANDLE EQUATED ENTRIES --------------------*         
*                                                                               
DOEQU    OC    SRTKMNUM,SRTKMNUM   IS IT A HIGH (CONTROL) RECORD?               
         BZ    DOEQU30              YES IT IS                                   
         TM    SRTFLAG,SRTFEQUQ    DOUBLE EQU'S FOR ONE MSG #?                  
         BO    DOEQU10              YEP, SEE IF SPECIAL EQU ENTRY               
         OI    SRTFLAG,SRTFEQUQ     NO, SO TURN FLAG ON                         
         MVC   EQSYMB,SRTINFO+1                                                 
         B     GS20                                                             
*                                                                               
DOEQU10  CLI   SRTKNEQU,0          SPECIAL EQU ENTRY?                           
         BE    GSERR1               NO, ERROR                                   
*                                                                               
         LA    R3,TXTABLE          MAKE TABLE OF FULL-TEXT ELEMENTS             
DOEQU15  CLI   0(R3),0              IN TXTABLE                                  
         BE    DOEQU20                                                          
         ZIC   R1,1(R3)                                                         
         AR    R3,R1                                                            
         B     DOEQU15                                                          
*                                                                               
DOEQU20  MVI   0(R3),GMTXTELC      ELEMENT CODE                                 
         ZIC   R1,SRTINFO                                                       
         BCTR  R1,0                                                             
         EXMVC R1,GMTXTFXD(R3),SRTINFO+1                                        
         LA    R1,GMTXTFXD+1(R1)   R1=ELEMENT LENGTH                            
         STC   R1,(GMTXTELL-GMTXTD)(R3)                                         
         MVC   GMTXTLNO-GMTXTD(L'SRTKNEQU,R3),SRTKNEQU  REL. LINE #             
         B     GS20                                                             
*                                                                               
DOEQU30  XCEF  MSGREC,4004                                                      
         LA    R3,SRTINFO                                                       
         USING GMSGD,R3                                                         
         ZICM  R1,GMFLEN,(3)                                                    
         BCTR  R1,0                                                             
         EXMVC R1,MSGREC+4,SRTINFO                                              
         LA    R1,4+1(R1)                                                       
         STCM  R1,3,MSGREC                                                      
         PUT   TAPEOUT,MSGREC                                                   
         L     R1,TPOUTCNT         INCREMENT # PUT OUT TO TAPE                  
         LA    R1,1(R1)                                                         
         ST    R1,TPOUTCNT                                                      
         L     R1,BYSYSCNT         INCREMENT # FOR CURRENT SYSTEM               
         LA    R1,1(R1)                                                         
         ST    R1,BYSYSCNT                                                      
         LH    R1,HICTLCNT         INCREMENT # OF CONTROL RECORDS               
         LA    R1,1(R1)                                                         
         STH   R1,HICTLCNT                                                      
         ZICM  R1,GMFLEN,(3)        INCREMENT # OF BYTES                        
         A     R1,BYTESCNT                                                      
         ST    R1,BYTESCNT                                                      
         B     GS10                                                             
         DROP  R3                                                               
*                                                                               
*------------------- DOFIC: BUILD MESSAGE RECORD ---------------------*         
*                                                                               
DOFIC    TM    SRTFLAG,SRTFFILQ    WAS THERE A MSG FROM FILE ALREADY?           
         BO    GSERR5               YEP, ERROR!                                 
*                                                                               
         OI    SRTFLAG,SRTFDICQ    EVERYTHING OK, SO FAR                        
*                                                                               
         LA    R4,LNGLIST          BUILD MESSAGE FOR MSG ELEMENT                
DOFIC10  CLI   0(R4),0             1ST EXIT-DOFIC CONDITION IS                  
         BE    XDOFIC                                                           
         CLC   SRTKELNG,0(R4)       IF THAT LANGUAGE IS NOT WANTED              
         BE    DOFIC20             LANGUAGE WANTED, MOVE ON                     
         LA    R4,3(R4)                                                         
         B     DOFIC10                                                          
*                                                                               
DOFIC20  MVC   MSGLNG,0(R4)        KEEP LANGUAGE SYMBOL                         
         MVC   BINLANG,1(R4)       KEEP INVERTED LANG. CODE                     
         MVC   NUMLINE,2(R4)       KEEP # OF LINES TO MESSAGE                   
*                                                                               
         MVI   TMPFLAG,0           RESET ENTIRE BYTE OF FLAGS                   
         XC    ELEMENT,ELEMENT     USE ELEMENT TO BUILD MESSAGE                 
         LA    RE,ELEMENT                                                       
         LR    RF,RE               RF=POINTER TO POS TO APPEND MSG              
DOFIC30  CLI   SRTINFO,2           L(MESSAGE @ SRTINFO+1) >= 2 BECAUSE          
         BNH   DOFIC35              OF START & END DELIMITERS                   
         CLI   SRTINFO+1,COMMON    THE '?' DELIMITER USED?                      
         BNE   *+12                                                             
         OI    TMPFLAG,X'20'        QUESTIONABLE TRANSLATION                    
         MVI   SRTINFO+1,DELIM     REPLACE '?' WITH '>' DELIMITER               
*                                                                               
         ZIC   R1,SRTINFO          R1=L(MESSAGE)                                
         BCTR  R1,0                                                             
         EXMVC R1,0(RF),SRTINFO+1                                               
         LA    RF,1(R1,RF)         BUMP PNTR TO NXT POS TO APPND MSG            
         ST    RE,SAVERE                                                        
         ST    RF,SAVERF                                                        
DOFIC35  CLC   SRTKNLIN,NUMLINE    GET ALL THE LINES YET?                       
         BE    DOFIC50                                                          
         GOTO1 =V(SORTER),DMCB,=C'GET'                                          
         ICM   R2,15,4(R1)                                                      
         BZ    GSERR8              PREMATURE EOF                                
*                                                                               
         LA    R2,4(R2)            BUMP PASS IBM BYTES                          
*                                                                               
         NI    TMPFLAG,X'FF'-X'C0' CLEAR PERTINENT FLAGS                        
         CLC   SRTKELNG,MSGLNG     LANGUAGES MATCH?                             
         BNE   *+8                  NOPE                                        
         OI    TMPFLAG,X'80'        YEP, SET FLAG                               
         CLC   SRTKNLIN,NUMLINE    # OF LINES CONSISTENT?                       
         BH    *+8                  NOPE                                        
         OI    TMPFLAG,X'40'        YEP, SET FLAG                               
         TM    TMPFLAG,X'C0'       BOTH CONDITIONS SATISFIED?                   
         BNO   GSERR7               NOPE, ERROR                                 
         L     RE,SAVERE                                                        
         L     RF,SAVERF                                                        
         BCTR  RF,0                BUMP POINTER BACK ONE                        
         B     DOFIC30             REPEAT PROCESS                               
*                                                                               
DOFIC50  L     RE,SAVERE                                                        
         L     RF,SAVERF                                                        
         SR    RF,RE               RF=L(ENTIRE MESSAGE)                         
         OR    RF,RF                                                            
         BZ    GSERR9              LENGTH OF ZERO ERROR                         
*                                                                               
         LR    R1,RF               R1=MSG LENGTH                                
         XCEF  MSGREC,4004                                                      
         LA    R4,MSGREC+4                                                      
         USING GMSGD,R4                                                         
*                                                                               
** KEY OF MESSAGE RECORD                                                        
*                                                                               
         MVI   GMKREC,GMKRECQ      RECORD TYPE                                  
         MVC   GMKSYS,SYSNUM       SYSTEM NUMBER                                
         MVI   GMKTYP,GMKTGDIC     MESSAGE TYPE = DATA DICTIONARY               
         MVC   GMKMSG,SRTKMNUM     MESSAGE #                                    
         TM    GMKMSG,DD#GEN       X'4000' BIT ON?                              
         BZ    DOFIC55                                                          
         MVI   GMKSYS,15            YES, THEN SWITCH TO SYS#=15,                
         NI    GMKMSG,X'FF'-DD#GEN   AND TURN OFF X'4000' BIT                   
DOFIC55  MVC   GMKLANG,BINLANG     INVERTED LANGUAGE CODE                       
*                                                                               
         TM    TMPFLAG,X'20'       WAS TRANSLATION QUESTIONABLE?                
         BO    *+8                  YES, DON'T (CONT'D ON NEXT LINE)            
         OI    GMFELEM,GMTRNSQ      TURN ON TRUE TRANSLATION BIT                
*                                                                               
** SHORT MESSAGE ELEMENT                                                        
*                                                                               
         MVC   MSGNUM,SRTKMNUM     PASS MSG# AS PARAM TO MKSPFRM                
         BAS   RE,MKSPFRM          CONVERT MESSAGE TO SPECIAL FORMAT            
         BE    DOFIC60              NO ERROR, DO NEXT STEP                      
         BAS   RE,GSERR11          PRINT THE MESSAGE CONTAINING ERROR           
         LA    RE,GS20                                                          
         B     ERRPRT               AND PRINT ERROR MESSAGE                     
*                                                                               
DOFIC60  MVI   GMSGEL,GMSGELC      ELEMENT CODE                                 
         LR    RF,R1               MSG LENGTH, SAVE R1...JUST IN CASE           
         LA    R0,GMSGFXDL         R0=L(ELEMENT OVERHEAD)                       
         AR    R1,R0               R1=L(ELEMENT)                                
         CH    R1,=H'255'          CHECK L(ELEMENT)                             
         BH    GSERR2              DICT MSG TOO LONG ERROR                      
*                                                                               
         STCM  R1,1,GMSGELL        ELEMENT LENGTH                               
         SR    R1,R0               R1=L(SHORT MESSAGE)                          
         BCTR  R1,0                PREPARE FOR EXECUTED STATEMENT               
         EXMVC R1,GMSGTXT,ELEMENT                                               
*                                                                               
         ZIC   R1,GMSGELL          GET L(RECORD)                                
         LA    R0,GMFIRST                                                       
         AR    R1,R0                                                            
         LA    R1,1(R1)            ADD ONE FOR FOR X'00' AT THE END             
         STCM  R1,3,GMFLEN         RECORD LENGTH                                
*                                                                               
** EQUATE SYMBOL ELEMENT                                                        
*                                                                               
         BAS   RE,MKEQSYMB         BUILDS EQSYMB ELEMENT AND                    
         BE    *+6                  APPENDS ONTO RECORD                         
         DC    H'0'                                                             
*                                                                               
** FULL-TEXT ELEMENT                                                            
*                                                                               
DOFIC70  OC    TXTABLE,TXTABLE     ANY FULL-TEXT ELEMENTS?                      
         BZ    DOFIC80              NOPE!                                       
*                                                                               
         LA    R3,TXTABLE                                                       
DOFIC70A CLI   0(R3),0             REACHED EOTABLE YET?                         
         BE    DOFIC80                                                          
         GOTO1 =V(HELLO),DMCB,(C'P',=C'GENFIL'),(R4),(R3),0                     
         CLI   12(R1),0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
         ZIC   R1,1(R3)                                                         
         AR    R3,R1               BUMP TO NEXT ELEMENT IN TABLE                
         B     DOFIC70A                                                         
*                                                                               
** PUT OUT MESSAGE RECORD                                                       
*                                                                               
DOFIC80  SR    R1,R1                                                            
         ICM   R1,3,GMFLEN         RECORD LENGTH                                
         LA    R1,4(R1)            ADD 4 TO LENGTH FOR IBM RECORD               
         STCM  R1,3,MSGREC                                                      
         PUT   TAPEOUT,MSGREC                                                   
*                                                                               
         L     R1,TPOUTCNT         # OF RECORDS WRITTEN TO TAPEOUT              
         LA    R1,1(R1)                                                         
         ST    R1,TPOUTCNT                                                      
         L     R1,BYSYSCNT         # OF RECORDS FOR CURRENT SYSTEM              
         LA    R1,1(R1)                                                         
         ST    R1,BYSYSCNT                                                      
         LH    R1,NWENTCNT         # OF RECORDS WRITTEN TO TAPEOUT              
         LA    R1,1(R1)             WHICH CAME FROM DICTIONARY                  
         STH   R1,NWENTCNT                                                      
         ZICM  R1,GMFLEN,(3)       INCREMENT # OF BYTES                         
         A     R1,BYTESCNT                                                      
         ST    R1,BYTESCNT                                                      
*                                                                               
XDOFIC   B     GS20                                                             
         DROP  R4                                                               
*                                                                               
*--------------- DOFIL: CHANGE EXISTING MSG RECORD -------------------*         
*                                                                               
DOFIL    TM    SRTFLAG,SRTFDICQ    WAS THERE A MSG FROM DICT ALREADY?           
         BO    GSERR5               YEP, ERROR!                                 
         TM    SRTKMNUM,DDDISKQ    MSG # SHOULD BEGIN WITH X'80'                
         BO    *+6                                                              
         DC    H'0'                 INTERNAL ERROR                              
*                                                                               
** TRANSFER MESSAGE TO OUTPUT BUFFER                                            
*                                                                               
         OI    SRTFLAG,SRTFFILQ    EVERYTHING OK, SO FAR                        
         XCEF  MSGREC,4004         CLEAR MSGREC BUFFER                          
         LA    R4,SRTINFO          SRTINFO CONTAINS THE RECORD                  
         USING GMSGD,R4                                                         
         ZICM  R1,GMFLEN,(3)       R1=CURRENT L(RECORD)                         
         BCTR  R1,0                                                             
         EXMVC R1,MSGREC+4,SRTINFO                                              
*                                                                               
         LA    R4,MSGREC+4                                                      
         TM    GMKMSG,DD#DISK      MSGS FROM FILE SHOULD'NT HAVE X'80'          
         BO    GSERR3                                                           
         MVC   GMKMSG,SRTKMNUM     NOW IT DOES                                  
         TM    GMKMSG,DD#GEN       IS THE X'4000' BIT ON?                       
         BZ    DOFIL01                                                          
         MVI   GMKSYS,15            YES, THEN SWITCH TO SYS#=15,                
         NI    GMKMSG,X'FF'-DD#GEN   AND TURN OFF X'4000' BIT                   
DOFIL01  CLI   GMKSYS,0            GENERAL'S SYS# IS NOW 15                     
         BNE   *+8                                                              
         MVI   GMKSYS,15                                                        
         OI    GMFELEM,GMDISKQ+GMTRNSQ   MESSAGE RESIDES ON DISK, AND           
         CLI   GMKSYS,1                  IS TRUE TRANSLATION, UNLESS            
         BNE   *+8                       IT'S THE SERVICE SYSTEM, WHOSE         
         NI    GMFELEM,X'FF'-GMDISKQ     DICTIONARY IS ALWAYS IN CORE           
         SPACE 1                                                                
         MVI   GMKTYP,GMKTGDIC                                                  
         OI    GMFELEM,GMPRGQ      ASSUME EXISTENCE OF PROGRAM ELEM             
         GOTO1 =V(HELLO),DMCB,(C'G',=C'GENFIL'),('GMPRGELC',(R4)),0,0           
         CLI   DMCB+12,0           ANY ERRORS?                                  
         BE    DOFIL05              NOPE                                        
         CLI   DMCB+12,6           ELEMENT NOT FOUND                            
         BE    *+6                  YEP, VALID ERROR                            
         DC    H'0'                                                             
         NI    GMFELEM,X'FF'-GMPRGQ      PROGRAM ELEM NON-EXISTENT              
*                                                                               
DOFIL05  GOTO1 =V(HELLO),DMCB,(C'D',=C'GENFIL'),('GMTXTELC',(R4)),0,0           
*         GET RID OF EXTENDED TEXT ELEMENT                                      
*                                                                               
         GOTO1 =V(HELLO),DMCB,(C'G',=C'GENFIL'),('GMSGELC',(R4)),0,0            
         CLI   DMCB+12,0           ANY ERRORS?                                  
         BE    *+6                                                              
         DC    H'0'                 THERE SHOULDN'T BE                          
*                                                                               
         XC    ELEMENT,ELEMENT     WILL USE ELEMENT TO HOLD MSG TEXT            
         L     R6,12(R1)           R6-->ELEMENT                                 
         LA    R0,GMSGFXDL+1       R0=L(ELEMENT OVERHEAD)+1                     
         ZIC   R1,(GMSGELL-GMSGEL)(R6)  R1=L(ELEMENT)                           
         SR    R1,R0               R1=L(MESSAGE TEXT)-1                         
         EXMVC R1,ELEMENT,(GMSGTXT-GMSGEL)(R6)                                  
         LA    R1,1(R1)                                                         
         MVC   MSGNUM,GMKMSG       PASS MSG# AS PARAM TO MKSPFRM                
         BAS   RE,MKSPFRM          MAKE MSG TXT INTO SPECIAL FORM               
         MVC   SRTENTRY,ELEMENT                                                 
*                                                                               
         XC    ELEMENT,ELEMENT     NOW USE ELEMENT TO BUILD ELEMENT             
         MVI   ELEMENT+(GMSGEL-GMSGEL),GMSGELC                                  
         LA    R0,GMSGFXDL                                                      
         AR    R0,R1                                                            
         STC   R0,ELEMENT+(GMSGELL-GMSGEL)                                      
         BCTR  R1,0                                                             
         EXMVC R1,ELEMENT+(GMSGTXT-GMSGEL),SRTENTRY                             
*                                                                               
         GOTO1 =V(HELLO),DMCB,(C'D',=C'GENFIL'),('GMSGELC',(R4)),(R6),0         
         CLI   DMCB+12,0           DELETE THE EXISTING MSG ELEMENT              
         BE    *+6                                                              
         DC    H'0'                SHOULDN'T BE ANY ERRORS                      
*                                                                               
         GOTO1 =V(HELLO),DMCB,(C'P',=C'GENFIL'),(R4),ELEMENT,0                  
         CLI   DMCB+12,0           PUT THE NEWLY CREATED ELEMENT IN             
         BE    *+6                                                              
         DC    H'0'                SHOULDN'T BE ANY ERRORS                      
*                                                                               
DOFIL10  BAS   RE,MKEQSYMB         R4-->RECORD ENTERING MKEQSYMB                
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
** FULL-TEXT ELEMENT                                                            
*                                                                               
DOFIL20  OC    TXTABLE,TXTABLE     ANY FULL-TEXT ELEMENTS?                      
         BZ    DOFIL30              NOPE!                                       
*                                                                               
         LA    R3,TXTABLE                                                       
DOFIL20A CLI   0(R3),0             REACHED EOTABLE YET?                         
         BE    DOFIL30                                                          
         GOTO1 =V(HELLO),DMCB,(C'P',=C'GENFIL'),(R4),(R3),0                     
         CLI   12(R1),0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
         ZIC   R0,1(R3)                                                         
         AR    R3,R0               BUMP TO NEXT ELEMENT IN TABLE                
         B     DOFIL20A                                                         
*                                                                               
DOFIL30  ZICM  RF,13(R1),(7)       RF=SUPPOSEDLY NEW L(RECORD)                  
         ZICM  RE,GMFLEN,(3)       RE=L(RECORD)                                 
         CR    RE,RF               JUST CHECKING TO SEE IF THE                  
         BE    *+6                  LENGTHS AGREE                               
         DC    H'0'                                                             
*                                                                               
         LA    RE,4(RE)                                                         
         STCM  RE,3,MSGREC         L(RECORD, IBM STYLE)                         
         PUT   TAPEOUT,MSGREC                                                   
*                                                                               
         L     R1,TPOUTCNT         INCREMENT COUNTER                            
         LA    R1,1(R1)                                                         
         ST    R1,TPOUTCNT                                                      
         L     R1,BYSYSCNT                                                      
         LA    R1,1(R1)                                                         
         ST    R1,BYSYSCNT                                                      
         L     R1,GENDCNT          # OF RECORDS WRITTEN TO TAPEOUT              
         LA    R1,1(R1)             WHICH CAME FROM GENDIR/GENFIL               
         ST    R1,GENDCNT                                                       
         ZICM  R1,GMFLEN,(3)       INCREMENT # OF BYTES                         
         A     R1,BYTESCNT                                                      
         ST    R1,BYTESCNT                                                      
*                                                                               
         B     GS20                                                             
         DROP  R4                                                               
*                                                                               
*-------------------- DOFFF: DO CLERICAL WORK ------------------------*         
*                                                                               
DOFFF    DS    0H                                                               
         XC    TXTABLE,TXTABLE     CLEAR OUT ANY EXTENDED ELEM TEXT             
         OC    SRTFLAG,SRTFLAG     WERE ANY FLAGS SET?                          
         BZ    GS10                 NO, DO NEXT BUNCH                           
*                                                                               
         TM    SRTFLAG,SRTFEQUQ     YES, WAS EQUATE FLAG SET?                   
         BZ    GSERR4                NO, IT'S AN ERROR THEN                     
*                                                                               
DOFFF10  TM    SRTFLAG,SRTFDICQ+SRTFFILQ                                        
         BO    GSERR5              MULTIPLE SOURCE OF MSG ERROR                 
         BZ    GSERR6              MISSING MESSAGE ERROR                        
*                                                                               
         B     GS10                                                             
*                                                                               
*------------------------ GETSORT ERRORS -----------------------------*         
*                                                                               
GSERR1   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(28),=C'HAS DUPLICATE EQU STATEMENTS'                      
         MVI   LOBJECT,27                                                       
         LA    RE,GS20                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR2   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(11),=C'IS TOO LONG'                                       
         MVI   LOBJECT,10                                                       
         LA    RE,GS20                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR3   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(20),=C'ON FILE HAS X"80" ON'                              
         MVI   LOBJECT,19                                                       
         NI    SRTKMNUM,X'FF'-X'80'                                             
         LA    RE,GS20                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR4   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(20),=C'HAS NO EQU STATEMENT'                              
         MVI   LOBJECT,19                                                       
         LA    RE,DOFFF10                                                       
         B     GSERRPT                                                          
*                                                                               
GSERR5   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(29),=C'CAME FROM DICTIONARY AND FILE'                     
         MVI   LOBJECT,28                                                       
         LA    RE,GS20                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR6   XCEF  MSGREC,4004                                                      
         LA    R4,MSGREC+4         BUILD DUMMY RECORD FOR                       
         USING GMSGD,R4             THOSE EQUATES W/.O MESSAGES                 
         MVI   GMKREC,GMKRECQ      RECORD TYPE                                  
         MVC   GMKSYS,SYSNUM                                                    
         MVI   GMKTYP,GMKTGDIC     MESSAGE TYPE = DATA DICTIONARY               
         MVC   GMKMSG,SRTKMNUM     MESSAGE #                                    
         TM    GMKMSG,DD#GEN       X'4000' BIT ON?                              
         BZ    *+12                                                             
         MVI   GMKSYS,15            IF YES, THEN MAKE IT SYS# 15                
         NI    GMKMSG,X'FF'-DD#GEN                                              
         MVI   GMKLANG,X'FF'       MESSAGE LANGUAGE                             
         NI    GMFELEM,X'FF'-GMTRNSQ                                            
         MVI   GMSGEL,GMSGELC      SHORT MESSAGE ELEMENT                        
         MVI   GMSGELL,GMSGFXDL+25                                              
         MVI   GMSGSEV,C' '                                                     
         MVC   GMSGTXT(25),DUMMSGDC                                             
         MVI   GMFLEN+1,GMFIRST+GMSGFXDL+25                                     
         BAS   RE,MKEQSYMB         APPEND EQUATE-SYMBOL ELEMENT                 
         BE    *+6                                                              
         DC    H'0'                                                             
         SR    R1,R1               PUT RECORD OUT                               
         ICM   R1,3,GMFLEN                                                      
         LA    R1,4(R1)                                                         
         STCM  R1,3,MSGREC                                                      
         PUT   TAPEOUT,MSGREC                                                   
*                                                                               
         L     R1,TPOUTCNT         # OF RECORDS WRITTEN TO TAPEOUT              
         LA    R1,1(R1)                                                         
         ST    R1,TPOUTCNT                                                      
         L     R1,BYSYSCNT         # OF RECORDS FOR CURRENT SYSTEM              
         LA    R1,1(R1)                                                         
         ST    R1,BYSYSCNT                                                      
         LH    R1,DUMSGCNT         # OF DUMB RECORDS CREATED                    
         LA    R1,1(R1)                                                         
         STH   R1,DUMSGCNT                                                      
         ZICM  R1,GMFLEN,(3)       INCREMENT # OF BYTES                         
         A     R1,BYTESCNT                                                      
         ST    R1,BYTESCNT                                                      
*                                                                               
         MVC   SUBJECT,=C'EQUATE#'                                              
         MVC   OBJECT(36),=C'HAS NO MESSAGE, DUMB MESSAGE CREATED'              
         MVI   LOBJECT,35                                                       
         LA    RE,GS10                                                          
         B     GSERRPT                                                          
         DROP  R4                                                               
*                                                                               
GSERR7   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(17),=C'LANGUAGE MISMATCH'                                 
         MVI   LOBJECT,16                                                       
         LA    RE,GS10                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR8   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(24),=C'ENDED WITH PREMATURE EOF'                          
         MVI   LOBJECT,23                                                       
         LA    RE,GS10                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR9   MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(18),=C'HAS LENGTH OF ZERO'                                
         MVI   LOBJECT,17                                                       
         LA    RE,GS10                                                          
         B     GSERRPT                                                          
*                                                                               
GSERR10  MVC   SUBJECT,=C'MESSAGE'                                              
         MVC   OBJECT(46),=C'HAS CONFLICTING EQU SYMBOLS -- OLD SYMBOL +        
               KEPT'                                                            
         MVI   LOBJECT,45                                                       
         B     GSERRPT                                                          
*                                                                               
GSERR11  MVC   SUBJECT,=C'MESSAGE'                                              
         LA    RF,50                L'OBJECT=50                                 
         CR    R1,RF               IS L(MESSAGE) > L'OBJECT?                    
         BNH   *+10                                                             
         LR    R1,RF                YES, SO JUST MOVE MAX AMOUNT                
         B     *+6                                                              
         LR    RF,R1                NOPE                                        
         BCTR  RF,0                                                             
         EXMVC RF,OBJECT,ELEMENT                                                
         STC   RF,LOBJECT                                                       
         B     GSERRPT                                                          
*                                                                               
GSERRPT  ST    RE,SAVERE                                                        
         LA    RE,P                                                             
         MVC   0(L'SYSNAME,RE),SYSNAME                                          
         LA    RE,L'SYSNAME+3(RE)                                               
         MVC   0(L'SUBJECT,RE),SUBJECT                                          
         LA    RE,L'SUBJECT+1(RE)                                               
*                                                                               
GSPT50   ZICM  RF,SRTKMNUM,(3)                                                  
         EDIT  (RF),(5,(RE)),FILL=0                                             
         LA    RE,6(RE)                                                         
         ZIC   RF,LOBJECT                                                       
         EXMVC RF,0(RE),OBJECT                                                  
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         XC    SUBJECT,SUBJECT                                                  
         XC    OBJECT,OBJECT                                                    
         MVI   LOBJECT,0                                                        
         LH    R1,GSERRCNT                                                      
         LA    R1,1(R1)                                                         
         STH   R1,GSERRCNT                                                      
         OI    SWITCH1,SWIERR1 AT LEAST 1 ERROR ENCOUNTERED                     
         L     RE,SAVERE                                                        
         BR    RE                                                               
         DROP  R2                                                               
*                                                                               
*--------------------- EQUATE SYMBOL ELEMENT -------------------------*         
*                                                                               
MKEQSYMB DS    0H                                                               
         ST    RE,SAVERE                                                        
         XC    ELEMENT,ELEMENT                                                  
         LA    R6,ELEMENT                                                       
         USING GMQSYD,R6                                                        
         MVI   GMQSYEL,GMQSYELC    ELEMENT CODE                                 
         MVI   GMQSYELL,GMQSYLNQ   ELEMENT LENGTH                               
         MVC   GMQSYSYM,EQSYMB     EQUATE SYMBOL                                
         DROP  R6                                                               
         GOTO1 =V(HELLO),DMCB,(C'P',=C'GENFIL'),(R4),(R6),0                     
         CLI   12(R1),0            SET CC FOR CALLING ROUTINE                   
*                                                                               
XMKSUB   L     RE,SAVERE           RESTORE RE                                   
         BR    RE                                                               
*                                                                               
*------------------------ SPECIAL FORMAT ----------------------------*          
*                                                                               
MKSPFRM  NTR1                                                                   
*         AT ENTRY,                                                             
*           ELEMENT CONTAINS THE MESSAGE,                                       
*           R1 = L(MESSAGE) IN ELEMENT                                          
*           MSGNUM = MESSAGE # OF CURRENT MESSAGE                               
*         AT EXIT,                                                              
*           ELEMENT CONTAINS THE MESSAGE IN SPECIAL FORMAT,                     
*           R1 = L(SPECIALLY-FORMATTED MESSAGE) IN ELEMENT                      
*                                                                               
         CLI   ELEMENT,C' '        IS MSG IN SPECIAL FORM ALREADY?              
         BL    XMKSPFRM             YES, LEAVE ROUTINE                          
*                                                                               
         TM    MSGNUM,DD#DISK      WAS MSG FROM GENFIL?                         
         BO    MKSP100              YES IT WAS                                  
*                                                                               
** MESSAGE IS FROM PAN DICTIONARY                                               
*                                                                               
*** COUNT # OF LITERALS                                                         
*                                                                               
MKSP05   SR    RE,RE               RE COUNTS # OF LITERALS                      
         LR    R0,R1               RF=L(MESSAGE)                                
         LR    RF,R1               RF=L(MESSAGE)                                
         LA    R2,ELEMENT                                                       
MKSP10   CLC   0(2,R2),SPDELIM     IF  '>>',                                    
         BE    MKSP20                                                           
         CLC   0(2,R2),SPCOLON      '>:',                                       
         BE    MKSP20                                                           
         CLC   0(2,R2),SPCMMN       '>?',                                       
         BE    MKSP20                                                           
         CLC   0(2,R2),SPCMMN2      OR '><' IS ENCOUNTERED, SKIP                
         BE    MKSP20                OVER IT                                    
*                                                                               
         CLI   0(R2),SPLITTER      IF SPLITTER (:),                             
         BE    MKSP30               MOVE TO NEXT CHARACTER                      
*                                                                               
         CLI   0(R2),DELIM         IF '>' OR                                    
         BE    MKSP15                                                           
         CLI   0(R2),COMMON2        '<' DELIMITER, THEN                         
         BNE   MKSP30                                                           
MKSP15   LA    RE,1(RE)             INCREASE LITERAL COUNT                      
         B     MKSP30                                                           
*                                                                               
MKSP20   LA    R2,1(R2)            SKIP OVER SPECIAL SYMBOLS                    
         BCTR  RF,0                                                             
MKSP30   LA    R2,1(R2)                                                         
         BCT   RF,MKSP10                                                        
         BCTR  RE,0                #(LITERALS) = #(DELIMITERS) - 1              
*                                                                               
*** MAKE SPECIAL FORMAT                                                         
*                                                                               
         XC    SRTENTRY,SRTENTRY   INITIALIZATION OF POINTERS, ETC.             
         XC    PVLITLN,PVLITLN     PREV L(LITERAL) = 0 AT START                 
         SR    R1,R1               R1 KEEPS L(LITERAL)                          
         LA    R2,ELEMENT+1        R2-->START OF MSG IN NORMAL FORMAT           
         LA    R3,SRTENTRY+1       R3-->START OF L(LITERALS) ENTRIES            
         LA    R4,0(R3,RE)         R4-->START OF LITERALS ENTRIES               
         LA    R5,1                R5=L(ENTIRE MESSAGE)                         
         AR    R5,RE               R5=#(LITERALS)+1, SO FAR                     
         LR    RF,R0               RF=L(MESSAGE IN NORMAL FORMAT)               
         BCTR  RF,0                STARTING @ ELEMENT+1                         
*                                                                               
         STC   RE,SRTENTRY         #(LITERALS) GOES IN 1ST BYTE                 
MKSP50   CLC   0(2,R2),SPDELIM     '>>' BECOMES '>'                             
         BNE   MKSP50A                                                          
         MVI   0(R4),DELIM                                                      
         B     MKSP80A                                                          
MKSP50A  CLC   0(2,R2),SPCOLON     '>:' BECOMES ':'                             
         BNE   MKSP50B                                                          
         MVI   0(R4),SPLITTER                                                   
         B     MKSP80A                                                          
MKSP50B  CLC   0(2,R2),SPCMMN      '>?' BECOMES '?'                             
         BNE   MKSP50C                                                          
         MVI   0(R4),COMMON                                                     
         B     MKSP80A                                                          
MKSP50C  CLC   0(2,R2),SPCMMN2     '><' BECOMES '<'                             
         BNE   MKSP60A                                                          
         MVI   0(R4),COMMON2                                                    
         B     MKSP80A                                                          
*                                                                               
MKSP60A  CLI   0(R2),SPLITTER                                                   
         BNE   MKSP60B                                                          
         OI    SWITCH1,SWISPLT     TURN ON SPLITTER FLAG                        
         MVI   0(R4),SPLITTER                                                   
         B     MKSP80B             BUMP POINTERS                                
*                                                                               
MKSP60B  CLI   0(R2),DELIM         DELIMITER ENCOUNTERED                        
         BE    MKSP70                                                           
         CLI   0(R2),COMMON2       DELIMITER ENCOUNTERED                        
         BE    MKSP70                                                           
*                                                                               
         MVC   0(1,R4),0(R2)       MOVE IN THE NON-SPECIAL CHARACTER            
         B     MKSP80B              AND BUMP POINTERS                           
*                                                                               
MKSP70   MVI   ERROR,14            ASSUME BLANK ENTRY ERROR                     
         OR    R1,R1                                                            
         BZ    CCNEQUAL            STOP PROCESSING MESSAGE IF ERROR             
         TM    SWITCH1,SWISPLT     SPLITTER PRESENT IN LITERAL?                 
         BZ    MKSP70A                                                          
         BAS   RE,DOSPLIT           YES, PROCESS SPLITTER SITUATION             
         BNE   CCNEQUAL            IF WE CAME BACK OK,                          
         BCTR  R1,0                 DECREMENT L(LITERAL) {SPLTTR GONE},         
         BCTR  R4,0                 BUMP DESTINATION POINTER BACK ONE,          
         B     *+8                  AND SKIP STC INSTRUCTION                    
MKSP70A  STC   R1,0(R3)            STORE L(LITERAL)                             
         CLC   PVLITLN,0(R3)       COMPARE AGAINST PREV LENGTH                  
         BL    MKSP70B              NEW LENGTH IS HIGHER, OK                    
         MVI   ERROR,17             LENGTH-NOT-IN-ORDER ERROR                   
         B     CCNEQUAL                                                         
MKSP70B  MVC   PVLITLN,0(R3)       NEW LEN BECOMES PREV LEN                     
         AR    R5,R1               UPDATE L(MESSAGE)                            
         LA    R3,1(R3)            BUMP L(LITERAL)-ENTRY POINTER                
         SR    R1,R1               RESET L(LITERAL)                             
         B     MKSP80C             BUMP POINTERS AND COUNTERS                   
*                                                                               
MKSP80A  LA    R2,1(R2)            BUMP AN EXTRA TIME FOR                       
         BCTR  RF,0                 SPECIAL CHARACTERS                          
MKSP80B  LA    R4,1(R4)            BUMP DESTINATION POINTER                     
         LA    R1,1(R1)            INCREMENT L(LITERAL)                         
MKSP80C  LA    R2,1(R2)            BUMP SOURCE POINTER                          
         BCT   RF,MKSP50           DECREMENT COUNTER & REPEAT PROCESS           
*                                                                               
         MVC   ELEMENT,SRTENTRY    CALLING ROUTINE WORKS WITH                   
         LR    R1,R5                R1 AND ELEMENT                              
         B     XMKSPFRM            EXIT MAKE SPECIAL FORMAT ROUTINE             
*                                                                               
** MESSAGE IS FROM GENDIR/GENFIL                                                
*                                                                               
MKSP100  XC    SRTENTRY,SRTENTRY                                                
         MVI   SRTENTRY,1          IF TEXT OF MESSAGE RECORD IS NOT IN          
         STC   R1,SRTENTRY+1                                                    
         BCTR  R1,0                 SPECIAL FORMAT, THEN THERE IS ONLY          
         EXMVC R1,SRTENTRY+2,ELEMENT                                            
         LA    R1,3(R1)             ONE LITERAL                                 
         MVC   ELEMENT,SRTENTRY                                                 
*                                                                               
XMKSPFRM CR    R1,R1               RETURN WITH CC=0                             
         XIT1  REGS=(R1)                                                        
*                                                                               
*------------------------ HANDLE SPLITTER ----------------------------*         
*                                                                               
DOSPLIT  NTR1                                                                   
*         AT ENTRY,                                                             
*           R1 = L(LITERAL), INCLUDING SPLITTER                                 
*           R3-->LOCATION TO STORE L(LITERAL)                                   
*           R4-->NEXT LOCATION TO PUT NEXT TEXT                                 
*                                                                               
         NI    SWITCH1,X'FF'-SWISPLT   RESET FLAG FOR NEXT LITERAL              
         MVI   ERROR,16            ASSUME SPLITTER ERROR                        
         LA    RF,1                SPLITTER MUST BE 1/2WAY IN MESSAGE,          
         NR    RF,R1                TEST PARITY OF L(LITERAL)                   
         BNZ   *+12                IF NOT EVEN, THEN CONTINUE,                  
         IC    RF,ERROR             ELSE, MAKE SURE RF <> 0 AND                 
         B     CCNEQUAL             EXIT W/. ERROR                              
*                                                                               
         BCTR  R1,0                MAKE SPECIAL LENGTH                          
         LR    RF,R1                                                            
         LA    R0,X'80'                                                         
         OR    R1,R0               R1=SPECIAL LENGTH                            
*                                                                               
         LR    RE,R4                                                            
         BCTR  RE,0                RE-->LAST CHAR OF LITERAL                    
         SRL   RF,1                RF = {L(LITERAL)-1}/2                        
         SR    RE,RF               MOVE BACK HALFWAY IN LITERAL                 
         CLI   0(RE),SPLITTER      IS SPLITTER THERE?                           
         BNE   CCNEQUAL             NO, EXIT W/. ERROR                          
         EXMVC RF,0(RE),1(RE)      SHIFT TEXT TO LEFT BY 1 (OVRWRT              
         STC   R1,0(R3)             SPLITTER), AND STORE SPECIAL LENGTH         
*                                                                               
XDOSPLT  B     CCEQUAL             EXIT WITH NO ERRORS                          
*                                                                               
*-------------------------- EXIT GETSORT -----------------------------*         
*                                                                               
XGETSORT GOTO1 =V(PRINTER)         THIS IS FOR THE LAST SYSTEM                  
         MVC   P(39),=C'PROCESSING COMPLETED FOR         SYSTEM'                
         MVC   P+25(L'SYSNAME),SYSNAME                                          
         GOTO1 =V(PRINTER)                                                      
         SPACE 1                                                                
         MVC   P(33),=C'# OF RECORDS FOR         SYSTEM ='                      
         MVC   P+17(L'SYSNAME),SYSNAME                                          
         EDIT  BYSYSCNT,(6,P+35),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
         ZAP   LINE,=P'99'                                                      
         SPACE 1                                                                
         CLC   SVSYS,=C'ALL'             ADJUST THE SYSTEM NAME                 
         BNE   *+16                       IN THE TITLE TO REFLECT               
         MVC   TITLE(L'SYSNAME),SPACES    THE ENTIRE JOB                        
         MVC   TITLE(L'SVSYS),SVSYS                                             
         SPACE 1                                                                
         MVC   P(22),=C'# ERRORS ENCOUNTERED ='                                 
         EDIT  GSERRCNT,(6,P+24),COMMAS=YES,ZERO=NOBLANK,ALIGN=LEFT             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(32),=C'# OF RECORDS WRITTEN FROM DICT ='                       
         EDIT  NWENTCNT,(6,P+34),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(32),=C'# OF RECORDS WRITTEN FROM FILE ='                       
         EDIT  GENDCNT,(6,P+34),COMMAS=YES,ZERO=NOBLANK                         
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(32),=C'# OF DUMB RECORDS CREATED      ='                       
         EDIT  DUMSGCNT,(6,P+34),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(32),=C'# OF HIGH-MSG# RECORDS         ='                       
         EDIT  HICTLCNT,(6,P+34),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(22),=C'# OF RECORDS WRITTEN ='                                 
         EDIT  TPOUTCNT,(6,P+24),COMMAS=YES,ZERO=NOBLANK                        
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         MVC   P(22),=C'# OF TOTAL BYTES     ='                                 
         EDIT  BYTESCNT,(10,P+24),COMMAS=YES,ZERO=NOBLANK                       
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BAS   RE,CHKERR                                                        
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*==================== END OF PAN-BOOK PROCESSING =====================*         
EOPPROC  NTR1                                                                   
*                                                                               
         GOTO1 =V(PANIC),DMCB,=C'CLOSE',=C'PAN',PANNAME,LINEBUFF                
*                                                                               
         GOTO1 =V(PRINTER)                                                      
         MVC   P(36),=C'# OF ERRORS ENCOUNTERED IN         ='                   
         MVC   P+27(L'PANNAME),PANNAME                                          
         EDIT  PLERRCNT,(6,P+38),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         XC    TEMPCNT,TEMPCNT                                                  
         CLC   PANNAME,PANDDEQU    IS CURRENT BOOK THE EQUATES ONE?             
         BNE   EOP05                                                            
         MVC   TEMPCNT+2(2),PRLINCNT                                            
*                                                                               
         MVC   P(22),=C'# OF EQUNAME ENTRIES ='                                 
         EDIT  EQENTCNT,(6,P+24),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK             
         GOTO1 =V(PRINTER)                                                      
         MVC   P(27),=C'# OF DD#DISKG ENCOUNTERED ='                            
         EDIT  DISKGCNT,(6,P+29),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK             
         GOTO1 =V(PRINTER)                                                      
         MVC   P(27),=C'# OF DD#TABLE ENCOUNTERED ='                            
         EDIT  TABLECNT,(6,P+29),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK             
         GOTO1 =V(PRINTER)                                                      
         MVC   P(34),=C'# OF DD#DISK/GE#DISK ENCOUNTERED ='                     
         EDIT  DISKCNT,(6,P+36),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK              
         GOTO1 =V(PRINTER)                                                      
         MVC   P(32),=C'# OF DD#GEN/GE#GEN ENCOUNTERED ='                       
         EDIT  GENCNT,(6,P+34),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK               
         GOTO1 =V(PRINTER)                                                      
         MVC   P(23),=C'# OF STRAIGHT ENTRIES ='                                
         EDIT  NDISKCNT,(6,P+25),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK             
         GOTO1 =V(PRINTER)                                                      
         B     EOP10                                                            
EOP05    CLC   PANNAME,PANDDNEW    IS CURRENT BOOK THE DDNEW ONE?               
         BE    *+6                                                              
         DC    H'0'                IT HAS TO BE ONE OR THE OTHER                
         MVC   TEMPCNT+2(2),NWENTCNT                                            
*                                                                               
EOP10    MVC   P(22),=C'# OF LINES PROCESSED ='                                 
         EDIT  TEMPCNT,(6,P+24),COMMAS=YES,ALIGN=LEFT,ZERO=NOBLANK              
         GOTO1 =V(PRINTER)                                                      
*                                                                               
XEOP     BAS   RE,CHKERR                                                        
         ZAP   LINE,=P'99'                                                      
         B     EXIT                                                             
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*================ READ LINE FROM PAN BOOK INTO BUFFER ================*         
*                                                                               
GPANIC   NTR1                                                                   
         GOTO1 =V(PANIC),DMCB,(X'80',=C'READ'),=C'PAN',PANNAME,LINEBUFF         
         TM    DMCB+8,X'40'        DISK ERROR?                                  
         BZ    *+6                                                              
         DC    H'00'                                                            
         TM    DMCB+8,X'10'        PAN BOOK IN LIBRARY?                         
         BNZ   GPNO                                                             
         B     GPYES                                                            
*                                                                               
GPNO     MVI   ERROR,0             PAN BOOK NOT FOUND                           
         MVC   P+17(L'PANNAME),PANNAME                                          
         GOTO1 =V(PRINTER)                                                      
         BAS   RE,ERRPRT                                                        
         B     CCNEQUAL                                                         
*                                                                               
GPYES    MVC   EOFFLAG,DMCB+8      PAN BOOK FOUND, SAVE EOF FLAG                
         B     CCEQUAL                                                          
***********************************************************************         
         SPACE 2                                                                
***********************************************************************         
*======================== PRINT ERROR MESSAGES =======================*         
ERRPRT   ST    RE,SAVERE                                                        
         LA    RE,ERRTAB                                                        
         SR    RF,RF                                                            
         ICM   RF,1,ERROR                                                       
         MH    RF,=H'40'                                                        
         AR    RE,RF                                                            
         MVC   P,SPACES                                                         
         MVC   P+7(10),=C'*** ERROR '                                           
         MVC   P+17(L'ERRMSG0),0(RE)                                            
         GOTO1 =V(PRINTER)                                                      
         MVI   ERROR,0             RESET ERROR CODE                             
         OI    SWITCH1,SWIERR1     AT LEAST 1 ERROR ENCOUNTERED                 
         L     RE,SAVERE                                                        
         BR    RE                                                               
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*======================== PRINT TWO BLANK LINES ======================*         
P2BLINE  ST    RE,SAVERE                                                        
         GOTO1 =V(PRINTER)                                                      
         GOTO1 =V(PRINTER)                                                      
         L     RE,SAVERE                                                        
         BR    RE                                                               
***********************************************************************         
         EJECT                                                                  
DUMPLIST DS    0F                                                               
         DC    A(DDUPGRD),V(DUMMY)                                              
         ORG   *-4                                                              
         DC    X'80'                                                            
         ORG                                                                    
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
*============================= I/O CARDS =============================*         
*                                                                               
*------------------ OUTPUT FILE DATA CONTROL BLOCK -------------------*         
*&&UK                                                                           
TAPEOUT  DCB   DDNAME=TAPEOUT,DSORG=PS,RECFM=VB,MACRF=(PM)                      
*&&                                                                             
*&&US                                                                           
TAPEOUT  DCB   DDNAME=TAPEOUT,DSORG=PS,RECFM=VB,MACRF=(PM),            +        
               LRECL=4004,BUFNO=2,BLKSIZE=32760                                 
*&&                                                                             
***********************************************************************         
         SPACE 3                                                                
***********************************************************************         
*============================= JCL CARDS =============================*         
*         CARDTBL DEFINES JOB CONTROL INPUT PARAMETER CARDS                     
*         AL1    LENGTH OF CARD NAME                                            
*         AL1    ACTION ROUTINE NUMBER                                          
*         AL1    ERROR CODE                                                     
*         XL1    ACTION FLAGS                                                   
*         CL11   CARD NAME                                                      
*                                                                               
CARDTBL  DS    0CL15                                                            
         DC    AL1(07,01,11),X'00',CL11'SYSTEM='                                
         DC    AL1(05,02,12),X'00',CL11'LANG='                                  
CARDTBLX DC    AL1(00)                                                          
CLENGTH  EQU   0                                                                
CROUTINE EQU   1                                                                
CERRCODE EQU   2                                                                
CFLAG    EQU   3                                                                
CSTRING  EQU   4                                                                
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*==================== PAN EQUATE/DICTIONARY PAIRS ====================*         
*&&UK                                                                           
PANTABLE DC    C'          ',C'          ',C'   '            X'00'              
PANTABLF DC    C'SRDDEQUS  ',C'SRDDNEW   ',C'SR '    SERVICE X'01'              
         DC    C'          ',C'          ',C'   '            X'02'              
         DC    C'          ',C'          ',C'   '            X'03'              
         DC    C'MEDDEQUS  ',C'MEDDNEW   ',C'ME '    MEDIA   X'04'              
         DC    C'          ',C'          ',C'   '    MPL     X'05'              
*                                                    ABS     X'05'              
         DC    C'ACDDEQUS  ',C'ACDDICT   ',C'AC '    ACCOUNT X'06'              
         DC    C'          ',C'          ',C'   '    FEE     X'07'              
         DC    C'          ',C'          ',C'   '            X'08'              
         DC    C'MBDDEQUS  ',C'MBDDNEW   ',C'MB '    MBASE   X'09'              
         DC    C'CTDDEQUS  ',C'CTDDNEW   ',C'CT '    CONTROL X'0A'              
*                                                    SECURE  X'0A'              
         DC    C'GADDEQUS  ',C'GADDNEW   ',C'GA '    GAMES   X'0B'              
         DC    C'          ',C'          ',C'   '    CPP     X'0C'              
         DC    C'          ',C'          ',C'   '            X'0D'              
         DC    C'PEDDEQUS  ',C'PEDDNEW   ',C'PE '    PERSON  X'0E'              
         DC    C'GEDDEQUS  ',C'GEDDNEW   ',C'GE '    GENERAL X'0F'              
*&&                                                                             
         SPACE 2                                                                
*&&US                                                                           
PANTABLE DC    C'          ',C'          ',C'   '            X'00'              
PANTABLF DC    C'SRDDEQUS  ',C'SRDDNEW   ',C'SR '    SERVICE X'01'              
         DC    C'SPDDEQUS  ',C'DDSPDICT  ',C'SP '    SPOT    X'02'              
         DC    C'          ',C'          ',C'   '    NETWORK X'03'              
         DC    C'PPDDEQUS  ',C'DDPPDICT  ',C'PP '    PRINT   X'04'              
         DC    C'          ',C'          ',C'   '    MPL     X'05'              
         DC    C'ACDDEQUS  ',C'ACDDICT   ',C'AC '    ACCOUNT X'06'              
         DC    C'          ',C'          ',C'   '    TALENT  X'07'              
         DC    C'          ',C'          ',C'   '    REP     X'08'              
         DC    C'MBDDEQUS  ',C'MBDDNEW   ',C'MB '    MBASE   X'09'              
         DC    C'CTDDEQUS  ',C'CTDDNEW   ',C'CT '    CONTROL X'0A'              
*                                                    SECURE  X'0A'              
         DC    C'          ',C'          ',C'   '    GAMES   X'0B'              
         DC    C'          ',C'          ',C'   '    CPP     X'0C'              
         DC    C'          ',C'          ',C'   '            X'0D'              
         DC    C'          ',C'          ',C'   '    PERSON  X'0E'              
         DC    C'GEDDEQUS  ',C'GEDDNEW   ',C'GE '    GENERAL X'0F'              
*&&                                                                             
         SPACE 2                                                                
PANTABLX EQU   *                                                                
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*================ FACPAK'S SYSTEMS -- DSECT AND TABLE ================*         
*                                                                               
*------------------------------- DSECT -------------------------------*         
       ++INCLUDE FASYSLSTD                                                      
*                                                                               
*------------------------------- TABLE -------------------------------*         
DDUPGRD  CSECT                                                                  
       ++INCLUDE FASYSLST                                                       
* EXTENDED FACPAK SYSTEM TABLE ENTRIES                                          
         ORG   SYSLSTX                                                          
         DC    X'0F0F',C'GENERALGEN',C'  ',X'0000'                              
EXSYSLX  DC    X'00'                                                            
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=============== FACPAK'S LANGUAGES -- DSECT AND TABLE ===============*         
*                                                                               
*------------------------------- DSECT -------------------------------*         
       ++INCLUDE FALANG                                                         
*                                                                               
*------------------------------- TABLE -------------------------------*         
DDUPGRD  CSECT                                                                  
       ++INCLUDE FALANGTAB                                                      
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*====================== MISCELLANEOUS CONSTANTS ======================*         
         SPACE 1                                                                
*--------------------------- SORTER'S CARDS --------------------------*         
SORTCARD DC    CL80'SORT FIELDS=(5,7,A),FORMAT=BI,WORK=1'                       
RECCARD  DC    CL80'RECORD TYPE=V,LENGTH=4004'                                  
         SPACE 1                                                                
*--------------------------- GENDIR'S CARDS --------------------------*         
UTL      DC    F'0',X'0A'                                                       
SSB      DC    F'0'                                                             
*                                                                               
FLIST    DS    0H                                                               
         DC    CL8' GENDIR '                                                    
         DC    CL8' GENFIL '                                                    
         DC    CL8'X       '                                                    
         SPACE 1                                                                
*------------------------------ ADDRESSES ----------------------------*         
AMSGREC  DC    A(MSGREC)                                                        
APANTABX DC    A(PANTABLX)                                                      
         SPACE 1                                                                
*------------------------ LANGUAGE SYMBOL TABLE ----------------------*         
SYMBLTAB DS    0H                  <LANG SYMB>,<LANG CODE>                      
         DC    C'E',X'00'          ENGLISH - UK OR USA                          
         DC    C'U',X'00'          ENGLISH - USA                                
         DC    C'G',X'03'          GERMAN                                       
         DC    C'F',X'04'          FRENCH                                       
         DC    C'C',X'04'          FRENCH - CANADA                              
         DC    C'S',X'05'          SPANISH                                      
         DC    C'I',X'06'          ITALIAN                                      
         DC    C'D',X'07'          DUTCH                                        
SYMBENG  EQU   C'E'                ENGLISH(UK OR USA)                           
SYMBUSA  EQU   C'U'                ENGLISH(USA)                                 
SYMBFRE  EQU   C'F'                FRENCH                                       
SYMBCAN  EQU   C'C'                FRENCH(CANADA)                               
SYMBGER  EQU   C'G'                GERMAN                                       
SYMBITA  EQU   C'I'                ITALIAN                                      
SYMBSPA  EQU   C'S'                SPANISH                                      
SYMBDUT  EQU   C'D'                DUTCH                                        
SYMBQUE  EQU   C'Q'                EQUATE SYMBOL                                
SYMBNOT  EQU   C'X'                NOT USED                                     
STARTOFF DC    C'* START OF SYMBOLS'                                            
GNCMNTAB DC    C'>(GENERAL COMMON TABLE REFERENCE)>'                            
DUMMSGDC DC    XL2'0117',CL23'** MISSING DEFINTION **'                          
ERRFND   DC    CL18'** ERRORS FOUND **'                                         
ERRNFND  DC    CL27'** NO ERRORS ENCOUNTERED **'                                
ERRJOB   DC    CL33'*===== ERRORS FOUND IN JOB =====*'                          
ERRNJOB  DC    CL36'*===== NO ERRORS FOUND IN JOB =====*'                       
*                                                                               
ERRTAB   DS    0H                  ERROR REPORT STRINGS                         
ERRMSG0  DC    CL40'DATASET NOT FOUND IN PAN LIBRARY'                           
ERRMSG1  DC    CL40'MISSING DELIMETER'                                          
ERRMSG2  DC    CL40'LENGTH OF AN ENTRY IS AT LEAST 1 CHAR'                      
ERRMSG3  DC    CL40'INVALID LANGUAGE CHAR.'                                     
ERRMSG4  DC    CL40'NOT THE LANGUAGE REQUESTED'                                 
ERRMSG5  DC    CL40'INVALID CONTROL CARD INPUT'                                 
ERRMSG6  DC    CL40'MISSING "SYSTEM" CONTROL CARD'                              
ERRMSG7  DC    CL40'MISSING "LANGUAGE" CONTROL CARD'                            
ERRMSG8  DC    CL40'BAD PREFIX IN LABEL'                                        
ERRMSG9  DC    CL40'MISSING "#" IN LABEL'                                       
ERRMS10  DC    CL40'INVALID DIGIT(S) IN MESSAGE NUMBER'                         
ERRMS11  DC    CL40'SYSTEM INPUTTED IS UNKNOWN'                                 
ERRMS12  DC    CL40'INVALID INPUT FOR LANGUAGE CARD'                            
ERRMS13  DC    CL40'EQUATE STATEMENT EXPECTED'                                  
ERRMS14  DC    CL40'BLANK ENTRY'                                                
ERRMS15  DC    CL40'MISSING END DELIMITER'                                      
ERRMS16  DC    CL40'SPLITTER NOT EXACTLY HALFWAY'                               
ERRMS17  DC    CL40'LENGTHS NOT IN ASCENDING ORDER'                             
         SPACE 3                                                                
ALNGLIST DC    A(LNGLIST)                                                       
         SPACE 3                                                                
SPDELIM  DC    CL2'>>'                                                          
SPCOLON  DC    CL2'>:'             THESE THREE SPECIAL SPECIALS WILL            
SPCMMN   DC    CL2'>?'              TAKE EFFECT WITH THE NEW WAY                
SPCMMN2  DC    CL2'><'              DICT MSGS ARE HANDLED                       
DD#DISKG EQU   X'C0'                                                            
DD#DISK  EQU   X'80'                                                            
DD#TABLE EQU   X'60'               GENERAL'S TABLES                             
DD#GEN   EQU   X'40'                                                            
GE#DISK  EQU   X'80'                                                            
GE#GEN   EQU   X'40'                                                            
X2000BIT EQU   X'20'                                                            
COMMON   EQU   C'?'                                                             
COMMON2  EQU   C'<'                                                             
DELIM    EQU   C'>'                DELIMITER                                    
SPLITTER EQU   C':'                SPECIAL EQUATE NUMBER INDICATOR              
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=================== MISCELLANEOUS WORKING STORAGE ===================*         
*                                                                               
WORKSTRG DS    0H                                                               
*----------------------------- PANVALET ------------------------------*         
PANDDEQU DS    CL10                PAN NAME OF __DDEQUS                         
PANDDNEW DS    CL10                PAN NAME OF __DDNEW                          
PANNAME  DS    CL10                PAN NAME, PARAMETER FOR PANIC                
PANPREF  DS    CL2                 SYSTEM PREFIX OF PAN BOOKS                   
         SPACE 1                                                                
TBLENTLN DS    H                   L(A TABLE ENTRY)                             
ATBLEND  DS    A                   A(END OF THE SAME TABLE)                     
ATBLCURR DS    A                   A(CURRENT ENTRY IN SAME TABLE)               
         SPACE 1                                                                
*---------------------------- SAVE STORAGE ---------------------------*         
SVBLNG   DS    XL1                 LANGUAGE CODE                                
SVSYS    DS    CL3                 SYSTEM USER REQUESTED                        
SVNSYS   DS    XL1                 NATIVE SYSTEM # OF SYSTEM REQUESTED          
SVLANG   DS    CL3                 LANGUAGE USER REQUESTED                      
SVLNG    DS    CL1                 FIRST INITIAL OF LANGUAGE NAME               
SVSYSNME DS    CL7                 FULL SYSTEM NAME                             
SVSYSTAB DS    CL17                TABLE OF SYSTEMS PROCESSED                   
         SPACE 1                                                                
*--------------------------- MISCELLANEOUS ---------------------------*         
MISCWORK DS    0H                                                               
*                                                                               
BINLANG  DS    XL1                 LANGUAGE CODE (MAY BE INVERTED)              
DMCB     DS    6F                                                               
DMWORK   DS    12D                                                              
DUB      DS    D                                                                
EBCMSGNM DS    CL4                 EBCDIC OF CURRENT MESSAGE #                  
EOFFLAG  DS    XL1                 PAN BOOK READ EOF FLAG                       
ERROR    DS    XL1                 FLAG TO INDICATE INVALID INPUT               
KEY      DS    CL48                                                             
KEYSAVE  DS    CL48                                                             
LMESSAGE DS    XL1                 L(MESSAGE) FROM DICTIONARY                   
MSGLNG   DS    CL1                 LANGUAGE SYMBOL                              
MSGNUM   DS    XL2                 BINARY OF MESSAGE #                          
HIMSGNM1 DS    XL2                 (MAX MSG# < X'8000') + 1                     
HIMSGNM2 DS    XL2                 (X'8000' < MAX MSG# < X'FFFE') + 1           
NUMLANG  DS    XL1                 # OF LANGS FOR MSG                           
NUMLINE  DS    XL1                 # OF LINES FOR MSG W/. SAME LANG             
RETCODE  DS    XL1                 XBASE RETURN CODE                            
PVLITLN  DS    X                   PREVIOUS LITERAL LENGTH                      
EQSYMB   DS    CL8                 EQSYMB = LABEL OF EQUATE STTMNT              
SYSNAME  DS    CL(L'SVSYSNME)      SYSTEM NAME                                  
SYSNUM   DS    CL(L'SVNSYS)        SYSTEM NUMBER                                
WORK     DS    CL17                                                             
         SPACE 1                                                                
SUBJECT  DS    CL7                                                              
OBJECT   DS    CL50                                                             
LOBJECT  DS    XL1                                                              
         SPACE 1                                                                
*----------------------------- ADDRESSES -----------------------------*         
ANXLGLST DS    A                   A(NEXT POS IN LNGLIST)                       
SAVERE   DS    A                   TEMPORARY STORAGE FOR RE                     
SAVERF   DS    A                   TEMPORARY STORAGE FOR RF                     
A8EOL    DS    A                   A(8TH LAST CHAR ON PAN LINE),                
A7EOL    DS    A                    ETC.  THESE FIELDS MUST BE                  
A6EOL    DS    A                    TOGETHER IN THIS ORDER                      
         SPACE 1                                                                
*------------------------------- FLAGS -------------------------------*         
SWITCH1  DS    CL1                                                              
SWISPLT  EQU   X'80'               SPLITTER IS PRESENT                          
SWIERR1  EQU   X'40'               AT LEAST 1 ERROR IN SECTION OF JOB           
SWIERR2  EQU   X'20'               AT LEAST 1 ERROR IN ENTIRE JOB               
         SPACE 1                                                                
DDFLAG   DS    CL1                                                              
DDDISKQ  EQU   X'80'               MESSAGE RESIDES ON DISK                      
*                                                                               
SRTFLAG  DS    CL1                                                              
SRTFEQUQ EQU   X'80'               ENTRY IS AN EQUATE STATEMENT                 
SRTFDICQ EQU   X'40'               ENTRY IS FROM DICTIONARY (PANDDNEW)          
SRTFFILQ EQU   X'20'               ENTRY IS FROM GENFIL                         
*                                                                               
TMPFLAG  DS    CL1                                                              
         SPACE 1                                                                
*------------------------------ COUNTERS -----------------------------*         
BYSYSCNT DS    F                   COUNT # OF RECORDS FOR A SYSTEM              
BYTESCNT DS    F                   COUNT # OF TOTAL BYTES                       
DISKCNT  DS    H                   COUNT # OF DISK ENTRIES                      
DISKGCNT DS    H                   COUNT # OF DISK+GEN ENTRIES                  
DUMSGCNT DS    H                   COUNT # OF DUMB RECORDS CREATED              
EQENTCNT DS    H                   COUNT # OF EQUATES PROCESSED                 
GENCNT   DS    H                   COUNT # OF DD#GEN OR GE#GEN                  
GENDCNT  DS    F                   COUNT # OF RECORD FROM GENDIR                
GSERRCNT DS    H                   COUNT # OF GET SORT ERRORS                   
HICTLCNT DS    H                   COUNT # OF HIGH CONTROL RECORDS              
NDISKCNT DS    H                   COUNT # OF NON-DISK ENTRIES                  
NWENTCNT DS    H                   COUNT # OF "NEW"-ENTRIES PROCESSED           
TABLECNT DS    H                   COUNT # OF DD#TABLE                          
PLERRCNT DS    F                   COUNT # OF ERRORS FROM PROCLANG              
TEMPCNT  DS    F                   TEMPORARY COUNTER                            
TPOUTCNT DS    F                   COUNT # OF RECDS WRITTEN TO TAPEOUT          
PRLINCNT DS    H                   COUNT # OF LINES PROCESSED                   
         SPACE 1                                                                
*------------------------------- BUFFERS -----------------------------*         
ELEMENT  DS    CL256                                                            
LINEBUFF DS    CL80                I/O BUFFER FOR PANIC                         
LNGLIST  DS    CL30                LANGUAGE LIST                                
MESSAGE  DS    CL80                MESSAGE BUFFER                               
SRTENTRY DS    CL(L'ELEMENT)                                                    
TXTABLE  DS    CL200               TO HOLD FULL-TEXT ELEMS                      
MSGREC   DS    CL4004              MESSAGE RECORD BUFFER                        
*                                                                               
MSHRTWKQ EQU   *-MISCWORK                                                       
         SPACE   1                                                              
MISCWRKQ EQU   *-WORKSTRG                                                       
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*======================= MISCELLANEOUS DSECTS ========================*         
SRTRECD  DSECT                                                                  
SRTKSYS  DS    XL1                 SYSTEM NUMBER                                
SRTKMNUM DS    XL2                 MESSAGE NUMBER IN BINARY                     
SRTKTYPE DS    CL3                 TYPE: CYS, DEC, EQU, FIC, FIL, X'FF'         
SRTKNEQU DS    XL1                 NTH EQU ENTRY FOR A MSG#      (EQU)          
         ORG   SRTKNEQU                                                         
SRTKLANG DS    XL1                 LANGUAGE                      (FIL)          
         ORG   SRTKLANG                                                         
SRTKNLNG DS    XL1                 # OF LANGUAGES FOR MESSAGE    (DEC)          
         ORG   SRTKNLNG                                                         
SRTKELNG DS    CL1                 EBCDIC LANGUAGE SYMBOL        (FIC)          
SRTKNLIN DS    XL1                 NTH LINE OF MSG W/. SAME LANG (FIC)          
SRTKEYQ  EQU   *-SRTRECD                                                        
SRTINFO  DS    0C                  THE INFORMATION NEEDED                       
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*=========================== DPRINT DSECT ============================*         
       ++INCLUDE DDDPRINT                                                       
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*============================ GMSGD DSECT ============================*         
       ++INCLUDE GEGENMSG                                                       
***********************************************************************         
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'154DDUPGRD   05/01/02'                                      
         END                                                                    
