*          DATA SET DELDXMOD   AT LEVEL 117 AS OF 12/03/20                      
*PROCESS USING(WARN(15))                                                        
*CATALP DELDXMOD                                                                
         TITLE 'DELDXMOD - LOAD/DUMP FOR DEMO FILES'                            
DELDXMOD CSECT                                                                  
         PRINT NOGEN                                                            
*                                                                               
         WXTRN LDCOUNTN            ONE DAY WE MIGHT CREATE THIS                 
*                                                                               
         ENTRY PARMCARD                                                         
         ENTRY DATEVAL                                                          
         ENTRY SSB                                                              
         ENTRY UTL                                                              
*                                                                               
         NBASE 0,DELDXMOD,RA,WORK=A(DMLDWRK)                                    
         LHI   R7,LITERALS-DELDXMOD                                             
         AR    R7,RB                                                            
         LR    R9,R7                                                            
         AHI   R9,4096                                                          
         USING LITERALS,R7,R9                                                   
         L     R8,=V(CPRINT)       R8 IS PRINTER CONTROL REGISTER               
         USING DPRINT,R8                                                        
*                                                                               
         BRAS  RE,PROGINIT         INITIALISE                                   
*                                                                               
         BRAS  RE,CARDVAL          VALIDATE INPUT CARDS                         
         BL    MAINX                                                            
*                                                                               
         TM    ABEND,YES           ABEND=YES PARAMETER CARD PROVIDED?           
         BO    MAIN10              YES: DON'T INVOKE STXITER                    
         GOTO1 =V(STXITER),DMCB,A(STXLST)                                       
*                                  GENERATE:   //SYSPDUMP DD SYSOUT=*           
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=C'SYSPDUMP'),(X'80',SPACES)            
*                                                                               
MAIN10   DS    0H                                                               
*                                                                               
         TM    LOAD,YES            WAS AN EXTERNAL ROUTINE SPECIFIED            
         BZ    *+8                 NO                                           
         BRAS  RE,INITXTRN         INITIALISE EXTERNAL ROUTINE                  
*                                                                               
         BRAS  RE,IOINIT           INITIALISE I/O SYSTEM                        
*                                                                               
         TM    OUTPUT,TAPE         DUMPING?                                     
         BZ    *+12                NO                                           
         BRAS  RE,DUMPALL                                                       
         B     MAINX                                                            
*                                                                               
         TM    OUTPUT,DISK         LOADING?                                     
         BO    *+6                 YES                                          
         DC    H'0'                                                             
         BRAS  RE,LOADALL                                                       
*                                                                               
MAINX    DS    0H                                                               
         BRAS  RE,WRAPUP           WRAP UP                                      
*                                                                               
         XBASE                                                                  
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* EXIT POINTS                                                         *         
***********************************************************************         
*                                                                               
EXITOK   CR    RB,RB                                                            
         J     EXIT                                                             
*                                                                               
EXITL    CLI   *,255                                                            
*                                                                               
EXIT     XIT1                                                                   
*                                                                               
WRTERR   MVC   P(36),=CL36'**ERROR** - D/A DISK ON TRACK WRITE '                
         ST    R0,FULL             CONTAINS ERROR CODES                         
         GOTO1 =V(HEXOUT),DMCB,FULL,P+36,4,0                                    
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(44,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
ISWERR   MVC   P(27),=CL27'**ERROR** - I/S DISK WRITE '                         
         ST    R0,FULL             CONTAINS ERROR CODES                         
         GOTO1 =V(HEXOUT),DMCB,FULL,P+27,4,0                                    
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(35,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
ISRERR   MVC   P(26),=CL26'**ERROR** - I/S DISK READ '                          
         ST    R0,FULL             CONTAINS ERROR CODES                         
         GOTO1 =V(HEXOUT),DMCB,FULL,P+26,4,0                                    
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(34,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
ISDERR   MVC   P(27),=CL27'**ERROR** - I/S DISK ERROR '                         
         ST    R0,FULL             CONTAINS ERROR CODES                         
         GOTO1 =V(HEXOUT),DMCB,FULL,P+27,4,0                                    
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(35,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
DAEERR   MVC   P(35),=CL35'**ERROR** - D/A DISK ERASE FAILURE '                 
         ST    R0,FULL             CONTAINS ERROR CODES                         
         GOTO1 =V(HEXOUT),DMCB,FULL,P+35,4,0                                    
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(43,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
         EJECT                                                                  
***********************************************************************         
* LOAD FROM TAPE                                                      *         
***********************************************************************         
*                                                                               
LOADALL  NTR1                                                                   
         TM    MODE,UPDATE         UPDATING FILE?                               
         BNO   *+12                NO                                           
         BRAS  RE,UPDFIL                                                        
         J     EXITOK                                                           
*                                                                               
         TM    MODE,NODA           LOADING FILE?                                
         BO    *+12                NO                                           
         BRAS  RE,LOADFIL                                                       
         J     EXITOK                                                           
*                                                                               
         BRAS  RE,LOADDIR          LOAD DIRECTORY                               
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* DUMP FROM DISK (OR TAPE)                                            *         
***********************************************************************         
*                                                                               
DUMPALL  NTR1                                                                   
         TM    MODE,NODA           DUMPING FILE?                                
         BO    *+12                NO                                           
         BRAS  RE,DUMPFIL          DUMP FILE VIA DIRECTORY                      
         J     EXITOK                                                           
*                                                                               
         BRAS  RE,DUMPDIR          DUMP DIRECTORY                               
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* UPDATE FILE AND DIRECTORY FROM SEQUENTIAL DATASET                   *         
***********************************************************************         
*                                                                               
UPDFIL   NTR1                                                                   
*                                                                               
         MVC   IST_JOBNAME,MAILJOBN   MVS JOBNAME                               
         MVC   IST_JOBNUM,MAILJOB#+3  MVS JOB#                                  
*                                                                               
         OPEN  (TAPEIN,INPUT)                                                   
         LA    RF,UDFEOF           OVERRIDE EODAD FOR TAPEIN                    
         STCM  RF,7,TINEOD                                                      
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'D',=CL8'TAPEIN'),WORK                       
         MVC   P(11),=C'TAPEIN DSN:'                                            
         MVC   P+12(44),WORK       RETURNED DSN FROM DYNALLOC                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
*** DEIS: EFFECTIVE NOV2/18, WE ARE NO LONGER UPDATING DEMDIRN AND ITS          
*** ATTACHED DEMO FILES. WE ARE COMMITTED TO VSAM FOR THIS FILE.                
*** EFFECTIVE MAY/19, DITTO FOR DEMDIRR/DEMFILR.                                
         SELECT CLI,ISDTF#,EQ                                                   
           WHEN (DEMDIRN#)                                                      
             MVC P(10),=C'** DEMDIRN'  INTENDED UPDATE OF DEMDIRN               
           WHEN (DEMDIRR#)                                                      
             MVC P(10),=C'** DEMDIRR'  INTENDED UPDATE OF DEMDIRR               
         ENDSEL ,                                                               
         IF (CLI,P,NE,C' ')        (OK BECAUSE "P" IS INIT. TO SPACES!)         
           MVI WRITE,NO              UPDATES NO LONGER SUPPORTED !!!            
           MVI POSTCHEK,NO           NO NEED FOR POST-UPDATE CHECK              
           MVC P+11(48),=C'UPDATE ** WRITE=NO AND POSTCHEK=NO ARE IN FO+        
               RCE.'                                                            
           GOTO1 =V(PRINTER)         INDICATE THIS IN THE TRACE                 
         ENDIF ,                                                                
*                                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    UDF04               YES: OPEN NEITHER DIRECTORY NOR FILE         
*                                                                               
         XC    DP,DP                                                            
         LA    R2,DMCB                                                          
         MVC   P1,=A(DAOPEN)                                                    
         MVC   P4,DADTFA                                                        
         GOTO1 =V(DADDS),P1        OPEN D/A FILE                                
*                                                                               
         MVC   DUB,DANAME          D/A DDNAME                                   
         BRAS  RE,ENQDSN           ENQUEUE THE DSN                              
         JNE   UDF01               IT'S UNAVAILABLE                             
*                                                                               
         MVC   DADSN,WORK          SAVE D/A DSN                                 
         XC    DUB,DUB             FIND EOF ON D/A FILE                         
         GOTO1 =V(DADDS),PARAMS,A(FNDEOF),0,0,DADTFA,DUB                        
*                                                                               
         XC    PARAMS,PARAMS       CALL DAXLDDS TO INITIALIZE                   
         MVC   PARAM4,DADTFA                                                    
         GOTO1 =V(DAXLDDS),PARAMS                                               
*                                                                               
         XC    DP,DP                                                            
         MVC   P1,=A(ISOPEN)                                                    
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISDDS),P1        OPEN I/S FILE                                
*                                                                               
         MVC   DUB,ISNAME          I/S DDNAME                                   
         BRAS  RE,ENQDSN           ENQUEUE THE DSN                              
         JE    UDF02               IT'S AVAILABLE                               
*                                                                               
UDF01    DS    0H                                                               
         MVC   P(40),=CL40'CONCURRENT DEMOFILE UPDATE ATTEMPTED!'               
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         MVC   MAILRCPS,PGRMRS     SEND TO PROGRAMMERS                          
         MVC   MAILMSG,P           SEND E-MAIL                                  
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
         ABEND 952,DUMP            CONCURRENT UPDATE ON THIS DSN!!!             
*                                                                               
UDF02    DS    0H                                                               
         MVC   ISDSN,WORK          SAVE I/S DSN                                 
         XC    LDAREC,LDAREC                                                    
*                                                                               
         MVC   P(35),=C'FILE AND DIRECTORY HAVE BEEN OPENED'                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'A',=C'ISTRACE '),0                          
         IF (CLI,DMCB+4,NE,0)                                                   
           OPEN  (ISTRACE,OUTPUT)  ONLY OPEN ISTRACE IF IT'S ALLOCATED          
           MVI   ISTRACEF,C'Y'     REMEMBER THAT WE OPENED ISTRACE              
         ENDIF ,                                                                
*                                                                               
         TM    WARN,NO             WARN=NO CARD PROVIDED?                       
         BO    UDF04               YES: DON'T ISSUE CONSOLE WARNING             
*                                                                               
UDF03    DS    0H                                                               
         MVC   WORK(80),SPACES     BUILD CONSOLE WARNING MESSAGE                
         MVC   WORK(15),=C'*** WARNING ***'                                     
         LLC   R1,BYTE                                                          
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   WORK+16(0),DADSN                                                 
         LA    R1,WORK+16(R1)                                                   
         MVC   2(22,R1),=C'IS ABOUT TO BE UPDATED'                              
         GOTO1 =V(LOGIO),DMCB,1,(80,WORK)                                       
         MVC   WORK(5),SPACES                                                   
         GOTO1 (RF),(R1),0,(5,WORK)                                             
         CLC   =C'EOJ',WORK                                                     
         BE    UDFX                                                             
         CLC   =C'GO',WORK                                                      
         BNE   UDF03                                                            
*                                                                               
UDF04    CLI   TINEOF,C'Y'         TEST END OF INPUT TAPE                       
         BE    UDF54                                                            
         MVI   FLAG2,0                                                          
*                                                                               
         GET   TAPEIN,DARECH       READ D/A TAPE RECORD INTO DAREC              
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    UDF07               NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),STARTKEY                                                
         BL    UDF04                                                            
*                                                                               
UDF07    DS    0H                                                               
         CLI   ENDK,0              END KEY PRESENT?                             
         BE    UDF08               NO                                           
         LLC   R1,ENDK             L'PROVIDED END KEY                           
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),ENDKEY                                                  
         BH    UDF04                                                            
*                                                                               
UDF08    L     R1,TIDA             BUMP D/A TAPE READ COUNTER                   
         AHI   R1,1                                                             
         ST    R1,TIDA                                                          
         C     R1,MAXIOS           CHECK D/A READ COUNTER                       
         BH    UDFEOF                                                           
*                                                                               
         LA    R3,DAREC                                                         
*                                                                               
         TM    USER,PROGRMMR       USER=PROGRAMMER ?                            
         BO    UDF09               YES: DON'T CHECK KEY AGAINST ISDTF=          
         CLI   WHICHMOD,DELD       EXAMINE KEYS FOR DELD ONLY                   
         BNE   UDF09                                                            
         OC    0(3,R3),0(R3)       DON'T WORRY ABOUT HDR/TRLR RECORDS           
         BZ    UDF09                                                            
         CLI   0(R3),X'FF'                                                      
         BE    UDF09                                                            
*                                                                               
         CLI   0(R3),DFUECODQ      FILE 'G' (FUSION)?                           
         BE    *+12                                                             
         CLI   1(R3),C'R'          MEDIA IS "R" ?                               
         BNE   *+16                                                             
         CLI   ISDTF#,DEMDIRR#     YES: BETTER BE DEMDIRR                       
         BE    UDF09                                                            
         B     UDF08E              IT ISN'T: ERROR                              
*                                                                               
         CLI   2(R3),C'N'          SOURCE IS "N" OR "S" ?                       
         BE    *+12                                                             
         CLI   2(R3),C'S'                                                       
         BNE   *+16                                                             
         CLI   ISDTF#,DEMDIRN#     YES: BETTER BE DEMDIRN                       
         BE    UDF09                                                            
         B     UDF08E              IT ISN'T: ERROR                              
*                                                                               
         CLI   ISDTF#,DEMDIRA#     ALL OTHER RECORDS BETTER BE DEMDIRA          
         BE    UDF09                                                            
*                                                                               
UDF08E   DS    0H                                                               
         MVC   P(40),=CL40'UNEXPECTED KEY XXX FOR FILE XXXXXXX!'                
         MVC   P+15(3),0(R3)       FILE/MEDIA/SOURCE FROM KEY                   
         MVC   P+28(7),ISNAME      DIRECTORY DDNAME                             
         MVC   MAILRCPS,OPSRECIP   SEND TO DATA CONTROL                         
         MVC   MAILMSG,P           SEND E-MAIL                                  
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
         ABEND 956,DUMP            UNEXPECTED KEY FOR THIS FILE                 
*                                                                               
UDF09    DS    0H                                                               
         TM    USER,PROGRMMR       USER=PROGRAMMER ?                            
         BO    UDF10               YES                                          
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    UDF10               YES: NTIDIR/FIL ISN'T OPEN TO READ           
         CLI   CHKNTIPG,C'Y'       CHECK NTI PROGRAM NUMBERS?                   
         BNE   UDF10               NO                                           
*                                                                               
PRK      USING PRKEY,R3                                                         
         CLC   =C'PNN',PRK.PRKEY   NTI PROGRAM NUMBER BITMAP RECORD?            
         BNE   UDF10                                                            
         CLC   =C'PPPP',PRK.PRSTAT                                              
         BNE   UDF10                                                            
*                                                                               
* VALIDATE THE NTI PROGRAM NUMBER BITMAP RECORDS. A SUCCESSFUL RETURN           
* FROM THIS ROUTINE MEANS THAT THE VALIDATION IS SUCCESSFUL, AND THAT           
* THE UPDATE CAN PROCEED.                                                       
*                                                                               
         ICM   RF,7,TINEOD         SAVE TAPEIN EODAD                            
         BRAS  RE,NTIPGM#V         VALIDATE NTI PROGRAM NUMBER BITMAPS          
         STCM  RF,7,TINEOD         RESTORE TAPEIN EODAD                         
         LTR   R0,R0               R0 = INVALID NTI PROG. #, ELSE ZERO          
         BZ    UDF10               CHECK FOR SUCCESSFUL RETURN                  
         DROP  PRK                                                              
*                                                                               
         MVC   P(40),=CL40'ATTEMPTED RESET OF NTI PROGRAM # XXXXX !'            
         CVD   R0,DUB              INSERT PROGRAM NUMBER INTO MESSAGE           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+33(5),DUB                                                      
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         MVC   MAILRCPS,PGRMRS     SEND TO PROGRAMMERS                          
         MVC   MAILMSG,P           SEND E-MAIL                                  
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
         ABEND 955,DUMP            ATTEMPTED RESET OF NTI PROGRAM # !!!         
*                                                                               
UDF10    DS    0H                                                               
         AH    R3,DAKEYT                                                        
         TM    2(R3),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BO    UDF12               YES                                          
         MVC   HALF,0(R3)                                                       
         CLC   HALF,EFFS           NON-EXTENDED PASSIVE?                        
         BE    UDF12               YES                                          
*                                                                               
         CLC   HALF,DAMAX          MAKE SURE LENGTH IS OK                       
         BH    *+14                                                             
         CLC   HALF,DAMIN                                                       
         BNL   *+16                                                             
         BRAS  RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   FLAG2,1             SET INVALID REC LEN                          
         B     UDF12                                                            
*                                                                               
         LA    R1,DAREC                                                         
         AH    R1,HALF                                                          
         XC    0(2,R1),0(R1)       SET ZEROS AT END OF REC                      
*                                                                               
UDF12    DS    0H                                                               
         LA    RE,DAREC            TEST PASSIVE...                              
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   OR EXTENDED PASSIVE RECORD                   
         BO    UDF20                                                            
         CLC   EFFS,0(RE)          YES - DON'T DO SEQUENCE CHECKING             
         BE    UDF20                                                            
*                                                                               
*                                  IT'S A RECORD (NOT JUST A KEY)               
         LH    RF,DAKEYLL          L'MAJOR KEY                                  
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),LDAREC     SAME MAJOR KEY?                              
         BNE   UDF18               NO                                           
*                                                                               
         LH    RF,DAKEYT           YES: CHECK FOR MINOR SEQ ERROR               
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),LDAREC     THIS MINOR KEY LESS THAN PREVIOUS?           
         BNL   UDF18               NO                                           
*                                                                               
         MVC   P(21),=CL21'WARNING SEQ ERR D/A ='                               
         L     R1,TIDASEQ                                                       
         AHI   R1,1                                                             
         ST    R1,TIDASEQ                                                       
         L     R1,TIDEL                                                         
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         LH    R0,DAKEYT                                                        
         GOTO1 =V(HEXOUT),DMCB,DAREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         B     UDF04                                                            
*                                                                               
UDF18    MVC   LDAREC,DAREC        SAVE CURRENT D/A KEY                         
*                                                                               
UDF20    OC    DAREC(3),DAREC      DON'T LOAD HEADER RECS                       
         BNZ   UDF22                                                            
         OC    SVDAHDR,SVDAHDR     SAVE FIRST HDR REC USER DATA                 
         BNZ   *+16                                                             
         LARL  R1,DAREC+96                                                      
         MVC   SVDAHDR,0(R1)                                                    
*                                                                               
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     UDF04                                                            
*                                                                               
UDF22    CLI   DAREC,X'FF'         DON'T LOAD TRAILER RECS                      
         BNE   UDF24                                                            
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     UDF04                                                            
*                                                                               
UDF24    TM    LOAD,YES            PASS CONTROL TO EXTERNAL                     
         BZ    UDF26                                                            
*                                                                               
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN                                                        
         MVI   0(R1),1                                                          
         CLC   =C'EOF',1(R1)                                                    
         BE    UDF26                                                            
         L     RE,0(R1)                                                         
         OC    0(3,RE),0(RE)       NOT FOR HDR/TRL RECORDS                      
         BZ    UDF26                                                            
         CLI   0(RE),X'FF'                                                      
         BE    UDF26                                                            
*                                                                               
         BASR  RE,RF               CALL EXTERN                                  
*                                                                               
         CLI   0(R1),X'FF'                                                      
         BNE   UDF26                                                            
         CLC   =C'EOF',1(R1)                                                    
         BE    EOFTIN                                                           
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     UDF04                                                            
*                                                                               
UDF26    DS    0H                                                               
         TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    UDF30                                                            
         BRAS  RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    UDF30                                                            
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BZ    UDF30               YES                                          
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     UDF04                                                            
*                                                                               
UDF30    XC    DP,DP               LOAD D/A FILE RECORD                         
         LA    RF,DAREC                                                         
         ST    RF,P2               R1=A(DAREC)                                  
         AH    RF,DAKEYT                                                        
         NI    2(RF),X'FF'-STATUS_FILE# CLEAR LOGICAL FILE NUMBER               
         OC    2(1,RF),NEWDEMO     SET FILE NUMBER IN FILE RECORD               
*                                                                               
         LA    R1,DAREC                                                         
         SR    RF,RF                                                            
         ICM   RF,3,DALINKD        LINK FIELD SET?                              
         BZ    *+12                NO                                           
         AR    RF,R1               YES CLEAR IT                                 
         XC    0(4,RF),0(RF)                                                    
*                                                                               
         AH    R1,DAKEYT           POINT TO REC LEN FIELD                       
         TM    2(R1),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BZ    UDF31               NO                                           
         LA    RF,DAREC            YES: MINOR KEY AND RECLEN FIELDS...          
         AH    RF,DAKEYLL          ...CONTAIN DATA TO BE PLACED IN...           
         MVC   P5,0(RF)            ...THE DISK ADDRESS FIELD                    
         B     UDF32                                                            
*                                                                               
UDF31    DS    0H                                                               
         CLC   EFFS,0(R1)          PASSIVES HAVE RECLEN OF -1                   
         BNE   *+14                                                             
         XC    P5,P5               AND HAVE NO DISK ADDRESS                     
         B     UDF32                                                            
*                                  ADD D/A RECORD KEY                           
*                                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    UDF31A              YES: DON'T UPDATE FILE                       
*                                                                               
         MVC   P3+2(2),0(R1)                                                    
         MVC   P4,DADTFA                                                        
         GOTO1 =V(DAXLDDS),P1                                                   
         OC    P3(2),P3            ANY ERRORS                                   
         BZ    *+16                                                             
         LHI   R0,1                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     WRTERR                                                           
*                                                                               
         L     RE,DODA             NO BUMP DISK OUT D/A COUNTER                 
         AHI   RE,1                                                             
         ST    RE,DODA                                                          
*                                                                               
UDF31A   DS    0H                                                               
         TM    SIZE,YES            PASS CONTROL TO D/A REC LEN ROUTINE          
         BZ    UDF32                                                            
         ICM   RF,15,VLDSIZE                                                    
         BZ    UDF32                                                            
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT           POINT TO RECORD LENGTH                       
         MVC   PLSIZE+2(2),0(RE)                                                
         MVI   PLSIZE,0                                                         
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
UDF32    DS    0H                                                               
         ICM   RF,15,VLDCPTRS      CREATE DIRECTORY POINTER                     
         JZ    *+2                                                              
*                                                                               
         GOTO1 (RF),PLCPTRS                                                     
*                                                                               
         L     R4,PLCPTRS+4        POINT TO DIRECTORY LIST                      
         MVC   DUB(4),P5           SAVE D/A OF LOADED REC (OR NULLS)            
         LH    RE,DAKEYLL                                                       
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   LISREC(0),0(R4)     SAME MAJOR KEY?                              
         BE    UDF52               YES: DON'T LOAD POINTERS                     
*                                                                               
         EX    RE,*+8              MAJOR KEY HAS CHANGED                        
         B     *+10                                                             
         MVC   LISREC(0),0(R4)     SET NEW MAJOR KEY VALUE                      
         B     UDF38                                                            
*                                                                               
UDF36    CLI   0(R4),0             END OF LIST                                  
         BE    UDF52               YES                                          
*                                                                               
UDF38    LR    RF,R4               POINT TO DIRECTORY RECORD                    
         AH    RF,ISRECL                                                        
         SHI   RF,4                                                             
         MVC   0(4,RF),DUB         MOVE IN DISK ADDRESS                         
         XC    DUB(4),DUB          POINTERS HAVE A ZERO DISK ADDRESS            
*                                                                               
         LR    RE,R4                                                            
         AH    RE,ISKEYL                                                        
         NI    0(RE),X'FF'-STATUS_FILE# CLEAR LOGICAL FILE NUMBER               
*                                                                               
*======================================================================         
*** IN THEORY, NO PASSIVE SHOULD EVER NEED A LOGICAL FILE NUMBER. WE            
*** ARE GRADUALLY GETTING RID OF THEM. ONCE WE KNOW THIS IS OKAY, WE            
*** CAN GET RID OF THESE FILE-SPECIFIC TESTS.                                   
         CLI   ISDTF#,DEMDIRN#     ARE WE UPDATING DEMDIRN?                     
         BE    UDF39               YES: CONTINUE TO SET FILE # FOR NOW          
*======================================================================         
         CLI   NEWDEMO,TEST_DEMOFILE   FOR TEST DEMO FILES...                   
         BE    UDF39                   ...ALWAYS SET THE LOGICAL FILE #         
         TM    0(RE),STATUS_EXTP   EXTENDED PASSIVE?                            
         BO    UDF40               YES: DON'T SET LOGICAL FILE NUMBER           
         OC    P5,P5               REGULAR PASSIVE?                             
         BZ    UDF40               YES: DON'T SET LOGICAL FILE NUMBER           
UDF39    DS    0H                                                               
         OC    0(1,RE),NEWDEMO     SET FILE NUMBER IN I/S KEY                   
*                                                                               
UDF40    DS    0H                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    UDF51               YES: DON'T UPDATE DIRECTORY                  
*                                                                               
         MVC   IST_DIRREC,0(R4)       DIRECTORY RECORD WE PLAN TO WRITE         
         MVI   IST_STREAD,0           CLEAR "OLD" STATUS BYTE                   
         XC    IST_DAREAD,IST_DAREAD  CLEAR "OLD" DISK ADDRESS                  
*                                                                               
*                                  ADD/WRITE RECORD TO I/S FILE                 
         GOTO1 =V(ISDDS),P1,A(ISREAD),ISREC,0,ISDTFA,(R4)                       
         OC    P3(2),P3                                                         
         BZ    *+16                                                             
         LHI   R0,4                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISDERR                                                           
*                                                                               
         LA    R2,DOIS                                                          
         MVC   P1,=A(ISADD)        ADD I/S REC IF RECORD NOT FOUND              
         LH    RE,ISKEYL1                                                       
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   0(0,R4),ISREC                                                    
         BNE   UDF45                                                            
*                                                                               
         LA    R2,DWIS                                                          
         MVC   P1,=A(ISWRITE)      ELSE WRITE REC WITH NEW D/A                  
         MVC   IST_STREAD,ISREC+18 SAVE "OLD" STATUS BYTE                       
         MVC   IST_DAREAD,ISREC+19 SAVE "OLD" DISK ADDRESS                      
*                                                                               
UDF45    DS    0H                                                               
         GOTO1 (RF),(R1),,(R4)     CALL ISDDS                                   
         OC    P3(2),P3            ANY ERRORS                                   
         BZ    *+16                                                             
         LHI   R0,5                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISDERR                                                           
*                                                                               
* IF ISTRACE IS OPEN, WRITE THE TRACE RECORD FOR THIS (NON-PASSIVE)             
* MAJOR KEY.                                                                    
         IF (CLI,ISTRACEF,EQ,C'Y'),AND,                                         
            (TM,IST_STATUS,STATUS_EXTP,Z),AND,                                  
            (CLC,IST_DAWRITE,NE,=X'00000000')                                   
               XC    WORK+12(4),WORK+12   PREPARE FOR TIME MACRO                
               TIME  DEC,WORK,LINKAGE=SYSTEM,DATETYPE=YYYYMMDD                  
*                              RETURNS HHMMSSthmiju0000YYYYMMDD00000000         
               OI    WORK+15,X'0F'        MUST CHG PWOS DATE TO PACKED          
               MVO   WORK+11(5),WORK+8(4) 0YYYYMMDDF                            
               UNPK  IST_DATE,WORK+11(5)  YYYYMMDD                              
               OI    WORK+7,X'0F'         MUST CHG PWOS TIME TO PACKED          
               MVO   WORK+1(7),WORK(6)    0HHMMSSthmijuF                        
               UNPK  IST_TIME,WORK+1(7)   HHMMSSthmiju                          
               PUT   ISTRACE,IST_REC      WRITE THE TRACE RECORD                
         ENDIF ,                                                                
*                                                                               
         L     R1,0(R2)            BUMP APPROPRIATE RECORD COUNTER              
         LA    R1,1(R1)                                                         
         ST    R1,0(R2)                                                         
*                                                                               
UDF51    DS    0H                                                               
         AH    R4,ISRECL                                                        
         B     UDF36               BUMP TO NEXT DIRECTORY POINTER               
*                                                                               
UDF52    CLI   DAREC,X'FF'                                                      
         BNE   UDF04               BACK FOR NEXT TAPE RECORD                    
*                                                                               
UDF54    DS    0H                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    UDF56               YES: DON'T DO FINAL WRITES                   
*                                                                               
         MVI   P1,X'FF'            WRITE OUT LAST BLOCK                         
         GOTO1 =V(DAXLDDS),P1                                                   
         OC    P3(2),P3                                                         
         BZ    *+16                                                             
         LHI   R0,2                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     WRTERR                                                           
*                                                                               
         IF (CLI,ISTRACEF,EQ,C'Y') ONLY CLOSE ISTRACE IF IT WAS OPENED          
           CLOSE ISTRACE                                                        
         ENDIF ,                                                                
*                                                                               
         MVC   P(L'INFOMSGI),INFOMSGI  PRINT I/S FILE UPDATED MSG               
         MVC   P+9(7),ISNAME                                                    
         MVC   P+17(7),=C'UPDATED'                                              
         MVC   P+31(44),ISDSN                                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BRAS  RE,PRT_IS_STATS     PRINT I/S FILE SIZE STATISTICS               
*                                                                               
         MVC   P(L'LOADM1),LOADM1  PRINT D/A FILE UPDATED MSG                   
         MVC   P+9(7),DANAME                                                    
         MVC   P+17(7),=C'UPDATED'                                              
         MVC   P+31(44),DADSN                                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BRAS  RE,PRT_DA_STATS     PRINT D/A FILE SIZE STATISTICS               
*                                                                               
UDF56    DS    0H                                                               
         TM    SIZE,YES            FINAL CALL OF D/A REC LEN ROUTINE            
         BZ    UDFX                                                             
         ICM   RF,15,VLDSIZE                                                    
         BZ    UDFX                                                             
         MVI   PLSIZE,X'FF'                                                     
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
UDFX     DS    0H                                                               
*                                                                               
* >>>>>>>>>>>>>>>>>>>>>>>>>>>>   NOTE   <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<         
* BY THIS POINT IN THE CODE, THE UPDATE TO THE DEMO FILE AND DIRECTORY          
* ARE COMPLETE. IF A FAILURE SHOULD OCCUR FROM THIS POINT FORWARD, THE          
* UPDATE DOES NOT NEED TO BE RE-RUN.                                            
*                                                                               
         CLI   POSTCHEK,YES        DO POST-UPDATE INTEGRITY CHECK?              
         BNE   *+8                                                              
         BRAS  RE,CHKKEYS          YES                                          
*                                                                               
         BRAS  RE,PRTCTRS          PRINT D/A LOAD COUNTERS                      
*                                                                               
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* END OF FILE ON D/A LOAD TAPE                                        *         
***********************************************************************         
*                                                                               
UDFEOF   CLOSE TAPEIN                                                           
         MVI   TINEOF,C'Y'         SET END OF INPUT TAPE                        
*                                                                               
         TM    LOAD,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    UDF04                                                            
*                                                                               
         MVI   PLXTRN,X'FF'                                                     
         CLC   =C'EOF',PLXTRN+1    TEST FOR EOF ALREADY SET                     
         BE    UDF04                                                            
         GOTO1 ALOADPT,PLXTRN                                                   
         MVC   PLXTRN+1(3),=C'EOF' SET EOF                                      
         B     UDF04                                                            
*                                                                               
* ISTRACE RECORD LAYOUT                                                         
*                                                                               
             DS    0D                                                           
IST_REC      DC    XL80'00'                                                     
             ORG   IST_REC                                                      
IST_DIRREC   DS    0XL(IST_DIRLENQ)                                             
IST_MAJKEY   DS    XL18            MAJOR KEY                                    
IST_STATUS   DS    X               STATUS BYTE AS WRITTEN                       
IST_DAWRITE  DS    XL4             DISK ADDRESS AS WRITTEN                      
IST_DIRLENQ  EQU   *-IST_MAJKEY                                                 
IST_STREAD   DS    X               OLD STATUS BYTE AS READ (OR NULL)            
IST_DAREAD   DS    XL4             OLD DISK ADDRESS AS READ (OR NULLS)          
IST_JOBNAME  DS    CL8             JOB NAME                                     
             DC    C'(J'                                                        
IST_JOBNUM   DS    CL5             JOB NUMBER                                   
             DC    C')'                                                         
IST_DATETIME DS    0CL20                                                        
IST_DATE     DS    CL8             YYYYMMDD                                     
IST_TIME     DS    CL12            HHMMSSthmiju                                 
             ORG                                                                
*                                                                               
         EJECT                                                                  
*                                                                               
***********************************************************************         
* LOAD FILE AND CREATE SEQUENTIAL DATASET                             *         
***********************************************************************         
*                                                                               
LOADFIL  NTR1                                                                   
*                                                                               
         OPEN  (TAPEIN,INPUT)                                                   
         LA    RF,LOADFEOF         OVERRIDE EODAD FOR TAPEIN                    
         STCM  RF,7,TINEOD                                                      
         OPEN  (SEQDIR,OUTPUT)                                                  
*                                                                               
         XC    DP,DP               OPEN FILE: CLEAR PARAMETER LIST              
*                                                                               
         MVC   P1,=A(DAOPOLD)      ON LOAD, DEFAULT TO DISP=OLD OPEN            
         CLI   DISP,SHR            OVERRIDE TO DISP=SHR?                        
         BNE   *+10                                                             
         MVC   P1,=A(DAOPEN)       OPEN WITH DISP=SHR                           
*                                                                               
         LA    R2,DMCB                                                          
         MVC   P4,DADTFA                                                        
         GOTO1 =V(DADDS),P1                                                     
*                                                                               
         XC    PARAMS,PARAMS       CALL DAXLDDS TO INITIALIZE                   
         MVC   PARAM4,DADTFA                                                    
         GOTO1 =V(DAXLDDS),PARAMS                                               
*                                                                               
         MVC   DUB,DANAME          D/A DDNAME                                   
         BRAS  RE,ENQDSN           ENQUEUE THE DSN                              
         BE    LDF01               IT'S AVAILABLE                               
*                                                                               
         MVC   P(40),=CL40'CONCURRENT DEMOFILE LOAD ATTEMPTED!'                 
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         MVC   MAILRCPS,PGRMRS     SEND TO PROGRAMMERS                          
         MVC   MAILMSG,P           SEND E-MAIL                                  
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
         ABEND 953,DUMP            CONCURRENT UPDATE ON THIS DSN!!!             
*                                                                               
LDF01    DS    0H                                                               
         MVC   DADSN,WORK          SAVE D/A DSN                                 
         TM    WARN,NO             WARN=NO CARD PROVIDED?                       
         BO    LDF03               YES: DON'T ISSUE CONSOLE WARNING             
*                                                                               
LDF02    DS    0H                                                               
         MVC   WORK(80),SPACES     BUILD CONSOLE WARNING MESSAGE                
         MVC   WORK(15),=C'*** WARNING ***'                                     
         LLC   R1,BYTE                                                          
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   WORK+16(0),DADSN                                                 
         LA    R1,WORK+16(R1)                                                   
         MVC   2(22,R1),=C'IS ABOUT TO BE DELETED'                              
         GOTO1 =V(LOGIO),DMCB,1,(80,WORK)                                       
         MVC   WORK(5),SPACES                                                   
         GOTO1 (RF),(R1),0,(5,WORK)                                             
         CLC   =C'EOJ',WORK                                                     
         BE    LDFX                                                             
         CLC   =C'ERASE',WORK                                                   
         BNE   LDF02                                                            
*                                                                               
LDF03    DS    0H                                                               
         XC    SVDAHDR,SVDAHDR                                                  
         XC    LISREC,LISREC                                                    
         XC    LDAREC,LDAREC                                                    
         LA    R0,DAREC            CLEAR D/A REC                                
         LHI   R1,DARECL                                                        
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         JNO   *+6                                                              
         DC    H'0'                DIE ON DESTRUCTIVE MOVE                      
*                                                                               
         LA    RF,DAREC            CREATE D/A FILE HDR REC (KEY=X'01')          
         AH    RF,ISRECL                                                        
         BCTR  RF,0                                                             
         MVI   0(RF),1                                                          
         LA    RF,DAREC                                                         
         AH    RF,DAKEYT                                                        
         BCTR  RF,0                                                             
         MVI   2(RF),128                                                        
         LA    RE,128                                                           
         SH    RE,DAELD                                                         
         LA    RF,DAREC                                                         
         AH    RF,DAELD                                                         
         MVI   0(RF),1                                                          
         STC   RE,1(RF)                                                         
         MVC   DAREC+40(8),DANAME  MOVE IN FILE NAME                            
         B     LDF26                                                            
*                                                                               
LDF04    CLI   TINEOF,C'Y'         TEST END OF INPUT TAPE                       
         BE    LDF44                                                            
         MVI   FLAG2,0                                                          
*                                                                               
         GET   TAPEIN,DARECH       READ D/A TAPE RECORD INTO DAREC              
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    LDF07               NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),STARTKEY                                                
         BL    LDF04                                                            
*                                                                               
LDF07    DS    0H                                                               
         CLI   ENDK,0              END KEY PRESENT?                             
         BE    LDF08               NO                                           
         LLC   R1,ENDK             L'PROVIDED END KEY                           
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),ENDKEY                                                  
         BH    LDF04                                                            
*                                                                               
LDF08    L     R1,TIDA             BUMP D/A TAPE READ COUNTER                   
         AHI   R1,1                                                             
         ST    R1,TIDA                                                          
         C     R1,MAXIOS           CHECK D/A READ COUNTER                       
         BH    LOADFEOF                                                         
*                                                                               
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BO    LDF12               YES                                          
         MVC   HALF,0(RE)                                                       
         CLC   HALF,EFFS           NON-EXTENDED PASSIVE?                        
         BE    LDF12               YES                                          
         CLC   HALF,DAMAX          MAKE SURE LENGTH IS OK                       
         BH    *+14                                                             
         CLC   HALF,DAMIN                                                       
         BNL   LDF10                                                            
*                                                                               
         BRAS  RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   FLAG2,1             SET INVALID REC LEN                          
         B     LDF12                                                            
*                                                                               
LDF10    LA    R1,DAREC                                                         
         AH    R1,HALF                                                          
         XC    0(2,R1),0(R1)       SET ZEROS AT END OF REC                      
*                                                                               
LDF12    DS    0H                                                               
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BO    LDF20               YES                                          
         CLC   EFFS,0(RE)          NON-EXTENDED PASSIVE?                        
         BE    LDF20               YES - DON'T DO SEQUENCE CHECKING             
*                                                                               
         LH    RF,DAKEYLL          L'MAJOR KEY                                  
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),LDAREC     CHECK FOR MAJOR KEY CONTROL BREAK            
         BNE   LDF18                                                            
*                                                                               
         LH    RF,DAKEYT           NO - CHECK FOR MINOR SEQ ERROR               
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   DAREC(0),LDAREC     THIS MINOR KEY LESS THAN PREVIOUS?           
         BNL   LDF18               NO                                           
*                                                                               
         MVC   P(21),=CL21'WARNING SEQ ERR D/A ='                               
         L     R1,TIDASEQ                                                       
         AHI   R1,1                                                             
         ST    R1,TIDASEQ                                                       
         L     R1,TIDEL                                                         
         AHI   R1,1                                                             
         ST    R1,TIDEL                                                         
         LH    R0,DAKEYT                                                        
         GOTO1 =V(HEXOUT),DMCB,DAREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         B     LDF04                                                            
*                                                                               
LDF18    MVC   LDAREC,DAREC        SAVE CURRENT D/A KEY                         
*                                                                               
LDF20    OC    DAREC(3),DAREC      DON'T LOAD HEADER RECS                       
         BNZ   LDF22                                                            
         OC    SVDAHDR,SVDAHDR     SAVE FIRST HDR REC USER DATA                 
         BNZ   LDF24                                                            
         LARL  R1,DAREC+96                                                      
         MVC   SVDAHDR,0(R1)                                                    
         B     LDF24                                                            
*                                                                               
LDF22    CLI   DAREC,X'FF'         DON'T LOAD TRAILER RECS                      
         BE    LDF24                                                            
*                                                                               
         TM    LOAD,YES            PASS CONTROL TO EXTERNAL                     
         BZ    LDF26                                                            
*                                                                               
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN                                                        
         MVI   0(R1),1                                                          
         CLC   =C'EOF',1(R1)                                                    
         BE    LDF26                                                            
*                                                                               
         L     RE,0(R1)                                                         
         OC    0(3,RE),0(RE)       NOT FOR HDR/TRL RECORDS                      
         BZ    LDF26                                                            
         CLI   0(RE),X'FF'                                                      
         BE    LDF26                                                            
*                                                                               
         BASR  RE,RF               CALL EXTERN                                  
*                                                                               
         CLI   0(R1),X'FF'                                                      
         BNE   LDF26                                                            
         CLC   =C'EOF',1(R1)                                                    
         BE    LOADFEOF                                                         
*                                                                               
LDF24    L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     LDF04                                                            
*                                                                               
LDF26    DS    0H                                                               
         TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    LDF30                                                            
         BRAS  RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    LDF30                                                            
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BZ    LDF30               NO                                           
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
         B     LDF04                                                            
*                                                                               
LDF30    XC    DP,DP               LOAD D/A FILE RECORD                         
         LA    RF,DAREC                                                         
         ST    RF,P2               R1=A(DAREC)                                  
         AH    RF,DAKEYT                                                        
         NI    2(RF),X'FF'-STATUS_FILE# CLEAR LOGICAL FILE NUMBER               
         OC    2(1,RF),NEWDEMO     SET FILE NUMBER IN FILE RECORD               
*                                                                               
         LA    R1,DAREC                                                         
         SR    RF,RF                                                            
         ICM   RF,3,DALINKD        LINK FIELD SET?                              
         BZ    *+12                NO                                           
         AR    RF,R1               CLEAR IT                                     
         XC    0(4,RF),0(RF)                                                    
*                                                                               
         AH    R1,DAKEYT           POINT TO REC LEN FIELD                       
         TM    2(R1),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BZ    LDF32               NO                                           
         LA    RF,DAREC            YES: MINOR KEY AND RECLEN FIELDS...          
         AH    RF,DAKEYLL          ...CONTAIN DATA TO BE PLACED IN...           
         MVC   P5,0(RF)            ...THE DISK ADDRESS FIELD                    
         B     LDF34                                                            
*                                                                               
LDF32    DS    0H                                                               
         CLC   EFFS,0(R1)          PASSIVES HAVE RECLEN OF -1                   
         BNE   *+14                                                             
         XC    P5,P5               AND HAVE NO DISK ADDRESS                     
         B     LDF34                                                            
*                                                                               
         MVC   P3+2(2),0(R1)       SET LENGTH                                   
         MVC   P4,DADTFA                                                        
         GOTO1 =V(DAXLDDS),P1                                                   
         OC    P3(2),P3            ANY ERRORS                                   
         BZ    *+16                                                             
         LHI   R0,3                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     WRTERR                                                           
*                                                                               
         L     RE,DODA             NO BUMP DISK OUT D/A COUNTER                 
         AHI   RE,1                                                             
         ST    RE,DODA                                                          
*                                                                               
         TM    SIZE,YES            PASS CONTROL TO D/A REC LEN ROUTINE          
         BZ    LDF34                                                            
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDF34                                                            
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT           POINT TO RECORD LENGTH                       
         MVC   PLSIZE+2(2),0(RE)                                                
         MVI   PLSIZE,0                                                         
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
LDF34    DS    0H                                                               
         ICM   RF,15,VLDCPTRS      CREATE DIRECTORY POINTER                     
         JZ    *+2                                                              
*                                                                               
         GOTO1 (RF),PLCPTRS                                                     
*                                                                               
         L     R4,PLCPTRS+4        POINT TO DIRECTORY LIST (OF ONE!)            
         MVC   FULL,P5             SAVE D/A OF LOADED REC                       
         LH    RE,DAKEYLL                                                       
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   LISREC(0),0(R4)     SAME MAJOR KEY?                              
         BE    LDF42               YES: DON'T LOAD POINTERS                     
*                                                                               
         EX    RE,*+8              MAJOR KEY HAS CHANGED                        
         B     *+10                                                             
         MVC   LISREC(0),0(R4)     SET NEW MAJOR KEY VALUE                      
*                                                                               
LDF38    XC    ISREC,ISREC                                                      
         LH    RF,ISRECL           SET LENGTH                                   
         AHI   RF,4                                                             
         STH   RF,ISRECH                                                        
         LH    RF,ISRECL           COPY RECORD TO ISREC                         
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(R4)                                                   
*                                                                               
         LA    RF,ISREC                                                         
         AH    RF,ISKEYL                                                        
         NI    0(RF),X'FF'-STATUS_FILE# CLEAR LOGICAL FILE NUMBER               
*                                                                               
*======================================================================         
*** IN THEORY, NO PASSIVE SHOULD EVER NEED A LOGICAL FILE NUMBER. WE            
*** ARE GRADUALLY GETTING RID OF THEM. ONCE WE KNOW THIS IS OKAY, WE            
*** CAN GET RID OF THESE FILE-SPECIFIC TESTS.                                   
         CLI   ISDTF#,DEMDIRN#     ARE WE UPDATING DEMDIRN?                     
         BE    LDF39               YES: CONTINUE TO SET FILE # FOR NOW          
*======================================================================         
         CLI   NEWDEMO,TEST_DEMOFILE   FOR TEST DEMO FILES...                   
         BE    LDF39                   ...ALWAYS SET THE LOGICAL FILE #         
         TM    0(RF),STATUS_EXTP   EXTENDED PASSIVE?                            
         BO    LDF39A              YES: DON'T SET LOGICAL FILE NUMBER           
         OC    FULL,FULL           REGULAR PASSIVE?                             
         BZ    LDF39A              YES: DON'T SET LOGICAL FILE NUMBER           
LDF39    DS    0H                                                               
         OC    0(1,RF),NEWDEMO     SET FILE NUMBER                              
*                                                                               
LDF39A   DS    0H                                                               
         LA    RF,ISREC                                                         
         AH    RF,ISRECL                                                        
         SHI   RF,4                                                             
         MVC   0(4,RF),FULL        MOVE IN DISK ADDRESS                         
         XC    FULL,FULL           POINTERS HAVE A ZERO DISK ADDRESS            
*                                                                               
         CLI   DAREC,X'FF'         DON'T PUT FF RECORDS                         
         BE    LDF40                                                            
*                                                                               
         PUT   SEQDIR,ISRECH       WRITE IT TO SEQUENTIAL FILE                  
*                                                                               
         L     RE,TOIS             NO BUMP DIRECTORY WRITES                     
         AHI   RE,1                                                             
         ST    RE,TOIS                                                          
*                                                                               
LDF40    AH    R4,ISRECL           NEXT DIRECTORY POINTER                       
         CLI   0(R4),0             END OF LIST?                                 
         BNE   LDF38               NO                                           
*                                                                               
LDF42    CLI   DAREC,X'FF'                                                      
         BNE   LDF04               BACK FOR NEXT TAPE RECORD                    
         B     LDF46                                                            
*                                                                               
LDF44    XC    DAREC(256),DAREC    CREATE D/A FILE TRL REC (KEY=FF'S)           
         LH    R1,DAKEYT                                                        
         SHI   R1,2                MINUS 1 FOR 1ST BYTE, AND 1 FOR EX           
         MVI   DAREC,X'FF'                                                      
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   DAREC+1(0),DAREC                                                 
*                                                                               
         LA    RF,DAREC                                                         
         AH    RF,DAKEYT                                                        
         MVI   1(RF),128                                                        
         LA    RE,128                                                           
         SH    RE,DAELD                                                         
         LA    RF,DAREC                                                         
         AH    RF,DAELD                                                         
         MVI   0(RF),1                                                          
         STC   RE,1(RF)                                                         
         MVC   DAREC+40(8),DANAME  MOVE IN FILE NAME                            
         L     RF,DODA                                                          
         AHI   RF,1                                                             
         ST    RF,DAREC+48         MOVE IN RECORD COUNT                         
         B     LDF26                                                            
*                                                                               
LDF46    MVI   P1,X'FF'            WRITE OUT LAST BLOCK                         
         GOTO1 =V(DAXLDDS),P1                                                   
         OC    P3(2),P3                                                         
         BZ    *+16                                                             
         LHI   R0,4                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     WRTERR                                                           
*                                                                               
         USING DTFPHD,R2                                                        
         L     R2,DADTFA           ERASE REST OF EACH EXTENT                    
         LA    R3,DNEXTMTX                                                      
         LA    R1,DMTX             16 EXTENT MATRIX                             
         CLC   DMTX(14),=14X'FF'                                                
         BNE   *+8                                                              
         LA    R1,DNDXMTX          48 EXTENT MATRIX                             
         TM    DIND,DINDXAM                                                     
         BZ    *+8                                                              
         ICM   R1,15,DMTX          A(HIGH CORE EXTENT MATRIX)                   
         DROP  R2                                                               
*                                                                               
         LR    R2,R1               SAVE A(EXTENT MATRIX)                        
         SR    R0,R0               CLEAR EXTENT COUNTER                         
*                                                                               
         SAM31 ,                                                                
         USING EXTENTD,R1                                                       
         CLI   EXTENTD,X'FF'       LAST EXTENT?                                 
         BE    *+16                                                             
         AHI   R0,1                NO: BUMP COUNTER                             
         LA    R1,EXTLNQ(,R1)                                                   
         B     *-16                                                             
         DROP  R1                                                               
         SAM24 ,                                                                
*                                                                               
         MVC   P(59),=C'DATA LOAD COMPLETE: CLEARING REMAINING TRACKS I+        
               N XX EXTENTS'                                                    
         CVD   R0,DUB                                                           
         UNPK  P+49(2),DUB                                                      
         OI    P+50,X'F0'                                                       
         GOTO1 =V(PRINTER)                                                      
         SAM31 ,                                                                
*                                                                               
         USING EXTENTD,R2                                                       
LDF50    DS    0H                                                               
         MVC   P(30),=C'CLEARING REMAINDER OF EXTENT #'                         
         LLC   R0,EXTSEQ#          EXTENT NUMBER                                
         AHI   R0,1                NUMBER IS ZERO-BASED                         
         CVD   R0,DUB                                                           
         UNPK  P+30(2),DUB                                                      
         OI    P+31,X'F0'                                                       
*                                                                               
         SAM24 ,                                                                
         GOTO1 =V(PRINTER)                                                      
         SAM31 ,                                                                
*                                                                               
         MVC   P1,=A(WTERASE)                                                   
         L     R1,ADATRK                                                        
         ST    R1,P2                                                            
         MVI   P2,X'FF'                                                         
         XC    P3,P3                                                            
         MVC   P4,DADTFA                                                        
         LA    R1,P6                                                            
         ST    R1,P5                                                            
         MVC   P6,0(R3)            SET START TO DNEXT FOR THIS EXTENT           
         LH    R0,P6                                                            
         CLI   P6+2,0              TEST IF LAST TRACK USED                      
         BNE   *+10                                                             
         BCTR  R0,0                NO - DECREMENT TRACK AS WTERASE              
         STH   R0,P6                  STARTS FROM TRACK+1                       
         MVC   DUB(1),EXTENTD+EXTLNQ                                            
         MVI   EXTENTD+EXTLNQ,X'FF'   SET THIS EXTENT AS LAST EXTENT            
         GOTO1 =V(DADDS),P1                                                     
         NI    P3+1,X'FB'          RESET EOF FLAG                               
         OC    P3(2),P3                                                         
         BNZ   LDF52               ERROR!                                       
*                                                                               
         MVC   EXTENTD+EXTLNQ(1),DUB  RESTORE SAVED BYTE                        
         LA    R3,4(R3)               BUMP TO NEXT EXTENT                       
         LA    R2,EXTLNQ(,R2)                                                   
*                                                                               
         CLI   EXTENTD,X'FF'       LAST EXTENT?                                 
         BNE   LDF50               NO                                           
         DROP  R2                                                               
*                                                                               
         SAM24 ,                                                                
         B     LDF54                                                            
*                                                                               
LDF52    DS    0H                                                               
         SAM24 ,                                                                
*                                                                               
         LARL  RE,CCBCCWL          SAVE DADDS CCB/CCWS                          
         MVI   2(RE),C'D'                                                       
         MVC   8(136,RE),72(RD)                                                 
         LHI   R0,1                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     DAEERR                                                           
*                                                                               
LDF54    DS    0H                                                               
         MVC   P(L'LOADM1),LOADM1  PRINT D/A FILE LOADED MSG                    
         MVC   P+9(7),DANAME                                                    
         MVC   P+31(44),DADSN                                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BRAS  RE,PRT_DA_STATS     PRINT D/A FILE SIZE STATISTICS               
*                                                                               
         TM    SIZE,YES            FINAL CALL OF D/A REC LEN ROUTINE            
         BZ    LDFX                                                             
         ICM   RF,15,VLDSIZE                                                    
         BZ    LDFX                                                             
         MVI   PLSIZE,X'FF'                                                     
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
LDFX     DS    0H                                                               
         BRAS  RE,PRTCTRS          PRINT D/A LOAD COUNTERS                      
*                                                                               
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* END OF FILE ON D/A LOAD TAPE                                        *         
***********************************************************************         
*                                                                               
LOADFEOF CLOSE TAPEIN                                                           
         MVI   TINEOF,C'Y'         SET END OF INPUT TAPE                        
*                                                                               
         TM    LOAD,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    LDF04                                                            
         MVI   PLXTRN,X'FF'                                                     
         CLC   =C'EOF',PLXTRN+1    TEST FOR EOF ALREADY SET                     
         BE    LDF04                                                            
         GOTO1 ALOADPT,PLXTRN                                                   
         MVC   PLXTRN+1(3),=C'EOF' SET EOF                                      
         B     LDF04                                                            
         EJECT                                                                  
***********************************************************************         
* LOAD DIRECTORY FROM SEQUENTIAL DATASETS                             *         
***********************************************************************         
*                                                                               
LOADDIR  NTR1                                                                   
*                                                                               
* IN CASE THIS IS A 20-BIT (BIG) DIRECTORY, ALLOCATE:                           
*   //PDIXOV DD UNIT=SYSDA,SPACE=(CYL,(80)),DCB=(BUFNO=2)),                     
*   //          DISP=(,DELETE)                                                  
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'PDIXOV'),                 +        
               (X'48',PDIXSPAC),0,0,A(PDIXTXTU)                                 
*                                                                               
         OPEN  (TAPEIN,INPUT)                                                   
         LA    RF,LDD06            OVERRIDE EODAD                               
         STCM  RF,7,TINEOD                                                      
*                                                                               
         XC    DP,DP               OPEN DIRECTORY: CLEAR PARAMETER LIST         
*                                                                               
         MVC   P1,=A(ISOPOLD)      ON LOAD, DEFAULT TO DISP=OLD OPEN            
         CLI   DISP,SHR            OVERRIDE TO DISP=SHR?                        
         BNE   *+10                                                             
         MVC   P1,=A(ISOPEN)       OPEN WITH DISP=SHR                           
*                                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    LDD03               YES: DON'T OPEN THE DIRECTORY                
*                                                                               
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
         MVC   DUB,ISNAME          I/S DDNAME                                   
         BRAS  RE,ENQDSN           ENQUEUE THE DSN                              
         BE    LDD01               IT'S AVAILABLE                               
*                                                                               
         MVC   P(40),=CL40'CONCURRENT DEMODIR LOAD ATTEMPTED!'                  
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         MVC   MAILRCPS,PGRMRS     SEND TO PROGRAMMERS                          
         MVC   MAILMSG,P           SEND E-MAIL                                  
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
         ABEND 954,DUMP            CONCURRENT UPDATE ON THIS DSN!!!             
*                                                                               
LDD01    DS    0H                                                               
         MVC   ISDSN,WORK          SAVE D/A DSN                                 
         TM    WARN,NO             WARN=NO CARD PROVIDED?                       
         BO    LDD03               YES: DON'T ISSUE CONSOLE WARNING             
*                                                                               
LDD02    DS    0H                                                               
         MVC   WORK(80),SPACES     BUILD CONSOLE WARNING MESSAGE                
         MVC   WORK(15),=C'*** WARNING ***'                                     
         LLC   R1,BYTE                                                          
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   WORK+16(0),ISDSN                                                 
         LA    R1,WORK+16(R1)                                                   
         MVC   2(22,R1),=C'IS ABOUT TO BE DELETED'                              
         GOTO1 =V(LOGIO),DMCB,1,(80,WORK)                                       
         MVC   WORK(5),SPACES                                                   
         GOTO1 (RF),(R1),0,(5,WORK)                                             
         CLC   =C'EOJ',WORK                                                     
         BE    LDDX                                                             
         CLC   =C'ERASE',WORK                                                   
         BNE   LDD02                                                            
*                                                                               
LDD03    DS    0H                                                               
         BRAS  RE,SORTSTRT                                                      
*                                                                               
LDD04    DS    0H                                                               
         GET   TAPEIN,ISRECH                                                    
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    LDD04E              NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),STARTKEY                                                
         BL    LDD04                                                            
*                                                                               
LDD04E   DS    0H                                                               
         CLI   ENDK,0              END KEY PRESENT?                             
         BE    LDD04J              NO                                           
         LLC   R1,ENDK             L'PROVIDED END KEY                           
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),ENDKEY                                                  
         BH    LDD04                                                            
*                                                                               
LDD04J   DS    0H                                                               
         L     RE,TIIS                                                          
         AHI   RE,1                                                             
         ST    RE,TIIS                                                          
*                                                                               
         TM    LOAD,YES            EXTERNAL ROUTINE?                            
         BZ    LDD05               NO                                           
*                                                                               
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN                                                        
         MVI   0(R1),1                                                          
         CLC   =C'EOF',1(R1)                                                    
         BE    LDD05                                                            
*                                                                               
         L     RE,0(R1)                                                         
         OC    0(3,RE),0(RE)       NOT FOR HDR/TRL RECORDS                      
         BZ    LDD05                                                            
         CLI   0(RE),X'FF'                                                      
         BE    LDD05                                                            
*                                                                               
         BASR  RE,RF               CALL EXTERN                                  
*                                                                               
         CLI   0(R1),X'FF'         EXTERN SAYS DELETE THE POINTER?              
         BNE   LDD05               NO                                           
         CLC   =C'EOF',1(R1)       YES: STOP PROCESSING?                        
         BE    LDD06               YES                                          
*                                                                               
         LA    RF,DIISD            DISK IN DELETED COUNTER                      
         TM    INPUT,TAPE                                                       
         BO    *+8                                                              
         LA    RF,TIDEL            TAPE IN DELETED COUNTER                      
         L     RE,0(RF)                                                         
         AHI   RE,1                                                             
         ST    RE,0(RF)            INCREMENT DELETED RECORDS                    
*                                                                               
         IF (TM,COUNT,YES,O)       PASS CONTROL TO DIR COUNT ROUTINE?           
           ICM   RF,15,VLDCOUNT      COUNT ROUTINE EXISTS?                      
           JZ    *+2                 NO ?!?                                     
           LA    R1,ISREC                                                       
           AH    R1,ISKEYL           POINT PAST END OF MAJOR KEY                
           OI    0(R1),STATUS_DEL    MARK IT FOR DELETION                       
           MVI   PLCOUNT,1                                                      
           GOTO1 (RF),PLCOUNT                                                   
         ENDIF ,                                                                
*                                                                               
         B     LDD04               DISCARD THIS POINTER                         
*                                                                               
LDD05    DS    0H                                                               
         GOTO1 =V(SORTER),DMCB,=C'PUT',ISREC                                    
         L     RE,DIST                                                          
         AHI   RE,1                                                             
         ST    RE,DIST                                                          
         B     LDD04                                                            
*                                                                               
LDD06    DS    0H                                                               
         CLOSE TAPEIN              END OF FILE ON INPUT TAPE                    
         XC    ISREC,ISREC                                                      
*                                                                               
LDD08    MVC   LISREC,ISREC                                                     
         GOTO1 =V(SORTER),DMCB,=C'GET'                                          
         ICM   RF,15,4(R1)                                                      
         BZ    LDD18               END OF SORT FILE                             
         L     RE,DOST                                                          
         AHI   RE,1                                                             
         ST    RE,DOST                                                          
*                                                                               
         LH    R1,ISRECL                                                        
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RF)      MOVE RECORD FROM SORT TO ISREC               
*                                                                               
         LH    R1,ISKEYL1                                                       
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC                                                  
         BH    LDD14                                                            
         BL    LDD10                                                            
*                                                                               
         MVC   P(21),=CL21'WARNING DUP KEY I/S ='                               
         L     R1,DUPKEY                                                        
         AHI   R1,1                                                             
         ST    R1,DUPKEY                                                        
         B     LDD12                                                            
*                                                                               
LDD10    MVC   P(21),=CL21'WARNING SEQ ERR I/S ='                               
         L     R1,SEQERR                                                        
         AHI   R1,1                                                             
         ST    R1,SEQERR                                                        
*                                                                               
LDD12    LH    R0,ISRECL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         MVC   ISREC,LISREC                                                     
         B     LDD08               DON'T WRITE THE RECORD TO DISK               
*                                                                               
LDD14    DS    0H                                                               
         ICM   RF,15,VLDPURGE      PURGE TEST ROUTINE EXISTS?                   
         JZ    *+2                 NO ?!?                                       
         MVI   PLPURGE,1           ASSUME WE WON'T PURGE THE RECORD             
         GOTO1 (RF),PLPURGE                                                     
         CLI   PLPURGE,X'FF'       PURGE THE RECORD?                            
         BNE   LDD15               NO                                           
*                                  YES: RECORD IS MARKED FOR DELETION           
         L     R1,TIDEL            BUMP TAPE IN DELETED COUNTER                 
         LA    R1,1(R1)                                                         
         ST    R1,TIDEL                                                         
*                                                                               
LDD15    DS    0H                                                               
         TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE?           
         BZ    LDD16               NO                                           
         ICM   RF,15,VLDCOUNT      COUNT ROUTINE EXISTS?                        
         JZ    *+2                 NO ?!?                                       
         MVI   PLCOUNT,1                                                        
         GOTO1 (RF),PLCOUNT                                                     
*                                                                               
LDD16    DS    0H                                                               
         LA    R1,ISREC                                                         
         AH    R1,ISKEYL           POINT PAST END OF MAJOR KEY                  
         TM    0(R1),STATUS_DEL    MARKED FOR DELETION?                         
         BO    LDD08               YES: DON'T WRITE THE RECORD TO DISK          
*                                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    LDD17               YES: DON'T UPDATE THE DIRECTORY              
*                                                                               
         XC    DP,DP               LOAD I/S FILE RECORD                         
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISLDDS),P1                                                    
         OC    P3(2),P3            ANY ERRORS                                   
         BZ    *+16                                                             
         LHI   R0,1                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISWERR                                                           
*                                                                               
LDD17    DS    0H                                                               
         L     RE,DOIS             NO BUMP DISK OUT I/S COUNTER                 
         AHI   RE,1                                                             
         ST    RE,DOIS                                                          
         B     LDD08               GET THE NEXT RECORD                          
*                                                                               
LDD18    GOTO1 =V(SORTER),DMCB,=C'END'  END OF SORT                             
*                                                                               
         TM    LOAD,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    LDD19                                                            
         MVI   PLXTRN,X'FF'                                                     
         CLC   PLXTRN+1(3),=C'EOF' TEST FOR EOF ALREADY SET                     
         BE    LDD19                                                            
         GOTO1 ALOADPT,PLXTRN                                                   
         MVC   PLXTRN+1(3),=C'EOF' SET EOF                                      
*                                                                               
LDD19    DS    0H                                                               
         CLI   LISREC,X'FF'        CREATE EOF REC IF MISSING                    
         BE    LDD22                                                            
*                                                                               
         XC    ISREC,ISREC         CLEAR DISK ADDRESS IN EOF RECORD             
         LH    R1,ISKEYL                                                        
         SHI   R1,2                MINUS 1 FOR 1ST BYTE, AND 1 FOR EX           
         MVI   ISREC,X'FF'                                                      
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   ISREC+1(0),ISREC                                                 
*                                                                               
         CLI   WRITE,NO            WRITE=NO?                                    
         BE    LDD22               YES: DON'T UPDATE THE DIRECTORY              
*                                                                               
         XC    DP,DP               LOAD I/S FILE EOF REC                        
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISLDDS),P1                                                    
         OC    P3(2),P3                                                         
         BZ    LDD22                                                            
         LHI   R0,2                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISWERR                                                           
*                                                                               
LDD22    DS    0H                                                               
         MVC   P(L'INFOMSGI),INFOMSGI  PRINT I/S FILE LOADED MSG                
         MVC   P+9(7),ISNAME                                                    
         MVC   P+31(44),ISDSN                                                   
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         BRAS  RE,PRT_IS_STATS     PRINT I/S FILE SIZE STATISTICS               
*                                                                               
         TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    LDDX                                                             
         ICM   RF,15,VLDCOUNT                                                   
         BZ    LDDX                                                             
         LA    R0,ISNAME                                                        
         MVI   PLCOUNT,X'FF'                                                    
         GOTO1 (RF),PLCOUNT,,(R0)                                               
*                                                                               
LDDX     DS    0H                                                               
         BRAS  RE,PRTCTRS                                                       
*                                                                               
         J     EXITOK                                                           
         SPACE 2                                                                
PDIXSPAC DC    AL3(80,0)           SPACE=(CYL,(80))                             
*                                                                               
PDIXTXTU DS    0A                  ADDITIONAL DYNALLOC TEXT UNITS               
         DC    A(TXTNDISP)         NORMAL DISPOSITION SPECIFICATION             
         ORG   *-4                                                              
         DC    X'80'               EOL                                          
         ORG                                                                    
*                                                                               
TXTNDISP DC    AL2(DALNDISP),AL2(1),AL2(1),AL1(4)     DISP=(,DELETE)            
*                                                                               
         DROP  RB,RA                                                            
         EJECT                                                                  
***********************************************************************         
* DUMP FILE VIA DIRECTORY                                             *         
***********************************************************************         
*                                                                               
DUMPFIL  NTR1  BASE=(*,DUMPFILX),LABEL=*                                        
         MVI   FRSTIO,C'N'                                                      
*                                                                               
         LARL  RF,SSB                                                           
         OI    SSOMTIND-SSOOFF(RF),SSOWRTN    OFFLINE WRITE=NO                  
*                                                                               
         OPEN  (TAPEOUT,OUTPUT)    OPEN I/S DUMP TAPE                           
*                                                                               
         TM    TCOPY,TAPE          COPY ALSO REQUIRED?                          
         BZ    DMF02               NO                                           
         OPEN  (TAPECOPY,OUTPUT)                                                
*                                                                               
DMF02    LA    R2,DMCB                                                          
         XC    DP,DP               OPEN DIRECTORY                               
         MVC   P1,=A(ISOPEN)                                                    
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'D',ISNAME),ISDSN                            
*                                                                               
         XC    DP,DP               OPEN FILE                                    
         MVC   P1,=A(DAOPEN)                                                    
         MVC   P4,DADTFA                                                        
         GOTO1 =V(DADDS),P1                                                     
*                                                                               
         XC    PARAMS,PARAMS       CALL DAXLDDS TO INITIALIZE                   
         MVC   PARAM4,DADTFA                                                    
         GOTO1 =V(DAXLDDS),PARAMS                                               
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'D',DANAME),DADSN                            
*                                                                               
DMF04    MVI   FLAG2,0                                                          
         MVC   LISREC,ISREC                                                     
         CLI   FRSTIO,C'Y'         READ FIRST I/S FILE RECORD                   
         BE    DMF08                                                            
         MVI   FRSTIO,C'Y'                                                      
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    DMF06               NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   LISREC(0),STARTKEY                                               
*                                                                               
DMF06    XC    PARAMS,PARAMS                                                    
         LA    R1,DAREC                                                         
         ST    R1,PARAM2                                                        
         MVC   PARAM4,DADTFA                                                    
*                                                                               
         XC    DP,DP                                                            
         MVC   P1,=A(ISREAD)                                                    
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,LISREC                                                        
         ST    R1,P5                                                            
         L     R1,AISTRK                                                        
         ST    R1,P6                                                            
         MVI   P6,X'FF'                                                         
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    DMF10               NO                                           
         XC    LISREC,LISREC                                                    
         B     DMF10                                                            
*                                                                               
DMF08    GOTO1 =V(ISDDS),P1,A(ISRDSEQ)                                          
         MVI   MINRSEEN,C'N'       START OVER FOR THIS MAJOR KEY                
*                                                                               
DMF10    TM    P3+1,X'04'          TEST FOR I/S FILE EOF                        
         BO    DMF66                                                            
         OC    P3(2),P3            TEST FOR I/S FILE READ ERROR                 
         BZ    DMF12                                                            
*                                                                               
         LARL  RE,CCBCCWL          SAVE ISDDS CCB/CCWS                          
         MVI   2(RE),C'I'                                                       
         MVC   8(136,RE),72(RD)                                                 
         LHI   R0,1                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISRERR                                                           
*                                                                               
DMF12    MVI   FLAG2,0                                                          
         L     R1,DIIS             BUMP DISK IN I/S COUNTER                     
         AHI   R1,1                                                             
         ST    R1,DIIS                                                          
         C     R1,MAXIOS           CHECK I/S READ COUNTER                       
         BH    DMF66               EOF                                          
*                                                                               
         LH    R1,ISKEYL1          CHECK SEQUENCE OF I/S RECORDS                
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC     CHECK SEQUENCE                               
         BH    DMF18               THIS ONE IS HIGHER THAN PREV: OKAY           
         BL    DMF14               THIS ONE IS LOWER THAN PREV: HOW ?!?         
*                                                                               
         MVC   P(21),=CL21'WARNING DUP KEY I/S ='                               
         L     R1,DUPKEY                                                        
         AHI   R1,1                                                             
         ST    R1,DUPKEY                                                        
         B     DMF16                                                            
*                                                                               
DMF14    MVC   P(21),=CL21'WARNING SEQ ERR I/S ='                               
         L     R1,SEQERR                                                        
         AHI   R1,1                                                             
         ST    R1,SEQERR                                                        
*                                                                               
DMF16    LH    R0,ISRECL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         MVC   ISREC,LISREC                                                     
         B     DMF04                                                            
*                                                                               
DMF18    DS    0H                                                               
         CLI   ENDK,0              END KEY PRESENT?                             
         BE    DMF20               NO                                           
         LLC   R1,ENDK             L'PROVIDED END KEY                           
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),ENDKEY                                                  
         BH    DMF66                                                            
*                                                                               
DMF20    CLI   NEWDEMO,0           NEW FORMAT?                                  
         BE    DMF21               NO                                           
         LA    RF,ISREC                                                         
         AH    RF,ISKEYL                                                        
         MVC   BYTE,0(RF)          CHECK DIRECTORY RECORD IS FOR FILE           
         NI    BYTE,STATUS_FILE#   ISOLATE LOGICAL FILE NUMBER                  
         CLC   NEWDEMO,BYTE                                                     
         BNE   DMF04                                                            
*                                                                               
DMF21    DS    0H                                                               
*&&DO                                                                           
* DEIS: I HAVE NFC WHY WE WOULD WANT TO COUNT THE RECORDS HERE, SINCE           
*       WE ARE COUNTING THEM FURTHER DOWN IN THIS ROUTINE. I ADMIT              
*       THAT IT MIGHT HAVE SOMETHING TO DO WITH THE RETURN CODES FROM           
*       THE LDTPTR ROUTINE, AND I DON'T FULLY UNDERSTAND WHAT'S GOING           
*       ON THERE. IN ANY EVENT, THE NUMBERS DO SEEM TO LOOK BETTER              
*       WHEN THIS CODE IS REMOVED.                                              
*                                                                               
         TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DMF22                                                            
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DMF22                                                            
         MVI   PLCOUNT,1                                                        
         GOTO1 (RF),PLCOUNT                                                     
DMF22    DS    0H                                                               
*&&                                                                             
*                                                                               
         ICM   RF,15,VLDTPTRS      PASS CONTROL TO TEST PASSIVE PTRS            
         BZ    DMF28                                                            
         LA    R1,PLTPTRS                                                       
         MVI   0(R1),0             PRESET RETURN BYTES                          
         MVI   4(R1),0                                                          
         BASR  RE,RF               PASS CONTROL TO DELDTPTR                     
*                                                                               
* DEIS MAR/2016: SINCE I DON'T UNDERSTAND WHAT THE LDTPTR ROUTINE IS            
*      DOING, I'M ADDING CODE TO SEND AN E-MAIL IF THE LDTPTR ROUTINE           
*      PASSES BACK AN X'FF' OR X'FE' RETURN CODE. I'LL FEEL BETTER              
*      KNOWING WHAT'S GOING ON HERE BEFORE WE GO TO VSAM. I HAVE ALSO           
*      OBSERVED THAT THE COMMENTS IN DELDTPTR AND PVLDTPTR ARE UTTERLY          
*      INCONSISTENT IN TERMS OF WHAT P1 AND P2 ARE USED FOR. BOTTOM             
*      LINE: I HAVE NFC, BUT IT PROBABLY DOESN'T MATTER, BECAUSE THE            
*      DEMO DIRECTORIES HAVE NO TRUE PASSIVE POINTERS.                          
*                                                                               
         CLI   0(R1),X'FF'         LDTPTR SAYS TO DELETE THIS KEY?              
         BNE   DMF23                                                            
         L     R0,DIISPD           YES: BUMP PASSIVE DELETE COUNT               
         AHI   R0,1                                                             
         ST    R0,DIISPD                                                        
         B     DMF24                                                            
*                                                                               
DMF23    DS    0H                                                               
         CLI   0(R1),X'FE'         LDTPTR SAYS KEY IS "NOT SELECTED"?           
         BNE   DMF28                                                            
         L     R0,DIISPNS          YES: BUMP I/S "NOT SELECTED" COUNT           
         AHI   R0,1                                                             
         ST    R0,DIISPNS                                                       
         B     DMF04                                                            
*                                                                               
DMF24    CLI   4(R1),X'FF'         (ALWAYS X'00' AT THIS TIME)                  
         BNE   DMF26               NOT A PASSIVE SKIP                           
*                                                                               
* DEIS SAYS IN AUG/13: LOOKING AT DELDTPTR AND PVLDTPTR, IT APPEARS             
*    THAT WE WILL NEVER REACH THE FOLLOWING STATEMENT. WE WILL ALWAYS           
*    TAKE THE BRANCH TO LABEL DMF26.                                            
         MVI   FRSTIO,C'N'         SET TO DO A READ HIGH                        
         L     RE,4(R1)            SET NEW KEY                                  
         LH    RF,ISKEYL1                                                       
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   ISREC(0),0(RE)                                                   
*                                                                               
DMF26    L     R1,DIISD            BUMP INPUT I/S DELETES                       
         AHI   R1,1                                                             
         ST    R1,DIISD                                                         
         B     DMF04                                                            
*                                                                               
DMF28    LA    RE,ISREC            GET NEXT/FIRST REC FOR C/I                   
         AH    RE,ISRECL                                                        
         SHI   RE,5                POINT RE TO STATUS BYTE                      
         TM    0(RE),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BZ    DMF30               NO                                           
*                                                                               
         XC    DAREC(256),DAREC    BUILD AN EXTENDED PASSIVE RECORD             
         LH    RF,DAELD            L'ISREC                                      
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   DAREC(0),ISREC      MAJOR KEY / STATUS / DATA BYTES              
*                                                                               
         LA    RE,DAREC                                                         
         AH    RE,DAKEYLL          RE POINTS TO STATUS BYTE                     
         LLC   R0,0(RE)            SAVE STATUS BYTE                             
         MVC   0(4,RE),1(RE)       SHIFT DATA BYTES 1 BYTE TO LEFT              
         STC   R0,4(RE)            PUT STATUS BYTE AT EOR                       
         B     DMF45                                                            
*                                                                               
DMF30    DS    0H                                                               
         LA    RE,1(RE)            POINT RE TO DISK ADDRESS                     
         OC    0(4,RE),0(RE)       PASSIVE?                                     
         BZ    DMF44               YES                                          
*                                                                               
         OC    0(2,RE),0(RE)       CHECK POINTER ADDRESS                        
         BZ    *+12                                                             
         CLI   2(RE),0                                                          
         BNE   *+14                                                             
         MVC   P(21),=CL21'WARNING ADR FMT I/S ='                               
         B     DMF40                                                            
*                                                                               
         ST    RE,PARAM5           SET A(DISK ADDR)                             
         XC    DMCB,DMCB                                                        
         XC    PARAM6,PARAM6                                                    
         CLI   MINRSEEN,C'Y'       DID WE READ A MINOR KEY YET?                 
         BNE   *+12                NO                                           
         LA    RF,=C'DMRSEQ  '     YES: READ NEXT                               
         B     DMF32                                                            
*                                                                               
         MVI   MINRSEEN,C'Y'       REMEMBER WE STARTED THIS MAJOR KEY           
         OI    PARAM6,X'01'        TELL DMDANDX TO AVOID ABEND                  
         XC    DAREC(256),DAREC                                                 
         LH    RF,ISKEYL1          L'ISKEY FOR EXECUTE                          
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   DAREC(0),ISREC      SET MAJOR KEY IN I/O AREA                    
         LA    RF,=C'DMRDHI  '     FORCE DMDANDX TO CHECK FOR KEY NEQ           
*                                                                               
DMF32    DS    0H                                                               
         ST    RF,DMCB             A(DANDX COMMAND)                             
         MVI   DMCB,1                                                           
         LA    R2,DMCB             *** R2 = A(USER DMCB): SEE DMDANDX           
         ICM   R2,B'1000',=X'FF'   FORCE DMDMGRL TO USE R5 FOR UTL              
         OI    DMCB,X'10'          FOR FULL TRACK READ                          
         GOTO1 =V(DMDANDX),PARAMS                                               
*                                                                               
         TM    8(R2),X'80'         TEST FOR END OF CONTROL INTERVAL             
         BO    DMF04                                                            
*                                                                               
         CLI   8(R2),0             TEST FOR OTHER ERRORS                        
         BNE   DMF38                                                            
         LH    RE,DMCBW6+2         GET RECORD LENGTH                            
         LA    RE,4(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DARECH                                                        
*                                                                               
         LA    R2,DAREC            SET ZEROS AT END OF D/A RECORD               
         AH    R2,DAKEYT                                                        
         MVC   HALF,0(R2)                                                       
         MVI   FLAG2,0             SET VALID REC LEN                            
         CLC   HALF,DAMAX                                                       
         BH    *+14                                                             
         CLC   HALF,DAMIN                                                       
         BNL   DMF36                                                            
*                                                                               
         BRAS  RE,RECVAL           PRINT INVALID REC AND ADJUST REC LEN         
         MVI   FLAG2,1             SET INVALID REC LEN                          
         B     DMF42                                                            
*                                                                               
DMF36    LA    R2,DAREC                                                         
         AH    R2,HALF                                                          
         XC    0(2,R2),0(R2)                                                    
         B     DMF42                                                            
*                                                                               
DMF38    MVC   P(21),=CL21'WARNING DSK ERR D/A ='                               
*                                                                               
DMF40    LH    R0,ISRECL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         L     R1,BADADR           BUMP D/A DISK BAD ADDR COUNTER               
         AHI   R1,1                                                             
         ST    R1,BADADR                                                        
*                                                                               
DMF42    L     R1,DIDA             BUMP D/A TAPE READ COUNTER                   
         AHI   R1,1                                                             
         ST    R1,DIDA                                                          
         C     R1,MAXIOS           CHECK D/A READ COUNTER                       
         BH    DMF66                                                            
         B     DMF46                                                            
*                                                                               
DMF44    XC    DAREC(256),DAREC    BUILD A PASSIVE                              
         LH    RE,DAKEYLL                                                       
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   DAREC(0),ISREC      SET KEY FROM I/S REC                         
*                                                                               
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         MVC   0(2,RE),EFFS        SET RECLEN TO -1                             
*                                                                               
DMF45    DS    0H                                                               
         LH    RE,DAKEYT                                                        
         AH    RE,DACTLL                                                        
         LA    RE,6(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DARECH           SET LENGTH                                   
*                                                                               
DMF46    TM    LOAD,YES            PASS CONTROL TO EXTERNAL                     
         BZ    DMF50                                                            
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN                                                        
         MVI   0(R1),1                                                          
         CLC   =C'EOF',1(R1)                                                    
         BE    DMF50                                                            
         L     RE,0(R1)                                                         
         OC    0(3,RE),0(RE)       NOT FOR HDR/TRL RECORDS                      
         BZ    DMF50                                                            
         CLI   0(RE),X'FF'                                                      
         BE    DMF50                                                            
*                                                                               
         BASR  RE,RF               CALL EXTERN                                  
*                                                                               
         CLI   0(R1),X'FF'                                                      
         BNE   DMF50                                                            
         CLC   =C'EOF',1(R1)       FORCED EOF                                   
         BE    DMF66                                                            
*                                                                               
DMF48    L     R1,DIDAD            BUMP D/A DISK IN DELETED COUNTER             
         AHI   R1,1                                                             
         ST    R1,DIDAD                                                         
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   JUST CREATED EXTENDED PASSIVE?               
         BO    DMF04               YES                                          
         CLC   0(2,RE),EFFS        JUST CREATED A NON-EXTENDED PASSIVE?         
         BE    DMF04               YES                                          
         B     DMF28                                                            
*                                                                               
DMF50    TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DMF52                                                            
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DMF52                                                            
         MVI   PLCOUNT,1                                                        
         GOTO1 (RF),PLCOUNT                                                     
*                                                                               
DMF52    TM    CHECK,YES           PASS CONTROL TO RECORD CHECK ROUTINE         
         BZ    DMF54                                                            
         BRAS  RE,RECVAL                                                        
         CLI   ERRNUM,0                                                         
         BE    DMF54                                                            
         TM    CHECK,PRTDEL        DELETE BAD RECORDS                           
         BO    DMF48               YES                                          
*                                                                               
DMF54    LA    RE,ISREC                                                         
         AH    RE,ISKEYL                                                        
         LA    RF,DAREC                                                         
         AH    RF,DAKEYT                                                        
         LH    R1,DACTLL                                                        
         SHI   R1,1                                                             
         BM    *+18                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         OC    2(0,RF),0(RE)       OR I/S STATUS INTO D/A STATUS                
*                                                                               
         TM    SIZE,YES            PASS CONTROL TO D/A REC LEN ROUTINE          
         BZ    DMF58                                                            
         ICM   RF,15,VLDSIZE                                                    
         BZ    DMF58                                                            
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT           POINT TO RECORD LENGTH                       
         TM    2(RE),STATUS_EXTP   JUST CREATED EXTENDED PASSIVE?               
         BO    DMF58               YES                                          
         CLC   EFFS,0(RE)          JUST CREATED A NON-EXTENDED PASSIVE?         
         BE    DMF58               YES: RECORD LENGTH IS ALWAYS X'FFFF'         
         MVC   PLSIZE+2(2),0(RE)                                                
         MVI   PLSIZE,0                                                         
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
DMF58    DS    0H                                                               
         LA    R1,DAREC            WRITE D/A TAPE RECORD FROM DAREC             
         AH    R1,DAKEYT                                                        
         MVC   HALF,0(R1)          GET REC LEN FROM DAREC                       
         TM    2(R1),STATUS_EXTP   JUST CREATED EXTENDED PASSIVE?               
         BO    *+14                YES                                          
         CLC   HALF,EFFS           JUST CREATED A NON-EXTENDED PASSIVE?         
         BNE   DMF62               NO                                           
         LH    RE,DAKEYT                                                        
         AH    RE,DACTLL                                                        
         LA    RE,2(RE)            ADD 2 FOR RECLEN (BUG FIX: WAS 6)            
         STH   RE,HALF                                                          
*                                                                               
DMF62    LH    R1,HALF             SET RECORD LENGTH                            
         LA    R1,4(R1)                                                         
         SLL   R1,16                                                            
         ST    R1,DARECH                                                        
*                                                                               
         PUT   TAPEOUT,DARECH                                                   
         L     R1,TODA                                                          
         AHI   R1,1                                                             
         ST    R1,TODA             BUMP D/A TAPE WRITE COUNTER                  
*                                                                               
         TM    TCOPY,TAPE                                                       
         BZ    DMF64                                                            
         PUT   TAPECOPY,DARECH     WRITE SAME RECORD TO D/A COPY TAPE           
         L     R1,TOCDA                                                         
         AHI   R1,1                                                             
         ST    R1,TOCDA            BUMP D/A COPY TAPE WRITE COUNTER             
*                                                                               
DMF64    LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   JUST CREATED EXTENDED PASSIVE?               
         BO    DMF04               YES                                          
         CLC   0(2,RE),EFFS        JUST CREATED A NON-EXTENDED PASSIVE?         
         BE    DMF04               YES                                          
         B     DMF28                                                            
*                                                                               
DMF66    CLOSE TAPEOUT             END OF FILE                                  
*                                                                               
         TM    TCOPY,TAPE                                                       
         BZ    DMF67                                                            
         CLOSE TAPECOPY                                                         
*                                                                               
DMF67    DS    0H                                                               
         TM    LOAD,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    DMF68                                                            
         MVI   PLXTRN,X'FF'                                                     
         CLC   PLXTRN+1(3),=C'EOF' TEST FOR EOF ALREADY SET                     
         BE    DMF68                                                            
         GOTO1 ALOADPT,PLXTRN                                                   
         MVC   PLXTRN+1(3),=C'EOF' SET EOF                                      
*                                                                               
DMF68    MVC   P(9),=C'D/A FILE '  SET D/A FILE MSG                             
         MVC   P+9(7),DANAME                                                    
         MVC   P+17(4),=C'DSN='                                                 
         MVC   P+21(44),DADSN                                                   
         MVC   P+65(11),=C'DUMPED VIA '                                         
         GOTO1 =V(SQUASHER),DMCB,P,L'P                                          
         GOTO1 =V(PRINTER)         PRINT ACTION MSG LINE 1                      
         MVC   P(9),=C'I/S FILE '  SET I/S FILE MSG                             
         MVC   P+9(7),ISNAME                                                    
         MVC   P+17(4),=C'DSN='                                                 
         MVC   P+21(44),ISDSN                                                   
         GOTO1 =V(SQUASHER),DMCB,P,L'P                                          
         GOTO1 =V(PRINTER)         PRINT ACTION MSG LINE 2                      
*                                                                               
         BRAS  RE,PRT_DA_STATS     PRINT D/A FILE SIZE STATISTICS               
*                                                                               
         TM    SIZE,YES                                                         
         BZ    DMF70                                                            
         ICM   RF,15,VLDSIZE                                                    
         BZ    DMF70                                                            
         MVI   PLSIZE,X'FF'                                                     
         GOTO1 (RF),PLSIZE                                                      
*                                                                               
DMF70    DS    0H                                                               
         TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         JZ    DMF80                                                            
         ICM   RF,15,VLDCOUNT                                                   
         JZ    DMF80                                                            
         MVI   PLCOUNT,X'FF'                                                    
         GOTO1 (RF),PLCOUNT,,ISNAME                                             
*                                                                               
DMF80    DS    0H                                                               
         BRAS  RE,PRTCTRS          PRINT COUNTERS                               
*                                                                               
         J     EXITOK                                                           
         SPACE 2                                                                
DUMPFILX EQU  *                                                                 
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* DUMP DIRECTORY ONLY                                                 *         
***********************************************************************         
*                                                                               
DUMPDIR  NTR1  BASE=(*,DUMPDIRXX),LABEL=*                                       
         MVI   FRSTIO,C'N'                                                      
*                                                                               
         LARL  RF,SSB                                                           
         OI    SSOMTIND-SSOOFF(RF),SSOWRTN    OFFLINE WRITE=NO                  
*                                                                               
         OPEN  (TAPEOUT,OUTPUT)    OPEN I/S DUMP TAPE                           
*                                                                               
         TM    TCOPY,TAPE          COPY ALSO REQUIRED?                          
         BZ    DMD02               NO                                           
         OPEN  (TAPECOPY,OUTPUT)                                                
*                                                                               
         TM    INPUT,TAPE          INPUT FROM TAPE FILE                         
         BZ    DMD02                                                            
         OPEN  (TAPEIN,INPUT)                                                   
         LA    RF,DMD34            OVERRIDE EODAD                               
         STCM  RF,7,TINEOD                                                      
         B     DMD04                                                            
*                                                                               
DMD02    XC    DP,DP               OPEN DIRECTORY                               
         MVC   P1,=A(ISOPEN)                                                    
         MVC   P4,ISDTFA                                                        
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'D',ISNAME),ISDSN                            
*                                                                               
DMD04    MVC   LISREC,ISREC                                                     
         MVI   FLAG2,0                                                          
         TM    INPUT,TAPE          INPUT FROM TAPE FILE                         
         BZ    DMD10               NO                                           
*                                                                               
DMD06    GET   TAPEIN,ISRECH                                                    
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    DMD08               NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),STARTKEY                                                
         BL    DMD06                                                            
*                                                                               
DMD08    L     R1,TIDA             BUMP I/S TAPE READ COUNTER                   
         AHI   R1,1                                                             
         ST    R1,TIDA                                                          
         C     R1,MAXIOS           CHECK I/S READ COUNTER                       
         BH    DMD34                                                            
*                                                                               
         MVC   LISREC,ISREC                                                     
         B     DMD20                                                            
*                                                                               
DMD10    CLI   FRSTIO,C'Y'         READ FIRST I/S FILE RECORD                   
         BE    DMD14               YES - DO SEQUENTIAL READS                    
         MVI   FRSTIO,C'Y'                                                      
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    DMD12               NO                                           
         LLC   R1,STARTK           L'PROVIDED START KEY                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   LISREC(0),STARTKEY                                               
*                                                                               
DMD12    XC    DP,DP                                                            
         MVC   P1,=A(ISREAD)                                                    
         LA    R1,ISREC                                                         
         ST    R1,P2                                                            
         MVC   P4,ISDTFA                                                        
         LA    R1,LISREC                                                        
         ST    R1,P5                                                            
         L     R1,AISTRK                                                        
         ST    R1,P6                                                            
         MVI   P6,X'FF'                                                         
         GOTO1 =V(ISDDS),P1                                                     
*                                                                               
         CLI   STARTK,0            START KEY PRESENT?                           
         BE    DMD16               NO                                           
         XC    LISREC,LISREC                                                    
         B     DMD16                                                            
*                                                                               
DMD14    GOTO1 =V(ISDDS),P1,A(ISRDSEQ)                                          
*                                                                               
DMD16    TM    P3+1,X'04'          TEST FOR I/S FILE EOF                        
         BO    DMD34                                                            
         OC    P3(2),P3            TEST FOR I/S FILE READ ERROR                 
         BZ    DMD18                                                            
*                                                                               
         LARL  RE,CCBCCWL          SAVE ISDDS CCB/CCWS                          
         MVI   2(RE),C'I'                                                       
         MVC   8(136,RE),72(RD)                                                 
         LHI   R0,2                INTERNAL ERROR CODE                          
         ICM   R0,B'1100',P3       DATAMGR ERROR CODE                           
         J     ISRERR                                                           
*                                                                               
DMD18    L     RF,DIIS             BUMP DISK IN I/S COUNTER                     
         AHI   RF,1                                                             
         ST    RF,DIIS                                                          
         C     RF,MAXIOS           CHECK I/S READ COUNTER                       
         BH    DMD34                                                            
*                                                                               
DMD20    TM    LOAD,YES            EXTERNAL ROUTINE?                            
         BZ    DMD22               NO                                           
*                                                                               
         L     RF,ALOADPT                                                       
         LA    R1,PLXTRN                                                        
         MVI   0(R1),1                                                          
         CLC   =C'EOF',1(R1)                                                    
         BE    DMD22                                                            
*                                                                               
         L     RE,0(R1)                                                         
         OC    0(3,RE),0(RE)       HEADER RECORD?                               
         BZ    *+12                YES                                          
         CLI   0(RE),X'FF'         TRAILER RECORD?                              
         BNE   *+16                NO: TREAT NORMALLY                           
         TM    POINTERS,MARKDEL    !POINTER=MARKDELETE   ???                    
         BO    DMD04               YES: NEVER WRITE HDR/TRL RECORDS             
         B     DMD22               DON'T PASS THESE TO EXTERN                   
*                                                                               
         BASR  RE,RF               CALL EXTERN                                  
*                                                                               
         TM    POINTERS,MARKDEL    !POINTER=MARKDELETE   ???                    
         BZ    DMD21               NO                                           
*                                                                               
         CLI   0(R1),X'FF'         EXTERN SAYS DELETE THE POINTER?              
         BE    *+18                YES                                          
         CLC   =C'EOF',1(R1)       NO: STOP PROCESSING?                         
         BE    DMD34               YES                                          
         B     DMD04               NO, BUT DON'T WRITE TO TAPEOUT               
*                                                                               
* TRANSFORM THIS DIRECTORY RECORD INTO A DIRECTORY RECORD READY FOR             
* INPUT VIA MODE=UPDATE, AND MARK THE RECORD FOR DELETION.                      
*                                                                               
         LA    RF,ISREC                                                         
         AH    RF,ISKEYL           POINT PAST END OF MAJOR KEY                  
         TM    0(RF),STATUS_DEL    IS THE KEY ALREADY MARKED DELETED?           
         BO    DMD04               YES: NO NEED TO WRITE IT BACK                
*                                                                               
         MVI   4(RF),STATUS_DEL    MARK POINTER DELETED...                      
*                                  ...*AND RESET ALL OTHER STATUS BITS*         
*&&DO                                                                           
* UNCOMMENT THIS BLOCK IF WE WANT TO LEAVE THE BITS ON CONTAINING THE           
* LOGICAL FILE NUMBER.                                                          
* IF WE EVER MAKE THIS CODE PERMANENT:                                          
*  1. REMOVE THE MVI INSTRUCTION JUST BEFORE THIS BLOCK.                        
*  2. CHANGE THE UPDATE LOGIC TO TURN OFF THE FILE NUMBER BITS BEFORE           
*      WRITING OUT A DELETED POINTER. THIS MIGHT NOT BE NECESSARY, BUT          
*      IT WILL GUARANTEE TRANSPARENCY FROM WHAT DATAMGR GETS NOW.               
         MVC   4(1,RF),0(RF)            COPY ENTIRE STATUS BYTE                 
         OI    4(RF),STATUS_DEL         SET DELETE BIT ON                       
         NI    4(RF),X'FF'-STATUS_EXTP  RESET EXTENDED PASSIVE BIT              
*&&                                                                             
*                                                                               
         XC    0(2,RF),0(RF)       CLEAR MINOR KEY                              
         MVC   2(2,RF),EFFS        INDICATE PASSIVE                             
         LA    RF,TIDEL            TAPE IN DELETED COUNTER                      
         L     RE,0(RF)                                                         
         AHI   RE,1                                                             
         ST    RE,0(RF)            INCREMENT DELETED RECORDS                    
         B     DMD22                                                            
*                                                                               
DMD21    DS    0H                                                               
         CLI   0(R1),X'FF'         EXTERN SAYS DELETE RECORD?                   
         BNE   DMD22               NO                                           
         CLC   =C'EOF',1(R1)       YES: STOP PROCESSING ALSO?                   
         BE    DMD34               YES                                          
*                                                                               
         LA    RF,DIISD            DISK IN DELETED COUNTER                      
         TM    INPUT,TAPE                                                       
         BO    *+8                                                              
         LA    RF,TIDEL            TAPE IN DELETED COUNTER                      
         L     RE,0(RF)                                                         
         AHI   RE,1                                                             
         ST    RE,0(RF)            INCREMENT DELETED RECORDS                    
         B     DMD04                                                            
*                                                                               
DMD22    TM    CHECK,PRTALL        PASS CONTROL TO I/S PRINT                    
         BZ    *+8                                                              
         BRAS  RE,RECVAL                                                        
*                                                                               
         LH    R1,ISKEYL1          CHECK SEQUENCE OF I/S RECORDS                
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),LISREC     CHECK SEQUENCE                               
         BH    DMD28                                                            
         BL    DMD24                                                            
*                                                                               
         MVC   P(21),=CL21'WARNING DUP KEY I/S ='                               
         L     R1,DUPKEY                                                        
         AHI   R1,1                                                             
         ST    R1,DUPKEY                                                        
         B     DMD26                                                            
*                                                                               
DMD24    MVC   P(21),=CL21'WARNING SEQ ERR I/S ='                               
         L     R1,SEQERR                                                        
         AHI   R1,1                                                             
         ST    R1,SEQERR                                                        
*                                                                               
DMD26    LH    R0,ISRECL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
         MVC   ISREC,LISREC                                                     
         B     DMD04                                                            
*                                                                               
DMD28    DS    0H                                                               
         CLI   ENDK,0              END KEY PRESENT?                             
         BE    DMD30               NO                                           
         LLC   R1,ENDK             L'PROVIDED END KEY                           
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),ENDKEY                                                  
         BH    DMD34                                                            
*                                                                               
DMD30    DS    0H                                                               
         TM    POINTERS,MARKDEL    !POINTER=MARKDELETE   ???                    
         BO    DMD33               YES: SKIP STUFF THAT CAN'T HANDLE...         
*                                  ...THESE RESTRUCTURED KEYS                   
*                                                                               
         TM    POINTERS,UNATTACH   DUMP UNATTACHED PASSIVES ONLY?               
         BZ    DMD30D              NO                                           
         LA    RF,ISREC                                                         
         AH    RF,ISKEYL           POINT PAST END OF MAJOR KEY                  
         MVC   BYTE,0(RF)          PICK UP ENTIRE STATUS BYTE                   
         TM    BYTE,STATUS_FILE#   IS THERE A LOGICAL FILE NUMBER?              
         BNZ   DMD04               YES: DON'T DUMP THIS ONE                     
         MVC   0(4,RF),1(RF)       REFORMAT THE RECORD SO IT LOOKS...           
         MVC   4(1,RF),BYTE        ...LIKE IT CAME FROM A FILE DUMP             
         B     DMD33               DUMP THIS PASSIVE                            
*                                                                               
DMD30D   DS    0H                                                               
         CLI   NEWDEMO,0           NEW FORMAT?                                  
         BE    DMD31               NO                                           
         LA    RF,ISREC                                                         
         AH    RF,ISKEYL                                                        
         MVC   BYTE,0(RF)          CHECK DIRECTORY RECORD IS FOR FILE           
         NI    BYTE,STATUS_FILE#   ISOLATE LOGICAL FILE NUMBER                  
         CLC   NEWDEMO,BYTE                                                     
         BNE   DMD04                                                            
*                                                                               
DMD31    DS    0H                                                               
         TM    COUNT,YES           PASS CONTROL TO DIR COUNT ROUTINE            
         BZ    DMD33                                                            
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DMD33                                                            
         MVI   PLCOUNT,1                                                        
         GOTO1 (RF),PLCOUNT                                                     
*                                                                               
DMD33    DS    0H                                                               
         LH    RF,ISRECL           WRITE I/S DUMP TAPE RECORD                   
         AHI   RF,4                                                             
         SLL   RF,16                                                            
         ST    RF,ISRECH                                                        
         PUT   TAPEOUT,ISRECH                                                   
*                                                                               
         L     RF,TOIS                                                          
         AHI   RF,1                                                             
         ST    RF,TOIS                                                          
*                                                                               
         TM    TCOPY,TAPE          ADDITIONAL COPY?                             
         BZ    DMD04               NO                                           
         PUT   TAPECOPY,ISRECH                                                  
*                                                                               
         L     RF,TOCIS                                                         
         AHI   RF,1                                                             
         ST    RF,TOCIS                                                         
         B     DMD04                                                            
*                                                                               
DMD34    DS    0H                                                               
         CLOSE TAPEOUT             CLOSE TAPES                                  
*                                                                               
         TM    TCOPY,TAPE                                                       
         BZ    DMD36                                                            
         CLOSE TAPECOPY                                                         
*                                                                               
DMD36    TM    INPUT,TAPE                                                       
         BZ    DMD38                                                            
         CLOSE TAPEIN                                                           
*                                                                               
DMD38    TM    LOAD,YES            PASS CONTROL TO EXTERNAL AT EOF              
         BZ    DMD40                                                            
         MVI   PLXTRN,X'FF'                                                     
         CLC   PLXTRN+1(3),=C'EOF' TEST FOR EOF ALREADY SET                     
         BE    DMD40                                                            
         GOTO1 ALOADPT,PLXTRN                                                   
         MVC   PLXTRN+1(3),=C'EOF' SET EOF                                      
*                                                                               
DMD40    MVC   P(9),=C'I/S FILE '  SET I/S FILE MSG                             
         MVC   P+9(7),ISNAME                                                    
         MVC   P+17(4),=C'DSN='                                                 
         MVC   P+21(44),ISDSN                                                   
*                                                                               
         MVC   P+65(7),=C'DUMPED ' SET ACTION                                   
         TM    INPUT,TAPE          SET TAPE IN MSG                              
         BO    *+16                                                             
         MVC   P+4(4),=C'TAPE'                                                  
         MVC   P+65(7),=C'COPIED '                                              
*                                                                               
         GOTO1 =V(SQUASHER),DMCB,P,L'P                                          
         GOTO1 =V(PRINTER)         PRINT ACTION MSG                             
*                                                                               
         BRAS  RE,PRT_IS_STATS     PRINT I/S FILE SIZE STATISTICS               
*                                                                               
         TM    COUNT,YES           FINAL CALL OF DIR COUNT ROUTINE              
         BZ    DMD50                                                            
         ICM   RF,15,VLDCOUNT                                                   
         BZ    DMD50                                                            
         MVI   PLCOUNT,X'FF'                                                    
         GOTO1 (RF),PLCOUNT,,ISNAME                                             
*                                                                               
DMD50    DS    0H                                                               
         TM    POINTERS,MARKDEL+UNATTACH     SPECIAL PASSIVE HANDLING?          
         BNZ   DMD90               YES: DON'T CHECK FOR DUPLICATE KEYS          
*                                                                               
* CHECK FOR DUPLICATE DISK ADDRESSES IN THE DUMPED DIRECTORY DATASET.           
* DYNAMICALLY ALLOCATE EVERYTHING THIS ICETOOL CALL NEEDS, SO THAT WE           
* DON'T HAVE TO CHANGE ANY OPS JCL.                                             
*                                                                               
* //DFSMSG   DD SYSOUT=*                                                        
* //TOOLMSG  DD SYSOUT=*                                                        
* //SHOWDUPS DD SYSOUT=*                                                        
* //DUPDIRS  DD UNIT=SYSDA,SPACE=(TRK,(500,100)),DCB=(BUFNO=2)                  
* //T1       DD UNIT=SYSDA,SPACE=(CYL,(500,200)),DCB=(BUFNO=2),                 
* //           STORCLAS=SCTEMP,DATACLAS=DCTEMP,DISP=NEW                         
* //COP1CNTL DD UNIT=SYSDA,SPACE=(TRK,(5,0)),DCB=(BUFNO=2)                      
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'DFSMSG'),(X'80',SPACES)            
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'TOOLMSG'),(X'80',SPACES)           
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'SHOWDUPS'),(X'80',SPACES)          
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'DUPDIRS'),                +        
               (X'80',=AL3(500,100)),0                                          
         MVIY  TXTDISP,DISPNEW                                                  
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'T1'),                     +        
               (X'48',=AL3(500,200)),0,0,A(TXTUNTS1)                            
         GOTO1 =V(DYNALLOC),DMCB,(X'40',=CL8'COP1CNTL'),               +        
               (X'80',=AL3(5,0)),0                                              
*                                                                               
* POPULATE THE DFSORT INPUT CONTROL CARD DATASETS (SO THAT THE CONTROL          
* CARDS RESIDE IN THIS PROGRAM, AS OPPOSED TO AN EXTERNAL LOCATION).            
*                                                                               
         OPEN  (COP1CNTL,(OUTPUT))  DFSORT CONTROL CARDS                        
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         LA    R0,=CL80' OPTION SDB=INPUT'          FOR EFFICIENCY              
         PUT   COP1CNTL,(R0)                                                    
         LA    R0,=CL80' OMIT COND=(24,4,BI,EQ,X''00000000'',OR,23,1,BI+        
               ,BO,X''40'')'       IGNORE PASSIVES                              
         PUT   COP1CNTL,(R0)                                                    
         LA    R0,=CL80' OUTFIL BUILD=(5,23),VTOF'  FOR EFFICIENCY              
         PUT   COP1CNTL,(R0)                                                    
         CLOSE COP1CNTL                                                         
*                                                                               
         LA    R1,ICEPAR1          CALL ICETOOL WITH PARAMETER LIST             
         LINK  EP=ICETOOL                                                       
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                FATAL ICETOOL ERROR                          
         CP    SEL1#OUT,=P'0'      ANY DUPLICATES FOUND?                        
         BE    DMD90               NO                                           
*                                                                               
         MVC   DUB,SEL1#OUT                                                     
         CVB   R0,DUB              REPORT THE NUMBER OF DUPS...                 
         ST    R0,DUPDSKAD         ...AND SEE THE SHOWDUPS OUTPUT LIST          
*                                                                               
DMD90    DS    0H                                                               
         BRAS  RE,PRTCTRS          PRINT COUNTERS                               
*                                                                               
         J     EXITOK                                                           
         SPACE 3                                                                
ICEPAR1  DC    A(0)                ICETOOL PARAMETER LIST                       
         DC    A(COPSA0L)          A(COPY STATEMENT)                            
         DC    A(0)                A(COPY RETURN AREA)                          
         DC    A(SELSA1L)          A(SELECT STATEMENT)                          
         DC    A(SELRA1L)          A(SELECT RETURN AREA)                        
         DC    A(DISSA1L)          A(DISPLAY STATEMENT)                         
         DC    A(0)                A(DISPLAY RETURN AREA)                       
         DC    X'FFFFFFFF'         EOL                                          
*                                                                               
* FIND DUMPED DIRECTORY RECORDS WITH DUPLICATE DISK ADDRESSES.                  
*                                                                               
COPSA0L  DC    AL2(COPSA0E-COPSA0S)  L'STATEMENT AREA                           
COPSA0S  DC    CL80'COPY FROM(TAPEOUT) TO(T1) USING(COP1)'                      
COPSA0E  EQU   *                                                                
*                                                                               
SELSA1L  DC    AL2(SELSA1E-SELSA1S)  L'STATEMENT AREA                           
SELSA1S  DC    CL80'SELECT FROM(T1) TO(DUPDIRS) ON(19,5,BI) ALLDUPS'            
SELSA1E  EQU   *                                                                
*                                                                               
SELRA1L  DC    AL2(SELRETNE-SEL1STAT)                                           
SEL1STAT DS    AL1                 SELECT OPERATION STATUS                      
SEL1#IN  DS    PL8                 # RECORDS PROCESSED                          
SEL1#OUT DS    PL8                 # RECORDS SELECTED                           
SELRETNE EQU   *                                                                
*                                                                               
* PRINT A LISTING OF THE DUPLICATE KEYS FOR ANALYSIS. NOTE: THE ABSENCE         
* OF A TITLE AND COLUMN HEADINGS IS DELIBERATE. THAT WAY, IF THERE ARE          
* NO RECORDS TO PRINT, THE SHOWDUPS SYSOUT DATASET WILL NOT APPEAR IN           
* THE (E)JES OUTPUT AT ALL.                                                     
*                                                                               
DISSA1L  DC    AL2(DISSA1E-DISSA1S)  L'STATEMENT AREA                           
DISSA1S  DC    CL80'DISPLAY FROM(DUPDIRS) LIST(SHOWDUPS) -'                     
         DC    CL80' BLANK NOHEADER ON(1,23,HEX) ON(1,23,CH)'                   
DISSA1E  EQU   *                                                                
*                                                                               
DUMPDIRXX EQU  *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* INITIALISE AND OPEN FILES                                           *         
***********************************************************************         
*                                                                               
IOINIT   NTR1  BASE=(*,IOINITX),LABEL=*                                         
         L     R2,VLDDEFN          POINT TO FILE DEFINITION CSECT               
         USING LDDEFND,R2                                                       
*                                                                               
         L     R1,LDDDTFDA         EXTRACT D/A FILE INFO FROM DTF               
         USING DTFPHD,R1                                                        
         ST    R1,DADTFA                                                        
         MVC   DANAME(7),DAFILEID                                               
         TM    DIND,X'03'          TEST D/A FILE IS INDEXED                     
         BO    *+6                                                              
         DC    H'0'                                                             
         MVC   DTFFID,DAFILEID     FIX D/A FILE NAME                            
         MVC   DAKEYLL,DKEYLNL     SET L'MAJOR/MINOR KEYS FROM DTF              
         MVC   DAKEYLR,DKEYLNR                                                  
         LH    RE,DAKEYLL                                                       
         AH    RE,DAKEYLR                                                       
         STH   RE,DAKEYT           SET TOTAL LENGTH OF D/A KEY                  
*                                                                               
***********************************************************************         
* ALL D/A DEMO FILES ARE DEFINED WITH CACHE=NO.                       *         
* WHEN LOADING, WE WANT CACHE ON, SO MUST TURN OFF BIT IN DTF         *         
*   ==> BEFORE <== THE FILE IS OPENED.                                *         
***********************************************************************         
*                                                                               
         NI    DTFTYPE,X'FF'-DTFCACHE                                           
*                                                                               
         NI    DTFOPEN,X'FF'-ISFORO  ASSUME OPEN IS FOR UPDATE                  
         TM    OUTPUT,TAPE           IS THIS A FILE OR DIRECTORY DUMP?          
         BZ    *+8                                                              
         OI    DTFOPEN,ISFORO        YES: OPEN D/A FILE READONLY                
         DROP  R1                                                               
*                                                                               
         L     R1,LDDDTFIS         EXTRACT I/S FILE INFO FROM DTF               
         USING ISDTF,R1                                                         
         ST    R1,ISDTFA                                                        
         MVC   ISNAME(7),ISFILEID                                               
         MVC   ISFFID,ISFILEID     FIX I/S FILE NAME                            
*                                                                               
         NI    ISFOPEN,X'FF'-ISFORO  ASSUME OPEN IS FOR UPDATE                  
         TM    OUTPUT,TAPE           IS THIS A FILE OR DIRECTORY DUMP?          
         BZ    *+8                                                              
         OI    ISFOPEN,ISFORO        YES: OPEN I/S FILE READONLY                
*                                                                               
         MVC   ISKEYL,ISKEYLN      L'KEY                                        
         MVC   ISKEYL1,ISKEYLN1    L'KEY MINUS 1                                
         MVC   ISRECL,ISRECLN      L'I/S RECORD                                 
*                                                                               
         TM    ISCMPRSW,X'40'      TEST ADD=NO DEFINED IN ISDTF                 
         BZ    IOINIT10                                                         
         LARL  RF,ISADDBUF         YES - FUDGE I/S DTF FOR ADD=YES              
         ST    RF,ISBUFF1                                                       
         AH    RF,ISPDLN                                                        
         BCTR  RF,0                                                             
         ST    RF,ISBUFF1X                                                      
         LA    RF,1(RF)                                                         
         ST    RF,ISBUFF2                                                       
         NI    ISCMPRSW,X'FF'-X'40'                                             
*                                                                               
IOINIT10 MVC   DAELD,LDDELD        EXTRACT D/A FILE INFO FROM DEFN              
         MVC   DALINKD,LDDLINKD                                                 
         MVC   DAKEYL,LDDKEYL                                                   
         MVC   DACTLL,LDDCTLL                                                   
         MVC   DAMIN,LDDMIN                                                     
         OC    DAMIN,DAMIN         DEFAULT MIN REC LEN                          
         BNZ   *+10                                                             
         MVC   DAMIN,DAELD                                                      
         MVC   DAMAX,LDDMAX                                                     
*                                                                               
* WHEN A RECORD IS READ BY AN APPLICATION, DATAMGR CLEARS TWO BYTES             
* AFTER THE END OF THE ACTUAL RECORD AS A PRECAUTION. IF THE CALLER'S           
* I/O BUFFER LENGTH IS THE SAME AS THE MAXIMUM RECORD LENGTH, AND IF            
* THE RECORD ITSELF IS AT THE MAX RECLEN, THEN DATAMGR WILL BLOW AWAY           
* THE CALLER'S STORAGE RIGHT AFTER THE I/O BUFFER. SO AS A PRECAUTION,          
* WE LIMIT THE ACTUAL MAX RECLEN TO BE 2 BYTES LESS THAN THE TRUE               
* PERMISSABLE MAXIMUM RECORD LENGTH.                                            
*                                                                               
         LH    R0,DAMAX            MAX RECLEN FROM FILE DEFINITION              
         SHI   R0,2                LEAVE ROOM FOR DATAMGR TO CLEAR...           
         STH   R0,DAMAX            ...2 BYTES AT THE END-OF-RECORD              
*                                                                               
         DROP  R1,R2                                                            
         XC    ISREC,ISREC                                                      
*                                                                               
         LA    R0,DAREC                                                         
         LHI   R1,DARECL                                                        
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         JNO   *+6                                                              
         DC    H'0'                DIE ON DESTRUCTIVE MOVE                      
*                                                                               
         LARL  RE,CCBCCWL                                                       
         MVI   2(RE),C'*'                                                       
         LARL  R1,COUNTERS         RESET RECORD COUNTERS                        
IOINIT20 CLI   0(R1),X'FF'                                                      
         BE    *+18                                                             
         XC    0(4,R1),0(R1)                                                    
         LA    R1,L'COUNTERS(R1)                                                
         B     IOINIT20                                                         
*                                                                               
         GOTO1 =V(PRINTER)         PRINT ACTION MESSAGE HEADER                  
         MVC   P(15),=C'ACTION MESSAGES'                                        
         BASR  RE,RF                                                            
         MVC   P(15),HYPHENS                                                    
         BASR  RE,RF                                                            
         J     EXITOK                                                           
IOINITX  EQU   *                                                                
         DROP  RB                                                               
         EJECT                                                                  
PROGINIT NTR1  BASE=(*,PROGINITX),LABEL=*                                       
*                                                                               
***********************************************************************         
* INITIALISATION                                                      *         
*                                                                     *         
* SOME PARAMETER CARDS ARE VALIDATED IN THIS ROUTINE, *BEFORE* THE    *         
* GENERAL CARD VALIDATION IN THE CARDVAL ROUTINE. THAT'S BECAUSE IT'S *         
* MANDATORY THAT THE FOLLOWING CONTROL CARDS BE HONORED PRIOR TO      *         
* DDSIO BEING LOADED:                                                 *         
*  DDSIO=                                                             *         
*  DSPACE=                                                            *         
*  ISDTF=                                                             *         
* THESE CARDS MUST APPEAR BEFORE ALL OTHERS. (THE SEQUENCE OF THESE   *         
* CARDS AMONGST THEMSELVES IS IRRELEVANT.)                            *         
*                                                                     *         
***********************************************************************         
*                                                                               
*======================================================================         
* THIS OVERRIDES THE DEFAULT LOADED VERSION OF DDSIO. NOTE THAT IF              
* THERE IS A DDSIO= CARD PRESENT, IT WILL BE HONORED, AND THE CODE              
* BELOW WILL HAVE NO EFFECT.                                                    
*                                                                               
*********L     RF,=V(DDSIO)        RF = A(NAME OF DDSIO LOAD MODULE)            
*********MVC   0(8,RF),=C'DDSIODE '   *** TEMPORARY ***                         
*                                                                               
*======================================================================         
*                                                                               
         TIME  BIN                                                              
         ST    R0,STRTTIME         REMEMBER WHAT TIME WE STARTED                
*                                                                               
         LA    R2,FULL                                                          
         EXTRACT (2),'S',FIELDS=(ASID)                                          
         LA    R1,FULL                                                          
         L     R2,0(R1)                                                         
         LOCASCB ASID=(R2)         GET ASCB ADDRESS INTO R1                     
         L     R2,ASCBASSB-ASCB(R1) R2 = A(ASSB)                                
         SAM31 ,                   SWITCH TO 31-BIT MODE                        
         L     R1,ASSBJSAB-ASSB(R2) R1 = A(JSAB)                                
         MVC   MAILJOB#,JSABJBID-JSAB(R1)  JOBID (E.G., JOB12345)               
         SAM24 ,                   SWITCH BACK TO 24-BIT MODE                   
         LA    R2,FULL                                                          
         EXTRACT (2),FIELDS=TIOT                                                
         L     R2,FULL                                                          
         MVC   MAILJOBN,0(R2)      JOBNAME                                      
*                                                                               
         L     R1,FLCCVT-PSA(,0)   GET A(CVT)                                   
         L     R1,X'C4'(R1)        R1=A(SMCA) FROM CVT                          
         MVC   TITLE(3),X'10'(R1)  CPU IS C'XXXX' FROM SMCASID                  
         MVI   TITLE+4,C'-'                                                     
         MVC   TITLE+6(35),=C'DEMOFILE LOAD/DUMP/UPDATE LOG: JOB '              
         MVC   TITLE+41(8),MAILJOBN                                             
         MVC   TITLE+49(2),=C'(J'                                               
         MVC   TITLE+51(5),MAILJOB#+3                                           
         MVI   TITLE+56,C')'                                                    
*                                                                               
         L     RF,PSATOLD-PSA(,0)     TCB ADDRESS                               
         L     RF,TCBJSTCB-TCB(,RF)   A(FIRST JOB STEP TCB)                     
         L     RF,TCBJPQ-TCB(,RF)     A(LAST CDE FOR JPA CONTROL QUEUE)         
         MVC   DUB,CDNAME-CDENTRY(RF) THIS LOAD MODULE NAME                     
*                                                                               
         CLC   =C'DELD',DUB        IS THE LOAD MODULE PREFIX "DELD"?            
         BNE   *+12                                                             
         MVI   WHICHMOD,DELD                                                    
         B     PROGI05                                                          
         CLC   =C'PVLD',DUB        IS THE LOAD MODULE PREFIX "PVLD"?            
         BNE   *+12                                                             
         MVI   WHICHMOD,PVLD                                                    
         B     PROGI05                                                          
         CSVQUERY INEPNAME=ASMIDF  IS ASMIDF LOADED?                            
         LTR   RF,RF                                                            
         BZ    PROGI05             YES: WE'RE RUNNING UNDER IDF                 
         DC    H'0'                WHAT LOAD MODULE IS THIS ?!?                 
*                                                                               
PROGI05  DS    0H                                                               
         ICM   R2,15,VLDDEFN       POINT TO FILE DEFINITION CSECT               
         BNZ   *+6                                                              
         DC    H'0'                                                             
         USING LDDEFND,R2                                                       
*                                                                               
         L     RE,=V(UTL)                                                       
         MVC   4(1,RE),LDDSYSID    SET SYSTEM NUMBER IN UTL                     
*                                                                               
         ZAP   LINE,=P'99'                                                      
         MVC   P(15),=CL15'PARAMETER CARDS'                                     
         GOTO1 =V(PRINTER)                                                      
         MVC   P(15),HYPHENS                                                    
         BASR  RE,RF                                                            
*                                                                               
PROGI10  DS    0H                                                               
         GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
         CLI   C,C'*'                                                           
         BE    PROGI20                                                          
*                                                                               
         CLC   C(6),=C'DDSIO='     DDSIO=XXXXXX                                 
         BNE   *+18                                                             
         L     RF,=V(DDSIO)        RF = A(NAME OF DDSIO LOAD MODULE)            
         MVC   0(8,RF),C+6                                                      
         B     PROGI20                                                          
*                                                                               
         CLC   =C'DSPACE=',C       DSPACE=X                                     
         BNE   *+20                                                             
         LARL  RF,SSB                                                           
         MVC   SSODSPAC-SSOOFF(1,RF),C+7                                        
         B     PROGI20                                                          
*                                                                               
         CLC   =C'ISDTF=',C        I/S DTF FILE NUMBER                          
         BNE   PROGI30                                                          
         LA    R0,LDDDTFIS+3                                                    
         ST    R0,DMCBW2           (BECAUSE LDDDTFIS IS AN A-TYPE)              
         GOTO1 =V(HEXIN),DMCB,C+6,,2                                            
         CLC   =F'1',DMCBW4                                                     
         BNE   PROGI50             INVALID ISDTF= PARAMETER VALUE               
*                                                                               
PROGI20  DS    0H                                                               
         L     RF,=A(CVTIP)                                                     
         MVC   P(L'CVTIP),0(RF)    PRINT SPECIAL CARD                           
         MVC   P+L'CVTIP(L'C),C                                                 
         GOTO1 =V(PRINTER)                                                      
         B     PROGI10                                                          
*                                                                               
PROGI30  DS    0H                                                               
*                                                                               
* THE PARAMETER CARD JUST READ, AS WELL AS ALL REMAINING PARAMETER              
* CARDS, WILL BE PROCESSED IN THE CARDVAL ROUTINE.                              
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'A',=C'LOADLIB '),0                          
         CLI   DMCB+4,0            IS LOADLIB DD STATEMENT PRESENT?             
         BE    PROGI31             NO (BUT IT REALLY OUGHT TO BE!)              
*                                                                               
         GOTO1 =V(LOADER),DMCB,=C'T00AD1  ',0                                   
         ICM   RE,15,4(R1)         GET A(DEMTABS)                               
         BNZ   *+6                                                              
         DC    H'0'                                                             
         ST    RE,LDEMTABS                                                      
         GOTO1 (RF),(R1),=C'T00AD2  ',0                                         
         ICM   RE,15,4(R1)         GET A(DEMTABOF)                              
         BNZ   *+6                                                              
         DC    H'0'                                                             
         ST    RE,LDEMTBOF                                                      
*                                                                               
PROGI31  DS    0H                                                               
         GOTO1 =V(DATCON),DMCB,(5,0),(10,DATEVAL)    TODAY: MM/DD/YY            
         GOTO1 (RF),(R1),(4,DATEVAL),(X'20',DATEYMD) GOOD UNTIL 2059            
*                                                                               
         ICM   R0,15,LDDDTFIS      GET ISFILE INTERNAL NUMBER                   
         BZ    PROGI50             MISSING ISDTF= PARAMETER CARD                
*                                                                               
         STC   R0,ISDTF#           SAVE INTERNAL I/S FILE NUMBER                
         BRAS  RE,GETFILAD                                                      
         ST    R0,LDDDTFIS         SET DTF ADDRESS                              
*                                                                               
         CLI   WHICHMOD,DELD       IS THIS DELD?                                
         BE    PROGI33             YES                                          
         CLI   WHICHMOD,PVLD       IS THIS PVLD?                                
         BNE   PROGI37             NO: WE'RE PRESUMABLY RUNNING IDF             
*                                                                               
         CLI   ISDTF#,PAVDIR#                                                   
         BE    PROGI37                                                          
         CLI   ISDTF#,NTIDIR#                                                   
         BNE   PROGI50             PVLD IS ONLY FOR NTIDIR AND PAVDIR!          
*                                                                               
         MVI   CHKNTIPG,C'Y'       MUST CHECK NTI PROGRAM NUMBERS               
         ICM   R0,15,=V(LDCOUNTN)  NTIDIR USES DIFFERENT COUNT MODULE           
         BZ    *+8                  (TEMPORARY: IT'S NOT READY YET)             
         ST    R0,VLDCOUNT         USE IT INSTEAD OF THE DEFAULT                
         B     PROGI37                                                          
*                                                                               
PROGI33  DS    0H                  MAKE SURE I/S FILE IS VALID FOR DELD         
         CLI   ISDTF#,DEMDIRA#                                                  
         BE    PROGI37                                                          
         CLI   ISDTF#,DEMDIRN#                                                  
         BE    PROGI37                                                          
         CLI   ISDTF#,DEMDIRR#                                                  
         BNE   PROGI50             DELD IS ONLY FOR THE DEMDIRA/N/R !           
*                                                                               
PROGI37  DS    0H                                                               
         ICM   R0,15,LDDDTFD1                                                   
         BZ    *+8                                                              
         BRAS  RE,GETFILAD                                                      
         ST    R0,LDDDTFD1         SET DTF ADDRESS                              
*                                                                               
         ICM   R1,15,LDDDTFDA                                                   
         BZ    *+10                                                             
         MVC   DAFILEIX(7),DTFFID-DTFPHD(R1) INITIALISE D/A FILE ID             
         ICM   R1,15,LDDDTFIS                                                   
         BZ    *+10                                                             
         MVC   ISFILEIX(7),ISFFID-ISDTF(R1)  INITIALISE I/S FILE ID             
         B     PROGI60                                                          
*                                                                               
PROGI50  DS    0H                                                               
         MVC   P(40),=C'**ERROR** MISSING OR INVALID ISDTF= CARD'               
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
PROGI60  DS    0H                                                               
*                                  SET STXITER DUMP ADDRESSES                   
         MVC   STXLST(4),=A(DELDXMOD)                                           
         MVC   STXLST+4(4),=V(DUMMY)                                            
*                                                                               
         LHI   R0,PTRBLKLN                                                      
         BRAS  RE,GETMAIN                                                       
         ST    R1,APTRBLK                                                       
         ST    R1,PLCPTRS+4        SET IN PLCPTRS PARAM LIST                    
         ST    R1,STXLST+8                                                      
         ST    R0,STXLST+12                                                     
*                                                                               
         L     R0,TRKBUFLN                                                      
         BRAS  RE,GETMAIN                                                       
         ST    R1,AISTRK           SET A(I/S TRACK BUFFER)                      
         ST    R1,STXLST+16                                                     
         ST    R0,STXLST+20                                                     
*                                                                               
         L     R0,TRKBUFLN                                                      
         BRAS  RE,GETMAIN                                                       
         ST    R1,ADATRK           SET A(D/A TRACK BUFFER)                      
         ST    R1,STXLST+24                                                     
         ST    R0,STXLST+28                                                     
         MVI   STXLST+28,X'80'     END-OF-LIST PARAMETER LIST MARKER            
*                                                                               
         J     EXIT                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO GET STORAGE                                              *         
* NTRY: R0 = LENGTH REQUESTED                                         *         
* EXIT: R1 = A(STORAGE OBTAINED)                                      *         
***********************************************************************         
*                                                                               
GETMAIN  NTR1                                                                   
         GETMAIN RU,LV=(0),BNDRY=PAGE                                           
         LTR   RF,RF                                                            
         BNZ   GMFAIL                                                           
         XIT1  REGS=(R0,R1)                                                     
*                                                                               
GMFAIL   DS    0H                                                               
         WTO   'DELDXMOD GETMAIN FAILURE - SEE RF FOR RC'                       
         ABEND 921,DUMP                                                         
PROGINITX EQU  *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO GET ADDRESS OF DTF                                       *         
* ON ENTRY, R0 = DTF#                                                 *         
***********************************************************************         
*                                                                               
GETFILAD NTR1  BASE=(*,GETFILADX),LABEL=*                                       
*                                                                               
         CHI   R0,255              TEST DTF ADDRESS PRESENT                     
         JNH   *+6                 NO, IT'S A FILEID NUMBER                     
         DC    H'0'                                                             
*                                                                               
         L     RE,=V(UTL)                                                       
         MVC   DMCBW3+3(1),4(RE)   SET SYSTEM NUMBER                            
         GOTO1 =V(DATAMGR),DMCB,(0,=C'DMREAD'),=C'SYSFLES '                     
*                                                                               
         USING SYSFLSTD,RE                                                      
         L     RE,DMCBW4           GET ADDRESS OF SYSTEM FILE LIST              
         LH    RF,SYSF#FLS         NUMBER OF FILES                              
         LA    RE,SYSFLIST         POINT TO FIRST FILE                          
*                                                                               
         CLM   R0,1,SYSFILE#       MATCH FILE NUMBER                            
         BE    *+14                                                             
         LA    RE,SYSFLNQ(RE)      BUMP TO NEXT ENTRY                           
         BCT   RF,*-12                                                          
         DC    H'0'                                                             
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,7,SYSFADTF       DTF ADDRESS IN R0                            
         DROP  RE                                                               
*                                                                               
         XIT1  REGS=(R0)                                                        
GETFILADX EQU  *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* READ/PRINT/VALIDATE A SET OF PARAMETER CARDS                        *         
***********************************************************************         
*                                                                               
CARDVAL  NTR1  BASE=*,LABEL=*                                                   
         LAY   RA,4096(,RB)                                                     
         USING (CARDVAL+4096,CARDVALX),RA                                       
*                                                                               
         MVI   BADPARMS,C'N'                                                    
         MVC   MAXIOS,=X'7FFFFFFF'                                              
         MVC   PARMCARD,SPACES                                                  
         MVC   STATCARD,SPACES                                                  
         MVC   DAFILEID,DAFILEIX                                                
         MVC   ISFILEID,ISFILEIX                                                
         XC    SELVAL,SELVAL                                                    
         MVI   BTYPE,0                                                          
         MVI   MEDIA,0                                                          
*                                                                               
* FIELD C ALREADY CONTAINS A PARAMETER CARD. THE PROGINIT ROUTINE HAS           
* ALREADY READ CRITICAL PARAMETER CARDS WHICH MUST APPEAR *BEFORE* THE          
* FIRST CALL TO DATAMGR (E.G., DDSIO=). FIELD C CONTAINS THE FIRST              
* PARAMETER CARD WHICH MAY BE PROCESSED *AFTER* THE FIRST CALL TO               
* DATAMGR.                                                                      
*                                                                               
* NOTE THAT FIELD C MAY CONTAIN MORE THAN ONE PARAMETER, E.G.:                  
*     IS=DEMDIRX,DA=DEMFILX                                                     
* THIS IS PERMISSABLE UNLESS ONE OF THE PARAMETERS IS FLAGGED AS BEING          
* ACCEPTABLE ONLY IF IT IS THE *ONLY* PARAMETER ON THE CARD. IN SINGLE-         
* PARM PARAMETER CARDS, EMBEDDED SPACES IN THE PARAMETER ARE OKAY.              
* OTHERWISE, THE FIRST BLANK IS CONSIDERED TO TERMINATE THE PARAMETER           
* CARD.                                                                         
*                                                                               
         B     CVAL03                                                           
*                                                                               
CVAL02   GOTO1 =V(CARDS),DMCB,C,=C'RE00'                                        
*                                                                               
CVAL03   DS    0H                                                               
         CLC   =C'/*',C                                                         
         BE    CVAL38              NO MORE CARDS TO READ                        
*                                                                               
         MVC   P,SPACES            PRINT OUT CARD AS INPUT BY APP               
         MVC   P(L'CVTIP),CVTIP                                                 
         MVC   P+L'CVTIP(L'C),C                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         CLI   C,C'*'              IF FIRST CHARACTER IS AN ASTERISK...         
         BE    CVAL02              ...IT'S A COMMENT                            
*                                                                               
         LA    R0,DAREC            CLEAR DAREC                                  
         LHI   R1,DARECL                                                        
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         JNO   *+6                                                              
         DC    H'0'                DIE ON DESTRUCTIVE MOVE                      
*                                                                               
         LA    R3,DAREC            USE DAREC TO SCAN IN LINES                   
         USING SCANBLKD,R3                                                      
*                                                                               
         LA    R2,PRMTAB           SEE IF CARD IS A SINGLE PARAMETER            
         USING PRMTABD,R2                                                       
CVAL04   CLI   0(R2),X'FF'         EOT?                                         
         BE    CVAL10                                                           
         TM    PRMFLAG,PRMFSGL     PARAMETER VALID AS SINGLE ENTRY?             
         BZ    CVAL06              NO                                           
*                                                                               
         LLC   RF,PRMMAXL                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   C(0),PRMNAME                                                     
         BE    CVAL08                                                           
*                                                                               
         LLC   RF,PRMMINL                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   C(0),PRMNAME                                                     
         BE    CVAL08                                                           
*                                                                               
CVAL06   AHI   R2,PRMTABLQ         NEXT ENTRY                                   
         B     CVAL04                                                           
*                                                                               
CVAL08   DS    0H                  TREAT AS SINGLE-PARAMETER CARD               
         LA    R1,C+L'C-1          R1 = A(LAST BYTE OF INPUT CARD)              
         LA    R0,L'C                                                           
         CLI   0(R1),C' '          WORK OUT L'INPUT DATA                        
         BNE   *+10                                                             
         BCTR  R1,0                SCAN BACKWARDS FOR *FINAL* BLANK             
         BCT   R0,*-10                                                          
         STC   R0,CFLDHDR+5        SET INPUT LENGTH IN FAKE TWA FLDHDR          
*                                                                               
         GOTO1 =V(SCANNER),DMCB,('SCN2NDVQ',CFLDHDR),DAREC                      
         SR    R0,R0                                                            
         ICM   R0,1,4(R1)                                                       
         BNZ   *+8                                                              
         MVI   ERRNUM,1            SCANNER ERROR                                
         CHI   R0,1                ONE FIELD ONLY?                              
         BE    CVAL22              YES                                          
         BL    *+8                                                              
         MVI   ERRNUM,2            INPUT CARD MUST HAVE ONLY 1 FIELD            
         BRAS  RE,CVALERR                                                       
         B     CVAL02                                                           
*                                                                               
CVAL10   DS    0H                  TREAT AS MULTI-PARAMETER CARD                
         LA    R1,C                R1 = A(INPUT CARD)                           
         CLI   0(R1),C' '          WORK OUT L'INPUT DATA                        
         BE    *+12                                                             
         LA    R1,1(R1)            SCAN FORWARDS FOR *FIRST* BLANK              
         B     *-12                                                             
         LA    R0,C                                                             
         SR    R1,R0                                                            
         STC   R1,CFLDHDR+5        SET INPUT LENGTH IN FAKE TWA FLDHDR          
*                                                                               
         GOTO1 =V(SCANNER),DMCB,('SCN2NDVQ',CFLDHDR),DAREC                      
         SR    R0,R0                                                            
         ICM   R0,1,4(R1)                                                       
         BNZ   CVAL12                                                           
         MVI   ERRNUM,1            SCANNER ERROR                                
         BRAS  RE,CVALERR                                                       
         B     CVAL02                                                           
*                                                                               
CVAL12   LA    R2,PRMTAB           SEE IF CARD IS MULTI PARAMETER               
CVAL14   CLI   0(R2),X'FF'         EOT?                                         
         BE    CVAL18                                                           
         CLC   SC1STLEN,PRMMINL    SCOPE FOR RANGE                              
         BL    CVAL16                                                           
         CLC   SC1STLEN,PRMMAXL                                                 
         BH    CVAL16                                                           
*                                                                               
         LLC   RF,SC1STLEN         TRY FOR MATCH BASED ON INPUT                 
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   SC1STFLD(0),PRMNAME                                              
         BE    CVAL20                                                           
*                                                                               
CVAL16   AHI   R2,PRMTABLQ         NEXT ENTRY                                   
         B     CVAL14                                                           
*                                                                               
CVAL18   MVI   ERRNUM,4            PARAMETER NOT FOUND                          
         BRAS  RE,CVALERR                                                       
         B     CVAL36                                                           
*                                                                               
CVAL20   TM    PRMFLAG,PRMFSGL     PARAMETER MUST BE SINGLE ENTRY?              
         BZ    CVAL22                                                           
         MVI   ERRNUM,3            PARAMETER CANNOT BE MULTI-INPUT              
         BRAS  RE,CVALERR                                                       
         B     CVAL36                                                           
*                                                                               
CVAL22   TM    PRMFLAG,PRMFRTN     VALIDATION BY ROUTINE?                       
         BZ    CVAL24              NO                                           
         L     RF,PRMRTN                                                        
         BASR  RE,RF                                                            
         BE    CVAL34                                                           
         MVI   ERRNUM,5            ROUTINE VALIDATION ERROR                     
         BRAS  RE,CVALERR                                                       
         B     CVAL36                                                           
*                                                                               
CVAL24   TM    PRMFLAG,PRMFTXT     VALIDATING TEXT?                             
         BZ    CVAL26              NO                                           
         MVI   PRMAVAL,YES                                                      
         L     RF,PRMTXT                                                        
         MVC   0(8,RF),SC2NDFLD                                                 
         B     CVAL34                                                           
*                                                                               
CVAL26   DS    0H                                                               
         TM    PRMFLAG,PRMFLST                                                  
         BO    *+6                                                              
         DC    H'0'                PARAMETER TABLE ENTRY IS BAD!                
*                                                                               
         LLC   RF,SC2NDLEN         VALIDATION FROM LIST                         
         BCTR  RF,0                                                             
         L     R4,PRMLST                                                        
         USING PRMLSTD,R4                                                       
CVAL28   CLI   0(R4),X'FF'                                                      
         BE    CVAL30                                                           
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   PRMLNAME(0),SC2NDFLD                                             
         BE    CVAL32                                                           
         AHI   R4,PRMLSTLQ                                                      
         B     CVAL28                                                           
*                                                                               
CVAL30   MVI   ERRNUM,6            LIST VALIDATION ERROR                        
         BRAS  RE,CVALERR                                                       
         B     CVAL36                                                           
*                                                                               
CVAL32   MVC   PRMAVAL,PRMLVAL     SET ENTRY FROM LIST                          
         DROP  R4                                                               
*                                                                               
CVAL34   BRAS  RE,FRMTP            SET UP PRINT LINE                            
         MVC   P(L'CVTPV),CVTPV                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
CVAL36   AHI   R3,SCNBLKLQ         NEXT IN SCANBLK                              
         BCT   R0,CVAL12           DO ALL ENTRIES IN SCANBLK                    
         B     CVAL02                                                           
         DROP  R3                                                               
*                                                                               
CVAL38   MVC   P,SPACES                                                         
         GOTO1 =V(PRINTER)                                                      
         MVC   P(21),=CL21'ADDITIONAL VALIDATION'                               
         BASR  RE,RF                                                            
         MVC   P(21),HYPHENS                                                    
         BASR  RE,RF                                                            
*                                                                               
         LA    R2,PRMTAB           ENSURE REQUIRED PARAMETERS ARE THERE         
CVAL40   CLI   0(R2),X'FF'                                                      
         BE    CVAL44                                                           
         CLI   PRMAVAL,0           VALUE INPUT?                                 
         BNE   CVAL42              YES                                          
         MVC   PRMAVAL,PRMDVAL     SET DEFAULT                                  
         TM    PRMFLAG,PRMFREQ     VALUE REQUIRED?                              
         BZ    CVAL42              NO                                           
*                                                                               
         MVC   P(27),=CL27'**ERROR** - REQUIRED VALUE '                         
         LA    RE,P+27             POINT PAST PREVIOUS TEXT                     
         LLC   RF,PRMMAXL                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),PRMNAME                                                  
         LA    RE,2(RF,RE)         PLUS 1 FOR EX, AND 1 FOR SPACE               
         MVC   0(10,RE),=CL10'NOT INPUT '                                       
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL42   AHI   R2,PRMTABLQ                                                      
         B     CVAL40                                                           
         DROP  R2                                                               
*                                                                               
CVAL44   CLI   MEDIA,0             NO MEDIA AND BTYPE IS OK                     
         BNE   CVAL46                                                           
         CLI   BTYPE,0             CAN'T HAVE BTYPE WITHOUT MEDIA               
         BE    CVAL50                                                           
         MVC   P(L'CVOE1),CVOE1                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL50                                                           
*                                                                               
CVAL46   CLI   MEDIA,C'T'          TV                                           
         BE    CVAL48                                                           
         CLI   BTYPE,0             BTYPE (SPILL) NOT ALLOWED FOR RADIO          
         BE    CVAL50                                                           
         MVC   P(L'CVOE2),CVOE2                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL50                                                           
*                                                                               
CVAL48   CLI   BTYPE,0             IF MEDIA=T, BTYPE MUST BE SPECIFIED          
         BNE   CVAL50                                                           
         MVC   P(L'CVOE3),CVOE3                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL50   DS    0H                                                               
         L     R2,VLDDEFN                                                       
         USING LDDEFND,R2                                                       
         CLI   NEWDEMO,0           NEW FORMAT?                                  
         BE    CVAL51                                                           
         CLI   ISDTF#,NTIDIR#      NTIFIL?                                      
         BNE   CVAL51                                                           
*                                                                               
         LARL  RF,NTIFILL          YES: FIND SPECIFIC DTF#                      
*                                   (CAREFUL: WE MATCH ON THE NEWDEMO=          
*                                    NUMBER, NOT THE NAME!)                     
         USING PRMLSTD,RF                                                       
CVAL50C  CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                NEWDEMO= VALUE NOT FOUND ?!?                 
         CLC   NEWDEMO,PRMLVAL     FIND THE MATCHING NEWDEMO= NUMBER            
         BE    *+12                                                             
         LA    RF,PRMLSTLQ(RF)                                                  
         B     CVAL50C                                                          
         SR    R0,R0                                                            
         ICM   R0,1,DMGRDTF#       DTF# FROM TABLE (IF PRESENT)                 
         BZ    CVAL51              USE DEFAULT FROM ....DEFN MEMBER             
         DROP  RF                                                               
         BRAS  RE,GETFILAD         GET DTF ADDRESS                              
         ST    R0,LDDDTFDA         SET TRUE DTF ADDRESS                         
*                                                                               
CVAL51   DS    0H                                                               
         OC    LDDDTFDA,LDDDTFDA   ADJUST MODE IF NO D/A FILE IN DEFN           
         BNZ   *+12                                                             
         NI    MODE,X'FF'-(NODA+NOIS)                                           
         OI    MODE,NODA                                                        
         DROP  R2                                                               
*                                                                               
         TM    MODE,UPDATE         MODE=UPDATE?                                 
         BO    CVAL52              YES                                          
         TM    MODE,REPORT         MODE=REPORT?                                 
         BZ    CVAL52              NO                                           
         CLI   OUTPUT,0                                                         
         BE    CVAL58                                                           
         MVC   P(L'CVOE4),CVOE4                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL66                                                           
*                                                                               
CVAL52   TM    MODE,MERGE          MODE=MERGE?                                  
         BNO   *+12                NO                                           
         NI    MODE,X'FF'-(NODA+NOIS)                                           
         OI    MODE,NODA                                                        
*                                                                               
         TM    INPUT,DISK          INPUT=DISK?                                  
         BZ    CVAL56              NO                                           
         TM    MODE,UPDATE         MODE=UPDATE                                  
         BNO   CVAL54              NO                                           
*                                                                               
         MVC   P(L'CVOE5),CVOE5                                                 
         GOTO1 =V(PRINTER)         CAN'T HAVE INPUT=DISK IF MODE=UPDATE         
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL66                                                           
*                                                                               
CVAL54   TM    OUTPUT,DISK         OUTPUT=DISK?                                 
         BO    *+12                YES                                          
         OI    OUTPUT,TAPE         SET OUTPUT=TAPE AS DEFAULT                   
         B     CVAL58                                                           
*                                                                               
         MVC   P(L'CVOE6),CVOE6                                                 
         GOTO1 =V(PRINTER)         CAN'T HAVE OUTPUT=DISK IF INPUT=DISK         
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL66                                                           
*                                                                               
CVAL56   CLI   OUTPUT,0            OUTPUT SET?                                  
         BNE   CVAL58              YES                                          
         OI    OUTPUT,DISK         SET OUTPUT=DISK DEFAULT                      
*                                                                               
CVAL58   TM    INPUT,DISK          CAN'T HAVE D/A DISK ONLY INPUT               
         BZ    CVAL60                                                           
         TM    MODE,NOIS                                                        
         BZ    CVAL60                                                           
         MVC   P(L'CVOE7),CVOE7                                                 
         GOTO1 =V(PRINTER)         INPUT=DISK WITH NO I/S FILE INVALID          
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL66                                                           
*                                                                               
CVAL60   DS    0H                                                               
         TM    MODE,UPDATE                                                      
         BNO   CVAL64                                                           
         TM    INPUT,TAPE          IF MODE=UPDATE INPUT MUST BE TAPE            
         BZ    *+12                                                             
         TM    OUTPUT,DISK         AND OUTPUT MUST BE DISK                      
         BO    CVAL64                                                           
*                                                                               
         MVC   P(L'CVOE9),CVOE9                                                 
         GOTO1 =V(PRINTER)         MODE=UPDATE IP=TAPE AND OP=DISK              
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
         B     CVAL66                                                           
*                                                                               
CVAL64   TM    TCOPY,TAPE                                                       
         BZ    CVAL66                                                           
         TM    OUTPUT,TAPE                                                      
         BO    CVAL66                                                           
         MVC   P(L'CVOEA),CVOEA                                                 
         GOTO1 =V(PRINTER)         COPY=TAPE ONLY IF OUTPUT=TAPE                
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL66   DS    0H                                                               
         TM    POINTERS,MARKDEL    !POINTER=MARKDELETE OPTION IS...             
         BZ    CVAL69                                                           
         TM    MODE,COPY+NODA      ...ONLY VALID WITH MODE=COPYD...             
         BNO   CVAL68                                                           
         TM    OUTPUT,TAPE         ...OUTPUT=TAPE...                            
         BNO   CVAL68                                                           
         TM    LOAD,YES            ...AND A LOAD=<EXTERNAL ROUTINE>             
         BO    CVAL69                                                           
CVAL68   DS    0H                                                               
         MVC   P(L'CVOEB),CVOEB                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL69   DS    0H                                                               
         TM    POINTERS,UNATTACH   !POINTER=UNATTACHED OPTION IS...             
         BZ    CVAL70                                                           
         TM    MODE,COPY+NODA      ...ONLY VALID WITH MODE=COPYD...             
         BNO   *+12                                                             
         TM    OUTPUT,TAPE         ...AND OUTPUT=TAPE                           
         BO    CVAL70                                                           
         MVC   P(L'CVOEF),CVOEF                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL70   DS    0H                                                               
         CLC   STARTKEY(ISMAX),ENDKEY                                           
         BNH   CVAL75              START KEY CANNOT EXCEED END KEY!             
         MVC   P(L'CVOEC),CVOEC                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL75   DS    0H                                                               
         CLI   NEWDEMO,0           NEWDEMO= CARD IS PRESENT?                    
         BNE   CVAL80              YES                                          
         TM    MODE,UPDATE         NEWDEMO= REQUIRED FOR MODE=UPDATE...         
         BO    *+12                                                             
         TM    MODE,NODA           ...AND LOADING OR DUMPING A FILE             
         BO    CVAL80                                                           
*                                                                               
         MVC   P(L'CVOED),CVOED                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL80   DS    0H                                                               
         CLI   WRITE,NO            WRITE=NO IS...                               
         BNE   CVAL85                                                           
         TM    MODE,UPDATE         ...VALID WITH MODE=UPDATE...                 
         BO    *+12                                                             
         TM    MODE,COPY+NODA      ...VALID WITH MODE=COPYD...                  
         BNO   *+12                                                             
         TM    OUTPUT,DISK         ...AND OUTPUT=DISK                           
         BO    CVAL85                                                           
*                                                                               
         MVC   P(L'CVOEE),CVOEE                                                 
         GOTO1 =V(PRINTER)                                                      
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
CVAL85   DS    0H                                                               
*                                  ADDITIONAL ERROR VALIDATION HERE             
         OC    ERRCNT,ERRCNT                                                    
         BNZ   CVAL102                                                          
         MVC   P(L'CVVOK),CVVOK                                                 
         GOTO1 =V(PRINTER)                                                      
         BASR  RE,RF                                                            
         J     EXITOK                                                           
*                                                                               
CVAL102  DS    0H                                                               
         CLI   BADPARMS,C'Y'       ANY UNKNOWN PARAMETER(S) SEEN?               
         BNE   *+8                                                              
         BRAS  RE,KNOWP            YES: PRINT LIST OF VALID PARAMETERS          
*                                                                               
         ABEND 923                 INVALID OR MISSING PARAMETER CARD(S)         
*                                                                               
         SPACE 2                                                                
CVVOK    DC    C'ALL PARAMETERS VALIDATED OK'                                   
CVOE1    DC    C'**ERROR** BTYPE WITHOUT MEDIA IS INVALID'                      
CVOE2    DC    C'**ERROR** SPILL NOT ALLOWED FOR RADIO'                         
CVOE3    DC    C'**ERROR** BTYPE MUST BE SPECIFIED IF MEDIA=T'                  
CVOE4    DC    C'**ERROR** MODE=REPORT AND OUTPUT= PARAMETER INCOMPATIB+        
               LE'                                                              
CVOE5    DC    C'**ERROR** MODE=UPDATE AND INPUT=DISK INCOMPATIBLE'             
CVOE6    DC    C'**ERROR** OUTPUT=DISK AND INPUT=DISK INCOMPATIBLE'             
CVOE7    DC    C'**ERROR** INPUT=DISK WITHOUT I/S FILE SPECIFIED IS INV+        
               ALID'                                                            
CVOE9    DC    C'**ERROR** IF MODE=UPDATE THEN INPUT=TAPE AND OUTPUT=DI+        
               SP IS THE ONLY VALID INPUT COMBINATION'                          
CVOEA    DC    C'**ERROR** COPY=TAPE ONLY VALID IF OUTPUT=TAPE'                 
CVOEB    DC    C'**ERROR** !POINTER=MARKDELETE ONLY VALID WITH MODE=COP+        
               YD,OUTPUT=TAPE,LOAD=<EXTERN>'                                    
CVOEC    DC    C'**ERROR** STARTKEY EXCEEDS ENDKEY'                             
CVOED    DC    C'**ERROR** NEWDEMO= CARD REQUIRED'                              
CVOEE    DC    C'**ERROR** WRITE=NO ONLY PERMITTED WITH DIRECTORY LOAD'         
CVOEF    DC    C'**ERROR** !POINTER=UNATTACHED ONLY VALID WITH MODE=COP+        
               YD,OUTPUT=TAPE'                                                  
         EJECT                                                                  
***********************************************************************         
* FORMAT SCANNED PARAMETER ONTO PRINT LINE                            *         
* NTRY: R3        = A(SCANBLK LINE TO USE)                            *         
* EXIT: P+CVTLENQ = PARAMETER AS XXX=YYY                              *         
***********************************************************************         
*                                                                               
         USING SCANBLKD,R3                                                      
FRMTP    NTR1                                                                   
*                                                                               
         LLC   RF,SC1STLEN                                                      
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   P+CVTLENQ(0),SC1STFLD                                            
         LA    RE,P+CVTLENQ(RF)                                                 
         MVI   1(RE),C'='                                                       
         AHI   RE,2                                                             
*                                                                               
         SR    RF,RF                                                            
         ICM   RF,1,SC2NDLEN                                                    
         BZ    FRMTPX                                                           
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),SC2NDFLD                                                 
         DROP  R3                                                               
*                                                                               
FRMTPX   DS    0H                                                               
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* PARAMETER VALIDATION ROUTINES                                       *         
***********************************************************************         
*                                                                               
         USING PRMTABD,R2                                                       
         USING SCANBLKD,R3                                                      
*                                                                               
VALP     NTR1                                                                   
         MVI   PRMAVAL,YES         PARAM CARD VALIDATED BY EXT. RTN             
         GOTO1 =V(DECODE),DMCB,(L'PARMCARD,SC2NDFLD),(0,PARMCARD)               
         J     EXITOK                                                           
*                                                                               
VALSTN   NTR1                                                                   
         MVI   PRMAVAL,YES         STATION CARD VALIDATED BY EXT. RTN           
         LLC   R1,SC2NDLEN                                                      
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   STATCARD(0),SC2NDFLD                                             
         J     EXITOK                                                           
*                                                                               
VALSK    NTR1                                                                   
         L     RF,VLDDEFN          A(FILE DEFINITION CSECT)                     
         LLC   RF,(LDDKEYL+1)-LDDEFND(,RF)                                      
         GOTO1 =V(DECODE),DMCB,((RF),SC2NDFLD),(X'00',STARTKEY)                 
         CLI   8(R1),X'FF'                                                      
         JE    EXITL               INVALID DECODE EXPRESSION                    
         MVC   PRMAVAL,DMCBW3+3    L'OUTPUT START KEY                           
         J     EXITOK                                                           
*                                                                               
VALEK    NTR1                                                                   
         L     RF,VLDDEFN          A(FILE DEFINITION CSECT)                     
         LLC   RF,(LDDKEYL+1)-LDDEFND(,RF)                                      
         GOTO1 =V(DECODE),DMCB,((RF),SC2NDFLD),(X'FF',ENDKEY)                   
         CLI   8(R1),X'FF'                                                      
         JE    EXITL               INVALID DECODE EXPRESSION                    
         MVC   PRMAVAL,DMCBW3+3    L'OUTPUT END KEY                             
         J     EXITOK                                                           
*                                                                               
VALMAX   NTR1                                                                   
         MVI   PRMAVAL,YES         MAXIO COUNT ENTERED                          
         TM    SC2NDVAL,SCNUMQ                                                  
         JZ    EXITL                                                            
         ICM   RF,15,SC2NDNUM                                                   
         JNP   EXITL                                                            
         ST    RF,MAXIOS                                                        
         J     EXITOK                                                           
*                                                                               
VALSEL   NTR1                                                                   
         CLI   SC2NDLEN,3          VALIDATE PERIOD FOR SELECTED DUMP            
         JNE   EXITL                                                            
         TM    SC2NDVAL,SCNUMQ                                                  
         JZ    EXITL                                                            
         PACK  DUB,SC2NDFLD(2)                                                  
         OI    DUB+L'DUB-1,X'0F'                                                
         CVB   R1,DUB                                                           
         STC   R1,SELYR                                                         
         CLI   SELYR,82                                                         
         JL    EXITL                                                            
         MVC   SELPD,SC2NDFLD+2                                                 
         NI    SELPD,X'0F'                                                      
         CLI   SELPD,1                                                          
         JL    EXITL                                                            
         CLI   SELPD,4                                                          
         JH    EXITL                                                            
         J     EXITOK                                                           
*                                                                               
VALBTYPE NTR1                                                                   
         CLI   SC2NDLEN,2          VALIDATE BTYPE FOR SELECTED DUMP             
         BE    VALBTY1                                                          
         JH    EXITL                                                            
         CLI   SC2NDFLD,C'X'                                                    
         JNE   EXITL                                                            
         MVI   BTYPE,X'FF'         SPILL ONLY                                   
         J     EXITOK                                                           
*                                                                               
VALBTY1  CLC   =C'-X',SC2NDFLD                                                  
         JNE   EXITL                                                            
         MVI   BTYPE,X'01'         EVERYTHING EXCEPT SPILL                      
         J     EXITOK                                                           
*                                                                               
VALMEDIA NTR1                                                                   
         MVC   MEDIA,SC2NDFLD                                                   
         CLI   MEDIA,C'R'          VALIDATE MEDIA FOR SELECTED DUMP             
         JE    EXITOK                                                           
         CLI   MEDIA,C'T'          TV                                           
         JE    EXITOK                                                           
         J     EXITL                                                            
*                                                                               
VALDATE  NTR1                                                                   
         GOTO1 =V(DATVAL),DMCB,(0,SC2NDFLD),DUB  VALIDATE M/D/Y                 
         OC    0(4,R1),0(R1)                                                    
         JZ    EXITL                                                            
*                                                                               
         GOTO1 =V(DATCON),DMCB,DUB,(10,DATEVAL) OVERRIDE TODAY'S DATE           
         J     EXITOK                                                           
         SPACE 3                                                                
VALLOAD  NTR1                                                                   
*                                                                               
         MVI   PRMAVAL,YES         LOAD= EXTERN NAME ENTERED                    
         MVC   LOADNAME,SC2NDFLD   SAVE EXTERN LOAD MODULE NAME                 
*                                                                               
         GOTO1 =V(LOADER),DMCB,LOADNAME,0                                       
         ICM   RF,15,4(R1)         GET ADDRESS RETURNED BY LOADER               
         BNZ   VALLOAD5                                                         
         MVC   P(39),=C'**ERROR** - EXTERNAL ........ NOT FOUND'                
         MVC   P+21(8),LOADNAME                                                 
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(39,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
VALLOAD5 DS    0H                                                               
         ST    RF,ALOADPT          SAVE A(EXTERNAL)                             
         ST    RF,STXLST+32        ADD EXTERN TO STXITER'S LIST                 
         MVC   STXLST+36(4),0(R1)  LENGTH OF EXTERNAL ROUTINE                   
         MVI   STXLST+36,X'80'     NEW END-OF-LIST MARKER                       
         MVI   STXLST+28,0         RESET PREVIOUS END-OF-LIST MARKER            
*                                                                               
         TM    VERIFY,YES          VERIFY=YES PARAMETER CARD PRESENT?           
         JZ    EXITOK              NO: EXTERN IS OKAY                           
*                                                                               
         L     RF,ALOADPT          YES: SCAN FOR C'*VERIFY*' BLOCK              
         LHI   R0,256                                                           
         CLC   0(8,RF),=C'*VERIFY*'                                             
         BE    *+16                                                             
         LA    RF,1(RF)                                                         
         BCT   R0,*-14                                                          
         J     EXITOK              *VERIFY* NOT FOUND IN 1ST 256 BYTES          
*                                                                               
         CLC   8(6,RF),DATEYMD     CHECK VERIFY START DATE                      
         BH    *+14                                                             
         CLC   14(6,RF),DATEYMD    CHECK VERIFY END DATE                        
         JNL   EXITOK              DATE IS WITHIN VERIFY RANGE                  
*                                                                               
         MVC   P(48),=C'**ERROR** - EXTERNAL ........ DATES OUT OF RANG+        
               E'                                                               
         MVC   P+21(8),LOADNAME                                                 
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(48,P)                                
         GOTO1 =V(PRINTER)                                                      
         DC    H'0'                                                             
*                                                                               
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* GETPARM ERROR HANDLING                                              *         
***********************************************************************         
*                                                                               
CVALERR  NTR1                                                                   
         LH    R0,ERRCNT                                                        
         AHI   R0,1                                                             
         STH   R0,ERRCNT                                                        
*                                                                               
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(80,C)                                
         GOTO1 (RF),(R1),,(50,CVERRLOG)                                         
*                                                                               
         MVC   P(L'CVTVE),CVTVE    OUTPUT PARAMETER IN ERROR                    
         BRAS  RE,FRMTP            SET UP PRINT LINE                            
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         CLI   ERRNUM,4            UNKNOWN PARAMETER?                           
         BNE   *+8                                                              
         MVI   BADPARMS,C'Y'       YES                                          
*                                                                               
         LA    RF,ERRTAB                                                        
         USING ERRTABD,RF                                                       
*                                                                               
CVALERR5 DS    0H                                                               
         CLI   ERRNUMQ,0                                                        
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLC   ERRNUMQ,ERRNUM                                                   
         BE    *+12                                                             
         AHI   RF,ERRTABL                                                       
         B     CVALERR5                                                         
*                                                                               
         MVC   P(L'ERRMSG),ERRMSG                                               
         ICM   RF,15,ERRRTN                                                     
         BZ    *+6                                                              
         BASR  RE,RF                                                            
         GOTO1 =V(PRINTER)                                                      
         DROP  RF                                                               
*                                                                               
         MVI   ERRNUM,0                                                         
         J     EXITOK                                                           
         EJECT                                                                  
***********************************************************************         
* GETPARM ERROR TABLE                                                 *         
***********************************************************************         
*                                                                               
CVTLENQ  EQU   22                                                               
CVTIP    DC    CL(CVTLENQ)'INPUT PARAMETERS    -'                               
CVTPV    DC    CL(CVTLENQ)'PARAMETER VALIDATED -'                               
CVTVE    DC    CL(CVTLENQ)'VALIDATION ERROR    -'                               
*                                                                               
CVERRLOG DC    CL50'VALIDATION ERROR - SEE JOB OUTPUT FOR DETAILS'              
*                                                                               
ERRTAB   DC    AL1(01,0,0,0),AL4(0)                                             
         DC    CL48'INPUT CARD NOT VALID FOR SCANNER                '           
         DC    AL1(02,0,0,0),AL4(0)                                             
         DC    CL48'INPUT CARD CANNOT CONTAIN MULTIPLE FIELDS       '           
         DC    AL1(03,0,0,0),AL4(0)                                             
         DC    CL48'PARAMETER CANNOT BE ON MULTI-INPUT CARD         '           
         DC    AL1(04,0,0,0),AL4(0)                                             
         DC    CL48'PARAMETER IS NOT KNOWN TO APPLICATION           '           
         DC    AL1(05,0,0,0),AL4(0)                                             
         DC    CL48'ROUTINE VALIDATION ERROR                        '           
         DC    AL1(06,0,0,0),AL4(0)                                             
         DC    CL48'LIST VALIDATION ERROR                           '           
         DC    X'FF'                                                            
*                                                                               
ERRTABD  DSECT ,                                                                
ERRNUMQ  DS    X                                                                
         DS    XL3                                                              
ERRRTN   DS    AL4                                                              
ERRMSG   DS    XL48                                                             
ERRTABL  EQU   *-ERRTABD                                                        
*                                                                               
DELDXMOD CSECT                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PRINT OUT KNOWN PARAMETERS                               *         
***********************************************************************         
*                                                                               
KNOWP    NTR1                                                                   
         ZAP   LINE,=P'99'                                                      
         MVC   P(L'CVKNP),CVKNP    KNOWN PARAMETERS                             
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R2,PRMTAB                                                        
         USING PRMTABD,R2                                                       
KNOWP02  CLI   0(R2),X'FF'                                                      
         JE    EXITOK                                                           
         MVC   P(11),=C'PARAMETER: '                                            
         MVC   P+11(L'PRMNAME),PRMNAME                                          
*                                                                               
         MVI   P+CVHDRLQ,C'-'                                                   
         MVC   P+CVHDRLQ+2(20),=CL20'SINGLE INPUT ONLY'                         
         TM    PRMFLAG,PRMFSGL                                                  
         BO    *+10                                                             
         MVC   P+CVHDRLQ+2(20),=CL20'MULTI INPUT VALID'                         
         GOTO1 =V(PRINTER)                                                      
         AHI   R2,PRMTABLQ                                                      
         B     KNOWP02                                                          
         DROP  R2                                                               
*                                                                               
CVKNP    DC    C'YOU INPUT AN UNKNOWN PARAMETER - THESE ARE THE DEFINED+        
                PARAMETERS:'                                                    
*                                                                               
CVHDRLQ  EQU   L'PRMNAME+11+1      11 = L'"PARAMETER: "                         
CARDVALX EQU   *                                                                
         DROP  RB,RA                                                            
         EJECT                                                                  
***********************************************************************         
* INITIALISE EXTERNAL ROUTINE                                         *         
***********************************************************************         
*                                                                               
INITXTRN NTR1  BASE=(*,INITXTRNX),LABEL=*                                       
*                                                                               
         MVC   P(27),=C'EXTERNAL ........ IS ACTIVE'                            
         MVC   P+9(8),LOADNAME                                                  
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(27,P)                                
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LA    R1,PLXTRN           PASS CONTROL TO EXTERNAL ROUTINE             
         LA    RE,DAREC                                                         
         TM    MODE,NODA                                                        
         BZ    *+8                                                              
         LA    RE,ISREC                                                         
         ST    RE,0(R1)            SET FIRST TIME SWITCH & A(RECORD)            
         MVC   4(1,R1),MODE                                                     
         TM    INPUT,TAPE                                                       
         BZ    *+8                                                              
         OI    4(R1),X'80'         SET TAPE INPUT FLAG                          
         TM    OUTPUT,TAPE                                                      
         BZ    *+8                                                              
         OI    4(R1),X'40'         SET TAPE OUTPUT FLAG                         
         TM    MODE,NODA                                                        
         BZ    *+8                                                              
         OI    4(R1),X'20'         SET I/S FILE ONLY                            
*                                                                               
         L     RF,ALOADPT          A(EXTERNAL)                                  
         BASR  RE,RF               INITIALIZE CALL TO EXTERNAL                  
*                                                                               
         J     EXITOK                                                           
INITXTRNX EQU  *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* PRINT COUNTER DESCRIPTIONS AND VALUES                               *         
***********************************************************************         
*                                                                               
PRTCTRS  NTR1  BASE=(*,PRTCTRSX),LABEL=*                                        
         GOTO1 =V(PRINTER)                                                      
         MVC   P(12),=C'I/O COUNTERS'                                           
         BASR  RE,RF                                                            
         MVC   P(12),HYPHENS                                                    
         BASR  RE,RF                                                            
*                                                                               
         SR    RF,RF               REMEMBER IF WE PRINTED ANY COUNTERS          
         LARL  R2,COUNTERS         POINT TO COUNTERS TABLE                      
PRCTR02  CLI   0(R2),X'FF'                                                      
         BE    PRCTR08             END OF TABLE                                 
         ICM   R0,15,0(R2)                                                      
         BZ    PRCTR06             DON'T PRINT ZERO COUNTERS                    
*                                                                               
         MVC   P(20),4(R2)         COUNTER DESCRIPTION                          
         MVI   P+21,C'='                                                        
         EDIT  (R0),(13,P+23),COMMAS=YES   COUNTER VALUE                        
*                                                                               
         C     R2,=A(BADERRS)      LOG TO CONSOLE?                              
         BL    PRCTR04             NO                                           
*                                                                               
         GOTO1 =V(LOGIO),DMCB,X'FF000001',(40,P)                                
         TM    USER,PROGRMMR       USER=PROGRAMMER ?                            
         BO    PRCTR04             YES: DON'T SEND E-MAIL                       
         MVC   MAILRCPS,PGRMRS     SEND TO PROGRAMMERS                          
         MVC   MAILMSG,P           SEND E-MAIL WITH IMPORTANT WARNINGS          
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
*                                                                               
PRCTR04  GOTO1 =V(PRINTER)         PRINT OUT LINE                               
*                                                                               
PRCTR06  AHI   R2,L'COUNTERS                                                    
         B     PRCTR02                                                          
*                                                                               
PRCTR08  DS    0H                                                               
         LTR   RF,RF               WERE ANY COUNTERS PRINTED?                   
         BNZ   PRCTR0X             YES                                          
         MVC   P(23),=C'ALL COUNTERS EQUAL ZERO'                                
         GOTO1 =V(PRINTER)         PRINT OUT LINE                               
*                                                                               
PRCTR0X  DS    0H                                                               
         J     EXITOK              END OF TABLE                                 
         DROP  RB                                                               
PRTCTRSX EQU   *                                                                
         EJECT                                                                  
***********************************************************************         
* PERFORM KEY ANALYSIS (FOR VSAM PREP)                                *         
***********************************************************************         
*                                                                               
CHKKEYS  NTR1  BASE=(*,CHKKEYSXX),LABEL=*                                       
*                                                                               
* CHECK THE UPDATE INPUT FILE TO MAKE SURE THERE AREN'T MULTIPLE                
* GROUPS OF RECORDS FOR THE SAME MAJOR KEY, AND NO EXTENDED PASSIVES            
* WITH THE SAME MAJOR KEY. IF THERE ARE, THIS SHOULD BE INVESTIGATED,           
* BECAUSE IT MAY IMPLY THAT THE CONVERSION IS RELYING ON DELDXMOD'S             
* EXISTING UPDATE LOGIC. UNDER VSAM, THAT WON'T BE SO GOOD.                     
*                                                                               
* THIS ROUTINE CALLS ICETOOL TO DO THE CHECK. ALL OF THE NECESSARY              
* DATASETS AND CONTROL CARDS ARE DYNAMICALLY ALLOCATED, SO THERE IS NO          
* NEED TO ADD ANY DD STATEMENTS IN SUPPORT OF THIS UTILITY.                     
*                                                                               
* THE "CHKTHESE" SYSOUT DATASET IS A REPORT OF THE DUPLICATE KEYS.              
*                                                                               
* ALLOCATE THESE DFSORT/ICETOOL MESSAGE DATASETS:                               
* //DFSMSG   DD SYSOUT=*                                                        
* //TOOLMSG  DD SYSOUT=*                                                        
* //CHKTHESE DD SYSOUT=*                                                        
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'DFSMSG'),(X'80',SPACES)            
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'TOOLMSG'),(X'80',SPACES)           
         GOTO1 =V(DYNALLOC),DMCB,(X'FD',=CL8'CHKTHESE'),(X'80',SPACES)          
*                                                                               
* ALLOCATE THESE WORK FILES FOR DFSORT/ICETOOL:                                 
* //MAJRKEYS DD UNIT=SYSDA,SPACE=(CYL,(500,200)),DCB=(BUFNO=2),                 
* //           STORCLAS=SCTEMP,DATACLAS=DCTEMP,DISP=NEW                         
* //PASSIVES DD UNIT=SYSDA,SPACE=(CYL,(500,200)),DCB=(BUFNO=2),                 
* //           STORCLAS=SCTEMP,DATACLAS=DCTEMP,DISP=NEW                         
* //CNVWORK  DD UNIT=SYSDA,SPACE=(CYL,(500,200)),DCB=(BUFNO=2),                 
* //           STORCLAS=SCTEMP,DATACLAS=DCTEMP,DISP=NEW                         
* //CNVERROR DD UNIT=SYSDA,SPACE=(CYL,(500,200)),DCB=(BUFNO=2),                 
* //           STORCLAS=SCTEMP,DATACLAS=DCTEMP,DISP=MOD                         
*                                                                               
         MVI   TXTDISP,DISPNEW                                                  
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'MAJRKEYS'),               +        
               (X'48',=X'0001F40000C8'),0,0,A(TXTUNTS1)                         
         MVI   TXTDISP,DISPNEW                                                  
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'PASSIVES'),               +        
               (X'48',=X'0001F40000C8'),0,0,A(TXTUNTS1)                         
         MVI   TXTDISP,DISPNEW                                                  
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'CNVWORK'),                +        
               (X'48',=X'0001F40000C8'),0,0,A(TXTUNTS1)                         
         MVI   TXTDISP,DISPMOD     *** DISP=MOD                                 
         GOTO1 =V(DYNALLOC),DMCB,(X'80',=CL8'CNVERROR'),               +        
               (X'48',=X'0001F40000C8'),0,0,A(TXTUNTS1)                         
*                                                                               
* ALLOCATE DATASETS WITH THESE CONTROL CARDS FOR DFSORT/ICETOOL:                
* //COP1CNTL DD UNIT=SYSDA,SPACE=(TRK,(5,0)),DCB=(BUFNO=2)                      
* //NSRTCNTL DD UNIT=SYSDA,SPACE=(TRK,(5,0)),DCB=(BUFNO=2)                      
* //SRT1CNTL DD UNIT=SYSDA,SPACE=(TRK,(5,0)),DCB=(BUFNO=2)                      
* //SRT2CNTL DD UNIT=SYSDA,SPACE=(TRK,(5,0)),DCB=(BUFNO=2)                      
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(X'40',=CL8'COP1CNTL'),               +        
               (X'80',=X'000005000000'),0                                       
         GOTO1 =V(DYNALLOC),DMCB,(X'40',=CL8'NSRTCNTL'),               +        
               (X'80',=X'000005000000'),0                                       
         GOTO1 =V(DYNALLOC),DMCB,(X'40',=CL8'SRT1CNTL'),               +        
               (X'80',=X'000005000000'),0                                       
         GOTO1 =V(DYNALLOC),DMCB,(X'40',=CL8'SRT2CNTL'),               +        
               (X'80',=X'000005000000'),0                                       
*                                                                               
* POPULATE THE DFSORT INPUT CONTROL CARD DATASETS (SO THAT THE CONTROL          
* CARDS RESIDE IN THIS PROGRAM, AS OPPOSED TO AN EXTERNAL LOCATION).            
*                                                                               
         OPEN  (COP1CNTL,(OUTPUT))                                              
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         LA    R0,=CL80' OPTION SDB=INPUT'                                      
         PUT   COP1CNTL,(R0)                                                    
*********LA    R0,=CL80' OMIT COND=(27,1,BI,BO,X''80'',OR,'                     
*********PUT   COP1CNTL,(R0)                                                    
*********LA  R0,=CL80' (25,2,BI,EQ,X''FFFF'',AND,27,1,BI,BNO,X''40''))'         
*********PUT   COP1CNTL,(R0)                                                    
         LA    R0,=CL80' INREC IFTHEN=(WHEN=GROUP,KEYBEGIN=(5,18),'             
         PUT   COP1CNTL,(R0)                                                    
         LA    R0,=CL80' PUSH=(28:ID=15))'                                      
         PUT   COP1CNTL,(R0)                                                    
         LA    R0,=CL80' OUTFIL VTOF,FNAMES=PASSIVES,OUTREC=(5,38),'            
         PUT   COP1CNTL,(R0)                                                    
     LA R0,=CL80' INCLUDE=(25,2,BI,EQ,X''FFFF'',OR,27,1,BI,BO,X''40'')'         
         PUT   COP1CNTL,(R0)                                                    
         LA   R0,=CL80' OUTFIL VTOF,FNAMES=MAJRKEYS,OUTREC=(5,38),SAVE'         
         PUT   COP1CNTL,(R0)                                                    
         CLOSE COP1CNTL                                                         
*                                                                               
         OPEN  (SRT1CNTL,(OUTPUT))                                              
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         LA    R0,=CL80' OPTION SDB=INPUT'                                      
         PUT   SRT1CNTL,(R0)                                                    
         LA    R0,=CL80' INREC IFTHEN=(WHEN=INIT,BUILD=(30X,1,23)),'            
         PUT   SRT1CNTL,(R0)                                                    
         LA    R0,=CL80' IFTHEN=(WHEN=GROUP,KEYBEGIN=(31,18),'                  
         PUT   SRT1CNTL,(R0)                                                    
         LA    R0,=CL80' PUSH=(1:ID=15,SEQ=15))'                                
         PUT   SRT1CNTL,(R0)                                                    
 LA R0,=CL80' SORT FIELDS=(1,15,CH,A,31,18,BI,A,49,2,BI,A),EQUALS'              
         PUT   SRT1CNTL,(R0)                                                    
 LA R0,=CL80' OUTREC IFTHEN=(WHEN=INIT,BUILD=(1,30,15X,C''V'',31,23)),'         
         PUT   SRT1CNTL,(R0)                                                    
 LA R0,=CL80' IFTHEN=(WHEN=GROUP,KEYBEGIN=(1,15),PUSH=(31:SEQ=15)),'            
         PUT   SRT1CNTL,(R0)                                                    
 LA R0,=CL80' IFTHEN=(WHEN=(31,15,ZD,NE,16,15,ZD),OVERLAY=(46:C''M''))'         
         PUT   SRT1CNTL,(R0)                                                    
 LA R0,=CL80' OUTFIL BUILD=(47,23),INCLUDE=(46,1,CH,EQ,C''M'')'                 
         PUT   SRT1CNTL,(R0)                                                    
         CLOSE SRT1CNTL                                                         
*                                                                               
         OPEN  (SRT2CNTL,(OUTPUT))                                              
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         LA    R0,=CL80' SORT FIELDS=(1,18,BI,A,24,15,ZD,A),EQUALS'             
         PUT   SRT2CNTL,(R0)                                                    
         LA    R0,=CL80' SUM FIELDS=(NONE)'                                     
         PUT   SRT2CNTL,(R0)                                                    
         CLOSE SRT2CNTL                                                         
*                                                                               
         OPEN  (NSRTCNTL,(OUTPUT))                                              
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         LA    R0,=CL80' OPTION COPY,SDB=INPUT'                                 
         PUT   NSRTCNTL,(R0)                                                    
         CLOSE NSRTCNTL                                                         
*                                                                               
* CALL ICETOOL TO DO THE CHECK                                                  
*                                                                               
         LA    R1,ICEPAR2          CALL ICETOOL WITH PARAMETER LIST             
         LINK  EP=ICETOOL                                                       
         LTR   RF,RF               ANY DFSORT/ICETOOL ERRORS?                   
         BZ    *+6                                                              
         DC    H'0'                FATAL ICETOOL ERROR                          
*                                                                               
         CP    CNT#RECS,=P'0'      ANY DUPLICATES FOUND?                        
         BE    CHKKEYSX            NO                                           
*                                                                               
         MVC   DUB,CNT#RECS                                                     
         CVB   R0,DUB              REPORT THE NUMBER OF DUPS...                 
         ST    R0,CHKTHESE         ...AND SEE THE CHKTHESE OUTPUT LIST          
*                                                                               
CHKKEYSX DS    0H                                                               
         XIT1                                                                   
         SPACE 2                                                                
ICEPAR2  DC    A(0)                ICETOOL PARAMETER LIST                       
         DC    A(COPSA1L)          A(COPY STATEMENT)                            
         DC    A(0)                A(COPY RETURN AREA)                          
         DC    A(SRTSA1L)          A(SORT STATEMENT)                            
         DC    A(0)                A(SORT RETURN AREA)                          
         DC    A(SRTSA2L)          A(SORT STATEMENT)                            
         DC    A(0)                A(SORT RETURN AREA)                          
         DC    A(SELSA2L)          A(SELECT STATEMENT)                          
         DC    A(0)                A(SELECT RETURN AREA)                        
         DC    A(SELSA3L)          A(SELECT STATEMENT)                          
         DC    A(0)                A(SELECT RETURN AREA)                        
         DC    A(DISSA2L)          A(DISPLAY STATEMENT)                         
         DC    A(0)                A(DISPLAY RETURN AREA)                       
         DC    A(CNTSA1L)          A(COUNT STATEMENT)                           
         DC    A(CNTRA1L)          A(COUNT RETURN AREA)                         
         DC    X'FFFFFFFF'         EOL                                          
*                                                                               
* SPLIT THE KEYS INTO TWO FILES: ONE OF DATA RECORDS, THE OTHER OF              
* EXTENDED PASSIVES.                                                            
*                                                                               
COPSA1L  DC    AL2(COPSA1E-COPSA1S)  L'STATEMENT AREA                           
COPSA1S  DC    CL80'COPY FROM(TAPEIN) USING(COP1)'                              
COPSA1E  EQU   *                                                                
*                                                                               
* CHECK THE DATA RECORDS FOR CONTIGUOUS, REPEATING GROUPS OF THE SAME           
* MAJOR KEY.                                                                    
*                                                                               
SRTSA1L  DC    AL2(SRTSA1E-SRTSA1S)  L'STATEMENT AREA                           
SRTSA1S  DC    CL80'SORT FROM(MAJRKEYS) TO(CNVERROR) USING(SRT1)'               
SRTSA1E  EQU   *                                                                
*                                                                               
* NOW CHECK THE DATA RECORDS FOR NON-CONTIGUOUS, REPEATING GROUPS OF            
* THE SAME MAJOR KEY.                                                           
*                                                                               
SRTSA2L  DC    AL2(SRTSA2E-SRTSA2S)  L'STATEMENT AREA                           
SRTSA2S  DC    CL80'SORT FROM(MAJRKEYS) TO(CNVWORK) USING(SRT2)'                
SRTSA2E  EQU   *                                                                
*                                                                               
SELSA2L  DC    AL2(SELSA2E-SELSA2S)  L'STATEMENT AREA                           
SELSA2S  DC    CL80'SELECT FROM(CNVWORK) TO(CNVERROR) ON(1,18,BI) ALLDU+        
               PS USING(NSRT)'                                                  
SELSA2E  EQU   *                                                                
*                                                                               
* NOW FIND ANY DUPLICATE EXTENDED PASSIVES.                                     
*                                                                               
SELSA3L  DC    AL2(SELSA3E-SELSA3S)  L'STATEMENT AREA                           
SELSA3S  DC    CL80'SELECT FROM(PASSIVES) TO(CNVERROR) ON(1,18,BI) ALLD+        
               UPS'                                                             
SELSA3E  EQU   *                                                                
*                                                                               
* PRINT A LISTING OF THE DUPLICATE KEYS FOR ANALYSIS. NOTE: THE ABSENCE         
* OF A TITLE AND COLUMN HEADINGS IS DELIBERATE. THAT WAY, IF THERE ARE          
* NO RECORDS TO PRINT, THE CHKTHESE DATASET WILL NOT APPEAR IN THE              
* (E)JES OUTPUT AT ALL.                                                         
*                                                                               
DISSA2L  DC    AL2(DISSA2E-DISSA2S)  L'STATEMENT AREA                           
DISSA2S  DC    CL80'DISPLAY FROM(CNVERROR) LIST(CHKTHESE) -'                    
         DC    CL80'BLANK NOHEADER -'                                           
         DC    CL80'ON(1,18,CH) ON(1,18,HEX) ON(19,4,HEX) ON(23,1,HEX)'         
DISSA2E  EQU   *                                                                
*                                                                               
* COUNT THE RECORDS IN THE ERROR FILE AND SET RC=8 IF NOT EMPTY.                
*                                                                               
CNTSA1L  DC    AL2(CNTSA1E-CNTSA1S)  L'STATEMENT AREA                           
CNTSA1S  DC    CL80'COUNT FROM(CNVERROR)'                                       
CNTSA1E  EQU   *                                                                
*                                                                               
CNTRA1L  DC    AL2(CNTRETNE-CNTSTAT)                                            
CNTSTAT  DS    AL1                 COUNT OPERATION STATUS                       
CNT#RECS DS    PL8                 RETURNED RECORD COUNT                        
CNTRETNE EQU   *                                                                
*                                                                               
         SPACE 2                                                                
TXTUNTS1 DS    0A                  ADDITIONAL DYNALLOC TEXT UNITS               
         DC    A(TEXT_UNIT_DACL)   DATA CLASS                                   
         DC    A(TEXT_UNIT_STCL)   STORAGE CLASS                                
         DC    A(TEXT_UNIT_DISP)   STATUS SPECIFICATION                         
         ORG   *-4                                                              
         DC    X'80'               EOL                                          
         ORG                                                                    
*                                                                               
* DD PARAMETER: "STORCLAS=SCTEMP,DATACLAS=DCTEMP"                               
TEXT_UNIT_STCL   DC    AL2(DALSTCL),AL2(1),AL2(L'TXTSTCL)                       
TXTSTCL          DC    C'SCTEMP'    STORCLAS=SCTEMP                             
TEXT_UNIT_DACL   DC    AL2(DALDACL),AL2(1),AL2(L'TXTDACL)                       
TXTDACL          DC    C'DCTEMP'    DATACLAS=DCTEMP                             
TEXT_UNIT_DISP   DC    AL2(DALSTATS),AL2(1),AL2(L'TXTDISP)                      
TXTDISP          DS    AL1          DISP=                                       
*                                                                               
DISPOLD  EQU   X'01'                EQU VALUES ARE AS PER IBM                   
DISPMOD  EQU   X'02'                                                            
DISPNEW  EQU   X'04'                                                            
DISPSHR  EQU   X'08'                                                            
*                                                                               
         DROP  RB                                                               
*                                                                               
CHKKEYSXX DS   0H                                                               
         EJECT                                                                  
***********************************************************************         
* RECORD VALIDATION ROUTINE                                           *         
***********************************************************************         
*                                                                               
RECVAL   NTR1  BASE=(*,RECVALX),LABEL=*                                         
         MVI   ERRNUM,0                                                         
         MVC   P,SPACES                                                         
         CLI   FLAG2,1                                                          
         BE    RECVX                                                            
*                                                                               
         TM    MODE,NODA           TEST IF PRINTING I/S RECS                    
         BZ    RVAL02                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(8),=C'RECORD  '                                                
         B     RVAL04                                                           
*                                                                               
RVAL02   TM    MODE,NOIS           BYPASS KEY CHECK IF NO I/S REC               
         BO    RVAL06                                                           
         TM    OUTPUT,DISK         OR IF DOING A LOAD                           
         BO    RVAL06                                                           
*                                                                               
         LA    RE,ISREC                                                         
         AH    RE,DAKEYL                                                        
         TM    0(RE),STATUS_DEL    IGNORE RECORDS MARKED FOR DELETION           
         BO    RVAL06                                                           
*                                                                               
         LH    RE,DAKEYL           GET KEY COMPARE LEN                          
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   ISREC(0),DAREC                                                   
         BE    RVAL06                                                           
*                                                                               
         L     R1,KEYNEQ           BUMP KEYS NOT EQUAL COUNTER                  
         AHI   R1,1                                                             
         ST    R1,KEYNEQ                                                        
         MVC   P(16),=CL16'WARNING KEY NEQ '                                    
*                                                                               
RVAL04   MVC   P+16(5),=C'I/S ='   PRINT I/S RECORD                             
         LH    R0,ISRECL                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,ISREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         TM    MODE,NODA                                                        
         BO    RECVX                                                            
         OI    FLAG2,X'80'         SET KEY NEQ FLAG                             
*                                                                               
RVAL06   XC    FULL,FULL           CHECK ELEMENT STRUCTURE                      
         LA    RE,DAREC                                                         
         AH    RE,DAKEYT                                                        
         TM    2(RE),STATUS_EXTP   EXTENDED PASSIVE RECORD?                     
         BO    RECVX               YES                                          
         CLC   EFFS,0(RE)          NON-EXTENDED PASSIVE?                        
         BE    RECVX               YES                                          
*                                                                               
         MVC   FULL(2),0(RE)       FULL(2)=REC LEN TAKEN FROM RECORD            
         CLC   FULL(2),DAMAX                                                    
         BNH   RVAL07                                                           
         MVC   P(16),=CL16'WARNING MAX LEN '                                    
         OI    FLAG2,X'40'                                                      
         MVC   FULL(2),DAMAX                                                    
         B     RECV4A                                                           
*                                                                               
RVAL07   CLC   FULL(2),DAMIN                                                    
         BNL   RECV4A                                                           
         MVC   P(16),=CL16'WARNING MIN LEN '                                    
         OI    FLAG2,X'20'                                                      
         MVC   FULL(2),DAMAX                                                    
*                                                                               
RECV4A   CLI   DAREC,X'00'                                                      
         BE    RECVA                                                            
*                                                                               
         LA    RF,DAREC            RF=MAX SCAN ADDR                             
         AH    RF,DAMAX                                                         
         LA    RF,1(RF)                                                         
         LA    RE,DAREC                                                         
         AH    RE,DAELD            RE=A(ELEMENT)                                
*                                                                               
RECV6    CLI   0(RE),0             SKIP THRU ELEMENTS                           
         BE    RECV8                                                            
         CLI   1(RE),2                                                          
         BL    RECV8                                                            
*                                                                               
         LLC   R0,1(RE)                                                         
         AR    RE,R0                                                            
         CR    RE,RF                                                            
         BNH   RECV6                                                            
*                                                                               
RECV8    LA    RF,DAREC                                                         
         SR    RE,RF                                                            
         STH   RE,FULL+2           FULL+2(2)=REC LEN FROM ELEMENT SUM           
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         LA    RE,1(RE)                                                         
         CH    RE,FULL                                                          
         BE    RECVA                                                            
         OI    FLAG2,X'10'                                                      
         TM    FLAG2,X'60'                                                      
         BNZ   *+10                                                             
         MVC   P(16),=CL16'WARNING BAD LEN '                                    
*                                                                               
RECVA    TM    FLAG2,X'F0'         TEST FOR ERRORS                              
         BNZ   RECVA2                                                           
         TM    CHECK,PRTALL                                                     
         BZ    RECVX                                                            
         MVC   P(8),=C'RECORD  '                                                
         TM    INPUT,DISK                                                       
         BZ    RECVB                                                            
         LA    R5,ISREC                                                         
         AH    R5,ISRECL                                                        
         SHI   R5,4                                                             
         GOTO1 =V(HEXOUT),DMCB,(R5),P+7,4,0                                     
         B     RECVB                                                            
*                                                                               
RECVA2   MVI   ERRNUM,X'FF'                                                     
         TM    FLAG2,X'70'                                                      
         BZ    RECVB                                                            
         L     R1,BADREC                                                        
         AHI   R1,1                                                             
         ST    R1,BADREC                                                        
*                                                                               
RECVB    MVC   P+16(5),=C'D/A ='   PRINT D/A FILE KEY                           
         LH    R0,DAKEYT                                                        
         CHI   R0,50                                                            
         BL    *+8                                                              
         LHI   R0,50                                                            
         GOTO1 =V(HEXOUT),DMCB,DAREC,P+22,(R0),0                                
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LH    R0,DAELD            PRINT D/A FILE LEN/CTL                       
         SH    R0,DAKEYT                                                        
         LA    R2,DAREC                                                         
         AH    R2,DAKEYT                                                        
         GOTO1 =V(HEXOUT),DMCB,(R2),P+20,(R0),0                                 
         MVC   P+16(4),=C'CTL='                                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LH    R5,FULL                                                          
         CH    R5,FULL+2                                                        
         BH    *+8                                                              
         LH    R5,FULL+2                                                        
         LA    R2,DAREC                                                         
         AR    R5,R2               R5=A(END OF RECORD PRINT AREA)               
         AH    R2,DAELD            R2=A(ELEMENT)                                
*                                                                               
RECVC    LLC   R0,1(R2)            R0=ELEMENT LENGTH                            
         LR    R3,R2                                                            
         LR    R4,R0                                                            
         AR    R4,R2                                                            
         B     RECVD               PRINT REC BETWEEN R3 AND R4                  
*                                                                               
RECVC5   DS    0H                                                               
         LTR   R0,R0                                                            
         BZ    RECVE                                                            
         AR    R2,R0               BUMP TO NEXT ELEMENT                         
         B     RECVC                                                            
*                                                                               
RECVD    CR    R3,R5               PRINT ELEMENT START=R3,END=R4                
         BNL   RECVE                                                            
         CR    R4,R5                                                            
         BNH   *+6                                                              
         LR    R4,R5               ADJUST END IF GT MAX                         
         CLI   1(R3),2                                                          
         BNL   *+6                                                              
         LR    R4,R5               ADJUST END IF BAD EL LEN                     
         CR    R4,R5                                                            
         BNE   *+6                                                              
         SR    R0,R0               SET END IF BAD EL LEN                        
         SR    R4,R3               R4=PRINT CHR LEN                             
         GOTO1 =V(HEXOUT),DMCB,(R3),P+16,2                                      
         LA    R3,2(R3)                                                         
         SHI   R4,2                                                             
         BL    RECVC5                                                           
*                                                                               
RECVD2   LR    RF,R4                                                            
         CHI   RF,50                                                            
         BL    *+8                                                              
         LHI   RF,50                                                            
         GOTO1 =V(HEXOUT),DMCB,(R3),P+20,(RF)                                   
         GOTO1 =V(PRINTER)                                                      
         SHI   R4,50                                                            
         BNP   RECVC5                                                           
         LA    R3,50(R3)                                                        
         B     RECVD2                                                           
*                                                                               
RECVE    TM    FLAG2,X'60'         TEST FOR MIN/MAX REC LEN ERRORS              
         BZ    RECVF                                                            
         LH    R5,DARECH           GET PHYSICAL LEN OF REC                      
         SHI   R5,4                                                             
         CH    R5,DAMAX                                                         
         BH    *+12                                                             
         CH    R5,DAMIN                                                         
         BNL   *+8                                                              
         LH    R5,DAMIN            USE MIN LEN IF BAD PHYSICAL LEN              
         STH   R5,FULL                                                          
         LA    R1,DAREC(R5)                                                     
         XC    0(2,R1),0(R1)                                                    
         LA    R5,DAREC                                                         
         AH    R5,DAKEYT                                                        
         MVC   0(2,R5),FULL                                                     
         MVC   P(16),=C'ALTERED REC LEN '                                       
         MVC   P+16(4),=C'CTL='                                                 
         LH    R0,DAELD                                                         
         SH    R0,DAKEYT                                                        
         GOTO1 =V(HEXOUT),DMCB,(R5),P+20,(R0),0                                 
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVF    DS    0H                                                               
         GOTO1 =V(PRINTER)                                                      
*                                                                               
RECVX    J     EXITOK                                                           
RECVALX  EQU   *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* VALIDATE NTI PROGRAM NUMBER RECORDS                                 *         
*                                                                     *         
* THIS ROUTINE COMPARES THE NTI PROGRAM NUMBER BITMAP RECORDS IN THE  *         
* INPUT FILE WITH THOSE ON THE EXISTING NTIFIL, TO CONFIRM THAT THERE *         
* HAS BEEN NO ATTEMPT TO REUSE AN EXISTING NUMBER. THIS ROUTINE IS    *         
* DESIGNED SO THAT WHEN WE EXIT, THE READ SEQUENCE OF THE INPUT FILE  *         
* HAS BEEN RESET, WITH THE FIRST RECORD PLACED IN THE INPUT BUFFER.   *         
* THEN THE UPDATE CAN CONTINUE AS IF NOTHING HAD HAPPENED.            *         
*                                                                     *         
***********************************************************************         
*                                                                               
* ON ENTRY, FIELD DAREC CONTAINS THE FIRST BITMAP RECORD.                       
*                                                                               
NTIPGM#V NTR1  BASE=(*,NTIPGM#X),LABEL=*,WORK=(R4,250)                          
*                                  R4 = A(2000 BYTE BUFFER)                     
*                                                                               
         ST    R4,FULL             SAVE A(WORK BUFFER)                          
*                                                                               
         CLC   TIDA,=F'1'          IS THIS THE FIRST INPUT RECORD?              
         BE    *+6                 YES                                          
         DC    H'0'                THE BITMAP RECORDS *MUST* BE AT THE          
*                                   BEGINNING OF THE INPUT FILE!                
*                                                                               
         LA    RF,NTIPGM70         OVERRIDE EODAD FOR TAPEIN                    
         STCM  RF,7,TINEOD                                                      
*                                                                               
NTIPGM10 DS    0H                                                               
         LA    R3,DAREC            R3 = A(RECORD FROM INPUT FILE)               
         USING PRKEY,R3                                                         
         GOTO1 =V(DATAMGR),DMCB,(0,=C'DMREAD'),=C'NTIDIR',             +        
               PRKMAJOR,LISREC                                                  
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                BITMAP KEY MISSING FROM NTIDIR ?!?           
*                                                                               
         LA    R3,LISREC           R3 = A(RETRIEVED KEY)                        
         LARL  RF,NTIFILL          FIND SPECIFIC DTF#                           
         USING PRMLSTD,RF                                                       
NTIPGM12 CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                NEWDEMO= VALUE NOT FOUND ?!?                 
         CLC   PRKSTAT,PRMLVAL     FIND THE MATCHING NEWDEMO= NUMBER            
         BE    *+12                                                             
         LA    RF,PRMLSTLQ(RF)                                                  
         B     NTIPGM12                                                         
         SR    R0,R0                                                            
         ICM   R0,1,DMGRDTF#       GET DTF# FROM TABLE                          
         BNZ   *+6                                                              
         DC    H'0'                                                             
         DROP  RF                                                               
         BRAS  RE,GETFILAD         GET DTF ADDRESS                              
*                                                                               
         LR    RE,R0                    A(DTF)                                  
         USING DTFPHD,RE                                                        
         TM    DTFOPEN,DTF_OPN          DEMO FILE IS OPEN?                      
         BO    NTIPGM15                 YES                                     
*                                                                               
         NI    DTFTYPE,X'FF'-DTFCACHE   NO: MUST OPEN IT NOW                    
         OI    DTFOPEN,ISFORO           OPEN D/A FILE READONLY                  
         DROP  RE                                                               
*                                                                               
         GOTO1 =V(DADDS),DMCB,A(DAOPEN),0,0,(R0),0,0                            
         XC    DUB,DUB             FIND EOF ON D/A FILE                         
         GOTO1 =V(DADDS),DMCB,A(FNDEOF),0,0,(R0),DUB                            
*                                                                               
NTIPGM15 DS    0H                                                               
         L     R4,FULL             RESTORE A(WORK BUFFER)                       
REC      USING PRKEY,R4                                                         
         MVC   REC.PRKMAJOR,PRKMAJOR      SET MAJOR KEY                         
         XC    REC.PRKMINOR,REC.PRKMINOR  CLEAR MINOR KEY                       
         MVC   REC.PRRSTAT,PRKSTAT        SET STATUS BYTE                       
         LA    RE,PRNDXDA                                                       
         ST    RE,8(R1)            PUT DISK ADDRESS INTO DMCB                   
         GOTO1 =V(DATAMGR),DMCB,(0,=C'DMRDHI'),=C'NTIFIL',,(R4)                 
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                FATAL DATAMGR ERROR                          
         DROP  REC                                                              
         DROP  R3                                                               
*                                                                               
         LA    R3,DAREC            R3 = A(RECORD FROM INPUT FILE)               
         AH    R3,DAELD            R3 = A(1ST ELEMENT IN INPUT RECORD)          
         AH    R4,DAELD            R4 = A(1ST ELEMENT IN NTIFIL RECORD)         
OLDR     USING NTIELEM,R4                                                       
NEWR     USING NTIELEM,R3                                                       
*                                                                               
NTIPGM20 DS    0H                                                               
*                                                                               
* THE CODE BELOW IS DEFENSIVE. IF THE STRUCTURE OF THE BITMAP RECORDS           
* CHANGES IN ANY WAY, THIS CODE MAY WELL NEED TO BE MODIFIED.                   
*                                                                               
         CLC   0(1,R3),0(R4)       ELEMENT CODES MATCH?                         
         BE    *+6                                                              
         DC    H'0'                NO ?!?                                       
         CLI   0(R3),0             END OF RECORD?                               
         BE    NTIPGM60            YES                                          
*                                                                               
         CLI   OLDR.NTICODE,NTICODEQ BITMAP ELEMENT?                            
         BE    *+6                                                              
         DC    H'0'                NO: WE ONLY EXPECT X'04' ELEMENTS            
         CLC   OLDR.NTIELN,NEWR.NTIELN ELEMENT LENGTHS MATCH?                   
         BE    *+6                                                              
         DC    H'0'                NO ?!?                                       
*                                                                               
* THIS CODE PREVENTS THE SCENARIO IN WHICH THE CONVERSION ATTEMPTS TO           
* RESET AN EXISTING NTI PROGRAM NUMBER. I.E., IT'S OKAY FOR THE                 
* CONVERSION TO TURN A BIT ON IF IT'S CURRENTLY OFF IN THE EXISTING             
* EXISTING BITMAP ON NTIFIL, BUT IT'S NEVER OKAY FOR THE CONVERSION TO          
* TURN A BIT OFF IF IT'S CURRENTLY ON!                                          
*                                                                               
         LLC   R1,OLDR.NTIELN      ELEMENT LENGTH (SAME FOR BOTH)               
         SHI   R1,NTIOVLNQ         ...MINUS OVERHEAD PRIOR TO BITMAP            
         BCTR  R1,0                FOR SUBSEQUENT EX INSTRUCTIONS               
         EX    R1,*+8              COPY CURRENT BITMAP INTO WORK                
         B     *+10                                                             
         MVC   WORK(0),OLDR.NTIBITS                                             
         EX    R1,*+8              CLEAR ALL BITS THAT AREN'T CHANGING          
         B     *+10                                                             
         XC    WORK(0),NEWR.NTIBITS                                             
         EX    R1,*+8              CLEAR ALL BITS BEING TURNED *ON*             
         B     *+10                                                             
         NC    WORK(0),OLDR.NTIBITS                                             
         EX    R1,*+8              ANY REMAINING BITS ARE AN ATTEMPT...         
         B     *+10                ...TO TURN BITS *OFF*                        
         OC    WORK(0),WORK        ATTEMPT TO RESET NTI PROGRAM NUMBER?         
         BZ    NTIPGM50            NO                                           
*                                                                               
* AN ATTEMPT IS BEING MADE TO RESET AN NTI PROGRAM NUMBER. DERIVE THAT          
* NUMBER AND RETURN IT IN R0, SO WE CAN PUT IT IN AN E-MAIL MESSAGE.            
* (NOTE: THE CONVERSION MAY BE ATTEMPTING TO RESET MORE THAN ONE NTI            
* PROGRAM NUMBER. THE E-MAIL MESSAGE WILL ONLY INDICATE THE *FIRST*             
* SUCH ATTEMPT, WHICH WILL BE THE LOWEST INVALID NUMBER.)                       
*                                                                               
         SR    R0,R0               R0 = BAD PROGRAM NUMBER                      
         AHI   R1,1                R1 = NUMBER OF BYTES TO CHECK                
         LA    RE,WORK             RE = A(BITMAP ARRAY TO CHECK)                
         CLI   0(RE),0             ANY BITS ON IN THIS BYTE?                    
         BNE   *+18                                                             
         LA    RE,1(RE)            NO: TRY NEXT BYTE                            
         AHI   R0,8                BUMP PROGRAM NUMBER BY 8 (BITS/BYTE)         
         BCT   R1,*-16                                                          
         DC    H'0'                IMPOSSIBLE: NO BITS ARE ON ?!?               
*                                                                               
         LA    RF,X'80'            LEFTMOST BIT                                 
NTIPGM30 DS    0H                                                               
         EX    RF,*+8              TEST EACH BIT UNTIL WE GET A HIT             
         B     *+8                                                              
         TM    0(RE),0                                                          
         BO    NTIPGM40            GOT IT                                       
         SRL   RF,1                TRY THE NEXT BIT                             
         AHI   R0,1                BUMP THE PROGRAM NUMBER                      
         LTR   RF,RF                                                            
         BNZ   NTIPGM30                                                         
         DC    H'0'                IMPOSSIBLE: NO BITS ARE ON ?!?               
*                                                                               
NTIPGM40 DS    0H                                                               
         LLC   RF,NEWR.NTISEQ      BITMAP ELEMENT SEQUENCE NUMBER               
         MHI   RF,L'NTIBITS*8      X NUMBER OF BITS/ELEMENT                     
         AR    R0,RF               R0 = PROGRAM NUMBER 0-BASED...               
         AHI   R0,1                ...BUT NUMBERS ARE 1-BASED                   
         B     NTIPGMX             EXIT AND SIGNAL ERROR                        
*                                                                               
NTIPGM50 DS    0H                                                               
         LLC   R1,OLDR.NTIELN      ELEMENT LENGTH (SAME FOR BOTH)               
         AR    R3,R1               BUMP TO NEXT ELEMENT IN INPUT RECORD         
         AR    R4,R1               BUMP TO NEXT ELEMENT IN NTIFIL REC.          
         B     NTIPGM20                                                         
         DROP  OLDR,NEWR                                                        
*                                                                               
NTIPGM60 DS    0H                                                               
         LA    R3,DAREC            R3 = A(RECORD FROM INPUT FILE)               
         GET   TAPEIN,DARECH       GET NEXT RECORD                              
*                                                                               
         CLC   =C'PNN',0(R3)       NTI PROGRAM NUMBER BITMAP RECORD?            
         BNE   NTIPGM70                                                         
         CLC   =C'PPPP',PRSTAT-PRKEY(R3)                                        
         BE    NTIPGM10            YES: VALIDATE IT                             
*                                                                               
* WE'VE CONFIRMED THAT THERE IS NO ATTEMPT TO RESET ANY NTI NUMBER.             
* CLOSE AND RE-OPEN THE INPUT FILE, SO THAT WE READ IT AGAIN FROM THE           
* BEGINNING. GET THE FIRST RECORD (WHICH MUST BE THE FIRST BITMAP               
* RECORD). WHEN WE EXIT THIS ROUTINE, WE WILL BE PRECISELY WHERE WE             
* WERE BEFORE WE CAME HERE.                                                     
*                                                                               
NTIPGM70 DS    0H                                                               
         CLOSE TAPEIN                                                           
         OPEN  (TAPEIN,INPUT)      REOPEN INPUT FILE TO START OVER              
         GET   TAPEIN,DARECH       REREAD FIRST RECORD INTO DAREC               
*                                                                               
         CLC   =C'PNN',0(R3)       THIS HAD BETTER BE A BITMAP RECORD           
         JNE   *+2                 IT ISN'T ?!?                                 
         CLC   =C'PPPP',PRSTAT-PRKEY(R3)                                        
         JNE   *+2                 IMPOSSIBLE: WE READ IT EARLIER!              
*                                                                               
         MVC   P(29),=C'NO REUSED NTI PROGRAM NUMBERS'                          
         GOTO1 =V(PRINTER)         PUT MESSAGE TO SYSPRINT LOG                  
*                                                                               
         MVI   CHKNTIPG,C'N'       ONLY CALL THIS ROUTINE ONCE!                 
         XC    LISREC,LISREC                                                    
         SR    R0,R0               INDICATES NO REUSED NUMBERS FOUND            
*                                                                               
NTIPGMX  DS    0H                                                               
         XIT1  REGS=(R0)                                                        
*                                                                               
NTIPGM#X EQU   *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO INITIALISE SORTER                                        *         
***********************************************************************         
*                                                                               
SORTSTRT NTR1  BASE=(*,SORTSTRTX),LABEL=*                                       
*                                                                               
         LH    R0,ISKEYL           SET SORT KEY LENGTH                          
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  SORTKLEN,DUB                                                     
*                                                                               
         LH    R0,ISRECL           SET SORT RECORD LENGTH                       
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  SORTRLEN,DUB                                                     
*                                                                               
         GOTO1 =V(SORTER),DMCB,SORTCARD,(X'80',RECCARD),(X'80',0)               
         J     EXITOK                                                           
*                                                                               
SORTCARD DC    80C' '                                                           
         ORG   SORTCARD                                                         
         DC    C'SORT FIELDS=(01,'                                              
SORTKLEN DC    C'NN'                                                            
         DC    C',A),FORMAT=BI'                                                 
         ORG                                                                    
*                                                                               
RECCARD  DC    80C' '                                                           
         ORG   RECCARD                                                          
         DC    C'RECORD TYPE=F,LENGTH='                                         
SORTRLEN DC    C'NN'                                                            
         ORG                                                                    
SORTSTRTX EQU  *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PRINT I/S FILE STATISTICS                                *         
***********************************************************************         
*                                                                               
PRT_IS_STATS NTR1  BASE=(*,PRT_IS_STATS_X),LABEL=*                              
*                                                                               
         USING ISDTF,R5                                                         
         L     R5,ISDTFA                                                        
*                                                                               
         USING EXTENTD,R2                                                       
         LA    R2,ISXTNT           POINT TO START OF EXTENTS                    
         SR    R1,R1                                                            
         SR    RF,RF                                                            
PRTIS10  CLI   0(R2),X'FF'                                                      
         BE    PRTIS20                                                          
         ICM   R1,3,EXT#TRKS       # OF TRACKS                                  
         TM    ISFTYPE,ISFTBIGF    20 BIT?                                      
         BO    *+6                 YES, THEN IT'S LIKE DA FILE MATRIX           
         SR    RF,RF               NO, SO LAST EXTENT HOLDS TOTAL               
         AR    RF,R1                                                            
         LA    R2,EXTLNQ(,R2)                                                   
         B     PRTIS10                                                          
         DROP  R2                                                               
*                                                                               
PRTIS20  CVD   RF,DUB              RF=NUM OF PD TRACKS ALLOCATED                
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTA,DUB        PRIME DATA TRACKS ALLOCATED                  
*                                                                               
         TM    OUTPUT,DISK         WRITING TO DIRECTORY?                        
         BZ    *+12                NO (IT'S A DIRECTORY DUMP)                   
         TM    MODE,UPDATE         IS THIS AN UPDATE?                           
         BNO   PRTIS30             NO (IT'S A DIRECTORY LOAD)                   
*                                                                               
         L     R1,ISOVLAST                                                      
         SRL   R1,12               20 BIT                                       
         TM    ISFTYPE,ISFTBIGF                                                 
         BO    *+8                                                              
         SRL   R1,4                16 BIT                                       
         LR    RE,R1               TOTAL TRACKS USED                            
         B     PRTIS40                                                          
*                                                                               
PRTIS30  DS    0H                                                               
         SR    RE,RE                                                            
         ICM   RE,3,ISPDLAST       ASSUME 16 BIT                                
         TM    ISFTYPE,ISFTBIGF    20-BIT?                                      
         BZ    *+16                NO                                           
         ICM   RE,15,=V(ISLEOFS)   SAVED EOFS FROM 20-BIT ISLDDS                
         ICM   RE,7,0(RE)          SVPDLAST                                     
         SRL   RE,4                                                             
*                                                                               
PRTIS40  DS    0H                                                               
         CVD   RE,DUB              RE=NUM OF PD TRACKS USED                     
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTU,DUB        PD TRACKS USED                               
         LTR   R1,RF               PD TRACKS ALLOCATED                          
         BZ    PRTISX              WILL BE 0 IF INPUT FILE IS EMPTY             
*                                                                               
         SR    RF,RE                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTL,DUB        PD TRACKS AVAILABLE                          
         SR    RE,RE               PREPARE FOR DIVIDE                           
         MHI   RF,100              PREPARE FOR PERCENTAGE                       
         DR    RE,R1                                                            
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOPDTP,DUB        % PD TRACKS AVAILABLE                        
         MVC   P(INFOMS2L),INFOMSG2                                             
*                                                                               
         CHI   RF,DIRLOWQ          SEND WARNING EMAIL IF SPACE ON               
         BH    PRTIS45             DIRECTORY IS LOW                             
         TM    USER,PROGRMMR       USER=PROGRAMMER ?                            
         BO    PRTIS45             YES: DON'T SEND E-MAIL                       
         MVC   MAILRCPS,OPSRECIP   SEND TO DATA CONTROL                         
         MVC   MAILMSG,=CL40'LOW SPACE XX% ON'                                  
         MVC   MAILMSG+10(2),INFOPDTP       % AVAILABLE                         
         MVC   MAILMSG+17(L'MAILMSG-17),ISDSN     AS MUCH AS I CAN FIT          
         GOTO1 =V(SQUASHER),DMCB,MAILMSG,L'MAILMSG                              
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
*                                                                               
PRTIS45  GOTO1 =V(PRINTER)                                                      
*                                                                               
         TM    ISFTYPE,ISFTBIGF    20-BIT?                                      
         BZ    PRTIS50             NO                                           
         ICM   RE,15,=V(ISLEOFS)   SAVED EOFS FROM 20-BIT ISLDDS                
         ICM   RE,7,4(RE)          SVIXLAST                                     
         BZ    PRTISX              (THIS ISN'T A DIRECTORY LOAD)                
         SRL   RE,4                                                             
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOTTTU,DUB        TOTAL TRACKS USED                            
         ICM   RE,15,=V(ISLEOFS)                                                
         SR    RF,RF                                                            
         SR    R1,R1                                                            
         ICM   R1,7,0(RE)          SVPDLAST                                     
         ICM   RE,7,4(RE)          SVIXLAST                                     
         SR    RE,R1                                                            
         SRL   RE,4                                                             
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOIXTU,DUB        INDEX TRACKS USED                            
         MVC   P(INFOMS4L),INFOMSG4                                             
         GOTO1 =V(PRINTER)                                                      
         B     PRTISX                                                           
*                                                                               
PRTIS50  DS    0H                                                               
         MVC   INFOMC1L,=C'CYL'    SET CYL/MST INDEX SIZE                       
         MVC   INFOMC2L,=C'MST'                                                 
         TM    ISINDXTY,X'01'                                                   
         BZ    *+16                                                             
         MVC   INFOMC1L,=C'MST'                                                 
         MVC   INFOMC2L,=C'CYL'                                                 
         MVC   INFOMC1T,=C'BYTES'                                               
         TM    ISINDXTY,X'02'                                                   
         BZ    *+10                                                             
         MVC   INFOMC1T,=C'DUBWS'                                               
         MVC   INFOMC2T,INFOMC1T                                                
         SR    R0,R0                                                            
         ICM   R0,3,ISINDXLN                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC1U,DUB                                                     
         SR    R0,R0                                                            
         ICM   R0,3,ISCILN+2                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  INFOMC2U,DUB                                                     
         MVC   P(INFOMS3L),INFOMSG3                                             
         GOTO1 =V(PRINTER)                                                      
         DROP  R5                                                               
*                                                                               
PRTISX   DS    0H                                                               
         J     EXIT                                                             
*                                                                               
PRT_IS_STATS_X EQU  *                                                           
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO PRINT D/A (DANDX) FILE STATISTICS                        *         
***********************************************************************         
*                                                                               
PRT_DA_STATS NTR1  BASE=(*,PRT_DA_STATS_X),LABEL=*                              
*                                                                               
         MVC   P(L'LOADM1A),LOADM1A  PRINT D/A EXTENT MATRIX HEADINGS           
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         XC    DUB,DUB             FIND EOF ON D/A FILE                         
         GOTO1 =V(DADDS),PARAMS,A(FNDEOF),0,0,DADTFA,DUB                        
*                                                                               
*                                  PRINT D/A EXTENT MATRIX INFO                 
         USING DTFPHD,R2                                                        
         L     R2,DADTFA                                                        
         LA    R3,DNEXTMTX                                                      
         LA    R5,DMTX             16 EXTENT MATRIX AREA                        
         CLC   DMTX(14),=14X'FF'                                                
         BNE   *+8                                                              
         LA    R5,DNDXMTX          48 EXTENT MATRIX AREA                        
         TM    DIND,DINDXAM                                                     
         BZ    *+8                                                              
         ICM   R5,15,DMTX          A(HIGH CORE EXTENT AREA) 48                  
         DROP  R2                                                               
                                                                                
         USING EXTENTD,R2                                                       
         LR    R2,R5                                                            
         XC    PARAM1,PARAM1                                                    
         XC    PARAM2,PARAM2                                                    
         XC    PARAM3,PARAM3                                                    
         LA    R5,1                                                             
*                                                                               
         SAM31 ,                                                                
*                                                                               
PRTDA10  MVC   LOADM2(LOADM2LQ),SPACES    CLEAR MESSAGE LINE                    
         CLI   EXTENTD,X'FF'       TEST END OF MATRIX                           
         BNE   PRTDA15                                                          
         MVC   LOADM2+16(8),=C'TOTALS -'                                        
         LA    R4,PARAMS           POINT TO TOTALS LINE                         
*                                                                               
         SR    RE,RE               PRINT % AVAILABLE                            
         L     RF,4(R4)            TRACKS AVAILABLE                             
         ICM   R1,15,0(R4)         TRACKS ALLOCATED                             
         LTR   R1,R1                                                            
         BZ    PRTDA20             SKIP IF 0 FOR ANY REASON                     
         MHI   RF,100              PREPARE FOR PERCENTAGE                       
         DR    RE,R1                                                            
         MVC   LOADM2PA,=C'AVAIL=XX%'                                           
         EDIT  (RF),(2,LOADM2PA+6),ALIGN=RIGHT,ZERO=NOBLANK                     
*                                                                               
         CHI   RF,FILLOWQ          SEND WARNING EMAIL IF SPACE ON               
         BH    PRTDA12             FILE IS LOW                                  
         TM    USER,PROGRMMR       USER=PROGRAMMER ?                            
         BO    PRTDA12             YES: DON'T SEND E-MAIL                       
         MVC   MAILRCPS,OPSRECIP   SEND TO DATA CONTROL                         
         MVC   MAILMSG,=CL40'LOW SPACE XX% ON'                                  
         MVC   MAILMSG+10(2),LOADM2PA+6     % AVAILABLE                         
         MVC   MAILMSG+17(L'MAILMSG-17),DADSN     AS MUCH AS I CAN FIT          
         GOTO1 =V(SQUASHER),DMCB,MAILMSG,L'MAILMSG                              
         GOTO1 =V(DATAMGR),DMCB,=C'OPMSG',('MAILMS1Q',MAILMSG1)                 
PRTDA12  DS    0H                                                               
*                                                                               
         B     PRTDA20                                                          
*                                                                               
PRTDA15  CVD   R5,DUB              EXTENT NUMBER                                
         UNPK  LOADM2XT,DUB                                                     
         OI    LOADM2XT+1,X'F0'                                                 
         GOTO1 =V(HEXOUT),DMCB,(R3),LOADM2DA,4,0  LAST RECORD DSK ADD           
         XC    P1(12),P1                                                        
*                                                                               
         SR    R1,R1                                                            
         ICM   R1,3,EXT#TRKS       # OF TRACKS FOR EXTENT                       
         LR    RF,R1                                                            
         ST    R1,P1               ALLOC = THIS HITRK-LAST HITRK                
         ICM   R1,3,0(R3)                                                       
         CLI   2(R3),0                                                          
         BE    *+8                                                              
         LA    R1,1(R1)                                                         
         SR    RF,R1                                                            
         ST    RF,P2               AVAIL = THIS HITRK-THIS DNEXT TTTT           
         L     R1,P1                                                            
         SR    R1,RF                                                            
         ST    R1,P3               USED = ALLOC-AVAIL                           
*                                  ADD TO TOTALS LINE                           
         L     RE,PARAM1                                                        
         L     RF,PARAM2                                                        
         L     R0,PARAM3                                                        
         A     RE,P1                                                            
         A     RF,P2                                                            
         A     R0,P3                                                            
         ST    RE,PARAM1                                                        
         ST    RF,PARAM2                                                        
         ST    R0,PARAM3                                                        
         LA    R4,P1                                                            
*                                                                               
PRTDA20  DS    0H                                                               
         SAM24 ,                                                                
*                                  EDIT LINE & PRINT                            
         L     R1,0(R4)                                                         
         EDIT  (R1),LOADM2AL,ZERO=NOBLANK     TRACKS ALLOCATED                  
         L     R1,4(R4)                                                         
         EDIT  (R1),LOADM2AV,ZERO=NOBLANK     TRACKS AVAILABLE                  
         L     R1,8(R4)                                                         
         EDIT  (R1),LOADM2US,ZERO=NOBLANK     TRACKS USED                       
         MVC   P(LOADM2LQ),LOADM2                                               
         GOTO1 =V(PRINTER)                                                      
*                                  BUMP TO NEXT EXTENT                          
         SAM31 ,                                                                
*                                                                               
         CLI   EXTENTD,X'FF'       EXIT IF END OF MATRIX                        
         BE    PRTDAX                                                           
*                                                                               
         LA    R2,EXTLNQ(,R2)                                                   
         LA    R3,L'DNEXTMTX(,R3)                                               
         LA    R5,1(R5)            COUNT # OF EXTENTS                           
         B     PRTDA10                                                          
         DROP  R2                                                               
*                                                                               
PRTDAX   SAM24 ,                                                                
*                                                                               
         J     EXIT                                                             
*                                                                               
PRT_DA_STATS_X EQU  *                                                           
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO ENQUEUE A DEMO FILE OR DIRECTORY BY DSN                  *         
***********************************************************************         
*                                                                               
ENQDSN   NTR1  BASE=(*,ENQDSNX),LABEL=*                                         
*                                                                               
* INPUT:  DUB  = DDNAME                                                         
* OUTPUT: WORK = DSN                                                            
*         BYTE = L'DSN                                                          
*                                                                               
* SYSTEM-LEVEL MVS ENQ MACROS ARE ISSUED TO PREVENT CONCURRENT UPDATES          
* ON A GIVEN DEMO FILE OR DIRECTORY.                                            
*  MAJOR NAME = 'DEMOUPDT'                                                      
*  MINOR NAME = DSN                                                             
*                                                                               
* *** IMPORTANT: THERE IS NO EXPLICIT DEQ OF THE DSN ENQUEUED HERE.             
*       THE DEQUEUE HAPPENS AUTOMATICALLY WHEN THE JOB COMPLETES.               
*       THIS IS BECAUSE THERE IS A PREVAILING ASSUMPTION THAT ONLY ONE          
*       UPDATE WILL OCCUR PER JOB FOR A GIVEN DATASET. IF THAT                  
*       ASSUMPTION IS WRONG, ANY UPDATE AFTER THE FIRST ONE (FOR A              
*       GIVEN DATASET) WILL CAUSE THE ENQ BELOW TO FAIL. IN THAT CASE,          
*       WE'LL HAVE TO THINK A LITTLE HARDER ABOUT WHAT TO DO.                   
*                                                                               
         GOTO1 =V(DYNALLOC),DMCB,(C'D',DUB),WORK                                
         SR    R2,R2                                                            
         ICM   R2,1,DMCBW2         L'DSN                                        
         BNZ   *+6                                                              
         DC    H'0'                DDNAME IS UNALLOCATED ?!?                    
         STC   R2,BYTE             RETURN L'DSN                                 
*                                                                               
         ENQ   (MAJORNAM,WORK,E,(2),SYSTEM),RET=USE                             
         LTR   RF,RF                                                            
         JZ    EXITOK              THE RESOURCE IS AVAILABLE                    
         J     EXITL               THE RESOURCE IS IN USE                       
*                                                                               
ENQDSNX  EQU   *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* WRAP UP                                                             *         
***********************************************************************         
*                                                                               
WRAPUP   NTR1  BASE=(*,WRAPUPX),LABEL=*                                         
*                                                                               
         MVC   P(4),=C'JOB '       PRINT "JOB COMPLETED" MESSAGE TO LOG         
         MVC   P+4(8),MAILJOBN                                                  
         MVC   P+12(2),=C'(J'                                                   
         MVC   P+14(5),MAILJOB#+3                                               
         MVI   P+19,C')'                                                        
         MVC   P+21(34),=C'COMPLETED. ELAPSED TIME = HH:MM:SS'                  
*                                                                               
         TIME  BIN                                                              
         S     R0,STRTTIME         COMPUTE ELAPSED TIME                         
         JNM   *+8                                                              
         A     R0,=A(24*3600*100)  ADD 24HRS, JUST WENT PAST MIDNIGHT           
*                                                                               
         SRDL  R0,32               CONVERT SEC*100 TO SEC                       
         D     R0,=F'100'          LEAVES SECONDS IN R1                         
         LTR   R1,R1               IF R1 = 0, THEN IT TOOK LT 1 SECOND          
         JNZ   *+8                                                              
         LA    R1,1                ROUND UP TO 1 SECOND                         
         LR    RF,R1               SAVE ELAPSED TIME IN SECONDS                 
         SR    R0,R0               PREPARE FOR DIVIDE                           
         D     R0,=F'3600'         GIVES HOURS IN R1                            
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+47(2),DUB                                                      
         SRDL  R0,32                                                            
         D     R0,=F'60'           GIVES MINUTES IN R1/SECS IN R0               
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+50(2),DUB                                                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+53(2),DUB                                                      
*                                                                               
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         J     EXIT                                                             
*                                                                               
WRAPUPX  EQU   *                                                                
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* EQUATED VALUES                                                      *         
***********************************************************************         
*                                                                               
ISMAX    EQU   32                                                               
*                                                                               
DISK     EQU   X'01'                                                            
TAPE     EQU   X'02'                                                            
YES      EQU   X'02'                                                            
NO       EQU   X'01'                                                            
OLD      EQU   X'01'                                                            
SHR      EQU   X'02'                                                            
NOIS     EQU   X'08'                                                            
NODA     EQU   X'04'                                                            
COPY     EQU   X'01'                                                            
REPORT   EQU   X'02'                                                            
UPDATE   EQU   X'03'                                                            
MERGE    EQU   X'10'                                                            
PRTERR   EQU   X'02'                                                            
PRTDEL   EQU   X'04'                                                            
PRTALL   EQU   X'08'                                                            
PROGRMMR EQU   X'01'                                                            
MARKDEL  EQU   X'01'                                                            
UNATTACH EQU   X'02'                                                            
BOOKS    EQU   X'04'                                                            
         EJECT                                                                  
***********************************************************************         
* LITERALS                                                            *         
***********************************************************************         
*                                                                               
         ORG   DELDXMOD+(((*-DELDXMOD)/4096)+1)*4096                            
LITERALS DS    0X                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* COMMON STORAGE                                                      *         
***********************************************************************         
*                                                                               
DUB      DS    D                                                                
FULL     DS    F                                                                
ALOADPT  DC    A(0)                A(USER-SUPPLIED EXTERNAL ROUTINE)            
*                                                                               
STXLST   DC    20F'0'              FOR STXITER: 20 ADDRESS PAIRS MAX            
*                                                                               
VLDDEFN  DC    V(LDDEFN)           FILE DEFINITION                              
VLDPURGE DC    V(LDPURGE)          PURGE TEST                                   
VLDCPTRS DC    V(LDCPTR)           CREATE DIRECTORY POINTERS                    
VLDTPTRS DC    V(LDTPTR)           TEST DIRECTORY POINTERS (PASSIVE)            
VLDCOUNT DC    V(LDCOUNT)          RECORD TYPE COUNT                            
VLDSIZE  DC    V(LDSIZE)           RECORD SIZE COUNT                            
*                                                                               
         DS    0F                                                               
DMCB     DC    XL24'00'                                                         
         ORG   DMCB                                                             
DMCBW1   DS    F                                                                
DMCBW2   DS    F                                                                
DMCBW3   DS    F                                                                
DMCBW4   DS    F                                                                
DMCBW5   DS    F                                                                
DMCBW6   DS    F                                                                
*                                                                               
         DS    0F                                                               
DP       DC    XL24'00'                                                         
         ORG   DP                                                               
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
         DS    0F                                                               
PARAMS   DC    XL24'00'                                                         
         ORG   PARAMS                                                           
PARAM1   DS    F                                                                
PARAM2   DS    F                                                                
PARAM3   DS    F                                                                
PARAM4   DS    F                                                                
PARAM5   DS    F                                                                
PARAM6   DS    F                                                                
*                                                                               
ERRNUM   DC    F'0'                                                             
*                                                                               
HALF     DS    H                                                                
*                                                                               
CFLDHDR  DC    XL8'00'             FAKE TWA FLDHDR FOR SCANNER                  
C        DS    CL80                                                             
SCN2NDVQ EQU   70                  L'2ND HALF OF SCANNER BLOCK                  
SCNBLKLQ EQU   12+L'SC1STFLD+SCN2NDVQ  L'EACH SCANNER TABLE ENTRY               
*                                                                               
SVDAHDR  DC    XL32'00'                                                         
*                                                                               
LISREC   DC    XL(ISMAX)'00'       LAST I/S RECORD PROCESSED                    
LDAREC   DC    XL(ISMAX)'00'       LAST D/A RECORD PROCESSED                    
*                                                                               
DADTFA   DC    A(0)                A(DTF)                                       
DAELD    DC    H'0'                DISPLACEMENT TO FIRST ELEMENT                
DALINKD  DC    H'0'                DISPLACEMENT TO LINK FIELD                   
DAKEYLL  DC    H'0'                L'MAJOR KEY                                  
DAKEYLR  DC    H'0'                L'MINOR KEY                                  
DAKEYT   DC    H'0'                L'COMPLETE KEY (MAJOR PLUS MINOR)            
DAKEYL   DC    H'0'                KEY COMPARE LENGTH (L'MAJOR KEY)             
DACTLL   DC    H'0'                NUMBER OF CONTROL BYTES                      
DAMIN    DC    H'0'                D/A FILE MIN REC LENGTH                      
DAMAX    DC    H'0'                D/A FILE MAX REC LENGTH                      
*                                                                               
ERRCNT   DC    H'0'                                                             
BADPARMS DC    C' '                                                             
FRSTIO   DC    C' '                                                             
BYTE     DS    X                                                                
FLAG2    DC    X'00'                                                            
ISTRACEF DC    C'N'                ASSUME NO ISTRACE FILE                       
*                                                                               
DATEVAL  DC    CL8'????????'       MM/DD/YY                                     
DATEYMD  DS    CL6                 YYMMDD (NOT 'FUNNY' FORMAT)                  
ASMIDF   DC    CL8'ASMIDF'         DEBUGGER EXECUTABLE NAME                     
MAJORNAM DC    C'DEMOUPDT'         MAJORNAME FOR MVS ENQ IN UPDATE MODE         
MAILJOBN DS    CL8                 MVS JOBNAME                                  
EFFS     DC    XL2'FFFF'                                                        
*                                                                               
MAXIOS   DC    F'0'                                                             
LOADNAME DC    CL8' '              EXTERN (LOAD=) MODULE                        
DAFILEID DC    CL8' '                                                           
DAFILEIX DC    CL8' '                                                           
ISFILEID DC    CL8' '                                                           
ISFILEIX DC    CL8' '                                                           
*                                                                               
TINEOF   DC    C'N'                TAPE INPUT EOF FLAG                          
CHKNTIPG DC    C'N'                'Y' = MUST CHECK NTI PROGRAM NUMBERS         
MINRSEEN DC    C'N'                DID WE READ 1ST MINOR KEY FOR MAJOR?         
*                                                                               
STATUS_DEL  EQU X'80'              DIRECTORY RECORD MARKED FOR DELETION         
STATUS_EXTP EQU X'40'              EXTENDED PASSIVE RECORD CONTAINS             
*                                   DATA IN THE DISK ADDRESS FIELD              
STATUS_FILE# EQU X'3F'             LOGICAL FILE NUMBER BITS                     
TEST_DEMOFILE EQU 31               ALL TEST FILES ARE LOGICAL FILE #31          
*                                                                               
WHICHMOD DC    C' '                LOAD MODULE INDICATOR                        
DELD     EQU   C'D'                                                             
PVLD     EQU   C'P'                                                             
ISDTF#   DS    X                   I/S INTERNAL FILE NUMBER                     
DEMDIRA# EQU   X'2F'                                                            
DEMDIRN# EQU   X'2D'                                                            
DEMDIRR# EQU   X'30'                                                            
NTIDIR#  EQU   X'38'                                                            
PAVDIR#  EQU   X'2C'                                                            
*                                                                               
TRKBUFLN DC    A(60000)                                                         
PTRBLKLN EQU   10                  (NO TRUE PASSIVES FOR DEMOS!)                
*                                                                               
ISNAME   DC    CL8' '                                                           
ISDTFA   DS    A                                                                
ISKEYL   DS    H                   I/S KEY LENGTH                               
ISKEYL1  DS    H                   I/S KEY LENGTH MINUS 1 (FOR EX)              
ISRECL   DS    H                   I/S RECORD LENGTH                            
*                                                                               
PLXTRN   DC    A(DAREC),A(TAPEOUT),A(PARMCARD),V(LDDEFN)                        
         DC    V(PRINTER),V(CPRINT),V(DATAMGR)                                  
PLCOUNT  DC    A(ISREC),A(ISNAME),A(ISDTF#),A(COUNT)                            
PLPURGE  DC    A(ISREC),A(ISDTF#)                                               
PLCPTRS  DC    A(DAREC),A(0)                                                    
PLTPTRS  DC    A(ISREC),A(WORK),A(SELVAL),A(BTYPE),A(MEDIA)                     
PLSIZE   DC    A(0),A(DANAME),A(DAREC)                                          
*                                                                               
APTRBLK  DC    A(0)                                                             
AISTRK   DC    A(0)                                                             
ADATRK   DC    A(0)                                                             
*                                                                               
SELVAL   DS    0XL2                SELECTIVE PERIOD                             
SELYR    DS    X                   YEAR (BINARY)                                
SELPD    DS    X                   PERIOD (1-4)                                 
*                                                                               
DANAME   DC    CL8' '                                                           
*                                                                               
STRTTIME DS    F                   START TIME (1/100TH'S OF A SECOND)           
         EJECT                                                                  
LOADM1   DC    C'D/A FILE XXXXXXX LOADED  - DSN='                               
LOADM1A  DC    C'                           XTNT     ALLOC     AVAIL   +        
                 USED     LAST REC'                                             
LOADM2   DS    CL28                                                             
LOADM2XT DS    CL2        EXTENT #                                              
         DS    CL4                                                              
LOADM2AL DS    CL7        TRACKS ALLOCATED                                      
         DS    CL3                                                              
LOADM2AV DS    CL7        TRACKS AVAILABLE                                      
         DS    CL2                                                              
LOADM2US DS    CL7        TRACKS USED                                           
         DS    CL5                                                              
LOADM2DA DS    CL8        DISK ADDRESS                                          
         DS    C                                                                
         ORG   LOADM2DA                                                         
LOADM2PA DS    C'AVAIL=XX%'  PERCENT AVAILABLE FOR TOTALS LINE                  
LOADM2LQ EQU   *-LOADM2                                                         
*                                                                               
INFOMSGI DC    C'I/S FILE XXXXXXX LOADED  - DSN='                               
INFOMSG2 DC    C'                         - PDTK ALLOC='                        
INFOPDTA DC    CL7' '                                                           
         DC    C',PDTK USED='                                                   
INFOPDTU DC    CL7' '                                                           
         DC    C',PDTK AVAIL='                                                  
INFOPDTL DC    CL7' '                                                           
         DC    C' ('                                                            
INFOPDTP DC    C'  '               PERCENT AVAILABLE                            
         DC    C'%)'                                                            
INFOMS2L EQU   *-INFOMSG2                                                       
*                                                                               
INFOMSG3 DC    CL(L'INFOMSG2)' ',C' '                                           
INFOMC1L DC    CL3' '                                                           
         DC    CL2' '                                                           
INFOMC1T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC1U DC    CL7' '                                                           
         DC    C','                                                             
INFOMC2L DC    CL3' '                                                           
         DC    CL1' '                                                           
INFOMC2T DC    C'BYTES'                                                         
         DC    C'='                                                             
INFOMC2U DC    CL7' '                                                           
INFOMS3L EQU   *-INFOMSG3                                                       
*                                                                               
INFOMSG4 DC    C'IS PDIXOV INDEX  LOADED '                                      
         DC    C'IXTK USED ='                                                   
INFOIXTU DC    CL7' '                                                           
         DC    C',TRKS USED='                                                   
INFOTTTU DC    CL7' '                                                           
INFOMS4L EQU   *-INFOMSG4                                                       
         SPACE 2                                                                
HYPHENS  DC    32C'-'                                                           
*                                                                               
MAILMSG1 DC    C'AUTONOTE*'                                                     
MAILRCPS DS    CL44                RECIPIENT LIST                               
         DC    C':'                                                             
         DC    C'('                                                             
MAILJOB# DS    CL8                 MVS JOB NUMBER                               
         DC    C') '                                                            
MAILMSG  DS    CL40                MESSAGE IS INSERTED HERE                     
MAILMS1Q EQU   *-MAILMSG1                                                       
*                                                                               
PGRMRS   DC    CL(L'MAILRCPS)'US-MFDemosProgrammers'                            
OPSRECIP DC    CL(L'MAILRCPS)'US-OperationsSupportNY@MEDIAOCEAN.COM'            
*                                                                               
DIRLOWQ  EQU   5   %      SEND WARNING EMAIL IF SPACE LOWER THAN THIS           
FILLOWQ  EQU   3   %      SEND WARNING EMAIL IF SPACE LOWER THAN THIS           
*                                                                               
PARMCARD DS    CL80                THESE TWO CARDS MUST REMAIN                  
STATCARD DS    CL80                TOGETHER IN STORAGE                          
*                                                                               
STARTKEY DC    (ISMAX)X'00'        START KEY (VIA STARTKEY= PARAMETER)          
ENDKEY   DC    (ISMAX)X'FF'        END KEY (VIA ENDKEY= PARAMETER)              
*                                                                               
*                                  FOR MVS ENQ ON UPDATES:                      
DADSN    DC    CL44' '              DSN OF D/A FILE BEING UPDATED               
ISDSN    DC    CL44' '              DSN OF I/S FILE BEING UPDATED               
*                                                                               
         DS    0F                                                               
WORK     DS    CL256                                                            
         EJECT                                                                  
***********************************************************************         
* TABLE OF COUNTERS AND DESCRIPTIONS                                            
***********************************************************************         
*                                                                               
         DS    0D                                                               
COUNTERS DS    0CL24                                                            
TIIS     DC    F'0',CL20'I/S tape reads'                                        
TIDA     DC    F'0',CL20'D/A tape reads'                                        
TIDEL    DC    F'0',CL20'I/S tape deletes'                                      
DODA     DC    F'0',CL20'D/A disk writes'                                       
DIST     DC    F'0',CL20'SORTFIL input'                                         
DOST     DC    F'0',CL20'SORTFIL output'                                        
DOIS     DC    F'0',CL20'I/S disk adds'                                         
DIIS     DC    F'0',CL20'I/S disk reads'                                        
DWIS     DC    F'0',CL20'I/S disk writes'                                       
DIISD    DC    F'0',CL20'I/S disk deletes'                                      
DIDA     DC    F'0',CL20'D/A disk reads'                                        
DIDAD    DC    F'0',CL20'D/A disk deletes'                                      
TOIS     DC    F'0',CL20'I/S tape writes'                                       
TODA     DC    F'0',CL20'D/A tape writes'                                       
TOCIS    DC    F'0',CL20'I/S tape copy writes'                                  
TOCDA    DC    F'0',CL20'D/A tape copy writes'                                  
*                                                                               
BADERRS  EQU   *                   THE FOLLOWING ERRORS TRIGGER E-MAILS         
*                                   AND CONSOLE MESSAGES                        
DUPKEY   DC    F'0',CL20'I/S disk dup key'                                      
SEQERR   DC    F'0',CL20'I/S disk seq error'                                    
DUPDSKAD DC    F'0',CL20'I/S see SHOWDUPS'                                      
CHKTHESE DC    F'0',CL20'I/S see CHKTHESE'                                      
BADADR   DC    F'0',CL20'D/A disk bad address'                                  
KEYNEQ   DC    F'0',CL20'D/A disk key neq'                                      
BADREC   DC    F'0',CL20'D/A disk bad record'                                   
TIDASEQ  DC    F'0',CL20'D/A tape seq err'                                      
DIISPD   DC    F'0',CL20'Passvs. deleted'                                       
DIISPNS  DC    F'0',CL20'Passvs. not selected'                                  
         DC    X'FF'               EOT MARKER                                   
         EJECT                                                                  
***********************************************************************         
* DCB'S FOR TAPES                                                               
***********************************************************************         
*                                                                               
TAPEIN   DCB   DDNAME=TAPEIN,DSORG=PS,RECFM=VB,LRECL=2000,             +        
               MACRF=GM,EODAD=EOFTIN                                            
         ORG   TAPEIN+(DCBEODA-IHADCB)                                          
TINEOD   DS    AL3(0)                                                           
         ORG                                                                    
*                                                                               
TAPEOUT  DCB   DDNAME=TAPEOUT,DSORG=PS,RECFM=VB,LRECL=2000,MACRF=PM,   +        
               BLKSIZE=32760                                                    
*&&DO                                                                           
* TO ENABLE THIS, UNCOMMENT THIS BLOCK AND REMOVE THE BLKSIZE= ABOVE            
               DCBE=TAPEOUTE                                                    
TAPEOUTE DCBE  BLKSIZE=0                                                        
*&&                                                                             
*                                                                               
TAPECOPY DCB   DDNAME=TAPECOPY,DSORG=PS,RECFM=VB,LRECL=2000,MACRF=PM,  +        
               BLKSIZE=32760                                                    
*&&DO                                                                           
* TO ENABLE THIS, UNCOMMENT THIS BLOCK AND REMOVE THE BLKSIZE= ABOVE            
               DCBE=TAPECPYE                                                    
TAPEOUTE DCBE  BLKSIZE=0                                                        
*&&                                                                             
*                                                                               
SEQDIR   DCB   DDNAME=SEQDIR,DSORG=PS,RECFM=VB,LRECL=2000,             +        
               BLKSIZE=32760,MACRF=PM                                           
*                                                                               
ISTRACE  DCB   DDNAME=ISTRACE,DSORG=PS,RECFM=FB,LRECL=80,MACRF=PM               
*                                                                               
COP1CNTL DCB   DDNAME=COP1CNTL,DSORG=PS,RECFM=FB,LRECL=80,MACRF=PM              
NSRTCNTL DCB   DDNAME=NSRTCNTL,DSORG=PS,RECFM=FB,LRECL=80,MACRF=PM              
SRT1CNTL DCB   DDNAME=SRT1CNTL,DSORG=PS,RECFM=FB,LRECL=80,MACRF=PM              
SRT2CNTL DCB   DDNAME=SRT2CNTL,DSORG=PS,RECFM=FB,LRECL=80,MACRF=PM              
*                                                                               
EOFTIN   DC    H'0'                                                             
         EJECT                                                                  
***********************************************************************         
* PARAMETER TABLE - LIST OF KEYWORDS AND VALUES                       *         
***********************************************************************         
*                                                                               
PRMTAB   DS    0D                                                               
         DC    CL8'ABEND   ',AL1(05,05)                                         
ABEND    DC    AL1(0),AL1(NO),AL1(PRMFLST),XL3'000000'                          
         DC    A(0,ABENDL)                                                      
*                                                                               
         DC    CL8'BTYPE   ',AL1(02,05)                                         
BTYPE    DC    AL1(0),AL1(0),AL1(PRMFRTN),XL3'000000'                           
         DC    A(VALBTYPE,0)                                                    
*                                                                               
         DC    CL8'COUNT   ',AL1(05,05)                                         
COUNT    DC    AL1(0),AL1(NO),AL1(PRMFLST),XL3'000000'                          
         DC    A(0,COUNTL)                                                      
*                                                                               
         DC    CL8'WARNINGS',AL1(04,08)                                         
WARN     DC    AL1(0),AL1(YES),AL1(PRMFLST),XL3'000000'                         
         DC    A(0,WARNL)                                                       
*                                                                               
         DC    CL8'DAFILE  ',AL1(02,06)                                         
DAFILE   DC    AL1(0),AL1(0),AL1(PRMFTXT),XL3'000000'                           
         DC    A(0,DAFILEID)                                                    
*                                                                               
         DC    CL8'DISP    ',AL1(04,04)                                         
DISP     DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,DISPL)                                                       
*                                                                               
         DC    CL8'DATE    ',AL1(04,04)                                         
DATEIN   DC    AL1(0),AL1(0),AL1(PRMFRTN+PRMFSGL),XL3'000000'                   
         DC    A(VALDATE,0)                                                     
*                                                                               
         DC    CL8'ENDKEY  ',AL1(03,06)                                         
ENDK     DC    AL1(0),AL1(0),AL1(PRMFRTN+PRMFSGL),XL3'000000'                   
         DC    A(VALEK,0)                                                       
*                                                                               
         DC    CL8'INPUT   ',AL1(02,05)                                         
INPUT    DC    AL1(0),AL1(0),AL1(PRMFREQ+PRMFLST),XL3'000000'                   
         DC    A(0,INPUTL)                                                      
*                                                                               
         DC    CL8'ISFILE  ',AL1(02,06)                                         
ISFILE   DC    AL1(0),AL1(0),AL1(PRMFTXT),XL3'000000'                           
         DC    A(0,ISFILEID)                                                    
*                                                                               
         DC    CL8'LOAD    ',AL1(04,04)                                         
LOAD     DC    AL1(0),AL1(0),AL1(PRMFRTN),XL3'000000'                           
         DC    A(VALLOAD,0)                                                     
*                                                                               
         DC    CL8'MAXRECS ',AL1(03,07)                                         
MAXRECS  DC    AL1(0),AL1(0),AL1(PRMFRTN),XL3'000000'                           
         DC    A(VALMAX,0)                                                      
*                                                                               
         DC    CL8'MEDIA   ',AL1(02,05)                                         
MEDIA    DC    AL1(0),AL1(0),AL1(PRMFRTN),XL3'000000'                           
         DC    A(VALMEDIA,0)                                                    
*                                                                               
         DC    CL8'MODE    ',AL1(04,04)                                         
MODE     DC    AL1(0),AL1(0),AL1(PRMFREQ+PRMFLST),XL3'000000'                   
         DC    A(0,MODEL)                                                       
*                                                                               
         DC    CL8'NEWDEMO ',AL1(07,07)                                         
NEWDEMO  DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,NEWDEML)                                                     
*                                                                               
         DC    CL8'OUTPUT  ',AL1(06,06)                                         
OUTPUT   DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,OUTPUTL)                                                     
*                                                                               
         DC    CL8'PARAM   ',AL1(05,05)                                         
PARAM    DC    AL1(0),AL1(0),AL1(PRMFRTN+PRMFSGL),XL3'000000'                   
         DC    A(VALP,0)                                                        
*                                                                               
         DC    CL8'RECCHECK',AL1(02,08)                                         
CHECK    DC    AL1(0),AL1(NO),AL1(PRMFLST),XL3'000000'                          
         DC    A(0,CHECKL)                                                      
*                                                                               
         DC    CL8'SELECT  ',AL1(03,06)                                         
SELECT   DC    AL1(0),AL1(0),AL1(PRMFRTN),XL3'000000'                           
         DC    A(VALSEL,0)                                                      
*                                                                               
         DC    CL8'SIZE    ',AL1(04,04)                                         
SIZE     DC    AL1(0),AL1(NO),AL1(PRMFLST),XL3'000000'                          
         DC    A(0,SIZEL)                                                       
*                                                                               
         DC    CL8'STARTKEY',AL1(05,08)                                         
STARTK   DC    AL1(0),AL1(0),AL1(PRMFRTN+PRMFSGL),XL3'000000'                   
         DC    A(VALSK,0)                                                       
*                                                                               
         DC    CL8'STATION ',AL1(04,07)                                         
STATION  DC    AL1(0),AL1(0),AL1(PRMFRTN+PRMFSGL),XL3'000000'                   
         DC    A(VALSTN,0)                                                      
*                                                                               
         DC    CL8'COPY    ',AL1(04,04)                                         
TCOPY    DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,TCOPYL)                                                      
*                                                                               
         DC    CL8'USER    ',AL1(04,04)                                         
USER     DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,USERL)                                                       
*                                                                               
         DC    CL8'!POINTER',AL1(08,08)                                         
POINTERS DC    AL1(0),AL1(0),AL1(PRMFLST),XL3'000000'                           
         DC    A(0,POINTERL)                                                    
*                                                                               
         DC    CL8'VERIFY  ',AL1(06,06)                                         
VERIFY   DC    AL1(0),AL1(NO),AL1(PRMFLST),XL3'000000'                          
         DC    A(0,VERIFYL)                                                     
*                                                                               
         DC    CL8'WRITE   ',AL1(05,05)                                         
WRITE    DC    AL1(0),AL1(YES),AL1(PRMFLST),XL3'000000'                         
         DC    A(0,WRITEL)                                                      
*                                                                               
         DC    CL8'POSTCHEK',AL1(08,08)                                         
POSTCHEK DC    AL1(0),AL1(YES),AL1(PRMFLST),XL3'000000'                         
         DC    A(0,POSTCHKL)                                                    
*                                                                               
         DC    X'FF'                                                            
*                                                                               
PRMTABD  DSECT ,                                                                
PRMNAME  DS    CL8                 PARAMETER KEYWORD NAME                       
PRMMINL  DS    X                   MINIMUM INPUT LENGTH                         
PRMMAXL  DS    X                   MAXIMUM INPUT LENGTH                         
PRMAVAL  DS    X                   ACTUAL PARAMETER VALUE                       
PRMDVAL  DS    X                   DEFAULT PARAMETER VALUE                      
PRMFLAG  DS    X                   FLAGS                                        
PRMFREQ  EQU   X'80'               PARAMETER IS REQUIRED                        
PRMFLST  EQU   X'40'               PARAMETER COMES FROM LIST                    
PRMFRTN  EQU   X'20'               PARAMETER HAS VALIDATION ROUTINE             
PRMFTXT  EQU   X'10'               PARAMETER IS TEXT                            
PRMFSGL  EQU   X'01'               ONE PARAMETER ONLY ALLOWED ON CARD           
         DS    XL3                                                              
PRMRTN   DS    A                   A(VALIDATION ROUTINE)                        
PRMLST   DS    A                   A(ENTRY LIST)                                
         ORG   PRMLST                                                           
PRMTXT   DS    A                   A(8 BYTE TEXT FIELD)                         
PRMTABLQ EQU   *-PRMTABD                                                        
*                                                                               
DELDXMOD CSECT                                                                  
         EJECT                                                                  
***********************************************************************         
* SINGLE RECORD I/O AREAS                                             *         
***********************************************************************         
         DS    0D                                                               
         DC    C'***I/S**'                                                      
ISRECH   DS    F                                                                
ISREC    DS    CL(ISMAX)                                                        
*                                                                               
         DS    0D                                                               
         DC    C'***D/A**'                                                      
DARECH   DS    F                                                                
DARECL   EQU   2000                                                             
DAREC    DS    (DARECL)X                                                        
         DS    4C                                                               
         EJECT                                                                  
***********************************************************************         
* NON-ADDRESSABLE STORAGE AREAS                                       *         
***********************************************************************         
*                                                                               
         DS    0D                                                               
         DC    CL16'*SSB*SSB*SSB*SSB'                                           
* ++INCLUDE FASSBOFF                                                            
         PRINT OFF                                                              
       ++INCLUDE FASSBOFF                                                       
         PRINT ON                                                               
         ORG   SSOOFF                                                           
SSB      DC    XL(SSOOFFX-SSOOFF)'00'                                           
         ORG   SSOXTND                                                          
         DC    X'FF'               SET EXTENDED OFFLINE SSB                     
         ORG                                                                    
         SPACE 3                                                                
         DS    0D                                                               
         DC    CL16'*UTL*UTL*UTL*UTL'                                           
UTL      DC    256X'00'                                                         
         EJECT                                                                  
         DS    0D                                                               
CCBCCWL  DC    C'***CCB**'                                                      
         DS    136C                                                             
*                                                                               
* SIZE IS ENOUGH FOR 2 BUFFERS (AS PER HIGHEST DEMO DIRECTORY BLKSIZE           
* AS DEFINED IN DMFILESUS), PLUS ANOTHER 5000 JUST IN CASE...                   
         DS    0D                                                               
ISADDBUF DS    ((2*13682)+5000)X   ADD BUFFERS FOR I/S FILES                    
         EJECT                                                                  
***********************************************************************         
* LISTS OF PARAMETER VALUES AND EQUATES                               *         
***********************************************************************         
*                                                                               
         DS    0D                                                               
         DC    CL16'*PARAM LIST TBL*'                                           
*                                                                               
MODEL    DC    CL10'COPY      ',AL1(COPY),XL5'00'                               
         DC    CL10'COPYD     ',AL1(COPY+NODA),XL5'00'                          
         DC    CL10'COPYF     ',AL1(COPY+NOIS),XL5'00'                          
         DC    CL10'REPORT    ',AL1(REPORT),XL5'00'                             
         DC    CL10'REPORTD   ',AL1(REPORT+NODA),XL5'00'                        
         DC    CL10'REPORTF   ',AL1(REPORT+NOIS),XL5'00'                        
         DC    CL10'UPDATE    ',AL1(UPDATE),XL5'00'                             
         DC    CL10'MERGE     ',AL1(MERGE),XL5'00'                              
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
INPUTL   DC    CL10'DISK      ',AL1(DISK),XL5'00'                               
         DC    CL10'TAPE      ',AL1(TAPE),XL5'00'                               
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
OUTPUTL  DC    CL10'DISK      ',AL1(DISK),XL5'00'                               
         DC    CL10'TAPE      ',AL1(TAPE),XL5'00'                               
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
TCOPYL   DC    CL10'TAPE      ',AL1(TAPE),XL5'00'                               
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
USERL    DC    CL10'PROGRAMMER',AL1(PROGRMMR),XL5'00'                           
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
POINTERL DC    CL10'MARKDELETE',AL1(MARKDEL),XL5'00'                            
         DC    CL10'UNATTACHED',AL1(UNATTACH),XL5'00'                           
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
CHECKL   DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    CL10'DELETE    ',AL1(YES+PRTDEL),XL5'00'                         
         DC    CL10'PRINT     ',AL1(YES+PRTALL),XL5'00'                         
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
COUNTL   DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    CL10'BOOKS     ',AL1(YES+BOOKS),XL5'00'                          
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
VERIFYL  DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
WARNL    DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
ABENDL   DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
DISPL    DC    CL10'OLD       ',AL1(OLD),XL5'00'                                
         DC    CL10'SHR       ',AL1(SHR),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
SIZEL    DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
WRITEL   DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
POSTCHKL DC    CL10'NO        ',AL1(NO),XL5'00'                                 
         DC    CL10'YES       ',AL1(YES),XL5'00'                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
**********************************************************************          
* WHEN A NEW SPLIT DEMO FILE IS ADDED, ALSO ADD IT TO THE APPROPRIATE           
* TABLE IN DELDDCNT OR PVLDDCNT, SO WE GET ACCURATE DIRECTORY COUNTS            
* BROKEN OUT BY ASSOCIATED FILE.                                                
*                                                                               
* IF A DTF# IS PRESENT IN THIS TABLE, THEN IT MUST BE KEPT IN SYNC              
* WITH DATAMGR. THAT NUMBER ALLOWS US TO POINT TO THE TRUE DTF FOR              
* THE FILE, RATHER THAN THE DTF IN THE ....DEFN MEMBER. THIS IS                 
* MANDATORY FOR NTIFIL, BECAUSE WE NEED TO READ THE FILE BEFORE DOING           
* UPDATES (TO VALIDATE THE NTI PROGRAM NUMBERS).                                
*                                                                               
**********************************************************************          
*                                                                               
NEWDEML  DS    0D                                                               
         DC    CL10'DEMFILO   ',AL1(01),XL1'00',XL4'00'                         
         DC    CL10'DEMFILN   ',AL1(02),XL1'00',XL4'00'                         
         DC    CL10'DEMFILP   ',AL1(03),XL1'00',XL4'00'                         
         DC    CL10'DEMFILQ   ',AL1(04),XL1'00',XL4'00'                         
         DC    CL10'DEMFILU   ',AL1(05),XL1'00',XL4'00'                         
         DC    CL10'DEMFILV   ',AL1(06),XL1'00',XL4'00'                         
         DC    CL10'DEMFILW   ',AL1(07),XL1'00',XL4'00'                         
         DC    CL10'DEMFILY   ',AL1(08),XL1'00',XL4'00'                         
         DC    CL10'DEMFILI   ',AL1(09),XL1'00',XL4'00'                         
         DC    CL10'DEMFILJ   ',AL1(10),XL1'00',XL4'00'                         
         DC    CL10'DEMFILK   ',AL1(11),XL1'00',XL4'00'                         
         DC    CL10'DEMFILL   ',AL1(12),XL1'00',XL4'00'                         
         DC    CL10'DEMFILM   ',AL1(13),XL1'00',XL4'00'                         
         DC    CL10'DEMFILS   ',AL1(14),XL1'00',XL4'00'                         
         DC    CL10'DEMFILZ   ',AL1(15),XL1'00',XL4'00'                         
         DC    CL10'DEMFILB   ',AL1(16),XL1'00',XL4'00'                         
         DC    CL10'DEMFILC   ',AL1(17),XL1'00',XL4'00'                         
         DC    CL10'DEMFILD   ',AL1(18),XL1'00',XL4'00'                         
         DC    CL10'DEMFILE   ',AL1(19),XL1'00',XL4'00'                         
         DC    CL10'DEMFILF   ',AL1(20),XL1'00',XL4'00'                         
         DC    CL10'DEMFILG   ',AL1(21),XL1'00',XL4'00'                         
         DC    CL10'DEMFILH   ',AL1(22),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL3   ',AL1(23),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL5   ',AL1(24),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL7   ',AL1(25),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL9   ',AL1(26),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL1   ',AL1(27),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL6   ',AL1(28),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL8   ',AL1(29),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL$   ',AL1(30),XL1'00',XL4'00'                         
         DC    CL10'DEMFLTN   ',AL1(TEST_DEMOFILE),XL1'00',XL4'00'              
         DC    CL10'DEMFLNA   ',AL1(32),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNB   ',AL1(33),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNC   ',AL1(34),XL1'00',XL4'00'                         
         DC    CL10'DEMFLND   ',AL1(35),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNE   ',AL1(36),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNF   ',AL1(37),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNG   ',AL1(38),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNH   ',AL1(39),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNI   ',AL1(40),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNJ   ',AL1(41),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNK   ',AL1(42),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNL   ',AL1(43),XL1'00',XL4'00'                         
         DC    CL10'DEMFLNM   ',AL1(44),XL1'00',XL4'00'                         
*                                                                               
         DC    CL10'PAVFIL    ',AL1(01),XL1'00',XL4'00'                         
         DC    CL10'PAVFILA   ',AL1(02),XL1'00',XL4'00'                         
         DC    CL10'PAVFILB   ',AL1(03),XL1'00',XL4'00'                         
         DC    CL10'PAVFILC   ',AL1(04),XL1'00',XL4'00'                         
         DC    CL10'PAVFLTA   ',AL1(TEST_DEMOFILE),XL1'00',XL4'00'              
*                                                                               
         DC    CL10'DEMFILA   ',AL1(01),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL2   ',AL1(02),XL1'00',XL4'00'                         
         DC    CL10'DEMFIL4   ',AL1(03),XL1'00',XL4'00'                         
         DC    CL10'DEMFILT   ',AL1(04),XL1'00',XL4'00'                         
         DC    CL10'DEMFLTA   ',AL1(TEST_DEMOFILE),XL1'00',XL4'00'              
*                                                                               
         DC    CL10'DEMFILR   ',AL1(01),XL1'00',XL4'00'                         
         DC    CL10'DEMFLTR   ',AL1(TEST_DEMOFILE),XL1'00',XL4'00'              
*                                                                               
* THE NTI FILE LIST *MUST* BE THE LAST IN THE ENTIRE LIST, BECAUSE              
* THERE IS CODE ABOVE THAT LOOKS FOR THE EOT MARKER THAT FOLLOWS THIS.          
*                                                                               
NTIFILL  EQU   *                                                                
         DC    CL10'NTIFILO   ',AL1(01),XL1'3C',XL4'00'                         
         DC    CL10'NTIFILN   ',AL1(02),XL1'39',XL4'00'                         
         DC    CL10'NTIFILP   ',AL1(03),XL1'3E',XL4'00'                         
         DC    CL10'NTIFILQ   ',AL1(04),XL1'29',XL4'00'                         
         DC    CL10'NTIFILW   ',AL1(05),XL1'3A',XL4'00'                         
         DC    CL10'NTIFILY   ',AL1(06),XL1'47',XL4'00'                         
         DC    CL10'NTIFILZ   ',AL1(07),XL1'4F',XL4'00'                         
         DC    CL10'NTIFILA   ',AL1(08),XL1'5A',XL4'00'                         
         DC    CL10'NTIFILB   ',AL1(09),XL1'5B',XL4'00'                         
         DC    CL10'NTIFILC   ',AL1(10),XL1'5C',XL4'00'                         
         DC    CL10'NTIFILD   ',AL1(11),XL1'5D',XL4'00'                         
         DC    CL10'NTIFILE   ',AL1(12),XL1'5E',XL4'00'                         
         DC    CL10'NTIFILF   ',AL1(13),XL1'77',XL4'00'                         
         DC    CL10'NTIFILG   ',AL1(14),XL1'78',XL4'00'                         
         DC    CL10'NTIFILH   ',AL1(15),XL1'7C',XL4'00'                         
         DC    CL10'NTIFILI   ',AL1(16),XL1'7D',XL4'00'                         
         DC    CL10'NTIFILJ   ',AL1(17),XL1'BD',XL4'00'                         
         DC    CL10'NTIFILK   ',AL1(18),XL1'BE',XL4'00'                         
         DC    CL10'NTIFILL   ',AL1(19),XL1'8B',XL4'00'                         
         DC    CL10'NTIFILM   ',AL1(20),XL1'8C',XL4'00'                         
         DC    CL10'NTIFILR   ',AL1(21),XL1'8D',XL4'00'                         
         DC    CL10'NTIFLTA   ',AL1(TEST_DEMOFILE),XL1'54',XL4'00'              
*                                                                               
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                           
*                                                                               
PRMLSTD  DSECT ,                   DSECT TO COVER PARAMETER LISTS               
PRMLNAME DS    CL10                                                             
PRMLVAL  DS    X                                                                
PRMXTRA  DS    XL5                 PARAMETER-SPECIFIC EXTRA DATA                
         ORG   PRMXTRA                                                          
DMGRDTF# DS    X                   INTERNAL DATAMGR FILE NUMBER                 
         ORG                                                                    
PRMLSTLQ EQU   *-PRMLSTD                                                        
         EJECT                                                                  
DELDXMOD CSECT                                                                  
         DS    0D                                                               
         DC    CL16'***WK**WK**WK***'                                           
DMLDWRK  DC    55000X'00'                                                       
         DC    CL16'**WKX**!!**WKX**'                                           
         EJECT                                                                  
***********************************************************************         
* OTHER INCLUDED DSECTS                                               *         
***********************************************************************         
*                                                                               
         DCBD  DSORG=PS,DEVD=TA                                                 
         IEFZB4D2                                                               
         IHAPSA                                                                 
         IKJTCB                                                                 
         IHACDE                                                                 
         IHAASCB                                                                
         IHAASSB                                                                
         IAZJSAB                                                                
*                                                                               
* DEMLDDEFN                                                                     
         PRINT OFF                                                              
       ++INCLUDE DEMLDDEFN                                                      
         PRINT ON                                                               
* DMDTFPH                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMDTFPH                                                        
         PRINT ON                                                               
* DMDTFIS                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMDTFIS                                                        
         PRINT ON                                                               
* DMXTNTD                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMXTNTD                                                        
         PRINT ON                                                               
* DMGREQUS                                                                      
         PRINT OFF                                                              
       ++INCLUDE DMGREQUS                                                       
         PRINT ON                                                               
* DDDPRINT                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDDPRINT                                                       
         PRINT ON                                                               
* DDSCANBLKD                                                                    
         PRINT OFF                                                              
       ++INCLUDE DDSCANBLKD                                                     
         PRINT ON                                                               
* DEDEMFILE                                                                     
         PRINT OFF                                                              
       ++INCLUDE DEDEMFILE                                                      
         PRINT ON                                                               
* DMSYSFD                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMSYSFD                                                        
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'117DELDXMOD  12/03/20'                                      
         END                                                                    
