*          DATA SET PPSPCVAL   AT LEVEL 025 AS OF 05/01/02                      
*CATALP PPSPCVAL                                                                
         TITLE 'PPSPCVAL- PRINTPAK SPACE INTERPRETER'                           
***********************************************************************         
*                                                                               
*   INPUT PARMS                                                                 
*   -----------                                                                 
*                                                                               
*   PARM1    BYTE    0   L'INPUT - 0 MEANS SCREEN FIELD HEADER                  
*                  1-3   A(INPUT STRING)                                        
*   PARM2    BYTE    0   NOT USED                                               
*                  1-3   A(OUTPUT) - 32 BYTES                                   
*   PARM3    BYTE    0   NOT USED                                               
*                  1-3   A(TABLE) - SEE PPFRGTBD                                
*                                                                               
*   PARMS ON OUTPUT                                                             
*   ---------------                                                             
*                                                                               
*   PARM4    BYTE    0   RETURNED STATUS/ERROR CODE                             
*                  1-3   A(ERROR POSITION WITHIN INPUT STRING)                  
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
PPSPCVAL CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 PSVWRKX-PSVWRKD,**PPCV*,RR=RE,CLEAR=YES                          
         USING PSVWRKD,RC                                                       
         ST    RE,RELO                                                          
         MVC   CPARMS(24),0(R1)                                                 
         ST    R1,SAVR1                                                         
         MVC   AFRGTAB,8(R1)       A(FRAGMENT TABLE)                            
         MVC   AOUT,4(R1)          A(OUTPUT AREA)                               
*                                                                               
         L     R4,AOUT             A(OUTPUT)                                    
         XC    0(OUTWRKL,R4),0(R4)      CLEAR IT                                
         L     R2,0(R1)            A(INPUT)                                     
         LA    R2,0(R2)            STRIP HOB                                    
         SR    RF,RF                                                            
         ICM   RF,1,0(R1)          LENGTH OF INPUT                              
         BNZ   PS4                 0 MEANS HAVE FIELD HEADER                    
         ICM   RF,1,5(R2)                                                       
         LA    R2,8(R2)                                                         
         BZ    PSERR                                                            
*                                                                               
PS4      DS    0H                                                               
         LR    RE,R2               MAKE INPUT UPPER CASE                        
         LR    R0,RF                                                            
PS4B     DS    0H                                                               
         OI    0(RE),C' '                                                       
         LA    RE,1(RE)                                                         
         BCT   R0,PS4B                                                          
*                                                                               
         ST    R2,SOSTR            START OF STRING                              
         ST    R2,CURPOS           START OF CURRENT 'WORD'                      
         LA    RF,0(RF,R2)                                                      
         CLI   0(RF),C' '                                                       
         BH    *+8                                                              
         BCT   RF,*-8                                                           
         CR    RF,R2               TEST STRING ALL BLANK                        
         BL    PSERR               YES, DONE                                    
         ST    RF,EOSTR            TRUE END OF STRING                           
*                                                                               
PS6      DS    0H                                                               
         BAS   RE,NXTWRD            SET START/END OF FIRST/NEXT 'WORD'          
         BAS   RE,ISFRAG                                                        
         BNE   PS8                                                              
         L     RF,AFRAG            SET VALUE NUMBER IN OUTPUT                   
         USING PPFRGTBD,RF                                                      
*                                                                               
         CLI   PPFRVAL1,0          IF NO VAL, IGNORE FRAG                       
         BE    PS6G                                                             
*                                                                               
         CLI   PPFRVAL1,PPFRCLRQ   COLOR?                                       
         BE    PS6B9                                                            
         CLI   PPFRVAL1,PPFRCLMQ   COLUMN?                                      
         BE    PS6B8                                                            
         CLI   PPFRVAL1,PPFRCCQ    IF CLR/COL AMBIGUOUS                         
         BNE   PS6C                                                             
         OC    NUMVAL,NUMVAL       IF NO IMEDIATELY PRECEDING NUMBER            
         BZ    PS6B9               ASSUME COLOR                                 
         ICM   RE,15,ALSTFRG       IF NO PRIOR FRAG                             
         BZ    PS6B8               ASSUME COLUMN                                
         CLI   FRAGWRK+PPFRCLMQ,PPFRCLMQ   IF ALREADY HAVE COLUMN               
         BE    PS6B9               ASSUME COLOR                                 
         CLI   PPFRVAL1-PPFRGTBD(RE),PPFRXQ   OR IF JUST HAD X                  
         BE    PS6B8               ASSUME COLUMN                                
         CLI   PPFRVAL1-PPFRGTBD(RE),PPFRSLQ  OR IF JUST HAD /                  
         BE    PS6B8               ASSUME COLUMN                                
         CLI   FRAGWRK+PPFRCLRQ,PPFRCLRQ  OR IF ALREADY HAVE COLOR              
         BE    PS6B8               ASSUME COLUMN                                
         B     PS6B9               ELSE ASSUME COLOR                            
*                                                                               
PS6B8    DS    0H                  ASSUME COLUMN                                
         ICM   RE,15,NUMVAL                                                     
         BZ    PS6B8B                                                           
         OC    NUM1,NUM1           SET IN NUM1                                  
         BNZ   *+12                                                             
         ST    RE,NUM1                                                          
         B     PS6B8B                                                           
         OC    NUM2,NUM2           OR NUM2                                      
         BNZ   *+12                                                             
         ST    RE,NUM2                                                          
         B     PS6B8B                                                           
         L     R2,CURPOS           3RD NUMBER NO GOOD                           
         BCTR  R2,0                                                             
         B     PSERR                                                            
*                                                                               
PS6B8B   DS    0H                                                               
         MVI   FRAGWRK+PPFRCLMQ,PPFRCLMQ   SET VALUE                            
         XC    NUMVAL,NUMVAL       HAVE USED NUMBER                             
         XC    ALSTFRG,ALSTFRG     AND FRAGMENT                                 
         B     PS6G                                                             
*                                                                               
PS6B9    DS    0H                  ASSUME COLOR                                 
         MVC   NUM3,NUMVAL         SAVE COLOR NUMBER                            
         OC    PPFRNUMQ,PPFRNUMQ   IF HAVE NUMBER FROM FRAG                     
         BZ    *+14                                                             
         MVC   NUM3,PPFRNUMQ       USE IT INSTEAD                               
         B     *+10                AND DONT CLEAR NUMVAL                        
         XC    NUMVAL,NUMVAL                                                    
         MVI   FRAGWRK+PPFRCLRQ,PPFRCLRQ  AND VALUE                             
         XC    ALSTFRG,ALSTFRG     AND FRAGMENT                                 
         B     PS6G                                                             
*                                  NORMAL ENTRY (NOT CLR/CLM)                   
PS6C     DS    0H                                                               
         MVC   ALSTFRG,AFRAG       SAVE LAST FRAG TAB ENTRY                     
*                                                                               
         ICM   RE,15,NUMVAL        SAVE ANY NUMERIC                             
         BZ    PS6C4                                                            
         OC    NUM1,NUM1           SET IN NUM1                                  
         BNZ   *+12                                                             
         ST    RE,NUM1                                                          
         B     PS6C4                                                            
         OC    NUM2,NUM2           OR NUM2                                      
         BNZ   *+12                                                             
         ST    RE,NUM2                                                          
         B     PS6C4                                                            
         L     R2,CURPOS                                                        
         BCTR  R2,0                                                             
         B     PSERR               3RD NUMBER NO GOOD                           
*                                                                               
PS6C4    DS    0H                                                               
         ICM   RE,15,PPFRNUMQ      IF NUMERIC VALUE                             
         BZ    PS6C8                                                            
         OC    NUM1,NUM1           SET IN NUM1                                  
         BNZ   *+12                                                             
         ST    RE,NUM1                                                          
         B     PS6C8                                                            
         OC    NUM2,NUM2           OR NUM2                                      
         BNZ   *+12                                                             
         ST    RE,NUM2                                                          
         B     PS6C8                                                            
         L     R2,CURPOS                                                        
         BCTR  R2,0                                                             
         B     PSERR               3RD NUMBER NO GOOD                           
*                                                                               
PS6C8    DS    0H                                                               
         XC    NUMVAL,NUMVAL                                                    
         SR    R1,R1               SET FIRST VALUE                              
         ICM   R1,1,PPFRVAL1                                                    
         BZ    PS6D                IF ANY                                       
         LA    RE,FRAGWRK(R1)                                                   
         STC   R1,0(RE)                                                         
*                                                                               
PS6D     DS    0H                                                               
         SR    R1,R1               SET 2ND VALUE                                
         ICM   R1,1,PPFRVAL2                                                    
         BZ    PS6E                IF ANY                                       
         LA    RE,FRAGWRK(R1)                                                   
         STC   R1,0(RE)                                                         
*                                                                               
PS6E     DS    0H                                                               
*                                                                               
PS6G     DS    0H                                                               
         L     R2,CURPOS                                                        
         C     R2,EOSTR            ARE WE AT END                                
         BH    PS40                YES, DONE                                    
         B     PS6                                                              
         DROP  RF                                                               
*                                                                               
*                                  NOT A GOOD FRAG, TRY FOR NUMBER              
*                                  -------------------------------              
PS8      DS    0H                                                               
         BAS   RE,ISNUM                                                         
         BE    PS8C                OK                                           
         L     R2,CURPOS           NOT OK, POINT TO ERROR                       
         B     PSERR               AND DONE                                     
*                                                                               
PS8C     DS    0H                                                               
         L     R2,CURPOS                                                        
         C     R2,EOSTR            ARE WE AT END                                
         BH    PS40                YES, DONE                                    
         B     PS6                                                              
*                                  DONE WITH STRING, NOW SET OUTPUT             
PS40     DS    0H                                                               
         ICM   RE,15,NUMVAL        RETURN ANY NUMERIC                           
         BZ    PS41                                                             
         OC    NUM1,NUM1           SET IN NUM1                                  
         BNZ   *+12                                                             
         ST    RE,NUM1                                                          
         B     PS41                                                             
         OC    NUM2,NUM2           OR NUM2                                      
         BNZ   *+8                                                              
         ST    RE,NUM2                                                          
         B     PS41                                                             
         L     R2,CURPOS          3RD NUMBER NO GOOD                            
         BCTR  R2,0                                                             
         B     PSERR                                                            
*                                                                               
PS41     DS    0H                                                               
         OC    NUM1,NUM1           IF NO FIRST NUMBER                           
         BNZ   *+10                                                             
         MVC   NUM1,=AL4(100000)   ASSUME 1.00000                               
         L     R4,AOUT             A(OUTPUT AREA)                               
         MVC   0(12,R4),NUM1       START WITH NUMERIC VALUES                    
         LA    R4,12(R4)                                                        
*                                                                               
         LA    RF,FRAGWRK          FRAGMENT WORK AREA                           
         LA    R0,MAXFRGVS         MAXIMUM FRAG VALUES                          
         LA    R1,MAXFRGFS         MAXIMUM FRAGS FOR A SPACE                    
*                                                                               
PS42     DS    0H                                                               
         CLI   0(RF),0             IS THIS FRAG USED                            
         BE    PS46                NO                                           
         MVC   0(1,R4),0(RF)       YES, SET IN OUTPUT                           
         LA    R4,1(R4)                                                         
         BCT   R1,PS46                                                          
         B     PS48                                                             
*                                                                               
PS46     DS    0H                                                               
         LA    RF,1(RF)            NEXT SLOT IN FRAGWRK                         
         BCT   R0,PS42                                                          
*                                                                               
PS48     DS    0H                                                               
PSX      DS    0H                                                               
         XIT1                                                                   
*                                                                               
PSERR    DS    0H                                                               
         L     R1,SAVR1                                                         
         ST    R2,12(R1)           A(WHERE ERROR OCCURRED)                      
         MVI   12(R1),X'FF'        ERROR CODE                                   
         B     PSX                                                              
         EJECT                                                                  
***********************************************************************         
*                                                                               
*        NXTWRD - SET START/END OF NEXT 'WORD'                                  
*                                                                               
***********************************************************************         
         SPACE 2                                                                
NXTWRD   DS    0H                                                               
         L     R2,CURPOS           FIRST STRIP LEADING BLANKS                   
*                                                                               
NW4      DS    0H                                                               
         C     R2,EOSTR                                                         
         BNL   NW6                                                              
         CLI   0(R2),C' '                                                       
         BH    NW6                                                              
         LA    R2,1(R2)                                                         
         B     NW4                                                              
*                                                                               
NW6      DS    0H                                                               
         ST    R2,CURPOS                                                        
*                                                                               
NW8      DS    0H                  THEN GET RID OF TRAILERS                     
         C     R2,EOSTR                                                         
         BNL   NW10                                                             
         CLI   0(R2),C' '                                                       
         BH    *+10                                                             
         BCTR  R2,0                BACK UP TO LAST NON-BLANK                    
         B     NW10                                                             
         LA    R2,1(R2)                                                         
         B     NW8                                                              
*                                                                               
NW10     DS    0H                                                               
         ST    R2,CUREND                                                        
*                                                                               
NWX      DS    0H                                                               
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
*                                                                               
*        ISFRAG - IS CURRENT 'WORD' (OR PART OF IT) A VALID FRAGMENT            
*                                                                               
*           RETURNS A(FRAGMENT TABLE ENTRY) IN AFRAG                            
*           RESETS CURPOS                                                       
*                                                                               
***********************************************************************         
         SPACE 2                                                                
ISFRAG   NTR1                                                                   
         XC    AFRAG,AFRAG         CLEAR OUTPUT ADDR                            
*                                                                               
         L     R5,CUREND                                                        
         S     R5,CURPOS           R5 HAS LENGTH -1                             
*                                                                               
         L     R2,CURPOS                                                        
         L     R3,AFRGTAB                                                       
         USING PPFRGTBD,R3                                                      
         SR    R4,R4               COMPARE LENGTH - START AT 1                  
         XC    AFRAG,AFRAG                                                      
*                                                                               
IFM04    DS    0H                                                               
         CLI   0(R3),X'FF'         EOL                                          
         BE    IFM40                                                            
         LA    R1,1(R5)            IF INPUT LENGTH                              
         CLM   R1,1,PPFRMINL       LESS THAN MINIMUM                            
         BL    IFM20               SKIP THIS ENTRY                              
*                                                                               
IFM05    DS    0H                                                               
         EX    R4,IFMCLC           TABLE ENTRY VS 'WORD'                        
         BL    IFM20               LOW,    NEXT ENTRY                           
         BH    IFM40               HI,     DONE                                 
*                                  EQUAL,  SAVE AS 'BEST'                       
IFM05B   DS    0H                                                               
         LA    R1,1(R4)                                                         
         CLM   R1,1,PPFRMINL       BUT IF LESS THAN MINIMUM                     
         BL    IFM06               MAY NOT BE ANY GOOD                          
         ST    R3,AFRAG                                                         
IFM06    DS    0H                                                               
         CR    R4,R5               HAVE WE COMPARED FOR WHOLE IPT LN            
         BL    IFM07               NO, DO ANOTHER BYTE                          
*                                                                               
         LA    R4,1(R4)                                                         
         B     IFM40               YES, DONE                                    
*                                                                               
IFM07    DS    0H                                                               
         LA    R4,1(R4)            AND TRY ANOTHER BYTE                         
         B     IFM05                                                            
*                                                                               
IFM20    DS    0H                                                               
         LA    R3,PPFRGTBL(R3)     NEXT ENTRY                                   
         B     IFM04                                                            
*                                                                               
IFM40    DS    0H                                                               
         OC    AFRAG,AFRAG       DO WE HAVE A FIND?                             
         BNZ   IFM44             YES, DONE                                      
         CLC   0(1,R3),0(R2)     NO, LOOK AT MORE WITH SAME 1ST CHAR            
         BH    IFNOX             (SEARCH MAY SOMETIMES QUIT EARLY)              
         CLI   PPFRGTBL(R3),X'FF'    END OF LIST                                
         BE    IFNOX                                                            
         LA    R3,PPFRGTBL(R3)     NEXT ENTRY                                   
         SR    R4,R4              NOTE- AT 1 BYTE COMPARE                       
         B     IFM05                                                            
*                                                                               
IFM44    DS    0H                                                               
         AR    R2,R4               REPOSITION STRING POINTER                    
         ST    R2,CURPOS                                                        
         B     IFYESX                                                           
*                                                                               
IFYESX   CR    RE,RE               CC = ON OK EXIT                              
         B     *+6                                                              
IFNOX    LTR   RD,RD               CC NOT =                                     
         XIT1                                                                   
*                                                                               
IFMCLC   CLC   0(0,R3),0(R2)       TABLE ENTRY VS 'WORD'                        
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*        ISNUM - TRY FOR NUMERIC VALUE                                          
*                                                                               
*           RETURNS VALUE IN NUMVAL (N.NNNNN)                                   
*           RESETS CURPOS                                                       
*                                                                               
*        NOTE- THIS ROUTINE IS CLONED FROM MEDIABASE'S MBMNVAL.                 
*              I HAVE TRIED TO ISOLATE IT AND ITS FIELDS FROM THE               
*              REST OF THE PROGRAM TO MAKE ITS REPLACEMENT EASIER.              
*                                                                               
*              THINGS LIKE =, -, % HAVE BEEN REMOVED, BUT FRACTIONS             
*              RETAINED.                                                        
*                                                                               
*        MBNMVAL  - PROGRAM TO VALIDATE NUMERIC INPUT WITH            *         
*                   VARIABLE NUMBER OF DECIMAL PLACES                 *         
*                   OPTIONALLY IT WILL VALIDATE A TRAILING UNIT INPUT *         
*                   ON DISPLAY IT WILL LEFT JUSTIFY THE DISPLAY       *         
*                   LEADING +/- SIGNS ARE RETURNED BUT NUMERIC        *         
*                     PORTION IS ALWAYS POSITIVE                      *         
*                                                                     *         
*        ROUTINE IS DRIVEN BY A CONTROL BLOCK. SEE MBNUMVALD          *         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
ISNUM    NTR1                                                                   
         XC    MB#VALCB(MB#VALL),MB#VALCB   INITIALIZE BLOCK                    
         XC    MBNMVWK(MBNMVWKL),MBNMVWK    CLEAR WORK AREA                     
         OI    MB#CNTL,MB#FRACQ    FRACTIONS OK                                 
         OI    MB#CNTL,MB#NUMSQ    NUMERIC VALIDATION ONLY                      
         MVI   MB#DECS,5           5 DECIMALS ASSUMES                           
         MVI   MB#ERR#,0           INIT ERROR CODES                             
         MVI   MB#ERRUN,0                                                       
         MVI   MB#LNUM,0           INIT LENGTH OF NUMERIC PORTION               
         MVC   MB#AEXT,CURPOS      A(EXTERNAL)                                  
         MVI   MB#LEXT,X'FF'       NO DEFINITE LENGTH                           
*                                                                               
         MVC   DECS,MB#DECS        INIT NUMBER OF DECIMALS                      
         MVC   DISDC,MB#DISDC      INIT MINIMUM DECIMALS TO DISPLAY             
         MVC   RNDDC,MB#RNDDC      INIT # OF DECIMALS FOR ROUNDING              
*                                                                               
         MVI   COMMA,C','          INIT FOR ENGLISH                             
         MVI   DECPT,C'.'                                                       
*                                                                               
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*        VALIDATION ROUTINE                                           *         
*              BREAKS UP EXTERNAL FIELD INTO SEPARATE NUMERIC FIELDS  *         
*                REPRESENTING  INTEGER, DECIMAL/NUMERATOR, DENOMINATOR*         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
MB#VALR  DS    0H                                                               
         L     R3,MB#AEXT          POINT TO EXTERNAL FIELD                      
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE                        
         ZIC   R4,MB#LEXT          GET LENGTH OF INPUT                          
         ST    R3,ASTART           SAVE START OF EXTERNAL FIELD                 
         LA    R5,FIELD1           POINT TO FIRST COLLECTION AREA               
         LA    R6,0                INIT FIELD COUNTER                           
         LA    R7,AFLDSTEN         POINT TO START AND END ADDRESSES             
         ST    R5,0(R7)            SET START OF FIELD                           
         MVI   SWITCH,0            INIT WORK SWITCH                             
         TM    MB#CNTL,MB#FRACQ    SET FRACTION CONTROL INDICATOR               
         BO    *+8                                                              
         OI    SWITCH,SWNOFRAC     MAKE FRACTION AN ERROR                       
         XC    MB#PCT,MB#PCT       INIT RETURN AREA                             
         MVI   MB#SIGN,0           INIT LEADING +/- SIGN RETURN AREA            
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*        VALIDATION LOOP                                              *         
*              EACH BYTE IS EXAMINED                                  *         
*                SPACES ARE IGNORED IF AT START OF FIELD              *         
*                           USED TO TERMINATE A STARTED FIELD         *         
*                DECIMAL POINT STOPS INTEGRAL PART AND STARTS DECIMALS*         
*                        ALSO BARS FRACTIONS AS VALID INPUT           *         
*                SLASH   SEPARATES NUMERATOR AND DENOMINATOR          *         
*                LEADING PLUS, MINUS AND EQUAL SIGNS ARE SAVED        *         
*                ELSE THEY SEPARATE INTEGER FROM FRACTION             *         
*                COMMAS ARE IGNORED                                   *         
*                DIGITS ARE APPENDED TO CURRENT FIELD                 *         
*                PERCENT SIGN '%' IS RECOGNIZED IF CONTROL BYTE ALLOWS*         
*                NON-DIGITS TERMINATE SCANNING FOR NUMERIC FIELDS     *         
*                    CONSIDERED AN ERROR UNLESS ALSO VALIDATING UNITS *         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
MB#VLOOP DS   0H                                                                
*                                                                               
         CLI   0(R3),C' '          TEST FOR SPACES                              
         BNE   MB#VLP10                                                         
*                                                                               
*              A SPACE IS IGNORED IF IT LEADS A FIELD OR ACTS AS A              
*                FIELD TERMINATOR                                               
*                                                                               
         TM    SWITCH,SWNONSP      IF NO NON-SPACE FOUND THEN                   
         BNO   MB#VLPCN            IGNORE                                       
         B     MB#VFLEN            ELSE SET END OF FIELD                        
*                                                                               
MB#VLP10 DS   0H                                                                
*                                                                               
*              CHECK FOR STANDARD FIELD TERMINATORS                             
*                COMMA, DECIMAL POINT, EQUAL, PLUS OR MINUS SIGNS               
*                OR DIVISION SIGN                                               
*                                                                               
         CLC   COMMA,0(R3)         IGNORE COMMAS                                
         BE    MB#VLPCN                                                         
*                                                                               
         CLC   DECPT,0(R3)         DECIMAL POINT ENDS INTEGER PART              
         BNE   MB#VLP20              AND PRECLUDES FRACTION                     
*                                                                               
*                                  ERROR IF DECIMAL PT, PLUS, MINUS OR          
*                                    SLASH FOUND ALREADY                        
         TM    SWITCH,SWDECPT+SWPLUS+SWMINUS+SWSLASH                            
         BNZ   MB#INVER                                                         
*                                                                               
         CH    R6,=H'1'            ERROR IF PAST FIRST FIELD                    
         BH    MB#INVER                                                         
*                                                                               
         OI    SWITCH,SWNOFRAC+SWDECPT  BAR FRACTIONAL INPUT                    
         B     MB#VFLEN            SET END OF FIELD                             
         EJECT                                                                  
MB#VLP20 DS    0H                                                               
         CLI   0(R3),C'/'          DIVISION SIGN SEPARATES NUMERATOR            
         BNE   MB#VLP30              AND DENOMINATOR                            
*                                                                               
         TM    MB#CNTL,MB#SLSHQ    IGNORE IF SLASH ALLOWED BEFORE UNIT          
         BO    MB#VLP30             TAKEN CARE OF LATER                         
*                                                                               
         TM    SWITCH,SWNOFRAC     MAKE SURE FRACTIONS ALLOWED                  
         BO    MB#FRER                                                          
*                                                                               
         TM    SWITCH,SWSLASH      ERROR IF ALREADY FOUND                       
         BO    MB#INVER                                                         
*                                                                               
         CH    R6,=H'1'            MUST HAVE AT LEAST ONE PRIOR FIELD           
         BL    MB#INVER                                                         
*                                                                               
         CH    R6,=H'3'            BUT NOT THREE                                
         BNL   MB#INVER                                                         
*                                                                               
         OI    SWITCH,SWSLASH      INDICATE SLASH FOUND                         
         STH   R6,SLSHCTR          SAVE NUMBER OF FIELDS BEFORE SLASH           
         B     MB#VFLEN            SET END OF FIELD                             
*                                                                               
MB#VLP30 DS    0H                                                               
         CLI   0(R3),C'+'          LOOK FOR PLUS SIGN                           
         BNE   MB#VLP40                                                         
*                                                                               
         LTR   R6,R6               RECORD IF LEADING PLUS SIGN                  
         BNZ   MB#VLP31                                                         
*                                                                               
         MVC   MB#SIGN,0(R3)       SAVE SIGN                                    
         B     MB#VLPCN                                                         
*                                                                               
MB#VLP31 DS    0H                  PLUS SIGN AS INTEGER                         
*                                    FRACTION SEPARATOR                         
         TM    SWITCH,SWNOFRAC     MAKE SURE FRACTIONS ALLOWED                  
         BO    MB#FRER                                                          
*                                                                               
         TM    SWITCH,SWSLASH+SWPLUS+SWMINUS ERROR IF SLASH, PLUS OR            
         BO    MB#INVER            MINUS ALREADY FOUND                          
*                                                                               
         CH    R6,=H'1'            CAN HAVE AT MOST ONE PRIOR FIELD             
         BH    MB#INVER                                                         
*                                                                               
         OI    SWITCH,SWPLUS       INDICATE PLUS FOUND                          
         B     MB#VFLEN            SET END OF FIELD                             
*                                                                               
MB#VLP40 DS    0H                                                               
*                                                                               
MB#VLP52 DS    0H                                                               
*                                                                               
*        NON-SPACE AND NON-FIELD TERMINTORS START NEW FIELDS IF                 
*                THEY ARE THE FIRST NON-SPACE ENCOUNTERED FOR FIELD             
*                                                                               
         TM    SWITCH,SWNONSP      IGNORE IF NON-SPACE ALREADY FOUND            
         BO    MB#VLP60                                                         
*                                                                               
         OI    SWITCH,SWNONSP      INDICATE A NON-SPACE FOUND                   
         ST    R5,0(R7)            SET START OF FIELD ADDRESS                   
         LA    R6,1(R6)            BUMP FIELD COUNTER                           
*                                                                               
         CH    R6,=H'4'            AT MOST 4 FIELDS ALLOWED                     
         BH    MB#INVER                                                         
*                                                                               
MB#VLP60 DS    0H                                                               
*                                                                               
         CLI   0(R3),C'9'          APPEND ANY DIGIT TO CURRENT                  
         BH    MB#INVER              ACCUMULATION AREA                          
         CLI   0(R3),C'0'                                                       
         BL    MB#VLP70                                                         
*                                                                               
         L     RE,0(R7)            GET START OF FIELD                           
         LR    RF,R5               GET CURRENT FIELD END                        
         SR    RF,RE               CALCULATE LENGTH OF FIELD                    
         CH    RF,=Y(L'FIELD1-1)   TEST IF FIELD TOO LARGE                      
         BH    MB#SIZER                                                         
*                                                                               
         MVC   0(1,R5),0(R3)       ADD DIGIT TO ACCUMULATOR                     
         LA    R5,1(R5)            BUMP ACCUMULATION AREA POINTER               
         B     MB#VLPCN                                                         
*                                                                               
MB#VLP70 DS    0H                                                               
*                                                                               
         EJECT                                                                  
*                                                                               
*              NON-DIGIT VALID ONLY AS UNITS IDENTIFIER                         
*                                                                               
         TM    MB#CNTL,MB#UNITQ+MB#NUMSQ  ERROR UNLESS VALIDATING UNITS         
         BZ    MB#INVER            OR ONLY NUMERIC PORTION                      
*                                                                               
         LR    RF,R3               CALCULATE LENGTH OF NUMERIC PORTION          
         S     RF,ASTART                                                        
         STC   RF,MB#LNUM          RETURN LENGTH                                
         BZ    MB#VLP85            NO NUMERIC PORTION                           
*                                                                               
         LR    RF,R3               POINT TO PRIOR INPUT BYTE                    
         BCTR  RF,0                                                             
         CLI   0(RF),C' '          IF PRIOR BYTE IS SPACE                       
         BNE   *+6                 THEN NEED TO                                 
MB#VLP85 DS    0H                                                               
         BCTR  R6,0                DECREMENT FIELD COUNTER                      
*                                                                               
         ST    R3,AUNIT            SAVE START OF UNITS INPUT                    
         ST    R5,4(R7)            SAVE END OF FIELD ADDRESS                    
         B     MB#VLPDN            INPUT SCAN DONE                              
         EJECT                                                                  
*                                                                               
*              END OF INPUT FIELD                                               
*                SAVE END OF FIELD ADDRESS                                      
*                BUMP POINTERS TO NEXT ACCUMMULATOR FIELD                       
*                                                                               
MB#VFLEN DS    0H                                                               
         NI    SWITCH,X'FF'-SWNONSP TURN OFF NON-SPACE FOUND BIT                
         ST    R5,4(R7)            SAVE END OF FIELD ADDRESS                    
         LA    R5,L'FIELD1(R5)     BUMP POINTERS                                
         LA    R7,8(R7)                                                         
         ST    R5,0(R7)            SAVE START OF FIELD                          
         B     MB#VLPCN                                                         
*                                                                               
MB#VLPCN DS    0H                                                               
         LA    R3,1(R3)            BUMP INPUT FIELD POINTER                     
         BCT   R4,MB#VLOOP                                                      
*                                                                               
         ST    R3,AUNIT            SAVE START OF UNIT FIELD                     
         ST    R5,4(R7)            SAVE END OF FIELD ADDRESS                    
*                                                                               
MB#VLPDN DS    0H                                                               
*                                                                               
         EJECT                                                                  
*                                                                               
*              END OF INPUT SCAN                                                
*                PERFORM SOME VALIDITY CHECKS                                   
*                                                                               
         OC    FIELD1(3*L'FIELD1),FIELD1 CHECK IF ANY NUMBERS ENTERED           
         BNZ   MB#VAL05                                                         
         OI    MB#ERR#,MB#ERNMQ    INDICATE NO NUMERIC INPUT                    
         B     MB#VNOX             AND DONE                                     
*                                                                               
MB#VAL05 DS    0H                                                               
         CH    R6,=H'1'            MORE THAN ONE NUMERIC FIELD MUST             
         BNH   MB#VAL10              HAVE SLASH OR DECIMAL POINT                
         TM    SWITCH,SWSLASH+SWDECPT                                           
         BZ    MB#INVER                                                         
*                                                                               
MB#VAL10 DS    0H                                                               
         TM    SWITCH,SWDECPT      DECIMAL POINT AT MOST 2 FIELDS               
         BNO   MB#VAL20                                                         
         CH    R6,=H'2'                                                         
         BH    MB#INVER                                                         
         LA    R7,AFLDSTEN         POINT TO START AND END ADDRESSES             
         BL    *+8                                                              
         LA    R7,8(R7)            POINT TO THOSE OF SECOND FIELD               
         L     RF,4(R7)            CALCULATE NUMBER OF DECIMALS                 
         S     RF,0(R7)                                                         
         CLM   RF,1,DECS           MAKE SURE NOT MORE THAN ALLOWED              
         BH    MB#SIZER                                                         
*                                                                               
MB#VAL20 DS    0H                                                               
*                                                                               
         CLI   MB#SIGN,0           IF LEADING SIGN FOUND                        
         BE    MB#VAL30                                                         
         TM    MB#CNTL,MB#SIGNQ    MAKE SURE THEY ARE ALLOWED                   
         BNO   MB#INVER                                                         
*                                                                               
MB#VAL30 DS    0H                                                               
*                                                                               
         TM    SWITCH,SWSLASH      SKIP UNLESS FRACTION                         
         BNO   MB#VAL40                                                         
*                                                                               
         LR    RF,R6               GET TOTAL NUMBER OF NUMERIC FIELDS           
         SH    RF,SLSHCTR          SUBTRACT NUMBER BEFORE SLASH                 
*                                                                               
         CH    RF,=H'1'            THE DENOMINATOR MUST = 1 FIELD               
         BNE   MB#INVER                                                         
*                                                                               
MB#VAL40 DS    0H                                                               
*                                                                               
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*              CONVERT NUMERIC INPUT TO BINARY                        *         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
         LA    R4,3                SET NUMBER OF FIELDS                         
         LA    R7,AFLDSTEN         POINT TO ADDRESS LIST                        
         LA    R3,BINFLD1          POINT TO START OF BINARY FIELDS              
MB#CLOOP DS   0H                                                                
         XC    0(4,R3),0(R3)       INIT BINARY VALUE                            
         ICM   R2,15,0(R7)         GET START OF INPUT FIELD                     
         BZ    MB#CLPCN            SKIP IF NO ADDRESS                           
         L     R5,4(R7)            GET FIELD END ADDRESS                        
         S     R5,0(R7)            CALCULATE LENGTH OF FIELD                    
         BZ    MB#CLPCN            SKIP IF NO ENTRY                             
         CH    R5,=H'15'           MAX 15 DIGITS ALLOWED                        
         BH    MB#SIZER                                                         
         BCTR  R5,0                DECREMENT FOR EXECUTE                        
         EX    R5,MB#CPACK         PACK INPUT                                   
         CVB   RF,DUB              CVB                                          
         ST    RF,0(R3)            SAVE RESULT                                  
*                                                                               
MB#CLPCN DS    0H                                                               
*                                                                               
         LA    R3,4(R3)            BUMP POINTERS                                
         LA    R7,8(R7)                                                         
         BCT   R4,MB#CLOOP                                                      
         B     *+10                                                             
MB#CPACK PACK DUB,0(0,R2)          PACK INPUT                                   
*                                                                               
MB#CLPDN DS    0H                                                               
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*              FORMAT INTERNAL FIELDS                                 *         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
         TM    SWITCH,SWSLASH      FIRST HANDLE FRACTIONS                       
         BNO   MB#FD                                                            
*                                                                               
         TM    MB#CNTL,MB#SLSHQ    ASSUME DECIMAL IF / ALLOWED WITH             
         BO    MB#FD               UNITS                                        
*                                                                               
         XC    FRACTION,FRACTION   INIT FRACTION FIELD                          
         LA    R5,BINFLD1          POINT TO FIRST INPUT FIELD                   
*                                                                               
         CH    R6,=H'3'            FIRST FIELD IS INTEGRAL PART                 
         BNE   MB#VF10             IF THERE ARE 3 FIELDS                        
*                                                                               
         L     RF,0(R5)            GET FIRST INPUT FIELD                        
         STH   RF,FRACINTG                                                      
         LA    R5,4(R5)            BUMP TO NEXT INPUT FIELD                     
*                                                                               
MB#VF10  DS    0H                                                               
*                                                                               
         L     RF,0(R5)            NUMERATOR IS NEXT FIELD IN LIST              
*                                                                               
         CH    RF,=H'255'          MUST BE LESS THAN 255                        
         BH    MB#INVER                                                         
*                                                                               
         STC   RF,FRACNUM          SET NUMERATOR                                
*                                                                               
         LA    R5,4(R5)            BUMP TO NEXT FIELD IN LIST                   
*                                                                               
         L     RF,0(R5)            DENOMINATOR IS NEXT FIELD IN LIST            
*                                                                               
         CH    RF,=H'255'          MUST BE LESS THAN 255                        
         BH    MB#INVER                                                         
         LTR   RF,RF               MUST BE POSITIVE                             
         BNP   MB#INVER                                                         
*                                                                               
         STC   RF,FRACDENM         SET DENOMINATOR                              
*                                                                               
         MVC   MB#INT,FRACTION     PASS BACK INTERNAL FORM                      
         OI    MB#INT,X'80'        INDICATE FRACTION                            
         EJECT                                                                  
         ZIC   RF,FRACNUM          GET NUMERATOR                                
         ZIC   R2,DECS             GET NUMBER OF DECIMALS                       
         LA    R3,10               GET SCALE FACTOR                             
         SR    RE,RE               NEEDED IN CASE NO SCALING DONE               
*                                                                               
         LTR   R2,R2               SKIP SCALING IF 0 DECIMALS                   
         BZ    *+10                                                             
*                                                                               
         MR    RE,R3               SCALE UP                                     
         BCT   R2,*-2              LOOP                                         
*                                                                               
         SR    R2,R2                                                            
         ICM   R2,1,FRACDENM       GET DENOMINATOR                              
         BZ    *+6                 SKIP DIVIDE BY 0                             
         DR    RE,R2                                                            
*                                                                               
         SLL   RE,1                DOUBLE REMAINDER                             
         CR    RE,R2               TEST FOR ROUNDING                            
         BL    *+8                                                              
         LA    RF,1(RF)            ROUND                                        
*                                                                               
         LR    R0,RF               SAVE DECIMAL PORTION                         
         LH    RF,FRACINTG         GET INTEGER VALUE                            
         ZIC   R2,DECS             GET NUMBER OF DECIMALS                       
         LA    R3,10               GET SCALE FACTOR                             
         SR    RE,RE               NEEDED IN CASE NO SCALING DONE               
*                                                                               
         LTR   R2,R2               SKIP SCALING IF NO DECIMALS                  
         BZ    *+10                                                             
*                                                                               
         MR    RE,R3               SCALE UP                                     
         BCT   R2,*-2              LOOP                                         
*                                                                               
         AR    RF,R0               ADD IN DECIMAL PART                          
         ST    RF,MB#BIN           PASS BACK BINARY VALUE                       
         B     MB#VYESX            DONE                                         
         EJECT                                                                  
MB#FD    DS    0H                  FORMAT DECIMAL INPUT                         
         L     RF,BINFLD1          GET INTEGRAL VALUE                           
         ZIC   R2,DECS             GET NUMBER OF DECIMALS                       
         LA    R3,10               GET SCALE FACTOR                             
         SR    RE,RE               NEEDED IN CASE NO SCALING DONE               
*                                                                               
         LTR   R2,R2               SKIP SCALING IF NO DECIMALS                  
         BZ    *+10                                                             
*                                                                               
         MR    RE,R3               SCALE UP                                     
         BCT   R2,*-2              LOOP                                         
*                                                                               
         LR    R0,RF               SAVE INTEGER PORTION                         
         L     RF,BINFLD2          GET DECIMALS                                 
         L     R5,AFLDSTEN+12      GET END OF SECOND INPUT FIELD                
         S     R5,AFLDSTEN+8       SUBTRACT START TO GET LENGTH                 
         BZ    MB#FD10             NO DECIMALS IF NO LENGTH                     
         ZIC   R2,DECS             GET NUMBER OF DECIMALS                       
         SR    RE,RE               NEEDED IN CASE NO SCALING DONE               
         LA    R3,10               SET SCALING FACTOR                           
         SR    R2,R5               GET NUMBER OF ORDERS TO SCALE UP             
         BM    MB#SIZER            NEGATIVE IS AN ERROR                         
         BZ    MB#FD10             NO SCALING NEEDED                            
*                                                                               
         MR    RE,R3               SCALE UP                                     
         BCT   R2,*-2              LOOP                                         
*                                                                               
MB#FD10  DS     0H                                                              
         AR    RF,R0               ADD DECIMALS TO INTEGER                      
*                                                                               
         LTR   RE,RE               HIGH ORDER REGISTER MUST BE 0                
         BNZ   MB#SIZER                                                         
*                                                                               
         ST    RF,MB#INT           PASS BACK INTERNAL VALUE                     
*                                                                               
         TM    MB#INT,X'80'        HIGH ORDER BIT CAN'T BE ON                   
         BO    MB#SIZER                                                         
*                                                                               
         ST    RF,MB#BIN           PASS BACK BINARY VALUE                       
*                                                                               
         TM    MB#CNTL,MB#RNDQ     SKIP UNLESS ROUNDING                         
         BNO   MB#FDX                                                           
*                                                                               
         SR    R1,R1                                                            
         IC    R1,RNDDC            NUMBER OF DECIMAL PLACES                     
         LR    RE,R1               SAVE                                         
*                                                                               
         IC    R1,DECS             NUMBER OF IMPLIED DECIMALS                   
*                                                                               
         SR    R1,RE               SCALING FACTOR                               
         BNP   MB#FDX              NO NEED FOR CALCULATIONS                     
*                                                                               
         MH    R1,=H'10'           AMOUNT FOR SCALING                           
*                                                                               
         SR    RE,RE                                                            
         DR    RE,R1               SCALE DOWN                                   
*                                                                               
         SLL   RE,1                DOUBLE REMAINDER                             
         CR    RE,R1               TEST FOR ROUNDING                            
         BL    *+8                                                              
         LA    RF,1(RF)            ROUND UP                                     
*                                                                               
         MR    RE,R1               RESTORE ORIGINAL # OF DECIMALS               
*                                                                               
         ST    RF,MB#INT           RESET INTERNAL VALUE                         
         ST    RF,MB#BIN           RESET BINARY VALUE                           
*                                                                               
MB#FDX   DS    0H                                                               
         B     MB#VYESX                                                         
*                                                                               
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
*                                                                     *         
*        ERROR ROUTINES                                               *         
*                                                                     *         
***********************************************************************         
         SPACE 2                                                                
MB#INVER DS    0H                  INVALID INPUT ERROR                          
         MVI   MB#ERR#,MB#ERNVQ    SET ERROR CODE                               
         B     MB#VNOX                                                          
*                                                                               
MB#FRER DS     0H                  FRACTIONS NOT ALLOWED                        
         MVI   MB#ERR#,MB#ERFRQ    SET ERROR CODE                               
         B     MB#VNOX                                                          
*                                                                               
MB#SIZER DS    0H                  INPUT TOO LARGE                              
         MVI   MB#ERR#,MB#ERSZQ    SET ERROR CODE                               
         B     MB#VNOX                                                          
         SPACE 2                                                                
***********************************************************************         
*        EXIT ROUTINES                                                *         
***********************************************************************         
         SPACE 2                                                                
MB#VYESX DS    0H                  OK EXIT                                      
         L     RF,CURPOS           BUMP CURPOS                                  
         ZIC   R0,MB#LNUM                                                       
         AR    RF,R0                                                            
         ST    RF,CURPOS                                                        
         MVC   NUMVAL,MB#BIN       RETURN VALUE                                 
         CR    RE,RE               OK EXIT WITH CC=                             
         B     *+6                                                              
MB#VNOX  LTR   RD,RD               NOT OK, CC NOT =                             
MB#VALX  DS    0H                                                               
         XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* PSVWRKD - WORKING STORAGE DSECT                                     *         
***********************************************************************         
         SPACE 1                                                                
PSVWRKD  DSECT                                                                  
*                                                                               
OUTWRKL  EQU   32                  OUTPUT AREA LENGTH                           
MAXFRGVS EQU   256                 MAX FRAG VALUES                              
MAXFRGFS EQU   OUTWRKL-12          MAX FRAGS FOR A SPACE                        
*                                                                               
DUB      DS    D                                                                
FULL     DS    F                                                                
RELO     DS    F                                                                
SAVR1    DS    F                                                                
CPARMS   DS    0XL24                                                            
CPARM1   DS    A                                                                
CPARM2   DS    A                                                                
CPARM3   DS    A                                                                
CPARM4   DS    A                                                                
CPARM5   DS    A                                                                
CPARM6   DS    A                                                                
*                                                                               
PARMS    DS    6F                                                               
WORK     DS    XL64                                                             
SOSTR    DS    A                   START OF STRING                              
EOSTR    DS    A                   END OF STRING                                
CURPOS   DS    A                   CURRENT POS IN STRING                        
CUREND   DS    A                   END OF CURRENT 'WORD'                        
AFRAG    DS    A                   A(SELECTED FRAGMENT TABLE ENTRY)             
AFRGTAB  DS    A                   A(FRAGMENT TABLE)                            
AOUT     DS    A                   A(OUTPUT AREA)                               
NUMVAL   DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    X                                                                
ERROR    DS    X                                                                
ERRINDX  DS    XL1                                                              
ALSTFRG  DS    A                    A(LAST FRAG)                                
CLMSW    DS    C                   Y=HAVE HAD COLUMN                            
CLRSW    DS    C                   Y=HAVE HAD COLOR                             
*                                                                               
NUM1     DS    F                   DIMENSION 1 NUMERIC                          
NUM2     DS    F                   DIMENSION 2 NUMERIC                          
NUM3     DS    F                   COLOR NUMERIC                                
FRAGWRK  DS    XL(MAXFRGVS)                                                     
*                                                                               
MBNMVWK  DS    0D                  MB#VAL WORK AREA FIELDS                      
AFLDSTEN DS    (4*2)F              PAIRS OF START AND END ADDRESSES             
ASTART   DS    A                   START OF EXTERNAL AREA                       
AUNIT    DS    A                   START OF UNIT ENTRY                          
FIELD1   DS    XL16                FIELD ACCUMULATOR 1                          
FIELD2   DS    XL16                FIELD ACCUMULATOR 2                          
FIELD3   DS    XL16                FIELD ACCUMULATOR 3                          
FIELD4   DS    XL16                FIELD ACCUMULATOR 4                          
BINFLD1  DS    F                   BINARY VALUE OF INPUT FIELD 1                
BINFLD2  DS    F                   BINARY VALUE OF INPUT FIELD 2                
BINFLD3  DS    F                   BINARY VALUE OF INPUT FIELD 3                
FRACTION DS    0F                  FRACTION INTERNAL REPRESENTATION             
FRACINTG DS    H                   INTEGRAL PART - STARTS WITH X'80'            
FRACNUM  DS    X                   NUMERATOR                                    
FRACDENM DS    X                   DENOMINATOR                                  
SWITCH   DS    X                   CONTROL SWITCH                               
SWDECPT  EQU   X'80'               DECIMAL POINT FOUND                          
SWNOFRAC EQU   X'40'               NO FRACTIONS ALLOWED                         
SWSLASH  EQU   X'20'               SLASH FOUND                                  
SWPLUS   EQU   X'10'               PLUS SIGN FOUND                              
SWMINUS  EQU   X'08'               MINUS SUGN FOUND                             
SWNONSP  EQU   X'04'               NON-SPACE FOUND                              
COMMA    DS    X                   WHAT REPRESENTS A COMMA                      
DECPT    DS    X                   WHAT REPRESENTS A DECIMAL POINT              
DECS     DS    X                   NUMBER OF DECIMALS WORK AREA                 
DISDC    DS    X                   MIN NUMBER OF DECIMALS ON DISPLAY            
RNDDC    DS    X                   NUMBER OF DECIMALS FOR ROUNDING              
SLSHCTR  DS    H                   NUMBER OF FIELDS BEFORE SLASH                
MBNMVWKL EQU   *-MBNMVWK                                                        
*                                                                               
       ++INCLUDE MBNMVALD                                                       
*                                                                               
PSVWRKX  DS    0F                                                               
*                                                                               
       ++INCLUDE PPFRGTBD                                                       
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'025PPSPCVAL  05/01/02'                                      
         END                                                                    
