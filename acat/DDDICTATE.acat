*          DATA SET DDDICTATE  AT LEVEL 006 AS OF 05/27/04                      
*CATALP DICTATE                                                                 
         TITLE 'DICTATE - DATA DICTIONARY MODULE'                               
**********************************************************************          
* CL1 ACTION VALUE S=SINGLE,T=TRANSLATE,C=CASE,I=INIT,L=LIST,A=ADDR  *          
* AL1 SUB ACTION VALUE L=LOWER,U=UPPER (GETS SET TO RETURN CODE)     *          
* AL1 SYSTEM CODE AS IN TOVSYS OR C' ' FOR AUTO RESOLVE              *          
* AL1 LANGUAGE CODE OR C' ' FOR AUTO RESOLVE                         *          
*                                                                    *          
* AL1 LEN OF INPUT DATA (FOR ACTION=T)                               *          
* AL3 ADR OF INPUT DATA                                              *          
*                                                                    *          
* CL1 C'L' IF WANT LENGTHS RETURNED (FOR ACTION =L)                  *          
* AL3 ADR OF OUTPUT DATA (FOR ACTION=L)                              *          
**********************************************************************          
         SPACE 1                                                                
         PRINT NOGEN                                                            
DICTATE  CSECT                                                                  
         ENTRY DICTNDX                                                          
         NMOD1 WORKX-WORKD,*DICTATE,RA,RR=RE                                    
         USING WORKD,RC                                                         
         ST    R1,APARM                                                         
         ST    RE,RELO                                                          
         LA    RE,*+6                                                           
         BSM   0,RE                SET IN 24-BIT MODE                           
         SPACE 1                                                                
DICT1    MVC   PARM,0(R1)          EXTRACT PARAMETER LIST                       
         MVC   IND,DDLANG          HOB OF LANGUAGE IS LASER FLAG                
         NI    DDLANG,X'7F'                                                     
         MVC   SYS,DDSYS                                                        
         MVC   LANG,DDLANG                                                      
         XC    ESCSEQ,ESCSEQ                                                    
         PROT  OFF                 DISABLE CALLER'S STORAGE PROTECTION          
         SPACE 1                                                                
DICT2    CLI   OFFLINE,C' '        FIRST CALL ONLY - SET ON OR OFFLINE          
         BNE   ACTN                                                             
         MVI   OFFLINE,C'Y'                                                     
         MVI   CASE,C'U'           OFFLINE DEFAULT CASE IS UPPER                
         ICM   RF,15,=V(SSB)                                                    
         BZ    DICT3                                                            
         ICM   RE,3,0(RF)                                                       
         BZ    DICT3                                                            
         MVI   OFFLINE,C'N'                                                     
         MVI   CASE,C'L'           ONLINE DEFAULT CASE IS LOWER                 
         B     ACTN                                                             
         SPACE 1                                                                
DICT3    ICM   RF,15,=V(MASTC)     GET OFFLINE DEFAULTS FROM V(MASTC)           
         BZ    ACTN                                                             
         USING MASTD,RF                                                         
         LA    R1,SYSLIST                                                       
DICT4    CLI   0(R1),C' '          SEARCH OFFLINE SYSTEM ID TABLE               
         BE    ACTN                                                             
         CLC   MCSYSTEM(2),0(R1)                                                
         BE    *+12                                                             
         LA    R1,L'SYSLIST(R1)                                                 
         B     DICT4                                                            
         MVC   DFLSYS,2(R1)        SET DEFAULT SYSTEM NUMBER                    
         MVC   DFLLANG,MCLANG      SET DEFAULT LANGUAGE CODE                    
         CLI   DFLLANG,LANGMAX                                                  
         BNH   *+8                                                              
         MVI   DFLLANG,0                                                        
         DROP  RF                                                               
         EJECT                                                                  
**********************************************************************          
*VALIDATE ACTION CODE AND PASS CONTROL TO PROCESSING ROUTINE         *          
**********************************************************************          
         SPACE 1                                                                
ACTN     CLI   DDACTN,C'T'         TRANSLATE WHOLE INPUT STRING                 
         BE    MULTIPLE                                                         
         CLI   DDACTN,C'S'         SINGLE FIELD TRANSLATE REQUIRED              
         BE    SINGLE                                                           
         CLI   DDACTN,C'L'         TRANSLATE INPUT LIST TO OUTPUT               
         BE    LIST                                                             
         CLI   DDACTN,C'A'         GET ADDRESS OF ENTRY                         
         BE    ADDR                                                             
         CLI   DDACTN,C'C'         CHANGE DEFAULT CASE                          
         BE    SETCASE                                                          
         CLI   DDACTN,C'I'         INITIALISE DICTIONARY                        
         BE    INIT                                                             
         SPACE 1                                                                
EXIT     L     R1,APARM            EXIT WITH UPDATED PARAMETER LIST             
         MVC   0(L'PARM,R1),PARM                                                
         PROT  ON                  RESTORE CALLER'S STORAGE PROTECTION          
         XMOD1 1                                                                
         SPACE 1                                                                
DEATH    CLI   OFFLINE,C'N'        COME HERE VIA RE FOR PUNISHMENT              
         BNE   SUICIDE                                                          
         L     RF,=V(SSB)          EXIT IF WE ARE IN $DUMP                      
         L     RF,SSBTKADR-SSBD(RF)                                             
         L     RF,TCBUTL-TCBD(RF)                                               
         CLI   TSVCREQ+1-UTLD(RF),X'5D'                                         
         BE    EXIT                                                             
SUICIDE  LR    R0,RE               SET DISP AFTER DC H'0'                       
         SR    R0,RB                                                            
         STCM  R0,3,*+6                                                         
         DC    H'0',H'0'                                                        
         EJECT                                                                  
**********************************************************************          
*ACTION=I INITIALISE DICTIONARY ENTRY TO CAUSE RELOAD FROM DISK      *          
**********************************************************************          
         SPACE 1                                                                
INIT     CLI   OFFLINE,C'N'        TEST IF ONLINE                               
         BE    INIT1               YES                                          
         MVI   OFFLINE,C' '        SET TO RE INIT NEXT CALL                     
         B     EXIT                                                             
INIT1    MVI   ESCFLAGS,0                                                       
         BRAS  R9,GETDD            GET LOCATION OF DCTNRY POINTER               
         ICM   R3,15,ALAND                                                      
         BZ    EXIT                                                             
**NOP**  XC    1(3,R3),1(R3)       CLEAR CORE ADDRESS SET BY LOAD               
         B     EXIT                                                             
         SPACE 1                                                                
**********************************************************************          
*ACTION=C CHANGE CASE TO SUBACTION VALUE OF L OR U                   *          
*PARAM2 MUST POINT TO A VALID ESCAPE SEQUENCE                        *          
**********************************************************************          
         SPACE 1                                                                
SETCASE  CLI   OFFLINE,C'Y'        CAN ONLY CHANGE CASE OFFLINE                 
         BNE   EXIT                                                             
         CLI   DDRETN,C'U'         SUBACTION U FOR UPPER                        
         BE    SETCASE1                                                         
         CLI   DDRETN,C'M'         SUBACTION M FOR MIXED                        
         BE    SETCASE1                                                         
         CLI   DDRETN,C'L'         SUBACTION L FOR LOWER                        
         BE    SETCASE1                                                         
         BAS   RE,DEATH            DIE IF INVALID CASE                          
SETCASE1 MVC   CASE,DDRETN                                                      
         B     EXIT                                                             
         EJECT                                                                  
**********************************************************************          
*ACTION=A PASS BACK 24-BIT ADDRESS OF DICTIONARY ENTRY               *          
*PARAM2 MUST POINT TO A VALID ESCAPE SEQUENCE                        *          
*PARAM3 RETURN A(DUMTXT) WHICH WILL CONTAIN COPY OF ENTRY            *          
**********************************************************************          
         SPACE 1                                                                
ADDR     XC    DDOLEN(4),DDOLEN    CLEAR RETURN ADDR FIELD                      
         SR    R6,R6               PARAM2 HAS A(ESC SEQUENCE)                   
         ICM   R6,7,DDIADR                                                      
         BZ    EXIT                                                             
         ST    R6,AESCSEQ          R6=A(ESCAPE SEQUENCE)                        
         MVC   ESCSEQ,0(R6)        COPY ESCAPE SEQUENCE TO W/S FIELD            
         MVI   ESCFLAGS,0                                                       
         BRAS  R9,GETDD                                                         
         BZ    ADDRX                                                            
*                                                                               
ADDR1    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         LR    R9,R3                                                            
         SR    RF,RF                                                            
         ICM   RF,3,ESCNUM         INDEX INTO DICTIONARY                        
         SR    R0,R0                                                            
         ICM   R0,3,20(R3)         GET HIGH MSG NUM                             
         TM    ESCNUM,X'80'                                                     
         BO    *+8                                                              
         LH    R0,=H'22'                                                        
         AR    R9,R0               R9=A(CORRESPONDING MAX MSG NUM)              
*                                                                               
ADDR1A   CLM   RF,3,0(R9)          CHECK AGAINST MAX VALUE                      
         BH    ADDRX                                                            
         TM    ESCNUM,HIBIT                                                     
         BZ    *+8                                                              
         N     RF,=X'00007FFF'                                                  
         BCTR  RF,0                CALCULATE DISPLACEMENT INTO INDEX            
         MH    RF,INDXWDTH                                                      
         AH    R9,=H'2'                                                         
         AR    RF,R9                                                            
         SR    RE,RE                                                            
         LA    R1,DSMSKVAL                                                      
         EX    R1,*+8                                                           
         B     *+8                                                              
         ICM   RE,0,0(RF)          GET DISPLACEMENT OF ENTRY                    
         BZ    ADDRX                                                            
         AR    RE,R3                                                            
         ST    RE,ANTRY            ANTRY IS A(DCTNRY ENTRY)                     
*                                                                               
ADDR2    CLI   SUBLANG,0           TEST IF USING SUB LANGUAGE                   
         BE    ADDR3                                                            
         SR    R0,R0               R0=SUBLANG/NUM ENTRIES                       
         IC    R0,0(RE)                                                         
         SRDL  R0,4                                                             
         SRL   R1,28                                                            
         STC   R0,BYTE1            SAVE SUB LANG                                
         STC   R1,BYTE2            SAVE NUM ENTRIES                             
         SR    RF,RF               RF=SUM OF LENGTHS                            
         AH    RE,=H'1'            RE=A(LENGTHS OF ENTRIES)                     
         SR    R0,R0                                                            
ADDR2A   IC    R0,0(RE)            GET LENGTH OF ENTRY                          
         SLL   R0,25               SHIFT OUT SHIT                               
         SRL   R0,25                                                            
         AR    RF,R0                                                            
         AH    RE,=H'1'                                                         
         BCT   R1,ADDR2A                                                        
         IC    R0,BYTE2                                                         
         AR    RF,R0                                                            
         AH    RF,=H'1'            RF=TOTAL LENGTH OF ENTRIES                   
         ST    RF,LNTRY                                                         
         L     RE,ANTRY                                                         
         AR    RE,RF               RE=A(NEXT ENTRY)                             
         SR    R0,R0                                                            
         IC    R0,0(RE)                                                         
         SRDL  R0,4                                                             
         SRL   R1,28                                                            
         STC   R0,BYTE3            NEXT ENTRY SUB LANG                          
         STC   R1,BYTE4            NEXT ENTRY NUM ENTRIES                       
         CLC   BYTE1,BYTE3         TEST SUB LANG CODES                          
         BE    ADDR3B              ITS NOT THE SAME ENTRY                       
         CLC   BYTE3,SUBLANG                                                    
         BNE   ADDR3B                                                           
         ST    RE,ANTRY            SAVE A(SUB LANG ENTRY)                       
         SPACE 1                                                                
ADDR3    SR    R1,R1               R1=NUM OF ENTRIES                            
         IC    R1,0(RE)                                                         
         SLL   R1,28               CLEAR OUT SUB LANG                           
         SRL   R1,28                                                            
         LR    R9,R1               R9=SAVE NUMBER OF ENTRIES                    
         AH    RE,=H'1'            RE=A(NEXT LENGTH FIELD)                      
         SR    RF,RF               RF=SUM OF LENGTH FIELDS                      
         SR    R0,R0                                                            
ADDR3A   IC    R0,0(RE)            GET LENGTH OF ENTRY                          
         SLL   R0,25               TURN OFF SPECIAL LENGTH FLAG                 
         SRL   R0,25                                                            
         AR    RF,R0                                                            
         AH    RE,=H'1'                                                         
         BCT   R1,ADDR3A                                                        
         AR    RF,R9                                                            
         AH    RF,=H'1'                                                         
ADDR3B   STC   RF,DDOLEN           RETURN TOTAL LENGTH                          
         LA    R1,DUMTXT           RETURN TOTAL ENTRY                           
         L     RE,ANTRY                                                         
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R1),0(RE)                                                    
         NI    0(R1),X'0F'         TURN OFF SUB LANGUAGE HOB                    
         STCM  R1,7,DDOADR         RETURN ADDR OF ENTRY                         
*                                                                               
ADDRX    LA    RE,*+6              RETURN FROM 31-BIT MODE                      
         BSM   0,RE                                                             
         B     EXIT                                                             
         EJECT                                                                  
**********************************************************************          
*ACTION=S SINGLE ESCAPE SEQUENCE TRANSLATE                           *          
*PARAM2 MUST POINT TO A VALID ESCAPE SEQUENCE                        *          
**********************************************************************          
         SPACE 1                                                                
SINGLE   SR    R6,R6               PARAM2 HAS A(ESC SEQUENCE)                   
         ICM   R6,7,DDIADR                                                      
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
         SR    R7,R7                                                            
         ICM   R7,1,DDILEN         LENGTH IS OPTIONAL FOR SINGLE                
         BNZ   *+8                                                              
         LH    R7,MAXESCL                                                       
         STM   R6,R7,SAVEALS       SAVE ADR AND LEN OF ESC SEQ AREA             
         SR    R2,R2                                                            
         TRT   0(1,R6),TRTDD       FIRST CHR MUST BE VALID ESC CHR              
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
*                                                                               
         MVC   ESCCASE,CASE        SET DEFAULT CASE                             
         CLI   DDRETN,C'U'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'U'                                                     
         B     SINGLE1                                                          
         CLI   DDRETN,C'M'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'M'                                                     
         B     SINGLE1                                                          
         CLI   DDRETN,C'L'                                                      
         BNE   *+8                                                              
         MVI   ESCCASE,C'L'                                                     
*                                                                               
SINGLE1  BRAS  R9,SNGL             GO PROCESS SINGLE ESC SEQUENCE               
         B     EXIT                                                             
         EJECT                                                                  
**********************************************************************          
*ACTION=L TRANSLATE A LIST INPUT TO OUTPUT LIST                      *          
*PARAM2 MUST POINT TO A LIST OF VALID ESCAPE SEQUENCES               *          
*PARAM3 MUST POINT TO AN OUTPUT AREA FOR THE LIST OF DATA ITEMS      *          
**********************************************************************          
         SPACE 1                                                                
LIST     SR    RE,RE               PARAM2 HAS A(INPUT LIST)                     
         SR    RF,RF                                                            
         ICM   RE,7,DDIADR                                                      
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
         STM   RE,RF,SAVEILA       SAVE A(NEXT ITEM IN INPUT LIST)              
         ICM   RE,7,DDOADR                                                      
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
         STM   RE,RF,SAVEOLA       SAVE A(NEXT ITEM IN OUTPUT LIST)             
*                                                                               
LIST1    MVC   ESCCASE,CASE        SET DEFAULT CASE                             
         CLI   DDRETN,C'U'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'U'                                                     
         B     LIST2                                                            
         CLI   DDRETN,C'M'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'M'                                                     
         B     LIST2                                                            
         CLI   DDRETN,C'L'                                                      
         BNE   *+8                                                              
         MVI   ESCCASE,C'L'                                                     
*                                                                               
LIST2    L     RE,SAVEILA          POINT TO NEXT INPUT LIST ITEM                
         A     RE,SAVEILA+4                                                     
         ST    RE,SAVEILA                                                       
         L     R6,SAVEOLA          POINT TO PREVIOUS OUTPUT ITEM                
         ICM   RF,15,SAVEOLA+4     GET LENGTH OF PREVIOUS OUTPUT ITEM           
         BZ    LIST2A                                                           
         CLI   DDOLEN,C'L'         TEST IF CALLER WANTS ACTUAL LENGTH           
         BNE   LIST2A                                                           
         LA    R1,0(R6,RF)                                                      
         MVC   0(1,R1),ESCLDATA    SET ACTUAL LENGTH BEHIND FIELD               
         LA    RF,1(RF)                                                         
LIST2A   AR    R6,RF               POINT TO NEXT OUTPUT LIST ITEM               
         ST    R6,SAVEOLA                                                       
         SR    R2,R2                                                            
         TRT   0(1,RE),TRTDD       FIRST CHR MUST BE VALID ESC CHR              
         BZ    EXIT                                                             
         ST    R2,SAVEILA+4        SAVE LENGTH OF INPUT ESC SEQ                 
         BCTR  R2,0                                                             
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R6),0(RE)       MOVE ESC SEQ TO OUTPUT LIST                  
         LA    R7,1(R2)                                                         
         CLI   SAVEILA+7,4         TEST ESC SEQ CONTAINS LEN                    
         BNE   LIST2B              NO                                           
         IC    R7,3(R6)            YES USE LEN IN ESCAPE SEQUENCE               
         SLL   R7,25               DROP X'80' BIT FROM LENGTH                   
         SRL   R7,25                                                            
LIST2B   ST    R7,SAVEOLA+4                                                     
         STM   R6,R7,SAVEALS       SAVE ADR AND LEN OF ESC SEQ AREA             
*                                                                               
LIST3    BRAS  R9,SNGL             GO PROCESS SINGLE ESC SEQUENCE               
         B     LIST2               BACK FOR NEXT ITEM IN LIST                   
         EJECT                                                                  
**********************************************************************          
*ACTION=T TRANSLATE ALL ESCAPE SEQUENCES FOUND IN A STRING           *          
*PARAM2 MUST GIVE LENGTH AND ADDRESS OF STRING                       *          
**********************************************************************          
         SPACE 1                                                                
MULTIPLE SR    R6,R6               PARAM2 HAS LEN AND ADR OF AREA               
         ICM   R6,7,DDIADR                                                      
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
         SR    R7,R7                                                            
         ICM   R7,1,DDILEN                                                      
         BNZ   *+8                                                              
         BAS   RE,DEATH                                                         
         MVC   ESCCASE,CASE        SET DEFAULT CASE                             
         CLI   DDRETN,C'U'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'U'        CALLER ASKED FOR UPPER                       
         B     MULT1                                                            
         CLI   DDRETN,C'M'                                                      
         BNE   *+12                                                             
         MVI   ESCCASE,C'M'        CALLER ASKED FOR MIXED                       
         B     MULT1                                                            
         CLI   DDRETN,C'L'                                                      
         BNE   *+8                                                              
         MVI   ESCCASE,C'L'        CALLER ASKED FOR LOWER                       
*                                                                               
MULT1    STM   R6,R7,SAVEALS       SAVE ADR AND LEN OF STRING                   
         SR    R2,R2                                                            
         BCTR  R7,0                                                             
         EX    R7,*+8                                                           
         B     *+10                                                             
         TRT   0(0,R6),TRTDD       TEST IF ANY ESC CHRS IN STRING               
         BZ    MULTX               NO ALL DONE                                  
         LA    R1,0(R1)            CLEAR HIGH ORDER BTYE FOR MATHS              
*                                                                               
MULT2    LR    R6,R1               POINT R6 TO FIRST ESC CHR FOUND              
         BRAS  R9,SNGL             TRANSLATE SINGLE ESC SEQ                     
         LM    RE,RF,SAVEALS                                                    
         LR    R1,R6               COMPUTE REMAINING LEN OF STRING              
         SR    R1,RE                                                            
         AR    R1,R7                                                            
         SR    RF,R1                                                            
         BNP   MULTX                                                            
         AR    R6,R7               SET R6=ADR OF START OF STRING                
         LR    R7,RF               SET R7=LEN OF RESIDUAL STRING                
         CLI   ESCCASE,C'L'                                                     
         BNE   MULT1                                                            
         MVI   ESCCASE,C'L'        SET CASE FOR NOT FIRST FIELD (M)             
         B     MULT1               BACK FOR REST OF STRING                      
*                                                                               
MULTX    B     EXIT                                                             
         EJECT                                                                  
**********************************************************************          
*SUBROUTINE TO PROCESS SINGLE ESCAPE SEQUENCE POINTED TO BY R6       *          
*ADDRESS AND LEN OF STRING SAVED IN SAVEALS                          *          
*RETURN LENGTH OF ESCAPE SEQUENCE REPLACED IN R7                     *          
**********************************************************************          
         SPACE 1                                                                
SNGL     ST    R9,SAVER9                                                        
         ST    R6,AESCSEQ                                                       
         MVC   ESCSEQ,0(R6)                                                     
         MVI   BYTE,0                                                           
         MVI   ESCFLAGS,0                                                       
         BRAS  R9,GETDD                                                         
         MVI   ESCLDATA,0                                                       
         XC    ESCLCR,ESCLCR                                                    
         MVI   ESCSPCL,0           SET SPECIAL LENGTH AND FLAG                  
         MVI   ESCSPCF,0                                                        
         MVC   ESCUNDER,ESCCDE     SAVE UNDERLINE INFO                          
         NI    ESCCDE,255-X'08'    TURN OFF BIT THAT SAYS UNDERLINE             
         L     R1,SAVEALS                                                       
         A     R1,SAVEALS+4                                                     
         SR    R1,R6               R1=LEN OF RESIDUAL DATA                      
*                                                                               
SNGL0    CLI   ESCCDE,DD#ESCSX     TEST END OF SQUASH ESCAPE                    
         BNE   SNGL1                                                            
         LA    R7,1                SET L'ESCAPE SEQUENCE                        
         MVI   0(R6),C' '          REPLACE BY SPACE                             
         B     SNGLX                                                            
*                                                                               
SNGL1    LA    R7,3                R7=L'ESCAPE SEQUENCE                         
         CLI   ESCCDE,DD#ESCL3     TEST FOR SHORT ESC SEQUENCE                  
         BH    SNGL1A                                                           
         BE    SNGL1B                                                           
         LA    R7,2                                                             
         CH    R1,=H'2'            TEST IF ROOM IN RESIDUAL STRING              
         BNH   *+8                                                              
         MVI   2(R6),C' '          ADJUST FOR TWO CHR SHORT ESC                 
         B     SNGL1B                                                           
SNGL1A   MVC   ESCSPCL,ESCLEN      TEST/SET SPECIAL LENGTH FLAG                 
         NI    ESCLEN,X'7F'                                                     
         IC    R7,ESCLEN                                                        
         CH    R7,=H'4'            CHECK MIN LEN FOR ESC SEQ                    
         BNL   *+8                                                              
         LA    R7,4                                                             
         CH    R7,MAXESCL          CHECK MAX LEN FOR ESC SEQ                    
         BNH   *+8                                                              
         LH    R7,MAXESCL                                                       
SNGL1B   CR    R7,R1               CHECK WITH RESIDUAL LENGTH                   
         BNH   *+6                                                              
         LR    R7,R1               USE RESIDUAL IF TOO LONG                     
         CH    R7,=H'2'                                                         
         BNL   SNGL1C                                                           
         MVC   ESCLCR,=C'<  '      SET PAD CHR FOR NO ROOM                      
         MVC   0(1,R6),ESCLCR                                                   
         B     SNGLX                                                            
SNGL1C   ST    R7,LESCSEQ          SAVE ESC SEQ AREA LENGTH                     
         LR    R5,R7                                                            
         TM    ESCSPCL,X'80'                                                    
         BZ    SNGL2                                                            
         STC   R7,ESCSPCL          ALSO SPECIAL LENGTH                          
         OI    ESCSPCL,X'80'                                                    
         SRL   R5,1                R5=HALF LENGTH OF SPECIAL LEN AREA           
*                                                                               
SNGL2    LTR   R3,R3               R3=A(DICT FOR SYS/LANG)                      
         BNZ   SNGL3               DICTIONARY IS THERE, LOOK IT UP              
         MVC   ESCLCR,=C'<=>'      SET PAD CHRS FOR NO DICTIONARY               
         BRAS  R9,PADESC                                                        
         B     SNGL5                                                            
*                                                                               
SNGL3    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         SR    RF,RF               INDEX INTO DCTNRY                            
         ICM   RF,3,ESCNUM                                                      
         BZ    SNGL3D                                                           
         SR    RE,RE                                                            
         ICM   RE,3,20(R3)         RE=DISPLACEMENT TO HIGH INDICES              
         TM    ESCNUM,HIBIT                                                     
         BO    SNGL3A                                                           
         LH    RE,=H'22'           RE=DISPLACEMENT TO LOW INDICES               
SNGL3A   AR    RE,R3                                                            
         CLM   RF,3,0(RE)          COMPARE AGAINST RESP MAX VALUE               
         BH    SNGL3C                                                           
         AH    RE,=H'2'            INDEX STARTS AT +2 FROM MAX MSG NUM          
         TM    ESCNUM,HIBIT                                                     
         BZ    *+8                                                              
         N     RF,=X'00007FFF'                                                  
         BCTR  RF,0                                                             
         MH    RF,INDXWDTH                                                      
         AR    RF,RE               RF=DISPLACEMENT OF ENTRY                     
*                                                                               
         CR    RF,R3               TEST OUT OF RANGE                            
         BL    SNGL3D                                                           
         C     RF,AXDICT                                                        
         BH    SNGL3D                                                           
         SR    RE,RE                                                            
         ICM   RE,7,0(RF)                                                       
         BZ    SNGL3C                                                           
         AR    RE,R3                                                            
         CR    RE,R3               TEST OUT OF RANGE                            
         BL    SNGL3D                                                           
         C     RE,AXDICT                                                        
         BH    SNGL3D                                                           
         SPACE 1                                                                
SNGL3B   ST    RE,ANTRY            SAVE A(DCTNRY ENTRY)                         
         CLI   0(RE),0             TEST IF ANY DATA FOR ENTRY                   
         BNE   SNGL4                                                            
SNGL3C   CLI   DDLANG,0            OK IF ENGLISH                                
         BE    SNGL3CA                                                          
         CLC   DDLANG,BYTE         TRIED ENG TRANS ALREADY                      
         BE    SNGL3CA             ALREADY TRIED ENGLISH                        
         MVC   BYTE,DDLANG                                                      
         MVI   DDLANG,0                                                         
         BRAS  R9,GETDD                                                         
         MVC   DDLANG,BYTE         RESTORE REQUESTED LANG                       
         B     SNGL2                                                            
*                                                                               
SNGL3CA  MVC   ESCLCR,=C'(*)'      SET PAD CHRS FOR NOT IN DICT                 
         BRAS  R9,PADESC                                                        
         B     SNGL5                                                            
SNGL3D   MVC   ESCLCR,=C'<+>'      SET PAD CHRS FOR OUT OF DICT RANGE           
         BRAS  R9,PADESC                                                        
         B     SNGL5                                                            
*                                                                               
SNGL4    LA    RE,*+6              RETURN FROM 31-BIT MODE                      
         BSM   0,RE                                                             
         LA    RE,SPACES           PAD ESC SEQ AREA WITH SPACES                 
         CLI   ESCCDE,DD#ESCF                                                   
         BNE   SNGL4A                                                           
         MVI   UNDERS,C'-'         OR UNDERLINES IF FILL REQUESTED              
         TM    IND,X'80'                                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         ICM   RE,15,=V(BOXAREA)                                                
         BZ    *+16                                                             
         TM    BOXDDCTL-BOXD(RE),BOXDDUL                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         MVC   UNDERS+1(L'UNDERS-1),UNDERS                                      
         LA    RE,UNDERS                                                        
SNGL4A   LR    RF,R7                                                            
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     SNGL5                                                            
         MVC   0(0,R6),0(RE)                                                    
*                                                                               
SNGL5    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         CH    R7,=H'2'            EXIT IF NO ROOM LEFT                         
         BL    SNGLX                                                            
*                                                                               
SNGL5A   CLI   SUBLANG,0           TEST IF SUB LANGUAGE DEFINED                 
         BE    SNGL5C                                                           
         L     RE,ANTRY                                                         
         SR    R0,R0               R0=SUBLANG/NUM ENTRIES                       
         IC    R0,0(RE)                                                         
         SRDL  R0,4                                                             
         SRL   R1,28                                                            
         STC   R0,BYTE1            SAVE SUB LANG                                
         STC   R1,BYTE2            SAVE NUM ENTRIES                             
         SR    RF,RF               RF=SUM OF LENGTHS                            
         AH    RE,=H'1'            RE=A(LENGTHS OF ENTRIES)                     
         SR    R0,R0                                                            
SNGL5B   IC    R0,0(RE)            GET LENGTH OF ENTRY                          
         SLL   R0,25               SHIFT OUT SHIT                               
         SRL   R0,25                                                            
         AR    RF,R0                                                            
         AH    RE,=H'1'                                                         
         BCT   R1,SNGL5B                                                        
         IC    R0,BYTE2                                                         
         AR    RF,R0                                                            
         AH    RF,=H'1'            RF=TOTAL LENGTH OF ENTRIES                   
         ST    RF,LNTRY                                                         
         A     RF,ANTRY                                                         
         SR    R0,R0                                                            
         IC    R0,0(RF)                                                         
         SRDL  R0,4                                                             
         SRL   R1,28                                                            
         STC   R0,BYTE3            NEXT ENTRY SUB LANG                          
         STC   R1,BYTE4            NEXT ENTRY NUM ENTRIES                       
         CLC   BYTE1,BYTE3         TEST SUB LANG CODES                          
         BE    SNGL5C              ITS NOT THE SAME ENTRY                       
         CLC   BYTE3,SUBLANG                                                    
         BNE   SNGL5C                                                           
         ST    RF,ANTRY            SAVE A(SUB LANG ENTRY)                       
*                                                                               
SNGL5C   L     R4,ANTRY            R4=A(DCTNRY ENTRY)                           
         SR    R1,R1                                                            
         IC    R1,0(R4)            R1=NUM ENTRIES IN DICT                       
         SLL   R1,28               CLEAR OUT SUB LANG CODE                      
         SRL   R1,28                                                            
         LA    R2,1(R4)            R2=A(DCTNRY DATA LENGTH)                     
         LA    R4,1(R1,R4)         R4=A(DCTNRY DATA TEXT)                       
         LR    RE,R2               SAVE LOCN OF FIRST TEXT                      
         LR    RF,R4                                                            
         SR    R0,R0                                                            
         CR    R5,R7               TEST IF SPECIAL LENGTH DEFINED               
         BNE   SNGL6A              YES                                          
*                                                                               
SNGL6    IC    R0,0(R2)            GET LENGTH OF TEXT                           
         CR    R0,R7               TEST IF SHORTER THAN ESC AREA                
         BH    SNGL7                                                            
         LR    RE,R2               SAVE LOCN OF LONGEST TEXT                    
         LR    RF,R4                                                            
         LA    R2,1(R2)            BUMP TO NEXT TEXT ITEM                       
         AR    R4,R0                                                            
         BCT   R1,SNGL6                                                         
         B     SNGL7                                                            
*                                                                               
SNGL6A   IC    R0,0(R2)            FIND FIRST SPECIAL LEN FIELD                 
         TM    0(R2),X'80'                                                      
         BO    SNGL6A1                                                          
         CR    R0,R5               TEST IF SHORTER THAN HALF LENGTH             
         BH    SNGL6A3             NO                                           
         MVI   ESCSPCF,1           YES SET HAVE FOUND SHORT/EQUAL SNGL          
         B     SNGL6A2             SAVE LOCN OF LONGEST HALF TEXT               
SNGL6A1  SLL   R0,25               DROP X'80' BIT FROM LENGTH                   
         SRL   R0,25                                                            
         CR    R0,R7               TEST IF LENGTH MATCHES                       
         BH    SNGL7                                                            
         BE    *+12                                                             
         MVI   ESCSPCF,2           SET FOUND SHORTER DOUBLE TEXT                
         B     SNGL6A2                                                          
         MVI   ESCSPCF,3           SET FOUND EXACT MATCH DOUBLE TEXT            
SNGL6A2  LR    RE,R2               SAVE LOCN OF SPECIAL TEXT                    
         LR    RF,R4                                                            
SNGL6A3  LA    R2,1(R2)            BUMP TO NEXT TEXT ITEM                       
         AR    R4,R0                                                            
         BCT   R1,SNGL6A                                                        
*                                                                               
SNGL7    LR    R4,RF               R4=A(DICT TEXT TO BE USED)                   
         IC    R5,0(RE)            R5=L'DICT TEXT TO BE USED                    
         SLL   R5,25                                                            
         SRL   R5,25                                                            
         CR    R5,R7               TRUNCATE TEXT IF TOO LONG                    
         BNH   *+6                                                              
         LR    R5,R7                                                            
         TM    ESCUNDER,X'08'      TEST IF UNDERLINE ESC CODE                   
         BZ    SNGLA               NO                                           
         LR    R1,R5                                                            
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   0(0,R4),SPACES                                                   
         BE    SNGL7X                                                           
         MVI   UNDERS,C'-'                                                      
         TM    IND,X'80'                                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         ICM   R4,15,=V(BOXAREA)                                                
         BZ    *+16                                                             
         TM    BOXDDCTL-BOXD(R4),BOXDDUL                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         MVC   UNDERS+1(L'UNDERS-1),UNDERS                                      
         LA    R4,UNDERS                                                        
SNGL7X   LA    RE,*+6              RETURN FROM 31-BIT MODE                      
         BSM   0,RE                                                             
         B     SNGLA                                                            
*                                                                               
SNGL8    LA    RE,*+6              RETURN FROM 31-BIT MODE SET                  
         BSM   0,RE                                                             
         LA    R1,P1               SET GETTXT PARAM LIST                        
         USING GETTXTD,R1                                                       
         XC    GTBLOCK,GTBLOCK                                                  
         MVC   GTMSGNO,ESCNUM      MESSAGE NUMBER                               
         MVI   GTMTYP,GTMGDIC      TYPE DICTIONARY                              
         MVC   GTMLANG,LANG        LANGUAGE                                     
         MVC   GTMSYS,SYS          SYSTEM                                       
         LA    R0,100                                                           
         STC   R0,GTMAXL                                                        
         LA    R4,DSKTXT           R4=A(DICT TEXT READ FROM DISK)               
         STCM  R4,7,GTAOUT                                                      
         OI    GT1INDS,GT1OWRK     SET OUTPUT WORK AREA PASSED FLAG             
         ICM   RF,15,=V(GETTXT)                                                 
         BZ    SNGL8B                                                           
         BASR  RE,RF                                                            
         TM    GT1INDS,GT1NOMSG+GT1NOCTL                                        
         BNZ   SNGL8B                                                           
         IC    R0,GTMAXL           R0=L'DICT TEXT READ FROM DISK                
         B     SNGL8C                                                           
SNGL8B   MVC   ESCLCR,=C'(-)'      SET PAD CHRS FOR NOT ON DISK                 
         BRAS  R9,PADESC                                                        
         B     SNGL5                                                            
SNGL8C   CLI   0(R4),X'20'         TEST IF TEXT IS MULTIPLE ENTRY               
         BNL   SNGL8D              NO                                           
         LR    RE,R4               POINT TO PSEUDO DCTNRY ENTRY                 
         B     SNGL3B                                                           
SNGL8D   LR    R5,R0               R5=L'DICT TEXT READ FROM DISK                
         CR    R5,R7               TRUNCATE TEXT IF TOO LONG                    
         BNH   *+6                                                              
         LR    R5,R7                                                            
         LA    RE,SPACES           PAD CHR IS SPACE                             
         CLI   ESCCDE,DD#ESCF      UNLESS CENTER WITH FILL CHR                  
         BNE   SNGL8E                                                           
         MVI   UNDERS,C'-'         POINT TO UNDERLINE STRING                    
         TM    IND,X'80'                                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         ICM   RE,15,=V(BOXAREA)                                                
         BZ    *+16                                                             
         TM    BOXDDCTL-BOXD(RE),BOXDDUL                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         MVC   UNDERS+1(L'UNDERS-1),UNDERS                                      
         LA    RE,UNDERS                                                        
SNGL8E   LR    RF,R7               PAD ESC SEQ AREA                             
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R6),0(RE)                                                    
         TM    ESCUNDER,X'08'      TEST IF UNDERLINE ESC CODE                   
         BZ    SNGLA               NO                                           
         LR    R1,R5                                                            
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   0(0,R4),SPACES      TEST IF TEXT FOUND IS SPACES                 
         BE    SNGLA               YES                                          
         MVI   UNDERS,C'-'         NO POINT TO UNDERLINE STRING                 
         TM    IND,X'80'                                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         ICM   R4,15,=V(BOXAREA)                                                
         BZ    *+16                                                             
         TM    BOXDDCTL-BOXD(R4),BOXDDUL                                        
         BZ    *+8                                                              
         MVI   UNDERS,X'BF'                                                     
         MVC   UNDERS+1(L'UNDERS-1),UNDERS                                      
         LA    R4,UNDERS                                                        
         DROP  R1                                                               
*                                                                               
SNGLA    STC   R5,ESCLDATA         SAVE ACTUAL DATA LENGTH                      
         CLI   ESCCDE,DD#ESCL      TEST WHICH TYPE OF ESC CHR                   
         BNH   SNGLL                                                            
         CLI   ESCCDE,DD#ESCC                                                   
         BE    SNGLC                                                            
         CLI   ESCCDE,DD#ESCR                                                   
         BE    SNGLR                                                            
         CLI   ESCCDE,DD#ESCS                                                   
         BE    SNGLS                                                            
         CLI   ESCCDE,DD#ESCF                                                   
         BE    SNGLC                                                            
         BAS   RE,DEATH                                                         
*                                                                               
SNGLC    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         LR    RF,R7               CENTRE JUSTIFY DATA IN FIELD                 
         SR    RF,R5                                                            
         SRL   RF,1                                                             
         AR    RF,R6                                                            
         BCTR  R5,0                                                             
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(R4)                                                    
         CLI   ESCCASE,C'U'                                                     
         BNE   SNGLX                                                            
         L     R1,ATRUP            GET TRANSLATE TABLE FOR LANG                 
         EX    R5,*+8                                                           
         B     SNGLX                                                            
         TR    0(0,RF),0(R1)       CONVERT TO UPPER CASE                        
*                                                                               
SNGLL    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         CLI   ESCSPCF,2           LEFT JUSTIFY DATA IN FIELD                   
         BNE   SNGLL4                                                           
         STM   R4,R5,DUB           SAVE ADR/LEN OF SHORT DBL ESC SEQ            
         MVC   DUMTXT,SPACES                                                    
         LA    RE,DUMTXT                                                        
         SRL   R5,1                R5=HALF LENGTH OF SHORTER ESC SEQ            
         SH    R5,=H'1'                                                         
         BM    SNGLL3                                                           
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),0(R4)       MOVE SHORT FIRST HALF                        
         LR    R1,R7                                                            
         SRL   R1,1                R1=HALF LENGTH OF FIELD                      
         AR    RE,R1                                                            
         LA    R4,1(R4,R5)                                                      
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),0(R4)       MOVE SHORT SECOND HALF                       
         LA    R4,DUMTXT                                                        
         LA    R5,1(R1)                                                         
         SLL   R5,1                                                             
         B     SNGLL4                                                           
SNGLL3   LM    R4,R5,DUB           RESTORE ADR/LEN OF ESC SEQ                   
         B     SNGLL4                                                           
SNGLL4   BCTR  R5,0                LEFT JUSTIFY DATA IN FIELD                   
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R6),0(R4)                                                    
         L     R1,ATRUP            GET TRANSLATE TABLE FOR LANGUAGE             
         CLI   ESCCASE,C'U'                                                     
         BNE   SNGLL5                                                           
         EX    R5,*+8                                                           
         B     *+10                                                             
         TR    0(0,R6),0(R1)       CONVERT TO UPPER CASE                        
SNGLL5   CLI   ESCCASE,C'M'                                                     
         BE    SNGLX                                                            
         TR    0(1,R6),0(R1)       MAKE VERY FIRST CHR UPPER                    
         B     SNGLX                                                            
*                                                                               
SNGLR    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         LR    RF,R7               RIGHT JUSTIFY DATA IN FIELD                  
         SR    RF,R5                                                            
         AR    RF,R6                                                            
         BCTR  R5,0                                                             
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(R4)                                                    
         CLI   ESCCASE,C'U'                                                     
         BNE   SNGLX                                                            
         L     R1,ATRUP            GET TRANSLATE TABLE FOR LANG                 
         EX    R5,*+8                                                           
         B     SNGLX                                                            
         TR    0(0,RF),0(R1)       CONVERT TO UPPER CASE                        
*                                                                               
SNGLS    LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         BCTR  R5,0                SQUASH DATA IN FIELD                         
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R6),0(R4)       FIRST LEFT JUSTIFY IN FIELD                  
         L     R1,ATRUP            GET TRANSLATE TABLE FOR LANG                 
         CLI   ESCCASE,C'U'                                                     
         BNE   SNGLS1                                                           
         EX    R5,*+8                                                           
         B     *+10                                                             
         TR    0(0,R6),0(R1)       CONVERT TO UPPER CASE                        
SNGLS1   CLI   ESCCASE,C'M'                                                     
         BE    SNGLS2                                                           
         TR    0(1,R6),0(R1)       MAKE VERY FIRST CHR UPPER                    
SNGLS2   LA    RF,0(R6,R5)         POINT TO LAST CHR MOVED IN                   
SNGLS3   CLI   0(RF),C' '                                                       
         BNE   SNGLS4                                                           
         BCTR  RF,0                                                             
         CR    RF,R6                                                            
         BH    SNGLS3                                                           
SNGLS4   LA    RF,1(RF)            RF=A(1ST BLANK CHR IN ESC SEQ)               
         LA    RE,0(R6,R7)         RE=A(END OF ESC SEQ)                         
         LR    R5,RE                                                            
         SR    R5,RF               R5=NUM OF BLANK CHRS TO REMOVE               
         BNP   SNGLX                                                            
         L     R2,SAVEALS                                                       
         A     R2,SAVEALS+4                                                     
SNGLS4A  BCTR  R2,0                R2=LAST CHR IN RESIDUAL STRING               
         CR    R2,RE               SEARCH FOR END OF SQUASH CHR                 
         BNL   SNGLS4B                                                          
         SR    R2,R2               R2=ZERO IF NO EOS CHR FOUND                  
         B     SNGLS5                                                           
SNGLS4B  CLI   0(R2),DD#ESCSX      TEST IF END OF SQUASH CHR                    
         BNE   SNGLS4A                                                          
         LR    R1,R2                                                            
         SH    R1,=H'1'                                                         
         CLI   0(R1),DD#ESCSX      MUST BY TWO IN A ROW                         
         BNE   SNGLS4A                                                          
         LR    R2,R1               R1=R2=A(FIRST EOS CHR)                       
         B     SNGLS6                                                           
SNGLS5   L     R1,SAVEALS          POINT TO END OF STRING                       
         A     R1,SAVEALS+4                                                     
SNGLS6   SR    R1,RE               R1=NUM OF CHRS TO SHIFT LEFT                 
         BNP   SNGLX                                                            
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(RE)       SHIFT STRING LEFT                            
         SR    R7,R5               DECR LENGTH OF ESC SEQUENCE                  
SNGLS7   LTR   R2,R2               TEST IF END OF SQUASH FOUND                  
         BNZ   SNGLS8              YES                                          
         L     RE,SAVEALS+4        NO WE HAVE SHORTENED WHOLE STRING            
         SR    RE,R5                                                            
         ST    RE,SAVEALS+4        DECR RESIDUAL STRING LENGTH                  
         A     RE,SAVEALS                                                       
         B     SNGLS9                                                           
SNGLS8   LR    RE,R2               POINT TO END OF SQUASH CHR                   
         SR    RE,R5               AND BACK UP BY NUM CHRS DELETED              
SNGLS9   BCTR  R5,0                                                             
         EX    R5,*+8                                                           
         B     SNGLX                                                            
         MVC   0(0,RE),SPACES      CLEAR END OF STRING                          
*                                                                               
SNGLX    LA    RE,SNGLXX           RETURN FROM 31-BIT MODE                      
         BSM   0,RE                                                             
SNGLXX   L     R9,SAVER9                                                        
         BR    R9                                                               
         EJECT                                                                  
**********************************************************************          
*SUBROUTINE TO PAD OUT AN ESCAPE SEQUENCE THAT CAN NOT BE HONOURED   *          
*THE ESCAPE SEQUENCE DEFINED BY R6/R7                                *          
*LEFT/CENTRE/RIGHT PAD CHRS PROVIDED IN ESCLCR                       *          
*CREATES DUMMY DCTNRY ENTRY CONTING DCTNRY NUMBER                    *          
**********************************************************************          
         SPACE 1                                                                
PADESC   LR    R1,R6               R1=A(ESC SEQUENCE)                           
         LR    R2,R7               R2=L'ESC AREA                                
*                                                                               
PAD2     CLI   ESCCDE,DD#ESCL2     TEST 2CHR ESC                                
         BNE   PAD3                                                             
         MVC   0(1,R1),ESCLCR+0                                                 
         MVI   1(R1),C'2'                                                       
         CH    R2,=H'2'                                                         
         BNH   *+10                                                             
         MVC   2(1,R1),ESCLCR+2                                                 
         B     PAD5                                                             
*                                                                               
PAD3     CLI   ESCCDE,DD#ESCL3     TEST 3CHR ESC                                
         BNE   PAD4                                                             
         MVC   0(1,R1),ESCLCR+0                                                 
         MVI   1(R1),C'3'                                                       
         CH    R2,=H'2'                                                         
         BNH   *+10                                                             
         MVC   2(1,R1),ESCLCR+2                                                 
         B     PAD5                                                             
*                                                                               
PAD4     MVC   0(1,R1),ESCLCR+0    SET LEFT CHR IN FIRST BYTE                   
         LA    RF,0(R1,R2)                                                      
         BCTR  RF,0                                                             
         MVC   0(1,RF),ESCLCR+2    SET RIGHT CHR IN LAST BYTE                   
         LR    RF,R2                                                            
         SH    RF,=H'2'                                                         
         BNP   PAD5                                                             
         MVC   1(1,R1),ESCLCR+1                                                 
         SH    RF,=H'2'                                                         
         BM    PAD5                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   2(0,R1),1(R1)       SET CENTRE CHR IN MIDDLE BYTES               
*                                                                               
PAD5     SR    R0,R0               CREATE DUMMY DCTNRY ENTRY                    
         ICM   R0,3,ESCNUM                                                      
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  DUB(5),DUB+5(3)     TEXT WILL BE ENTRY NUMBER                    
         LA    RE,DUB                                                           
         LA    RF,3                                                             
PAD5A    CLI   0(RE),C'0'          FIND LEN OF DCTNRY ENTRY NUM                 
         BNE   PAD5B                                                            
         LA    RE,1(RE)                                                         
         BCT   RF,PAD5A                                                         
PAD5B    LA    RF,DUB+5                                                         
         SR    RF,RE                                                            
         XC    DUMNTRY,DUMNTRY                                                  
         MVI   DUMNTRY,1           SET ENTRY COUNT                              
         STC   RF,DUMNTRY+1        SET LEN OF ENTRY                             
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   DUMNTRY+2(0),0(RE)  SET ENTRY TEXT                               
         LA    RF,DUMNTRY                                                       
         ST    RF,ANTRY            SET A(DUMMY DCTNRY ENTRY)                    
*                                                                               
PAD6     LA    R6,1(R6)            BUMP PAST LEFT PAD CHR                       
         SH    R7,=H'2'            DECR AVAILABLE LENGTH                        
         BR    R9                                                               
         EJECT                                                                  
**********************************************************************          
* SUBROUTINE TO LOCATE REQUIRED DICTIONARY                           *          
* USE SYSTEM CODE AND LANGUAGE CODE TO INDEX INTO DICTINARY INDEX    *          
* SWITCH TO GENERAL DICTIONARY IF X'40' BIT ON IN FIELD NUMBER       *          
* IF DICTIONARY AVAILABLE LOAD IT IN TO CORE AND SAVE ITS ADDRESS    *          
**********************************************************************          
         SPACE 1                                                                
GETDD    XC    ADICT,ADICT         CLEAR ADDR OF DATA DICTIONARY                
         MVC   ATRUP,TRUPTAB       SET DEFAULT TRANSLATE TO UPPER TABLE         
         MVC   PHNAME,=X'00000D00'                                              
         MVC   SYS,DDSYS                                                        
         MVC   LANG,DDLANG                                                      
*                                                                               
GETDD0   LA    RF,DICTNDX          GET A(DICTIONARY INDEX)                      
         CLI   OFFLINE,C'Y'                                                     
         BE    GETDD0X                                                          
         L     RF,=V(SSB)                                                       
         L     RF,SSBADICT-SSBD(RF)                                             
         LA    RE,*+10                                                          
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         MVC   DUMTXT(8),0(RF)     MOVE DATA INTO LOW-CORE FIRST                
         LA    RE,*+6                                                           
         BSM   0,RE                                                             
         CLC   DUMTXT(8),=CL8'DATADICT'                                         
         BE    *+6                                                              
         DC    H'0'                                                             
         AH    RF,=H'8'            RF=STARTING PLACE OF ADDRESSES               
GETDD0X  ST    RF,ADICTNDX                                                      
*                                                                               
         TM    ESCFLAGS,ESCGENDD   TEST COMMON DICT ALREADY SET                 
         BO    *+12                                                             
         TM    ESCNUM,X'40'        TEST BIT THAT SAYS COMMON                    
         BZ    GETDD1                                                           
         MVI   SYS,15              SWITCH TO COMMON DICTIONARY                  
         NI    ESCNUM,255-X'40'                                                 
         OI    ESCFLAGS,ESCGENDD   SET FLAG FOR GENERAL DD                      
         B     GETDD1B                                                          
*                                                                               
GETDD1   CLI   SYS,15              TEST SYSTEM CODE VALID                       
         BNH   GETDD1B                                                          
         CLI   OFFLINE,C'Y'                                                     
         BNE   *+14                                                             
         MVC   SYS,DFLSYS                                                       
         B     GETDD1A                                                          
*                                                                               
         L     RF,=V(SSB)                                                       
         L     RF,SSBTKADR-SSBD(RF)                                             
         MVC   SYS,TCBSWSOV-TCBD(RF)                                            
         L     RF,TCBUTL-TCBD(RF)                                               
         USING UTLD,RF                                                          
         CLI   SYS,0                                                            
         BNE   *+10                                                             
         MVC   SYS,TOVSYS                                                       
         OC    TSVCREQ,TSVCREQ                                                  
         BZ    *+8                                                              
         MVI   SYS,1                                                            
         DROP  RF                                                               
GETDD1A  MVC   DDSYS,SYS           RETURN SYSTEM CODE                           
*                                                                               
GETDD1B  IC    R0,SYS              SET SYS OF DISK PHASE NUMBER                 
         SLL   R0,4                MOVE TO HIGH ORDER NIBBLE                    
         STC   R0,PHNUM                                                         
         L     RF,ADICTNDX         RF=INDEX OF DICTIONARY ADDRESSES             
         SR    R3,R3                                                            
         IC    R3,SYS                                                           
         SLL   R3,5                R3=DISPLACEMENT TO SYSTEM ROW                
         AR    R3,RF               POINT TO SYSTEM ROW                          
         ST    R3,AENGD            SAVE A(ENG ENTRY FOR SYSTEM)                 
*                                                                               
GETDD2   CLI   LANG,LANGMAX        SET LANGUAGE CODE                            
         BNH   GETDD2E                                                          
*                                                                               
GETDD2A  CLI   OFFLINE,C'Y'        GET OFFLINE DEFAULTS FROM V(MASTC)           
         BNE   GETDD2C                                                          
         ICM   RF,15,=V(MASTC)                                                  
         BZ    GETDD2B                                                          
         USING MASTD,RF                                                         
         MVC   DFLLANG,MCLANG      SET DEFAULT LANGUAGE CODE                    
         CLI   DFLLANG,LANGMAX                                                  
         BNH   *+8                                                              
         MVI   DFLLANG,0                                                        
GETDD2B  MVC   LANG,DFLLANG                                                     
         B     GETDD2D                                                          
         DROP  RF                                                               
*                                                                               
GETDD2C  L     RF,=V(SSB)          GET ONLINE DEFAULTS FROM UTL                 
         L     RF,SSBTKADR-SSBD(RF)                                             
         L     RF,TCBUTL-TCBD(RF)                                               
         MVC   LANG,TLANG-UTLD(RF)                                              
*                                                                               
GETDD2D  MVC   DDLANG,LANG         RETURN LANGUAGE CODE                         
*                                                                               
GETDD2E  SR    R1,R1               GET LANGUAGE AND SUB LANGUAGE                
         IC    R1,LANG                                                          
         SLL   R1,1                                                             
         LA    R1,LANGTAB(R1)                                                   
         MVC   DICLANG(2),0(R1)    SET DICT LANG AND SUB LANG CODES             
         MVC   DDLANG,LANG         RETURN LANG                                  
         MVI   SLILANG,0                                                        
         CLI   SUBLANG,0           TEST IF A SUB LANGUAGE                       
         BE    GETDD2F                                                          
         IC    R1,SUBLANG          SET CODE AS IT APPEARS IN LIST               
         SLL   R1,4                                                             
         STC   R1,SLILANG                                                       
*                                                                               
GETDD2F  OC    PHNUM,DICLANG       MOVE IN LANG PART OF PHASE NUMBER            
         SR    R0,R0                                                            
         IC    R0,DICLANG                                                       
         SLL   R0,2                                                             
         AR    R3,R0               POINT TO LANGUAGE COLUMN                     
         ST    R3,ALAND            SAVE A(ENTRY FOR SYSTEM/LANG)                
         LA    R1,TRUPTAB                                                       
         AR    R1,R0                                                            
         MVC   ATRUP,0(R1)         SAVE A(XLATE TO UPPER FOR LANG)              
         LR    R0,RE                                                            
*                                                                               
GETDD3   LA    RE,*+10             SWITCH TO 31-BIT MODE                        
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         CLI   OFFLINE,C'Y'                                                     
         BE    GETDD5                                                           
*                                                                               
GETDD4   OC    0(4,R3),0(R3)       IS THERE AN ONLINE DICTIONARY                
         BZ    GETDD4A                                                          
         MVC   ADICT,0(R3)         SAVE ITS ADDRESS                             
         B     GETDDX                                                           
GETDD4A  C     R3,AENGD            DEFAULTED TO ENG YET                         
         BE    GETDDX                                                           
         L     R3,AENGD                                                         
         B     GETDD4                                                           
*                                                                               
GETDD5   CLI   0(R3),X'FF'         IS DICTIONARY NOP                            
         BNE   GETDD5A                                                          
         C     R3,AENGD            TRIED ENG DICT YET                           
         BE    GETDDX                                                           
         L     R3,AENGD                                                         
         B     GETDD5                                                           
*                                                                               
GETDD5A  OC    0(4,R3),0(R3)       IS DICTIONARY ALREADY LOADED                 
         BZ    *+14                                                             
         MVC   ADICT,0(R3)                                                      
         B     GETDDX                                                           
         C     R3,AENGD            SET PHASE NUM FOR ENG DICT                   
         BNE   *+8                                                              
         NI    PHNUM,X'F0'                                                      
*                                                                               
GETDD6   LA    RE,*+6                                                           
         BSM   0,RE                                                             
         MVC   PHNAME+3(1),PHNUM                                                
         MVC   DUB,SPACES                                                       
         XOUT  PHNAME+1,DUB,3                                                   
         MVI   DUB,C'T'                                                         
         LA    R0,DUB                                                           
         LOAD  EPLOC=(0),ERRET=GETDD7                                           
         ST    R0,P1                                                            
         ST    R0,0(R3)            PUT IT IN DICTIONARY TABLE                   
         ST    R0,ADICT                                                         
         B     GETDDXX                                                          
*                                                                               
GETDD7   MVI   0(R3),X'FF'         NOP DCTNRY ENTRY ON ERROR                    
         XC    1(3,R3),1(R3)                                                    
         B     GETDD3                                                           
*                                                                               
GETDDX   LA    RE,GETDDXX          RETURN FROM 31-BIT MODE                      
         BSM   0,RE                                                             
GETDDXX  SR    R3,R3                                                            
         ICM   R3,15,ADICT         R3=A(DATA DICTIONARY)                        
         BZR   R9                                                               
         ST    R3,AXDICT           SET A(END OF DICTIONARY)                     
         LA    RE,*+10                                                          
         O     RE,=X'80000000'                                                  
         BSM   0,RE                                                             
         L     RE,AXDICT                                                        
         A     RE,8(R3)                                                         
         BCTR  RE,0                                                             
         ST    RE,AXDICT           SET A(END OF DICTIONARY)                     
         LA    RE,*+6                                                           
         BSM   0,RE                                                             
         LTR   R3,R3               EXIT WITH CC SET ON DICT ADDR                
         BR    R9                                                               
         EJECT                                                                  
TRUPTAB  DC    A(TRUPUKUS,TRUPUKUS,TRUPUKUS,TRUPGER)                            
         DC    A(TRUPFRA,TRUPUKUS,TRUPUKUS,TRUPDUT)                             
         SPACE 1                                                                
OFFLINE  DC    C' '                                                             
CASE     DC    C' '                                                             
DFLSYS   DC    X'00'               DEFAULT SYSTEM                               
DFLLANG  DC    X'00'               DEFAULT LANGUAGE                             
DFLSLANG DC    X'00'               DEFAULT SUB LANGUAGE                         
INDXWDTH DC    H'3'                INDEX ENTRY IS 3 BYTES LONG                  
MAXESCL  DC    H'128'              MAX LENGTH OF ESCAPE SEQUENCE                
SPACES   DC    128C' '                                                          
         SPACE 1                                                                
SYSLIST  DS    0XL3                OFFLINE SYSTEM IDS AND VALUES                
         DC    C'SR',X'01'                                                      
*&&US*&& DC    C'SP',X'02'                                                      
*&&UK*&& DC    C'ME',X'04'                                                      
*&&US*&& DC    C'PP',X'04'                                                      
*&&US*&& DC    C'PR',X'04'                                                      
         DC    C'MP',X'05'                                                      
         DC    C'AC',X'06'                                                      
*&&UK*&& DC    C'FE',X'07'                                                      
*&&US*&& DC    C'TA',X'07'                                                      
*&&US*&& DC    C'RE',X'08'                                                      
         DC    C'MB',X'09'                                                      
         DC    C'CT',X'0A'                                                      
         DC    C'CO',X'0A'                                                      
         DC    C'GA',X'0B'                                                      
         DC    C'PE',X'0E'                                                      
SYSLISTX DC    C'  ',X'00'                                                      
         SPACE 1                                                                
LANGTAB  DS    0XL2                LANGUAGE TABLE - INDEXED BY LANG             
         DC    AL1(00,00)          00 ENG                                       
         DC    AL1(00,00)          01 ENG UK                                    
         DC    AL1(00,00)          02 ENG US                                    
         DC    AL1(03,00)          03 GERMAN                                    
         DC    AL1(04,00)          04 FRENCH                                    
         DC    AL1(05,00)          05 SPANISH                                   
         DC    AL1(06,00)          06 ITALIAN                                   
         DC    AL1(07,00)          07 DUTCH                                     
         DC    AL1(00,00)          08 N/D                                       
         DC    AL1(00,00)          09 N/D                                       
         DC    AL1(00,00)          10 N/D                                       
         DC    AL1(00,00)          11 N/D                                       
         DC    AL1(00,00)          12 N/D                                       
         DC    AL1(00,00)          13 N/D                                       
         DC    AL1(00,00)          14 N/D                                       
         DC    AL1(00,00)          15 N/D                                       
         DC    AL1(00,01)          16 IRISH    (SUB OF UK ENGLISH)              
         DC    AL1(00,01)          17 CANADIAN (SUB OF US ENGLISH)              
LANGMAX  EQU   17                                                               
         SPACE 1                                                                
HIBIT    EQU   X'80'                                                            
DSMSKVAL EQU   7                                                                
         SPACE 1                                                                
         LTORG                                                                  
         SPACE 1                                                                
         EJECT                                                                  
**********************************************************************          
* TRANSLATE TABLE FOR VALID DATA DICTIONARY CHRS                     *          
* A NON ZERO CHR IS A VALID DD CHR                                   *          
* ESCAPE SEQUENCE LENGTH DEFINED BY NON ZERO VALUE                   *          
**********************************************************************          
         SPACE 1                                                                
TRTDD    DC    XL16'00000000000000000000000000000000'  00-0F                    
         DC    XL16'00000000000000000000000000000000'  10-1F                    
         DC    XL16'03030404040401040303040404040000'  20-2F                    
         DC    XL16'00000000000000000000000000000000'  30-3F                    
         DC    XL16'00000000000000000000000000000000'  40-4F                    
         DC    XL16'00000000000000000000000000000000'  50-5F                    
         DC    XL16'00000000000000000000000000000000'  60-6F                    
         DC    XL16'00000000000000000000000000000000'  70-7F                    
         DC    XL16'00000000000000000000000000000000'  80-8F                    
         DC    XL16'00000000000000000000000000000000'  90-9F                    
         DC    XL16'00000000000000000000000000000000'  A0-AF                    
         DC    XL16'00000000000000000000000000000000'  B0-BF                    
         DC    XL16'00000000000000000000000000000000'  C0-CF                    
         DC    XL16'00000000000000000000000000000000'  D0-DF                    
         DC    XL16'00000000000000000000000000000000'  E0-EF                    
         DC    XL16'00000000000000000000000000000000'  F0-FF                    
         EJECT                                                                  
**********************************************************************          
* DATA DICTIONARY INDEX FOR UK                                       *          
* ONE ROW PER SYSTEM (00-15) AND ONE COLUMN PER LANGUAGE (0-7)       *          
* ALL ZERO ENTRY MEANS NO DICTIONARY DEFINED FOR SYS/LANG            *          
* IF DICTIONARY DEFINED 1ST BYTE IS X'SL' FOR PHASE T00ASL           *          
* FIRST REFERENCE CAUSES LOAD FROM DISK AND FIXES CORE ADDR IN ENTRY *          
**********************************************************************          
*&&UK                                                                           
DICTNDX  DS    0F                                                               
SYS0     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS1SER  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS2     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS3     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS4MED  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS5     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS6ACC  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS7FEE  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS8     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS9MBA  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSACTL  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSBGAM  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSC     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSD     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSEPER  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSFGEN  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
*&&                                                                             
         EJECT                                                                  
**********************************************************************          
* DATA DICTIONARY INDEX FOR US                                       *          
* ONE ROW PER SYSTEM (00-15) AND ONE COLUMN PER LANGUAGE (0-7)       *          
* ALL ZERO ENTRY MEANS NO DICTIONARY DEFINED FOR SYS/LANG            *          
* IF DICTIONARY DEFINED 1ST BYTE IS X'SL' FOR PHASE T00ASL           *          
* FIRST REFERENCE CAUSES LOAD FROM DISK AND FIXES CORE ADDR IN ENTRY *          
**********************************************************************          
*&&US                                                                           
DICTNDX  DS    0F                                                               
SYS0     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS1SER  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS2SPT  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS3     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS4PRT  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS5     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS6ACC  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS7     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS8     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYS9MBA  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSACTL  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSBGAM  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSC     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSD     DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSEPER  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
SYSFGEN  DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
         DC    X'00000000',X'00000000',X'00000000',X'00000000'                  
*&&                                                                             
         EJECT                                                                  
*                   0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F.                            
TRUPUKUS DC    XL16'00404040404040404040404040404040' 00-0F                     
         DC    XL16'40404040404040404040404040404040' 10-1F                     
         DC    XL16'40404040404040404040404040404040' 20-2F                     
         DC    XL16'40404040404040404040404040404040' 30-3F                     
         DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F                     
         DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F                     
         DC    XL16'606140404040404040406A6B6C6D6E6F' 60-6F                     
         DC    XL16'404040404040404040797A7B7C7D7E7F' 70-7F                     
         DC    XL16'40C1C2C3C4C5C6C7C8C940404040408F' 80-8F                     
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' 90-9F                     
         DC    XL16'40A1E2E3E4E5E6E7E8E940ABAC404040' A0-AF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F940BBBC4040BF' B0-BF                     
         DC    XL16'C0C1C2C3C4C5C6C7C8C940CBCC404040' C0-CF                     
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040' D0-DF                     
         DC    XL16'E040E2E3E4E5E6E7E8E940EBEC404040' E0-EF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FA4040404040' F0-FF                     
         SPACE 1                                                                
*                   0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F.                            
TRUPGER  DC    XL16'00404040404040404040404040404040' 00-0F                     
         DC    XL16'40404040404040404040404040404040' 10-1F                     
         DC    XL16'40404040404040404040404040404040' 20-2F                     
         DC    XL16'40404040404040404040404040404040' 30-3F                     
         DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F                     
         DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F                     
         DC    XL16'60614040404040404040E06B6C6D6E6F' 60-6F O UMLAUT 6A         
         DC    XL16'404040404040404040797A7B7C7D7E7F' 70-7F                     
         DC    XL16'40C1C2C3C4C5C6C7C8C940404040408F' 80-8F                     
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' 90-9F                     
         DC    XL16'40A1E2E3E4E5E6E7E8E940ABAC404040' A0-AF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F940BBBC4040BF' B0-BF                     
         DC    XL16'4AC1C2C3C4C5C6C7C8C940CBCC404040' C0-CF A UMLAUT C0         
         DC    XL16'5AD1D2D3D4D5D6D7D8D9404040404040' D0-DF U UMLAUT D0         
         DC    XL16'E040E2E3E4E5E6E7E8E940EBEC404040' E0-EF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FA4040404040' F0-FF                     
         SPACE 1                                                                
*                   0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F.                            
TRUPFRA  DC    XL16'00404040404040404040404040404040' 00-0F                     
         DC    XL16'40404040404040404040404040404040' 10-1F                     
         DC    XL16'40404040404040404040404040404040' 20-2F                     
         DC    XL16'40404040404040404040404040404040' 30-3F                     
         DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F                     
         DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F                     
         DC    XL16'60614040404040404040E46B6C6D6E6F' 60-6F U CIRC  6A          
         DC    XL16'404040404040404040797A7BC17D7E7F' 70-7F A GRAVE 7C          
         DC    XL16'40C1C2C3C4C5C6C7C8C940404040408F' 80-8F                     
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' 90-9F                     
         DC    XL16'40A1E2E3E4E5E6E7E8E940ABAC404040' A0-AF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F940BBBC4040BF' B0-BF                     
         DC    XL16'C5C1C2C3C4C5C6C7C8C940CBCC404040' C0-CF E ECUTE C0          
         DC    XL16'C5D1D2D3D4D5D6D7D8D9404040404040' D0-DF E GRAVE D0          
         DC    XL16'C340E2E3E4E5E6E7E8E940EBEC404040' E0-EF C CEDIL E0          
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FA4040404040' F0-FF                     
         SPACE 1                                                                
*                   0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F.                            
TRUPDUT  DC    XL16'00404040404040404040404040404040' 00-0F                     
         DC    XL16'40404040404040404040404040404040' 10-1F                     
         DC    XL16'40404040404040404040404040404040' 20-2F                     
         DC    XL16'40404040404040404040404040404040' 30-3F                     
         DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F                     
         DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F                     
         DC    XL16'606140404040404040406A6B6C6D6E6F' 60-6F                     
         DC    XL16'404040404040404040797A7B7C7D7E7F' 70-7F                     
         DC    XL16'40C1C2C3C4C5C6C7C8C940404040408F' 80-8F                     
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' 90-9F                     
         DC    XL16'40A1E2E3E4E5E6E7E8E940ABAC404040' A0-AF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F940BBBC4040BF' B0-BF                     
         DC    XL16'C0C1C2C3C4C5C6C7C8C940CBCC404040' C0-CF                     
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040' D0-DF                     
         DC    XL16'E040E2E3E4E5E6E7E8E940EBEC404040' E0-EF                     
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FA4040404040' F0-FF                     
         EJECT                                                                  
       ++INCLUDE DDDDEQUS                                                       
         SPACE 1                                                                
*FAGETTXTD                                                                      
       ++INCLUDE FAGETTXTD                                                      
         SPACE 1                                                                
*DDBIGBOX                                                                       
         PRINT OFF                                                              
       ++INCLUDE DDBIGBOX                                                       
         PRINT ON                                                               
         SPACE 1                                                                
*DDMASTD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DDMASTD                                                        
         PRINT ON                                                               
         SPACE 1                                                                
*FASSB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         PRINT ON                                                               
         SPACE 1                                                                
*FATCB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FATCB                                                          
         PRINT ON                                                               
*FAUTL                                                                          
         PRINT OFF                                                              
       ++INCLUDE FAUTL                                                          
         PRINT ON                                                               
         EJECT                                                                  
WORKD    DSECT                                                                  
PARM     DS    0XL12               PARAMETER LIST                               
*                                                                               
DDACTN   DS    X                   ACTION BYTE                                  
DDRETN   DS    X                   RETURN CODE OR SUB ACTION VALUE              
DDSYS    DS    X                   SYSTEM CODE                                  
DDLANG   DS    X                   LANGUAGE                                     
*                                                                               
DDILEN   DS    X                   INPUT DATA LENGTH                            
DDIADR   DS    AL3                 INPUT DATA ADDRESS                           
*                                                                               
DDOLEN   DS    X                   OUTPUT DATA LENGTH/FLAGS                     
DDOADR   DS    AL3                 OUTPUT DATA ADDRESS                          
*                                                                               
RELO     DS    A                                                                
DUB      DS    D                                                                
SAVEALS  DS    D                   ADR AND LEN OF ESCAPE SEQUENCE               
SAVEILA  DS    D                   ADR AND LEN OF LAST INPUT LIST               
SAVEOLA  DS    D                   ADR AND LEN OF LAST OUTPUT LIST              
APARM    DS    A                   A(PARAMETER LIST)                            
SAVER9   DS    F                                                                
ADICTNDX DS    A                   A(MATRIX OF DICT ADDRESSES)                  
AENGD    DS    A                   A(ENGLISH DICT ENTRY)                        
ALAND    DS    A                   A(LANGUAGE DICT ENTRY)                       
ADICT    DS    A                   A(DCTNRY FOR SYS/LANG)                       
AXDICT   DS    A                   A(END OF DCTNRY FOR SYS/LANG)                
ANTRY    DS    A                   A(ENTRY IN DCTNRY)                           
ANTRYX   DS    A                   A(END OF ENTRY IN DCTNRY)                    
LNTRY    DS    F                   LENGTH OF DICTIONARY ENTRY                   
ATRUP    DS    A                   A(TRANSLATE TAB FOR LOWER TO UPPER)          
*                                                                               
P1       DS    F                   CALLOV PARAM LIST                            
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
ESCLCR   DS    CL3                 ESC PAD CHRS LEFT/CENTRE/RIGHT               
ESCCASE  DS    C                   CASE UPPER/LOWER                             
ESCUNDER DS    X                   UNDERLINE REQUIRED X'08'                     
ESCDSK   DS    X                   NON ZERO MEANS ITEM ON DISK                  
ESCSPCL  DS    X                   X'80' ON MEANS SPECIAL LENGTH                
ESCSPCF  DS    X                   FLAGS FOR SPECIAL LENGTHS                    
ESCFLAGS DS    X                   FLAGS                                        
ESCGENDD EQU   X'40'               GENERAL DICTIONARY IN USE                    
         DS    XL2                 N/D                                          
ESCLDATA DS    X                   ACTUAL LENGTH OF DATA SELECTED               
AESCSEQ  DS    A                   A(ESCAPE SEQUENCE)                           
LESCSEQ  DS    F                   L'ESCAPE SEQUENCE                            
*                                                                               
ESCSEQ   DS    0XL4                ESCAPE SEQUENCE                              
ESCCDE   DS    X                                                                
ESCNUM   DS    XL2                                                              
ESCLEN   DS    X                                                                
*                                                                               
SYS      DS    X                   SYSTEM NUMBER 0-F                            
LANG     DS    X                   LANGUAGE CODE 0-7                            
DICLANG  DS    X                   LANGUAGE CODE IN DICTIONARY                  
SUBLANG  DS    X                   SUB LANGUAGE CODE                            
SLILANG  DS    X                   SUB LANG AS IT APPEARS IN LIST               
*                                                                               
IND      DS    X                   INDICATOR X'80'=USE LASER CHR                
BYTE     DS    X                                                                
BYTE1    DS    X                                                                
BYTE2    DS    X                                                                
BYTE3    DS    X                                                                
BYTE4    DS    X                                                                
PHNUM    DS    X                   DISK PHASE-NUMBER                            
*                                                                               
PHNAME   DS    XL4                 DICTIONARY PHASE X'00000DSL'                 
DUMNTRY  DS    CL8                 DUMMY DATA DCTNRY ENTRY                      
DSKTXT   DS    CL128               DICTIONARY DATA FROM DISK                    
DUMTXT   DS    CL128               DUMMY AREA TO BUILD TEXT                     
UNDERS   DS    CL128               UNDERSCORE CHARACTER                         
WORKX    EQU   *                                                                
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'006DDDICTATE 05/27/04'                                      
         END                                                                    
