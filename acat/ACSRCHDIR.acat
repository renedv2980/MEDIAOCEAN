*          DATA SET ACSRCHDIR  AT LEVEL 023 AS OF 01/08/16                      
*CATALP SRCHDACC                                                                
SRCHACC  TITLE '- ACCOUNT SEARCH SUBROUTINES AND DIRECTORY'                     
*DPEA 041 28JUL05  <LO01-4465> ADD CODE COMPONENTS TO ACCOUNT NAME              
*NSHE 042 01SEP05  <LO01-4317> ADD CODE TO SUPPORT DEPT SEARCH                  
*DPEA 043 01SEP05  <LO01-4465> TEST FOR BAD NAME ELEMENT LENGTH                 
*                  <LO01-4465> DOUBLE MAX NUMBER OF A/C SEARCH PASSIVES         
*DPEA 044 21SEP05  <1005181> DEPT SHOULD COME AFTER PERSON                      
*NSHE 045 05FEB07  <LO01-6033> SEARCH USING ALTERNATIVE NAMES                   
*SMAN 046 08JUN07  <LO01-6306> ADD 1N TO SRCHDACC TABLE                         
*MPEN 047 01JUL09  <LO01-9013> CHANGES TO EXPENDITURE TYPE RECORD               
*TKLU 048 28OCT15  <RD007727>  ESTIMATE NAME SEARCH SUPPORT                     
*TKLU 049 02DEC15  <RD009622>  ORDER NAME SEARCH SUPPORT                        
         PRINT NOGEN                                                            
SRCHACC  CSECT                                                                  
         DC    X'4700',AL2(SRCHDACC-SRCHACC)                                    
*                                                                               
NTRY     NMOD1 WORKL,**SACC**,RR=RE,CLEAR=YES                                   
         LA    R0,NTRY-SRCHACC                                                  
         SR    RB,R0                                                            
         USING SRCHACC,RB                                                       
*                                                                               
         USING WORKD,RC            RC=A(LOCAL W/S)                              
         ST    RE,RELO                                                          
         ST    R1,APARMS                                                        
         L     R8,0(R1)                                                         
         USING SEARCHD,R8          R8=A(SEARCH CONTROL BLOCK)                   
*                                                                               
         MVI   SBRETURN,0          CLEAR ERROR FLAG                             
         CLI   0(R1),SDSSYPPQ                                                   
         BE    BLDPASS             BUILD PASSIVE POINTER                        
         OC    SBASYS,SBASYS                                                    
         BNZ   *+12                                                             
         MVI   SBRETURN,SBENITQ    SEARCH BLOCK NOT INITIALIZED                 
         B     EXITN                                                            
*                                                                               
         L     RE,SBASRCH                                                       
         XR    RF,RF                                                            
         IC    RF,SDSRTYPE-SDSRCHD(RE)                                          
         SLL   RF,2                                                             
         L     RF,ROUTS(RF)                                                     
         A     RF,RELO                                                          
         L     R1,APARMS                                                        
         BASR  RE,RF                                                            
         B     EXIT                                                             
*                                                                               
ROUTS    DS    0F                                                               
         DC    V(ACSRCHAC)                                                      
         DC    V(ACSRCHWC)                                                      
         DC    V(ACSRCHMC)                                                      
         DC    V(ACSRCHEX)                                                      
         DC    V(ACSRCHCS)                                                      
         DC    V(ACSRCHDP)                                                      
         DC    V(ACSRCHES)                                                      
         DC    V(ACSRCHOR)                                                      
         EJECT                                                                  
***********************************************************************         
* EXITS                                                               *         
***********************************************************************         
         SPACE 1                                                                
EXITH    CLI   *,0                 CC=HIGH                                      
         B     EXIT                                                             
*                                                                               
EXITN    DS    0H                                                               
EXITL    CLI   *,FF                CC=LOW                                       
         B     EXIT                                                             
*                                                                               
EXITY    CR    RB,RB               CC=EQUAL                                     
EXIT     XIT1  ,                                                                
         EJECT                                                                  
***********************************************************************         
* BUILD PASSIVE POINTER                                               *         
*                                                                     *         
* EXIT: CC=LOW IF NOT SEARCHABLE                                      *         
*       CC=HIGH TO RESET SEQUENCE NUMBER                              *         
***********************************************************************         
         SPACE 1                                                                
BLDPASS  LM    R2,R3,4(R1)         R2=A(RECORD)                                 
         USING SRCRECD,R3          R3=A(PASSIVE POINTER RECORD)                 
*                                                                               
         CLI   SBMODE,0            TEST TESTING RECORD IS A PASSIVE             
         JE    *+2                                                              
         CLI   SBMODE,1            TEST BUILDING RECORD                         
         BH    EXITY               UNKNOWN MODE                                 
*                                                                               
         GOTO1 BLDACC              TEST ACCOUNT RECORD                          
         BNL   EXIT                                                             
         GOTO1 BLDWC               TEST WORK-CODE RECORD                        
         BNL   EXIT                                                             
         GOTO1 BLDMC               TEST MEDIA CODE RECORD                       
         BNL   EXIT                                                             
*&&UK                                                                           
         GOTO1 BLDEX               TEST EXPENDITURE TYPE RECORD                 
         BNL   EXIT                                                             
         GOTO1 BLDDP               TEST DEPARTMENT RECORD                       
         BNL   EXIT                                                             
*&&                                                                             
         GOTO1 BLDES               TEST ESTIMATE RECORD                         
         BNL   EXIT                                                             
         GOTO1 BLDOR               TEST ORDER RECORD                            
         BNL   EXIT                                                             
         B     EXITL                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR ACCOUNT RECORD AND BUILD PASSIVE POINTER IF IT IS          *         
*                                                                     *         
* NTRY: R2 = A(ACCOUNT RECORD)                                        *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
*                                                                     *         
*       SEE ACSRCHBLKD FOR PARAMETERS PASSED IN RECORD KEY AREA       *         
*                                                                     *         
* EXIT: CC = LOW IF NOT WORK CODE RECORD                              *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
         SPACE 1                                                                
BLDACC   NTR1  ,                                                                
         USING ACTRECD,R2          R2=A(ACCOUNT RECORD)                         
         USING SRCRECD,R3          R3=A(PASSIVE RECORD)                         
*                                                                               
         CLI   ACTKCPY,X'40'       CHECK IS AN ACCOUNT RECORD                   
         BNH   EXITL                                                            
         CLC   ACTKACT,SPACES                                                   
         BE    EXITL                                                            
         CLC   ACTKSPAC,SPACES                                                  
         BNE   EXITL                                                            
         CLI   ACTKXHDR,ACTKXHDQ   TEST EXTRA DATA PASSED                       
         BNE   BACC00                                                           
         MVC   ACCDAT,ACTKXDAT     EXTRACT DATA                                 
         MVC   ACTKXTRA,SPACES     CLEAR KEY TO AS IT SHOULD BE                 
*                                                                               
BACC00   DS    0H                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BACC02   CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         BE    EXITL                                                            
         CLI   SDSRTYPE,SDSRACCQ                                                
         BNE   BACC08                                                           
         CLC   SDSRUL,ACTKUNT      MATCH ON UNIT/LEDGER                         
         BNE   BACC08                                                           
         GOTO1 TESTCTRY,SDSRCTRY                                                
         BE    BACC10                                                           
BACC08   AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         BNE   BACC02                                                           
         B     EXITL                                                            
BACC10   ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                                                               
         L     R1,APARMS                                                        
         L     R4,12(R1)           R4 = A(SPACE FOR NAME)                       
         MVC   0(64,R4),SPACES                                                  
*                                  ADD CODE COMPONENTS TO NAME                  
         LA    R5,ACCLVS           R5 = A(L'ACCOUNT LEVELS)                     
         XR    R6,R6                                                            
         XR    R7,R7               R7 = L'PREVIOUS LEVEL                        
         LA    R0,4                                                             
BACC12   CLI   0(R5),L'ACTKACT                                                  
         BH    BACC20                                                           
         ICM   R6,1,0(R5)          R6 = L'CURRENT LEVEL                         
         BZ    BACC20                                                           
         LR    RE,R6               EXTRACT CODE                                 
         SR    RE,R7                                                            
         SHI   RE,1                                                             
         LA    RF,ACTKACT(R7)                                                   
         MVC   0(0,R4),0(RF)                                                    
         EX    RE,*-6                                                           
*                                                                               
         LA    R4,0(RE,R4)         BUMP R4 TO NEXT WORD                         
         LTR   RE,RE                                                            
         BZ    BACC16                                                           
BACC14   CLI   0(R4),C' '                                                       
         BH    BACC16                                                           
         AHI   R4,-1                                                            
         BCT   RE,BACC14                                                        
BACC16   AHI   R4,2                                                             
*                                                                               
         CLI   0(R5),L'ACTKACT                                                  
         BNL   BACC20                                                           
         LR    R7,R6               BUMP TO NEXT LEVEL                           
         LA    R5,1(R5)                                                         
         BCT   R0,BACC12                                                        
*                                                                               
BACC20   DS    0H                                                               
         TM    ACCCMP,CPYSALTN                                                  
         BZ    BACC22                                                           
         GOTO1 GETEL,DMCB,('XNMELQ',ACTRECD)                                    
         BNE   BACC24                                                           
         SH    RF,=Y(XNMLN1Q+2)                                                 
         BM    BACC24                                                           
         CHI   RF,L'NAMEREC-1                                                   
         BNH   *+8                                                              
         LHI   RF,L'NAMEREC-1                                                   
         MVC   0(0,R4),XNMSUBN-XNMELD(R1)                                       
         EX    RF,*-6                                                           
         LA    R4,1(RF,R4)                                                      
         B     BACC30                                                           
*                                                                               
BACC22   TM    ACCCMP,CPYSMEDN                                                  
         BZ    BACC24                                                           
         GOTO1 GETEL,DMCB,('SNMELQ',ACTRECD)                                    
         BNE   BACC24                                                           
         SH    RF,=Y(SNMLN1Q+1)                                                 
         BM    BACC24                                                           
         CHI   RF,L'SNMNAME-1                                                   
         BNH   *+8                                                              
         LHI   RF,L'SNMNAME-1                                                   
         MVC   0(0,R4),SNMNAME-SNMELD(R1)                                       
         EX    RF,*-6                                                           
         LA    R4,1(RF,R4)                                                      
         B     BACC30                                                           
*                                                                               
BACC24   GOTO1 GETEL,DMCB,('NAMELQ',ACTRECD)                                    
         BNE   BACC30                                                           
         SH    RF,=Y(NAMLN1Q+1)                                                 
         BM    BACC30                                                           
         CHI   RF,L'NAMEREC-1                                                   
         BNH   *+8                                                              
         LHI   RF,L'NAMEREC-1                                                   
         MVC   0(0,R4),NAMEREC-NAMELD(R1)                                       
         EX    RF,*-6                                                           
         LA    R4,1(RF,R4)                                                      
BACC30   DS    0H                                                               
         L     R1,APARMS                                                        
         S     R4,12(R1)                                                        
         STC   R4,12(R1)           SET LENGTH OF TEXT                           
*                                                                               
         XC    SRCRECD(ACCKLEN),SRCRECD                                         
         MVI   SRCKTYP,SRCKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SRCKCUL,ACTKCPY                                                  
         MVC   SRCKACT,ACTKACT                                                  
         MVC   SRCKSTA,ACTRSTA                                                  
         MVC   SRCKSOFF,ACCOFF                                                  
*                                                                               
         CLC   SRCKEY(SRCKSUB-SRCKEY),SBASAVE                                   
         MVC   SBASAVE(L'SRCKEY),SRCKEY                                         
         BE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         SPACE 1                                                                
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR WORK-CODE RECORD AND BUILD PASSIVE POINTER IF IT IS        *         
*                                                                     *         
* NTRY: R2 = A(WORK CODE RECORD)                                      *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT MEDIA CODE RECORD                             *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
         SPACE 1                                                                
BLDWC    NTR1  ,                                                                
         USING WCORECD,R2          R2=A(WORK-CODE RECORD)                       
         USING SWCRECD,R3                                                       
*                                                                               
         CLI   WCOKTYP,WCOKTYPQ    CHECK IS A WORK-CODE RECORD                  
         BNE   EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BWC02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         BZ    EXITL                                                            
         CLI   SDSRTYPE,SDSRWCQ                                                 
         BNE   BWC08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         BE    BWC10                                                            
BWC08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         BNE   BWC02                                                            
         B     EXITL                                                            
BWC10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                                                               
         MVC   WORK,SPACES         NAME = DESCRIPTION + EXTRA NAME              
         GOTO1 GETEL,DMCB,('WCOELQ',WCORECD)                                    
         BE    *+6                                                              
         DC    H'0'                                                             
         MVC   WORK(L'WCODESC),WCODESC-WCOELD(R1)                               
         GOTO1 GETEL,DMCB,('NAMELQ',WCORECD)                                    
         BNE   BWC12                                                            
         SH    RF,=Y(NAMLN1Q+1)                                                 
         BM    BWC12                                                            
         CHI   RF,L'NAMEREC-1                                                   
         BNH   *+8                                                              
         LHI   RF,L'NAMEREC-1                                                   
         MVC   WORK+L'WCODESC+1(0),NAMEREC-NAMELD(R1)                           
         EX    RF,*-6                                                           
BWC12    L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(L'WORK,RE),WORK                                                
         MVI   12(R4),L'WORK       SET LENGTH OF TEXT                           
*                                                                               
         XC    SWCRECD(ACCKLEN),SWCRECD                                         
         MVI   SWCKTYP,SWCKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SWCKCPY,WCOKCPY                                                  
         MVI   SWCKSRC,SWCKSRCQ                                                 
         MVC   SWCKUL,WCOKUNT                                                   
         MVC   SWCKWC,WCOKWRK                                                   
         MVC   SWCKSTA,WCORSTA                                                  
*                                                                               
         CLC   SWCKEY(SWCKSUB-SWCKEY),SBASAVE                                   
         MVC   SBASAVE(L'SWCKEY),SWCKEY                                         
         BE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         SPACE 1                                                                
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR MEDIA CODE RECORD AND BUILD PASSIVE POINTER IF IT IS       *         
*                                                                     *         
* NTRY: R2 = A(MEDIA CODE RECORD)                                     *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT MEDIA CODE RECORD                             *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
         SPACE 1                                                                
BLDMC    NTR1  ,                                                                
         USING PMDRECD,R2          R2=A(MEDIA CODE RECORD)                      
         USING SMCRECD,R3                                                       
*                                                                               
         CLI   PMDKTYP,PMDKTYPQ    CHECK IS A WORK-CODE RECORD                  
         BNE   EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BMC02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         BE    EXITL                                                            
         CLI   SDSRTYPE,SDSRMCQ                                                 
         BNE   BMC08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         BE    BMC10                                                            
BMC08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         BNE   BMC02                                                            
         B     EXITL                                                            
BMC10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                  GET DESCRIPTION                              
         GOTO1 GETEL,DMCB,('PMDELQ',PMDRECD)                                    
         BE    *+6                                                              
         DC    H'0'                                                             
         L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(L'PMDDESC,RE),PMDDESC-PMDELD(R1)                               
         MVI   12(R4),L'PMDDESC    SET LENGTH OF TEXT                           
*                                                                               
         XC    SMCRECD(ACCKLEN),SMCRECD                                         
         MVI   SMCKTYP,SMCKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SMCKCPY,PMDKCPY                                                  
         MVI   SMCKSRC,SMCKSRCQ                                                 
         MVC   SMCKMC,PMDKMED                                                   
         MVC   SMCKSTA,PMDRSTA                                                  
*                                                                               
         CLC   SMCKEY(SMCKSUB-SMCKEY),SBASAVE                                   
         MVC   SBASAVE(L'SMCKEY),SMCKEY                                         
         BE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         SPACE 1                                                                
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR EXPENDITURE TYPE RECORD AND BUILD PASSIVE POINTER IF IT IS *         
*                                                                     *         
* NTRY: R2 = A(EXPENDITURE TYPE RECORD)                               *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT EXPENDITURE TYPE RECORD                       *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
*&&UK                                                                           
BLDEX    NTR1  ,                                                                
         USING ETYRECD,R2          R2=A(EXPENDITURE TYPE RECORD)                
         USING SEXRECD,R3                                                       
*                                                                               
         CLI   ETYKTYP,ETYKTYPQ                                                 
         BNE   EXITL                                                            
         CLI   ETYKSUB,ETYKSUBQ    CHECK IS A EXPENDITURE TYPE RECORD           
         BNE   EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BEX02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         BE    EXITL                                                            
         CLI   SDSRTYPE,SDSREXQ                                                 
         BNE   BEX08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         BE    BEX10                                                            
BEX08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         BNE   BEX02                                                            
         B     EXITL                                                            
BEX10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                  GET DESCRIPTION                              
         GOTO1 GETEL,DMCB,('NAMELQ',ETYRECD)                                    
         BE    *+6                                                              
         DC    H'0'                                                             
         SH    RF,=Y(NAMLN1Q+1)                                                 
         BM    BEX12                                                            
         CHI   RF,L'NAMEREC-1                                                   
         BNH   *+8                                                              
         LHI   RF,L'NAMEREC-1                                                   
         L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(0,RE),NAMEREC-NAMELD(R1)                                       
         EX    RF,*-6              COPY NAME                                    
         LA    RF,1(RF)                                                         
         STC   RF,12(R4)           SET LENGTH OF TEXT                           
*                                                                               
BEX12    XC    SEXRECD(ACCKLEN),SEXRECD                                         
         MVI   SEXKTYP,SEXKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SEXKCPY,ETYKCPY                                                  
         MVI   SEXKSRC,SEXKSRCQ                                                 
         MVC   SEXKETYP,ETYKCODE                                                
         MVC   SEXKSTA,ETYRSTA                                                  
         MVC   SEXOFF,ETYKOFFC                                                  
*                                                                               
         CLC   SEXKEY(SEXKSUB-SEXKEY),SBASAVE                                   
         MVC   SBASAVE(L'SEXKEY),SEXKEY                                         
         BE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         DROP  R2,R3                                                            
*&&                                                                             
         EJECT                                                                  
***********************************************************************         
* TEST FOR ESTIMATE RECORD AND BUILD PASSIVE POINTER IF IT IS         *         
*                                                                     *         
* NTRY: R2 = A(ESTIMATE RECORD)                                       *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT EXPENDITURE TYPE RECORD                       *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
         SPACE 1                                                                
BLDES    NTR1  ,                                                                
         USING ESTRECD,R2          R2=A(ESTIMATE RECORD)                        
         USING SENRECD,R3                                                       
*                                                                               
         CLI   ESTKTYP,ESTKTYPQ    CHECK MAIN ESTIMATE RECORD TYPE              
         JNE   EXITL                                                            
         CLI   ESTKSUB,ESTKSUBQ                                                 
         JNE   EXITL                                                            
         CLI   ESTKSEQ,ESTKSMQ                                                  
         JNE   EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BES02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         JE    EXITL                                                            
         CLI   SDSRTYPE,SDSRESQ                                                 
         JNE   BES08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         JE    BES10                                                            
BES08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         JNE   BES02                                                            
         J     EXITL                                                            
BES10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                  GET DESCRIPTION                              
         GOTO1 GETEL,DMCB,('ENMELQ',ESTRECD)                                    
         JNE   EXITL                                                            
         SHI   RF,ENMLNQ+1                                                      
         JM    BES12                                                            
         CHI   RF,L'ENMNAME-1                                                   
         JNH   *+8                                                              
         LHI   RF,L'ENMNAME-1                                                   
         L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(0,RE),ENMNAME-ENMELD(R1)                                       
         EX    RF,*-6              COPY NAME                                    
         AHI   RF,1                                                             
         STC   RF,12(R4)           SET LENGTH OF TEXT                           
*                                                                               
BES12    XC    SENRECD(ACCKLEN),SENRECD                                         
         MVI   SENKTYP,SENKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SENKCPY,ESTKCPY                                                  
         MVI   SENKSRC,SENKSRCQ                                                 
         USING EMDELD,RF                                                        
         LA    RF,ESTRECD                                                       
         AHI   RF,ESTRFST-ESTRECD                                               
         CLI   EMDEL,EMDELQ                                                     
         JNE   EXITL                                                            
         MVC   SENKEGN,EMDGNO                                                   
         DROP  RF                                                               
         MVC   SENKSTA,ESTRSTA                                                  
*                                                                               
         CLC   SENKEY(SENKSUB-SENKEY),SBASAVE                                   
         MVC   SBASAVE(L'SENKEY),SENKEY                                         
         JE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         SPACE 1                                                                
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR ORDER RECORD AND BUILD PASSIVE POINTER IF IT IS            *         
*                                                                     *         
* NTRY: R2 = A(ORDER RECORD)                                          *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT EXPENDITURE TYPE RECORD                       *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
         SPACE 1                                                                
BLDOR    NTR1  ,                                                                
         USING ORDRECD,R2          R2=A(ORDER RECORD)                           
         USING SONRECD,R3                                                       
*                                                                               
         CLI   ORDKTYP,ORDKTYPQ    CHECK MAIN ORDER RECORD TYPE                 
         JNE   EXITL                                                            
         CLC   ORDKORD,=C'00000'                                                
         JE    EXITL                                                            
         CLI   ORDKSEQ,0                                                        
         JNE   EXITL                                                            
         TM    ORDRSTA2,ORDSEXEX                                                
         JZ    EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BOR02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         JE    EXITL                                                            
         CLI   SDSRTYPE,SDSRORQ                                                 
         JNE   BOR08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         JE    BOR10                                                            
BOR08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         JNE   BOR02                                                            
         J     EXITL                                                            
BOR10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                  GET DESCRIPTION                              
         GOTO1 GETEL,DMCB,('ENMELQ',ORDRECD)                                    
         JNE   EXITL                                                            
         SHI   RF,ENMLNQ+1                                                      
         JM    BOR12                                                            
***      CHI   RF,(L'ENMNAME)-1      NOTE THAT SEARCH BUILDS UP TO 8/10         
         CHI   RF,(2*(L'ENMNAME))-1  SEARCH WORDS FROM EACH STRING, SO          
         JNH   *+8                   THE FURTHER TO THE RIGHT THE LESS          
***      LHI   RF,(L'ENMNAME)-1      LIKELY A WORD CAUSES A POINTER|            
         LHI   RF,(2*(L'ENMNAME))-1                                             
         L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(0,RE),ENMNAME-ENMELD(R1)                                       
         EX    RF,*-6              COPY NAME                                    
         AHI   RF,1                                                             
         STC   RF,12(R4)           SET LENGTH OF TEXT                           
*                                                                               
BOR12    XC    SONRECD(ACCKLEN),SONRECD                                         
         MVI   SONKTYP,SONKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SONKCPY,ORDKCPY                                                  
         MVI   SONKSRC,SONKSRCQ                                                 
         MVC   SONKORD,ORDKORD                                                  
         MVC   SONKSTA,ORDRSTAT                                                 
*                                                                               
         CLC   SONKEY(SONKSUB-SONKEY),SBASAVE                                   
         MVC   SBASAVE(L'SONKEY),SONKEY                                         
         JE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         SPACE 1                                                                
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* TEST FOR DEPARTMENT RECORD AND BUILD PASSIVE POINTER IF IT IS       *         
*                                                                     *         
* NTRY: R2 = A(DEPARTMENT RECORD)                                     *         
*       R3 = A(SEARCH PASSIVE RECORD TO BE BUILT)                     *         
* EXIT: CC = LOW IF NOT EXPENDITURE TYPE RECORD                       *         
*       CC = HIGH IF PASSIVE POINTER BUILT AND RESET SEQUENCE NUMBER  *         
*       CC = EQUAL IF PASSIVE POINTER BUILT                           *         
***********************************************************************         
*&&UK                                                                           
BLDDP    NTR1  ,                                                                
         USING DPTRECD,R2          R2=A(EXPENDITURE TYPE RECORD)                
         USING SDPRECD,R3                                                       
*                                                                               
         CLI   DPTKTYP,DPTKTYPQ                                                 
         BNE   EXITL                                                            
*                                                                               
         LA    R4,SRCHDACC                                                      
         USING SDSRCHD,R4                                                       
BDP02    CLC   SDSRCHLN,BZEROES    TEST END-OF-TABLE                            
         BE    EXITL                                                            
         CLI   SDSRTYPE,SDSREXQ                                                 
         BNE   BDP08                                                            
         GOTO1 TESTCTRY,SDSRCTRY                                                
         BE    BDP10                                                            
BDP08    AH    R4,SDSRCHLN                                                      
         CLC   SDSRCHLN,BZEROES                                                 
         BNE   BDP02                                                            
         B     EXITL                                                            
BDP10    ST    R4,SBASRCH                                                       
         DROP  R4                                                               
*                                  GET DESCRIPTION                              
         GOTO1 GETEL,DMCB,('NAMELQ',DPTRECD)                                    
         BE    *+6                                                              
         DC    H'0'                                                             
         SH    RF,=Y(NAMLN1Q+1)                                                 
         BM    BDP12                                                            
         L     R4,APARMS                                                        
         L     RE,12(R4)                                                        
         MVC   0(0,RE),NAMEREC-NAMELD(R1)                                       
         EX    RF,*-6              COPY NAME                                    
         LA    RF,1(RF)                                                         
         STC   RF,12(R4)           SET LENGTH OF TEXT                           
*                                                                               
BDP12    XC    SDPRECD(ACCKLEN),SDPRECD                                         
         MVI   SDPKTYP,SDPKTYPQ    INITIALIZE PASSIVE POINTER                   
         MVC   SDPKCPY,DPTKCPY                                                  
         MVI   SDPKSRC,SDPKSRCQ                                                 
         MVC   SDPKDEPT,DPTKCODE                                                
         MVC   SDPKSTA,DPTRSTA                                                  
*                                                                               
         CLC   SDPKEY(SDPKSUB-SDPKEY),SBASAVE                                   
         MVC   SBASAVE(L'SDPKEY),SDPKEY                                         
         BE    EXITY                                                            
         B     EXITH               RESET SEQUENCE NUMBER                        
         DROP  R2,R3                                                            
*&&                                                                             
         EJECT                                                                  
***********************************************************************         
* GET ELEMENT ROUTINE                                                 *         
*                                                                     *         
* NTRY: P1=(ELEMENT CODE, A(RECORD))                                  *         
* EXIT: R1=A(ELEMENT), RF=L(ELEMENT)                                  *         
***********************************************************************         
         SPACE 1                                                                
GETEL    ST    RE,12(RD)                                                        
         LR    RE,R1                                                            
*                                                                               
         L     R1,0(RE)                                                         
         LA    R1,ACCRFST-ACCRECD(R1)                                           
         LA    R0,100                                                           
         XR    RF,RF                                                            
*                                                                               
GETEL02  CLI   0(R1),0                                                          
         BE    GETELNO                                                          
         IC    RF,1(R1)                                                         
         CLC   0(1,R1),0(RE)                                                    
         BE    GETELYES                                                         
         AR    R1,RF                                                            
         BCT   R0,GETEL02                                                       
*                                                                               
GETELNO  LTR   RB,RB                                                            
         B     *+6                                                              
GETELYES CR    RB,RB                                                            
         L     RE,12(RD)                                                        
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* TEST COUNTRY FILTER                                                 *         
*                                                                     *         
* NTRY: R1=A(COUNTRY)                                                 *         
***********************************************************************         
         SPACE 1                                                                
TESTCTRY CLI   0(R1),ALL           TEST ALL COUNTRIES                           
         BE    TCTRYYES                                                         
         CLC   SBCTRY,0(R1)        MATCH ON COUNTRY                             
         BE    TCTRYYES                                                         
         TM    0(R1),NOT                                                        
         BZ    TCTRYNO                                                          
         MVC   BYTE,0(R1)          MATCH ON NOT A COUNTRY                       
         XI    BYTE,NOT                                                         
         CLC   BYTE,SBCTRY                                                      
         BE    TCTRYNO                                                          
*                                                                               
TCTRYYES CR    RE,RE                                                            
         BR    RE                                                               
TCTRYNO  LTR   RE,RE                                                            
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
         SPACE 1                                                                
FF       EQU   X'FF'                                                            
EOT      EQU   X'00'               END-OF-TABLE                                 
ALL      EQU   X'00'               ALL                                          
NOT      EQU   X'80'               NOT                                          
ACCSYSQ  EQU   6                   ACCOUNT SYSTEM                               
         SPACE 1                                                                
         LTORG                                                                  
         SPACE 1                                                                
BZEROES  DC    XL4'00'                                                          
SPACES   DC    CL80' '                                                          
EFFS     DC    12X'FF'                                                          
         SPACE 1                                                                
ACCMST   DC    C'ACCMST  '                                                      
ACCDIR   DC    C'ACCDIR  '                                                      
         EJECT                                                                  
***********************************************************************         
* LOCAL WORKING STORAGE                                               *         
***********************************************************************         
         SPACE 1                                                                
WORKD    DSECT                                                                  
RELO     DS    A                                                                
APARMS   DS    A                   ADDRESS CALLERS PARAMETER LIST               
DMCB     DS    6F                                                               
WORK     DS    XL64                                                             
BYTE     DS    XL1                                                              
*                                                                               
ACCDAT   DS    0XL7                ACCOUNT RECORD DATA (SEE ACCTKXDAT)          
ACCLVS   DS    0XL4                ACCOUNT LEVEL LENGTHS                        
ACCLV1   DS    XL1                 ACCOUNT LEVEL 1 LENGTH                       
ACCLV2   DS    XL1                 ACCOUNT LEVEL 2 LENGTH                       
ACCLV3   DS    XL1                 ACCOUNT LEVEL 3 LENGTH                       
ACCLV4   DS    XL1                 ACCOUNT LEVEL 4 LENGTH                       
ACCCMP   DS    XL1                 COMPANY STATUS BYTE 12                       
ACCOFF   DS    CL2                 PRODUCTION OFFICE CODE                       
*                                                                               
WORKL    EQU   *-WORKD                                                          
         EJECT                                                                  
* GESRCHBLKD                                                                    
         PRINT OFF                                                              
       ++INCLUDE GESRCHBLKD                                                     
         PRINT ON                                                               
         SPACE 1                                                                
SRCHACC  CSECT                                                                  
***********************************************************************         
* START OF SEARCH DIRECTORY (DSECT SDSRCHD)                           *         
***********************************************************************         
         ENTRY SRCHDACC                                                         
SRCHDACC DS    0F                                                               
         SPACE 1                                                                
*&&UK                                                                           
GB       DC    Y(GBX-GB)           LENGTH OF ENTRY                              
         DC    CL8'GB'             SEARCH CODE                                  
         DC    CL6'ACC'            REQUIRED SYSTEM                              
         DC    AL2(0)              N/D                                          
         DC    Y(SRCKSUB-SRCKEY)   DISP OF TYPE 1/2 MODIFIER IN KEY             
         DC    AL1(SRCKWDSQ)       VALUE OF TYPE 1 MODIFIER                     
         DC    AL1(SRCKSQWD)       VALUE OF TYPE 2 MODIFIER                     
         DC    Y(SRCKWRD1-SRCKEY)  DISP OF WORD/SEQNO PAIR IN KEY               
         DC    Y(L'SRCKWRD1)       LENGTH OF WORD                               
         DC    Y(L'SRCKSEQ1)       LENGTH OF SEQNO                              
         DC    AL1(SDSRITYQ+SDSRIXTQ) INDICATORS                                
*                                  SEARCH TYPE IS PART OR EXACT MATCH           
*                                  DUPLICATE WORDS ARE DROPPED                  
*                                  WORD SEQUENCE IS NOT RELEVANT                
         DC    AL1(SDSRISFQ)       SYSTEM IS REQUIRED                           
         DC    AL1(0)              SEARCH ID NUMBER                             
         DC    AL1(ALL)            COUNTRY CODE                                 
*                                  TABLE TYPE, LIST OF COLUMNS                  
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
*                                                                               
GBX      DS    0F                                                               
         SPACE 1                                                                
GP       DC    Y(GPX-GP)                                                        
         DC    CL8'GP',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
GPX      DS    0F                                                               
*                                                                               
SA       DC    Y(SAX-SA)                                                        
         DC    CL8'SA',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SAX      DS    0F                                                               
*                                                                               
SB       DC    Y(SBX-SB)                                                        
         DC    CL8'SB',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SBX      DS    0F                                                               
*                                                                               
SC       DC    Y(SCX-SC)                                                        
         DC    CL8'SC',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SCX      DS    0F                                                               
*                                                                               
SE       DC    Y(SEX-SE)                                                        
         DC    CL8'SE',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SEX      DS    0F                                                               
*                                                                               
SF       DC    Y(SFX-SF)                                                        
         DC    CL8'SF',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SFX      DS    0F                                                               
*                                                                               
SG       DC    Y(SGX-SG)                                                        
         DC    CL8'SG',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SGX      DS    0F                                                               
*                                                                               
SH       DC    Y(SHX-SH)                                                        
         DC    CL8'SH',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SHX      DS    0F                                                               
*                                                                               
SI       DC    Y(SIX-SI)                                                        
         DC    CL8'SI',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SIX      DS    0F                                                               
*                                                                               
SJ       DC    Y(SJX-SJ)                                                        
         DC    CL8'SJ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SJX      DS    0F                                                               
*                                                                               
SK       DC    Y(SKX-SK)                                                        
         DC    CL8'SK',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SKX      DS    0F                                                               
*                                                                               
SQ       DC    Y(SQX-SQ)                                                        
         DC    CL8'SQ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SQX      DS    0F                                                               
*                                                                               
SR       DC    Y(SRX-SR)                                                        
         DC    CL8'SR',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SRX      DS    0F                                                               
*                                                                               
ST       DC    Y(STX-ST)                                                        
         DC    CL8'ST',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
STX      DS    0F                                                               
*                                                                               
SV       DC    Y(SVX-SV)                                                        
         DC    CL8'SV',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SVX      DS    0F                                                               
*                                                                               
SX       DC    Y(SXX-SX)                                                        
         DC    CL8'SX',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SXX      DS    0F                                                               
*                                                                               
SZ       DC    Y(SZX-SZ)                                                        
         DC    CL8'SZ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SZX      DS    0F                                                               
*                                                                               
L1C      DC    Y(L1CX-L1C)                                                      
         DC    CL8'1C',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1CX     DS    0F                                                               
*                                                                               
L1N      DC    Y(L1NX-L1N)                                                      
         DC    CL8'1N',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1NX     DS    0F                                                               
*                                                                               
L1P      DC    Y(L1PX-L1P)                                                      
         DC    CL8'1P',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1PX     DS    0F                                                               
*                                                                               
L1R      DC    Y(L1RX-L1R)                                                      
         DC    CL8'1R',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1RX     DS    0F                                                               
*                                                                               
L2D      DC    Y(L2DX-L2D)                                                      
         DC    CL8'2D',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L2DX     DS    0F                                                               
*                                                                               
L2P      DC    Y(L2PX-L2P)                                                      
         DC    CL8'2P',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L2PX     DS    0F                                                               
*                                                                               
L28      DC    Y(L28X-L28)                                                      
         DC    CL8'28',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L28X     DS    0F                                                               
*                                                                               
L29      DC    Y(L29X-L29)                                                      
         DC    CL8'29',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L29X     DS    0F                                                               
*                                                                               
L41      DC    Y(L41X-L41)                                                      
         DC    CL8'41',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ+SDSRIXTQ,SDSRISFQ,0,ALL)                            
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L41X     DS    0F                                                               
*&&                                                                             
*&&US                                                                           
GB       DC    Y(GBX-GB)           LENGTH OF ENTRY                              
         DC    CL8'GB'             SEARCH CODE                                  
         DC    CL6'ACC'            REQUIRED SYSTEM                              
         DC    AL2(0)              N/D                                          
         DC    Y(SRCKSUB-SRCKEY)   DISP OF TYPE 1/2 MODIFIER IN KEY             
         DC    AL1(SRCKWDSQ)       VALUE OF TYPE 1 MODIFIER                     
         DC    AL1(SRCKSQWD)       VALUE OF TYPE 2 MODIFIER                     
         DC    Y(SRCKWRD1-SRCKEY)  DISP OF WORD/SEQNO PAIR IN KEY               
         DC    Y(L'SRCKWRD1)       LENGTH OF WORD                               
         DC    Y(L'SRCKSEQ1)       LENGTH OF SEQNO                              
         DC    AL1((SDSRITYQ)+0+0) INDICATORS                                   
*                                  SEARCH TYPE IS PART OR EXACT MATCH           
*                                  DUPLICATE WORDS ARE DROPPED                  
*                                  WORD SEQUENCE IS NOT RELEVANT                
         DC    AL1(SDSRISFQ)       SYSTEM IS REQUIRED                           
         DC    AL1(0)              SEARCH ID NUMBER                             
         DC    AL1(ALL)            COUNTRY CODE                                 
*                                  TABLE TYPE, LIST OF COLUMNS                  
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
*                                                                               
GBX      DS    0F                                                               
         SPACE 1                                                                
GP       DC    Y(GPX-GP)                                                        
         DC    CL8'GP',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
GPX      DS    0F                                                               
*                                                                               
SA       DC    Y(SAX-SA)                                                        
         DC    CL8'SA',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SAX      DS    0F                                                               
*                                                                               
SB       DC    Y(SBX-SB)                                                        
         DC    CL8'SB',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SBX      DS    0F                                                               
*                                                                               
SC       DC    Y(SCX-SC)                                                        
         DC    CL8'SC',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SCX      DS    0F                                                               
*                                                                               
SE       DC    Y(SEX-SE)                                                        
         DC    CL8'SE',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SEX      DS    0F                                                               
*                                                                               
SF       DC    Y(SFX-SF)                                                        
         DC    CL8'SF',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SFX      DS    0F                                                               
*                                                                               
SG       DC    Y(SGX-SG)                                                        
         DC    CL8'SG',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SGX      DS    0F                                                               
*                                                                               
SH       DC    Y(SHX-SH)                                                        
         DC    CL8'SH',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SHX      DS    0F                                                               
*                                                                               
SI       DC    Y(SIX-SI)                                                        
         DC    CL8'SI',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SIX      DS    0F                                                               
*                                                                               
SJ       DC    Y(SJX-SJ)                                                        
         DC    CL8'SJ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SJX      DS    0F                                                               
*                                                                               
SK       DC    Y(SKX-SK)                                                        
         DC    CL8'SK',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SKX      DS    0F                                                               
*                                                                               
SL       DC    Y(SLX-SL)                                                        
         DC    CL8'SL',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SLX      DS    0F                                                               
*                                                                               
SP       DC    Y(SPX-SP)                                                        
         DC    CL8'SP',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SPX      DS    0F                                                               
*                                                                               
SQ       DC    Y(SQX-SQ)                                                        
         DC    CL8'SQ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SQX      DS    0F                                                               
*                                                                               
SR       DC    Y(SRX-SR)                                                        
         DC    CL8'SR',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SRX      DS    0F                                                               
*                                                                               
SS       DC    Y(SSX-SS)                                                        
         DC    CL8'SS',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMDSCQ,CLMADRQ,EOT)                 
SSX      DS    0F                                                               
*                                                                               
ST       DC    Y(STX-ST)                                                        
         DC    CL8'ST',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
STX      DS    0F                                                               
*                                                                               
SU       DC    Y(SUX-SU)                                                        
         DC    CL8'SU',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SUX      DS    0F                                                               
*                                                                               
SV       DC    Y(SVX-SV)                                                        
         DC    CL8'SV',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SVX      DS    0F                                                               
*                                                                               
SW       DC    Y(SWX-SW)                                                        
         DC    CL8'SW',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SWX      DS    0F                                                               
*                                                                               
SX       DC    Y(SXX-SX)                                                        
         DC    CL8'SX',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SXX      DS    0F                                                               
*                                                                               
SY       DC    Y(SYX-SY)                                                        
         DC    CL8'SY',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SYX      DS    0F                                                               
*                                                                               
SZ       DC    Y(SZX-SZ)                                                        
         DC    CL8'SZ',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
SZX      DS    0F                                                               
*                                                                               
L1C      DC    Y(L1CX-L1C)                                                      
         DC    CL8'1C',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1CX     DS    0F                                                               
*                                                                               
L1N      DC    Y(L1CX-L1C)                                                      
         DC    CL8'1N',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1NX     DS    0F                                                               
*                                                                               
L1P      DC    Y(L1PX-L1P)                                                      
         DC    CL8'1P',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1PX     DS    0F                                                               
*                                                                               
L1R      DC    Y(L1RX-L1R)                                                      
         DC    CL8'1R',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L1RX     DS    0F                                                               
*                                                                               
L11      DC    Y(L11X-L11)                                                      
         DC    CL8'11',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L11X     DS    0F                                                               
*                                                                               
L12      DC    Y(L12X-L12)                                                      
         DC    CL8'12',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L12X     DS    0F                                                               
*                                                                               
L13      DC    Y(L13X-L13)                                                      
         DC    CL8'13',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L13X     DS    0F                                                               
*                                                                               
L15      DC    Y(L15X-L15)                                                      
         DC    CL8'15',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L15X     DS    0F                                                               
*                                                                               
L16      DC    Y(L16X-L16)                                                      
         DC    CL8'16',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L16X     DS    0F                                                               
*                                                                               
L2C      DC    Y(L2CX-L2C)                                                      
         DC    CL8'2C',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L2CX     DS    0F                                                               
*                                                                               
L2D      DC    Y(L2DX-L2D)                                                      
         DC    CL8'2D',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L2DX     DS    0F                                                               
*                                                                               
L2P      DC    Y(L2PX-L2P)                                                      
         DC    CL8'2P',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L2PX     DS    0F                                                               
*                                                                               
L28      DC    Y(L28X-L28)                                                      
         DC    CL8'28',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L28X     DS    0F                                                               
*                                                                               
L29      DC    Y(L29X-L29)                                                      
         DC    CL8'29',CL6'ACC'                                                 
         DC    Y(0,SRCKSUB-SRCKEY)                                              
         DC    AL1(SRCKWDSQ,SRCKSQWD)                                           
         DC    Y(SRCKWRD1-SRCKEY,L'SRCKWRD1,L'SRCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRACCQ)                                                    
         DC    AL1(CLMACCQ,CLMNAMQ,CLMFLTQ,CLMADRQ,EOT)                         
L29X     DS    0F                                                               
*&&                                                                             
WC       DC    Y(WCX-WC)           ** WORKCODE **                               
         DC    AL1(0),AL2(WCWORD-WC),CL5' ',CL6'ACC'                            
         DC    Y(0,SWCKSUB-SWCKEY)                                              
         DC    AL1(SWCKWDSQ,SWCKSQWD)                                           
         DC    Y(SWCKWRD1-SWCKEY,L'SWCKWRD1,L'SWCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRWCQ)                                                     
WCWORD   DS    0H                                                               
         DC    Y(WCENG-WCWORD)                                                  
         DC    Y(WCENG-WCWORD)                                                  
         DC    Y(WCENG-WCWORD)                                                  
         DC    Y(WCGER-WCWORD)                                                  
         DC    Y(WCFRA-WCWORD)                                                  
         DC    Y(WCENG-WCWORD)                                                  
         DC    Y(WCENG-WCWORD)                                                  
         DC    Y(WCDUT-WCWORD)                                                  
WCENG    DC    C'WC      '         ENGLISH                                      
WCGER    DC    C'LA      '         GERMAN                                       
WCFRA    DC    C'CT      '         FRENCH                                       
WCDUT    DC    C'WC      '         DUTCH                                        
WCX      DS    0F                                                               
*                                                                               
WCL      DC    Y(WCLX-WCL)         ** WORKCODE ** (LONG WORD)                   
         DC    AL1(0),AL2(WCLWORD-WCL),CL5' ',CL6'ACC'                          
         DC    Y(0,SWCKSUB-SWCKEY)                                              
         DC    AL1(SWCKWDSQ,SWCKSQWD)                                           
         DC    Y(SWCKWRD1-SWCKEY,L'SWCKWRD1,L'SWCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRWCQ)                                                     
WCLWORD  DS    0H                                                               
         DC    Y(WCLENG-WCLWORD)                                                
         DC    Y(WCLENG-WCLWORD)                                                
         DC    Y(WCLENG-WCLWORD)                                                
         DC    Y(WCLGER-WCLWORD)                                                
         DC    Y(WCLFRA-WCLWORD)                                                
         DC    Y(WCLENG-WCLWORD)                                                
         DC    Y(WCLENG-WCLWORD)                                                
         DC    Y(WCLDUT-WCLWORD)                                                
WCLENG   DC    C'WORKCODE'         ENGLISH                                      
WCLGER   DC    C'L-ART   '         GERMAN                                       
WCLFRA   DC    C'CT      '         FRENCH                                       
WCLDUT   DC    C'WERKCODE'         DUTCH                                        
WCLX     DS    0F                                                               
*                                                                               
MC       DC    Y(MCX-MC)           ** MEDIA CODE **                             
         DC    AL1(0),AL2(MCWORD-MC),CL5' ',CL6'ACC'                            
         DC    Y(0,SMCKSUB-SMCKEY)                                              
         DC    AL1(SMCKWDSQ,SMCKSQWD)                                           
         DC    Y(SMCKWRD1-SMCKEY,L'SMCKWRD1,L'SMCKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRMCQ)                                                     
MCWORD   DS    0H                                                               
         DC    Y(MCENG-MCWORD)                                                  
         DC    Y(MCENG-MCWORD)                                                  
         DC    Y(MCENG-MCWORD)                                                  
         DC    Y(MCGER-MCWORD)                                                  
         DC    Y(MCFRA-MCWORD)                                                  
         DC    Y(MCENG-MCWORD)                                                  
         DC    Y(MCENG-MCWORD)                                                  
         DC    Y(MCDUT-MCWORD)                                                  
MCENG    DC    C'MEDIA   '         ENGLISH                                      
MCGER    DC    C'ERLºSART'         GERMAN                                       
MCFRA    DC    C'M{DIA   '         FRENCH                                       
MCDUT    DC    C'MEDIA   '         DUTCH                                        
MCX      DS    0F                                                               
*&&UK                                                                           
EX       DC    Y(EXX-EX)           ** EXPENDITURE TYPE CODE **                  
         DC    AL1(0),AL2(EXWORD-EX),CL5' ',CL6'ACC'                            
         DC    Y(0,SEXKSUB-SEXKEY)                                              
         DC    AL1(SEXKWDSQ,SEXKSQWD)                                           
         DC    Y(SEXKWRD1-SEXKEY,L'SEXKWRD1,L'SEXKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSREXQ)                                                     
EXWORD   DS    0H                                                               
         DC    Y(EXENG-EXWORD)                                                  
         DC    Y(EXENG-EXWORD)                                                  
         DC    Y(EXENG-EXWORD)                                                  
         DC    Y(EXGER-EXWORD)                                                  
         DC    Y(EXFRA-EXWORD)                                                  
         DC    Y(EXENG-EXWORD)                                                  
         DC    Y(EXENG-EXWORD)                                                  
         DC    Y(EXDUT-EXWORD)                                                  
EXENG    DC    C'ET      '         ENGLISH                                      
EXGER    DC    C'ET      '         GERMAN                                       
EXFRA    DC    C'ET      '         FRENCH                                       
EXDUT    DC    C'ET      '         DUTCH                                        
EXX      DS    0F                                                               
*&&                                                                             
*                                                                               
ES       DC    Y(ESX-ES)           ** ESTIMATE CODE **                          
         DC    AL1(0),AL2(ESWORD-ES),CL5' ',CL6'ACC'                            
         DC    Y(0,SENKSUB-SENKEY)                                              
         DC    AL1(SENKWDSQ,SENKSQWD)                                           
         DC    Y(SENKWRD1-SENKEY,L'SENKWRD1,L'SENKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRESQ)                                                     
ESWORD   DS    0H                                                               
         DC    Y(ESENG-ESWORD)                                                  
         DC    Y(ESENG-ESWORD)                                                  
         DC    Y(ESENG-ESWORD)                                                  
         DC    Y(ESGER-ESWORD)                                                  
         DC    Y(ESFRA-ESWORD)                                                  
         DC    Y(ESENG-ESWORD)                                                  
         DC    Y(ESENG-ESWORD)                                                  
         DC    Y(ESDUT-ESWORD)                                                  
ESENG    DC    C'ESTIMATE'         ENGLISH                                      
ESGER    DC    C'KVA     '         GERMAN                                       
ESFRA    DC    C'EST     '         FRENCH ?                                     
ESDUT    DC    C'EST     '         DUTCH ?                                      
ESX      DS    0F                                                               
*                                                                               
OR       DC    Y(ORX-OR)           ** ORDER CODE **                             
         DC    AL1(0),AL2(ORWORD-OR),CL5' ',CL6'ACC'                            
         DC    Y(0,SONKSUB-SONKEY)                                              
         DC    AL1(SONKWDSQ,SONKSQWD)                                           
         DC    Y(SONKWRD1-SONKEY,L'SONKWRD1,L'SONKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSRORQ)                                                     
ORWORD   DS    0H                                                               
         DC    Y(ORENG-ORWORD)                                                  
         DC    Y(ORENG-ORWORD)                                                  
         DC    Y(ORENG-ORWORD)                                                  
         DC    Y(ORGER-ORWORD)                                                  
         DC    Y(ORFRA-ORWORD)                                                  
         DC    Y(ORENG-ORWORD)                                                  
         DC    Y(ORENG-ORWORD)                                                  
         DC    Y(ORDUT-ORWORD)                                                  
ORENG    DC    C'ORDER   '         ENGLISH                                      
ORGER    DC    C'AUFTRAG '         GERMAN                                       
ORFRA    DC    C'ORDRE   '         FRENCH ?                                     
ORDUT    DC    C'ORDER   '         DUTCH ?                                      
ORX      DS    0F                                                               
*                                                                               
*&&UK                                                                           
DP       DC    Y(DPX-DP)           ** DEPARTMENT CODE **                        
         DC    AL1(0),AL2(DPWORD-DP),CL5' ',CL6'ACC'                            
         DC    Y(0,SDPKSUB-SDPKEY)                                              
         DC    AL1(SDPKWDSQ,SDPKSQWD)                                           
         DC    Y(SDPKWRD1-SDPKEY,L'SDPKWRD1,L'SDPKSEQ1)                         
         DC    AL1(SDSRITYQ,SDSRISFQ,0,ALL)                                     
         DC    AL1(SDSREXQ)                                                     
DPWORD   DS    0H                                                               
         DC    Y(DPENG-DPWORD)                                                  
         DC    Y(DPENG-DPWORD)                                                  
         DC    Y(DPENG-DPWORD)                                                  
         DC    Y(DPGER-DPWORD)                                                  
         DC    Y(DPFRA-DPWORD)                                                  
         DC    Y(DPENG-DPWORD)                                                  
         DC    Y(DPENG-DPWORD)                                                  
         DC    Y(DPDUT-DPWORD)                                                  
DPENG    DC    C'DEPT    '         ENGLISH                                      
DPGER    DC    C'ABT     '         GERMAN                                       
DPFRA    DC    C'SERV    '         FRENCH                                       
DPDUT    DC    C'AFD     '         DUTCH                                        
DPX      DS    0F                                                               
*&&                                                                             
CP       DC    Y(CPX-CP)           ** CONTROL PERSON **                         
         DC    AL1(0),AL2(CPWORD-CP),CL5' ',CL6'ACC'                            
         DC    Y(0,0)                                                           
         DC    AL1(0,0)                                                         
         DC    Y(0,10,8)           KEY LENGTH IS 8 BYTE PERSON CODE             
         DC    AL1(SDSRITYQ,SDSRISFQ+SDSRIKYQ,0,ALL)                            
         DC    AL1(SDSRCSQ)                                                     
CPWORD   DS    0H                                                               
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPGER-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
         DC    Y(CPENG-CPWORD)                                                  
CPENG    DC    C'PERSON  '         ENGLISH                                      
CPGER    DC    C'PERSON  '         GERMAN                                       
CPX      DS    0F                                                               
*                                                                               
SRCHDACX DC    F'0'                END-OF-TABLE                                 
         EJECT                                                                  
* GESRCHDIRD                                                                    
         PRINT OFF                                                              
       ++INCLUDE GESRCHDIRD                                                     
         PRINT ON                                                               
         SPACE 1                                                                
* ACSRCHDIRD                                                                    
         PRINT OFF                                                              
       ++INCLUDE ACSRCHDIRD                                                     
         PRINT ON                                                               
         SPACE 1                                                                
* ACGENFILE                                                                     
         PRINT OFF                                                              
       ++INCLUDE ACGENFILE                                                      
         PRINT ON                                                               
         SPACE 1                                                                
* ACSRCHBLKD                                                                    
         PRINT OFF                                                              
       ++INCLUDE ACSRCHBLKD                                                     
         PRINT ON                                                               
         SPACE 1                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'023ACSRCHDIR 01/08/16'                                      
         END                                                                    
