*          DATA SET MPQTRAN    AT LEVEL 033 AS OF 05/01/02                      
*CATALP MPQTRAN                                                                 
         TITLE 'MPQTRAN- Q SYSTEM LANGUAGE TRANSLATOR'                          
         SPACE 3                                                                
*        PARAMETER LIST                                                         
*                                                                               
*                                                                               
*  PARAM 1  BYTE 0     LENGTH OF INPUT (0=ELEMENT INPUT)                        
*           BYTE 1-3   A(INPUT) -MAY BE FIRST OF A SET OF ELEMS                 
*  PARAM 2  BYTE 0     MAXIMUM OUTPUT LENGTH (DEFAULT=255)                      
*                      SET TO ACTUAL OUTPUT LENGTH                              
*           BYTE 1-3   A(OUTPUT)                                                
*  PARAM 3  BYTE 0     ON RETURN SET TO TYPE OF SPEC                            
*                       L=LOGICAL CONDITION (EXCEPT SINGLE QSPEC)               
*                       N=NUMERIC CCP FIELD DEFINITION                          
*                       Q=SINGLE QSPEC (L OR N UNDETERMINED)                    
*           BYTE 1-3   A(MPQBLK)                                                
*                                                                               
MPQTRAN  CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WKDL,QTRAN                                                       
         SPACE 2                                                                
         USING WKD,RC                                                           
         XC    WKD(WKCLR),WKD                                                   
         ST    R1,SAVR1                                                         
         L     RA,8(R1)            A(MPQBLK)                                    
         USING MPQBLKD,RA                                                       
         MVI   MPQBEMSG,C' '                                                    
         MVC   MPQBEMSG+1(L'MPQBEMSG-1),MPQBEMSG                                
*                                  CALCULATE MAXIMUM NUMBER OF STACKS           
         MVI   STKMX,X'FF'         CANNOT CALULATE                              
         OC    MPQBNRES,MPQBNRES   IF DONT KNOW RESP COUNT                      
         BZ    EV6                                                              
         OC    MPQBSTLN,MPQBSTLN   OR STACK AREA SIZE                           
         BZ    EV6                                                              
*                                                                               
         L     RF,MPQBNRES                                                      
         LA    RF,7(RF)                                                         
         SRA   RF,3                RF=LENGTH OF STRING                          
         L     R1,MPQBSTLN                                                      
         SR    R0,R0                                                            
         DR    R0,RF               STACK LEN/STRING LEN                         
         STC   R1,STKMX            = MAXIMUM NO. OF STACK ENTRIES               
*                                                                               
EV6      DS    0H                                                               
         L     R1,SAVR1                                                         
         L     R2,0(R1)            R2=A(INPUT)                                  
         CLI   0(R1),0             IF LENGTH IS 0                               
         BNE   EV8                 SET WKINPT FROM ELEMENTS                     
*                                                                               
*                                NOTE-ELEMENTS ARE STANDARD MEDIA               
*                                  PLANNING TEXT ELEMENTS                       
*                                  'KEY' AT +2 IS DATE(2) + 1 SPARE             
*                                  DATA AT + 6                                  
*                                                                               
*                                  LOOK FOR ALL ELEMS WITH SAME                 
*                                  CODE AND KEY BYTE                            
         MVC   DUB(1),0(R2)        SAVE ELEM CODE                               
         MVC   DUB+1(3),2(R2)      SAVE KEY                                     
         LA    R3,WKINPT                                                        
         B     EV7F                                                             
*                                                                               
EV7D     DS    0H                                                               
         CLI   0(R2),0             EOR                                          
         BE    EV7H                                                             
*                                                                               
         CLC   0(1,R2),DUB         TEST SAME ELEM CODE                          
         BNE   EV7E                                                             
         CLC   2(3,R2),DUB+1       TEST SAME KEY                                
         BE    EV7F                                                             
*                                                                               
EV7E     DS    0H                                                               
         ZIC   R0,1(R2)                                                         
         AR    R2,R0                                                            
         B     EV7D                                                             
*                                                                               
EV7F     DS    0H                                                               
         ZIC   RF,1(R2)                                                         
         SH    RF,=H'7'            RF HAS LENGTH -1                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R3),6(R2)       DATA AT +6                                   
*                                                                               
         LA    R3,1(R3,RF)                                                      
         MVI   0(R3),C' '                                                       
         LA    R3,1(R3)                                                         
         B     EV7E                                                             
*                                                                               
EV7H     DS    0H                  END OF RECORD                                
         BCTR  R3,R0                                                            
         MVI   0(R3),X'FF'         SET END OF INPUT                             
         ST    R3,EOINP                                                         
         B     EV9                                                              
*                                                                               
EV8      DS    0H                  NON-ELEMENTAL INPUT                          
         ZIC   RF,0(R1)            LENGTH OF INPUT                              
         BCTR  RF,R0                                                            
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   WKINPT(0),0(R2)                                                  
         LA    R2,WKINPT+1(RF)                                                  
         MVI   0(R2),X'FF'         SET AT END OF INPUT                          
         ST    R2,EOINP            SET END                                      
*                                                                               
EV9      DS    0H                                                               
         L     R3,4(R1)            R3=A(OUTPUT)                                 
         LA    R3,0(R3)            STRIP HOB                                    
         ZIC   RF,4(R1)            MAX OUTPUT LENGTH                            
         CLI   4(R1),0                                                          
         BNE   *+8                                                              
         LA    RF,255              DEFAULTS TO 255                              
         LA    RF,0(R3,RF)                                                      
         ST    RF,EOUT             SET END OF OUTPUT                            
*                                                                               
         LA    R4,OPSTK+((MAXOPS-1)*OPSTKL)                                     
         ST    R4,LOSPOS           SAVE END OF STACK                            
         LA    R2,WKINPT           POINT TO START OF INPUT                      
*                                                                               
         CLC   0(4,R2),ALLCOD      TEST FOR 'ALL' RESPONDENTS                   
         BNE   EV9C                                                             
         MVC   0(4,R3),=X'01008400'   = 'NOT NULL'                              
         MVI   8(R1),C'L'          SET 'LOGICAL' SPEC                           
         B     EVEXT                                                            
*                                                                               
EV9C     DS    0H                                                               
         MVI   MODE,C'Q'           INITIALIZE TO QSPEC MODE                     
*                                                                               
         BAS   R9,SKIPB                                                         
         LA    RF,2(R2)                                                         
         CLC   =C'CD',0(R2)        UNLESS INPUT STARTS WITH 'CD'                
         BE    EV9D                                                             
         LA    RF,4(R2)                                                         
         CLC   =C'CARD',0(R2)      OR 'CARD'                                    
         BE    EV9D                                                             
         LA    RF,3(R2)                                                         
         CLC   =C'(CD',0(R2)       OR '(CD'                                     
         BE    EV9D                                                             
         LA    RF,5(R2)                                                         
         CLC   =C'(CARD',0(R2)     OR '(CARD'                                   
         BE    EV9D                                                             
         BNE   EV10                                                             
*                                                                               
EV9D     DS    0H                                                               
         CLI   0(RF),C'0'          FOLLOWED IMMEDIATELY BY A DIGIT              
         BL    EV10                                                             
         CLI   0(RF),C'9'                                                       
         BH    EV10                                                             
*                                                                               
         MVI   MODE,C'P'           IF SO, INITIALIZE TO C/C/P MODE              
*                                                                               
EV10     DS    0H                                                               
         C     R3,EOUT             TEST PAST OUTPUT LENGTH LIMIT                
         BNL   OUTLNERS                                                         
         C     R2,EOINP       END OF INPUT                                      
         BNL   EV90                                                             
*                                                                               
         LA    R5,KWLST                                                         
         USING KWLSTD,R5                                                        
*                                                                               
EV12     DS    0H                                                               
         ZIC   R7,KWLLM1           LENGTH OF KEYWORD -1                         
         EX    R7,KWCOMP                                                        
         BNE   EV14                                                             
*                                                                               
         CLI   KWLMODE,C' '        TEST MODE                                    
         BE    EV13                                                             
         CLC   KWLMODE,MODE                                                     
         BNE   EV14                                                             
*                                                                               
EV13     DS    0H                                                               
         ZIC   RF,KWLPROC                                                       
         BCTR  RF,R0                                                            
         SLL   RF,2                                                             
         BAS   RE,BRTAB(RF)                                                     
         B     EV10                                                             
*                                                                               
EV14     DS    0H                                                               
         LA    R5,KWLSTL(R5)                                                    
         CLI   0(R5),X'FF'                                                      
         BNE   EV12                                                             
*                                  UNIDENTIFIABLE INPUT                         
*                                                                               
EV14D    DS    0H                                                               
         CLI   MODE,C'P'           IF NOT CCP MODE                              
         BE    UNKNERS                                                          
         BAS   R9,SETQ             TRY FOR QSPEC                                
         B     EV10                                                             
*                                                                               
EV90     DS    0H                  AT END OF INPUT                              
         CLI   PL,0                                                             
         BNE   PARERS                                                           
         CLI   PTRSW,0             TEST UNUSED POINTERS                         
         BE    EV91                NO-OK                                        
         TM    PTRSW,X'DF'         ALL BUT NUMERIC FIELD ARE                    
         BNZ   PTRERS              AUTOMATIC ERRORS                             
*                                  HAVE UNUSED NUMERIC FIELD                    
*                                  OK FOR SPEC TYPE 'N', BUT...                 
         CLI   QSW,0               MUST NOT HAVE ANY Q                          
         BNE   PTRERS                                                           
         CLI   OPSW,0              OR OPERATORS                                 
         BNE   PTRERS                                                           
         CLI   COMPSW,0            OR COMPS                                     
         BNE   PTRERS                                                           
*                                                                               
EV91     DS    0H                  FLUSH OPERATOR STACK                         
         C     R3,EOUT             TEST PAST OUTPUT LENGTH LIMIT                
         BNL   OUTLNERS                                                         
         CLI   0(R4),0                                                          
         BE    EV92                                                             
         MVC   0(1,R3),0(R4)                                                    
         LA    R3,1(R3)                                                         
         LA    R4,OPSTKL(R4)                                                    
         B     EV91                                                             
*                                                                               
EV92     DS    0H                                                               
         L     R1,SAVR1                                                         
         MVI   0(R3),0             SET ZERO AT END OF OUTPUT                    
         MVI   4(R1),0                                                          
         S     R3,4(R1)                                                         
         STC   R3,4(R1)            SET OUTPUT LENGTH                            
         MVI   MPQBERR,0                                                        
*                                  SET SPEC TYPE                                
         CLI   OPSW,0              IF ANY OPERATORS                             
         BNE   EV97                                                             
         CLI   COMPSW,0            OR ANY COMPS                                 
         BNE   EV97                TYPE WILL BE L=LOGICAL                       
*                                                                               
         TM    PTRSW,X'20'         TEST HAVE UNUSED NUM FIELD                   
         BZ    EV93                NO                                           
         MVI   8(R1),C'N'          YES-TYPE N=NUMERIC CCP FIELD                 
         B     EV99                SKIP NO OPERAND TEST                         
*                                                                               
EV93     DS    0H                                                               
         MVI   8(R1),C'Q'          ELSE TYPE IS SINGLE QSPEC                    
         CLI   QSW,0               IF HAVE ANY Q'S                              
         BNE   EV98                                                             
*                                                                               
EV97     DS    0H                                                               
         MVI   8(R1),C'L'          SET TYPE IS LOGICAL CONDITION                
*                                                                               
EV98     DS    0H                                                               
         CLI   LTYP,C'A'                                                        
         BNE   AMISERS             OPERAND MISSING                              
*                                                                               
EV99     DS    0H                                                               
         B     EVEXT                                                            
*                                                                               
EVERR    DS    0H                                                               
         LA    R6,ERRMSGS                                                       
*                                                                               
EVERR4   DS    0H                                                               
         CLI   0(R6),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLC   MPQBERR,0(R6)                                                    
         BNE   *+14                                                             
         MVC   MPQBEMSG(EMSGL),1(R6)                                            
         B     EVERR6                                                           
*                                                                               
         LA    R6,EMSGL+1(R6)                                                   
         B     EVERR4                                                           
*                                  IDENTIFY SOURCE OF ERROR                     
EVERR6   DS    0H                                                               
         LR    R1,R2                                                            
         S     R1,EOINP                                                         
         LPR   R1,R1                                                            
         BNP   EVEXT               SKIP IF AT END                               
         LA    RF,MPQBEMSG+EMSGL                                                
         CLI   0(RF),C' '                                                       
         BH    *+8                                                              
         BCT   RF,*-8                                                           
*                                                                               
         MVC   2(2,RF),=C'AT'                                                   
         CH    R1,=H'10'                                                        
         BNH   *+8                                                              
         LH    R1,=H'10'                                                        
         BCTR  R1,R0                                                            
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   5(0,RF),0(R2)                                                    
*                                                                               
EVEXT    DS    0H                                                               
         XIT1                                                                   
*                                                                               
KWCOMP   CLC   KWLCODE(0),0(R2)                                                 
*                                                                               
         EJECT                                                                  
*        PROCESSING ROUTINES                                                    
*        -------------------                                                    
         SPACE 2                                                                
BRTAB    DS    0F                                                               
         B     BLNK                                                             
         B     CDPNTR                                                           
         B     CLPNTR                                                           
         B     RPAR                                                             
         B     LPAR                                                             
         B     OPTR                                                             
         B     PNCH                                                             
         B     THRU                                                             
         B     COMP                                                             
         B     SMODE                                                            
         DC    F'0'                                                             
*                                                                               
         SPACE 2                                                                
*        BLANK                                                                  
         SPACE 2                                                                
BLNK     DS    0H                                                               
         LA    R2,1(R2)            IGNORE BLANKS                                
         BR    RE                                                               
         SPACE 3                                                                
*        CARD POINTER                                                           
*        ------------                                                           
         SPACE 2                                                                
CDPNTR   DS    0H                                                               
         XC    CLPTR,CLPTR         CLEAR COLUMN POINTER                         
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,3                MAX 3 DIGITS                                 
         BAS   R9,SETNUM           GET VALUE OF FOLLOWING DIGITS                
*                                                                               
         LTR   R0,R0                                                            
         BNP   CDNERS                                                           
         CH    R0,MPQBNCRD         TEST VS HIGH CARD NO.                        
         BH    CDNERS                                                           
         CLI   PTRSW,0             TEST ANY UNUSED POINTERS                     
         BNE   PTRERS                                                           
         CLI   LTYP,C'A'           SHOULD NOT FOLLOW OPERAND                    
         BE    OPMISERS                                                         
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         STCM  R0,3,CDPTR          SET CARD POINTER                             
         OI    PTRSW,X'80'         SET HAVE CARD POINTER                        
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),CDP           SET OP CODE                                  
         STCM  R0,3,1(R3)          SET CARD CUMBER                              
         LA    R3,3(R3)            BUMP                                         
         BR    RE                                                               
         SPACE 3                                                                
*        COLUMN POINTER                                                         
*        --------------                                                         
         SPACE 2                                                                
CLPNTR   DS    0H                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,2                MAX 2 DIGITS                                 
         CLC   MPQBNCOL,=H'100'    UNLESS 100+ 'COLUMNS'                        
         BL    *+8                                                              
         LA    R1,3                                                             
         BAS   R9,SETNUM           GET VALUE OF FOLLOWING DIGITS                
*                                                                               
         LTR   R0,R0                                                            
         BNP   CLNERS                                                           
         CH    R0,MPQBNCOL         TEST VS HIGH COL NO.                         
         BH    CLNERS                                                           
         TM    PTRSW,X'40'         TEST HAVE UNUSED COL POINTER                 
         BNZ   PTRERS                                                           
         CLI   LTYP,C'A'           SHOULD NOT FOLLOW OPERAND                    
         BE    OPMISERS                                                         
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         STCM  R0,3,CLPTR          SET COLUMN POINTER                           
         OI    PTRSW,X'40'         SET HAVE COLUMN POINTER                      
         NI    PTRSW,X'7F'         SET HAVE USED CARD POINTER                   
*                                  SET IN OUTPUT STRING                         
         LR    R6,R2               SAVE CURRENT INPUT POS                       
*                                  LOOK FOR +NN                                 
         BAS   R9,SKIPB            FIND FIRST NON BLANK                         
         CLI   0(R2),C'+'                                                       
         BNE   CLPNTR3                                                          
         LA    R1,2                MAX DIGITS                                   
         LA    R2,1(R2)                                                         
         BAS   R9,SETNUM           GET NUMBERS                                  
         LTR   R1,R1               MUST HAVE NUMBER                             
         BNP   CLNERS                                                           
         SR    RF,RF                                                            
         ICM   RF,3,CLPTR          INCR COLUMN POINTER                          
         AR    RF,R0                                                            
         STCM  RF,3,CLPTR                                                       
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         LR    R6,R2               SAVE NEW CURRENT INPUT POS                   
         B     CLPNTR3B                                                         
*                                                                               
CLPNTR3  DS    0H                                                               
         LR    R2,R6               RESTORE INPUT POS                            
*                                                                               
CLPNTR3B DS    0H                                                               
         MVI   0(R3),CLP           SET OP CODE                                  
         MVC   1(2,R3),CLPTR       SET COLUMN NUMBER                            
         LA    R3,3(R3)            BUMP                                         
*                                  LOOK FOR (NN)- NUMERIC FIELD LENGTH          
         BAS   R9,SKIPB          FIND FIRST NON-BLANK                           
         CLI   0(R2),C'('          MUST FIND (                                  
         BNE   CLPNTR4                                                          
         LA    R2,1(R2)                                                         
         LA    R1,2                MAX DIGITS                                   
         BAS   R9,SETNUM           GET NUMBERS                                  
         AR    R2,R1                                                            
         LTR   R0,R0                                                            
         BZ    CLPNTR4                                                          
*                                                                               
         BAS   R9,SKIPB            SKIP BLANKS                                  
         CLI   0(R2),C')'          FOLLOWED BY )                                
         BNE   CLPNTR4                                                          
         LA    R2,1(R2)                                                         
*                                                                               
         STC   R0,NFLGTH           SET LENGTH                                   
         NI    PTRSW,X'3F'         SET HAVE USED CRD AND COL PTRS               
         OI    PTRSW,X'20'         SET HAVE NUMERIC POINTER                     
*                                  SET OUTPUT STRING                            
         MVI   0(R3),NFLENC        CODE                                         
         STC   R0,1(R3)            LENGTH                                       
         LA    R3,2(R3)            BUMP                                         
         BR    RE                                                               
*                                                                               
CLPNTR4  DS    0H                  NO NUMERIC FIELD LENGTH                      
         LR    R2,R6               RESTORE INPUT POS                            
         BR    RE                                                               
*                                                                               
         SPACE 3                                                                
*        PUNCH                                                                  
*        -----                                                                  
         SPACE 2                                                                
PNCH     DS    0H                                                               
         OC    CDPTR,CDPTR         CARD POINTER MUST BE SET                     
         BZ    CDMISERS                                                         
         OC    CLPTR,CLPTR         COLUMN POINTER MUST BE SET                   
         BZ    CLMISERS                                                         
*                                                                               
         CLI   LTYP,C'A'           CONSECUTIVE OPERANDS                         
         BE    OPMISERS                                                         
*                                                                               
         MVI   LTYP,C'A'           SET HAVE OPERAND                             
         NI    PTRSW,X'3F'         SET HAVE USED CRD/COL PTRS                   
         L     RF,ACTR             BUMP OPERAND STACK COUNTER                   
         LA    RF,1(RF)                                                         
         ST    RF,ACTR                                                          
*                                                                               
         ZIC   R0,STKMX            TEST TOO MANY OPERANDS STACKED               
         CR    RF,R0                                                            
         BH    ANDMXERS                                                         
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),PCH                                                        
         MVC   1(1,R3),0(R2)       PUNCH CODE                                   
         LA    R3,2(R3)            BUMP                                         
*                                                                               
         MVC   LPNCH,0(R2)         SVE PUNCH CODE                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
         SPACE 3                                                                
*        OPERATOR                                                               
*        --------                                                               
         SPACE 2                                                                
OPTR     DS    0H                                                               
         CLI   MODE,C'P'                                                        
         BE    OPTR1F                                                           
*                                                                               
         CLI   0(R2),C'A'          TEST ALPHA OPERATOR                          
         BL    OPTR1F              NO - OK                                      
*                                  YES- MUST END WITH TERMINATOR                
         LR    RF,R2               SAVE R2 (USED BY TRT)                        
         LA    R1,1(R2,R7)         POINT TO TERMINATING BYTE                    
         TRT   0(1,R1),SQTRTAB     IF OPTR ENDS WITH TERMINATOR                 
         LR    R2,RF               OK                                           
         BZ    EV14D               ELSE TRY FOR QSPEC CODE                      
*                                                                               
OPTR1F   DS    0H                                                               
         CLI   KWLOPCD,NOT         EXCEPT FOR 'NOT'                             
         BE    OPTR2                                                            
*                                                                               
         TM    QSW,X'80'           IF HAVE QSPEC                                
         BZ    OPTR1H                                                           
         TM    QSW,X'20'           AND NOT USED AS NUMERIC                      
         BNZ   OPTR1H                                                           
         OI    QSW,X'40'           SET USED AS LOGICAL (VS NUMERIC)             
*                                                                               
OPTR1H   DS    0H                                                               
         CLI   LTYP,C'A'           OPERATORS MUST FOLLOW OPERANDS               
         BNE   AMISERS                                                          
         B     OPTR4                                                            
*                                                                               
OPTR2    DS    0H                                                               
         CLI   MODE,C'P'            FOR CCP MODE                                
         BNE   OPTR4                                                            
         CLI   LTYP,C'A'           'NOT' MUST NOT FOLLOW OPERAND                
         BE    OPMISERS                                                         
*                                                                               
OPTR4    DS    0H                                                               
         CLI   0(R4),0             TEST HAVE OP IN STACK                        
         BE    OPTR6               NO - SET THIS OP                             
         CLC   PL,1(R4)            TEST OP IN STACK AT THIS PAREN LEV           
         BE    OPTR8               YES                                          
*                                                                               
OPTR5    DS    0H                                                               
         SH    R4,=Y(OPSTKL)       NO-LEAVE IT AND ADD THIS ON TOP              
         LA    R0,OPSTK                                                         
         CR    R4,R0               TEST BEFORE BEGINNING OF STACK               
         BL    OPMXERS             TOO MANY OPERATORS                           
*                                                                               
OPTR6    DS    0H                                                               
         MVC   0(1,R4),KWLOPCD     SET CURRENT OP IN STACK                      
         MVC   1(1,R4),PL          ALONG WITH PAREN LEV                         
         MVC   2(1,R4),KWLOPHI     AND HIERARCHY                                
         B     OPTR10                                                           
*                                  OP IN STACK IS AT THIS PAREN LEV             
OPTR8    DS    0H                                                               
         CLC   KWLOPHI,2(R4)       TEST OPERATOR HIERARCHY                      
         BH    OPTR5               IF CURRENT OP HIGH SET IN STACK              
         CLI   KWLOPCD,NOT         OR IF A 'NOT' (HANDLES                       
         BE    OPTR5               DOUBLE NEGATIVES)                            
*                                  ELSE FLUSH STACK TO NEXT PAREN LEV           
         MVC   0(1,R3),0(R4)       SET OP IN OUTPUT FROM STACK                  
         XC    0(OPSTKL,R4),0(R4)                                               
         LA    R3,1(R3)                                                         
         LA    R4,OPSTKL(R4)       BUMP OPSTK POINTER                           
*                                  AND REPLACE WITH THIS OP                     
         C     R4,LOSPOS           TEST AT LAST                                 
         BH    OPTR5               AND REPLACE WITH THIS OP                     
         B     OPTR4                                                            
*                                                                               
OPTR10   DS    0H                                                               
         OI    OPSW,X'80'          SET HAVE HAD SOME OPERATOR                   
         XC    ACTR,ACTR           CLEAR OPERAND COUNTER                        
         MVI   LTYP,C'O'           SET HAVE OPERATOR                            
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
         SPACE 3                                                                
*        LEFT PAREN                                                             
*        ----------                                                             
         SPACE 2                                                                
LPAR     DS    0H                                                               
         CLI   LTYP,C'A'           MUST NOT FOLLOW OPERAND                      
         BE    OPMISERS                                                         
*                                                                               
         ZIC   RF,PL               BUMP PAREN LEVEL                             
         LA    RF,1(RF)                                                         
         STC   RF,PL                                                            
*                                                                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
         SPACE 3                                                                
*        RIGHT PAREN                                                            
*        -----------                                                            
         SPACE 2                                                                
RPAR     DS    0H                                                               
         CLI   LTYP,C'A'           MUST FOLLOW OPERAND                          
         BNE   AMISERS                                                          
*                              FLUSH OPERATORS AT THIS PAREN LEV                
RPAR4    DS    0H                                                               
         CLC   PL,1(R4)            TEST AT THIS LEVEL                           
         BNE   RPAR6               NO - DONE                                    
         MVC   0(1,R3),0(R4)       YES - SET IN OUTPUT                          
         LA    R3,1(R3)                                                         
         XC    0(OPSTKL,R4),0(R4)   AND CLEAR OPERATOR                          
         C     R4,LOSPOS           TST AT END OF OPSTK                          
         BE    RPAR6                                                            
         LA    R4,OPSTKL(R4)       BUMP OPSTK POINTER                           
         B     RPAR4                                                            
*                                                                               
RPAR6    DS    0H                                                               
         ZIC   RF,PL               DECREMENT PAREN LEVEL                        
         BCTR  RF,R0                                                            
         STC   RF,PL                                                            
*                                                                               
         LTR   RF,RF                                                            
         BM    PARERS              UNPAIRED PARENS                              
*                                                                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
         SPACE 3                                                                
*        COMPARISONS                                                            
*        ----------                                                             
         SPACE 2                                                                
COMP     DS    0H                                                               
         CLI   MODE,C'P'           IF CCP MODE                                  
         BE    COMP4               OK                                           
*                                                                               
         CLI   0(R2),C'A'          ELSE, IF NOT SPECIAL CHARACTER               
         BL    COMP3               MUST END WITH TERMINATOR                     
         LR    RF,R2               SAVE R2 (USED BY TRT)                        
         LA    R1,1(R2,R7)         POINT TO TERMINATING BYTE                    
         TRT   0(1,R1),SQTRTAB     IF OPTR ENDS WITH TERMINATOR                 
         LR    R2,RF               OK                                           
         BZ    EV14D               ELSE TRY FOR QSPEC CODE                      
*                                                                               
COMP3    DS    0H                                                               
         TM    QSW,X'80'           TEST QSPEC GIVEN                             
         BZ    NFMISERS                                                         
         TM    QSW,X'40'           TEST QSPEC USED AS LOGICAL                   
         BNZ   QSUERS                                                           
         OI    QSW,X'20'           SET QSPEC USED AS NUMERIC                    
         B     COMP5                                                            
*                                                                               
COMP4    DS    0H                                                               
         NI    PTRSW,X'DF'         SET HAVE USED NUMERIC POINTER                
         CLI   NFLGTH,0            LENGTH OF FIELD MUST BE SET                  
         BE    NFMISERS                                                         
         CLI   LTYP,C'A'           TEST CONSECUTIVE OPERANDS                    
         BE    OPMISERS                                                         
*                                                                               
COMP5    DS    0H                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,10                                                            
         BAS   R9,SETNUM                                                        
*                                                                               
         LTR   R1,R1               TEST ANY COMPARAND                           
         BNP   COMPERS                                                          
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         MVI   LTYP,C'A'           SET HAVE OPERAND                             
         OI    COMPSW,X'80'        SET HAVE HAD SOME COMP                       
*                                  SET OUTPUT STRING                            
         MVI   0(R3),NCOMP         SET CODE FOR NUM FIELD COMP                  
         MVC   1(1,R3),KWLOPCD     TYPE OF COMPARISON                           
         STCM  R0,15,2(R3)         COMPARAND                                    
         LA    R3,6(R3)            BUMP                                         
         MVI   LPNCH,0             FOR 'THRU' RANGE LOGIC                       
         BR    RE                                                               
         SPACE 3                                                                
*        SET MODE                                                               
*        --------                                                               
         SPACE 2                                                                
SMODE    DS    0H                                                               
         MVC   MODE,0(R2)            SET MODE                                   
         CLI   MODE,0              PARAMS DEFAULT                               
         BNE   *+8                                                              
         MVI   MODE,C'P'           IS P                                         
         XC    CDPTR(5),CDPTR      CLEAR POINTERS                               
*                                                                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
*                                                                               
         SPACE 3                                                                
*        THRU - OR'ED RANGE SPEC                                                
*        -----------------------                                                
         SPACE 2                                                                
THRU     DS    0H                                                               
         CLI   LTYP,C'A'           MUST FOLLOW OPERAND                          
         BNE   AMISERS                                                          
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         BAS   R9,SKIPB            SKIP ANY BLANKS                              
         BH    *+12                                                             
         LA    R2,1(R2)                                                         
         B     *-12                                                             
*                                                                               
         LA    RF,PCHLST           NEXT CHAR MUST BE A PUNCH                    
*                                                                               
THRU4    DS    0H                                                               
         CLI   0(RF),X'FF'         EOL                                          
         BE    THRUERS             INVALID RANGE                                
         CLC   0(1,R2),0(RF)                                                    
         BE    THRU6                                                            
         LA    RF,1(RF)                                                         
         B     THRU4                                                            
*                                                                               
THRU6    DS    0H                                                               
         CLC   0(1,R2),LPNCH       TEST BOTH ENDS THE SAME                      
         BE    THRUERS                                                          
*                                                                               
         MVI   0(R3),COPTSW        SET ON CONDTION OPTIONAL SW                  
         MVI   1(R3),C'Y'                                                       
         LA    R3,2(R3)                                                         
*                                                                               
         LA    RF,PCHLST           LAST PUNCH IS START OF RANGE                 
*                                                                               
THRU8    DS    0H                                                               
         CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                LAST PUNCH NOT A PUNCH                       
*                                                                               
         CLC   LPNCH,0(RF)                                                      
         BE    THRU10                                                           
         LA    RF,1(RF)                                                         
         B     THRU8                                                            
*                                                                               
THRU10   DS    0H                                                               
         LA    RF,1(RF)            START WITH NEXT                              
         CLI   0(RF),X'FF'         AT EOL                                       
         BNE   *+8                                                              
         LA    RF,PCHLST           START OVER                                   
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),PCH           PUNCH TYPE                                   
         MVC   1(1,R3),0(RF)       ACTUAL PUNCH                                 
         MVI   2(R3),OR            OPERATOR                                     
         LA    R3,3(R3)            BUMP                                         
*                                                                               
         CLC   0(1,R2),0(RF)       TEST HAVE REACHED STARTING POINT             
         BNE   THRU10                                                           
*                                                                               
         MVI   0(R3),COPTSW        SET OFF CONDITION OPTIONAL SWITCH            
         MVI   1(R3),C'N'                                                       
         LA    R3,2(R3)                                                         
*                                                                               
         MVI   LPNCH,0          WILL DISALLOW CONSECUTIVE RANGE SPECS           
         MVI   LTYP,C'A'           SET HAVE OPERAND                             
         LA    R2,1(R2)            BUMP INPUT POINTER                           
         BR    RE                                                               
         EJECT                                                                  
*        SETQ   - TREAT INPUT FROM CURRENT POINT THRU ANY TERMINATOR            
*                 AS A QSPEC                                                    
         SPACE 2                                                                
SETQ     DS    0H                                                               
         CLI   LTYP,C'A'           CHECK FOR CONSEQUTIVE OPERANDS               
         BE    OPMISERS                                                         
         CLI   0(R2),C'*'          QSPEC/TARG MUST START WITH *                 
         BE    SETQ2               (USER TARGET)                                
         CLI   0(R2),C'A'          OR ALPHA/NUM                                 
         BL    UNKNERS                                                          
*                                                                               
SETQ2    DS    0H                                                               
         LR    RF,R2               SAVE R2 (USED BY TRT)                        
         L     R1,EOINP                                                         
         SR    R1,R2                                                            
         CH    R1,=H'40'           MAX TO SCAN                                  
         BNH   *+8                                                              
         LA    R1,40                                                            
*                                                                               
         BCTR  R1,R0                                                            
         EX    R1,SQTRT                                                         
         BNZ   *+8                 HAVE TERMINATOR                              
         L     R1,EOINP            IF NOT USE END                               
*                                                                               
         MVI   0(R3),QSP           CODE FOR QSPEC POINTER                       
         CLI   MODE,C'Q'           IF MODE IS Q                                 
         BE    *+8                                                              
         MVI   0(R3),TARG          ELSE CODE FOR TARGET POINTER                 
         SR    R1,RF                                                            
         CH    R1,=H'40'                                                        
         BH    UNKNERS             QSPEC TOO LONG                               
         BCTR  R1,R0                                                            
         EX    R1,SQMVC            QSPEC CODE                                   
         LA    R2,1(RF,R1)         RESTORE AND BUMP INPUT POINTER               
         LA    R1,3(R1)            CODE LENGTH +2                               
         STC   R1,1(R3)            SET LENGTH IN OUTPUT STREAM                  
         AR    R3,R1               BUMP OUTPUT POINTER                          
*                                                                               
         MVI   QSW,X'80'           SET HAVE QSPEC AND SET NOT USED              
         MVI   LTYP,C'A'           SET HAVE OPERAND (PROVISIONAL)               
*                                                                               
         BR    R9                                                               
         SPACE 3                                                                
SQTRT    TRT   0(0,RF),SQTRTAB                                                  
SQMVC    MVC   2(0,R3),0(RF)                                                    
         SPACE 3                                                                
*                                  TRT FUNCTION BYTE TABLE                      
SQTRTAB  DC    X'FF000000000000000000000000000000' 00-0F  NULL                  
         DC    X'00000000000000000000000000000000' 10-1F                        
         DC    X'00000000000000000000000000000000' 20-2F                        
         DC    X'00000000000000000000000000000000' 30-3F                        
         DC    X'FF0000000000000000000000FFFF00FF' 40-4F BLANK LT ( VB          
         DC    X'FF000000000000000000000000FF0000' 50-5F & )                    
         DC    X'0000000000000000000000FF0000FF00' 60-6F , GT                   
         DC    X'0000000000000000000000000000FF00' 70-7F =                      
         DC    X'00000000000000000000000000000000' 80-8F                        
         DC    X'00000000000000000000000000000000' 90-9F                        
         DC    X'00000000000000000000000000000000' A0-AF                        
         DC    X'00000000000000000000000000000000' B0-BF                        
         DC    X'00000000000000000000000000000000' C0-CF                        
         DC    X'00000000000000000000000000000000' D0-DF                        
         DC    X'00000000000000000000000000000000' E0-EF                        
         DC    X'000000000000000000000000000000FF' F0-FF  END                   
         EJECT                                                                  
*        SETNUM - SET IN R0 NUMERIC VALUE OF UP TO N CONSECUTIVE                
*                 DIGITS AT R2 (N IN R1)                                        
*                 SET ACTUAL LENGTH IN R1                                       
*                 POINT R2 TO NEXT POSITION                                     
         SPACE 2                                                                
SETNUM   DS    0H                                                               
         CLI   0(R2),C' '          STRIP ANY INITIAL BLANKS                     
         BH    *+12                                                             
         LA    R2,1(R2)                                                         
         B     *-12                                                             
*                                                                               
         SR    R0,R0                                                            
         LR    RF,R2                                                            
*                                                                               
SETNUM4  DS    0H                                                               
         CLI   0(RF),C'0'                                                       
         BL    SETNUM6                                                          
         CLI   0(RF),C'9'                                                       
         BH    SETNUM6                                                          
*                                                                               
         LA    RF,1(RF)                                                         
         B     SETNUM4                                                          
*                                                                               
SETNUM6  DS    0H                  AT END ON NUMERICS                           
         SR    RF,R2                                                            
         CR    RF,R1               TEST VS MAX                                  
         BNL   *+10                                                             
         LTR   R1,RF               IF LOW USE ACTUAL LENGTH                     
         BNP   SETNUMX             NO DIGITS                                    
         BCTR  R1,R0                                                            
         EX    R1,SETNPACK                                                      
         CVB   R0,DUB                                                           
         LA    R1,1(R1)            LENGTH IN R1                                 
*                                                                               
SETNUMX  DS    0H                                                               
         BR    R9                                                               
*                                                                               
SETNPACK PACK  DUB,0(0,R2)                                                      
         SPACE 3                                                                
SKIPB    DS    0H                                                               
         CLI   0(R2),C' '                                                       
         BHR   R9                                                               
         LA    R2,1(R2)                                                         
         B     SKIPB                                                            
         EJECT                                                                  
*        SET ERROR CODES                                                        
         SPACE 3                                                                
         SPACE 2                                                                
AMISERS  DS    0H                                                               
         MVI   MPQBERR,MPQEAMIS                                                 
         B     EVERR                                                            
OPMISERS DS    0H                                                               
         MVI   MPQBERR,MPQEOMIS                                                 
         B     EVERR                                                            
CDNERS   DS    0H                                                               
         MVI   MPQBERR,MPQECDN                                                  
         B     EVERR                                                            
CLNERS   DS    0H                                                               
         MVI   MPQBERR,MPQECLN                                                  
         B     EVERR                                                            
PARERS   DS    0H                                                               
         MVI   MPQBERR,MPQEPAR                                                  
         B     EVERR                                                            
UNKNERS  DS    0H                                                               
         MVI   MPQBERR,MPQEUNK                                                  
         B     EVERR                                                            
OPMXERS  DS    0H                                                               
         MVI   MPQBERR,MPQEOPMX                                                 
         B     EVERR                                                            
ANDMXERS DS    0H                                                               
         MVI   MPQBERR,MPQEANMX                                                 
         B     EVERR                                                            
COMPERS  DS    0H                                                               
         MVI   MPQBERR,MPQECOMP                                                 
         B     EVERR                                                            
NFLENERS DS    0H                                                               
         MVI   MPQBERR,MPQENFLN                                                 
         B     EVERR                                                            
CDMISERS DS    0H                                                               
         MVI   MPQBERR,MPQECDMS                                                 
         B     EVERR                                                            
CLMISERS DS    0H                                                               
         MVI   MPQBERR,MPQECLMS                                                 
         B     EVERR                                                            
NFMISERS DS    0H                                                               
         MVI   MPQBERR,MPQENFMS                                                 
         B     EVERR                                                            
THRUERS  DS    0H                                                               
         MVI   MPQBERR,MPQETHRU                                                 
         B     EVERR                                                            
QSUERS   DS    0H                                                               
         MVI   MPQBERR,MPQEQUSE                                                 
         B     EVERR                                                            
PTRERS   DS    0H                                                               
         MVI   MPQBERR,MPQEPNTR                                                 
         L     R2,EOINP            SUPPRESS ERROR LOCATION                      
         B     EVERR                                                            
OUTLNERS DS    0H                                                               
         MVI   MPQBERR,MPQEOUTL                                                 
         B     EVERR                                                            
         EJECT                                                                  
*        KEY WORD LIST                                                          
         SPACE 3                                                                
*        DSECT TO COVER KEYWORD LIST                                            
         SPACE 2                                                                
KWLSTD   DSECT                                                                  
KWLCODE  DS    CL8                 KEYWORD                                      
KWLLM1   DS    XL1                 LENGTH OF KEYWORD -1                         
KWLOPCD  DS    XL1                 FOR OPERATORS - INTERNAL CODE                
*                                  FOR COMPARES - TYPE OF COMPARE               
KWLOPHI  DS    XL1                 FOR OPERATORS - HEIRARCHY                    
KWLMODE  DS    CL1                 PROCESS FOR THIS MODE                        
*                                  (BLANK = ALL MODES)                          
KWLPROC  DS    AL1                 CODE OF PROCESSING ROUTINE                   
*                                                                               
KWLSTL   EQU   *-KWLSTD                                                         
         SPACE 2                                                                
MPQTRAN  CSECT                                                                  
KWLST    DS    0C                                                               
         DC    CL8'        ',AL1(0),X'0000',C' ',AL1(BLNKP)  BLANK              
         DC    XL8'00000000',AL1(0),X'0000',C' ',AL1(BLNKP)  NULL               
*                                                                               
*        OPERATORS                                                              
*                                                                               
         DC    CL8'AND     ',AL1(2),X'8206',C' ',AL1(OPTRP)                     
         DC    CL8'&&      ',AL1(0),X'8206',C' ',AL1(OPTRP)                     
         DC    CL8'OR      ',AL1(1),X'8104',C' ',AL1(OPTRP)                     
         DC    CL8',       ',AL1(0),X'8104',C' ',AL1(OPTRP)                     
         DC    CL8'|       ',AL1(0),X'8104',C' ',AL1(OPTRP) V BAR               
         DC    CL8'EOR     ',AL1(2),X'8308',C' ',AL1(OPTRP)                     
         DC    CL8'NOT     ',AL1(2),X'840A',C' ',AL1(OPTRP)                     
*                                                                               
*        PUNCH CODES                                                            
*                                                                               
         DC    CL8'1       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'2       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'3       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'4       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'5       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'6       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'7       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'8       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'9       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'0       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'X       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'Y       ',AL1(0),X'0000',C'P',AL1(PNCHP)                     
         DC    CL8'S       ',AL1(0),X'0000',C'P',AL1(PNCHP) SINGLE              
         DC    CL8'B       ',AL1(0),X'0000',C'P',AL1(PNCHP) BLANK               
*                                                                               
*        COMPARES                                                               
*                                                                               
         DC    CL8'EQ      ',AL1(1),X'0100',C' ',AL1(COMPP)                     
         DC    CL8'NE      ',AL1(1),X'0200',C' ',AL1(COMPP)                     
         DC    CL8'GT      ',AL1(1),X'0300',C' ',AL1(COMPP)                     
         DC    CL8'LT      ',AL1(1),X'0500',C' ',AL1(COMPP)                     
         DC    CL8'GE      ',AL1(1),X'0400',C' ',AL1(COMPP)                     
         DC    CL8'LE      ',AL1(1),X'0600',C' ',AL1(COMPP)                     
         DC    CL8'<>      ',AL1(1),X'0200',C' ',AL1(COMPP) LT-GT               
         DC    CL8'><      ',AL1(1),X'0200',C' ',AL1(COMPP) GT-LT               
         DC    CL8'<=      ',AL1(1),X'0600',C' ',AL1(COMPP) LT =                
         DC    CL8'>=      ',AL1(1),X'0400',C' ',AL1(COMPP) GT =                
         DC    CL8'=       ',AL1(0),X'0100',C' ',AL1(COMPP)                     
         DC    CL8'<       ',AL1(0),X'0500',C' ',AL1(COMPP) LT                  
         DC    CL8'>       ',AL1(0),X'0300',C' ',AL1(COMPP) GT                  
*                                                                               
*                                                                               
*        SPECIALS                                                               
*                                                                               
         DC    CL8'(       ',AL1(0),X'0000',C' ',AL1(LPARP)                     
         DC    CL8')       ',AL1(0),X'0000',C' ',AL1(RPARP)                     
         DC    CL8'P/      ',AL1(1),X'0000',C' ',AL1(SMODEP) CCP MODE           
         DC    CL8'Q/      ',AL1(1),X'0000',C' ',AL1(SMODEP) Q MODE-QSP         
         DC    CL8'T/      ',AL1(1),X'0000',C' ',AL1(SMODEP) T MODE-TRG         
*        NOTE- N (NOT) BELONGS WITH OPERATORS- PUT HERE BECAUSE IT              
*              KILLS ANYTHING ELSE STARTING WITH AN N                           
         DC    CL8'N       ',AL1(0),X'840A',C' ',AL1(OPTRP)                     
*                                                                               
*        OR'ED RANGE SPEC                                                       
*                                                                               
         DC    CL8'-       ',AL1(0),X'0000',C'P',AL1(THRUP)                     
         DC    CL8'THRU    ',AL1(3),X'0000',C'P',AL1(THRUP)                     
*                                                                               
*        POINTER WORDS                                                          
*                                                                               
         DC    CL8'CARD    ',AL1(3),X'0000',C'P',AL1(CDPNTRP)                   
         DC    CL8'CD      ',AL1(1),X'0000',C'P',AL1(CDPNTRP)                   
         DC    CL8'COL     ',AL1(2),X'0000',C'P',AL1(CLPNTRP)                   
         DC    CL8'*       ',AL1(0),X'0000',C'P',AL1(CLPNTRP)                   
         DC    CL8'C       ',AL1(0),X'0000',C'P',AL1(CLPNTRP)                   
*                                                                               
         DC    X'FF'               EOL                                          
         SPACE 3                                                                
*        ERROR MESSAGES                                                         
         SPACE 2                                                                
EMSGL    EQU   20                                                               
ERRMSGS  DS    0C                                                               
         DC    AL1(181),CL20'MISSING OPERAND     '                              
         DC    AL1(182),CL20'MISSING OPERATOR    '                              
         DC    AL1(183),CL20'INVALID CARD NUMBER '                              
         DC    AL1(184),CL20'INVALID COL. NUMBER '                              
         DC    AL1(185),CL20'UNPAIRED PARENTHESIS'                              
         DC    AL1(186),CL20'UNRECOGNIZED INPUT  '                              
         DC    AL1(187),CL20'TOO MANY OPERATORS  '                              
         DC    AL1(188),CL20'TOO MANY OPERANDS   '                              
         DC    AL1(189),CL20'INVALID COMPARAND   '                              
         DC    AL1(190),CL20'INVALID FIELD LENGTH'                              
         DC    AL1(191),CL20'CARD NOT SPECIFIED  '                              
         DC    AL1(192),CL20'COLUMN NOT SPECIFIED'                              
         DC    AL1(193),CL20'FIELD LENGTH NOT SET'                              
         DC    AL1(194),CL20'INVALID ''THRU''  RANGE'                           
         DC    AL1(195),CL20'AMBIGUOUS QSPEC USE'                               
         DC    AL1(196),CL20'UNUSED POINTER'                                    
         DC    AL1(197),CL20'OUTPUT TOO LONG'                                   
         DC    X'FF'                                                            
         SPACE 3                                                                
*        PUNCH CODE LIST FOR RANGE CHECKING                                     
         SPACE 2                                                                
PCHLST   DC    C'1234567890XY'                                                  
         DC    X'FF'               END                                          
ALLCOD   DC    CL3'ALL',X'FF'                                                   
         SPACE 3                                                                
*        PROCESSING ROUTINE CODE EQUATES                                        
         SPACE 2                                                                
BLNKP    EQU   1                                                                
CDPNTRP  EQU   2                                                                
CLPNTRP  EQU   3                                                                
RPARP    EQU   4                                                                
LPARP    EQU   5                                                                
OPTRP    EQU   6                                                                
PNCHP    EQU   7                                                                
THRUP    EQU   8                                                                
COMPP    EQU   9                                                                
SMODEP   EQU   10                                                               
*                                                                               
         SPACE 3                                                                
         LTORG                                                                  
         SPACE 2                                                                
MAXOPS   EQU   10                                                               
         SPACE 3                                                                
*        INTERNAL LANGUAGE CODE EQUATES                                         
         SPACE 2                                                                
PCH      EQU   X'01'               PUNCH CODE                                   
NCOMP    EQU   X'03'               NUMERIC COMPARISON                           
QSP      EQU   X'06'               QSPEC                                        
TARG     EQU   X'07'               TARGET                                       
*                                                                               
OR       EQU   X'81'               OR                                           
AND      EQU   X'82'               AND                                          
EOR      EQU   X'83'               EOR                                          
NOT      EQU   X'84'               NOT                                          
*                                                                               
CDP      EQU   X'85'               CARD POINTER                                 
CLP      EQU   X'86'               COLUMN POINTER                               
NFLENC   EQU   X'90'               SET NUM FIELD LENGTH                         
COPTSW   EQU   X'8F'               SET CONDITION OPTIONAL SWITCH                
*                                                                               
         SPACE 3                                                                
WKD      DSECT                                                                  
SAVR1    DS    F                                                                
EOINP    DS    A                   END OF INPUT                                 
EOUT     DS    A                   LIMIT OF OUTPUT                              
LOSPOS   DS    A                   LAST POS IN OPSTK                            
ACTR     DS    F                                                                
*                                                                               
OPSTKL   EQU   3                                                                
OPSTK    DS    0X                  OPERATOR STACK-BYTE 0 = OP                   
         ORG   *+(MAXOPS*OPSTKL)                 -BYTE 1 = PAREN LEV            
*                                                -BYTE 2 = OP LEVEL             
*                                                                               
         DS    XL3'00'             ROOM AT END OF STACK                         
*                                                                               
STKMX    DS    X                   MAXIMUM NUMBER OF STACKS                     
PL       DS    X                   PAREN LEVEL                                  
LTYP     DS    C                   LAST TYPE  'O' = OPERATOR                    
*                                             'A' = OPERAND                     
*                                             'P' = POINTER                     
LPNCH    DS    C                   LAST PUNCH CODE                              
MODE     DS    CL1                 C=CCP,Q=QSPEC                                
QSW      DS    XL1                 QSPEC CONTROL SW                             
*                                  X'80'=HAVE UNUSED QSPEC                      
*                                  X'40'=USED AS LOGICAL                        
*                                  X'20'=USED AS NUMERIC                        
*                                  X'10'=HAVE QSPEC PERIOD                      
OPSW     DS    X                                                                
COMPSW   DS    X                                                                
CDPTR    DS    XL2                 CARD POINTER                                 
CLPTR    DS    XL2                 COLUMN POINTER                               
NFLGTH   DS    XL1                 NUMERIC FIELD LENGTH                         
PTRSW    DS    XL1                                                              
DUB      DS    D                                                                
WKCLR    EQU   *-WKD               LENGTH TO BE CLEARED                         
*                                                                               
WKINPT   DS    XL400                                                            
         DS    XL1                                                              
WKDL     EQU   *-WKD                                                            
         EJECT                                                                  
*                                                                               
       ++INCLUDE MPQBLKD                                                        
*                                                                               
       ++INCLUDE MPQERRQS                                                       
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'033MPQTRAN   05/01/02'                                      
         END                                                                    
