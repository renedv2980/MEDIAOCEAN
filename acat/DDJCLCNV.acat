*          DATA SET DDJCLCNV   AT LEVEL 004 AS OF 05/01/02                      
*CATALP JCLCNV                                                                  
         SPACE 1                                                                
*PARM1   XL1   INPUT FLAGS                                                      
*        AL3   A(NX81 DOS JCL DECK INPUT)                                       
*PARM2   XL1   OUTPUT FLAGS                                                     
*        AL3   A(NX81 MVS JCL DECK OUTPUT)                                      
*PARM3   XL1   N/D                                                              
*        AL3   A(LIST OF GEN VALUES)                                            
         SPACE 1                                                                
*INPUT FLAGS   X'80'=DELETE DOS COMMENTS                                        
*              X'40'=DELETE DOS PAUSES                                          
*              X'01'=DELETE MVS SEPERATORS BEFORE EACH EXEC                     
         SPACE 1                                                                
*OUTPUT FLAGS  X'80'=N/D                                                        
*              X'40'=CONVERT FAILURE                                            
*              X'20'=CONVERT SUSPECT                                            
*              X'10'=CONVERT OK                                                 
*              X'08'=CONVERTED TO MVS EQUIVALENT                                
*              X'04'=CONVERTED TO MVS COMMENT                                   
*              X'02'=DELETED                                                    
*              X'01'=NO ACTION TAKEN                                            
         SPACE 1                                                                
* GEN VALUES   1ST  =JOB CLASS                                                  
*              2ND  =JOB MSGLEVEL 1                                             
*              3RD  =JOB MSGLEVEL 2                                             
*              4TH  =JOB MSGCLASS                                               
*              5TH  =PRT CLASS                                                  
         TITLE 'JCLCNV - CONVERT DOS JCL TO MVS JCL'                            
         PRINT NOGEN                                                            
JCLCNV   CSECT                                                                  
         NMOD1 WORKX-WORKD,**JCLC**,RA                                          
         USING WORKD,RC                                                         
         LR    R2,R1               R2=A(PARAM LIST)                             
         LM    R3,R5,0(R2)                                                      
         LA    R3,0(R3)            R3=A(DOS JCL)                                
         LA    R4,0(R4)            R4=A(MVS JCL)                                
         SPACE 2                                                                
JCLINI   XC    FLAGS(FLAGX-FLAGS),FLAGS                                         
         XC    ADDRS(ADDRX-ADDRS),ADDRS                                         
         L     RE,=A(JBX)                                                       
         MVI   0(RE),X'FF'         INITIALISE BEFORE JCL SAVE ADDR              
         ST    RE,NXTBEF                                                        
         L     RE,=A(JBXA)                                                      
         MVI   0(RE),X'FF'         INITIALISE BEFORE JCL SAVE A(ADDR)           
         ST    RE,NXTBEFA                                                       
         LA    R1,JOBTBL           INITIALISE JOB PARM TABLE                    
         BAS   RE,INITAB                                                        
         LA    R1,LSTTBL           INITIALISE LST PARM TABLE                    
         BAS   RE,INITAB                                                        
*                                                                               
JCLINI1  MVC   DFLTJOC,0(R5)       DEFAULT JOB CLASS                            
         MVC   DFLTML1,1(R5)       DEFAULT JOB MSGLEVEL 1                       
         MVC   DFLTML2,2(R5)       DEFAULT JOB MSGLEVEL 2                       
         MVC   DFLTMCL,3(R5)       DEFAULT JOB MSGCLASS                         
         MVC   DFLTSPC,4(R5)       DEFAULT SYSPRINT CLASS                       
         BAS   RE,SETJOBC          DEFAULT JOB CARD                             
         BAS   RE,SETSYPC          DEFAULT SYSPRINT CARD                        
         B     JCLNXT4                                                          
         SPACE 2                                                                
JCLOUT   MVC   0(1,R4),RESMVS      MOVE MVS CARD TO OUTPUT BUFFER               
         MVC   1(80,R4),JCL                                                     
         LA    R4,81(R4)                                                        
         MVI   RESMVS,0                                                         
         B     JCLNXT                                                           
         SPACE 2                                                                
JCLEOF   CLI   NXTBEFF,0           WAS ANY JCL SAVED BEFORE EXEC                
         BE    JCLEOF1                                                          
         MVI   MODE,1              YES SET MODE TO PROCESS BEFORES              
         LA    RE,JCLEOF1                                                       
         ST    RE,SAVERETN                                                      
         B     JCLNXT                                                           
JCLEOF1  MVI   0(R4),X'FF'         SET END OF MVS CARDS                         
         MVC   1(80,R4),SPACES                                                  
         MVC   4(1,R2),RETURN      RETURN MACRO RESULT OF CONVERSION            
         XMOD1 1                                                                
         EJECT                                                                  
JCLNXT   CLI   MODE,1              TEST IF PROCESSING SAVED BEFORES             
         BL    JCLNXT3                                                          
         BH    JCLNXT2                                                          
JCLNXT1  MVI   MODE,2              FIRST TIME                                   
         MVI   BEFEXEC,1           SET AFTER EXEC                               
         ST    R3,SAVER3           SAVE ADDR OF EXEC CARD                       
         L     R3,=A(JBX)                                                       
         ST    R3,NXTBEF           POINT TO START OF SAVE AREA                  
         L     RE,=A(JBXA)                                                      
         ST    RE,NXTBEFA          POINT TO START OF SAVE AREA ADDRS            
         B     JCLNXT4                                                          
JCLNXT2  L     RE,NXTBEFA          PROCESS NEXT SAVED BEFORE CARD               
         L     RF,0(RE)                                                         
         MVC   0(1,RF),RESULT      SET RESULT IN ORIGIONAL CARD                 
         OC    RETURN,RESULT                                                    
         LA    RE,4(RE)                                                         
         ST    RE,NXTBEFA                                                       
         LA    R3,81(R3)                                                        
         CLI   0(R3),X'FF'         TEST END OF SAVED BEFORE                     
         BNE   JCLNXT4                                                          
         MVI   MODE,0              SET BACK TO NORMAL MODE                      
         MVI   BEFEXEC,1           SET AFTER EXEC                               
         MVI   NXTBEFF,0                                                        
         L     RE,=A(JBX)                                                       
         MVI   0(RE),X'FF'                                                      
         ST    RE,NXTBEF           INITIALISE BEFORE JCL SAVE ADDR              
         L     RE,=A(JBXA)                                                      
         MVI   0(RE),X'FF'                                                      
         ST    RE,NXTBEFA          INITIALISE BEFORE JCL SAVE A(ADDR)           
         L     R3,SAVER3                                                        
         L     RF,SAVERETN                                                      
         BR    RF                                                               
*                                                                               
JCLNXT3  MVC   0(1,R3),RESULT      SET RESULT OF CONVERSION                     
         OC    RETURN,RESULT                                                    
         LA    R3,81(R3)           BUMP TO NEXT JCL CARD                        
*                                                                               
JCLNXT4  MVI   RESULT,0            INIT FOR NEW DOS JCL CARD                    
         MVI   RESMVS,0                                                         
         MVC   LSTJCL,THSJCL       SAVE JCL FLAG                                
         MVI   THSJCL,0                                                         
         MVC   JCL(80),1(R3)                                                    
         CLI   0(R3),X'FF'         TEST END OF DOS CARDS                        
         BNE   JCLTST                                                           
         B     JCLEOF                                                           
         EJECT                                                                  
JCLTST   CLI   BEFEXEC,0           TEST IF BEFORE EXEC CARD                     
         BNE   JCLTST3             NO PROCEED AS NORMAL                         
JCLTST0  LR    R1,R3               YES TEST TYPE OF CARD                        
         BAS   RE,TSTTYP                                                        
JCLTST0A TM    TYP,X'80'           JCL CARD                                     
         BZ    JCLTST0B                                                         
         MVI   DMCB,0              FIND WHAT TYPE OF JCL CARD                   
         BAS   RE,JCLSCN                                                        
         OC    VERBADDR,VERBADDR   TEST VALID JCL CARD                          
         BZ    JCLTST1             NO                                           
         TM    VERBFLAG,X'01'      YES TEST IF CONVERT NOW                      
         BO    JCLTST1             NO                                           
         B     JCLTST3             YES PROCEED AS NORMAL                        
JCLTST0B TM    TYP,X'08'           POWER CARD                                   
         BZ    JCLTST0C                                                         
         MVI   DMCB,1              FIND WHAT TYPE OF POWER CARD                 
         BAS   RE,JCLSCN                                                        
         OC    VERBADDR,VERBADDR   TEST VALID POWER CARD                        
         BZ    JCLTST1             NO                                           
         TM    VERBFLAG,X'01'      YES TEST IF CONVERT NOW                      
         BO    JCLTST1             NO                                           
         B     JCLTST3             YES PROCEED AS NORMAL                        
JCLTST0C EQU   *                                                                
*                                                                               
JCLTST1  MVI   NXTBEFF,1           SET DATA IN SAVE BEFORE AREA                 
         L     RE,NXTBEF           POINT TO NEXT SAVE SLOT                      
         MVC   0(81,RE),0(R3)                                                   
         LA    RE,81(RE)                                                        
         ST    RE,NXTBEF                                                        
         MVC   0(4,RE),=4X'FF'                                                  
         L     RF,NXTBEFA          POINT TO NEXT SAVE ADDR SLOT                 
         ST    R3,0(RF)                                                         
         LA    RF,4(RF)                                                         
         ST    RF,NXTBEFA                                                       
         MVC   0(4,RF),=4X'FF'                                                  
         B     JCLNXT                                                           
*                                                                               
JCLTST3  CLC   JCL(2),=C'//'       TEST IF JCL STATEMENT                        
         BE    JCLJCL                                                           
         CLC   JCL(2),=C'/*'       TEST EOD STATEMENT                           
         BE    JCLEOD                                                           
         CLC   JCL(2),=C'/&&'      TEST EOJ STATEMENT                           
         BE    JCLEOJ                                                           
         CLI   JCL,C'*'            CHECK DOS COMMENT CARD                       
         BNE   JCLDAT                                                           
         CLC   JCL(5),=C'* $$ '    CHECK DOS POWER CARD                         
         BE    POWJCL                                                           
         B     JCLCOM                                                           
         EJECT                                                                  
JCLDEL   MVI   RESULT,X'02'        DELETE THIS JCL CARD                         
         B     JCLNXT                                                           
         SPACE 2                                                                
JCLDAT   MVI   RESULT,X'01'        DATA CARD - NO ACTION REQUIRED               
         CLC   JCL(3),=C'IF END '                                               
         BNE   JCLDAT0                                                          
         MVI   IF,1                SET IN IF MODE                               
         CLC   JCL(6),=C'IF END '                                               
         BNE   *+8                                                              
         MVI   IF,0                SET END OF IF MODE                           
JCLDAT0  LR    R1,R3                                                            
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'02'           TEST REQUESTS HERE CARD                      
         BZ    JCLDAT1             NO                                           
         LA    R1,81(R3)                                                        
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'40'           TEST NEXT CARD FOR TERMINAT0R                
         BO    JCLOUT                                                           
         MVI   BEFEXEC,0           SET BEFORE EXEC IF TERMINATOR                
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
JCLDAT1  LA    RE,JCL              TEST DOS JCL IN DISGUISE                     
         LA    R0,10                                                            
JCLDAT2  CLC   0(9,RE),=C'ASSGN SYS'                                            
         BE    JCLDEL                                                           
         CLC   0(9,RE),=C'CLOSE SYS'                                            
         BE    JCLDEL                                                           
         CLC   0(4,RE),=C'MTC '                                                 
         BE    JCLDEL                                                           
         LA    RE,1(RE)                                                         
         BCT   R0,JCLDAT2                                                       
         B     JCLOUT                                                           
         SPACE 2                                                                
JCLEOD   MVI   BYTE,X'01'          END OF DATA -  POINT TO PREV CARD            
         LR    R1,R3                                                            
         SH    R1,=H'81'                                                        
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'06'           WAS PREV CARD REQUESTS HERE                  
         BNO   JCLEOD0                                                          
         MVI   BYTE,X'02'          YES DELETE THIS SPURIOUS EOD CARD            
JCLEOD0  LA    R1,81(R3)           POINT TO NEXT CARD                           
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'04'           IS NEXT DOS CARD DATA                        
         BZ    JCLEOD2             NO                                           
         MVI   EOD,1               YES SET INTERMEDIATE EOD CARD                
JCLEOD1  MVC   RESULT,BYTE         SET ACTION REQUIRED                          
         TM    BYTE,X'02'                                                       
         BO    JCLNXT                                                           
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
JCLEOD2  TM    BYTE,X'21'          IS NEXT CARD EOJ/EOF                         
         BNZ   JCLEOD2A            YES                                          
         CLC   1(8,R1),=C'* $$ EOJ'                                             
         BE    JCLEOD2A                                                         
         CLC   1(7,R1),=C'* $$EOJ'                                              
         BE    JCLEOD2A                                                         
         MVI   BEFEXEC,0           SET BEFORE EXEC                              
JCLEOD2A L     RE,LSTSYI           POINT TO LAST //SYSIN DD CARD                
         LTR   RE,RE                                                            
         BZ    JCLEOD1                                                          
         CLI   EOD,0               WERE THERE ANY INTERMEDIATE EOD'S            
         BE    JCLEOD1             NO                                           
JCLEOD3  MVC   17(09,RE),=C',DLM=''**'''                                        
         MVC   JCL(2),=C'**'                                                    
         MVI   EOD,0               SET NO INTERMEDIATE EOD CARDS                
         MVI   BYTE,X'18'                                                       
         B     JCLEOD1                                                          
         SPACE 2                                                                
JCLEOJ   MVC   JCL,SPACES          END OF JOB - CONVERT TO MVS                  
         MVC   JCL(2),=C'//'                                                    
         LA    R1,81(R3)           POINT TO NEXT CARD                           
         CLI   0(R1),X'FF'                                                      
         BE    JCLEOJ1                                                          
         CLC   1(8,R1),=C'* $$ EOJ'                                             
         BE    JCLEOJ1                                                          
         CLC   1(7,R1),=C'* $$EOJ'                                              
         BE    JCLEOJ1                                                          
         MVI   BEFEXEC,0           SET NOW BEFORE EXEC                          
JCLEOJ1  MVI   RESULT,X'18'                                                     
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
         SPACE 2                                                                
JCLCOM   TM    0(R2),X'80'         TEST TO DELETE COMMENTS                      
         BO    JCLDEL                                                           
         MVC   SAVEJCL,JCL         CONVERT DOS COMMENT TO MVS COMMENT           
         MVC   JCL,SPACES                                                       
         MVC   JCL(3),=C'//*'                                                   
         LA    RE,SAVEJCL+1                                                     
         LA    R0,40                                                            
JCLCOM1  CLI   0(RE),C' '          FIND FIRST CHR IN DOS COMMENT                
         BNE   JCLCOM2                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLCOM1                                                       
         B     JCLDEL                                                           
JCLCOM2  LA    RF,SAVEJCL+70       FIND LAST CHR IN DOS COMMENT                 
         SR    RF,RE               RF=LEN OF COMMENT - 1                        
         BM    JCLDEL                                                           
         CH    RF,=H'65'                                                        
         BNH   *+8                                                              
         LH    RF,=H'65'                                                        
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   JCL+5(0),0(RE)                                                   
         MVI   RESULT,X'14'        SET CONVERTED TO MVS COMMENT                 
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
         SPACE 2                                                                
JCLWRN   MVC   SAVEJCL,JCL         CONVERT TO MVS WARNING COMMENT               
         MVC   JCL,SPACES                                                       
         MVC   JCL(3),=C'//*'      SET WARNING FLAGS                            
         MVC   JCL+02(2),=C'**'                                                 
         MVC   JCL+69(2),=C'**'                                                 
         MVC   JCL+5(64),SAVEJCL                                                
         MVI   RESULT,X'44'        SET JCL CONTAINS WARNING COMMENTS            
         MVI   RESMVS,X'80'        SET MVS WARNING                              
         B     JCLOUT                                                           
         SPACE 2                                                                
JCLJCL   MVI   DMCB,0              DOS JCL CARD - SCAN FOR SYNTAX               
         BAS   RE,JCLSCN                                                        
         L     RF,VERBADDR         PICK UP PROCESS ROUTINE ADDR                 
         LTR   RF,RF                                                            
         BZ    JCLWRN                                                           
         BR    RF                  GO TO PROCESS ROUTINE                        
         SPACE 2                                                                
JCLPAU   TM    0(R2),X'40'         TEST TO DELETE PAUSE CARDS                   
         BO    JCLDEL                                                           
         MVC   SAVEJCL,JCL         CONVERT PAUSE TO MVS COMMENT                 
         MVC   JCL,SPACES                                                       
         MVC   JCL(3),=C'//*'                                                   
         MVI   JCL+3,C'P'                                                       
         L     RE,ASTROPRD         POINT TO START OF PAUSE TEXT                 
         L     RF,LOPRD                                                         
         CH    RF,=H'65'                                                        
         BNH   *+8                                                              
         LH    RF,=H'65'                                                        
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   JCL+5(0),OPRD                                                    
         MVI   RESULT,X'14'        SET CONVERTED TO MVS COMMENT                 
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
         SPACE 2                                                                
JCLDTE   MVI   LDATE,1             SET // DATE CARD PRESENT                     
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
         SPACE 2                                                                
JCLUPS   MVC   LUPSI,LOPRD+3       SET // UPSI CARD PRESENT                     
         MVC   UPSI,OPRD                                                        
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
         SPACE 2                                                                
JCLJOB   CLC   LOPRD,=F'8'         CONVERT // JOB CARD                          
         BH    JCLWRN                                                           
         CLC   LOPRD,=F'0'                                                      
         BE    JCLWRN                                                           
JCLJOB1  TM    POWJOBF,X'01'       TEST IF POWER JOB CARD                       
         BZ    JCLJOB2             NO                                           
         TM    POWJOBF,X'80'       TEST IF FIRST JOB CARD AFTER POWER           
         BO    JCLJOB2                                                          
         OI    POWJOBF,X'80'       SET NOT FIRST // JOB CARD                    
         L     R1,LSTJOB                                                        
         MVC   3(8,R1),OPRD        OVERWRITE WITH JOB NAME                      
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
JCLJOB2  L     R1,=A(JJ1)          CREATE BASIC JOB CARD                        
         MVC   2(8,R1),OPRD                                                     
         BAS   RE,PUTJOC                                                        
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
         SPACE 2                                                                
JCLSET   CLC   OPRD(6),=C'SYSLST'  CHECK VALID SETPRT CARD                      
         BNE   JCLWRN                                                           
         L     RE,AENDOPRD                                                      
         CLI   0(RE),C','                                                       
         BNE   JCLWRN                                                           
         LA    RE,1(RE)                                                         
         CLC   0(6,RE),=C'CHARS='                                               
         BNE   JCLWRN                                                           
         CLI   10(RE),C' '                                                      
         BNE   JCLWRN                                                           
         OI    DOSSETF,X'01'       SET SETPRT CARD INPUT                        
         MVC   SETPRT,0(RE)                                                     
         L     RE,=A(JP1)          POINT TO CURRENT SYSPRINT CARDS              
         CLC   23(10,RE),SPACES                                                 
         BE    JCLSET2             SYSPRINT CARD IS BASIC DEFAULT               
         CLI   80(RE),C' '                                                      
         BNE   JCLWRN              ALREADY HAVE CHARS=                          
         LA    RE,15(RE)           TERM FISTRC CARD WITH COMMA                  
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         L     RE,=A(JP2)          INITIALISE CONTINUATION CARD                 
         MVC   0(2,RE),=C'//'                                                   
JCLSET2  LA    RE,15(RE)           FIND NEXT SLOT ON CARD                       
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         MVC   1(10,RE),SETPRT     APPEND CHARS=XXXX TO SYSPRINT                
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
         EJECT                                                                  
JCLDLB   CLC   LOPRD,=F'8'         CHECK VALID DTF NAME FOR DISK                
         BH    JCLWRN                                                           
         CLC   LOPRD,=F'0'                                                      
         BE    JCLWRN                                                           
         MVI   THSJCL,X'80'        SET THIS JCL CARD IS DLBL                    
         MVC   SAVEJCL,JCL                                                      
         BAS   RE,DSNSCN           FIND DOS DSN IF ANY                          
*                                                                               
JCLDLB1  CLC   OPRD(7),=C'SORTWK1' DLBL FOR SORTWK1                             
         BNE   JCLDLB2                                                          
         MVI   RESULT,X'18'                                                     
         L     R1,=A(SORTLIB)                                                   
         MVC   JCL,0(R1)           //SORTLIB  DD                                
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         L     R1,=A(SORTOUT)                                                   
         MVC   JCL,0(R1)           //SYSOUT   DD DUMMY                          
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         L     R1,=A(SORTWK1)                                                   
         MVC   JCL,0(R1)           //SORTWK1  DD                                
         L     R1,=A(SORTWK1A)                                                  
         CLI   0(R1),C' '          TEST IF SECOND CARD DEFINED                  
         BE    JCLDLB1A            NO                                           
         LA    RE,JCL+15           YES TERMINATE FIRST WITH COMMA               
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
JCLDLB1A ST    R4,LSTDLB           SAVE ADDR OF LAST MVS DLBL DD CARD           
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         L     R1,=A(SORTWK1A)                                                  
         CLI   0(R1),C' '          TEST IF SECOND CARD DEFINED                  
         BE    JCLNXT              NO                                           
         MVC   JCL,0(R1)                                                        
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
*                                                                               
JCLDLB2  CLC   OPRD(7),=C'SORTWK9' DLBL FOR SORTWK9                             
         BNE   JCLDLBA                                                          
         MVI   RESULT,X'18'                                                     
         L     R1,=A(SORTWK9)                                                   
         MVC   JCL,0(R1)           //SORTWK9  DD                                
         L     R1,=A(SORTWK9A)                                                  
         CLI   0(R1),C' '          TEST IF SECOND CARD DEFINED                  
         BE    JCLDLB2A            NO                                           
         LA    RE,JCL+15           YES TERMINATE FIRST WITH COMMA               
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
JCLDLB2A ST    R4,LSTDLB           SAVE AADR OF LAST MVS DLBL DD CARD           
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         L     R1,=A(SORTWK9A)                                                  
         CLI   0(R1),C' '          TEST IF SECOND CARD DEFINED                  
         BE    JCLNXT              NO                                           
         MVC   JCL,0(R1)                                                        
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
*                                                                               
JCLDLBA  LA    RE,OPRD                                                          
         LA    R0,6                                                             
JCLDLBB  CLC   0(3,RE),=C'OUT'     SEARCH DTF NAME FOR CHRS OUT                 
         BE    JCLDLBO                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLDLBB                                                       
         LA    RE,OPRD                                                          
         LA    R0,6                                                             
JCLDLBC  CLC   0(2,RE),=C'IN'      SEARCH DTF NAME FOR CHRS IN                  
         BE    JCLDLBI                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLDLBC                                                       
         B     JCLDLBO             DEFAULT TO OUTPUT DISK                       
*                                                                               
JCLDLBI  L     R1,=A(DISKDDI)      INPUT DISK                                   
         MVI   RESULT,X'28'        SET DOS SUSPECT CONVERT                      
         OI    THSJCL,X'01'        SET INPUT FILE DLBL                          
         MVC   JCL,0(R1)           //XXXXXXX  DD                                
         MVC   JCL+2(8),OPRD                                                    
         LA    RE,JCL+15           TERMINATE FIRST WITH COMMA                   
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         ST    R4,LSTDLB           SAVE ADDR OF LAST MVS DLBL DD CARD           
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
JCLDLBI1 MVC   JCL,SPACES          INITIALISE CONTINUATION DD CARD              
         MVC   JCL(2),=C'//'                                                    
         LA    RE,JCL+15                                                        
         MVC   0(4,RE),=C'DSN='    SET DSN=XXXXXXX                              
         LA    RE,4(RE)                                                         
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    JCLDLBI2                                                         
         L     RF,LDSNDOS                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),DSNDOS                                                   
         B     JCLDLBI3                                                         
JCLDLBI2 MVC   0(8,RE),OPRD                                                     
JCLDLBI3 MVI   RESMVS,X'80'                                                     
         BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
*                                                                               
JCLDLBO  L     R1,=A(DISKDDO)      OUTPUT DISK                                  
         MVI   RESULT,X'28'        SET DOS SUSPECT CONVERT                      
         MVC   JCL,0(R1)           //XXXXXXX  DD                                
         MVC   JCL+2(8),OPRD                                                    
         LA    RE,JCL+15           FIND NEXT BLANK COL                          
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         ST    R4,LSTDLB           SAVE ADDR OF LAST MVS DLBL DD CARD           
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
JCLDLBO1 MVC   JCL,SPACES          INITIALISE CONTINUATION DD CARD              
         MVC   JCL(2),=C'//'                                                    
         LA    RE,JCL+15                                                        
JCLDLBO2 TM    DSNFLAG,X'04'       TEST IF DOS DSN STARTS WITH &P               
         B     JCLDLBO3            NOP                                          
         MVC   0(4,RE),=C'DSN='    SET DSN=&&XXXXXXX                            
         LA    RE,4(RE)                                                         
         MVC   0(2,RE),=C'&&&&'                                                 
         LA    RE,2(RE)                                                         
         MVC   0(8,RE),OPRD                                                     
         MVI   RESMVS,X'80'                                                     
         BAS   RE,PUTJCL                                                        
         L     RE,LSTDLB           CHANGE DISP FROM KEEP TO DELETE              
         LA    RF,71(RE)                                                        
         LA    RE,15(RE)                                                        
         LA    R0,60                                                            
         CLC   0(5,RE),=C'KEEP)'                                                
         BE    *+16                                                             
         LA    RE,1(RE)                                                         
         BCT   R0,*-14                                                          
         B     JCLNXT                                                           
         SR    RF,RE                                                            
         BM    JCLNXT                                                           
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   WORK(0),5(RE)                                                    
         MVC   0(7,RE),=C'DELETE)'                                              
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   7(0,RE),WORK                                                     
         B     JCLNXT                                                           
JCLDLBO3 MVC   0(4,RE),=C'DSN='    SET DSN=XXXXXXX                              
         LA    RE,4(RE)                                                         
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    JCLDLBO4                                                         
         L     RF,LDSNDOS                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),DSNDOS                                                   
         B     JCLDLBO5                                                         
JCLDLBO4 MVC   0(8,RE),OPRD                                                     
JCLDLBO5 MVI   RESMVS,X'80'                                                     
         BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
         EJECT                                                                  
JCLEXT   CLC   LOPRD,=F'8'         CONVERT // EXTENT CARD                       
         BH    JCLEXTE                                                          
         CLC   LOPRD,=F'0'                                                      
         BE    JCLEXTE                                                          
         TM    LSTJCL,X'80'                                                     
         BZ    JCLEXTF             LAST CARD MUST BE DLBL                       
         MVC   SAVEJCL,JCL                                                      
         LA    RF,JCL                                                           
         LA    R0,70                                                            
         SR    R1,R1                                                            
JCLEXT1  CLI   0(RF),C','          SEARCH FOR NUMBER OF TRACKS                  
         BE    JCLEXT3                                                          
JCLEXT2  LA    RF,1(RF)                                                         
         BCT   R0,JCLEXT1                                                       
         B     JCLEXTE                                                          
JCLEXT3  LA    R1,1(R1)                                                         
         CH    R1,=H'5'            FOLLOWS FIFTH COMMA                          
         BNE   JCLEXT2                                                          
         LA    RF,1(RF)                                                         
         LR    RE,RF                                                            
         LA    R0,6                                                             
JCLEXT4  CLI   0(RE),C'0'          FIND END OF NUM OF TRACKS                    
         BL    JCLEXT5                                                          
         CLI   0(RE),C'9'                                                       
         BH    JCLEXTE                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLEXT4                                                       
         B     JCLEXTE                                                          
JCLEXT5  SR    RE,RF                                                            
         BNP   JCLEXTE                                                          
         BCTR  RE,0                                                             
         EX    RE,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,RF)                                                      
         L     RE,LSTDLB           PICK UP CONVERTED DD STATEMENT               
         LA    R0,60                                                            
JCLEXT6  CLC   0(6,RE),=C'SPACE='                                               
         BE    JCLEXT7                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLEXT6                                                       
         B     JCLEXTE                                                          
JCLEXT7  SR    R0,R0               CONVERT TRACKS TO PRIM/SECD                  
         CVB   R1,DUB                                                           
         D     R0,=F'4'                                                         
         CVD   R1,DUB              SET PRIMARY                                  
         OI    DUB+7,X'0F'                                                      
         CVD   R1,DUB1             SET SECONDARY                                
         OI    DUB1+7,X'0F'                                                     
JCLEXT8  UNPK  12(5,RE),DUB        MOVE IN NUMBER OF TRACKS                     
         UNPK  18(5,RE),DUB1                                                    
         MVI   RESULT,X'18'                                                     
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
JCLEXTE  L     RE,LSTDLB                                                        
         LTR   RE,RE                                                            
         BZ    *+8                                                              
         MVI   0(RE),X'80'         SET PREVIOUS DD STATEMENT SUSPECT            
JCLEXTF  MVI   RESULT,X'28'        FAILURE TO CONVERT                           
         B     JCLNXT                                                           
         EJECT                                                                  
JCLEXE   CLC   OPRD(4),=C'PROC='   CONVERT // EXEC CARD                         
         BE    JCLDEL                                                           
         CLC   LOPRD,=F'8'                                                      
         BNH   JCLEXE0A                                                         
JCLEXE0  MVC   OPRD(8),=8C'X'      SET DUMMY EXEC NAME                          
         LA    RF,8                                                             
         ST    RF,LOPRD                                                         
JCLEXE0A CLC   OPRD(7),=C'SPONBIL' TEST SPECIAL EXEC NAME                       
         BNE   *+16                                                             
         MVC   OPRD(8),=CL8'SPONSOR'                                            
         MVC   LOPRD,=F'7'                                                      
         L     RF,LOPRD                                                         
         SH    RF,=H'1'                                                         
         BM    JCLEXE0                                                          
         BAS   RE,TSTPRG           SET PROGRAM TYPE                             
         LA    R1,81(R3)           POINT TO NEXT DOS CARD                       
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'02'           IS IT A REQUESTS HERE CARD                   
         BO    JCLEXE1             YES                                          
         TM    PRG,X'02'           IS PROGRAM HAS PROC                          
         BO    JCLEXE1             YES                                          
         B     JCLEXE2                                                          
JCLEXE1  L     R1,=A(EXEC1)        //XXXXX   EXEC PROC=                         
         LA    RE,20                                                            
         B     JCLEXE3                                                          
JCLEXE2  L     R1,=A(EXEC2)        //XXXXX   EXEC PGM=                          
         LA    RE,19                                                            
JCLEXE3  MVC   SAVEJCL,0(R1)                                                    
         LA    RE,SAVEJCL(RE)                                                   
         L     RF,LOPRD                                                         
         SH    RF,=H'1'                                                         
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),OPRD                                                     
         LA    RE,1(RE,RF)         POINT TO END OF EXEC NAME                    
         CLI   LUPSI,0                                                          
         BE    JCLEXE3A                                                         
         MVC   0(6,RE),=C',PARM='                                               
         LA    RE,6(RE)                                                         
         IC    RF,LUPSI                                                         
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),UPSI                                                     
         MVI   LUPSI,0                                                          
         LA    RE,1(RE,RF)         POINT TO END OF EXEC NAME                    
JCLEXE3A MVC   JCL,SAVEJCL                                                      
*                                                                               
JCLEXE4  IC    RF,FSTEXEC          BUMP EXEC CARD NUMBER                        
         LA    RF,1(RF)                                                         
         STC   RF,FSTEXEC                                                       
         TM    0(R2),X'01'         TEST TO DELETE EXEC SEPERATORS               
         BO    JCLEXE4A                                                         
         MVC   SAVEJCL,JCL                                                      
         MVC   JCL,SPACES                                                       
         MVC   JCL(3),=C'//*'                                                   
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         MVC   JCL,SAVEJCL                                                      
JCLEXE4A ST    R4,LSTEXE                                                        
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL           RELEASE CONVERTED EXEC CARD                  
         MVI   EOD,0                                                            
         TM    PRG,X'08'           TEST IF PRG CAN DO LOADS                     
         BZ    JCLEXE5             NO                                           
         L     R1,=A(LOADLIB)                                                   
         MVC   JCL,0(R1)           RELEASE MVS LOAD LIB CARD                    
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
*                                                                               
JCLEXE5  CLI   NXTBEFF,0           WAS ANY JCL SAVED BEFORE EXEC                
         BE    AFTEXE                                                           
         MVI   MODE,1              YES SET MODE TO PROCESS BEFORES              
         LA    RE,AFTEXE                                                        
         ST    RE,SAVERETN         SAVE RETURN ADDRESS                          
         B     JCLNXT                                                           
*                                                                               
AFTEXE   MVI   BEFEXEC,1           SET AFTER EXEC CARD                          
         MVI   THSJCL,X'40'        SET JCL IS DOS EXEC CARD                     
         MVI   RESULT,X'18'                                                     
         ST    R4,LSTSYP           INSERT //SYSPRINT CARD                       
         BAS   RE,PUTSPC                                                        
         LA    R1,81(R3)           POINT TO NEXT DOS CARD                       
         BAS   RE,TSTTYP                                                        
         TM    TYP,X'44'           TEST NEXT CARD DATA/EOD                      
         BNZ   AFTEXE3             YES                                          
         XC    LSTSYI,LSTSYI       NO SYSIN CARD REQUIRED                       
         B     JCLNXT                                                           
AFTEXE3  L     R1,=A(SYSIN)        INSERT //SYSIN CARD                          
         MVC   JCL,0(R1)                                                        
         TM    TYP,X'02'           TEST IF REQUESTS HERE CARD                   
         BO    AFTEXE4                                                          
         TM    PRG,X'01'           TEST IF CONTROLLER PROGRAM                   
         BO    AFTEXE4                                                          
         B     *+10                                                             
AFTEXE4  MVC   JCL+16(09),=C',DLM=''**'''                                       
         ST    R4,LSTSYI                                                        
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         CLI   LDATE,0                                                          
         BE    JCLNXT                                                           
         MVC   JCL,SPACES                                                       
         MVC   JCL(9),=C'DATE=&&IPL'                                            
         TM    PRG,X'04'           TEST IF PROGRAM SUPPORTS DATE= CARD          
         BZ    JCLNXT                                                           
         MVI   RESMVS,0                                                         
         BAS   RE,PUTJCL                                                        
         B     JCLNXT                                                           
         EJECT                                                                  
JCLTLB   CLC   LOPRD,=F'8'         CHECK VALID DTF NAME FOR TAPE                
         BH    JCLWRN                                                           
         CLC   LOPRD,=F'0'                                                      
         BE    JCLWRN                                                           
         BAS   RE,DSNSCN           FIND DSN IF PRESENT                          
         MVI   RESULT,0                                                         
         MVI   RESMVS,0                                                         
         LA    RE,OPRD                                                          
         LA    R0,6                                                             
JCLTLB1  CLC   0(3,RE),=C'OUT'     SEARCH DTF NAME FOR CHRS OUT                 
         BE    JCLTLBO                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLTLB1                                                       
         LA    RE,OPRD                                                          
         LA    R0,6                                                             
JCLTLB2  CLC   0(2,RE),=C'IN'      SEARCH DTF NAME FOR CHRS IN                  
         BE    JCLTLBI                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLTLB2                                                       
         MVI   RESULT,X'28'                                                     
         MVI   RESMVS,X'80'                                                     
         B     JCLTLBO             DEFAULT TO OUTPUT TAPE                       
*                                                                               
JCLTLBI  L     R1,=A(TAPEDDI)      INPUT TAPE                                   
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    *+8                 NO                                           
         L     R1,=A(TAPEDDI1)     YES USE CATLG VERSION                        
         MVC   SAVEJCL,JCL                                                      
         MVC   JCL,0(R1)           //XXXXXXX  DD                                
         MVC   JCL+2(8),OPRD                                                    
         LA    RE,JCL+15           FIND NEXT BLANK COL                          
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         BAS   RE,PUTJCL                                                        
JCLTLBI1 MVC   JCL,SPACES          INITIALISE CONTINUATION DD CARD              
         MVC   JCL(2),=C'//'                                                    
         LA    RE,JCL+15                                                        
JCLTLBI2 MVC   0(4,RE),=C'DSN='    SET DSN=XXXXXXX                              
         LA    RE,4(RE)                                                         
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    JCLTLBI5            NO                                           
         LR    R1,RE               YES SET CATLG TYPE DSN                       
         MVC   0(8,RE),=C'XXXTAPE.'                                             
         LA    RE,8(RE)                                                         
         L     RF,LDSNDOS          YES SET MVS DSN TO DOS DSN                   
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),DSNDOS                                                   
         LA    RE,1(RE,RF)                                                      
         MVC   0(3,RE),=C'(0)'                                                  
         CLI   DSNDOS,C'A'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'ACC'                                                  
         B     JCLTLBI4                                                         
         CLI   DSNDOS,C'S'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'SPT'                                                  
         B     JCLTLBI4                                                         
         CLI   DSNDOS,C'P'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'PRT'                                                  
         B     JCLTLBI4                                                         
         CLI   DSNDOS,C'R'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'REP'                                                  
         B     JCLTLBI4                                                         
JCLTLBI3 MVI   RESULT,X'28'                                                     
         MVI   RESMVS,X'80'                                                     
         B     JCLTLBIX                                                         
JCLTLBI4 MVI   RESULT,X'18'                                                     
         MVI   RESMVS,0                                                         
         B     JCLTLBIX                                                         
JCLTLBI5 MVC   0(8,RE),OPRD        SET MVS DSN TO DTF NAME                      
         MVI   RESULT,X'28'                                                     
         MVI   RESMVS,X'80'                                                     
JCLTLBIX BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
*                                                                               
JCLTLBO  L     R1,=A(TAPEDDO)      OUTPUT TAPE                                  
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    *+8                 NO                                           
         L     R1,=A(TAPEDDO1)     YES USE CATLG VERSION                        
         MVC   SAVEJCL,JCL                                                      
         MVC   JCL,0(R1)           //XXXXXXX  DD                                
         MVC   JCL+2(8),OPRD                                                    
         LA    RE,JCL+15           FIND NEXT BLANK COL                          
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C','                                                       
         BAS   RE,PUTJCL                                                        
JCLTLBO1 MVC   JCL,SPACES          INITIALISE CONTINUATION DD CARD              
         MVC   JCL(2),=C'//'                                                    
         LA    RE,JCL+15                                                        
JCLTLBO2 MVC   0(4,RE),=C'DSN='    SET DSN=XXXXXXX                              
         LA    RE,4(RE)                                                         
         TM    DSNFLAG,X'02'       TEST IF DOS DSN PRESENT                      
         BZ    JCLTLBO5            NO                                           
         LR    R1,RE               YES SET CATLG TYPE DSN                       
         MVC   0(8,RE),=C'XXXTAPE.'                                             
         LA    RE,8(RE)                                                         
         L     RF,LDSNDOS          SET MVS DSN TO DOS DSN                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RE),DSNDOS                                                   
         LA    RE,1(RE,RF)                                                      
         MVC   0(4,RE),=C'(+1)'                                                 
         CLI   DSNDOS,C'A'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'ACC'                                                  
         B     JCLTLBO4                                                         
         CLI   DSNDOS,C'S'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'SPT'                                                  
         B     JCLTLBO4                                                         
         CLI   DSNDOS,C'P'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'PRT'                                                  
         B     JCLTLBO4                                                         
         CLI   DSNDOS,C'R'                                                      
         BNE   *+14                                                             
         MVC   0(3,R1),=C'REP'                                                  
         B     JCLTLBO4                                                         
JCLTLBO3 MVI   RESULT,X'28'                                                     
         MVI   RESMVS,X'80'                                                     
         B     JCLTLBOX                                                         
JCLTLBO4 MVI   RESULT,X'18'                                                     
         MVI   RESMVS,0                                                         
         B     JCLTLBOX                                                         
JCLTLBO5 MVC   0(8,RE),OPRD                                                     
         MVI   RESULT,X'28'        SET DOS SUSPECT CONVERT                      
         MVI   RESMVS,X'80'                                                     
JCLTLBOX BAS   RE,PUTJCL                                                        
         B     JCLNXT              CARD HAS BEEN CONVERTED                      
         EJECT                                                                  
POWJCL   MVI   DMCB,1              DOS POWER CARD - SCAN FOR SYNTAX             
         BAS   RE,JCLSCN                                                        
         L     RF,VERBADDR         PICK UP PROCESS ROUTINE ADDR                 
         LTR   RF,RF                                                            
         BZ    JCLWRN                                                           
         BR    RF                  GO TO PROCESS ROUTINE                        
         SPACE 2                                                                
POWEOJ   MVI   BYTE,X'18'          POWER EOJ                                    
         LR    R1,R4                                                            
         SH    R1,=H'81'                                                        
         CLC   1(2,R1),=C'//'      CHECK LAST MVS CARD FOR EOJ                  
         BNE   POWEOJ1                                                          
         CLC   3(40,R1),SPACES                                                  
         BNE   POWEOJ1                                                          
         MVI   BYTE,X'02'                                                       
POWEOJ1  MVC   JCL,SPACES          CONVERT POWER EOJ TO MVS EOJ                 
         MVC   JCL(2),=C'//'                                                    
         LA    R1,81(R3)           POINT TO NEXT DOS CARD                       
         CLI   0(R1),X'FF'                                                      
         BE    *+8                                                              
         MVI   BEFEXEC,0           SET NOW BEFORE EXEC                          
         OC    RESULT,BYTE                                                      
         TM    RESULT,X'02'                                                     
         BO    JCLNXT                                                           
         MVI   RESMVS,0                                                         
         B     JCLOUT                                                           
         SPACE 2                                                                
POWCTL   CLC   OPRD(6),=C'CLASS='  POWER CTL                                    
         BNE   JCLWRN                                                           
         MVC   DFLTJOC,OPRD+6                                                   
         OI    RESULT,X'18'                                                     
         B     JCLOUT                                                           
         SPACE 2                                                                
POWJOB   LA    R1,JOBTBL           POWER JOB                                    
         BAS   RE,INITAB           INITIALISE JOB PARM TABLE                    
         LA    R1,JOBTBL                                                        
         BAS   RE,MERGE            MERGE IN JOB CARD PARMS                      
         BE    JCLWRN                                                           
         MVI   POWJOBF,X'01'       SET POWER JOB CARD                           
         BAS   RE,SETJOBC                                                       
         L     RE,=A(JJ1)                                                       
         LA    RE,40(RE)                                                        
         MVC   0(20,RE),SPACES     CLEAR PRESET DEFAULT VALUE                   
POWJOB1  CLI   JOBNAME,C' '                                                     
         BE    POWJOB2                                                          
         L     RF,=A(JJ1)                                                       
         MVC   2(8,RF),JOBNAME                                                  
POWJOB2  CLI   JOBCLASS,C' '                                                    
         BNE   *+10                                                             
         MVC   JOBCLASS(1),DFLTJOC                                              
         MVC   0(7,RE),=C',CLASS='                                              
         MVC   7(1,RE),JOBCLASS                                                 
         LA    RE,8(RE)                                                         
POWJOB3  CLI   JOBDISP,C' '                                                     
         BE    POWJOB4                                                          
         CLI   JOBDISP,C'H'                                                     
         BNE   POWJOB3A                                                         
         MVC   0(12,RE),=C',TYPRUN=HOLD'                                        
         LA    RE,12(RE)                                                        
         B     POWJOB4                                                          
POWJOB3A EQU   *                                                                
POWJOB4  CLI   JOBPRI,C' '                                                      
         BE    POWJOB5                                                          
         ZIC   RF,JOBPRI+8                                                      
         SH    RF,=H'1'                                                         
         BM    POWJOB5                                                          
         MVC   0(6,RE),=C',PRTY='                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   6(0,RE),JOBPRI                                                   
         LA    RE,7(RE,RF)                                                      
POWJOB5  ST    R4,LSTJOB           SAVE A(LAST JOB CARD)                        
         BAS   RE,PUTJOC                                                        
         MVI   RESULT,X'18'                                                     
         B     JCLNXT                                                           
         SPACE 2                                                                
POWLST   LA    R1,LSTTBL           POWER LST                                    
         BAS   RE,INITAB           INITIALISE LST PARM TABLE                    
         LA    R1,LSTTBL                                                        
         BAS   RE,MERGE            MERGE IN LST CARD PARMS                      
         BE    JCLWRN                                                           
         OI    POWLSTF,X'01'       SET POWER LIST CARD                          
         BAS   RE,SAVSYPC          SAVE CURRENT SYSPRINT CARD                   
         BAS   RE,SETSYPC          INITIALISE NEW DEFAULT SYSPRINT CARD         
         L     RE,=A(JP1)                                                       
         LA    RE,15(RE)                                                        
         MVC   0(20,RE),SPACES     CLEAR PRESET DEFAULT VALUE                   
POWLST1  CLI   LSTCLASS,C' '                                                    
         BNE   *+10                                                             
         MVC   LSTCLASS(1),DFLTSPC                                              
         MVC   0(11,RE),=C'SYSOUT=( ,,'                                         
         MVC   8(1,RE),LSTCLASS                                                 
         MVC   11(4,RE),LSTFNO                                                  
         CLC   LSTFNO,SPACES                                                    
         BNE   POWLST1A                                                         
         MVC   7(4,RE),SPACES                                                   
         MVC   7(1,RE),LSTCLASS                                                 
         LA    RE,8(RE)                                                         
         B     POWLST2                                                          
POWLST1A LA    RE,11(RE)                                                        
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
         MVI   0(RE),C')'                                                       
         LA    RE,1(RE)                                                         
POWLST2  CLI   LSTDISP,C' '                                                     
         BE    POWLST3                                                          
         CLI   LSTDISP,C'H'                                                     
         BNE   POWLST2A                                                         
         MVC   0(9,RE),=C',HOLD=YES'                                            
         LA    RE,9(RE)                                                         
         B     POWLST3                                                          
POWLST2A EQU   *                                                                
POWLST3  MVC   0(11,RE),=C',COPIES=001'                                         
         CLI   LSTCOPY,C' '                                                     
         BE    POWLST3B                                                         
POWLST3A CLI   LSTCOPY+8,0                                                      
         BE    POWLST3B                                                         
         TM    LSTCOPY+9,X'80'                                                  
         BZ    POWLST3B                                                         
         LH    R0,LSTCOPY+10                                                    
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  8(3,RE),DUB                                                      
POWLST3B LA    RE,11(RE)                                                        
*                                                                               
POWLST4  CLC   LSTFCB(4),=C'$$$$'                                               
         BNE   POWLST4A                                                         
         MVC   LSTFCB(4),LSTFCB+4                                               
         MVC   LSTFCB+4(4),SPACES                                               
POWLST4A CLI   LSTFCB,C' '                                                      
         BE    POWLST5                                                          
         MVC   0(5,RE),=C',FCB='                                                
         MVC   5(4,RE),LSTFCB                                                   
         LA    RE,5(RE)                                                         
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
*                                                                               
POWLST5  CLI   LSTCHARS,C' '       TEST ANY 3800 COMMANDS                       
         BNE   POWLSTA                                                          
         B     POWLSTX                                                          
*                                                                               
POWLSTA  MVI   0(RE),C','          SET FOR CONTINUATION CARD                    
         L     RE,=A(JP2)                                                       
         MVC   0(2,RE),=C'//'                                                   
         LA    RE,15(RE)                                                        
*                                                                               
POWLSTB  CLI   LSTCHARS,C' '                                                    
         BE    POWLSTC                                                          
         MVC   0(6,RE),=C'CHARS='                                               
         MVC   6(4,RE),LSTCHARS                                                 
         LA    RE,6(RE)                                                         
         CLI   0(RE),C' '                                                       
         BE    *+12                                                             
         LA    RE,1(RE)                                                         
         B     *-12                                                             
*                                                                               
POWLSTC  EQU   *                                                                
*                                                                               
POWLSTX  MVI   RESULT,X'18'        SET CONVERTED OK                             
         CLI   IF,0                                                             
         BE    JCLNXT              EXIT IF NOT INSIDE IF                        
         OI    POWLSTF,X'80'                                                    
         ST    R4,LSTSYP                                                        
         BAS   RE,PUTSPC           RELEASE SYSPRINT CARD IF INSIDE IF           
         BAS   RE,RESSYPC          RESTORE SYSPRINT CARD                        
         B     JCLNXT                                                           
         SPACE 2                                                                
         EJECT                                                                  
PUTJCL   MVC   0(1,R4),RESMVS      MOVE MVS CARD TO OUTPUT BUFFER               
         MVC   1(80,R4),JCL                                                     
         LA    R4,81(R4)                                                        
         MVI   RESMVS,0                                                         
         BR    RE                                                               
         SPACE 2                                                                
PUTSPC   L     R1,=A(JP1)          MOVE SYSPRINT CARDS TO BUFFER                
         CLI   0(R1),C' '                                                       
         BER   RE                                                               
         MVI   0(R4),0                                                          
         CLI   0(R1),C'/'          TEST IF SUSPECT CONVERT                      
         BE    *+12                                                             
         MVI   0(R1),C'/'                                                       
         MVI   0(R4),X'80'         SET SUSPECT IN OUTPUT BUFFER                 
         MVC   1(80,R4),0(R1)                                                   
         LA    R4,81(R4)                                                        
         LA    R1,80(R1)                                                        
         B     PUTSPC+4                                                         
         SPACE 2                                                                
PUTJOC   L     R1,=A(JJ1)          MOVE JOB CARDS TO BUFFER                     
         CLI   0(R1),C' '                                                       
         BER   RE                                                               
         MVI   0(R4),0                                                          
         CLI   0(R1),C'/'          TEST IF SUSPECT CONVERT                      
         BE    *+12                                                             
         MVI   0(R1),C'/'                                                       
         MVI   0(R4),X'80'         SET SUSPECT IN OUTPUT BUFFER                 
         MVC   1(80,R4),0(R1)                                                   
         LA    R4,81(R4)                                                        
         LA    R1,80(R1)                                                        
         B     PUTJOC+4                                                         
         EJECT                                                                  
TSTTYP   MVI   TYP,0               SET TYPE OR CARD POINTED TO BY R1            
         CLI   0(R1),X'FF'                                                      
         BNE   *+10                                                             
         OI    TYP,X'01'           SET END IF INPUT                             
         BR    RE                                                               
         CLC   1(2,R1),=C'//'                                                   
         BNE   *+10                                                             
         OI    TYP,X'80'           SET JCL STATEMENT                            
         BR    RE                                                               
         CLC   1(2,R1),=C'/*'                                                   
         BNE   *+10                                                             
         OI    TYP,X'40'           SET EOD CARD                                 
         BR    RE                                                               
         CLC   1(2,R1),=C'/&&'                                                  
         BNE   *+10                                                             
         OI    TYP,X'20'           SET EOJ CARD                                 
         BR    RE                                                               
         CLC   1(4,R1),=C'* $$ EOJ'                                             
         BNE   *+10                                                             
         OI    TYP,X'08'           SET POWER CARD                               
         BR    RE                                                               
         CLI   1(R1),C'*'                                                       
         BNE   *+10                                                             
         OI    TYP,X'10'           SET DOS COMMENT CARD                         
         BR    RE                                                               
         OI    TYP,X'04'           SET ORDINARY DATA CARD                       
         CLC   1(13,R1),=C'REQUESTS HERE'                                       
         BNE   *+10                                                             
         OI    TYP,X'02'           SET SPECIAL DATA CARD                        
         BR    RE                                                               
         CLC   1(8,R1),=C'OLD SPOT'                                             
         BNER  RE                                                               
         OI    TYP,X'02'           SET SPECIAL DATA CARD                        
         BR    RE                                                               
         SPACE 2                                                                
TSTPRG   MVI   PRG,0               SET PROGRAM FLAG                             
         L     R1,=A(PRGTBL)                                                    
         SR    RF,RF                                                            
TSTPRG1  CLI   0(R1),C' '          TEST END OF TABLE                            
         BE    TSTPRGX                                                          
         IC    RF,8(R1)            GET LEN OF COMPARE - 1                       
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   OPRD(0),0(R1)                                                    
         BE    *+12                                                             
         LA    R1,10(R1)                                                        
         B     TSTPRG1                                                          
         MVC   PRG,9(R1)           MOVE PROGRAM FLAGS FROM TABLE                
TSTPRGX  BR    RE                                                               
         EJECT                                                                  
JCLSCN   NTR1                      SCAN JCL/POWER CARD                          
         MVC   VERB,SPACES                                                      
         MVI   VERBFLAG,0                                                       
         XC    VERBADDR,VERBADDR                                                
         MVC   OPRD,SPACES                                                      
         XC    LOPRD,LOPRD                                                      
         XC    ASTROPRD,ASTROPRD                                                
         XC    AENDOPRD,AENDOPRD                                                
         MVC   JCL+72(8),SPACES                                                 
         LA    RE,JCL+2                                                         
         CLI   DMCB,0              TEST DOS OR POWER                            
         BE    *+8                                                              
         LA    RE,JCL+4                                                         
         LA    R0,9                                                             
*                                                                               
JCLSCN0  CLI   0(RE),C' '          FIND START OF VERB                           
         BNE   JCLSCN1                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLSCN0                                                       
         B     JCLSCNE                                                          
JCLSCN1  LR    RF,RE               FIND END OF VERB                             
         LA    R0,9                                                             
JCLSCN1A CLI   0(RE),C' '                                                       
         BE    JCLSCN2                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLSCN1A                                                      
         B     JCLSCNE                                                          
JCLSCN2  LR    R0,RE               R0=END OF VERB                               
         SR    RE,RF                                                            
         SH    RE,=H'1'                                                         
         BM    JCLSCNE                                                          
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   VERB(0),0(RF)       SAVE IN VERB                                 
*                                                                               
JCLSCN3  LR    RE,R0               FIND START OF FIRST OPERAND                  
         LA    R0,9                                                             
JCLSCN3A CLI   0(RE),C' '                                                       
         BNE   JCLSCN4                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLSCN3A                                                      
         LA    RE,JCL+20           NO OPERAND SET DUMMY VALUES                  
         ST    RE,ASTROPRD                                                      
         ST    RE,AENDOPRD                                                      
         LA    RE,0                                                             
         ST    RE,LOPRD                                                         
         B     JCLSCNA                                                          
*                                                                               
JCLSCN4  LR    RF,RE               FIND END OF OPERAND                          
         ST    RF,ASTROPRD                                                      
         LA    R0,80                                                            
         CLI   DMCB,0              TEST DOS/POWER                               
         BNE   JCLSCN4A            POWER                                        
         CLC   VERB(5),=C'PAUSE'   DOS PAUSE HAS FREE FORM                      
         BNE   JCLSCN4B                                                         
JCLSCN4A LA    RE,JCL+72           SCAN BACKWARDS FOR LAST CHR                  
         CLI   0(RE),C' '                                                       
         BNE   *+10                                                             
         BCTR  RE,0                                                             
         B     *-10                                                             
         LA    RE,1(RE)                                                         
         B     JCLSCN5                                                          
JCLSCN4B CLI   0(RE),C' '                                                       
         BE    JCLSCN5                                                          
         CLI   0(RE),C','                                                       
         BE    JCLSCN5                                                          
         LA    RE,1(RE)                                                         
         BCT   R0,JCLSCN4B                                                      
         B     JCLSCNE                                                          
JCLSCN5  LR    R0,RE               R0=END OF OPRD                               
         ST    R0,AENDOPRD                                                      
         SR    RE,RF                                                            
         ST    RE,LOPRD                                                         
         SH    RE,=H'1'                                                         
         BM    JCLSCNA                                                          
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   OPRD(0),0(RF)       SAVE OPERAND IN OPRD                         
*                                                                               
JCLSCNA  L     RE,=A(DOSVRB)       RE=A(TABLE OF DOS JCL COMMANDS)              
         CLI   DMCB,0                                                           
         BE    *+8                                                              
         L     RE,=A(POWVRB)                                                    
         SR    RF,RF                                                            
JCLSCNB  CLI   0(RE),C' '          END OF TABLE                                 
         BE    JCLSCNE                                                          
         IC    RF,7(RE)            GET LEN OF DOS COMMAND -1                    
         EX    RF,*+8                                                           
         B     *+10                                                             
         CLC   VERB(0),0(RE)       COMPARE WITH TABLE                           
         BE    JCLSCNC                                                          
         LA    RE,12(RE)                                                        
         B     JCLSCNB                                                          
JCLSCNC  MVC   VERBFLAG,8(RE)      SAVE VERB FLAG                               
         MVI   VERBADDR,0                                                       
         MVC   VERBADDR+1(3),9(RE) SAVE VERB PROCESSING ROUTINE ADDR            
         B     JCLSCNX                                                          
JCLSCNE  XC    VERBADDR,VERBADDR   RETURN ERROR IN CARD                         
JCLSCNX  XIT1                                                                   
         EJECT                                                                  
DSNSCN   NTR1                      SCAN JCL CARD FOR DSN                        
         MVC   DSN,SPACES                                                       
         MVC   DSNDOS,SPACES                                                    
         XC    LDSN,LDSN                                                        
         XC    LDSNDOS,LDSNDOS                                                  
         MVI   DSNFLAG,0                                                        
         CLC   LOPRD,=F'0'         CHECK VALID DTF NAME                         
         BE    DSNSCNX                                                          
         CLC   LOPRD,=F'8'                                                      
         BH    DSNSCNX                                                          
         L     RE,AENDOPRD         POINT TO CHR AFTER DTF NAME                  
         CLI   0(RE),C','                                                       
         BE    DSNSCN2                                                          
DSNSCN1  MVC   DSN,OPRD            DEFAULT DSN TO DTF NAME                      
         MVC   LDSN,LOPRD                                                       
         MVI   DSNFLAG,X'01'       SET DSN=DTF                                  
         B     DSNSCN3                                                          
*                                                                               
DSNSCN2  LA    RE,1(RE)            DOS DSN SURROUNDED BY QUOTES                 
         CLI   0(RE),C''''                                                      
         BNE   DSNSCN1                                                          
         LA    RE,1(RE)                                                         
         CLC   0(2,RE),=C'&&P'                                                  
         BNE   *+12                                                             
         OI    DSNFLAG,X'04'       SET DOS DSN STARTS WITH &P                   
         LA    RE,3(RE)                                                         
         LR    RF,RE               RF=A(START DSN)                              
         LA    R0,L'DSNDOS+1                                                    
DSNSCN2A CLI   0(RE),C''''         SEARCH FOR END OF DOS DSN                    
         BE    DSNSCN2D                                                         
         CLI   0(RE),C','          EPAT TERMINATES WITH COMMA                   
         BE    DSNSCN2D                                                         
         CLI   0(RE),C'&&'         ALLOW &VARIABLES FOR WRAPPER                 
         BE    DSNSCN2C                                                         
         CLI   0(RE),C'A'                                                       
         BNL   DSNSCN2C                                                         
DSNSCN2B OI    DSNFLAG,X'08'       SET DOS DSN CONTAINS FUNNY CHRS              
DSNSCN2C LA    RE,1(RE)                                                         
         BCT   R0,DSNSCN2A                                                      
         B     DSNSCN1                                                          
DSNSCN2D SR    RE,RF               RE=LEN OF DOS DSN                            
         SH    RE,=H'1'                                                         
         BM    DSNSCN1                                                          
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   DSNDOS(0),0(RF)                                                  
         LA    RE,1(RE)                                                         
         ST    RE,LDSNDOS                                                       
         OI    DSNFLAG,X'02'       SET DSN NAME PRESENT                         
         TM    DSNFLAG,X'08'                                                    
         BZ    DSNSCN3                                                          
         LA    RF,DSNDOS           CHANGE SPECIAL CHRS TO PERIODS               
DSNSCN2E CLI   0(RF),C' '                                                       
         BNE   *+8                                                              
         MVI   0(RF),C'.'                                                       
         LA    RF,1(RF)                                                         
         BCT   RE,DSNSCN2E                                                      
*                                                                               
DSNSCN3  EQU   *                                                                
DSNSCNX  XIT1                                                                   
         EJECT                                                                  
MERGE    NTR1                      MERGE JECL PARMS TO TABLE VALUES             
         ST    R1,FULL             SAVE ADR OF TABLE                            
         MVI   ANS,0                                                            
         XC    OPRDH,OPRDH         SET LENGTHS IN DUMMY HEADER                  
         L     RF,LOPRD                                                         
         STC   RF,OPRDH+5                                                       
         LA    RF,8(RF)                                                         
         STC   RF,OPRDH                                                         
         GOTO1 =V(SCANNER),DMCB,(20,OPRDH),(10,SCAN)                            
         SR    R0,R0                                                            
         IC    R0,4(R1)                                                         
         LTR   R0,R0               R0=NUMBER OF FIELDS                          
         BZ    MERGEX                                                           
         LA    R5,SCAN                                                          
*                                                                               
MERGE1   CLI   1(R5),0             TEST VALID FIELD                             
         BE    MERGE4                                                           
         CLI   1(R5),8                                                          
         BH    MERGE4                                                           
         L     R6,FULL                                                          
*                                                                               
MERGE2   CLI   12(R6),C' '         SEARCH TABLE FOR KEYWORD                     
         BE    MERGE4                                                           
         CLC   12(8,R6),12(R5)                                                  
         BE    MERGE3                                                           
         LA    R6,20(R6)                                                        
         B     MERGE2                                                           
*                                                                               
MERGE3   MVC   00(8,R6),22(R5)     SET VALUE                                    
         MVC   08(1,R6),01(R5)     SET LENGTH                                   
         MVC   09(1,R6),03(R5)     SET TYPE                                     
         MVC   10(2,R6),10(R5)     SET VALUE IN BINARY                          
         IC    R1,ANS                                                           
         LA    R1,1(R1)                                                         
         STC   R1,ANS              BUMP NUMBER OF MATCHES                       
*                                                                               
MERGE4   LA    R5,42(R5)           BUMP TO NEXT SCAN BLOCK                      
         BCT   R0,MERGE1                                                        
MERGEX   CLI   ANS,0               EXIT WITH CC=EQ IF NO MATCHES                
         XIT1                                                                   
         EJECT                                                                  
INITAB   CLI   12(R1),C' '         INITIALISE PARM TABLE AT R1                  
         BER   RE                                                               
         MVC   0(8,R1),SPACES                                                   
         XC    8(4,R1),8(R1)                                                    
         LA    R1,20(R1)                                                        
         B     INITAB                                                           
         SPACE 2                                                                
SETJOBC  L     RF,=A(JJ1)          SET STANDARD JOB CARD                        
         L     R1,=A(JOB)                                                       
         MVC   0(80,RF),0(R1)                                                   
         MVC   25(1,RF),DFLTML1    MSGLEVEL 1                                   
         MVC   27(1,RF),DFLTML2    MSGLEVEL 2                                   
         MVC   39(1,RF),DFLTMCL    MSGCLASS                                     
         MVC   47(1,RF),DFLTJOC    JOBCLASS                                     
         L     RF,=A(JJ2)                                                       
         MVC   0(80,RF),SPACES                                                  
         L     RF,=A(JJX)                                                       
         MVC   0(80,RF),SPACES                                                  
         BR    RE                                                               
         SPACE 2                                                                
SETSYPC  L     RF,=A(JP1)          SET STANDARD SYSPRINT CARD                   
         L     R1,=A(SYSPRINT)                                                  
         MVC   0(80,RF),0(R1)                                                   
         MVC   22(1,RF),DFLTSPC                                                 
         L     RF,=A(JP2)                                                       
         MVC   0(80,RF),SPACES                                                  
         L     RF,=A(JP3)                                                       
         MVC   0(80,RF),SPACES                                                  
         L     RF,=A(JPX)                                                       
         MVC   0(80,RF),SPACES                                                  
         BR    RE                                                               
         SPACE 2                                                                
SAVSYPC  L     R1,=A(SP1)          SAVE SYSPRINT CARD                           
         L     RF,=A(JP1)                                                       
         B     RESSYPC1                                                         
RESSYPC  L     R1,=A(JP1)          RESTORE SYSPRINT CARD                        
         L     RF,=A(SP1)                                                       
RESSYPC1 LA    R0,4                                                             
RESSYPC2 MVC   0(80,R1),0(RF)                                                   
         LA    R1,80(R1)                                                        
         LA    RF,80(RF)                                                        
         BCT   R0,RESSYPC2                                                      
         BR    RE                                                               
         EJECT                                                                  
SPACES   DC    CL80' '                                                          
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
         DS   0F                                                                
JOBTBL   DS   0CL20                                                             
JOBCLASS DC   CL8' ',XL4'00',CL8'CLASS   ' 1 CHR                                
JOBDISP  DC   CL8' ',XL4'00',CL8'DISP    ' 1 CHR D/H/K/L                        
JOBNAME  DC   CL8' ',XL4'00',CL8'JNM     ' 8 CHR                                
JOBPRI   DC   CL8' ',XL4'00',CL8'PRI     ' 1 DIGIT 0-9                          
         DC   CL8' ',XL4'00',CL8'        '                                      
         SPACE 2                                                                
         DS   0F                                                                
LSTTBL   DS   0CL20                                                             
LSTCHARS DC   CL8' ',XL4'00',CL8'CHARS   ' 1-4 CHRS                             
LSTCLASS DC   CL8' ',XL4'00',CL8'CLASS   ' 1 CHR                                
LSTCOPY  DC   CL8' ',XL4'00',CL8'COPY    ' 1-2 DIGITS                           
LSTDISP  DC   CL8' ',XL4'00',CL8'DISP    ' 1 CHR D/H/K/L/N/T                    
LSTFCB   DC   CL8' ',XL4'00',CL8'FCB     ' 1-4 CHRS                             
LSTFNO   DC   CL8' ',XL4'00',CL8'FNO     ' 1-4 CHRS                             
         DC   CL8' ',XL4'00',CL8'        '                                      
         EJECT                                                                  
         DS    0D                                                               
JJ1      DC    CL80' '             MVS //XXXXXXXX JOB CARDS                     
JJ2      DC    CL80' '                                                          
JJX      DC    CL80' '                                                          
*                                                                               
JP1      DC    CL80' '             MVS //SYSPRINT  DD CARDS                     
JP2      DC    CL80' '                                                          
JP3      DC    CL80' '                                                          
JPX      DC    CL80' '                                                          
*                                                                               
SP1      DC    CL80' '             SAVED MVS //SYSPRINT  DD CARDS               
SP2      DC    CL80' '                                                          
SP3      DC    CL80' '                                                          
SPX      DC    CL80' '                                                          
         SPACE 2                                                                
JBX      DS    1000XL81            BEFORE EXEC SAVE AREA                        
         DS    0F                                                               
*                                                                               
JBXA     DS    1000A               BEFORE EXEC SAVE AREA ADDRS                  
         SPACE 2                                                                
JOB      DC    CL80'//         JOB MSGLEVEL=(X,X),MSGCLASS=X,CLASS=X'           
*                                                                               
EXEC1    DC    CL80'//XXXXX   EXEC PROC='                                       
EXEC2    DC    CL80'//XXXXX   EXEC PGM='                                        
*                                                                               
SYSIN    DC    CL80'//SYSIN     DD *'                                           
SYSPRINT DC    CL80'//SYSPRINT  DD SYSOUT='                                     
*                                                                               
LOADLIB  DC    CL80'//LOADLIB   DD DSN=DDS.LOADLIB,DISP=SHR'                    
SORTLIB  DC    CL80'//SORTLIB   DD DSN=SYS1.SORTLIB,DISP=SHR'                   
SORTOUT  DC    CL80'//SYSOUT    DD DUMMY'                                       
*                                                                               
SORTWK1  DC    CL80'//SORTWK01  DD UNIT=DDSSORT,SPACE=(TRK,(00100,00100*        
               )),DSN=&&&&SORTWK1'                                              
SORTWK1A DC    CL80' '                                                          
*                                                                               
SORTWK9  DC    CL80'//SORTWK9   DD UNIT=VIO,SPACE=(TRK,(00100,00100)),D*        
               SN=&&&&SORTWK9'                                                  
SORTWK9A DC    CL80' '                                                          
*                                                                               
DISKDDI  DC    CL80'//          DD UNIT=DDSSEQD,DISP=(OLD,KEEP)'                
DISKDDO  DC    CL80'//          DD UNIT=DDSSEQD,DISP=(NEW,KEEP),SPACE=(*        
               TRK,(00100,00100))'                                              
*                                                                               
TAPEDDI  DC    CL80'//          DD UNIT=TAPE,DISP=(OLD,KEEP)'                   
TAPEDDI1 DC    CL80'//          DD UNIT=TAPE,DISP=(OLD,KEEP,KEEP)'              
TAPEDDO  DC    CL80'//          DD UNIT=TAPE,DISP=(NEW,KEEP)'                   
TAPEDDO1 DC    CL80'//          DD UNIT=TAPE,DISP=(NEW,CATLG,CATLG)'            
         EJECT                                                                  
* TABLE OF DOS VERBS AND THEIR PROCESSING ROUTINE ADDRESSES                     
* 01=HOLD PROCESSING UNTIL AFTER EXEC                                           
         DS    0F                                                               
DOSVRB   DS    0CL12                                                            
         DC    C'ASSGN  ',AL1(4),X'00',AL3(JCLDEL)                              
         DC    C'CLOSE  ',AL1(4),X'00',AL3(JCLDEL)                              
         DC    C'DATE   ',AL1(3),X'00',AL3(JCLDTE)                              
         DC    C'DLBL   ',AL1(3),X'01',AL3(JCLDLB)                              
         DC    C'EXEC   ',AL1(3),X'00',AL3(JCLEXE)                              
         DC    C'EXTENT ',AL1(5),X'01',AL3(JCLEXT)                              
         DC    C'JOB    ',AL1(2),X'00',AL3(JCLJOB)                              
         DC    C'LIBDEF ',AL1(5),X'00',AL3(JCLDEL)                              
         DC    C'LBLTYP ',AL1(5),X'00',AL3(JCLDEL)                              
         DC    C'MTC    ',AL1(2),X'01',AL3(JCLWRN)                              
         DC    C'OPTION ',AL1(5),X'00',AL3(JCLDEL)                              
         DC    C'PAUSE  ',AL1(4),X'01',AL3(JCLPAU)                              
         DC    C'SETPRT ',AL1(5),X'01',AL3(JCLSET)                              
         DC    C'TLBL   ',AL1(3),X'01',AL3(JCLTLB)                              
         DC    C'UPSI   ',AL1(3),X'00',AL3(JCLUPS)                              
DOSVRBX  DC    C'       ',AL1(0),X'00',AL3(0)                                   
         SPACE 2                                                                
* TABLE OF POWER VERBS AND THEIR PROCESSING ROUTINE ADDRESSES                   
* 01=HOLD PROCESSING UNTIL AFTER EXEC                                           
         DS    0F                                                               
POWVRB   DS    0CL12                                                            
         DC    C'CTL    ',AL1(2),X'00',AL3(POWCTL)                              
         DC    C'DATA   ',AL1(3),X'01',AL3(JCLWRN)                              
         DC    C'EOJ    ',AL1(2),X'00',AL3(POWEOJ)                              
         DC    C'JOB    ',AL1(2),X'00',AL3(POWJOB)                              
         DC    C'LST    ',AL1(2),X'01',AL3(POWLST)                              
         DC    C'PUN    ',AL1(2),X'01',AL3(JCLWRN)                              
         DC    C'RDR    ',AL1(2),X'01',AL3(JCLWRN)                              
         DC    C'SLI    ',AL1(2),X'01',AL3(JCLWRN)                              
POWVRBX  DC    C'       ',AL1(0),X'00',AL3(0)                                   
         EJECT                                                                  
* TABLE OF SPECIAL PROGRAMS                                                     
* 01=CONTROLLER,02=HAS PROC,04=SUPPORTS DATE= CARD,08=DOES LOADS                
*                                                                               
PRGTBL   DS    0CL10                                                            
         DC    CL8'CONMAN  ',AL1(5),X'0F'    CONTROLLERS                        
         DC    CL8'COPPER  ',AL1(5),X'0F'                                       
         DC    CL8'MONACC  ',AL1(5),X'0F'                                       
         DC    CL8'MERLIN  ',AL1(5),X'0F'                                       
         DC    CL8'SPONSOR ',AL1(6),X'0F'                                       
         DC    CL8'SPOOF   ',AL1(4),X'0F'                                       
         DC    CL8'PPG     ',AL1(2),X'0F'                                       
         DC    CL8'REPORTER',AL1(7),X'0F'                                       
         DC    CL8'PERFORM ',AL1(6),X'0F'                                       
*                                                                               
         DC    CL8'ACCOLADE',AL1(7),X'0C'    LOADS/DUMPS                        
         DC    CL8'CONCRETE',AL1(7),X'0C'                                       
         DC    CL8'DEMOLISH',AL1(7),X'0C'                                       
         DC    CL8'DELD    ',AL1(3),X'0C'                                       
         DC    CL8'MELD    ',AL1(3),X'0C'                                       
         DC    CL8'PELD    ',AL1(3),X'0C'                                       
         DC    CL8'PRLD    ',AL1(3),X'0C'                                       
         DC    CL8'PULD    ',AL1(3),X'0C'                                       
         DC    CL8'PVLD    ',AL1(3),X'0C'                                       
         DC    CL8'RELD    ',AL1(3),X'0C'                                       
         DC    CL8'SPLD    ',AL1(3),X'0C'                                       
         DC    CL8'STLD    ',AL1(3),X'0C'                                       
*                                                                               
         DC    CL8'PQMAINT ',AL1(6),X'0C'    MISSCELLANEOUS                     
         DC    CL8'WKMAINT ',AL1(6),X'0C'                                       
PRGTBLX  DC    CL8'        ',AL1(0),X'00'                                       
         EJECT                                                                  
WORKD    DSECT                                                                  
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
DMCB     DS    6F                                                               
BYTE     DS    X                                                                
ANS      DS    X                                                                
         DS    2X                                                               
*                                                                               
UPSI     DS    CL8                                                              
DATE     DS    CL16                                                             
SETPRT   DS    CL10                                                             
VERB     DS    CL8                                                              
OPRDH    DS    XL8                                                              
OPRD     DS    CL80                                                             
DSN      DS    CL44                                                             
DSNDOS   DS    CL44                                                             
JCL      DS    CL80                                                             
SAVEJCL  DS    CL80                                                             
WORK     DS    CL80                                                             
*                                                                               
ADDRS    DS    0F                                                               
LOPRD    DS    F                                                                
ASTROPRD DS    A                                                                
AENDOPRD DS    A                                                                
LDSN     DS    F                                                                
LDSNDOS  DS    F                                                                
VERBADDR DS    A                                                                
NXTBEF   DS    A                                                                
NXTBEFA  DS    A                                                                
LSTJOB   DS    A                                                                
LSTSYI   DS    A                                                                
LSTSYP   DS    A                                                                
LSTEXE   DS    A                                                                
LSTDLB   DS    A                                                                
SAVER3   DS    A                                                                
SAVERETN DS    A                                                                
ADDRX    DS    0F                                                               
*                                                                               
FLAGS    DS    0X                                                               
DFLTJOC  DS    C                                                                
DFLTML1  DS    C                                                                
DFLTML2  DS    C                                                                
DFLTMCL  DS    C                                                                
DFLTSPC  DS    C                                                                
IF       DS    X                                                                
VERBFLAG DS    X                                                                
DSNFLAG  DS    X                                                                
MODE     DS    X                                                                
RESULT   DS    X                                                                
RESMVS   DS    X                                                                
RETURN   DS    X                                                                
THSJCL   DS    X                                                                
LSTJCL   DS    X                                                                
FSTEXEC  DS    X                                                                
EOD      DS    X                                                                
TYP      DS    X                                                                
PRG      DS    X                                                                
LUPSI    DS    X                                                                
LDATE    DS    X                                                                
BEFEXEC  DS    X                                                                
NXTBEFF  DS    X                                                                
DOSSETF  DS    X                                                                
POWJOBF  DS    X                                                                
POWLSTF  DS    X                                                                
FLAGX    DS    0X                                                               
*                                                                               
SCAN     DS    420X                                                             
*                                                                               
WORKX    EQU   *                                                                
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'004DDJCLCNV  05/01/02'                                      
         END                                                                    
