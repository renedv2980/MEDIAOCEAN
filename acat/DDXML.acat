*          DATA SET DDXML      AT LEVEL 001 AS OF 07/23/14                      
         TITLE 'XML GENERATOR'                                                  
*CATALP DDXML                                                                   
*&&      SET   NOP=N                                                            
         IEABRCX DEFINE                                                         
         IEABRCX DISABLE                                                        
*************************************************************                   
*  GENERAL XML UTILITY                                      *                   
*************************************************************                   
         PRINT NOGEN                                                            
DDXML    CSECT                                                                  
         NMOD1 WORKX-WORKD,**XMLG**,CLEAR=YES                                   
         USING WORKD,RC                                                         
         J     START                                                            
*                                                                               
$$DATA   LOCTR ,                   DATA LOCATION CLOSE TO RB                    
*                                                                               
$$CODE   LOCTR ,                   CODE AFTER DATA                              
*                                                                               
*                         REMOVE FROM LIVE CODE                                 
         DC    4096C'*'   USE TO FORCE ADDRESSABILITY ISSUES                    
*                         REMOVE FROM LIVE CODE                                 
*                                                                               
*************************************************************                   
*  INIT                                                     *                   
*  GOTO1 DDXML,DMCB,(C'I',AXMLOUT),AXMLOUT2,AXMLBLK                             
*                                                           *                   
*  OPEN   <element>                                         *                   
*  GOTO1 DDXML,DMCB,(C'O',=C'KEYWORD'),,AXMLBLK                                 
*                                                           *                   
*  CLOSE  </element>                                        *                   
*  GOTO1 DDXML,DMCB,(C'C',0),0,AXMLBLK                      *                   
*                                                           *                   
*  PUT    <element>data</element>                           *                   
*  GOTO1 DDXML,DMCB,(C'P',=C'KEYWORD'),(L,DATA),AXMLBLK     *                   
*                                                           *                   
*  SINGLE <element />                                       *                   
*  GOTO1 DDXML,DMCB,(C'S',=C'KEYWORD'),(L,DATA),AXMLBLK     *                   
*                                                           *                   
*  CLOSE ALL                                                *                   
*  GOTO1 DDXML,DMCB,(C'A',0),0,AXMLBLK                      *                   
*                                                           *                   
*  DATA    C'element'                                       *                   
*                                                           *                   
*  ATTRIB  AL1(LEN),AL3(KEY)     EG  AL1(07),=C'KEYWORD'    *                   
*          AL1(LEN),AL3(DATA)    EG  AL1(04),=C'DATA'       *                   
*          AL1(LEN),AL3(KEY)     EG  AL1(07),=C'KEYWORD'    *                   
*          AL1(LEN),AL3(DATA)    EG  AL1(04),=C'DATA'       *                   
*          AL1(255),AL3(0)       EOT                        *                   
*                                                           *                   
*                                                           *                   
*************************************************************                   
                                                                                
*************************************************************                   
* P1+0   ACTION (O)OPEN          OPEN ELEMENT               *                   
*               (C)CLOSE         CLOSE ELEMENT OR ZERO      *                   
*               (A)CLOSE ALL     CLOSE ALL OPEN             *                   
*               (P)PUT           OPEN,PUT,CLOSE (ALL IN ONE)*                   
*                                                           *                   
* P1+1   AL3(DATA)  <KEYWORD>                               *                   
*                                                           *                   
* P2+0   LEN                                                *                   
* P2+1   ELEMEMT DATA                                       *                   
*                                                           *                   
* P3     XML BLOCK SEE DDXMLD                               *                   
*                                                           *                   
*************************************************************                   
                                                                                
*************************************************************                   
* RB = BASE1 LITERALS AND CONSTANTS                         *                   
* RA = RESERVED                                             *                   
* R9 = LOCAL BASE                                           *                   
* R2 = GLOBAL POINTER DOES NOT RELOAD ON XIT                *                   
* CONSTANTS & LITERALS DEFINE UP FRONT UNDER BASE           *                   
*************************************************************                   
                                                                                
START    ST    RD,SAVERD           SAVE BASE RD                                 
         L     RF,4(RD)                                                         
         L     RF,68(RF)                                                        
         ST    RF,SAVERC           SAVE CALLERS RC                              
*                                                                               
         ST    R1,APARM                                                         
         MVC   PARMS(6*4),0(R1)    SAVE PARMS                                   
         L     R8,P3               ADDRESS OF XML BLOCK                         
         USING XMLBLKD,R8                                                       
*                                                                               
MAIN     CLI   P1ACT,C'O'          OPEN <EXAMPLE>                               
         JE    MAIN010                                                          
         CLI   P1ACT,C'S'          PUT SINGLE <EXAMPLE />                       
         JNE   MAIN020                                                          
*                                                                               
MAIN010  BRAS  RE,OPEN             OPEN AN ELEMENT                              
         BRAS  RE,OUTPUT           PUT TO OUTPUT                                
         J     XMOD1                                                            
*                                                                               
MAIN020  CLI   P1ACT,C'P'          PUT <EXAMPLE>TEXT</EXAMPLE>                  
         JNE   MAIN030                                                          
         BRAS  RE,OPEN                                                          
         BRAS  RE,PUT                                                           
         BRAS  RE,CLOSE                                                         
         JNE   XMOD1                                                            
         BRAS  RE,OUTPUT           PUT TO OUTPUT                                
         J     XMOD1                                                            
*                                                                               
MAIN030  CLI   P1ACT,C'C'          CLOSE </EXAMPLE>                             
         JNE   MAIN040                                                          
         BRAS  RE,CLOSE                                                         
         JNE   XMOD1                                                            
         BRAS  RE,OUTPUT           PUT TO OUTPUT                                
         J     XMOD1                                                            
*                                                                               
MAIN040  CLI   P1ACT,C'A'          CLOSE ALL </EXAMPLE></MORE></ETC>            
         JNE   MAIN050                                                          
         BRAS  RE,CLOSEALL                                                      
         J     XMOD1                                                            
*                                                                               
MAIN050  CLI   P1ACT,C'I'          INIT BLK                                     
         JNE   MAIN060                                                          
         BRAS  RE,INIT                                                          
         J     XMOD1                                                            
*                                                                               
MAIN060  DC    H'0'                UNKNOWN ACTION                               
*                                                                               
XMOD1    XMOD1 1                   PROG EXIT                                    
*                                                                               
EXITN    LTR   RB,RB               EXIT CC=NEQ                                  
         J     EXIT                                                             
EXITY    CR    RB,RB               EXIT CC=EQU                                  
EXIT     XIT1  REGS=(R2)                                                        
         EJECT                                                                  
*************************************************************                   
* DO INITIALISATION                                         *                   
*************************************************************                   
                                                                                
INIT     NTR1                                                                   
*                                                                               
         LR    RE,R8               DO INIT THEN EXIT                            
         LH    RF,=Y(XMLBLKL)                                                   
         XR    R0,R0                                                            
         XR    R1,R1                                                            
         MVCL  RE,R0               ZAP TO ZERO                                  
*                                                                               
         MVC   XMLSAVRC,SAVERC     SAVE CALLERS RC ON INIT                      
*                                                                               
         XR    R1,R1               P1 HOLDS OUTPUT EXIT RTN                     
         ICM   R1,7,P1ADDR                                                      
         ST    R1,AXMLOUT1                                                      
*                                                                               
         XR    R1,R1               P2 HOLDS OUTPUT EXIT RTN2                    
         ICM   R1,7,P2ADDR                                                      
         ST    R1,AXMLOUT2                                                      
*                                                                               
         LA    R1,XMLIOA                                                        
         MVC   0(38,R1),=C'<?xml version="1.0" encoding="utf-8"?>'              
         XC    XMLIOL,XMLIOL                                                    
         MVC   XMLIOL(2),=AL2(42)                                               
         LR    R1,R8                                                            
         ICM   RF,15,AXMLOUT1      FIND OUTPUT EXIT                             
         JZ    INIT050                                                          
         BASR  RE,RF               CALL IT                                      
         MVC   XMLIOL(2),=AL2(05)                                               
         MVI   XMLIOA,C' '                                                      
         BASR  RE,RF               CALL IT                                      
*                                                                               
INIT050  LA    R1,XMLIOBLK                                                      
         MVC   0(38,R1),=C'<?xml version="1.0" encoding="utf-8"?>'              
         XC    XMLLEN,XMLLEN                                                    
         MVC   XMLLEN(2),=AL2(42)                                               
         LR    R1,R8                                                            
         ICM   RF,15,AXMLOUT2      FIND OUTPUT EXIT                             
         JZ    INIT090                                                          
         BASR  RE,RF               CALL IT                                      
         MVC   XMLLEN(2),=AL2(05)                                               
         MVI   XMLIOBLK,C' '                                                    
         BASR  RE,RF               CALL IT                                      
*                                                                               
INIT090  EQU   *                                                                
*                                                                               
         MVI   XMLINI,C'Y'         FLAG DONE                                    
         J     EXITY                                                            
                                                                                
*************************************************************                   
* OPEN NEW ELEMENT                                          *                   
*************************************************************                   
                                                                                
OPEN     NTR1                                                                   
*                                                                               
         XR    R4,R4               R4=A(ELEMENT NAME) LEN 32                    
         ICM   R4,7,P1ADDR                                                      
*                                                                               
         MVC   XMLIOA,SPACES                                                    
         L     R1,XMLLEV           BUMP ELEMENT LEVEL                           
         LA    RF,1(R1)                                                         
         ST    RF,XMLLEV                                                        
         SHI   RF,XMLMAX           TOO MANY LEVELS                              
         JH    *+2                                                              
         SLL   R1,2                4 SPACES PER LEVEL                           
         LA    R2,XMLIOA(R1)       R2=ADD POINT                                 
*                                                                               
         SLL   R1,3                XMLETAB BUMP 16 PER LEVEL                    
         LA    R3,XMLETAB(R1)      P3=ELEMENT TAB ADD POINT                     
*                                                                               
         MVI   0(R3),C'<'          INITIALY < THEN LENGTH                       
         MVC   1(31,R3),0(R4)      THEN 31 CHRS                                 
         LA    R1,31(,R3)                                                       
*                                                                               
OPEN010  CLI   0(R1),C' '          BACK UP TO NON SPACE                         
         JH    OPEN020                                                          
         JCT   R1,OPEN010                                                       
*                                                                               
OPEN020  LA    R1,1(,R1)                                                        
         SR    R1,R3                                                            
         JNP   OPENERR1                                                         
         STC   R1,0(R3)            SAVE LENGTH                                  
         CLI   0(R3),X'30'                                                      
         JL    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         MVI   0(R2),C'<'          SET INITIAL <                                
         MVC   1(31,R2),1(R3)      AND ELEMENT TEXT                             
         AR    R2,R1                                                            
         BRAS  RE,DISPATT          ADD ATTRIBUTES                               
*                                                                               
         CLI   P1ACT,C'S'          SINGLE CALL                                  
         JE    OPEN050                                                          
*                                                                               
         MVI   0(R2),C'>'          JUST CLOSE >                                 
         LA    R2,1(,R2)                                                        
         J     OPEN100                                                          
*                                                                               
OPEN050  MVC   0(3,R2),=C' />'     SINGLE SO CLOSE /> AND BACKUP                
         LA    R2,3(,R2)                                                        
         L     R1,XMLLEV           BACK ELEMENT LEVEL                           
         SHI   R1,1                                                             
         ST    R1,XMLLEV                                                        
*                                                                               
OPEN100  EQU   *                                                                
*                                                                               
OPENX    J     EXITY                                                            
                                                                                
OPENERR1 DC    H'0'                BACKED UP TOO FAR                            
*************************************************************                   
* PUT NEW ELEMENT                                           *                   
*************************************************************                   
                                                                                
PUT      NTR1                                                                   
*                                                                               
PUT010   L     R1,P2                                                            
         CLI   P2,0                                                             
         JE    PUTX                                                             
         BRAS  RE,XMLSPEC                                                       
*                                                                               
PUTX     J     EXITY                                                            
                                                                                
*************************************************************                   
* CLOSE ELEMENT                                             *                   
*************************************************************                   
                                                                                
CLOSE    NTR1                                                                   
*                                                                               
         LT    R1,XMLLEV           BUMP ELEMENT LEVEL                           
         JZ    CLOSEX                                                           
         SHI   R1,1                                                             
         ST    R1,XMLLEV                                                        
*                                                                               
         SLL   R1,2                4 SPACES PER LEVEL                           
*                                                                               
         CLI   P1ACT,C'A'          IF CLOSE ALL                                 
         JE    *+12                                                             
         CLI   P1ACT,C'C'          OR CLOSE ACTION THEN                         
         JNE   *+14                                                             
         MVC   XMLIOA,SPACES                                                    
         LA    R2,XMLIOA(R1)       R2=CALCULATE ADD POINT                       
*                                                                               
         SLL   R1,3                XMLETAB BUMP 16 PER LEVEL                    
         LA    R3,XMLETAB(R1)      P3=ELEMENT TAB ADD POINT                     
*                                                                               
*        LR    RF,R2                                                            
*        AHI   RF,-1                                                            
*        CLI   0(RF),C'>'                                                       
*        JE    *+2                                                              
*                                                                               
         MVC   0(2,R2),=C'</'                                                   
         LLC   RF,0(R3)                                                         
         MVC   2(0,R2),1(R3)                                                    
         EXRL  RF,*-6                                                           
         LA    R2,1(RF,R2)         <TESTING></TESTING>                          
         MVI   0(R2),C'>'                                                       
         LA    R2,1(R2)                                                         
*                                                                               
         ST    R2,FULL             SAVE R2                                      
         SR    R2,RF                                                            
         AHI   R2,-2               BACK TO </                                   
         LR    RE,R2                                                            
         SR    R2,RF                                                            
         AHI   R2,-1               BACK TO <                                    
         AHI   RF,-1                                                            
         CLC   2(0,RE),1(R2)                                                    
         EXRL  RF,*-6                                                           
         JE    CLOSE99                                                          
         L     R2,FULL                                                          
         J     CLOSEX                                                           
*                                                                               
CLOSE99  ST    R2,FULL             WIPE OLD DATA                                
         SLL   RF,1                                                             
         AHI   RF,4                                                             
         MVC   0(0,R2),SPACES                                                   
         EXRL  RF,*-6                                                           
         L     R2,FULL                                                          
         J     EXITN                                                            
*                                                                               
CLOSEX   J     EXITY                                                            
                                                                                
*************************************************************                   
* CLOSE ALL ELEMENTS                                        *                   
*************************************************************                   
                                                                                
CLOSEALL NTR1                                                                   
*                                                                               
CLOSEA1  LT    R1,XMLLEV           BUMP ELEMENT LEVEL                           
         JZ    CLOSEALX                                                         
         BRAS  RE,CLOSE                                                         
         BRAS  RE,OUTPUT           PUT TO OUTPUT                                
         J     CLOSEA1                                                          
*                                                                               
CLOSEALX J     EXITY                                                            
                                                                                
*************************************************************                   
* DISPLAY ATTRIBUTES                                        *                   
*************************************************************                   
                                                                                
DISPATT  ST    RE,SAVERE                                                        
*                                                                               
         LT    R1,XMLATTRT                                                      
         JZ    DISPAX                                                           
DISPA050 CLI   0(R1),X'FF'         ANY ATTRIBUTES                               
         JE    DISPAX                                                           
         OC    0(4,R1),0(R1)                                                    
         JZ    DISPAX                                                           
*                                                                               
         MVI   0(R2),C' '          SET SPACE                                    
         LA    R2,1(,R2)                                                        
         LLC   RF,0(R1)            LEN                                          
         XR    RE,RE                                                            
         ICM   RE,7,1(R1)                                                       
         MVC   0(0,R2),0(RE)       COPY IN TEXT                                 
         EXRL  RF,*-6                                                           
         AR    R2,RF                                                            
         MVC   0(2,R2),=C'="'      NOW ="                                       
         LLC   RF,4(R1)                                                         
         XR    RE,RE                                                            
         ICM   RE,7,5(R1)                                                       
*                                                                               
         LA    R2,2(R2)                                                         
         LR    RF,R1                                                            
         L     R1,4(R1)                                                         
         BRAS  RE,XMLSPEC                                                       
         LR    R1,RF                                                            
*                                                                               
         MVI   0(R2),C'"'                                                       
         LA    R2,1(R2)                                                         
         LA    R1,8(R1)            NEXT ATTRIBUTE                               
         J     DISPA050                                                         
*                                                                               
DISPAX   L     RE,SAVERE                                                        
         BR    RE                                                               
***********************************************************************         
* SUBROUTINE TO PROCESS SPECIAL XML CHARACTERS AT P1 FOR LEN P2       *         
***********************************************************************         
         SPACE 1                                                                
XMLSPEC  NTR1                                                                   
*                                                                               
         ST    R2,FULL             SAVE CURRENT OUT PTR                         
*                                                                               
         LR    R3,R1               R3=LEN,AL3(CURRENT INPUT DATA)               
         SRL   R3,24               R3=LEN                                       
         LTR   R3,R3                                                            
         JZ    EXIT                                                             
         N     R1,=X'00FFFFFF'     R1=A(INPUT)                                  
         AR    R3,R1               END POINT                                    
*                                                                               
XMLS010  CLI   0(R1),X'80'                                                      
         JNL   XMLS060             > 80 CHARS ARE ALL OK                        
*                                                                               
         LARL  RF,SPECTAB          < 80 MAY BE SPECIAL CHRS                     
XMLS051  CLC   0(1,R1),0(RF)                                                    
         JNE   XMLS052                                                          
*                                                                               
         LLC   RE,1(RF)            SPECIAL CHR GET LEN-1                        
         MVC   0(0,R2),2(RF)       COPY SPECIAL TEXT                            
         EXRL  RE,*-6                                                           
         LA    R2,1(RE,R2)                                                      
         J     XMLS061                                                          
*                                                                               
XMLS052  LLC   RE,1(RF)                                                         
         LA    RF,3(RE,RF)         NEXT SPECTAB ENTRY                           
         CLI   0(RF),X'FF'                                                      
         JNE   XMLS051                                                          
*                                                                               
XMLS060  MVC   0(1,R2),0(R1)       COPY CHR                                     
         LA    R2,1(,R2)                                                        
*                                                                               
XMLS061  LA    R1,1(,R1)                                                        
         CR    R1,R3               END POINT TEST                               
         JL    XMLS010                                                          
*                                                                               
         LR    RF,R2               RF=END                                       
         L     R1,FULL             R1=START                                     
         SR    RF,R1                                                            
         LARL  RE,OUTUKUS          TRANSLATE TABLE                              
         EXRL  RF,*+10                                                          
         J     *+10                                                             
         TR    0(0,R1),0(RE)       TRANSLATE OUT ANY BAD CHRS                   
*                                                                               
         LR    RF,R2                                                            
         AHI   RF,-1                                                            
XMLS065  CLI   0(RF),C' '                                                       
         JNE   EXIT                                                             
         AHI   RF,-1                                                            
         AHI   R2,-1                                                            
         CR    R2,R1                                                            
         JH    XMLS065                                                          
         LA    R2,1(R2)            DONT DIE JUST EXIT WITH " "                  
         J     EXIT                                                             
         DC    H'0'                                                             
*                                                                               
SPECTAB  DC    C'<',AL1(3),C'&&lt;'                                             
         DC    C'>',AL1(3),C'&&gt;'                                             
         DC   C'&&',AL1(4),C'&&amp;'                                            
         DC   C'''',AL1(5),C'&&apos;'                                           
         DC    C'"',AL1(5),C'&&quot;'                                           
         DC    X'FF'                                                            
*                                                                               
* VALID OUTPUT CHARACTERS FOR UK AND USA                                        
*                                                                               
OUTUKUS  DC    XL16'40404040404040404040404040404040'  00-0F                    
         DC    XL16'40404040404040404040404040404040'  10-1F                    
         DC    XL16'40404040404040404040404040404040'  20-2F                    
         DC    XL16'40404040404040404040404040404040'  30-3F                    
         DC    XL16'404040404040404040404A4B4C4D4E4F'  40-4F                    
         DC    XL16'504040404040404040405A5B5C5D5E5F'  50-5F                    
         DC    XL16'606140404040404040406A6B6C6D6E6F'  60-6F                    
         DC    XL16'404040404040404040797A7B7C7D7E7F'  70-7F                    
         DC    XL16'40818283848586878889404040404040'  80-8F                    
         DC    XL16'4091929394959697989940404040409F'  90-9F                    
         DC    XL16'40A1A2A3A4A5A6A7A8A9404040404040'  A0-AF                    
         DC    XL16'40404040404040404040404040404040'  B0-BF                    
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'  C0-CF                    
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'  D0-DF                    
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'  E0-EF                    
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'  F0-FF                    
         EJECT                                                                  
*************************************************************                   
* OUTPUT TO EXIT ROUTINE                                    *                   
*************************************************************                   
                                                                                
OUTPUT   ST    RE,SAVERE                                                        
         LA    R1,XMLIOA           DATA IS IN XMLIOA                            
         SR    R2,R1                                                            
         LA    R2,4(R2)                                                         
         STCM  R2,3,XMLIOL         CALCULATE LEN                                
         LA    R1,XMLIOL                                                        
         ICM   RF,15,AXMLOUT1      FIND OUTPUT EXIT                             
         JZ    OUT2                                                             
         LR    R1,R8                                                            
         BASR  RE,RF               CALL IT                                      
*                                                                               
OUT2     ICM   RF,15,AXMLOUT2      ANY BLOCK OUTPUT                             
         JZ    OUTX                                                             
*                                                                               
         LA    R1,XMLLEN           OUTPUT BLOCK                                 
         XR    RE,RE                                                            
         ICM   RE,3,XMLLEN         RE=EXISTING LEN                              
         XR    RF,RF                                                            
         ICM   RF,3,XMLIOL         RF=XMLIOL                                    
         AR    RE,R1               RE=ADD POINT                                 
*                                                                               
         SHI   RF,5                REMOVE 4+1 FOR EXECUTE                       
         LA    R1,XMLIOA                                                        
OUT2A    CLI   0(R1),C' '          TRACK FORWARD TO NON SPACE                   
         JNE   OUT2B                                                            
         LA    R1,1(,R1)                                                        
         JCT   RF,OUT2A                                                         
         DC    H'0'                                                             
*                                                                               
OUT2B    MVC   0(0,RE),0(R1)       MOVE SIGNIFICANT DATA                        
         EXRL  RF,*-6                                                           
*                                                                               
         LA    RF,1(RF)            ADD 1 BACK                                   
         SLL   RF,16                                                            
         A     RF,XMLLEN           UPDATE XMLLEN                                
         ST    RF,XMLLEN                                                        
*                                                                               
         CLC   XMLLEN(2),=H'3800'  TOO BIG OR                                   
         JNL   OUT50                                                            
         OC    XMLLEV,XMLLEV       BACK TO ROOT LEVEL YET                       
         JNZ   OUTX                                                             
*                                                                               
OUT50    LA    R1,XMLLEN                                                        
         ICM   RF,15,AXMLOUT2      BLOCK OUTPUT ROUTINE                         
         JZ    OUTX                                                             
         LR    R1,R8                                                            
         BASR  RE,RF               CALL IT                                      
         MVC   XMLLEN,=X'00040000'                                              
*                                                                               
OUTX     L     RE,SAVERE                                                        
         BR    RE                                                               
*                                                                               
$$DATA   LOCTR ,                   BACKUP TO RB LOCATION                        
*                                                                               
*************************************************************                   
* CONSTANTS & LTORG                                         *                   
*************************************************************                   
                                                                                
SPACES   DC    CL254' '                                                         
ZEROS    DC    32X'00'                                                          
FFS      DC    32X'FF'                                                          
DOTS     DC    32C'.'                                                           
         LTORG                                                                  
*                                                                               
$$CODE   LOCTR ,                   BACK TO CODE LOCATION                        
*                                                                               
         EJECT                                                                  
*************************************************************                   
* DSECT TO COVER WORKING STORAGE                            *                   
*************************************************************                   
         SPACE 1                                                                
WORKD    DSECT                                                                  
SAVERD   DS    A                                                                
SAVERC   DS    A                                                                
SAVERE   DS    A                                                                
*                                                                               
APARM    DS    F                                                                
PARMS    DS    6F                                                               
         ORG   PARMS                                                            
P1       DS    F                                                                
         ORG   P1                                                               
P1ACT    DS    X                                                                
P1ADDR   DS    XL3                                                              
P2       DS    F                                                                
         ORG   P2                                                               
P2LEN    DS    X                                                                
P2ADDR   DS    XL3                                                              
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
         ORG                                                                    
*                                                                               
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    X                                                                
*                                                                               
DMCB     DS    6F                                                               
PARM     DS    6F                                                               
CARD     DS    CL80                                                             
*                                                                               
WORK     DS    XL64                                                             
WORK1    DS    XL64                                                             
XMLWORK  DS    XL128                                                            
*                                                                               
WORKX    EQU   *                                                                
         EJECT                                                                  
       ++INCLUDE DDXMLD                                                         
*************************************************************                   
* OTHER DSECTS                                              *                   
*************************************************************                   
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'001DDXML     07/23/14'                                      
         END                                                                    
