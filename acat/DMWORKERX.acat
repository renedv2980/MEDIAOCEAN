*          DATA SET DMWORKERX  AT LEVEL 006 AS OF 05/01/02                      
*CATALP WORKER                                                                  
       ++INCLUDE DMGREQUS                                                       
         TITLE 'DMWORKER - PROCESS WORK FILES GEND BY DMWK MACRO'               
         PRINT NOGEN                                                            
WORKER   CSECT                                                                  
         NMOD1 WORKX-WORKD,**WRKR**                                             
         USING WORKD,RC                                                         
         LR    RA,R1               RA=A(DMCB PARM LIST)                         
         USING DMCBD,RA                                                         
         L     R2,DM2              R2=A(WORKER FILE DTF/DCB)                    
         USING WORKERD,R2                                                       
*                                                                               
         MVI   DM3,0               RESET ERROR BYTE                             
         XC    P1(24),P1           SET DADDS PARAM LIST                         
         ST    R2,P4               SET A(DTF/DCB)                               
         LA    RE,P6                                                            
         ST    RE,P5               SET A(DISK ADDR)                             
*                                                                               
         TM    WRKOPEN,X'20'       TEST FILE OPEN                               
         BO    WRKR2                                                            
         GOTO1 =V(DADDS),P1,A(DAOPEN)                                           
         OC    WRKRELO,WRKRELO     DID USER SPECIFY A BUFFER                    
         BZ    SRCH                                                             
         LA    R7,WRKRELO          RELOCATE ADDRESS                             
         S     R7,WRKRELO                                                       
         A     R7,WRKABUFF                                                      
         ST    R7,WRKABUFF         SAVE A(TRACK BUFFER)                         
         USING BUFFD,R7                                                         
         XC    BUFFINFO,BUFFINFO   CLEAR BUFFER CAPACITY INFO                   
         MVC   P3+2(2),=X'FFFF'                                                 
         GOTO1 =V(DADDS),P1,A(DARPT)                                            
         L     RE,P2                                                            
         MVC   BUFFDEV,0(RE)       SAVE DEVICE INFO IN BUFFER                   
         B     SRCH                                                             
         SPACE 2                                                                
WRKR2    L     RE,DM1              TEST SEARCH FOR EOF COMMAND                  
         CLC   0(3,RE),=C'SRCH'                                                 
         BNE   WRKCMD                                                           
         MVC   P6,WRKINEXT         SET LAST KNOWN INDEX REC                     
         B     SRCH3                                                            
         EJECT                                                                  
* READ INDEX RECORDS TO FIND LAST USED                                          
*                                                                               
SRCH     MVC   P6,=X'00010000'     SET FIRST REC-1                              
         MVC   WRKNEXT,DATASTRT    PRESET FILE START TTB0                       
*                                                                               
SRCH2    IC    RE,P6+2             NEXT REC                                     
         LA    RE,1(RE)                                                         
         STC   RE,P6+2                                                          
*                                                                               
SRCH3    GOTO1 =V(DADDS),P1,A(RDID),WRKIX                                       
         TM    P3+1,X'08'          INDEX RECORD FOUND                           
         BZ    SRCH4               YES                                          
         CLC   P6,=X'00010100'     TEST IF FIRST RECORD NOT FOUND               
         BE    SRCH10              YES CREATE NEW INDEX                         
         LH    RE,P6               NO BUMP TO NEXT TRACK IN INDEX               
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,P6                                                            
         CLC   P6,DATASTRT         TEST END OF INDEX                            
         BL    SRCH2               NOT YET                                      
         B     SRCHX                                                            
*                                                                               
SRCH4    BAS   RE,CHECK                                                         
         OC    WRKIX,WRKIX         TEST ENTRY USED                              
         BZ    SRCHX               NO-THIS IS LAST                              
         MVC   WRKNEXT(3),WRKIXEND SAVE DATA END                                
         LH    RE,WRKNEXT          SET TO START ON NEXT TRACK                   
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,WRKNEXT          SET TT00                                     
         B     SRCH2                                                            
*                                                                               
SRCHX    MVC   WRKINEXT,P6         SAVE TTB0 OF FIRST FREE INDEX                
         B     WRKCMD                                                           
         SPACE 2                                                                
* NO INDEX RECORDS - ADD NEW                                                    
*                                                                               
SRCH10   MVC   WRKNEXT,=X'00010000'                                             
         XC    WRKIX,WRKIX                                                      
         BAS   RE,RESERVE                                                       
         BNE   SRCH                FILE WAS HELD - SEARCH INDEX AGAIN           
*                                                                               
SRCH12   GOTO1 =V(DADDS),P1,A(WTCKD),WRKIX,16                                   
         BAS   RE,CHECK                                                         
         CLC   P6,DATASTRT         TEST END OF INDEX                            
         BL    SRCH12                                                           
*                                                                               
         MVC   WRKNEXT,DATASTRT    RESTORE START DATA ADDRESS                   
         MVC   WRKINEXT,=X'00010100' SET FREE INDEX ADDRESS                     
         BAS   RE,RELEASE                                                       
         B     WRKCMD                                                           
         EJECT                                                                  
* COMMAND ANALYSIS                                                              
*                                                                               
WRKCMD   L     RE,DM1                                                           
         CLC   0(3,RE),=C'INDEX'                                                
         BE    RDINDX                                                           
         CLC   0(3,RE),=C'READ'                                                 
         BE    RDFILE                                                           
         CLC   0(3,RE),=C'WRI'                                                  
         BE    WTFILE                                                           
         CLC   0(3,RE),=C'ADD'                                                  
         BE    ADD                                                              
         CLC   0(3,RE),=C'CLO'                                                  
         BE    CLOSE                                                            
         CLC   0(3,RE),=C'DEL'                                                  
         BE    DELETE                                                           
         CLC   0(3,RE),=C'REST'                                                 
         BE    RESTORE                                                          
         CLC   0(3,RE),=C'ERA'                                                  
         BE    ERASE                                                            
         CLC   0(3,RE),=C'SRCH'  (SIC)                                          
         BE    EXIT                                                             
         DC    H'0'                                                             
         SPACE 2                                                                
EXIT     XMOD1 1                                                                
         EJECT                                                                  
RDINDX   XC    WRKFLDA,WRKFLDA                                                  
         L     R4,DM3              GET ID ADDRESS                               
         MVC   DUB,0(R4)           MOVE TO SRCH ARG                             
         MVC   P6,=X'00010000'                                                  
         OC    DUB,DUB             TEST 'FIRST' REQ                             
         BZ    RDIX2               YES                                          
         CLC   WRKIXID,DUB         TEST 'NEXT' REQUEST                          
         BNE   RDIX2                                                            
         XC    DUB,DUB             SET FOR 'FIRST' REQ, STARTING HERE           
         MVC   P6,WRKIXDA                                                       
*                                                                               
RDIX2    IC    RE,P6+2             GET NEXT INDEX RECORD                        
         LA    RE,1(RE)                                                         
         STC   RE,P6+2                                                          
         CLC   P6,WRKINEXT         TEST AGAINST FIRST FREE INDEX                
         BNL   RDIXNF              IF HIGH OR EQ, DONE                          
*                                                                               
         GOTO1 =V(DADDS),P1,A(RDID),WRKIX                                       
         TM    P3+1,X'08'          TEST REC NOT FOUND                           
         BZ    RDIX4                                                            
         LH    RE,P6               BUMP TO NEXT TRACK                           
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,P6                                                            
         B     RDIX2                                                            
*                                                                               
RDIX4    TM    DM1,X'08'           TEST USER WANTS DELETES                      
         BO    *+12                                                             
         CLI   WRKIXST,0           CHECK STATUS                                 
         BNZ   RDIX2               NO GOOD                                      
*                                                                               
         OC    DUB,DUB             TEST SPECIFIC SEARCH                         
         BZ    *+14                                                             
         CLC   WRKIXID,DUB                                                      
         BNE   RDIX2                                                            
*                                                                               
         MVC   WRKIXDA,P6          SAVE DISK ADDRESS OF INDEX                   
         L     R4,DM3                                                           
         MVC   0(16,R4),WRKIX      INDEX REC TO USER                            
         B     EXIT                                                             
         SPACE 2                                                                
RDIXNF   OI    DM3,X'90'           SET NOT FOUND                                
         XC    WRKIX,WRKIX                                                      
         B     EXIT                                                             
         EJECT                                                                  
RDFILE   MVC   P6(3),WRKIXBEG      SET START OF DATA DISK ADDR                  
         OC    WRKFLDA,WRKFLDA     TEST FIRST TIME                              
         BZ    RD2                 YES                                          
         MVC   P6,WRKFLDA          NO SET CURRENT FILE DISK ADDR                
*                                                                               
RD1      IC    RE,P6+2             BUMP TO NEXT RECORD                          
         LA    RE,1(RE)                                                         
         STC   RE,P6+2                                                          
*                                                                               
RD2      CLC   P6(3),WRKIXEND                                                   
         BNH   RD3                                                              
         OI    DM3,X'80'                                                        
         XC    WRKFLDA,WRKFLDA     CLEAR TO ALLOW RE-READ                       
         B     EXIT                                                             
*                                                                               
RD3      OC    WRKRELO,WRKRELO     SINGLE READ IF NO TRACK BUFFER               
         BNZ   RD4                                                              
         GOTO1 =V(DADDS),P1,A(RDID),DM4                                         
         B     RD5                                                              
*                                                                               
RD4      MVC   P7,P6               FULL TRACK READ                              
         LA    RF,P7                                                            
         ST    RF,P5                                                            
         L     R1,WRKABUFF                                                      
         LA    R1,BUFFSTRT-BUFFD(R1)                                            
         ST    R1,P6                                                            
         GOTO1 =V(DADDS),P1,A(RDTRK),DM4                                        
         MVC   P6,P7                                                            
         LA    RF,P6                                                            
         ST    RF,P5                                                            
*                                                                               
RD5      TM    P3+1,X'08'          TEST NO REC FOUND                            
         BO    RD6                                                              
         BAS   RE,CHECK                                                         
         MVC   WRKFLDA,P6          SAVE LAST ADDRESS                            
         B     EXIT                                                             
*                                                                               
RD6      LH    RE,P6               BUMP TO NEXT TRACK                           
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,P6                                                            
         B     RD1                                                              
         EJECT                                                                  
WTFILE   L     R5,DM4              REC ADDRESS                                  
         LH    R0,0(R5)            LENGTH                                       
         MVC   P6,WRKFLDA                                                       
*                                                                               
         GOTO1 =V(DADDS),P1,A(WTID),(R5),(R0)                                   
         BAS   RE,CHECK                                                         
         B     EXIT                                                             
         SPACE 2                                                                
DELETE   MVI   WRKIXST,X'FF'                                                    
*                                                                               
DELX     MVC   P6,WRKIXDA                                                       
*                                                                               
         GOTO1 =V(DADDS),P1,A(WTID),WRKIX,16                                    
         BAS   RE,CHECK                                                         
         B     EXIT                                                             
         SPACE 2                                                                
RESTORE  MVI   WRKIXST,0                                                        
         B     DELX                                                             
         EJECT                                                                  
ADD      LA    R6,RSVTAB           CHECK FIRST ADD                              
ADD2     CLC   0(7,R6),WRKFID                                                   
         BE    ADD20                                                            
         LA    R6,7(R6)                                                         
         CLI   0(R6),X'FF'                                                      
         BNE   ADD2                                                             
         BAS   RE,RESERVE          RESERVE IF FIRST TIME                        
         MVC   WORK(16),DM1        AND SEARCH FOR EOF                           
         GOTO1 =A(WORKER),WORK,=C'SRCH'                                         
         SPACE 2                                                                
* CHECK THE INDEX TO DELETE DUPLICATES                                          
*                                                                               
ADD4     MVC   WORK(16),DM1                                                     
         GOTO1 =A(WORKER),WORK,=C'INDEX'                                        
         CLI   8(R1),0             NON-ZERO MEANS NOT THERE                     
         BNE   ADD10                                                            
         MVI   WRKIXST,X'FF'       SET DELETE FLAG                              
         MVC   P6(3),WRKIXDA       WRITE BACK INDEX REC                         
         GOTO1 =V(DADDS),P1,A(WTID),WRKIX,16                                    
         BAS   RE,CHECK                                                         
*                                                                               
         XC    WRKIX,WRKIX                                                      
         B     ADD4                CHECK FOR MORE DUPS                          
         EJECT                                                                  
ADD10    CLC   WRKINEXT,DATASTRT   TEST ROOM IN INDEX                           
         BL    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         XC    WRKIX,WRKIX                                                      
         L     R4,DM3                                                           
         MVC   WRKIXID,0(R4)                                                    
         B     ADD22                                                            
         SPACE 2                                                                
* NOT FIRST ADD                                                                 
*                                                                               
ADD20    L     R4,DM3              TEST CALLERS KEY                             
         CLC   WRKIXID,0(R4)                                                    
         BE    ADD22                                                            
         MVC   WORK(16),DM1        IF CHANGED CLOSE PREVIOUS AND ADD            
         GOTO1 =A(WORKER),WORK,=C'CLOSE'                                        
         B     ADD                                                              
*                                                                               
ADD22    L     R5,DM4              GET REC ADDRESS                              
         LH    R0,0(R5)            GET REC LEN                                  
         OC    WRKRELO,WRKRELO                                                  
         BZ    ADD24                                                            
         BAS   RE,ADDTOBUF         ADD TO TRACK BUFFER                          
         B     EXIT                                                             
*                                                                               
ADD24    GOTO1 =V(DADDS),P1,A(WTCKD),(R5),(R0)                                  
         MVC   WRKIXEND,P6                                                      
         OC    WRKIXBEG,WRKIXBEG                                                
         BNZ   *+10                                                             
         MVC   WRKIXBEG,P6                                                      
         B     EXIT                                                             
         EJECT                                                                  
CLOSE    OC    WRKRELO,WRKRELO     WRITE LAST TRACK BUFFER                      
         BZ    *+8                                                              
         BAS   RE,ADDTRACK                                                      
         MVC   P6(3),WRKINEXT      FIRST FREE INDEX                             
*                                                                               
         GOTO1 =V(DADDS),P1,A(WTID),WRKIX,16                                    
         BAS   RE,CHECK                                                         
         SPACE 2                                                                
CLS2     IC    RE,P6+2             FIND NEXT INDEX RECORD                       
         LA    RE,1(RE)                                                         
         STC   RE,P6+2                                                          
         GOTO1 =V(DADDS),P1,A(RDID),WRKIX                                       
         TM    P3+1,X'08'                                                       
         BZ    CLS4                                                             
         LH    RE,P6               BUMP TO NEXT TRACK                           
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,P6                                                            
         CLC   P6,DATASTRT                                                      
         BL    CLS2                                                             
         B     CLSX                                                             
*                                                                               
CLS4     BAS   RE,CHECK                                                         
         MVC   WRKINEXT,P6                                                      
*                                                                               
CLSX     BAS   RE,RELEASE                                                       
         LH    RE,WRKNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,WRKNEXT                                                       
         B     EXIT                                                             
         EJECT                                                                  
* CLEAR ALL INDEX ENTRIES                                                       
*                                                                               
ERASE    MVC   P6,=X'00010000'                                                  
         BAS   RE,RESERVE                                                       
*                                                                               
ERS2     IC    RE,P6+2             BUMP TO NEXT RECORD                          
         LA    RE,1(RE)                                                         
         STC   RE,P6+2                                                          
         GOTO1 =V(DADDS),P1,A(RDID),WRKIX                                       
         TM    P3+1,X'08'                                                       
         BZ    ERS4                                                             
         LH    RE,P6               BUMP TO NEXT TRACK IF NOT FOUND              
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,P6                                                            
         CLC   P6,WRKINEXT         RESET FILE PTRS AFTER FREE INDEX             
         BL    ERS2                                                             
         MVC   WRKINEXT,=X'00010100'                                            
         MVC   WRKNEXT,DATASTRT                                                 
         BAS   RE,RELEASE                                                       
         B     EXIT                                                             
*                                                                               
ERS4     XC    WRKIX,WRKIX                                                      
         GOTO1 (RF),(R1),A(WTID)                                                
         BAS   RE,CHECK                                                         
         B     ERS2                                                             
         EJECT                                                                  
*ADD A RECORD INTO BUFFER IF ANY SPACE - R0 CONTAINS RECORD LEN                 
*                                                                               
ADDTOBUF NTR1                                                                   
         L     R7,WRKABUFF         R7=A(PASSED TRACK BUFFER AREA)               
         USING BUFFD,R7                                                         
*                                                                               
         LR    R4,R0               R4=TRACK CAPACITY REQD FOR THIS REC          
         LR    R3,R0               SAVE R0 FOR LATER                            
*NOP*    OC    DEVMOD,DEVMOD                                                    
*NOP*    BZ    *+16                                                             
*NOP*    AH    R4,DEVMOD           ADJUST FOR MODULUS                           
*NOP*    SRL   R4,5                                                             
*NOP*    SLL   R4,5                                                             
*NOP*    AH    R4,DEVIRG           ADJUST FOR IRG                               
         XC    TRKBDATA,TRKBDATA                                                
         MVI   TRKBREC,1           SET RECORD=1                                 
         MVI   TRKBKLEN,0          SET KEYLEN=0                                 
         STCM  R0,3,TRKBDLEN       SET RECLEN                                   
         ZIC   RF,DEVSUB           GET INTERNAL DEVICE CODE                     
         BCTR  RF,0                                                             
         SLL   RF,1                                                             
         LA    RF,DEVCODE(RF)                                                   
         ZIC   R0,0(RF)            GET DEVICE TYPE CODE                         
         LA    R1,TRKBDATA                                                      
         TRKCALC FUNCTN=TRKBAL,TYPE=(R0),REGSAVE=YES,MF=(E,(1))                 
         SR    R4,R4               R0 SET TO REMAINING TRACK BALANCE            
         ICM   R4,3,DEVCAPL        GET MAX TRACK CAPACITY                       
         SR    R4,R0               R4=TRACK CAPACITY REQD FOR THIS REC          
         LR    R0,R3               RESTORE R0                                   
*                                                                               
         L     R3,BUFFLTRK         R3=TRACK CAPACITY USED SO FAR                
         AR    R3,R4                                                            
         STH   R3,FULL                                                          
         CLC   FULL(2),DEVCAPL     WILL IT FIT                                  
         BNH   ADDBUF2             YES MOVE COUNT AND DATA TO BUFFER            
         BAS   RE,ADDTRACK         NO WRITE TRACK BUFFER                        
         LR    R3,R4               AND RESET TRACK CAPACITY                     
         SPACE 2                                                                
ADDBUF2  LA    R4,BUFFSTRT         FIND NEXT SLOT IN BUFFER                     
         A     R4,BUFFLCAD                                                      
         XC    0(8,R4),0(R4)       BUILD COUNT                                  
         STH   R0,6(R4)                                                         
         LA    R4,8(R4)                                                         
         LR    R1,R0               THEN MOVE IN DATA                            
         MOVE  ((R4),(R1)),(R5)                                                 
         ST    R3,BUFFLTRK         UPDATE TRACK CAPACITY LENGTH                 
         L     R4,BUFFLCAD                                                      
         AR    R4,R0                                                            
         LA    R4,8(R4)                                                         
         ST    R4,BUFFLCAD         UPDATE COUNT+DATA LENGTH                     
         B     XIT                                                              
         SPACE 2                                                                
ADDTRACK NTR1                                                                   
         XC    W1(28),W1                                                        
         L     R7,WRKABUFF         SET UP FOR WRITE TRACK                       
         OC    BUFFLTRK,BUFFLTRK                                                
         BZ    XIT                                                              
         MVC   W3,BUFFLCAD         SIGMA RECORD AND COUNT LENGTH (P3)           
         MVC   W4,DM2              A(DTF)                                       
         LA    R3,W7                                                            
         ST    R3,W5                                                            
         LA    R3,BUFFSTRT         A(BUFFER)                                    
         ST    R3,W6                                                            
         GOTO1 =V(DADDS),W1,A(WTTRK),A(WRKTKWRK)                                
         OC    W3(2),W3                                                         
         BZ    *+6                                                              
         DC    H'0'                                                             
         XC    BUFFINFO,BUFFINFO                                                
         MVC   WRKIXEND,WRKNEXT                                                 
         OC    WRKIXBEG,WRKIXBEG                                                
         BNZ   *+14                                                             
         MVC   WRKIXBEG,WRKNEXT                                                 
         MVI   WRKIXBEG+2,1        RECORD 1                                     
         SPACE 2                                                                
XIT      XIT1                                                                   
         SPACE 2                                                                
CHECK    OC    P3(2),P3            CHECK DADDS RETURN ERROR FLAGS               
         BZR   RE                                                               
         TM    P3+1,X'04'                                                       
         BZ    CHECK01                                                          
         WTO   'WORKER - END OF FILE '                                          
         ABEND 107,DUMP                                                         
CHECK01  WTO   'WORKER - ERROR '                                                
         ABEND 108,DUMP                                                         
         SPACE 2                                                                
RESERVE  NTR1                      RESERVE WORKER FILE                          
         MVI   RSVSW,0                                                          
         LA    R6,RSVTAB                                                        
RSV2     CLI   0(R6),0             TEST FILE ID IN TABLE                        
         BE    RSV4                                                             
         CLC   0(7,R6),WRKFID      COMPARE WITH WORKER FILE ID                  
         BE    RSV4                                                             
         LA    R6,7(R6)                                                         
         CLI   0(R6),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                DIE IF TABLE FULL                            
         B     RSV2                                                             
RSV4     MVC   0(7,R6),WRKFID      MOVE FILE ID TO TABLE                        
         CLI   RSVSW,0                                                          
         B     XIT                 EXIT WITH CC=EQL IF DID NOT WAIT             
         SPACE 2                                                                
RELEASE  NTR1                      RELEASE WORKER FILE                          
         LA    R6,RSVTAB                                                        
REL2     CLC   0(7,R6),WRKFID                                                   
         BE    REL4                                                             
         LA    R6,7(R6)                                                         
         CLI   0(R6),X'FF'                                                      
         BNE   REL2                                                             
         DC    H'0'                DIE IF FILE ID NOT IN TABLE                  
REL4     CLI   7(R6),X'FF'                                                      
         BE    REL6                                                             
         MVC   0(7,R6),7(R6)       SHUFFLE UP TABLE                             
         LA    R6,7(R6)                                                         
         B     REL4                                                             
REL6     XC    0(7,R6),0(R6)       CLEAR LAST ENTRY                             
         B     XIT                                                              
         EJECT                                                                  
RSVTAB   DC    6XL7'00'            RESERVED FILES TABLES                        
         DC    X'FF'                                                            
RSVSW    DC    X'00'                                                            
         SPACE 1                                                                
DEVCODE  DC    X'0A01'             3340 MVS/DDS                                 
         DC    X'0B02'             3350                                         
         DC    X'0C03'             3375                                         
         DC    X'0E04'             3380                                         
         DC    X'0F05'             3390                                         
         DC    X'0000'                                                          
         SPACE 1                                                                
DATASTRT DS    0F                                                               
*&&US*&& DC    X'000B0000'         FIRST DATA TRACK                             
*&&UK*&& DC    X'00020000'         FIRST DATA TRACK                             
         SPACE 1                                                                
         LTORG                                                                  
         SPACE 1                                                                
WRKTKWRK DS    400D                EACH RECORD REQUIRES 4D                      
         EJECT                                                                  
WORKD    DSECT                                                                  
*                                                                               
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
P7       DS    F                                                                
P8       DS    F                                                                
W1       DS    F                                                                
W2       DS    F                                                                
W3       DS    F                                                                
W4       DS    F                                                                
W5       DS    F                                                                
W6       DS    F                                                                
W7       DS    F                                                                
W8       DS    F                                                                
*                                                                               
DUB      DS    D                                                                
FULL     DS    F                                                                
WORK     DS    CL24                                                             
*                                                                               
         DS    0D                                                               
TRKBDATA DS    0XL12                                                            
         DS    XL3                 RESERVED                                     
TRKBDVTY DS    X                   DEVICE TYPE CODE                             
TRKBFLGS DS    X                   FLAGS                                        
         DS    X                   RESERVED                                     
TRKBBAL  DS    H                   TRACK BALANCE                                
TRKBREC  DS    X                   RECORD NUMBER                                
TRKBKLEN DS    X                   KEY LENGTH                                   
TRKBDLEN DS    H                   DATA LENGTH                                  
*                                                                               
WORKX    DS    0C                                                               
         SPACE 2                                                                
DMCBD    DSECT                                                                  
DM1      DS    A                   A(=C'COMMAND)                                
DM2      DS    A                   A(DTF)                                       
DM3      DS    A                   A(ID)                                        
DM4      DS    A                   A(I/O AREA)                                  
DM5      DS    A                                                                
DM6      DS    A                                                                
         SPACE 2                                                                
BUFFD    DSECT                                                                  
*                                                                               
BUFFINFO DS    0XL16                                                            
BUFFLTRK DS    XL4                 LENGTH OF TRACK USED SO FAR                  
BUFFLCAD DS    XL4                 LENGTH OF COUNT AND DATA SO FAR              
         DS    XL8                                                              
*                                                                               
BUFFDEV  DS    0CL16               DEVICE DATA FROM DADDS                       
DEVTYP   DS    X                                                                
DEVSUB   DS    X                                                                
DEVTRKS  DS    XL2                                                              
DEVIRG   DS    XL2                                                              
DEVCAPL  DS    XL2                                                              
DEVCAPP  DS    XL2                                                              
DEVRZERO DS    XL2                                                              
DEVSCT   DS    XL2                                                              
DEVMOD   DS    XL2                                                              
*                                                                               
BUFFSTRT DS    0X                  START OF RECORD DATA                         
         EJECT                                                                  
*DMWORKERD                                                                      
       ++INCLUDE DMWORKERD                                                      
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'006DMWORKERX 05/01/02'                                      
         END                                                                    
