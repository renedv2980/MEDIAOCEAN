*          DATA SET MPQFAC     AT LEVEL 013 AS OF 05/01/02                      
*CATALP MPQFAC                                                                  
         TITLE  'MPQFAC - MEDIA PLANNING- Q SYSTEM EXTRACT FACILITY'            
         SPACE 2                                                                
*        PARAMETER LIST                                                         
*                                                                               
*  PARAM 1  BYTE 0     (EXEC ONLY) -X'80'=NEED TO TRANSLATE                     
*                                   X'40'=SUPPRESS EXEC (TRANS ONLY)            
*                                   X'20'=TEST MODE (NOT USED)                  
*                                   X'10'=COUNT (XMULT RESULT BIT VECT)         
*                      A(COMMAND)                                               
*                    ** EXEC-    EXECUTE BOOLEAN                                
*                                OPERATOR/OPERAND STRING                        
*                    ** XMULT-   COUNT A SINGLE VECTOR OR                       
*                                CROSS-MULTIPLY 2 VECTORS                       
*                                (AND SET UNWGTD AND WGTD COUNTS)               
*                    ** SAVW-    READ WEIGHTS AND SAVE IN MPQBWSAV              
*                    ** TARGVAL- PROCESS TARGET/QSPEC                           
*                                                                               
*  PARAM 2  BYTE 0     DUMP CONTROL- X'00'=NO,E=ON ERROR,F=ALWAYS               
*           BYTE 1-3   A(MPQBLK)  CONTROL BLOCK                                 
*  PARAM 3  BYTE 0     FOR EXEC,  LENGTH OF INPUT (IF TRANSLATING)              
*                      FOR XMULT, B=BIT,A=ARITHMETIC VARIABLE                   
*           BYTE 1-3   A(INPUT)   COMMAND STRING OR CCP/QSPEC                   
*                                 LANGUAGE STATEMENT      (EXEC)                
*                                 OR 1ST XMULT OPERAND    (XMULT)               
*  PARAM 4  BYTE 0     FOR XMULT, AS ABOVE                                      
*           BYTE 1-3   A(INPUT)   2ND XMULT OPERAND                             
*                                                                               
*  PARAM 5  BYTE 0     FOR XMULT, AS ABOVE                                      
*           BYTE 1-3   A(INPUT)   XMULT RESULT VECTOR                           
*                                 (OPTIONAL FOR AXB AND BXA,                    
*                                 REQUIRED FOR AXCA, NOT USED                   
*                                 FOR BXB OR SINGLE XMULT)                      
*                                                                               
*  **NB** - EXCEPT FOR MPQBWPRE (WGT PRECISION) AND MPQBPPRE                    
*           (DESIRED POP PREC) PRECISION RANGE IS 0 - .00000                    
*                                                                               
         PRINT NOGEN                                                            
MPQFAC   CSECT                                                                  
         NMOD1 WKDL,MPQFAC,RA,RR=R3   **RA IS 2ND BASE REG                      
         USING WKD,RC                                                           
         LR    RE,RC                                                            
         LA    RF,WKDL                                                          
         XCEF                                                                   
*                                                                               
         ST    R3,RELO                                                          
         ST    R1,SAVR1                                                         
         MVC   PARAMS,0(R1)                                                     
         MVC   WRKEXECS,EXECS    MOVE CERTAIN EXECUTES TO WS                    
         MVI   CNDOPTSW,C'N'                                                    
*                                                                               
         L     R9,PARAM2                                                        
         USING MPQBLKD,R9                                                       
         MVI   MPQBERR,0                                                        
         MVI   MPQBEMSG,C' '                                                    
         MVC   MPQBEMSG+1(L'MPQBEMSG-1),MPQBEMSG                                
         L     RF,=V(MPQTRAN)                                                   
         A     RF,RELO                                                          
         STCM  RF,15,MPQBQTRN                                                   
*                                                                               
         L     RF,MPQBNRES         SET BIT VECTOR LENGTH IN BYTES               
         LA    RF,7(RF)            =NRES / 8 (FORCED UP)                        
         SRA   RF,3                                                             
         STH   RF,MPQBBVLN                                                      
*                                                                               
         L     R4,MPQBSTK          A(STACK AREA)                                
         A     R4,MPQBSTLN         PLUS LENGTH                                  
         SR    R4,RF               LESS LENGTH OF ONE VECTOR                    
         ST    R4,LAPOS            GIVES START OF LAST STACK SLOT               
*                                                                               
         L     RF,PARAM1                                                        
         MVC   COMMAND,0(RF)                                                    
*                                                                               
         CLC   =C'EXEC',COMMAND    EXEC                                         
         BE    EXEC                                                             
         CLC   =C'XMULT',COMMAND   XMULT                                        
         BE    XMULT                                                            
         CLC   =C'SAVW',COMMAND    SAVW                                         
         BE    SAVW                                                             
         CLC   =C'TARGV',COMMAND   TARG/QSPEC VALUE                             
         BE    TARGVAL                                                          
         DC    H'0'                                                             
*                                                                               
EXIT     DS    0H                                                               
         CLI   PARAM2,C'F'         TEST ALWAYS TO DUMP                          
         BE    EXITDMP                                                          
         CLI   MPQBERR,0                                                        
         BE    EXITX                                                            
         GOTO1 =A(SETERM),DMCB,WKD,RR=RELO     SET ERROR MESSAGE                
*                                                                               
EXIT4    DS    0H                                                               
         CLI   PARAM2,0            TEST TO DUMP ON ERROR                        
         BE    EXITX               NO                                           
*                                                                               
EXITDMP  DC    H'0'                                                             
EXITX    DS    0H                                                               
         L     R1,SAVR1                                                         
         MVC   0(24,R1),PARAMS     RETURN AMMENDED PARAMS                       
         XIT1                                                                   
         SPACE 2                                                                
*              EXECUTED INSTRUCTIONS                                            
*                                                                               
BSORX    OC    0(0,R5),0(R4)                                                    
BSANDX   NC    0(0,R5),0(R4)                                                    
BSEORX   XC    0(0,R5),0(R4)                                                    
BSPMVC   MVC   0(0,R3),2(R8)                                                    
BSPRMVC  MVC   1(0,R3),0(R3)                                                    
*                                                                               
EXECS    DS    0H                  THESE INSTRUCTIONS ARE MOVED TO              
*                                  WORK AND ADJUSTED THERE                      
CTRICM   ICM   R1,0,0(RE)                                                       
CTRSTCM  STCM  R1,0,0(RE)                                                       
CTRICM2  ICM   R3,0,0(R5)                                                       
XABICM   ICM   R1,0,0(RE)                                                       
XABSTCM  STCM  R1,0,0(RE)                                                       
AV1ICM   ICM   R1,0,0(R6)                                                       
AV2ICM   ICM   R1,0,0(R7)                                                       
AVSTCM   STCM  R1,0,0(R8)                                                       
BSNSRA   SRA   R5,0                                                             
*                                                                               
*              DATA CONSTANT LISTS                                              
*                                                                               
BSXCTAB  DC    X'FF80C0E0F0F8FCFE'                                              
ICMSKS   DC    X'0103070F'         MASKS FOR EXECUTED ICM INST                  
         DS    0F                                                               
DVSRTAB  DC    AL4(1,10,100,1000,10000,100000)                                  
RNDRTAB  DC    AL4(0,5,50,500,5000,50000)                                       
BSNSRAL  DC    AL1(24,16,8,0)      SHIFT DISPLACEMENTS                          
BITTAB   DC    X'8040201008040201' BIT TABLE FOR ACCESS CHECK                   
         EJECT                                                                  
*                                  SAVE WEIGHTS                                 
*                                  ------------                                 
         SPACE 2                                                                
SAVW     DS    0H                                                               
         MVC   AWGTAB,MPQBWSAV     A(WEIGHT SAVE AREA)                          
         MVC   CDPTR(5),MPQBWCRD   SET CARD, COL. AND FIELD LENGTH              
         GOTO1 =A(SAVN),DMCB,WKD,RR=RELO  USE VARIABLE SAVE ROUT                
         B     EXIT                                                             
         EJECT                                                                  
*                                  TARGVAL- VALUE TARGET/QSPEC                  
*                                  ---------------------------                  
         SPACE                                                                  
TARGVAL  DS    0H                                                               
         L     R8,MPQBTGRC         A(TARG/QSPEC RECORD)                         
         USING QTGKEY,R8                                                        
         MVI   QPSW,C'T'           SET HAVE TRU TARGET                          
         CLI   QTGKRCD,X'25'                                                    
         BE    *+8                                                              
         MVI   QPSW,C'Q'           ELSE HAVE QSPEC                              
         LA    R8,QTGELS-QTGREC(R8) FIRST ELEM                                  
         ST    R8,FRSTEL           SAVE IT                                      
         MVI   FELSW,C'Y'                                                       
         MVI   ELCODLO,X'51'       SPEC ELEM                                    
         MVI   ELCODHI,X'51'                                                    
         XC    DUB,DUB             NO WAVE DATE                                 
         CLI   QPSW,C'T'           IF TRUE TARGET REC                           
         BE    *+16                                                             
         MVC   DUB(2),MPQBWVDT     FOR QSPEC MAY NEED WAVE DATE                 
         XC    DUB(2),=2X'FF'      COMPLEMENT                                   
*                                                                               
TGV4     DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BE    *+6                                                              
         DC    H'0'                MISSING BASE SPEC ELEM                       
         CLI   4(R8),0             TEST NO COMP WGT CODE                        
         BNE   TGV4                                                             
         CLC   DUB(2),2(R8)        AND RIGHT WAVE                               
         BH    TGV4                (MOST RECENT)                                
*                                  HAVE FIRST BASE SPEC ELEM                    
*                                  PROCESS BASE SPECS AND COUNT                 
         MVI   MPQBCWTP,0                                                       
         GOTO1 MPQBQFAC,DMCB,(X'90',=C'EXEC'),MPQBLKD,(R8),0                    
         CLI   MPQBERR,0                                                        
         BNE   EXITX                                                            
*                                                                               
         LH    R1,MPQBBVLN         MOVE VECTOR TO TARGET BIT VECTOR             
         L     RF,MPQBTGBV                                                      
         L     RE,MPQBSTK                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
*                                                                               
         CLI   MPQBNOTW,C'Y'       TEST SUPRESS COMPONENT WGTS                  
         BE    TGV90               YES                                          
*                                  NO- FIND TARG DEFINITION ELEM                
         L     R8,FRSTEL           TO GET COMPONENT WEIGHT CONTROLS             
         MVI   ELCODLO,X'10'                                                    
         MVI   ELCODHI,X'10'                                                    
         MVI   FELSW,C'Y'                                                       
         BAS   RE,NEXTEL                                                        
         BE    *+6                                                              
         DC    H'0'                NO DEFINITION ELEM                           
*                                                                               
         CLI   QPSW,C'T'           TEST TRUE TARG REC                           
         BNE   TGV6                                                             
*                                                                               
         USING QTGELEM,R8                                                       
         MVC   MPQBCWTP,QTGCOMPW   WEIGHT TYPE                                  
         MVC   MPQBCWPR,QTGCWPRE   PREC                                         
         MVC   MPQBCWDL,QTGCWDLN   DATA LENGTH                                  
         B     TGV8                                                             
*                                                                               
TGV6     DS    0H                  QSPEC RECORD                                 
         USING QSPELEM,R8                                                       
         MVC   MPQBCWTP,QSPCOMPW   WEIGHT TYPE                                  
         MVC   MPQBCWPR,QSPCWPRE   PREC                                         
         MVC   MPQBCWDL,QSPCWDLN   DATA LENGTH                                  
*                                                                               
TGV8     DS    0H                                                               
         CLI   MPQBCWTP,C' '       IF NOT A COMP WGTD                           
         BNH   TGV90               TARG/QSPEC, THEN DONE                        
*                                  SET BIT VECTOR AS FILTER                     
         MVC   SAVFLST,MPQBFLST    SAVE CALLER'S LIST                           
         LA    RF,TROUT            USE FOR FILTER LIST                          
         ST    RF,MPQBFLST                                                      
         L     RE,MPQBTGBV                                                      
         ST    RE,0(RF)                                                         
         MVI   0(RF),X'C0'         SET EOL AND FILTER ACTIVE                    
*                                                                               
*                                  INITIALIZE WEIGHTED VECTOR                   
         L     RF,MPQBNRES         NO. OF RESPS                                 
         ZIC   R0,MPQBCWDL         X DATA LENGTH                                
         MR    RE,R0                                                            
         L     RE,MPQBTGWV                                                      
         XCEF                                                                   
*                                                                               
         BAS   RE,CWSET            SET CONTROLS FOR APPLYING VALUES             
         CLI   MPQBCWTP,C'A'       FOR ADDITIVE- LEAVE VECTOR AT ZEROS          
         BE    TGV12                                                            
*                                  BUT FOR MULTIPLICATIVE                       
         MVC   VARFACT,VARDVSR     INITIALIZE TO PROPER VALUE                   
         LA    RF,CTR75            USE ADDITIVE ROUTINE TO SET STARTS           
         ST    RF,CTRBRNCH         BRANCH WITHIN CTR ROUTINE                    
         MVC   XMSTR,MPQBTGBV      A(VECTOR) FOR CTR                            
         MVI   XMSTR,C'B'          BIT VECTOR                                   
         BAS   RE,CTR                                                           
*                                                                               
TGV12    DS    0H                  NOW LOOK FOR WEIGHT DEFINITION ELEMS         
         L     R8,FRSTEL                                                        
         MVI   FELSW,C'Y'                                                       
*                                                                               
TGV14    DS    0H                                                               
         MVI   ELCODLO,X'25'                                                    
         MVI   ELCODHI,X'25'                                                    
         BAS   RE,NEXTEL                                                        
         BNE   TGV30               END OF WGT ELEMS                             
*                                                                               
         USING QTGWGTEL,R8         NB- QSPWGTEL IS IDENTICAL                    
         MVC   DUB+2(1),QTGWCOD    SAVE WGT CODE                                
         MVC   VARFACT,QTGWGT      SAVE WGT VALUE                               
         ST    R8,SAVEL            SAVE ELEM ADDR                               
*                                  GET SPEC ELEMS FOR THIS WGT                  
         L     R8,FRSTEL                                                        
         MVI   ELCODLO,X'51'                                                    
         MVI   ELCODHI,X'51'                                                    
         XC    DUB(2),DUB          NO WAVE CHECK IF TRUE TARG                   
         CLI   QPSW,C'T'           IF TRUE TARGET                               
         BE    *+16                                                             
         MVC   DUB(2),MPQBWVDT     FOR QSPEC MAY NEED WAVE DATE                 
         XC    DUB(2),=2X'FF'      COMPLEMENT                                   
         MVI   FELSW,C'Y'                                                       
*                                                                               
TGV16    DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BE    *+6                                                              
         DC    H'0'                MISSING SPEC ELEM FOR WEIGHT                 
         CLC   4(1,R8),DUB+2       TEST RIGHT WGT CODE                          
         BNE   TGV16                                                            
         CLC   DUB(2),2(R8)         AND RIGHT WAVE                              
         BH    TGV16               (MOST RECENT)                                
*                                  HAVE FIRST SPEC ELEM FOR THIS WGT            
         GOTO1 MPQBQFAC,DMCB,(X'80',=C'EXEC'),MPQBLKD,(R8),0                    
         CLI   MPQBERR,0                                                        
         BNE   EXITX                                                            
*                                  SET BRANCH WITHIN CTR ROUTINE                
         LA    RF,CTR70            FOR MULTIPLICATIVE                           
         CLI   MPQBCWTP,C'M'                                                    
         BE    *+8                                                              
         LA    RF,CTR75            FOR ADDITIVE                                 
*                                                                               
         ST    RF,CTRBRNCH                                                      
         MVC   XMSTR,MPQBSTK       A(VECTOR) FOR CTR                            
         MVI   XMSTR,C'B'          BIT VECTOR                                   
         BAS   RE,CTR                                                           
*                                                                               
         L     R8,SAVEL            A(CURRENT WGT ELEM)                          
         B     TGV14               GET NEXT                                     
*                                                                               
TGV30    DS    0H                  NO MORE WEIGHTS- COUNT FINAL VECTOR          
*                                  MUST SET AS VARIABLE                         
         LA    R3,TROUT            USE TROUT TO HOLD VAR DESC                   
         USING MPQVARD,R3                                                       
         MVI   MPQVNO,0                                                         
         MVI   MPQVCNTL,0                                                       
         MVC   MPQVDLEN,MPQBCWDL   DATA LEN                                     
         MVC   MPQVPREC,MPQBCWPR   PREC                                         
         MVC   MPQVSTR,MPQBTGWV                                                 
*                                                                               
         GOTO1 MPQBQFAC,DMCB,=C'XMULT',MPQBLKD,(C'A',(R3)),0                    
         CLI   MPQBERR,0                                                        
         BNE   EXITX                                                            
*                                                                               
         L     R1,MPQBSAM          MUST RETURN SAM TO UNITS                     
         M     R0,=F'1'            NB- POP ALREADY OK                           
         L     RF,VARDVSR                                                       
         BAS   RE,DIV                                                           
         ST    R1,MPQBSAM                                                       
*                                                                               
         MVC   MPQBFLST,SAVFLST    RESTORE CALLER'S FILTER LIST                 
         DROP  R3                                                               
*                                                                               
TGV90    DS    0H                                                               
         B     EXIT                                                             
         SPACE 2                                                                
CWSET    DS    0H                  SET CONTROLS FOR APPLYING WGTS               
         MVI   WPREC,0                                                          
         MVC   WPREC+1(1),MPQBCWPR   SET PRECISION                              
         NI    WPREC+1,X'7F'         STRIP ANY NEGATIVE                         
         MVI   WDLEN,0                                                          
         MVC   WDLEN+1(1),MPQBCWDL   SET DATA LENGTH                            
         MVC   AWGTAB,MPQBTGWV       TARG WGTD VECTOR AREA                      
*                                                                               
         LH    RF,WPREC                                                         
         SLL   RF,2                                                             
         LR    R6,RF                                                            
         LA    RF,DVSRTAB(RF)                                                   
         MVC   VARDVSR,0(RF)       SET DIVISOR FOR COMPS                        
         LA    R6,RNDRTAB(R6)                                                   
         MVC   VARRNDR,0(R6)       SET ROUNDER                                  
*                                                                               
         LH    R8,WDLEN                                                         
         IC    R8,ICMSKS-1(R8)     SET MASK FOR ICM'S                           
         STC   R8,BYTE                                                          
         NI    CTRICMW+1,X'F0'                                                  
         NI    CTRSTCMW+1,X'F0'                                                 
         OC    CTRICMW+1(1),BYTE                                                
         OC    CTRSTCMW+1(1),BYTE                                               
         BR    RE                                                               
         EJECT                                                                  
*                                  EXECUTE OPERATOR/OPERAND STRING              
*                                  -------------------------------              
         SPACE 2                                                                
EXEC     DS    0H                                                               
         L     R2,PARAM3           A(INPUT STRING)                              
         LA    R2,0(R2)                                                         
         TM    PARAM1,X'80'        TEST NEED TO TRANSLATE                       
         BZ    EXEC4               NO                                           
*                                  TRANSLATE INPUT STRING                       
         MVC   DMCB(4),PARAM3      A(INPUT) AND LENGTH                          
         LA    R4,L'TROUT          SET MAXIMUM OUTPUT LENGTH                    
         GOTO1 MPQBQTRN,DMCB,,((R4),TROUT),MPQBLKD                              
*                                                                               
         MVC   PARAM4,DMCB+4         ADDRESS AND LENGTH                         
         MVC   PARAM3(1),DMCB+8      RETURN TYPE ALSO                           
*                                                                               
         CLI   MPQBERR,0                                                        
         BNE   EXIT4                                                            
*                                                                               
         CLI   DMCB+8,C'N'         DONT EXEC IF TYPE=N                          
         BE    EXIT                (NUMERIC CCP SPEC)                           
*                                                                               
         LA    R2,TROUT                                                         
*                                                                               
EXEC4    DS    0H                                                               
         TM    PARAM1,X'40'         TEST SUPPRESS EXECUTE                       
         BNZ   EXIT                                                             
*                                                                               
         L     R3,MPQBSTK                                                       
         LA    RF,NESTLST          INITIALIZE NESTING CONTROLS                  
         XC    0(NESTLSTL,RF),0(RF)                                             
         ST    RF,CURNEST                                                       
         LA    RF,NESTWA                                                        
         ST    RF,NESTNXT                                                       
*                                                                               
BS10     DS    0H                                                               
         CLI   0(R2),0             EOL                                          
         BE    BS12                                                             
         CLI   0(R2),X'FF'         EOL                                          
         BE    BS12                                                             
*                                                                               
         ZIC   RF,0(R2)            INDEX INTO BRANCH TABLE                      
*                                                                               
         TM    0(R2),X'80'         80 = OPERATOR                                
         BNZ   BS11                                                             
*                                  HAVE OPERAND                                 
         C     R3,LAPOS            TEST ROOM FOR THIS OPERAND                   
         BNH   BS10B                                                            
         MVI   MPQBERR,MPQESTMX    TOO MANY STACK LEVELS                        
         B     BSX                                                              
*                                                                               
BS10B    DS    0H                                                               
         CLI   0(R2),MAXOPNDS                                                   
         BH    BSSTRERR                                                         
         MVI   NFSW,C'N'           SET OFF NUMERIC SW                           
         CLI   NRQSW,C'Y'          TEST IF NUMERIC COMPARAND REQUIRED           
         BNE   BS10C                                                            
         CLM   RF,1,=AL1(03)       NUMERIC COMP IS ONLY ALLOWED VALUE           
         BNE   BSNUMERR                                                         
*                                                                               
BS10C    SLL   RF,2                                                             
         LA    RF,OPANDBR-4(RF)                                                 
         OC    0(4,RF),0(RF)                                                    
         BZ    BSSTRERR                                                         
         BASR  RE,RF                                                            
         CLI   MPQBERR,0                                                        
         BNE   BSX                                                              
         AH    R3,MPQBBVLN         BUMP STACK POSITION                          
         AH    R2,OPNDLEN          NEXT ENTRY                                   
         B     BS10                                                             
*                                                                               
BS11     DS    0H                                                               
         CLI   0(R2),MAXOPTRS                                                   
         BH    BSSTRERR                                                         
         MVC   OPTCD,0(R2)                                                      
         SH    RF,=H'128'          STRIP HOB                                    
         CLI   NRQSW,C'Y'          TEST IF NUMERIC COMPARAND REQUIRED           
         BNE   BS11A                                                            
         CLM   RF,1,=AL1(04)       CAN'T BE 1-4 (OR-NOT)                        
         BNH   BSNUMERR                                                         
*                                                                               
BS11A    SLL   RF,2                X 4                                          
         LA    RF,OPTORBR-4(RF)                                                 
         OC    0(4,RF),0(RF)                                                    
         BZ    BSSTRERR                                                         
         BASR  RE,RF                                                            
         B     BS10                                                             
*                                  END OF STRING                                
*                                  -------------                                
BS12     DS    0H                                                               
         L     RF,CURNEST          CURRENT SPOT IN NEST LIST                    
         LA    R0,NESTLST          TEST VS START                                
         CR    RF,R0                                                            
         BNH   BS13                NO BACK LINK                                 
         SH    RF,=Y(NESTLSTL)     BACK UP IN LIST                              
         ST    RF,CURNEST                                                       
         USING NESTLSTD,RF                                                      
         L     R2,NESTBACK         BACK LINK                                    
         MVC   NESTNXT,NESTSTR      RELEASE CURRENT NEST AREA                   
         MVC   PTRS(PTRSL),NESTPTRS       RESTORE POINTERS                      
         B     BS10                CONTINUE WHERE LEFT OFF                      
         DROP  RF                                                               
*                                                                               
BS13     DS    0H                                                               
         CLI   NRQSW,C'Y'          TEST IF NUMERIC COMPARAND STILL O/S          
         BE    BSNUMERR                                                         
         SH    R3,MPQBBVLN                                                      
         C     R3,MPQBSTK          TEST STRING OK                               
         BNE   BSSTRERR                                                         
*                                                                               
*                                  APPLY FILTERS                                
*                                  -------------                                
*                                                                               
         CLI   MPQBNOFL,C'Y'       TEST FILTERING SUPPRESSED                    
         BE    BS24                YES- SKIP                                    
         ICM   R6,15,MPQBFLST      TEST FILTER LIST PRESENT                     
         BZ    BS24                NO                                           
*                                                                               
BS15     DS    0H                                                               
         TM    0(R6),X'40'         TEST THIS FILTER ACTIVE                      
         BZ    BS20                NO - GET NEXT                                
*                                                                               
         L     R3,MPQBSTK          TOP OF STACK                                 
         LR    R5,R3                                                            
         SR    R4,R4                                                            
         ICM   R4,7,1(R6)         ADDRESS OF FILTER                             
         BZ    BS20                                                             
*                                                                               
         LH    RF,MPQBBVLN                                                      
*                                                                               
BS16     DS    0H                                                               
         LR    R8,RF                                                            
         CH    R8,=H'256'                                                       
         BNH   *+8                                                              
         LA    R8,256                                                           
         BCTR  R8,R0                                                            
         EX    R8,BSANDX                                                        
         LA    R8,1(R8)                                                         
         AR    R4,R8                                                            
         AR    R5,R8                                                            
         SR    RF,R8                                                            
         BP    BS16                                                             
*                                                                               
BS20     DS    0H                                                               
         TM    0(R6),X'80'         TEST EOL                                     
         BNZ   BS24                                                             
         LA    R6,4(R6)            NEXT FILTER                                  
         B     BS15                                                             
*                                                                               
BS24     DS    0H                                                               
         TM    PARAM1,X'10'        TEST TO COUNT RESULT                         
         BZ    BSX                                                              
*                                                                               
         MVC   DMCB+8(4),MPQBSTK                                                
         MVI   DMCB+8,C'B'         BIT VECTOR                                   
         XC    DMCB+12(8),DMCB+12  CLEAR 2ND VECT + SET NO RESULT VECT          
         CLI   MPQBCWTP,0          TEST ANY COMP WEIGHTS                        
         BE    BS26                NO - SKIP                                    
         CLI   MPQBNOTW,C'Y'       TEST TO SUPPRESS COMP TARG WGT               
         BE    BS26                YES                                          
*                                  MUST SET AS VARIABLE                         
         LA    R3,TROUT            USE TROUT TO HOLD VAR DESC                   
         USING MPQVARD,R3                                                       
         MVI   MPQVNO,0                                                         
         MVI   MPQVCNTL,0                                                       
         MVC   MPQVDLEN,MPQBCWDL   DATA LEN                                     
         MVC   MPQVPREC,MPQBCWPR   PREC                                         
         MVC   MPQVSTR,MPQBTGWV                                                 
         ST    R3,DMCB+12                                                       
         MVI   DMCB+12,C'A'        ARITHMETIC                                   
*                                                                               
BS26     DS    0H                                                               
         GOTO1 MPQBQFAC,DMCB,=C'XMULT',MPQBLKD                                  
         CLI   MPQBERR,0                                                        
         BNE   EXITX                                                            
*                                                                               
BSX      DS    0H                                                               
         B     EXIT                                                             
         SPACE 2                                                                
BSSTRERR DS    0H                                                               
         MVI   MPQBERR,MPQESYNT                                                 
         B     BSX                                                              
         SPACE 2                                                                
BSNUMERR DS    0H                                                               
         MVI   QPSW,C'Q'           FORCE TO QSPEC FOR SETERM                    
         MVI   MPQBERR,MPQENUM     NUMERIC COMPARAND REQUIRED                   
         B     BSX                                                              
         SPACE 2                                                                
BSQSPERR DS    0H                                                               
         MVI   QPSW,C'Q'                                                        
         MVI   MPQBERR,MPQEQNM     QSPEC NOT NUMERIC                            
         B     BSX                                                              
         EJECT                                                                  
*                                  OPERAND AND OPERATOR BRANCH TABLES           
*                                  ----------------------------------           
         SPACE 2                                                                
OPANDBR  DS    0F                  OPERAND BRANCH TABLE                         
         B     BSCPCH      01      PUNCH                                        
         B     BSCBVN      02      BITVAR POINTER                               
         B     BSCNF       03      NUMERIC FIELD COMPARE                        
         B     BSCVAR      04      VARIABLE COMPARE                             
         B     BSCIMM      05     *IMMEDIATE VECTOR (TESTING ONLY)              
         B     BSQSPEC     06      QSPEC (POINTER IF NUMERIC)                   
         B     BSTARG      07      TARGET CODE                                  
         B     BSCBVP      08     *BITVAR POINTER (ADDR, NOT NUMBER)            
         B     BSCVECT     09     *ACTUAL BIT VECTOR ADDRESS                    
         B     BSCNOOP     0A     *'NO-OP' -USE VECTOR AT CURRENT               
*                                  STACK POSITION (USEFUL AS FIRST              
*                                  OPERAND TO OPERATE ON A PREVIOUS             
*                                  RESULT)                                      
*                                                                               
MAXOPNDS EQU   (*-OPANDBR)/4                                                    
         SPACE 2                                                                
OPTORBR  DS    0F                  OPERATOR BRANCH TABLE                        
         B     BSOR        81      OR  OPERATOR                                 
         B     BSAND       82      AND                                          
         B     BSEOR       83      EOR                                          
         B     BSNOT       84      NOT (LOGICAL NEGATION)                       
         B     BSCRDSET    85      SET CARD POINTER                             
         B     BSCOLSET    86      SET COLUMN POINTER                           
         B     BSVSET      87      SET VARIABLE POINTER                         
         B     BSFSET      88     *SET FILTER                                   
         B     BSFCAN      89     *CANCEL FILTER                                
         B     BSBVSET     8A     *SET BITVAR                                   
         B     BSAVSETN    8B     *SET ARITHMETIC VAR FROM FILE                 
         B     BSAVSETE    8C     *SET ARITHMETIC VAR FROM EXPRESSION           
         B     BSIVAR      8D     *INITIALIZE VARIABLE                          
         B     BSCXV       8E     *APPLY VALUE AS WGT FOR COMP. VAR.            
         B     BSCOPTSW    8F      SET CONDITION OPTIONAL SWITCH                
         B     BSNFLEN     90      SET LENGTH OF NUMERIC FIELD                  
         B     BSAPLIT     91     *APPLY LITERAL TO ARITHMETIC VAR.             
*                                                                               
*                                 *- MPQTRAN DOES NOT HANDLE                    
*                                    THESE FUNCTIONS                            
MAXOPTRS EQU   (*-OPTORBR)/4+X'80'                                              
*                                  EQUATES FOR CERTAIN OPERATIONS               
APLIT    EQU   X'91'                                                            
         EJECT                                                                  
BSOR     DS    0H                  'OR' (X'81')                                 
*                                  ------------                                 
         LA    R7,BSORX                                                         
         B     BSOPTR                                                           
         SPACE 2                                                                
BSAND    DS    0H                  'AND' (X'82')                                
*                                  -------------                                
         LA    R7,BSANDX                                                        
         B     BSOPTR                                                           
         SPACE 2                                                                
BSEOR    DS    0H                  'EOR' (X'83')                                
*                                  -------------                                
         LA    R7,BSEORX                                                        
         B     BSOPTR                                                           
         SPACE 2                                                                
BSOPTR   DS    0H                                                               
         LR    R4,R3                                                            
         SH    R4,MPQBBVLN         R4 = FIRST OPERAND                           
         LR    R5,R4                                                            
         SH    R5,MPQBBVLN         R5 = SECOND                                  
*                                                                               
         LH    RF,MPQBBVLN                                                      
BSOPTR2  DS    0H                                                               
         LR    R8,RF                                                            
         CH    R8,=H'256'                                                       
         BNH   *+8                                                              
         LA    R8,256                                                           
         BCTR  R8,R0                                                            
         EX    R8,0(R7)                                                         
         LA    R8,1(R8)                                                         
         AR    R4,R8                                                            
         AR    R5,R8                                                            
         SR    RF,R8                                                            
         BP    BSOPTR2                                                          
*                                                                               
         LA    R2,1(R2)            NEXT STRING ENTRY                            
         SH    R3,MPQBBVLN         DECREMENT STACK POINTER                      
         BR    RE                                                               
         SPACE 2                                                                
BSNOT    DS    0H                  'NOT' - LOGICAL NEGATION (X'84')             
*                                  --------------------------------             
         LR    R4,R3                                                            
         SH    R4,MPQBBVLN                                                      
         LH    R0,MPQBBVLN         FOR BCT                                      
         BCTR  R0,R0               SAVE LAST BYTE FOR LATER                     
*                                                                               
         XI    0(R4),X'FF'                                                      
         LA    R4,1(R4)                                                         
         BCT   R0,*-8                                                           
*                                  LAST BYTE - DONT SET ON EXTRA BITS           
         L     R0,MPQBNRES                                                      
         SR    R1,R1                                                            
         SRDL  R0,3                                                             
         SRL   R1,29                                                            
         LA    R1,BSXCTAB(R1)      USE SPECIAL XC BYTE                          
         XC    0(1,R4),0(R1)                                                    
         LA    R2,1(R2)            NEXT STRING ENTRY                            
         BR    RE                                                               
         SPACE 2                                                                
BSCRDSET DS    0H                  SET CARD POINTER  (X'85')                    
*                                  -------------------------                    
         MVC   CDPTR,1(R2)                                                      
         MVI   NFLGTH,0            CLEAR NUMERIC FIELD LENGTH                   
         XC    CLPTR,CLPTR         CLEAR COLUMN POINTER                         
         LA    R2,3(R2)                                                         
         BR    RE                                                               
         SPACE 2                                                                
BSCOLSET DS    0H                  SET COLUMN POINTER  (X'86')                  
*                                  ---------------------------                  
         MVC   CLPTR,1(R2)                                                      
         MVI   NFLGTH,0            CLEAR NUMERIC FIELD LENGTH                   
         LA    R2,3(R2)                                                         
         BR    RE                                                               
         SPACE 2                                                                
BSVSET   DS    0H                  SET VARIABLE POINTER  (X'87')                
*                                  -----------------------------                
         MVC   VPTR,1(R2)                                                       
         LA    R2,3(R2)                                                         
         BR    RE                                                               
         EJECT                                                                  
BSFSET   DS    0H                  SET FILTER  (X'88')                          
*                                  -------------------                          
         SH    R3,MPQBBVLN         TEST STRING COMPLETE                         
         C     R3,MPQBSTK                                                       
         BNE   BSSTRERR                                                         
*                                                                               
         ZIC   R4,1(R2) FILTER NO.                                              
         SLL   R4,2                                                             
         A     R4,MPQBFLST                                                      
         OI    0(R4),X'40'         ACTIVATE FILTER                              
         L     RF,0(R4)            A(FILTER VECTOR)                             
         LA    RF,0(RF)                                                         
         LH    R1,MPQBBVLN                                                      
         LR    R0,RE               SAVE RE                                      
         MOVE  ((RF),(R1)),(R3)     MOVE RESULT VECTOR TO FILTER                
         LR    RE,R0               RESTORE RE                                   
         LA    R2,2(R2)            NEXT ENTRY                                   
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESET STACK POINTER                          
*                                                                               
         BR    RE                                                               
         SPACE 2                                                                
BSFCAN   DS    0H                  CANCEL FILTER  (X'89')                       
*                                  ----------------------                       
         ZIC   R4,1(R2)            FILTER NO                                    
         SLL   R4,2                                                             
         A     R4,MPQBFLST                                                      
         NI    0(R4),X'BF'         DE-ACTIVATE FILTER                           
         LA    R2,2(R2)            NEXT ENTRY                                   
         BR    RE                                                               
         EJECT                                                                  
BSBVSET  DS    0H                  SET BITVAR  (X'8A')                          
*                                  -------------------                          
         SH    R3,MPQBBVLN         TEST STRING COMPLETE                         
         C     R3,MPQBSTK                                                       
         BNE   BSSTRERR                                                         
*                                                                               
         SR    R4,R4                                                            
         ICM   R4,3,1(R2)          BITVAR NO.                                   
         MH    R4,=Y(MPQVARL)                                                   
         A     R4,MPQBBLST         POINT TO ENTRY IN LIST                       
         L     RF,MPQVSTR-MPQVARD(R4)    A(VECTOR)                              
         LA    RF,0(RF)                                                         
         LH    R1,MPQBBVLN                                                      
         LR    R0,RE               SAVE RE                                      
         MOVE  ((RF),(R1)),(R3)     MOVE RESULT VECTOR TO BITVAR                
         LR    RE,R0               RESTORE RE                                   
         LA    R2,3(R2)            NEXT ENTRY                                   
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESET STACK POINTER                          
         BR    RE                                                               
         SPACE 2                                                                
BSAVSETN DS    0H           SET VARIABLE FROM NUMERIC FIELD (X'8B')             
*                           ---------------------------------------             
         SR    R5,R5                                                            
         ICM   R5,3,1(R2)         VARIABLE NO.                                  
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBVLST                                                      
         USING MPQVARD,R5                                                       
         MVC   AWGTAB,MPQVSTR      A(VECTOR)                                    
         LR    R0,RE               SAVE RE                                      
         GOTO1 =A(SAVN),DMCB,WKD,RR=RELO                                        
         LR    RE,R0               RESTORE RE                                   
         MVC   MPQVDLEN,WDLEN+1    SET DATA LENGTH IN VAR DESC                  
*                                  (OVERWRITE WHAT WAS THERE)                   
         LA    R2,3(R2)            NEXT ENTRY                                   
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESET STACK POINTER                          
         BR    RE                                                               
         EJECT                                                                  
BSAVSETE DS    0H                  SET ARITHMETIC VARIABLE FROM                 
*                                  ARITHMETIC EXPRESSION  (X'8C')               
*                                  ------------------------------               
         USING MPQVARD,R5                                                       
         SR    R5,R5                                                            
         ICM   R5,3,1(R2)          RESULT VARIABLE AT +1                        
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBVLST         POINT TO VAR ENTRY                           
         ST    R5,AV3              SAVE                                         
*                                                                               
         CLI   OPTCD,APLIT         IF APPLYING LITERAL                          
         BNE   BSVE3                                                            
         ST    R5,AV1              RESULT IS ALSO 1ST OPERAND                   
*                                  SET 2ND OPERAND TO LITERAL                   
         LA    R5,WVAR             USE WORK VARIABLE                            
         XC    WVAR,WVAR                                                        
         MVI   MPQVDLEN,4          LENGTH =4 (PREC =0)                          
         LA    RF,4(R2)            LITERAL AT +4(4)                             
         STCM  RF,15,MPQVSTR      'STRING'                                      
         ST    R5,AV2                                                           
*                                                                               
         CLI   3(R2),X'15'         BUT IF EQUATE OR NEGATE                      
         BL    *+10                                                             
         MVC   AV1,AV2             SET LITERAL AS 1ST OPERAND                   
         B     BSVE4                                                            
*                                                                               
BSVE3    DS    0H                                                               
         SR    R5,R5                                                            
         ICM   R5,3,4(R2)          1ST OPERAND AT +4                            
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBVLST                                                      
         ST    R5,AV1              SAVE                                         
*                                                                               
         SR    R5,R5                                                            
         ICM   R5,3,6(R2)          2ND OPERAND AT +6 (NOT REALLY                
         MH    R5,=Y(MPQVARL)      THERE FOR NEGATE AND EQUATE)                 
         A     R5,MPQBVLST                                                      
         ST    R5,AV2              SAVW                                         
*                                                                               
BSVE4    DS    0H                                                               
         MVC   AVOPTR,3(R2)        OPERATOR AT +3                               
         CLI   AVOPTR,X'11'        OPERATORS X'11'                              
         BL    BSSTRERR            THRU X'16' VALID                             
         CLI   AVOPTR,X'16'        (ADD,SUB,MULT,DIV,NEG,EQUATE)                
         BH    BSSTRERR                                                         
*                                                                               
         LR    R0,RE               SAVE RE                                      
         GOTO1 =A(AVAL),DMCB,WKD,RR=RELO                                        
         LR    RE,R0               RESTORE                                      
*                                                                               
         LA    R2,8(R2)            BUMP INPUT STRING POINTER                    
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESET STACK POINTER                          
         BR    RE                                                               
         EJECT                                                                  
BSIVAR   DS    0H                  INITIALIZE VARIABLE  (X'8D')                 
*                                  ----------------------------                 
         SR    R5,R5                                                            
         ICM   R5,3,1(R2)          VARIABLE NO.                                 
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBVLST         POINT TO RIGHT ENTRY                         
         USING MPQVARD,R5                                                       
         MVI   MPQVCNTL,0                                                       
         MVC   MPQVDLEN,3(R2)      DLEN AT +3                                   
         MVC   MPQVPREC,4(R2)      PREC AT +4                                   
*                                                                               
         CLI   5(R2),C'N'          NO VALUE INITIALIZE                          
         BE    BSIV10                                                           
*                                                                               
         MVC   AWGTAB,MPQVSTR      SET A(VECTOR)                                
         MVI   WDLEN,0                                                          
         MVC   WDLEN+1(1),MPQVDLEN SET DATA LENGTH                              
         MVI   WPREC,0                                                          
         MVC   WPREC+1(1),MPQVPREC AND PRECISION                                
         NI    WPREC+1,X'7F'       STRIP ANY HOB                                
*                                                                               
         CLI   5(R2),C'V'          INITIALIZE TO VALUE(4)                       
         BE    BSIV6               WHICH FOLLOWS                                
*                                                                               
         ST    R5,ACXV             SET HAVE COMPONENT WEIGHT                    
         CLI   5(R2),C'M'          INITIALIZE FOR MULTI-                        
*                                  PLICATIVE COMPONENT VARIABLE                 
         BE    BSIV7               (SET VALUE FROM TABLE)                       
         CLI   5(R2),C'A'          INITIALIZE FOR ADDITIVE                      
*                                  COMPONENT VARIABLE                           
         BE    BSIV8               (IE CLEAR TO ZERO)                           
         B     BSSTRERR            INVALID SYNTAX                               
*                                                                               
BSIV6    DS    0H                                                               
         LA    R4,10(R2)           POINT ONE PAST VALUE                         
         B     BSIV9                                                            
*                                                                               
BSIV7    DS    0H                                                               
         OI    MPQVCNTL,X'80'      SET MULTIPLICATIVE COMP. VAR.                
         LH    RF,WPREC                                                         
         SLL   RF,2                                                             
         LR    R6,RF                                                            
         LA    RF,DVSRTAB(RF)                                                   
         MVC   VARDVSR,0(RF)       SET DIVISOR FOR COMPS                        
         LA    R6,RNDRTAB(R6)                                                   
         MVC   VARRNDR,0(R6)       SET ROUNDER                                  
*                                  INITIALIZE VARIABLE TO VARDVSR               
*                                  (UNIT VALUE FOR COMPONENT WGTS)              
         LA    R4,VARDVSR+4                                                     
         B     BSIV9                                                            
*                                                                               
BSIV8    DS    0H                                                               
         LA    R4,=F'0'            POINT ONE PAST VALUE                         
         LA    R4,4(R4)                                                         
*                                                                               
BSIV9    DS    0H                                                               
         ZIC   RF,MPQVDLEN                                                      
         SR    R4,RF                                                            
         L     R6,AWGTAB                                                        
         MVC   0(4,R6),0(R4)       SET FIRST                                    
*                                                                               
         LR    R1,RF                                                            
         M     R0,MPQBNRES         TOTAL VECTOR LENGTH                          
         SR    R1,RF               SET LENGTH FOR MOVE                          
         LA    RF,0(R6,RF)         TO ADDRESS (2ND POSITION)                    
         LR    R0,RE               SAVE RE                                      
         MOVE  ((RF),(R1)),(R6)    PROPAGATE                                    
         LR    RE,R0               RESTORE RE                                   
*                                                                               
BSIV10   DS    0H                                                               
         LA    RF,6                TOTAL LENGTH = 6                             
         CLI   5(R2),C'V'          UNLESS INITIALIZE VALUE THERE                
         BNE   *+8                                                              
         LA    RF,10               THEN 10                                      
         AR    R2,RF                                                            
*                                                                               
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESET STACK POINTER                          
         BR    RE                                                               
         EJECT                                                                  
BSCXV    DS    0H                  APPLY VALUE AS WEIGHT FOR                    
*                                  COMPONENT VARIABLE  (X'8E')                  
*                                  ---------------------------                  
         SH    R3,MPQBBVLN                                                      
         C     R3,MPQBSTK          TEST STRING OK                               
         BNE   BSSTRERR                                                         
         OC    ACXV,ACXV           TEST HAVE COMPONENT WEIGHT SET               
         BZ    BSSTRERR                                                         
*                                                                               
         MVC   VARFACT,1(R2)       SET VALUE                                    
         L     R5,ACXV             A(VARIABLE)                                  
         USING MPQVARD,R5                                                       
         MVI   WDLEN,0                                                          
         MVI   WPREC,0                                                          
         MVC   WDLEN+1(1),MPQVDLEN   SET DATA LENGTH                            
         MVC   WPREC+1(1),MPQVPREC   AND PRECISION                              
         NI    WPREC+1,X'7F'         STRIP ANY HOB                              
         MVC   AWGTAB,MPQVSTR                                                   
         LH    R8,WDLEN                                                         
         IC    R8,ICMSKS-1(R8)     SET MASK FOR ICM'S                           
         STC   R8,BYTE                                                          
         NI    CTRICMW+1,X'F0'                                                  
         NI    CTRSTCMW+1,X'F0'                                                 
         OC    CTRICMW+1(1),BYTE                                                
         OC    CTRSTCMW+1(1),BYTE                                               
*                                                                               
         LA    RF,CTR70            SET BRANCH WITHIN CTR ROUTINE                
         TM    MPQVCNTL,X'80'      TEST MULTIPLICATIVE                          
         BNZ   *+8                                                              
         LA    RF,CTR75            ADDITIVE                                     
         ST    RF,CTRBRNCH                                                      
         MVC   XMSTR,MPQBSTK       FOR CTR, A(STRING)                           
         MVI   XMSTR,C'B'          IS A BIT STRING                              
         LR    R0,RE                                                            
         BAS   RE,CTR                                                           
         LR    RE,R0                                                            
         LA    R2,5(R2)            NEXT STRING ENTRY                            
         CLI   0(R2),0             IF AT END                                    
         BNE   *+8                                                              
         AH    R3,MPQBBVLN         RESTORE STACK POINTER                        
         BR    RE                                                               
         DROP  R5                                                               
         EJECT                                                                  
BSCOPTSW DS    0H               SET CONDITION OPTIONAL SWITCH (X'8F')           
*                               -------------------------------------           
*                                                                               
         MVC   CNDOPTSW,1(R2)      SET SWITCH (Y OR N)                          
         LA    R2,2(R2)            BUMP INPUT POINTER                           
         BR    RE                                                               
         SPACE 2                                                                
BSNFLEN  DS    0H               SET LENGTH OF NUMERIC FIELD (X'90')             
*                               -------------------------------------           
*                                                                               
         MVC   NFLGTH,1(R2)        SET LENGTH                                   
         MVI   NQPSW,C'P'          SET NUMERIC Q/P SWITCH                       
         LA    R2,2(R2)            BUMP INPUT POINTER                           
         BR    RE                                                               
         SPACE 2                                                                
BSAPLIT  DS    0H               APPLY LITERAL TO ARITH VAR X'91'                
*                               --------------------------------                
*                                                                               
         B     BSAVSETE         SHARES CODE OF ARITH EXPRESSION                 
         EJECT                                                                  
*                                                                               
BSCPCH   DS    0H                  PUNCH  (X'01')                               
*                                  ---------------                              
         MVC   OPNDLEN,=H'2'       TOTAL OPERAND LENGTH                         
         MVI   LQPSW,C'P'          SET LOGICAL Q/P SWITCH                       
         MVC   PUNCH,1(R2)                                                      
         CLI   PUNCH,0             TEST 'NULL' PUNCH                            
         BNE   BSCON               NO- GO READ PUNCH RECORD                     
*                                                                               
         LR    R0,RE                                                            
         LR    RE,R3               'NULL' PUNCH MEANS NULL STRING               
         LH    RF,MPQBBVLN         (USED WITH NEGATE FOR 'ALL' STRING           
         XCEF                                                                   
         LR    RE,R0                                                            
         BR    RE                                                               
         SPACE 2                                                                
*                                                                               
BSCBVN   DS    0H                  BITVAR NUMBER (X'02')                        
*                                  ---------------------                        
         SR    R5,R5                                                            
         ICM   R5,3,1(R2)          BITVAR NO.                                   
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBBLST                                                      
         LA    RF,3                TOTAL OPERAND LENGTH                         
*                                                                               
BSCBVN4  DS    0H                                                               
         STH   RF,OPNDLEN                                                       
         LA    R5,MPQVSTR-MPQVARD(R5)      A(STRING)                            
         LR    R0,RE                                                            
         LH    R1,MPQBBVLN                                                      
         ICM   R4,15,0(R5)         R4 = A(GIVEN VECTOR)                         
         MOVE  ((R3),(R1)),(R4)    MOVE TO STACK                                
*                                                                               
         LR    RE,R0                                                            
         BR    RE                                                               
         SPACE 2                                                                
*                                                                               
BSCBVP   DS    0H                  BITVAR POINTER (X'08')                       
*                                  ----------------------                       
         ICM   R5,15,1(R2)         A(BITVAR DESCRIPTOR)                         
         LA    RF,5                TOTAL OPERAND LENGTH                         
         B     BSCBVN4                                                          
         SPACE 2                                                                
*                                                                               
BSCVECT  DS    0H                  ACTUAL BIT VECTOR ADDRESS (X'09')            
*                                  ---------------------------------            
         LA    RF,5                TOTAL OPERAND LENGTH                         
         STH   RF,OPNDLEN                                                       
*                                                                               
         LR    R0,RE                                                            
         LH    R1,MPQBBVLN                                                      
         ICM   R4,15,1(R2)         R4 = A(GIVEN VECTOR)                         
         MOVE  ((R3),(R1)),(R4)    MOVE TO STACK                                
*                                                                               
         LR    RE,R0                                                            
         BR    RE                                                               
*                                                                               
BSCNOOP  DS    0H      'NO-OP' -USE VECT AT CURR STACK POS (X'0A')              
*                      -------------------------------------------              
         LA    RF,1                                                             
         STH   RF,OPNDLEN          SET OPERAND LENGTH                           
         BR    RE                                                               
         SPACE 2                                                                
*                                                                               
BSCNF    DS    0H                  NUMERIC FIELD COMPARE (X'03')                
*                                  -----------------------------                
         CLI   NFLGTH,0            TEST NUMERIC ACTIVE                          
         BE    BSQSPERR                                                         
         MVC   OPNDLEN,=H'6'       OPERAND LENGTH (1+COMP+VALUE)                
         MVI   NFSW,C'Y'           SET ON NUMERIC SW                            
         MVI   NRQSW,0             SET NUMERIC COMPARAND FOUND                  
         B     BSCON                                                            
         EJECT                                                                  
BSCVAR   NTR1                      VARIABLE COMPARE  (X'04')                    
*                                  -------------------------                    
         SR    R5,R5                                                            
         ICM   R5,3,VPTR            VARIABLE NO.                                
         MH    R5,=Y(MPQVARL)                                                   
         A     R5,MPQBVLST         POINT TO VARIABLE DESC                       
         USING MPQVARD,R5                                                       
         MVI   WDLEN,0                                                          
         MVC   WDLEN+1(1),MPQVDLEN    SET DATA LENGTH                           
         MVC   OPNDLEN,=H'6'          OPERAND LENGTH (1+COMP+VALUE)             
         ST    R2,SAVR2                                                         
*                                                                               
         LR    RE,R3               CLEAR STACK ENTRY                            
         LH    RF,MPQBBVLN                                                      
         XCEF                                                                   
*                                                                               
         L     RF,MPQVSTR          A(VECTOR)                                    
         BAS   RE,BSNCSET          GET SET FOR BNSCHK                           
         L     R0,MPQBNRES         RESP COUNT (FOR BCT)                         
         SR    R6,R6               BIT VECTOR INDEXER                           
*                                                                               
BSCVAR4  DS    0H                                                               
         BAS   RE,BSNCHK           CHECK VALUE AGAINST RANGES                   
         AH    RF,WDLEN            NEXT VALUE                                   
         BCT   R0,BSCVAR4                                                       
*                                                                               
         XIT1                                                                   
*                                                                               
         SPACE 3                                                                
BSCIMM   DS    0H                  IMMEDIATE OPERAND (TEST) (X'05')             
*                                  --------------------------------             
         SPACE 2                                                                
         ZIC   R4,1(R2)                                                         
         STH   R4,OPNDLEN          OPERAND LENGTH                               
         SH    R4,=H'3'                                                         
         EX    R4,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R3),2(R2)                                                    
         BR    RE                                                               
*                                                                               
         EJECT                                                                  
BSQSPEC  DS    0H                  QSPEC X'06'                                  
*                                  -----------                                  
*                                                                               
         XC    OPNDLEN,OPNDLEN     OPERAND LENGTH HANDLED SPECIALLY             
         XC    QWORK,QWORK                                                      
         MVI   QNLEVS,0                                                         
         ZIC   RF,1(R2)            LENGTH                                       
         AR    RF,R2                                                            
         ST    RF,EOQ              END OF QSPEC                                 
*                                                                               
         SR    R4,R4               COUNT OF LEVELS                              
         LA    R5,QWORK            START OF WORK AREA                           
         LA    R2,2(R2)            PAST CODE AND LENGTH                         
*                                                                               
BSQS4    DS    0H                                                               
         LR    R7,R2               START OF A CODE                              
*                                                                               
BSQS5    DS    0H                                                               
         CLI   0(R7),C'.'          LOOK FOR DELIMITER                           
         BE    BSQS6                                                            
         CLI   0(R7),C'!'          EXCLAMATION POINT                            
         BE    BSQS6                                                            
         CLI   0(R7),C'?'          QUESTION MARK                                
         BE    BSQS6                                                            
         C     R7,EOQ              OR END                                       
         BNL   BSQS6                                                            
         LA    R7,1(R7)            ELSE NEXT CHARACTER                          
         B     BSQS5                                                            
*                                                                               
BSQS6    DS    0H                                                               
         SR    R7,R2                                                            
         BNP   BSQS7                                                            
         CH    R7,=Y(QMAXLN)       TEST VS MAX CODE LENGTH                      
         BH    BSQS7                                                            
         BCTR  R7,R0                                                            
         EX    R7,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R5),0(R2)                                                    
*                                                                               
         LA    R4,1(R4)            BUMP NUMBER OF LEVELS                        
         CH    R4,=Y(QMAXLV)       TEST VS MAX                                  
         BH    BSQS7                                                            
         LA    R2,2(R2,R7)         POINT PAST DELIMETER                         
         C     R2,EOQ              TEST AT END                                  
         BNL   BSQS10                                                           
         LA    R5,QMAXLN+1(R5)     NEXT QWORK POSITION                          
         B     BSQS4                                                            
*                                                                               
BSQS7    DS    0H                                                               
         MVI   MPQBERR,MPQEQSC     BAD QSPEC SYNTAX                             
         B     BSX                                                              
*                                                                               
BSQS10   DS    0H                                                               
         STC   R4,QNLEVS           NUMBER OF LEVELS                             
         LA    R5,QWORK            WORK AREA                                    
         LA    R6,QPTR             QSPEC POINTER                                
*                                                                               
         CLI   QNLEVS,1            SPECIAL CHECKS IF ONLY ONE LEVEL             
         BNE   BSQS12                                                           
         L     RF,EOQ                                                           
         BCTR  RF,R0                                                            
         CLI   0(RF),C'!'          DOES IT END IN EXCLAM POINT                  
         BNE   BSQS11                                                           
         XC    QPTR,QPTR           YES-IS STAND-ALONE, SET IN QPTR              
         MVC   0(QMAXLN,R6),0(R5)                                               
         B     BSQS20              DONE                                         
*                                                                               
BSQS11   DS    0H                  ONE LEVEL BUT NOT STAND ALONE                
         LA    R4,QMAXLV-1         REPLACE DEEPEST LEVEL USED                   
         LA    R6,QPTR+L'QPTR-QMAXLN     WITH CURRENT CODE                      
*                                                                               
BSQ11B   DS    0H                                                               
         CLI   0(R6),C' '                                                       
         BH    BSQS11C                                                          
         SH    R6,=Y(QMAXLN)                                                    
         BCT   R4,BSQ11B                                                        
*                                                                               
BSQS11C  DS    0H                                                               
         LA    R4,1(R4)                                                         
         STC   R4,QNLEVS           SET TRUE LEVEL COUNT                         
         MVC   0(QMAXLN,R6),0(R5)                                               
         B     BSQS20              DONE                                         
*                                                                               
BSQS12   DS    0H                  MORE THAN ONE LEVEL PRESENT                  
         XC    QPTR,QPTR                                                        
BSQS14   DS    0H                  SET ALL LEVELS IN QPTR                       
         MVC   0(QMAXLN,R6),0(R5)                                               
         LA    R6,QMAXLN(R6)                                                    
         LA    R5,QMAXLN+1(R5)                                                  
         BCT   R4,BSQS14                                                        
*                                                                               
BSQS20   DS    0H                                                               
         L     R2,EOQ              POSITION POINTER IN INPUT STRING             
*                                                                               
         LR    R7,RE               SAVE RE                                      
         CLI   MPQBNSKP,C'Y'       TEST TO SKIP READ OF QSPEC REC               
         BE    *+8                 BECAUSE CALLER HAS ALREADY READ              
         BAS   RE,SETNOD           NODIO INTERFACE                              
         CLI   MPQBERR,0                                                        
         BNE   EXIT4                                                            
         L     R4,MPQBNDBL                                                      
         USING NODBLKD,R4                                                       
*                                                                               
         L     R8,NDIOA            FIND DEFINITION ELEM                         
         AH    R8,NDELSTRT                                                      
         MVI   ELCODLO,X'10'                                                    
         MVI   ELCODHI,X'10'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
         BAS   RE,NEXTEL                                                        
         BNE   BSQP6F              NO TYPE ELEM - ERROR                         
         USING QSPELEM,R8                                                       
         CLI   QSPCOMPW,C' '       TEST WEIGHTED QSPEC                          
         BNH   BSQP3                                                            
         CLI   MPQBNOWT,C'Y'       TEST WEIGHTS SUPPRESSED                      
         BE    BSQP3                                                            
         MVI   MPQBERR,MPQEWSPC    WGTS NOT ALLOWED IN BOOLEAN EXP              
         B     EXIT                                                             
*                                                                               
BSQP3    DS    0H                                                               
         CLI   QSPQTYP,C'N'        TEST NUMERIC QUESTION                        
         BNE   *+8                                                              
         MVI   NRQSW,C'Y'          SET REQUIRE NUMERIC COMPARAND                
         ST    R8,SAVEL            SAVE DEFINITION ELEM                         
         L     R8,NDIOA            NOW LOOK FOR PRE-TAB CTL ELEM                
         AH    R8,NDELSTRT                                                      
         MVI   ELCODLO,X'40'                                                    
         MVI   ELCODHI,X'40'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
*                                                                               
BSQP4    DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BNE   BSQP6               NOT PRE-TABBED                               
*                                                                               
         USING QSPPTBEL,R8                                                      
         CLC   QSPPTWDT,MPQBWVDT   TEST THIS WAVE PRE-TABBED                    
         BNE   BSQP4                                                            
*                                                                               
         L     R8,SAVEL            POINT TO DEFINITION ELEM                     
         USING QSPELEM,R8                                                       
         CLI   QSPQTYP,C'N'        TEST NUMERIC QUESTION QSPEC                  
         BNE   BSQP5                                                            
         MVI   NQPSW,C'Q'          JUST SET HAVE NUMERIC Q                      
         MVI   NRQSW,C'Y'          SET REQUIRE NUMERIC COMPARAND                
         SH    R3,MPQBBVLN         NEED TO ADJUST STACK POINTER HERE            
         LR    RE,R7               BECAUSE X'06' IN THIS CASE IS                
         BR    RE                  A POINTER NOT A REAL OPERAND                 
*                                                                               
BSQP5    DS    0H                  NON-NUMERIC PRE-TABBED                       
         MVI   LQPSW,C'Q'                                                       
         LR    RE,R7               (R2 ALREADY AT END)                          
         B     BSCON               READ FOR PRE-TABBED VECTOR                   
*                                                                               
BSQP6    DS    0H                  NOT PRE-TABBED                               
         L     R8,NDIOA            LOOK FOR SPEC ELEMS                          
         AH    R8,NDELSTRT                                                      
         MVC   DUB(2),MPQBWVDT     SET WAVE DATE                                
         XC    DUB(2),=2X'FF'      COMPLEMENT                                   
*                                                                               
BSQP6D   DS    0H                  ENTRY POINT FOR TARGETS                      
         MVI   ELCODLO,X'51'                                                    
         MVI   ELCODHI,X'51'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
*                                                                               
BSQP6E   DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BNE   BSQP6F                                                           
         CLI   4(R8),0             TEST NOT A COMP WEIGHT                       
         BNE   BSQP6E                                                           
         CLC   DUB(2),2(R8)        AND  RIGHT WAVE                              
         BH    BSQP6E              (MOST RECENT)                                
         LA    RF,8(R8)                                                         
*                                  TEST NOT-DEFINED FOR WAVE                    
         CLC   =C'CD',6(R8)        LOOK FOR 'CDNOT DEF'                         
         BE    BSQP6E4                                                          
         LA    RF,10(R8)                                                        
         CLC   =C'CARD',6(R8)      OR 'CARDNOT DEF'                             
         BE    BSQP6E4                                                          
         LA    RF,6(R8)            OR JUST 'NOT DEF'                            
BSQP6E4  DS    0H                                                               
         CLC   =C'NOT DEF',0(RF)   TEST NOT DEFINED                             
         BNE   BSQP7                                                            
*                                  IF NOT PRE-TABBED AND NO SPEC ELEMS          
BSQP6F   DS    0H                                                               
         MVI   QPSW,C'Q'           SET FOR ERROR ROUTINE                        
         MVI   MPQBERR,MPQEQSND    QSPEC NOT DEFINED FOR WAVE                   
         B     EXIT                                                             
*                                                                               
         DROP  R4                                                               
         DROP  R5                                                               
*                                                                               
BSQP7    DS    0H                                                               
         L     RF,CURNEST          CURRENT SPOT IN LIST                         
         LA    R0,NESTLSTX         TEST TOO MANY NESTS                          
         CR    RF,R0                                                            
         BL    *+12                                                             
         MVI   MPQBERR,MPQENSMX                                                 
         B     EXIT                                                             
*                                                                               
         USING NESTLSTD,RF                                                      
         MVC   NESTSTR,NESTNXT                                                  
         ST    R2,NESTBACK         CURRENT POSITION                             
         MVC   NESTPTRS,PTRS       SAVE ALL POINTERS                            
         LA    RF,NESTLSTL(RF)     BUMP SPOT                                    
         ST    RF,CURNEST                                                       
*                                  GET NESTED INPUT                             
         L     R0,NESTNXT                                                       
         LA    R6,NESTWAX                                                       
         SR    R6,R0               R6 HAS MAXIMUM LEGNTH                        
*                                  NOTE- NO INPUT LENGTH FOR QTRAN              
*                                       (PASSING ELEM ADDRESS INSTEAD)          
         GOTO1 MPQBQTRN,DMCB,(R8),((R6),NESTNXT),MPQBLKD                        
         CLI   MPQBERR,0                                                        
         BNE   EXIT4                                                            
*                                                                               
         L     R2,NESTNXT          R2 AT START OF NESTED STRING                 
         ZIC   R4,DMCB+4           LENGTH OF OUTPUT                             
         AR    R4,R2                                                            
         MVI   0(R4),0                                                          
         LA    R4,1(R4)                                                         
         ST    R4,NESTNXT          SPOT FOR NEXT NEST                           
         B     BS10                                                             
         DROP  RF                                                               
         EJECT                                                                  
*        NODIO LINK                                                             
         SPACE 3                                                                
SETNOD   NTR1                                                                   
         L     R4,MPQBNDBL         A(NODBLK)                                    
         USING NODBLKD,R4                                                       
         MVC   NDDUMP,PARAM2       PASS ON DUMP CONTROL                         
         MVI   NDMODE,X'FF'        FORCE START OVER                             
         LA    R5,NDLVTAB+NDLVTABL POINT TO LEVEL 1                             
         USING NDLVTABD,R5                                                      
         LA    R6,QPTR                                                          
         ZIC   RF,QNLEVS           NUMBER OF LEVELS                             
*                                                                               
SND4     DS    0H                                                               
         MVC   NDLVRCOD(QMAXLN),0(R6)                                           
         LA    R6,QMAXLN(R6)                                                    
         LA    R5,NDLVTABL(R5)                                                  
         BCT   RF,SND4                                                          
*                                                                               
         MVC   NDLEV,QNLEVS                                                     
*                                                                               
         LA    RF,SND20            MY PROCESSING ROUTINE                        
         ST    RF,NDHOOK                                                        
         GOTO1 MPQBNDIO,DMCB,NODBLKD,=C'READ',0,0                               
         CLI   NDERR,0                                                          
         BE    SNDX                                                             
*                                                                               
         CLI   NDERR,NDRNFERR      TREAT REC NOT FOUND SPECIALLY                
         BNE   SND6                                                             
         MVI   MPQBERR,MPQERNF     SO CAN SAY WHAT NOT FOUND                    
         MVI   QPSW,C'Q'           SO SETERM KNOWS WHAT TO DO                   
         GOTO1 =A(SETERM),DMCB,WKD,RR=RELO     SET ERROR MESSAGE                
         B     SNDX                                                             
*                                                                               
SND6     DS    0H                                                               
         MVC   MPQBEMSG,NDERRMSG                                                
         MVC   MPQBERR,NDERR                                                    
         B     SNDX                                                             
*                                                                               
SND20    NTR1                      NODIO PROCESSING ROUTINE                     
         CLI   NDMODE,NDPROC       ONLY INTERESTED IN PROC                      
         BNE   SNDX                                                             
*                                                                               
         ZIC   R5,NDLEV                                                         
         MH    R5,=Y(NDLVTABL)                                                  
         LA    R5,NDLVTAB(R5)                                                   
         MVC   QNOD(3+QMAXLN),NDLVNOD    NODE AND CODE OF THIS LEV              
*                                                                               
SNDX     DS    0H                                                               
         XIT1                                                                   
         DROP  R4,R5                                                            
         EJECT                                                                  
BSTARG   DS    0H                  TARGET CODE X'07'                            
*                                  ----------------                             
*                                                                               
         XC    OPNDLEN,OPNDLEN     OPERAND LENGTH HANDLED SPECIALLY             
*                                                                               
         XC    KEY,KEY             READ FOR TARGET RECORD                       
         MVC   DIRNAM,MPQBQSD      DIRECTORY NAME                               
         MVC   FILNAM,MPQBQSF      FILE NAME                                    
         LA    R7,KEY                                                           
         USING QTGKEY,R7                                                        
         MVI   QTGKSYS,C'Q'                                                     
         MVI   QTGKRCD,X'25'                                                    
         MVC   QTGKFCD,MPQBQFCD    USE QSPEC/TARGET SURVEY CODE                 
         MVI   QTGKTRG,C' '                                                     
         MVC   QTGKTRG+1(L'QTGKTRG-1),QTGKTRG                                   
         ZIC   RF,1(R2)                                                         
         SH    RF,=H'3'                                                         
         LA    R1,2(R2)            POINT TO TARGET CODE                         
*                                                                               
         CLI   0(R1),C'*'          TEST AGENCY SPECIAL                          
         BNE   BSTRG4                                                           
         BCTR  RF,R0               ONE LESS TO MOVE                             
         LA    R1,1(R1)            BYPASS *                                     
         MVC   QTGKAGY,MPQBAGY     SET AGENCY CODE                              
*                                                                               
BSTRG4   DS    0H                                                               
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVC   QTGKTRG(0),0(R1)                                                 
*                                                                               
         LR    R5,RE               SAVE RE                                      
         BAS   RE,BSHIGH                                                        
         CLC   QTGKEY,KEYSAVE                                                   
         BE    BSTRG8                                                           
         MVI   MPQBERR,MPQERNF     RECORD NOT FOUND                             
*                                                                               
BSTRG6   DS    0H                                                               
         MVI   QPSW,C'T'           SO SETERM KNOWS WHAT TO DO                   
         MVC   QPTR(8),KEYSAVE+QTGKTRG-QTGKEY                                   
         LR    RE,R5                                                            
         BR    RE                                                               
*                                                                               
BSTRG8   DS    0H                                                               
         ZIC   RF,1(R2)                                                         
         AR    R2,RF               POSITION POINTER IN INPUT STRING             
*                                                                               
         BAS   RE,BSGET                                                         
*                                                                               
         L     R8,MPQBIOA          FIND DEFINITION ELEM                         
         LA    R8,QTGELS-QTGREC(R8)                                             
         ST    R8,FRSTEL                                                        
         MVI   ELCODLO,X'10'                                                    
         MVI   ELCODHI,X'10'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
         BAS   RE,NEXTEL                                                        
         BE    *+12              NO TYPE ELEM - ERROR                           
         MVI   MPQBERR,MPQEREC     BAD RECORD                                   
         B     BSTRG6                                                           
*                                                                               
         USING QTGELEM,R8                                                       
         CLI   QTGCOMPW,C' '       TEST WEIGHTED TARGET                         
         BNH   BSTRG9                                                           
         CLI   MPQBNOWT,C'Y'       TEST WEIGHTS SUPPRESSED                      
         BE    BSTRG9                                                           
         MVI   MPQBERR,MPQEWSPC    WEIGHTS NOT ALLOWED IN BOOLEAN               
         B     BSTRG6                                                           
*                                                                               
BSTRG9   DS    0H                                                               
         L     R8,FRSTEL           A(FIRST ELEM)                                
         LR    RE,R5                                                            
         XC    DUB,DUB             NO WAVE DATE                                 
         B     BSQP6D              BRANCH INTO QSPEC LOGIC                      
*                                  (SKIPPING PRE-TAB CHECK                      
*                                  AND NUMERIC TYPE CHECK)                      
         EJECT                                                                  
*                                  PROCESS QVERT FILE RECORD                    
*                                  -------------------------                    
         SPACE 2                                                                
BSCON    NTR1                                                                   
         SPACE 2                                                                
         XC    WDLEN,WDLEN         CLEAR DATA LENGTH                            
*                                                                               
         MVC   DIRNAM,MPQBQVD      SET QVERT DIRECTORY                          
         MVC   FILNAM,MPQBQVF      AND FILE NAMES                               
         XC    KEY,KEY                                                          
         LA    R7,KEY                                                           
         USING QVTREC,R7                                                        
         MVI   QVTKSYS,C'Q'        SYSTEM CODE                                  
         MVI   QVTKRCD,X'41'       RECORD CODE                                  
         MVC   QVTKFCD,MPQBFCD     FILE CODE                                    
         MVC   QVTKWDT,MPQBWVDT    WAVE DATE                                    
         MVC   QVTKCRD(4),CDPTR    CARD AND COLUMN                              
         LA    RF,LQPSW            USE LOGICAL INDICATOR                        
         LA    RE,PUNCH            PUNCH IN INPUT STRING                        
         CLI   NFSW,C'Y'                                                        
         BNE   *+12                                                             
         LA    RE,NFLGTH           OR NUMERIC FIELD LENGTH                      
         LA    RF,NQPSW            OR NUMERIC INDICATOR                         
*                                                                               
         MVC   QVTKTYP,0(RE)       PUNCH OR NUM LENGTH                          
         MVC   QPSW,0(RF)          SET GENERAL INDICATOR                        
*                                  TEST IF LOOKING FOR CCP OR PRE-TAB           
         CLI   QPSW,C'Q'           IF TYPE IS Q                                 
         BNE   BSCON3                                                           
*                                                                               
         USING QPTREC,R7           SET FOR PRE-TAB RECORD                       
         MVI   QPTKRCD,X'28'                                                    
         XC    QPTKNOD(QPTKEY+L'QPTKEY-QPTKNOD),QPTKNOD                         
         MVC   QPTKNOD(3+QMAXLN),QNOD     SET NODE AND CODE                     
         MVC   DIRNAM,MPQBQSD      SET QSPEC DIRECTORY                          
         MVC   FILNAM,MPQBQSF      AND FILE NAMES                               
*                                                                               
BSCON3   DS    0H                                                               
         SR    R6,R6               RESPONDENT/BYTE COUNTER                      
         BAS   RE,BSHIGH                                                        
         B     BSCON4B                                                          
*                                                                               
BSCON4   DS    0H                                                               
         BAS   RE,BSSEQ                                                         
*                                                                               
BSCON4B  DS    0H                                                               
         CLI   QPSW,C'Q'        KEY LENGTH TO CHECK DEPENDS ON TYPE             
         BE    *+14                                                             
         CLC   KEY(QVTKSEQ-QVTKEY),KEYSAVE                                      
         B     *+10                                                             
         CLC   KEY(QPTKSEQ-QPTKEY),KEYSAVE                                      
         BNE   BSCON30                                                          
*                                                                               
*                           NOTE-QVTREC AND QPTREC FORMATS IDENTICAL            
         BAS   RE,BSGET                                                         
         L     R7,MPQBIOA        A(REC)                                         
         LA    R8,QPTELS                                                        
         DROP  R7                                                               
*                                                                               
         MVI   ELCODLO,X'01'                                                    
         MVI   ELCODHI,X'03'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
*                                                                               
BSCON6   DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BNE   BSCON4                                                           
*                                                                               
         CLI   0(R8),X'01'         CONTROL ELEM                                 
         BNE   BSCON6F                                                          
         USING QVTCNTEL,R8                                                      
         BAS   RE,CHKACC           TEST ACCESS OK                               
         BNE   BSCONX              NO-EXIT WITH ERROR SET                       
         CLI   NFSW,C'Y'             OTHER CTL SETS ONLY FOR NUM Q              
         BNE   BSCON6                                                           
         CLI   QVTCDLEN,0          DATA FIELD LENGTH                            
         BE    BSCON27             SHOULD NOT BE ZERO                           
         MVC   WDLEN+1(1),QVTCDLEN   DATA LENGTH                                
*                                                                               
         BAS   RE,BSNCSET          GET SET FOR BSNCHK                           
         LR    RE,R3               CLEAR STACK ENTRY                            
         LH    RF,MPQBBVLN                                                      
         XCEF                                                                   
*                                                                               
         B     BSCON6                                                           
*                                                                               
BSCON6F  DS    0H                                                               
         CLI   0(R8),X'02'         NORMAL DATA ELEM                             
         BNE   BSCON20                                                          
         USING QVTSTREL,R8                                                      
         CLI   NFSW,C'Y'           TEST NUMERIC FIELD                           
         BE    BSCON12                                                          
*                                  PUNCH SPEC                                   
         ZIC   RF,1(R8)                                                         
         SH    RF,=H'2'                                                         
         AR    R6,RF                                                            
         CH    R6,MPQBBVLN         TEST HAVE TOO MANY BYTES                     
         BNH   BSCON8                                                           
*                                                                               
BSCON7   DS    0H                                                               
         MVI   MPQBERR,MPQEDATL    DATA LENGTH ERROR                            
         B     BSCONX                                                           
*                                                                               
*                                                                               
BSCON8   DS    0H                                                               
         BCTR  RF,R0                                                            
         EX    RF,BSPMVC           MOVE TO RECEIVING AREA                       
         LA    R3,1(R3,RF)         BUMP AREA POINTER                            
         B     BSCON6                                                           
*                                                                               
BSCON12  DS    0H                  NUMERIC FIELD - NORMAL ELEM                  
         OC    WDLEN,WDLEN         TEST HAD CONTROL ELEM                        
         BZ    BSCON27             NO - ERROR                                   
         ZIC   RF,1(R8)                                                         
         AR    RF,R8                                                            
         ST    RF,ENDEL            END OF ELEM                                  
*                                                                               
         LA    RF,2(R8)            DATA                                         
*                                                                               
BSCON13  DS    0H                                                               
         BAS   RE,BSNCHK                                                        
         AH    RF,WDLEN            NEXT ITEM                                    
         C     RF,ENDEL            TEST VS END                                  
         BL    BSCON13                                                          
*                                                                               
         B     BSCON6                                                           
*                                  REPEATER ELEMENT                             
BSCON20  DS    0H                                                               
         USING QVTRPTEL,R8                                                      
         CLI   NFSW,C'Y'           TEST NUMERIC FIELD                           
         BE    BSCON26                                                          
*                                  PUNCH SPEC                                   
         ZICM  R1,QVTRPTNO,2       NO. OF REPETITIONS                           
         LR    R5,R1               SAVE FOR POINTER ADJUST                      
         AR    R6,R1                                                            
         CH    R6,MPQBBVLN         TEST TOO MANY BYTES                          
         BH    BSCON7                                                           
*                                                                               
         MVC   0(1,R3),QVTRPTND    REPETEND                                     
         BCTR  R1,R0                                                            
         LA    RF,1(R3)                                                         
         LR    RE,R3                                                            
         MOVE  ((RF),(R1)),(RE)                                                 
         AR    R3,R5                                                            
         B     BSCON6                                                           
*                                                                               
BSCON26  DS    0H                  NUMERIC FIELD-REPEATER ELEM                  
         OC    WDLEN,WDLEN         TEST HAD CONTROL ELEM                        
         BZ    BSCON27             NO - ERROR                                   
         ZICM  R0,2(R8),2          NO. OF REPETITIONS                           
         LA    RF,4(R8)            REPETEND                                     
         BAS   RE,BSNCHK                                                        
         BCT   R0,*-4                                                           
*                                                                               
         B     BSCON6                                                           
*                                                                               
BSCON27  DS    0H                                                               
         MVI   MPQBERR,MPQEREC     RECORD ERROR (CONTROL ELEM)                  
         B     BSCONX                                                           
*                                                                               
BSCON30  DS    0H                                                               
         LTR   R6,R6               TEST PUNCH PRESENT                           
         BNZ   BSCON31             YES - OK                                     
         CLI   CNDOPTSW,C'Y'       IF OPTIONAL SW ON                            
         BNE   BSCON30B            NO- ERROR                                    
*                                  CLEAR STACK ENTRY                            
         LR    RE,R3                                                            
         LH    RF,MPQBBVLN                                                      
         XCEF                                                                   
         B     BSCONX                                                           
*                                                                               
BSCON30B DS    0H                                                               
         MVI   MPQBERR,MPQERNF                                                  
         B     BSCONX                                                           
*                                                                               
BSCON31  DS    0H                                                               
         CLI   NFSW,C'Y'                                                        
         BE    BSCON32                                                          
*                                  PUNCH CONDITON                               
         CH    R6,MPQBBVLN         TEST NO. OF BYTES                            
         BNE   BSCON7                                                           
         B     BSCONX                                                           
*                                                                               
BSCON32  DS    0H                  ARITH VARIABLE                               
         C     R6,MPQBNRES         TEST NO. OF RESPONSES                        
         BNE   BSCON7                                                           
*                                                                               
BSCONX   DS    0H                                                               
         XIT1                                                                   
         SPACE  3                                                               
BSNCSET  DS    0H                  GET SET FOR BSNCHK                           
         MVC   COMPV,2(R2)         SET COMAPRE VALUE                            
         LH    R5,WDLEN                                                         
         IC    R5,BSNSRAL-1(R5)                                                 
         STC   R5,BSNSRAWK+3       ADJUST SHIFT INST                            
*                                                                               
         ZIC   R5,1(R2)            TYPE OF COMPARE                              
         SLL   R5,2                                                             
         LA    R5,BSNBRS-4(R5)                                                  
         ST    R5,BSNBRNCH         PRE-SET BRANCH FOR BSNCHK                    
         BR    RE                                                               
*                                                                               
         SPACE 3                                                                
BSNCHK   DS    0H                  COMPARE ENTRY AGAINST LITERAL VALUE          
         LA    R6,1(R6)            BUMP RESPONDENT POINTER                      
*                                                                               
         ICM   R5,15,0(RF)         INSERT 4 BYTES                               
         EX    R0,BSNSRAWK         ADJUSTED SRA TO SET CORRECT VALUE            
         L     R4,BSNBRNCH         PRESET ADDRESS FOR COMPARE BRANCHES          
         C     R5,COMPV            COMPARE ENTRY TO LITERAL                     
         BASR  R7,R4               LINK TO COMPARE BRANCHES                     
*                                  PASSES - GETS A YES                          
         LR    R4,R6                                                            
         BCTR  R4,R0                                                            
         SRDL  R4,3                COUNT/8                                      
         SRL   R5,29               REMAINDER                                    
*                                                                               
         LA    R5,BITTAB(R5)       GET MASK FOR 'OR' ING                        
         AR    R4,R3               POSITION OF BYTE                             
         OC    0(1,R4),0(R5)                                                    
         BR    RE                  DONE                                         
         SPACE 2                                                                
*                                  COMPARE BRANCHES                             
*                                                                               
*                                  RETURN VIA R7 IS YES                         
*                                  RETURN VIA RE IS NO (EXIT)                   
BSNBRS   DS    0F                                                               
         BER   R7          01      EQUAL                                        
         BR    RE                                                               
         SPACE                                                                  
         BNER  R7          02      NOT EQUAL                                    
         BR    RE                                                               
         SPACE                                                                  
         BHR   R7          03      HIGH                                         
         BR    RE                                                               
         SPACE                                                                  
         BNLR  R7          04      HIGH OR EQUAL                                
         BR    RE                                                               
         SPACE                                                                  
         BLR   R7          05      LOW                                          
         BR    RE                                                               
         SPACE                                                                  
         BNHR  R7          06      LOW OR EQUAL                                 
         BR    RE                                                               
         SPACE                                                                  
         DROP  R8                                                               
         SPACE 3                                                                
*                                CHKACC- CHECK VS ACCESS AUTHORIZATION          
*                                                                               
CHKACC   DS    0H                                                               
         USING QVTCNTEL,R8                                                      
         CLI   QVTACC,0            IF ACCESS BYTE =0                            
         BER   RE                  OK FOR EVERYONE                              
*                                                                               
         NTR1                                                                   
         ZIC   R2,QVTACC           ACCESS CODE                                  
         BCTR  R2,R0                                                            
         SR    R3,R3                                                            
         SRDL  R2,3                DIVIDE BY 8, REM IN R3                       
         SRL   R3,29                                                            
         LA    R2,MPQBACC(R2)      POINT TO BYTE TO BE CHECKED                  
         LA    R3,BITTAB(R3)       GET BIT FOR TM INST                          
         ICM   R3,1,0(R3)                                                       
         EX    R3,*+8                                                           
         B     *+8                                                              
         TM    0(R2),0             TEST BIT (MUST BE ON TO PASS)                
         BNZ   *+8                                                              
         MVI   MPQBERR,MPQEACC     SET ACCESS ERROR                             
         CLI   MPQBERR,0           SETS CC                                      
         XIT1                                                                   
         DROP  R8                                                               
         EJECT                                                                  
*              XMULT - CROSS MULTIPLICATION                                     
         SPACE 2                                                                
XMULT    DS    0H                                                               
         MVI   XABSW,C'N'                                                       
         XC    MPQBSAM(8),MPQBSAM  CLEAR SAMPLE AND POP                         
         MVC   XMOPNDS,PARAM3                                                   
         CLI   XMOPND1,C'B'        IS FIRST OPERAND BITS                        
         BNE   XM20                                                             
         OC    XMOPND2,XMOPND2     IS 2ND DEFINED                               
         BNZ   XM2D                                                             
*                                  NO - JUST COUNT AND WEIGHT                   
         MVC   XMSTR,XMOPND1                                                    
         B     COUNT                                                            
*                                                                               
XM2D     DS    0H                                                               
         CLI   XMOPND2,C'B'        IS 2ND BITS                                  
         BNE   XM6                                                              
*                                 BOTH ARE BIT VECTORS                          
*                                 --------------------                          
         L     R2,XMOPND1                                                       
         LA    R2,0(R2)                                                         
         L     R3,XMOPND2                                                       
         LA    R3,0(R3)                                                         
         L     RF,MPQBSTK          CHECK IF EITHER IS IN MPQBSTK                
         LR    R5,R2                                                            
         LR    R4,R3                                                            
         CR    R2,RF               IF 1ST, 'AND' 2ND TO FIRST                   
         BE    XM2F                                                             
         LR    R5,R3                                                            
         LR    R4,R2                                                            
         CR    R3,RF               IF 2ND, 'AND' 1ST TO 2ND                     
         BE    XM2F                                                             
*                                  IF NEITHER                                   
*                                  MOVE 2ND VECTOR TO STACK AREA                
         LH    R1,MPQBBVLN         LENGTH                                       
         MOVE  ((RF),(R1)),(R3)                                                 
         L     R5,MPQBSTK                                                       
         LR    R4,R2               AND 'AND' 1ST TO IT                          
*                                                                               
XM2F     DS    0H                                                               
         LH    RF,MPQBBVLN                                                      
*                                                                               
XM3      DS    0H                                                               
         LR    R8,RF                                                            
         CH    R8,=H'256'                                                       
         BNH   *+8                                                              
         LA    R8,256                                                           
         BCTR  R8,R0                                                            
         EX    R8,BSANDX                                                        
         LA    R8,1(R8)                                                         
         AR    R4,R8                                                            
         AR    R5,R8                                                            
         SR    RF,R8                                                            
         BP    XM3                                                              
*                                                                               
         MVC   XMSTR,MPQBSTK                                                    
         MVI   XMSTR,C'B'                                                       
         B     COUNT                                                            
*                                  BIT VECTOR X ARITHMETIC VARIABLE             
*                                  --------------------------------             
XM6      DS    0H                                                               
         L     R5,XMOPND2                                                       
         BAS   RE,XMSETV           INITIALIZE                                   
         MVC   XMSTR,XMOPND1                                                    
         B     COUNT                                                            
*                                                                               
XM20     DS    0H                  1ST OPERAND IS ARITHMETIC                    
         OC    XMOPND2,XMOPND2     TEST HAVE 2ND                                
         BNZ   XM22                                                             
*                                                                               
         MVC   XMSTR,XMOPND1       NO - JUST COUNT 1ST                          
         B     COUNT                                                            
*                                                                               
XM22     DS    0H                                                               
         CLI   XMOPND2,C'B'        IS 2ND A BIT VECTOR                          
         BNE   XM26                                                             
*                                  ARITH X BIT VECTOR                           
*                                  ------------------                           
         L     R5,XMOPND1                                                       
         BAS   RE,XMSETV                                                        
         MVC   XMSTR,XMOPND2                                                    
         B     COUNT                                                            
*                                  ARITH X ARITH                                
*                                  -------------                                
XM26     DS    0H                                                               
         MVC   AV1,XMOPND1         1ST OPERAND                                  
         MVC   AV2,XMOPND2         2ND OPERAND                                  
*                                  SAVE LARGEST DLEN AND PREC                   
*                                  FOR WORK VARIABLE                            
         L     R5,AV1                                                           
         USING MPQVARD,R5                                                       
         MVC   WORK(1),MPQVDLEN                                                 
         MVC   WORK+1(1),MPQVPREC                                               
         L     R5,AV2                                                           
         CLC   WORK(1),MPQVDLEN                                                 
         BNL   *+10                                                             
         MVC   WORK(1),MPQVDLEN                                                 
         CLC   WORK+1(1),MPQVPREC                                               
         BNL   *+10                                                             
         MVC   WORK+1(1),MPQVPREC                                               
*                                                                               
         L     R5,PARAM5           RESULT VARIABLE DESC IN PARAM5               
         MVC   WVAR,0(R5)          SET IN WORK VAR AREA                         
*                                                                               
         ST    R5,AV3              WORK VARIABLE IS RESULT VAR                  
         ST    R5,AWVAR                                                         
         MVI   AWVAR,C'A'                                                       
         MVI   AVOPTR,X'13'        SET MULTIPLY OPERATOR                        
         GOTO1 =A(AVAL),DMCB,WKD,RR=RELO                                        
         MVC   XMSTR,AWVAR                                                      
         B     COUNT                                                            
*                                                                               
         SPACE 2                                                                
XMSETV   NTR1                      SET VARIABLE FOR XMULT                       
*                                  OF B X A  OR  A X B                          
         MVI   XABSW,C'Y'                                                       
         USING MPQVARD,R5                                                       
         XC    WGTOT,WGTOT                                                      
         MVI   WDLEN2,0                                                         
         MVI   WPREC2,0                                                         
         MVC   WDLEN2+1(1),MPQVDLEN   DATA LENGTH                               
         MVC   WPREC2+1(1),MPQVPREC   PRECISION                                 
         NI    WPREC2+1,X'7F'      STRIP ANY HOB                                
         MVC   AWGTAB,MPQVSTR      A(VECTOR)                                    
         LH    RE,WDLEN2                                                        
         IC    R8,ICMSKS-1(RE)     SET MASKS FOR ICM'S                          
         STC   R8,BYTE                                                          
         NI    XABICMW+1,X'F0'                                                  
         NI    XABSTCMW+1,X'F0'                                                 
         OC    XABICMW+1(1),BYTE                                                
         OC    XABSTCMW+1(1),BYTE                                               
*                                                                               
*                                                                               
         LH    RF,WPREC2           SET DIVISOR                                  
         SLL   RF,2                                                             
         LA    RF,DVSRTAB(RF)                                                   
         MVC   VARDVSR,0(RF)                                                    
*                                                                               
         XC    AWVAR,AWVAR         CLEAR RESULT VARIABLE                        
         XC    WVAR,WVAR                                                        
         OC    PARAM5,PARAM5       RESULT IN PARAM5                             
         BZ    XMSETV4                                                          
*                                                                               
         MVC   AWVAR,PARAM5                                                     
         L     R5,AWVAR            SET WORK VARIABLE                            
         MVC   MPQVDLEN,WDLEN2+1   FORCE TO SAME LEN                            
         MVC   MPQVPREC,WPREC2+1   AND PREC AS 'A' VARIABLE                     
         MVI   AWVAR,C'A'                                                       
         MVC   WVAR,0(R5)          SET AS WORK VARIABLE                         
*                                  CLEAR VECTOR                                 
         L     RE,MPQVSTR                                                       
         L     RF,MPQBNRES         RESP COUNT                                   
         MH    RF,WDLEN2           X DATA LENGTH = VECTOR LENGTH                
         XCEF                                                                   
*                                                                               
XMSETV4  DS    0H                                                               
*                                                                               
         XIT1                                                                   
         EJECT                                                                  
*                                  GET WEIGHTED AND UNWEIGHTED COUNTS           
*                                  ----------------------------------           
*                                                                               
*                          **NB**- IN COUNT AND CTR ROUTINES SEVERAL            
*                                  BRANCHES ARE PRE-SET TO SAVE                 
*                                  REPEATED TESTING IN COUNTING                 
*                                  LOOPS.                                       
*                                  ALS0, XMULT OF BXA OR AXB INVOLVES           
*                                  THREE LEVEL PROCESSING-                      
*                                  -COUNTING BITS, SELECTING ARITH              
*                                  VALUE, THEN APPLYING SURVEY WGTS.            
         SPACE 2                                                                
COUNT    DS    0H                                                               
         MVI   WGTSW,C'N'          SET NO WEIGHTS                               
         CLI   MPQBNOWT,C'Y'       TEST WEIGHTS SUPPRESSED                      
         BE    COUNT2                                                           
         OC    MPQBWSAV,MPQBWSAV   TEST WEIGHTS SAVED                           
         BNZ   COUNT4                                                           
         OC    MPQBWCRD(5),MPQBWCRD   TEST WEIGHTING BY FILE                    
         BNZ   COUNT6                                                           
*                                  NO WEIGHTING                                 
COUNT2   DS    0H                                                               
         LA    RF,CTR14            SET BRANCH TO SKIP WEIGHTS                   
         CLI   XMSTR,C'B'          BITS                                         
         BE    *+8                                                              
         LA    RF,CTR28            OR ARITHMETIC                                
         ST    RF,CTRBRNCH                                                      
*                                                                               
         CLI   XABSW,C'Y'          FOR BA OR AB XMULT                           
         BNE   COUNT3                                                           
         LA    RF,CTR44            SET TO BRANCH TO CTR44                       
         ST    RF,CTRBRNCH                                                      
         LA    RF,CTR13            AND SET TO BRANCH OUT OF CTR44               
         ST    RF,CTR44BR                                                       
*                                                                               
COUNT3   DS    0H                                                               
         BAS   RE,CTR                                                           
         B     COUNT9                                                           
*                                                                               
COUNT4   DS    0H                  USE SAVED WEIGHTS                            
         MVI   WGTSW,C'Y'                                                       
         MVI   WDLEN,0                                                          
         MVC   WDLEN+1(1),MPQBWDLN    DATA LENGTH                               
*                                                                               
         CLI   XABSW,C'Y'          FOR AXB OR BXA XMULT                         
         BE    COUNT4B             DIFFERENT BRANCHES                           
*                                  ELSE-                                        
         LA    RF,CTR40            SET BIT VECTOR BRANCH FROM CTR               
         ST    RF,CTRBRNCH                                                      
         CLI   XMSTR,C'A'                                                       
         BNE   COUNT5                                                           
         LA    RF,CTR80            OR ARITHMETIC BRANCH                         
         ST    RF,CTRBRNCH                                                      
         LA    RF,CTR28            AND RETURN FROM CTR80                        
         ST    RF,CTR80RET                                                      
         B     COUNT5                                                           
*                                                                               
COUNT4B  DS    0H                  XAB OR BAX XMULT                             
         LA    RF,CTR44            SET TO BRANCH TO CTR44                       
         ST    RF,CTRBRNCH                                                      
         LA    RF,CTR80            AND SET TO BRANCH OUT OF CTR44               
         ST    RF,CTR44BR                                                       
         LA    RF,CTR13            AND RETURN TO BIT COUNTING                   
         ST    RF,CTR80RET         FROM CTR80                                   
*                                                                               
COUNT5   DS    0H                                                               
         LH    RE,WDLEN                                                         
         IC    R8,ICMSKS-1(RE)     SET MASKS FOR ICM'S                          
         STC   R8,BYTE                                                          
         NI    CTRICMW+1,X'F0'                                                  
         NI    CTRSTCMW+1,X'F0'                                                 
         OC    CTRICMW+1(1),BYTE                                                
         OC    CTRSTCMW+1(1),BYTE                                               
*                                                                               
         B     COUNT8                                                           
*                                                                               
COUNT6   DS    0H                  WEIGHTING BY FILE SPEC                       
         MVI   WGTSW,C'Y'                                                       
         XC    WDLEN,WDLEN                                                      
*                                                                               
         CLI   XABSW,C'Y'          FOR AXB OR BXA XMULT                         
         BE    COUNT6B             DIFFERENT BRANCHES                           
*                                  ELSE-                                        
         LA    RF,CTR50            SET BRANCH TO READ WEIGHTS                   
         ST    RF,CTRBRNCH                                                      
         LA    RF,CTR42            SET BRANCH OUT OF CTR50 ROUTINE              
         ST    RF,CTR50BR                                                       
         CLI   XMSTR,C'B'          FOR BITS                                     
         BE    COUNT7                                                           
         LA    RF,CTR82            OR ARITH                                     
         ST    RF,CTR50BR                                                       
         LA    RF,CTR28                                                         
         ST    RF,CTR80RET         AND CTR80 RETURN                             
         B     COUNT7                                                           
*                                                                               
COUNT6B  DS    0H                  XAB AND BAX XMULTS                           
         LA    RF,CTR44            SET TO BRANCH TO CTR44                       
         ST    RF,CTRBRNCH                                                      
         LA    RF,CTR50            AND SET TO BRANCH OUT OF CTR44               
         ST    RF,CTR44BR          FOR WEIGHTS FROM FILE                        
         LA    RF,CTR82            AND BRANCH OUT OF CTR50                      
         ST    RF,CTR50BR                                                       
         LA    RF,CTR13            PRE-SET RETURN                               
         ST    RF,CTR80RET         FROM CTR80                                   
*                                                                               
COUNT7   DS    0H                                                               
COUNT8   DS    0H                                                               
         XC    WGTOT,WGTOT                                                      
         XC    WGREMTOT,WGREMTOT                                                
         XC    ELAD,ELAD           STARTS FOR ELEM SCANS                        
         MVC   ELRHI,=F'-1'                                                     
         BAS   RE,CTR                                                           
*                                                                               
         MVC   MPQBPOP,WGTOT       SET WEIGHTED TOTAL                           
         CLI   XMSTR,C'A'          TEST ARITHMETIC VECTOR                       
         BE    COUNT8B                                                          
         CLI   XABSW,C'Y'          AND AXB OR BXA XMULTS                        
         BNE   COUNT8C                                                          
*                                                                               
COUNT8B  DS    0H                                                               
         L     R1,WGREMTOT        MUST ADD IN REMAINDER SUM                     
         M     R0,=F'1'                                                         
         L     RF,VARDVSR                                                       
         BAS   RE,DIV                                                           
         A     R1,WGTOT                                                         
         ST    R1,MPQBPOP          TO GET TRUE WEIGHTED TOTAL                   
*                                                                               
COUNT8C  DS    0H                  SET POP TO FINAL PRECISION                   
         CLC   MPQBPPRE,MPQBWPRE   TEST POP VS WGT PREC                         
         BE    COUNT9              IF =, NO CONVERSION                          
         MVC   BYTE,MPQBPPRE       POP PREC                                     
         NI    BYTE,X'7F'          STRIP HOB                                    
         ZIC   RF,BYTE                                                          
         TM    MPQBPPRE,X'80'      TEST NEG                                     
         BZ    *+6                                                              
         LCR   RF,RF                                                            
*                                                                               
         MVC   BYTE,MPQBWPRE       WGT PREC                                     
         NI    BYTE,X'7F'          STRIP HOB                                    
         ZIC   RE,BYTE                                                          
         TM    MPQBWPRE,X'80'      TEST NEG                                     
         BZ    *+6                                                              
         LCR   RE,RE                                                            
*                                                                               
         MVI   BYTE,C'D'           SET TO DIVIDE                                
         SR    RF,RE               IF POP PREC HIGHER                           
         BP    *+8                                                              
         MVI   BYTE,C'M'           ELSE MULTIPLY                                
*                                                                               
         LPR   RF,RF               SET CONVERSION FACTOR                        
         SLL   RF,2                                                             
         LA    RF,DVSRTAB(RF)                                                   
         MVC   DUB(4),0(RF)                                                     
*                                                                               
         L     R1,MPQBPOP                                                       
         CLI   BYTE,C'M'                                                        
         BNE   *+12                                                             
         M     R0,DUB                                                           
         B     COUNT8F                                                          
*                                                                               
         M     R0,=F'1'                                                         
         L     RF,DUB                                                           
         BAS   RE,DIV                                                           
*                                                                               
COUNT8F  DS    0H                                                               
         ST    R1,MPQBPOP                                                       
*                                                                               
COUNT9   DS    0H                                                               
         CLI   XABSW,C'Y'          TEST AXB OR BXA XMULT                        
         BNE   COUNT10                                                          
*                                                                               
         L     R1,MPQBSAM          YES- MUST RETURN SAM TO UNITS                
         M     R0,=F'1'                                                         
         L     RF,VARDVSR                                                       
         BAS   RE,DIV                                                           
         ST    R1,MPQBSAM                                                       
*                                                                               
COUNT10  DS    0H                                                               
COUNTX   DS    0H                                                               
         B     EXIT                                                             
         SPACE 2                                                                
DIV      DIV   (R0),(RF)                                                        
         EJECT                                                                  
*        NOTE- INPUT IS PASSED TO CTR IN XMSTR                                  
*              IF HOB IS B XMSTR IS A(BIT VECTOR)                               
*              IF HOB IS A XMSTR IS A(ARITHMETIC VARIABLE DESCRIPTOR)           
*                                                                               
CTR      NTR1                                                                   
         SPACE 2                                                                
         L     R3,XMSTR            POINT TO VECTOR                              
         CLI   XMSTR,C'B'          TEST BIT VECTOR                              
         BNE   CTR20                                                            
*                                  INPUT IS BIT VECTOR                          
*                                  -------------------                          
         SR    R7,R7               FOR RESPONDENT COUNT                         
         SR    R6,R6               COUNT OF YESES                               
         LH    R2,MPQBBVLN         FOR BCT                                      
         SR    R4,R4                                                            
*                                                                               
CTR10    DS    0H                                                               
         ICM   R4,1,0(R3)                                                       
         BZ    CTR16               WHOLE BYTE NULL                              
*                                                                               
         LA    R5,X'80'            SET BIT FINDER MASK                          
*                                                                               
CTR12    DS    0H                                                               
         LR    RE,R5                                                            
         NR    RE,R4                                                            
         BZ    CTR14                                                            
*                                                                               
         LA    R6,1(R6)            HAVE A YES                                   
         L     RF,CTRBRNCH         BRANCH TO PRE-SET ROUTINE                    
         BR    RF                                                               
*                                                                               
CTR13    DS    0H                  RE-ENTRY FOR XAB OR BAX XMULTS               
         L     R3,CTRSAVR3         RETORE BIT VECTOR POINTER                    
*                                                                               
CTR14    DS    0H                  NORMAL RE-ENTRY                              
         LA    R7,1(R7)            BUMP RSPONDENT COUNT                         
         SRA   R5,1                                                             
         BNZ   CTR12               ANOTHER BIT TO TEST                          
         B     CTR18                                                            
*                                                                               
CTR16    DS    0H                                                               
         LA    R7,8(R7)            NULL BYTE - SKIP COUNT BY 8                  
CTR18    DS    0H                                                               
         LA    R3,1(R3)            NEXT BYTE                                    
         BCT   R2,CTR10                                                         
         B     CTRX                                                             
*                                  INPUT IS ARITHMETIC VARIABLE                 
*                                  ----------------------------                 
CTR20    DS    0H                                                               
         LA    R5,0(R3)                                                         
         USING MPQVARD,R5                                                       
         MVI   WDLEN2,0                                                         
         MVC   WDLEN2+1(1),MPQVDLEN    SET DATA LENGTH                          
         CLI   WGTSW,C'Y'          IF WEIGHTING                                 
         BNE   CTR22                                                            
         MVI   WPREC2,0            SET WEIGHT CONTROLS                          
         MVC   WPREC2+1(1),MPQVPREC    AND PRECISION                            
         NI    WPREC2+1,X'7F'          STRIP HOB                                
         LH    RE,WDLEN2                                                        
         IC    R4,ICMSKS-1(RE)     SET MAKS FOR ICM'S                           
         STC   R4,BYTE                                                          
         NI    CTRICM2W+1,X'F0'                                                 
         OC    CTRICM2W+1(1),BYTE                                               
*                                                                               
         LH    RF,WPREC2           SET DIVISOR                                  
         SLL   RF,2                                                             
         LA    RF,DVSRTAB(RF)                                                   
         MVC   VARDVSR,0(RF)                                                    
*                                                                               
CTR22    DS    0H                                                               
         SR    R7,R7               FOR RESPONDENT COUNTER                       
         SR    R6,R6               FOR UNWGTD TOTAL OF RESPONSE                 
         L     R2,MPQBNRES         RESP COUNT FOR BCT                           
*                                                                               
         L     R5,MPQVSTR          A(VECTOR)                                    
         DROP  R5                                                               
*                                                                               
CTR24    DS    0H                                                               
         SR    R3,R3               CLEAR FOR INSERT                             
         TM    0(R5),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R3,R0               START WITH FF'S                              
         EX    R0,CTRICM2W         SET VALUE IN R3                              
         BZ    CTR28               SKIP IF ZERO                                 
*                                                                               
         AR    R6,R3               ADD TO UNWEIGHTED TOTAL                      
         L     RF,CTRBRNCH                                                      
         BR    RF                  BRANCH TO ADD LOGIC                          
*                                                                               
CTR28    DS    0H                                                               
         LA    R7,1(R7)            BUMP RESPONDENT COUNT                        
         AH    R5,WDLEN2           NEXT RESPONSE                                
         BCT   R2,CTR24                                                         
*                                                                               
*                                                                               
CTRX     DS    0H                                                               
         ST    R6,MPQBSAM          SET UNWEIGHTED COUNT                         
         XIT1                                                                   
         SPACE 3                                                                
*                                  SAVED SURVEY WGTS (BIT VECTOR)               
*                                  ------------------------------               
CTR40    DS    0H                                                               
         LR    RE,R7                                                            
         MH    RE,WDLEN                                                         
         A     RE,MPQBWSAV         POINTS TO WEIGHT VALUE                       
*                                                                               
CTR42    DS    0H                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
*                                  (NO NEGATIVE TEST FOR SURVEY WGTS)           
         EX    R0,CTRICMW          INSERT VALUE                                 
         A     R1,WGTOT                                                         
         ST    R1,WGTOT                                                         
         B     CTR14               'RETURN'                                     
         SPACE 2                                                                
*                                  XMULT OF BIT VECTOR BY ARITH VAR             
*                                  --------------------------------             
CTR44    DS    0H                                                               
         LR    RE,R7                                                            
         MH    RE,WDLEN2                                                        
         LR    RF,RE                                                            
         A     RE,AWGTAB           POINTS TO ARITH VALUE                        
*                                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
         TM    0(RE),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R1,R0               START WITH FF'S                              
         EX    R0,XABICMW          INSERT WEIGHT VALUE                          
         ICM   RE,15,WVARSTR       WHERE TO SET RESUTL                          
         BZ    CTR44D              IF TO BE SAVED                               
         AR    RE,RF                                                            
         EX    R0,XABSTCMW                                                      
*                                                                               
CTR44D   DS    0H                                                               
         ST    R3,CTRSAVR3         SAVE R3- BIT VECTOR POINTER                  
         LR    R3,R1               SAVE VALUE                                   
         AR    R6,R1               UNWEIGHTED TOTAL                             
         BCTR  R6,R0               LESS 1 FOR YES COUNT                         
         L     RF,CTR44BR          WGTS IF NEEDED, OR RETURN                    
         BR    RF                                                               
*                                                                               
*                                  SURVEY WEIGHTS FROM RECORDS                  
*                                  ---------------------------                  
*                                                                               
CTR50    DS    0H                  NORMAL ENTRY POINT                           
         C     R7,ELRHI            TEST VS HIGHEST IN ELEM                      
         BH    CTR54               RESP NOT IN THIS ELEM                        
*                                                                               
         ICM   RE,15,ELAD          A(ELEM)                                      
         BZ    CTR54                                                            
         CLI   0(RE),X'03'         IS IT A REPEATER ELEM                        
         BNE   CTR52               NO                                           
         LA    RE,QVTRPTND-QVTRPTEL(RE)      YES-POINT TO VALUE                 
         L     RF,CTR50BR                                                       
         BR    RF                  AND ADD AS IF FROM TABLE                     
*                                                                               
CTR52    DS    0H                                                               
         CLI   0(RE),X'02'         'NORMAL' DATA ELEM                           
         BNE   CTR56                                                            
         LR    R1,R7                                                            
         S     R1,ELRLO                                                         
         MH    R1,WDLEN            DISPLACEMENT INTO ELEM                       
         LA    RE,QVTSTR-QVTSTREL(RE,R1)     POINT TO VALUE                     
         L     RF,CTR50BR                                                       
         BR    RF             AND ADD AS IF FROM TABLE                          
*                                  TRY NEXT ELEM                                
CTR54    DS    0H                                                               
         L     RE,ELRHI            NEXT ELEM MUST BEGIN                         
         A     RE,=F'1'            WHERE LAST LEAVES OFF                        
         ST    RE,ELRLO                                                         
*                                                                               
         ICM   RE,15,ELAD          ADDRESS OF ELEM                              
         BZ    CTR60               NONE - GET 1ST RECORD                        
CTR56    DS    0H                                                               
         ZIC   R1,1(RE)                                                         
         AR    RE,R1               NEXT ELEM                                    
CTR56D   DS    0H                                                               
         CLI   0(RE),0                                                          
         BE    CTR60               EOR - GET ANOTHER RECORD                     
*                                                                               
         CLI   0(RE),X'02'                                                      
         BNE   CTR57                                                            
*                                  VECTOR ELEM                                  
         ZIC   R1,1(RE)            LENGTH                                       
         SH    R1,=H'2'                                                         
*                                  SET RESPONDENT COUNT FOR ELEM                
*                                  BASED ON RESPONSE LENGTH                     
         CLI   WDLEN+1,1           = IF 1 BYTE                                  
         BE    CTR58                                                            
         CLI   WDLEN+1,2                                                        
         BNE   *+12                                                             
         SRL   R1,1                /2 IF 2                                      
         B     CTR58                                                            
         CLI   WDLEN+1,4                                                        
         BNE   *+12                                                             
         SRL   R1,2                /4 IF 4                                      
         B     CTR58                                                            
*                                                                               
         SR    R0,R0                                                            
         D     R0,=F'3'            /3 IF 3                                      
*                                                                               
         B     CTR58                                                            
*                                  REPEATER ELEM                                
CTR57    DS    0H                                                               
         CLI   0(RE),X'03'                                                      
         BNE   CTR59                                                            
*                                                                               
         SR    R1,R1                                                            
         ICM   R1,3,QVTRPTNO-QVTRPTEL(RE)    NO. OF RESPONSES                   
*                                                                               
CTR58    DS    0H                                                               
         BCTR  R1,R0                                                            
         A     R1,ELRLO                                                         
         ST    R1,ELRHI                 SET HIGHEST IN ELEM                     
         ST    RE,ELAD             ELEM ADDRESS                                 
         B     CTR50                                                            
         SPACE 2                                                                
CTR59    DS    0H                                                               
         CLI   0(RE),X'01'         CONTROL ELEM                                 
         BNE   CTR56                                                            
*                                                                               
         USING QVTCNTEL,RE                                                      
         MVC   WDLEN+1(1),QVTCDLEN                                              
         DROP  RE                                                               
         LH    R8,WDLEN                                                         
         IC    R8,ICMSKS-1(R8)     SET MASKS FOR ICM'S                          
         STC   R8,BYTE                                                          
         NI    CTRICMW+1,X'F0'                                                  
         NI    CTRSTCMW+1,X'F0'                                                 
         OC    CTRICMW+1(1),BYTE                                                
         OC    CTRSTCMW+1(1),BYTE                                               
*                                                                               
         B     CTR56                                                            
*                                  NEED TO GET WEIGHT RECORD                    
         SPACE 2                                                                
CTR60    DS    0H                                                               
         BAS   RE,CWR                                                           
         CLI   MPQBERR,0                                                        
         BNE   CTRX                                                             
         L     RE,ELAD                                                          
         B     CTR56D              RETURN                                       
         SPACE 2                                                                
*                                  APPLY MULTIPLICATIVE WEIGHT                  
*                                  FOR COMPONENT VARIABLE                       
*                                  ----------------------------                 
*                                                                               
CTR70    DS    0H                                                               
*                                                                               
         LR    RE,R7                                                            
         MH    RE,WDLEN                                                         
         A     RE,AWGTAB           POINT TO CURRENT WEIGHT VALUE                
*                                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
         EX    R0,CTRICMW                                                       
         M     R0,VARFACT                                                       
         A     R1,VARRNDR          (OK BECAUSE VALUES CANNOT BE NEG)            
         D     R0,VARDVSR                                                       
*                                                                               
         EX    R0,CTRSTCMW         SET NEW VALUE                                
         B     CTR14                                                            
         SPACE 2                                                                
*                                  APPLY ADDITIVE WEIGHT                        
*                                  FOR COMPONENT VARIABLE                       
*                                  ----------------------                       
*                                                                               
CTR75    DS    0H                                                               
*                                                                               
         LR    RE,R7                                                            
         MH    RE,WDLEN                                                         
         A     RE,AWGTAB           POINT TO CURRENT WEIGHT VALUE                
*                                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
         TM    0(RE),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R1,R0               START WITH FF'S                              
         EX    R0,CTRICMW                                                       
         A     R1,VARFACT                                                       
         EX    R0,CTRSTCMW         SET NEW VALUE                                
         B     CTR14                                                            
         SPACE 2                                                                
*                                  SAVED SURVEY WGTS (ARITH)                    
*                                  -------------------------                    
*                                                                               
CTR80    DS    0H                  NORMAL ENTRY POINT                           
         LR    RE,R7                                                            
         MH    RE,WDLEN                                                         
         A     RE,MPQBWSAV                                                      
*                                                                               
CTR82    DS    0H                  SURVEY WEIGHTS                               
         SR    R1,R1               CLEAR FOR INSERT                             
*                                  (NO NEGATIVE TEST FOR SURVEY WGTS)           
         EX    R0,CTRICMW          WEIGHT VALUE                                 
         MR    R0,R3               X ARITH RESPONSE VALUE                       
*                                  MUST ROUND OFF ARITH                         
         D     R0,VARDVSR          VECTOR PRECISION                             
*                                  TRUNCATE                                     
         A     R0,WGREMTOT         AND CUME REMAINDERS                          
         ST    R0,WGREMTOT                                                      
         A     R1,WGTOT            ADD TO TOTAL                                 
         ST    R1,WGTOT                                                         
*                                                                               
         L     RF,CTR80RET         PRE-SET RETURN ADDRESS                       
         BR    RF                                                               
*                                                                               
         SPACE 2                                                                
CWR      NTR1                                                                   
         OC    ELAD,ELAD           FIRST TIME                                   
         BNZ   CWR4                                                             
*                                                                               
         MVC   DIRNAM,MPQBQVD      SET TO QVERT DIRECTORY                       
         MVC   FILNAM,MPQBQVF      AND FILE                                     
         XC    KEY,KEY                                                          
         LA    R7,KEY                                                           
         USING QVTREC,R7                                                        
         MVI   QVTKSYS,C'Q'        SYSTEM CODE                                  
         MVI   QVTKRCD,X'41'       RECORD CODE                                  
         MVC   QVTKFCD,MPQBFCD     FILE CODE                                    
         MVC   QVTKWDT,MPQBWVDT    WAVE DATE                                    
         MVC   QVTKCRD(5),MPQBWCRD  CARD AND COLUMN AND LEN                     
         BAS   RE,BSHIGH                                                        
         B     CWR4B                                                            
*                                                                               
CWR4     DS    0H                                                               
         BAS   RE,BSSEQ                                                         
*                                                                               
CWR4B    DS    0H                                                               
         CLC   KEY(QVTKSEQ-QVTKEY),KEYSAVE                                      
         BNE   CWR7                ERROR TO HAVE READ BEYOND                    
         BAS   RE,BSGET                                                         
         L     R7,MPQBIOA                                                       
*                                                                               
         LA    R8,QVTELS                                                        
         ST    R8,ELAD                                                          
         B     CWRX                                                             
*                                                                               
CWR7     DS    0H                                                               
         MVI   MPQBERR,MPQEDATL    DATA LENGTH ERROR                            
*                                                                               
CWRX     DS    0H                                                               
         XIT1                                                                   
         EJECT                                                                  
BSHIGH   DS    0H                                                               
         MVC   KEYSAVE,KEY                                                      
         LA    RF,=C'DMRDHI'                                                    
         B     BSDIR                                                            
         SPACE 2                                                                
BSSEQ    DS    0H                                                               
         LA    RF,=C'DMRSEQ'                                                    
         SPACE 2                                                                
BSDIR    DS    0H                                                               
         ST    RF,DMCB                                                          
         LR    R0,RE                                                            
         GOTO1 MPQBDMGR,DMCB,,DIRNAM,KEY,KEY                                    
         B     BSDMCHK                                                          
         SPACE 3                                                                
BSGET    DS    0H                                                               
         LR    R0,RE                                                            
         LA    RE,KEY+L'QVTKEY+L'QVTCNTL                                        
         ST    RE,DMCB+8                                                        
         GOTO1 MPQBDMGR,DMCB,=C'GETREC',FILNAM,,MPQBIOA,DMWRK                   
         SPACE 2                                                                
BSDMCHK  DS    0H                                                               
         TM    DMCB+8,X'FF'                                                     
         BZ    *+6                                                              
         DC    H'0'                                                             
         LR    RE,R0                                                            
         BR    RE                                                               
         SPACE 2                                                                
NEXTEL   DS    0H                                                               
         CLI   FELSW,C'Y'          IF FIRST TIME                                
         MVI   FELSW,C'N'          SET OFF SW                                   
         BE    NEXTEL2             AND USE FIRST ELEM                           
NEXTEL1  ZIC   R0,1(R8)                                                         
         AR    R8,R0                                                            
NEXTEL2  DS    0H                                                               
         CLI   0(R8),0                                                          
         BNE   NEXTEL4                                                          
         LTR   RE,RE                                                            
         BR    RE                                                               
NEXTEL4  DS    0H                                                               
         CLC   0(1,R8),ELCODLO                                                  
         BL    NEXTEL1                                                          
         CLC   0(1,R8),ELCODHI                                                  
         BH    NEXTEL1                                                          
         SR    R0,R0                                                            
         BR    RE                                                               
         SPACE 3                                                                
         LTORG                                                                  
         EJECT                                                                  
*                               SET USER VARIABLE FROM NUMERIC FIELD            
SAVN     NMOD1 0,SAVN                                                           
         L     RC,0(R1)                                                         
         SPACE 2                                                                
         MVC   DIRNAM,MPQBQVD      SET QVERT DIRECTORY                          
         MVC   FILNAM,MPQBQVF      AND FILE NAMES                               
         XC    KEY,KEY                                                          
         LA    R7,KEY                                                           
         USING QVTREC,R7                                                        
         MVI   QVTKSYS,C'Q'        SYSTEM CODE                                  
         MVI   QVTKRCD,X'41'       RECORD CODE                                  
         MVC   QVTKFCD,MPQBFCD     FILE CODE                                    
         MVC   QVTKWDT,MPQBWVDT    WAVE DATE                                    
         MVC   QVTKCRD(4),CDPTR    CARD AND COLUMN                              
         MVC   QVTKTYP,NFLGTH      LENGTH OF FIELD                              
         MVC   QPSW,NQPSW          SET Q/P FOR ERROR MSG                        
         CLI   NQPSW,C'Q'          TEST Q                                       
         BNE   SAVN2                                                            
*                                                                               
         USING QPTREC,R7           USE PRE-TAB REC                              
         XC    QPTKNOD(QPTKEY+L'QPTKEY-QPTKNOD),QPTKNOD                         
         MVC   QPTKNOD(3+QMAXLN),QNOD  SET NODE AND CODE                        
         MVC   DIRNAM,MPQBQSD      SET QSPEC DIRECTORY                          
         MVC   FILNAM,MPQBQSF      AND FILE NAMES                               
*                                                                               
SAVN2    DS    0H                                                               
*                                                                               
         L     R4,AWGTAB           R4 = RECEIVING AREA                          
         XC    WGTOT,WGTOT                                                      
         XC    RESPWC,RESPWC       CLEAR INPUT BYTE COUNT                       
         XC    RSTOT,RSTOT                                                      
         XC    WDLEN,WDLEN                                                      
         XC    WPREC,WPREC                                                      
*                                                                               
         BAS   RE,SVNHIGH                                                       
         B     SAVN4B                                                           
SAVN4    DS    0H                                                               
         BAS   RE,SVNSEQ                                                        
SAVN4B   DS    0H                                                               
         CLI   NQPSW,C'Q'        KEY LENGTH TO CHECK DEPENDS ON TYPE            
         BE    *+14                                                             
         CLC   KEY(QVTKSEQ-QVTKEY),KEYSAVE                                      
         B     *+10                                                             
         CLC   KEY(QPTKSEQ-QPTKEY),KEYSAVE                                      
         BNE   SAVN12                                                           
         BAS   RE,SVNGET                                                        
         L     R7,MPQBIOA        A(REC)                                         
*                                                                               
*                         NOTE -QVTREC AND QPTREC FORMATS IDENTICAL             
         LA    R8,QPTELS                                                        
         MVI   ELCODLO,X'01'                                                    
         MVI   ELCODHI,X'03'                                                    
         MVI   FELSW,C'Y'          SET TO TRY FIRST ELEM                        
*                                                                               
SAVN6    DS    0H                                                               
         BAS   RE,NEXTEL                                                        
         BNE   SAVN4                                                            
*                                                                               
         CLI   0(R8),X'01'         CONTROL ELEM                                 
         BNE   SAVN7                                                            
         USING QVTCNTEL,R8                                                      
         BAS   RE,CHKACC           TEST ACCESS OK                               
         BNE   SAVNX               NO-EXIT WITH ERROR SET                       
         MVC   RSTOT,QVTCOUNT                                                   
         MVC   WDLEN+1(1),QVTCDLEN DATA LENGTH                                  
         L     RF,MPQBNRES         NO. OF RESPONDENTS                           
         MH    RF,WDLEN            X BYTES PER RESPONSE                         
         ST    RF,WSLEN            = EXPECTED LENGTH OF WEIGHT VECTOR           
*                                                                               
         B     SAVN6                                                            
*                                                                               
SAVN7    DS    0H                                                               
         CLI   0(R8),X'02'                                                      
         BNE   SAVN9                                                            
         USING QVTSTREL,R8                                                      
         ZIC   RF,1(R8)                                                         
         SH    RF,=H'2'                                                         
         LR    R0,RF                                                            
         A     R0,RESPWC                                                        
         C     R0,WSLEN            TEST HAVE TOO MANY BYTES                     
         BNH   SAVN8                                                            
SAVN7B   DS    0H                                                               
         MVI   MPQBERR,MPQEDATL    DATA LENGTH ERROR                            
         B     SAVNX                                                            
*                                                                               
*                                                                               
SAVN8    DS    0H                                                               
         ST    R0,RESPWC           COUNT OF INPUT BYTES                         
         BCTR  RF,R0                                                            
         EX    RF,SAVNMVC          MOVE TO RECEIVING AREA                       
         LA    R4,1(R4,RF)         BUMP AREA POINTER                            
         B     SAVN6                                                            
*                                                                               
SAVN9    DS    0H                                                               
         CLI   0(R8),X'03'         REPEATER ELEMENT                             
         BNE   SAVN6                                                            
         USING QVTRPTEL,R8                                                      
         ZICM  RF,QVTRPTNO,2       NO. OF REPETITIONS                           
         LH    RE,WDLEN                                                         
         MR    RE,RE               X DATA FIELD LENGTH                          
         LR    R1,RF                                                            
         LR    R5,RF               SAVE TOTAL LEN FOR POINTER BUMP              
         A     RF,RESPWC                                                        
         C     RF,WSLEN            TEST TOO MANY BYTES                          
         BH    SAVN7B                                                           
         ST    RF,RESPWC                                                        
*                                                                               
         LH    RE,WDLEN                                                         
         SR    R1,RE               ADJUST LENGTH FOR 2ND MOVE                   
         BCTR  RE,R0                                                            
         EX    RE,SAVNRMVC                                                      
         LA    RF,1(R4,RE)         TO ADDRESS FOR MOVE                          
         MOVE  ((RF),(R1)),(R4)                                                 
         AR    R4,R5                  BUMP POINTER                              
         B     SAVN6                                                            
*                                                                               
SAVN12   DS    0H                                                               
         OC    RESPWC,RESPWC                                                    
         BNZ   *+12                                                             
         MVI   MPQBERR,MPQERNF                                                  
         B     SAVNX                                                            
*                                                                               
         CLC   RESPWC,WSLEN                                                     
         BNE   SAVN7B                                                           
*                                  CHECK TOTAL OF WEIGHTS                       
         LH    RE,WDLEN                                                         
         IC    R8,SVNICMSK-1(RE)     MASK FOR EXEC ICM'S                        
         STC   R8,BYTE                                                          
         NI    CTRICMW+1,X'F0'                                                  
         NI    CTRSTCMW+1,X'F0'                                                 
         OC    CTRICMW+1(1),BYTE                                                
         OC    CTRSTCMW+1(1),BYTE                                               
*                                                                               
         L     R0,MPQBNRES         FOR BCT                                      
         L     RE,AWGTAB           A(WEIGHT TABLE)                              
         SR    R3,R3                                                            
*                                                                               
SAVN14   DS    0H                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
         TM    0(RE),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R1,R0               START WITH FF'S                              
         EX    R0,CTRICMW          VALUE INTO R1                                
         AR    R3,R1                                                            
         AH    RE,WDLEN            NEXT VALUE                                   
         BCT   R0,SAVN14                                                        
*                                                                               
         ST    R3,WGTOT            SET TOTAL                                    
         C     R3,RSTOT            TEST VS CONTROL ELEM TOTAL                   
         BE    SAVNX                                                            
         MVI   MPQBERR,MPQEDATL    DATA LENGTH ERROR                            
*                                                                               
SAVNX    DS    0H                                                               
         XIT1                                                                   
SAVNMVC  MVC   0(0,R4),2(R8)                                                    
SAVNRMVC MVC   0(0,R4),4(R8)                                                    
SVNICMSK DC    X'0103070F'         MASKS FOR EXECUTED ICM INST                  
         SPACE 2                                                                
         DROP  R7                                                               
         DROP  R8                                                               
         EJECT                                                                  
SVNHIGH  DS    0H                                                               
         MVC   KEYSAVE,KEY                                                      
         LA    RF,=C'DMRDHI'                                                    
         B     SVNDIR                                                           
         SPACE 2                                                                
SVNSEQ   DS    0H                                                               
         LA    RF,=C'DMRSEQ'                                                    
         SPACE 2                                                                
SVNDIR   DS    0H                                                               
         ST    RF,DMCB                                                          
         LR    R0,RE                                                            
         GOTO1 MPQBDMGR,DMCB,,DIRNAM,KEY,KEY                                    
         B     SVNDMCHK                                                         
         SPACE 3                                                                
SVNGET   DS    0H                                                               
         LR    R0,RE                                                            
         LA    RE,KEY+L'QVTKEY+L'QVTCNTL                                        
         ST    RE,DMCB+8                                                        
         GOTO1 MPQBDMGR,DMCB,=C'GETREC',FILNAM,,MPQBIOA,DMWRK                   
         SPACE 2                                                                
SVNDMCHK DS    0H                                                               
         TM    DMCB+8,X'FF'                                                     
         BZ    *+6                                                              
         DC    H'0'                                                             
         LR    RE,R0                                                            
         BR    RE                                                               
         LTORG                                                                  
         EJECT                                                                  
*                          ARITHMETIC OPERATIONS ON VARIABLE VECTORS            
*                          -----------------------------------------            
*                          **NB- PRECISION RANGE IS 0 TO .00000                 
         SPACE 2                                                                
AVAL     NMOD1 0,AVAL                                                           
         L     RC,0(R1)            A(WORK AREA)                                 
         SPACE 2                                                                
         XC    WDLEN(12),WDLEN     CLEAR ALL WDLENS AND WPRECS                  
*                                                                               
         L     R5,AV1              1ST OPERAND                                  
         USING MPQVARD,R5                                                       
         MVC   WDLEN+1(1),MPQVDLEN                                              
         MVC   WPREC+1(1),MPQVPREC                                              
         NI    WPREC+1,X'7F'       STRIP HOB                                    
         MVC   AV1STR,MPQVSTR                                                   
         LH    RE,WDLEN                                                         
         IC    R8,AVICMSKS-1(RE)   SET MASK FOR ICM'S                           
         STC   R8,BYTE                                                          
         NI    AV1ICMW+1,X'F0'                                                  
         OC    AV1ICMW+1(1),BYTE                                                
*                                                                               
         L     R5,AV2              2ND OPERAND                                  
         CLI   AVOPTR,X'15'        FOR NEGATION AND EQUATE NO 2ND OPND          
         BL    *+8                 SET NOW TO SAVE TEST AT AVAL10               
         L     R5,AV1              USE FIRST AS DUMMY                           
         USING MPQVARD,R5                                                       
         MVC   WDLEN2+1(1),MPQVDLEN                                             
         MVC   WPREC2+1(1),MPQVPREC                                             
         NI    WPREC2+1,X'7F'       STRIP HOB                                   
         MVC   AV2STR,MPQVSTR                                                   
         LH    RE,WDLEN2                                                        
         IC    R8,AVICMSKS-1(RE)   SET MASK FOR ICM'S                           
         STC   R8,BYTE                                                          
         NI    AV2ICMW+1,X'F0'                                                  
         OC    AV2ICMW+1(1),BYTE                                                
*                                                                               
         CLI   OPTCD,APLIT         IF APPLYING LITERAL THEN CLEAR               
         BNE   AVAL6               LENGTH TO PREVENT BUMP BECAUSE               
*                                  LITERAL IS RESENT ONLY ONCE                  
         LA    RF,WDLEN            DO FOR 1ST OPERAND                           
         CLI   AVOPTR,X'15'        IF EQUATE OR NEGATE                          
         BNL   *+8                                                              
         LA    RF,WDLEN2           ELSE DO FOR 2ND                              
         XC    0(2,RF),0(RF)                                                    
*                                                                               
AVAL6    DS    0H                                                               
         L     R5,AV3              RESULT                                       
         USING MPQVARD,R5                                                       
         MVC   WDLEN3+1(1),MPQVDLEN                                             
         MVC   WPREC3+1(1),MPQVPREC                                             
         NI    WPREC3+1,X'7F'       STRIP HOB                                   
         MVC   AV3STR,MPQVSTR                                                   
         LH    RE,WDLEN3                                                        
         IC    R8,AVICMSKS-1(RE)   SET MASK FOR ICM'S                           
         STC   R8,BYTE                                                          
         NI    AVSTCMW+1,X'F0'                                                  
         OC    AVSTCMW+1(1),BYTE                                                
*                                                                               
         XC    AVALCS,AVALCS       CLEAR ALL CONVERSION FIELDS                  
         MVC   BYTE,AVOPTR         OPERATOR CODE                                
         NI    BYTE,X'0F'                                                       
         ZIC   R4,BYTE                                                          
         SLL   R4,2                                                             
         BAS   RE,AVSETBR-4(R4)    INITIALIZE                                   
*                                                                               
         L     R5,MPQBNRES         RESP COUNT FOR BCT                           
         L     R6,AV1STR           1ST OPERAND                                  
         L     R7,AV2STR           2ND OPERAND                                  
         L     R8,AV3STR           RESULT                                       
*                                                                               
AVAL9    DS    0H                                                               
         SR    R1,R1               CLEAR FOR INSERT                             
         TM    0(R7),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R1,R0               START WITH FF'S                              
         EX    R0,AV2ICMW          DO 2ND OPERAND FIRST                         
         ICM   RF,15,AV2CVBR                                                    
         BZ    AVAL10                                                           
         MVC   AVNCVAL,AV2CVAL                                                  
         BASR  RE,RF                                                            
*                                                                               
AVAL10   DS    0H                                                               
         LR    R3,R1               R3 HAS 2ND OPERAND                           
         SR    R1,R1               CLEAR FOR INSERT                             
         TM    0(R6),X'80'         BUT IF NEGATIVE                              
         BZ    *+6                                                              
         BCTR  R1,R0               START WITH FF'S                              
         EX    R0,AV1ICMW          R1 HAS 1ST OPERAND                           
         ICM   RF,15,AV1CVBR                                                    
         BZ    AVAL11                                                           
         MVC   AVNCVAL,AV1CVAL                                                  
         BASR  RE,RF                                                            
*                                                                               
AVAL11   DS    0H                                                               
         L     RF,AVOPTBR                                                       
         BR    RF                                                               
*                                                                               
AVAL20   DS    0H                                                               
         ICM   RF,15,AV3CVBR       CONVERSION OF RESULT                         
         BZ    AVAL22                                                           
         MVC   AVNCVAL,AV3CVAL                                                  
         BASR  RE,RF                                                            
*                                                                               
AVAL22   DS    0H                                                               
         EX    R0,AVSTCMW          SET RESULT                                   
*                                                                               
         AH    R6,WDLEN            NEXT ENTRY                                   
         AH    R7,WDLEN2                                                        
         AH    R8,WDLEN3                                                        
         BCT   R5,AVAL9                                                         
*                                                                               
AVALX    DS    0H                                                               
         XIT1                                                                   
*                                                                               
AVCMUL   DS    0H                  MULTIPLICATION FOR PRECISION                 
*                                  CONVERSION                                   
         M     R0,AVNCVAL                                                       
         BR    RE                                                               
         SPACE 2                                                                
AVCDIV   DS    0H                  DIVISION FOR PRECISION                       
*                                  CONVERSION                                   
         M     R0,=F'1'                                                         
         SLDA  R0,1                                                             
         D     R0,AVNCVAL                                                       
         LTR   R1,R1                                                            
         BNP   *+8                                                              
         A     R1,=F'1'                                                         
         SRA   R1,1                                                             
         BR    RE                                                               
         SPACE 2                                                                
AVADD    DS    0H                  ADDITION                                     
         AR    R1,R3                                                            
         B     AVAL20                                                           
         SPACE 2                                                                
AVSUB    DS    0H                  SUBTRACTION                                  
         SR    R1,R3                                                            
         B     AVAL20                                                           
         SPACE 2                                                                
AVMULT   DS    0H                  MULTIPLICATION                               
         MR    R0,R3                                                            
         B     AVAL20              RETURN                                       
         SPACE 2                                                                
AVDIV    DS    0H                  DIVISION                                     
         LTR   R3,R3               IF DIVISOR ZERO                              
         BNZ   *+10                                                             
         SR    R1,R1               SET QUOTIENT ZERO                            
         B     AVAL20                                                           
*                                                                               
         M     R0,=F'1'            SET DIVIDEND IN 2 REGS                       
         SLDA  R0,1                                                             
         DR    R0,R3                                                            
         LTR   R1,R1                                                            
         BNP   *+8                                                              
         A     R1,=F'1'                                                         
         SRA   R1,1                                                             
*                                                                               
         B     AVAL20                                                           
         SPACE 2                                                                
AVNEG    DS    0H                  NEGATION                                     
         LCR   R1,R1                                                            
         B     AVAL20              RETURN                                       
         SPACE 2                                                                
AVEQU    DS    0H                  EQUATE                                       
         B     AVAL20              RETURN                                       
         SPACE 2                                                                
AVSETBR  DS    0F                                                               
         B     AVSETADD            X'11' ADD                                    
         B     AVSETSUB            X'12' SUBTRACT                               
         B     AVSETMUL            X'13' MULTIPLY                               
         B     AVSETDIV            X'14' DIVIDE                                 
         B     AVSETNEG            X'15' NEGATE                                 
         B     AVSETEQU            X'16' EQUATE                                 
*                                                                               
         SPACE 2                                                                
AVSETADD DS    0H                  INITIALIZE FOR ADDITION                      
         LA    RF,AVADD                                                         
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
AVSA3    DS    0H                                                               
         LH    RF,WPREC1           OPND1 PRECISION                              
         SH    RF,WPREC2           OPND2 PRECISION                              
         BZ    AVSA4               IF = THEN NO OPND CONVERSION                 
*                                                                               
         LA    R2,AV2CVAL          CONVERT SHORTER                              
         LA    R6,AV2CVBR                                                       
         BH    *+12                                                             
         LA    R2,AV1CVAL                                                       
         LA    R6,AV1CVBR                                                       
         LPR   RF,RF               USE POSITIVE VALUE FOR DISP                  
         SLL   RF,2                                                             
         LA    RF,AVDVSRTB(RF)                                                  
         MVC   0(4,R2),0(RF)       SET CONVERSION FACTOR                        
         LA    RF,AVCMUL                                                        
         ST    RF,0(R6)            SET CONVERSION ADDRESS                       
*                                                                               
AVSA4    DS    0H                                                               
         LH    RF,WPREC3           RESULT PRECISION                             
         LA    R2,WPREC2           LESS LARGER OF OPND PRECS                    
         CLC   WPREC2,WPREC1                                                    
         BNL   *+8                                                              
         LA    R2,WPREC1                                                        
         SH    RF,0(R2)                                                         
         B     AVSET3              SET CONVERSION FOR RESULT                    
         SPACE 2                                                                
AVSETSUB DS    0H                  INITIALIZE FOR SUBTRACTION                   
         LA    RF,AVSUB                                                         
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
         B     AVSA3               SAME AS ADDITION                             
         SPACE 2                                                                
AVSETMUL DS    0H                  INITIALIZE FOR MULTIPLICATION                
         LA    RF,AVMULT                                                        
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
         LH    RF,WPREC3           RESULT PREC                                  
         SH    RF,WPREC2           LESS PREC FOR                                
         SH    RF,WPREC            BOTH OPERANDS                                
*                                  RESULT PREC VS SUM OF OPNDS                  
         SPACE 2                                                                
*                                  **COMMON CODE TO SET RESULT CONV**           
AVSET3   DS    0H                                                               
         LA    R6,0                NO CONVERSION                                
         BZ    AVSET4              IF SUM = RESULT PREC                         
         LA    R6,AVCMUL           MULTIPLY                                     
         BP    AVSET4              IF SUM LT RESULT PREC                        
         LA    R6,AVCDIV           DIVIDE                                       
*                                  IF SUM GT RESULT PREC                        
AVSET4   DS    0H                                                               
         ST    R6,AV3CVBR          SET RESULT CONVERSION BRANCH                 
*                                                                               
         LPR   RF,RF                                                            
         SLL   RF,2                                                             
         LA    RF,AVDVSRTB(RF)                                                  
         MVC   AV3CVAL,0(RF)       SET CONVERSION VALUE                         
         BR    RE                                                               
         SPACE 2                                                                
AVSETDIV DS    0H                  INITIALIZE FOR DIVISION                      
         LA    RF,AVDIV                                                         
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
         LH    RF,WPREC2           DIVISOR PRECISION                            
         LTR   RF,RF               CONTROLS DIVIDEND CONVERSION                 
         BZ    AVSD2                                                            
         SLL   RF,2                                                             
         LA    RF,AVDVSRTB(RF)                                                  
         MVC   AV1CVAL,0(RF)                                                    
         LA    RF,AVCMUL                                                        
         ST    RF,AV1CVBR                                                       
*                                                                               
AVSD2    DS    0H                                                               
         LH    RF,WPREC3           RESULT PRECISION                             
         SH    RF,WPREC1           LESS DIVIDEND PRECISION                      
*                                  CONTROLS RESULT CONVERSION                   
         B     AVSET3              DO RESULT CONVERSIO                          
         SPACE 2                                                                
AVSETNEG DS    0H                  INITIALIZE FOR NEGATION                      
         LA    RF,AVNEG                                                         
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
         LH    RF,WPREC3           RESULT PRECISION                             
         SH    RF,WPREC1           INPUT PRECISION                              
*                                                                               
         B     AVSET3              SET CONVERSION FOR RESULT                    
         BR    RE                                                               
         SPACE 2                                                                
AVSETEQU DS    0H                  INITIALIZE FOR EQUATE                        
         LA    RF,AVEQU                                                         
         ST    RF,AVOPTBR          SET OPERATOR BRANCH                          
*                                                                               
         LH    RF,WPREC3           RESULT PRECISION                             
         SH    RF,WPREC1           INPUT PRECISION                              
*                                                                               
         B     AVSET3              SET CONVERSION FOR RESULT                    
         BR    RE                                                               
         SPACE 2                                                                
AVICMSKS DC    X'0103070F'         MASKS FOR EXECUTED ICM INST                  
         DS    0F                                                               
AVDVSRTB DC    AL4(1,10,100,1000,10000,100000)                                  
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
*                                  SET ERROR MESSAGE                            
*                                  -----------------                            
SETERM   NMOD1 0,SETERM                                                         
         L     RC,0(R1)                                                         
         LA    R6,ERRMSGS                                                       
*                                                                               
SERM4    DS    0H                                                               
         CLI   0(R6),X'FF'         END                                          
         BNE   *+6                                                              
         DC    H'0'                                                             
         CLC   MPQBERR,0(R6)                                                    
         BE    SERM4D                                                           
         LA    R6,EMSGL+1(R6)                                                   
         B     SERM4                                                            
*                                                                               
SERM4D   DS    0H                                                               
         MVC   MPQBEMSG(EMSGL),1(R6)   SET BASIC MESSAGE                        
*                                  SOME MSGS GET ADD ON                         
         CLI   MPQBERR,MPQERNF     REC NOT FOUND                                
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEDATL    REC DATA LENGTH                              
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEREC     REC FORMAT ERROR                             
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEACC     ACCESS NOT AUTHORIZED                        
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEWSPC    WEIGHTED SPEC NO ALLOWED IN BOOLEAN          
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEQSND    QSPEC NOT DEFINED FOR WAVE                   
         BE    SERM5                                                            
         CLI   MPQBERR,MPQENUM     NUMERIC QSPEC REQUIRES COMPARAND             
         BE    SERM5                                                            
         CLI   MPQBERR,MPQEQNM     QSPEC NOT NUMERIC                            
         BE    SERM5                                                            
         B     SERMX                                                            
*                                                                               
SERM5    DS    0H                                                               
         LA    R6,NESTLST          USE NESTLST AS WORK AREA                     
         MVI   0(R6),C' '                                                       
         MVC   1(30,R6),0(R6)                                                   
*                                                                               
         CLI   QPSW,C'P'                                                        
         BNE   SERM5F                                                           
*                                  C/C/P ERROR                                  
         MVC   0(10,R6),=C'CARDNN COL'                                          
         LH    R0,CDPTR                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  4(2,R6),DUB                                                      
         LH    R0,CLPTR                                                         
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  10(2,R6),DUB                                                     
         MVC   13(1,R6),PUNCH                                                   
         CLI   NFSW,C'Y'                                                        
         BNE   SERM8                                                            
         MVI   12(R6),C'('                                                      
         MVC   13(1,R6),NFLGTH                                                  
         OI    13(R6),X'F0'                                                     
         MVI   14(R6),C')'                                                      
         B     SERM8                                                            
*                                                                               
SERM5F   DS    0H                                                               
         LA    R5,QPTR                                                          
         LA    R4,QMAXLV           MAXIMUM LEVELS                               
*                                                                               
SERM5G   DS    0H                                                               
         CLI   MPQBERR,MPQERNF     REC NOT FOUND                                
         BNE   SERM5H                                                           
         MVC   MPQBEMSG(L'QSPCDE),QSPCDE                                        
         CLI   QPSW,C'Q'                                                        
         BE    SERM5H                                                           
         MVC   MPQBEMSG(L'TGTCDE),TGTCDE                                        
SERM5H   CLI   0(R5),C' '          END                                          
         BNH   SERM5I                                                           
*                                                                               
         MVC   0(QMAXLN,R6),0(R5)                                               
         LA    R6,QMAXLN(R6)                                                    
         CLI   0(R6),C' '                                                       
         BH    *+8                                                              
         BCT   R6,*-8                                                           
         MVI   1(R6),C'.'                                                       
         LA    R6,2(R6)                                                         
*                                                                               
         LA    R5,QMAXLN(R5)                                                    
         BCT   R4,SERM5G                                                        
*                                                                               
SERM5I   DS    0H                                                               
         BCTR  R6,R0                                                            
         MVI   0(R6),C' '                                                       
         LA    R6,NESTLST                                                       
*                                                                               
SERM8    DS    0H                                                               
         MVC   TROUT(L'MPQBEMSG),MPQBEMSG   USE TROUT AS WORK AREA              
         LA    R5,TROUT+EMSGL-1                                                 
         CLI   0(R5),C' '                                                       
         BH    *+8                                                              
         BCT   R5,*-8                                                           
         MVI   1(R5),C'-'                                                       
         MVC   2(20,R5),0(R6)                                                   
         MVC   MPQBEMSG,TROUT      MOVE BACK WHAT WILL FIT                      
*                                                                               
SERMX    XIT1                                                                   
         SPACE 2                                                                
         LTORG                                                                  
         SPACE 3                                                                
*        ERROR MESSAGES                                                         
         SPACE 3                                                                
EMSGL    EQU   40                                                               
         SPACE 1                                                                
TGTCDE   DC    CL6'Target'                                                      
QSPCDE   DC    CL6'Qspec '                                                      
         SPACE 1                                                                
ERRMSGS  DS    0C                                                               
         DC    AL1(MPQESYNT),CL40'Invalid syntax'                               
         DC    AL1(MPQESTMX),CL40'Spec. is too complex'                         
         DC    AL1(MPQERNF),CL40'Record not found'                              
         DC    AL1(MPQEDATL),CL40'Record error (Data length)'                   
         DC    AL1(MPQEREC),CL40'Record error'                                  
         DC    AL1(MPQEQSC),CL40'Invalid QSPEC syntax'                          
         DC    AL1(MPQENSMX),CL40'Too many nested levels'                       
         DC    AL1(MPQEQSND),CL40'QSPEC not defined for wave'                   
         DC    AL1(MPQEACC),CL40'ACCESS not authorised'                         
         DC    AL1(MPQECMPW),CL40'Component weight error'                       
         DC    AL1(MPQEWSPC),CL40'Weighted Qspec/Target not allowed'            
         DC    AL1(MPQENUM),CL40'Numeric Qspec needs comparand'                 
         DC    AL1(MPQEQNM),CL40'Qspec not numeric'                             
         DC    X'FF'                                                            
         EJECT                                                                  
*                                  WORK AREA DSECT                              
WKD      DSECT                                                                  
PARAMS   DS    0XL24                                                            
PARAM1   DS    F                                                                
PARAM2   DS    F                                                                
PARAM3   DS    F                                                                
PARAM4   DS    F                                                                
PARAM5   DS    F                                                                
PARAM6   DS    F                                                                
*                                                                               
RELO     DS    F                                                                
SAVEL    DS    F                                                                
FRSTEL   DS    F                                                                
LAPOS    DS    F                                                                
SAVR2    DS    F                                                                
SAVFLST  DS    F                                                                
DUB      DS    D                                                                
DMCB     DS    6F                                                               
SAVR1    DS    F                                                                
RSTOT    DS    F                                                                
RESPWC   DS    F                                                                
WSLEN    DS    F                                                                
WGTOT    DS    F                                                                
WGREMTOT DS    F                                                                
COMPV    DS    F                                                                
AWGTAB   DS    A                                                                
AWGTCOND DS    A                                                                
ELRLO    DS    F                                                                
ELRHI    DS    F                                                                
ELAD     DS    A                                                                
ENDEL    DS    A                                                                
DIRNAM   DS    CL8                                                              
FILNAM   DS    CL8                                                              
WORK     DS    XL8                                                              
VARDVSR  DS    F                                                                
VARRNDR  DS    F                                                                
VARFACT  DS    F                                                                
*                                  PRE-SET BRANCHES                             
CTRBRNCH DS    A                                                                
CTR50BR  DS    A                                                                
CTR44BR  DS    A                                                                
CTR80RET DS    A                                                                
BSNBRNCH DS    A                                                                
*                                                                               
CTRSAVR3 DS    F                                                                
         DS    0F                                                               
WRKEXECS DS    0XL36          INSTRUCTIONS MOVE TO WRK AND ADJUSTED             
CTRICMW  DS    F                                                                
CTRSTCMW DS    F                                                                
CTRICM2W DS    F                                                                
XABICMW  DS    F                                                                
XABSTCMW DS    F                                                                
AV1ICMW  DS    F                                                                
AV2ICMW  DS    F                                                                
AVSTCMW  DS    F                                                                
BSNSRAWK DS    F                                                                
*                                                                               
NESTNXT  DS    A                                                                
CURNEST  DS    A                                                                
*                                                                               
NESTLSTN EQU   5          MAXIMUM NUMBER OF NESTS                               
NESTWAL  EQU   200        MAX CUMULATIVE LENGTH OF ACTIVE NEST STRINGS          
NESTLSTL EQU   NESTLDX-NESTLSTD                                                 
*                                                                               
         DS    0F                                                               
NESTLST  DS    XL(NESTLSTN*NESTLSTL)                                            
NESTLSTX EQU   *                                                                
NESTWA   DS    XL(NESTWAL)                                                      
NESTWAX  EQU   *                                                                
*                                                                               
CVXNO    DS    H                                                                
WDLEN    DS    H                                                                
WDLEN1   EQU   WDLEN                                                            
WDLEN2   DS    H                                                                
WDLEN3   DS    H                                                                
WPREC    DS    H                                                                
WPREC1   EQU   WPREC                                                            
WPREC2   DS    H                                                                
WPREC3   DS    H                                                                
*                                                                               
         DS    0H                                                               
PTRS     DS    0X                  POINTERS                                     
QNOD     DS    XL3                 QSPEC POINTER (NODE)                         
QCOD     DS    CL(QMAXLN)                                                       
QPTR     DS    CL(QMAXLN*QMAXLV)      WORK AREA FOR QSPEC CODES                 
QNLEVS   DS    X                      COUNT OF QSPEC LEVELS                     
LQPSW    DS    C                                                                
NQPSW    DS    C                                                                
PTRSL    EQU   *-PTRS                                                           
*                                  NOTE-POINTERS BELOW NOT                      
*                                  SAVED/RESTORED WITH NESTING                  
CDPTR    DS    H                   CARD POINTER                                 
CLPTR    DS    H                   COLUMN POINTER                               
NFLGTH   DS    XL1                 NUMERIC FIELD LENGTH                         
VPTR     DS    XL2                 VARIABLE POINTER                             
*                                                                               
QPSW     DS    C                                                                
PUNCH    DS    C                                                                
FELSW    DS    C                                                                
ACXV     DS    A                                                                
AWVAR    DS    A                                                                
WVAR     DS    0XL(MPQVARL)                                                     
         DS    XL(MPQVSTR-MPQVARD)                                              
WVARSTR  DS    XL4                                                              
         ORG   WVAR+MPQVARL                                                     
         DS    0F                                                               
XMOPNDS  DS    0XL8                                                             
XMOPND1  DS    F                                                                
XMOPND2  DS    F                                                                
XMSTR    DS    F                                                                
*                                                                               
AV1      DS    A                                                                
AV2      DS    A                                                                
AV3      DS    A                                                                
*                                                                               
AVALCS   DS    0XL24                                                            
AV1CVAL  DS    F                                                                
AV2CVAL  DS    F                                                                
AV3CVAL  DS    F                                                                
AVNCVAL  DS    F                                                                
AV1CVBR  DS    F                                                                
AV2CVBR  DS    F                                                                
AV3CVBR  DS    F                                                                
*                                                                               
AVOPTBR  DS    F                                                                
AV1STR   DS    A                                                                
AV2STR   DS    A                                                                
AV3STR   DS    A                                                                
AVOPTR   DS    X                                                                
XABSW    DS    X                                                                
*                                                                               
OPNDLEN  DS    H                                                                
OPTCD    DS    CL1                    OPERATOR CODE                             
QWORK    DS    CL((QMAXLN+1)*QMAXLV)  WORK AREA FOR QSPEC CODES                 
QMAXLN   EQU   8                      MAX QSPEC CODE LENGTH                     
QMAXLV   EQU   3                      MAX QSPEC LEVELS                          
EOQ      DS    A                                                                
*                                                                               
NFSW     DS    C                                                                
NRQSW    DS    C                                                                
COMMAND  DS    CL8                                                              
KEY      DS    CL48                                                             
KEYSAVE  DS    CL48                                                             
ELCODLO  DS    X                                                                
ELCODHI  DS    X                                                                
BYTE     DS    X                                                                
WGTSW    DS    CL1                                                              
CNDOPTSW DS    CL1                                                              
DMWRK    DS    12D                                                              
TROUT    DS    XL200               OUTPUT AREA FOR QTRAN                        
*                                                                               
WKDL     EQU   *-WKD                                                            
         SPACE 3                                                                
NESTLSTD DSECT                     DSECT FOR NEST CONTROL LIST                  
NESTBACK DS    F                                                                
NESTSTR  DS    A                                                                
NESTPTRS DS    XL(PTRSL)                                                        
NESTLDX  EQU   *                                                                
         EJECT                                                                  
*                                                                               
       ++INCLUDE MPQBLKD                                                        
*                                                                               
*                                  FIELDS THAT NEED TO BE SAVED                 
*                                  BUT NEED NOT CLUTTER USER DSECT              
         ORG   MPQBWRK                                                          
*                                  **NONE USED AT PRESENT                       
*                                                                               
       ++INCLUDE MPQVARD                                                        
*                                                                               
       ++INCLUDE MPQERRQS                                                       
         EJECT                                                                  
*                                                                               
       ++INCLUDE DDNODBLKD                                                      
         EJECT                                                                  
*                                                                               
       ++INCLUDE MPGENQS                                                        
*                                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'013MPQFAC    05/01/02'                                      
         END                                                                    
