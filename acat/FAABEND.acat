*          DATA SET FAABEND    AT LEVEL 010 AS OF 09/23/16                      
*CATALP FAABEND                                                                 
         TITLE 'FACILITIES ABEND - DUMP TO FIXED SIZE DISK AND RESTART'         
         PRINT NOGEN                                                            
ABEND    CSECT                                                                  
         ENTRY ABENDPC                                                          
         ENTRY ABENDPCR                                                         
         ENTRY ABENDES                                                          
         ENTRY ABENDITR                                                         
         ENTRY ABENDWHY                                                         
         ENTRY ABENDRSN                                                         
         ENTRY ABENDXX                                                          
                                                                                
***********************************************************************         
* SPIE ENTRY POINT                                                    *         
* TASKER MAY HAVE ALREADY SET ABENDWHY WHEN WE GET HERE               *         
* C'I'=LOOP CAUSED BY N OCCURANCES OF THE INTERVAL TIMER              *         
* C'X'=TASKER EXUT ACTIVE (USING PROGRAM CHECK EXIT)                  *         
***********************************************************************         
         USING *,RF                                                             
ABENDPC  SAC   0                                                                
         STM   RD,RC,SPIERD                                                     
         MVI   ABENDSW,C'I'        INDICATE SPIE PROCESSING                     
         CLI   ABENDWHY,0          TEST SET BY TASKER                           
         BNE   *+8                 YES- LEAVE IT ALONE                          
         MVI   ABENDWHY,C'P'       ELSE IT'S A PROGRAM CHECK                    
         LR    RB,RF                                                            
         DROP  RF                                                               
         USING ABENDPC,RB                                                       
*                                                                               
         USING EPIE,R1             R1=A(EPIE)                                   
         USING ABENDREG,R9                                                      
         LA    R9,ABENDPCR         SIMULATE DOS PSW/REG AREA                    
         MVC   GPRS,EPIEGPR        R0-RF                                        
         MVC   PSW,EPIEPSW         PSW                                          
         MVC   ABENDILC,EPIEILC1   ILC (INSTRUCTION LENGTH)                     
         MVI   ABENDRSN,X'FF'                                                   
         MVC   ABENDRSN+1(2),EPIEINC1                                           
         MVC   ARGS,EPIEAR         ACCESS REGISTERS                             
         CLI   EPIEVERS,EPIEV2     VERSION 2 OR GREATER                         
         BL    ABENDPCX                                                         
*                                                                               
         MVC   GRG0,EPIEG6400      GRAND REGISTERS PART ONLY                    
         MVC   GRG1,EPIEG6401                                                   
         MVC   GRG2,EPIEG6402                                                   
         MVC   GRG3,EPIEG6403                                                   
         MVC   GRG4,EPIEG6404                                                   
         MVC   GRG5,EPIEG6405                                                   
         MVC   GRG6,EPIEG6406                                                   
         MVC   GRG7,EPIEG6407                                                   
         MVC   GRG8,EPIEG6408                                                   
         MVC   GRG9,EPIEG6409                                                   
         MVC   GRGA,EPIEG6410                                                   
         MVC   GRGB,EPIEG6411                                                   
         MVC   GRGC,EPIEG6412                                                   
         MVC   GRGD,EPIEG6413                                                   
         MVC   GRGE,EPIEG6414                                                   
         MVC   GRGF,EPIEG6415                                                   
         DROP  R1                                                               
*                                                                               
ABENDPCX MVC   ABENDPCS,PSW                                                     
         LA    R9,ABENDPCR                                                      
                                                                                
***********************************************************************         
* START OF DEBUG ENGINE                                               *         
***********************************************************************         
TDEBUG   L     R2,=V(SSB)          MUST BE IN A TASK                            
         ICM   R3,15,SSBTKADR-SSBD(R2)                                          
         BZ    ABEND2                                                           
         USING TCBD,R3                                                          
         TM    TCBFLAG3,TCBDEBUG   MUST BE IN DEBUG MODE                        
         BZ    ABENDPRT                                                         
*                                                                               
         XR    R1,R1                                                            
         CLI   ABENDWHY,C'X'       RESUME                                       
         BNE   TDEBUG05                                                         
         MVC   ABENDPCR,TCBPSW     MOVE SAVED REGS TO PC AREA                   
         ICM   R1,7,PSW+5                                                       
*                                                                               
         OC    TCBDEXIT,TCBDEXIT   IF EXIT WAS CLEARED                          
         BNZ   TDEBUG04                                                         
         NI    TCBFLAG3,255-TCBDEBUG                                            
         MVI   ABENDWHY,C'P'       FORCE PROGRAM CHECK                          
         B     ABEND2                                                           
*                                                                               
TDEBUG04 OC    TCBP1A,TCBP1A       NO BREAK1 MUST BE A GO                       
         BE    TDEB000             SO CONTINUE                                  
*                                                                               
TDEBUG05 ICM   R1,15,TCBP1A                                                     
         BZ    *+10                                                             
         MVC   0(2,R1),TCBP1I      RESTORE BREAK 1 IF THERE                     
         ICM   R1,15,TCBP2A                                                     
         BZ    *+10                                                             
         MVC   0(2,R1),TCBP2I      RESTORE BREAK 2 IF THERE                     
*                                                                               
         ICM   R1,7,PSW+5                                                       
         AHI   R1,-2                                                            
         C     R1,TCBP1A           CHECK WE HIT A BREAKPOINT                    
         BE    TDEB010                                                          
         C     R1,TCBP2A                                                        
         BNE   ABEND2                                                           
*                                                                               
TDEB010  ICM   R1,7,PSW+5                                                       
         AHI   R1,-2                                                            
         STCM  R1,7,PSW+5                                                       
*                                                                               
         XC    TCBBREAK,TCBBREAK   NOW CLEAR THEM                               
         ICM   RF,15,TCBDEXIT      GO TO EXIT ROUTINE                           
         BNZ   TDEB015                                                          
         NI    TCBFLAG3,255-TCBDEBUG                                            
         B     BPSTARX             NOT THERE - SWITCH OFF DEBUG                 
*                                                                               
TDEB015  STM   R1,RD,DBREGS        SAVE MY REGS                                 
         LA    R1,PSW              PASS PSW AND REGS                            
         BASR  RE,RF               GO TO USERS EXIT                             
         LM    R1,RD,DBREGS        RESTORE ALL MY REGS                          
         BO    ABEND2                                                           
         BNZ   TDEB000                                                          
         NI    TCBFLAG3,255-TCBDEBUG                                            
         B     ABEND2                                                           
*                                                                               
TDEB000  LA    RF,2                ILC PERHAPS (I HOPE)                         
         TM    0(R1),X'C0'                                                      
         BZ    *+16                                                             
         LA    RF,2(RF)                                                         
         BM    *+8                                                              
         LA    RF,2(RF)                                                         
         AR    RF,R1               SET BP1                                      
         LR    R2,R1               SET R2 TO INSTRUCTION                        
*                                                                               
         CLI   0(R2),X'44'         WAS THIS AN EXECUTE INSTRUCTION              
         BNE   TDEB020             THEN NO PROBLEM                              
*                                                                               
         XR    RE,RE                                                            
         IC    R1,1(R2)                                                         
         N     R1,=X'0000000F'     ANY INDEX                                    
         BZ    *+12                                                             
         SLL   R1,2                                                             
         L     RE,PSW+8(R1)        SET RE FROM INDEX                            
         ICM   R1,3,2(R2)                                                       
         N     R1,=X'00000FFF'                                                  
         AR    RE,R1               ADD THIS TO RE                               
*                                                                               
         XR    R1,R1               EXTRACT BASE AND ADD TO R0                   
         ICM   R1,3,2(R2)                                                       
         SRL   R1,12                                                            
         LTR   R1,R1                                                            
         BZ    *+12                                                             
         SLL   R1,2                                                             
         A     RE,PSW+8(R1)                                                     
*                                                                               
         CR    RE,RF               ARE WE EXECUTING THE NXT INSTRUCTION         
         BE    TDEB019                                                          
         LR    R2,RE               FAKE R2 IN CASE OF EXECUTING BRANCH          
         B     TDEB020                                                          
TDEB019  LR    R1,RE               SKIP IT                                      
         B     TDEB000                                                          
*                                                                               
TDEB020  ST    RF,TCBP1A           SET BREAK ON NEXT INSTRUCTION                
         MVC   TCBP1I,0(RF)                                                     
         MVC   0(2,RF),=X'0001'                                                 
*                                                                               
         CLI   0(R2),X'47'         BC - CHECK FOR BRANCH INSTRUCTIONS           
         BE    SETRX                                                            
         CLI   0(R2),X'45'         BAL                                          
         BE    SETRX                                                            
         CLI   0(R2),X'46'         BCT                                          
         BE    SETRX                                                            
         CLI   0(R2),X'4D'         BAS                                          
         BE    SETRX                                                            
*                                                                               
         CLI   0(R2),X'07'         BCR                                          
         BE    SETRR                                                            
         CLI   0(R2),X'05'         BALR                                         
         BE    SETRR                                                            
         CLI   0(R2),X'06'         BCTR                                         
         BE    SETRR                                                            
         CLI   0(R2),X'0B'         BSM                                          
         BE    SETRR                                                            
         CLI   0(R2),X'0D'         BASR                                         
         BE    SETRR                                                            
         CLI   0(R2),X'0C'         BASSM                                        
         BE    SETRR                                                            
*                                                                               
         CLI   0(R2),X'84'         BRXH                                         
         BE    SETBR                                                            
         CLI   0(R2),X'85'         BRXLE                                        
         BE    SETBR                                                            
         CLI   0(R2),X'86'         BXH                                          
         BE    SETRS                                                            
         CLI   0(R2),X'87'         BXLE                                         
         BE    SETRS                                                            
         CLI   0(R2),X'A7'         POSSIBLE BR INSTRUCTION                      
         BE    SETRI                                                            
         B     BPSTARX                                                          
*                                                                               
SETRX    XR    RE,RE               CLEAR RE FOR ADDRESS                         
         IC    R1,1(R2)                                                         
         N     R1,=X'0000000F'     ANY INDEX                                    
         BZ    *+12                                                             
         SLL   R1,2                                                             
         L     RE,PSW+8(R1)        SET RE FROM INDEX                            
         ICM   R1,3,2(R2)                                                       
         N     R1,=X'00000FFF'                                                  
         AR    RE,R1               ADD THIS TO RE                               
*                                                                               
         XR    R1,R1               EXTRACT BASE AND ADD TO RE                   
         ICM   R1,3,2(R2)                                                       
         SRL   R1,12                                                            
         LTR   R1,R1                                                            
         BZ    *+12                                                             
         SLL   R1,2                                                             
         A     RE,PSW+8(R1)                                                     
         B     SETRCHK             CHECK BAL AND BAS FOR RANGE                  
*                                                                               
SETRS    ICM   R1,3,2(R2)                                                       
         N     R1,=X'00000FFF'                                                  
         LR    RE,R1                                                            
         XR    R1,R1                                                            
         ICM   R1,3,2(R2)                                                       
         SRL   R1,12                                                            
         LTR   R1,R1                                                            
         BZ    *+12                                                             
         SLL   R1,2                                                             
         A     RE,PSW+8(R1)                                                     
         B     SETREGX                                                          
*                                                                               
SETRR    LR    RF,R3               SET RE FROM REGISTER                         
         IC    R1,1(R2)                                                         
         N     R1,=X'0000000F'                                                  
         BZ    BPSTARX                                                          
         SLL   R1,2                                                             
         L     RE,PSW+8(R1)                                                     
*                                                                               
SETRCHK  N     RE,=X'00FFFFFF'     REMOVE TOP BITS                              
*                                                                               
         C     RE,TCBPGMX-TCBD(R3) TEST PROGX AND BEYOND                        
         BH    BPSTARX             IGNORE THIS IS CALLING OUTSIDE FAC           
         C     RE,TCBPGMA-TCBD(R3) TEST PROG AREA AND BEYOND                    
         BNL   SETREGX             OK FINE                                      
*                                                                               
         C     RE,=V(DDWTO)        OK IF AFTER FACPAK                           
         BNL   SETREGX                                                          
*NOP*    CLC   0(10,RE),=X'90ECD00C0DB041B0B000'                                
*NOP*    BNL   SETREGX                                                          
         B     BPSTARX                                                          
*                                                                               
SETRI    MVC   BYTE,1(R2)          SAVE INSTRUCTION SUB CODE IN BYTE            
         NI    BYTE,X'0F'                                                       
         CLI   BYTE,4              BRANCH RELATIVE                              
         BE    SETBR                                                            
         CLI   BYTE,5                                                           
         BE    SETBR                                                            
         CLI   BYTE,6                                                           
         BE    SETBR                                                            
         CLI   BYTE,7                                                           
         BE    SETBR                                                            
         B     BPSTARX             ALL THE OTHER A7 GOTO BPSTARTX               
*                                                                               
SETBR    LR    RF,R3               SET RE FROM RELATIVE OFFSET                  
         LH    R1,2(R2)            NUMBER OF HALFWORDS                          
         L     RE,PSW+4                                                         
         AR    RE,R1                                                            
         AR    RE,R1                                                            
         B     SETREGX                                                          
*                                                                               
SETREGX  LTR   RE,RE                                                            
         BZ    BPSTARX                                                          
         CR    R2,RE               ATTEMPT TO HANDLE BXLE 0,0,*                 
         BE    BPSTARX                                                          
         SLL   RE,8                                                             
         SRL   RE,8                                                             
         STCM  RE,15,TCBP2A                                                     
*                                                                               
         CLC   TCBP1A,TCBP2A       IF SAME BREAKPOINT THEN COPY                 
         BNE   *+10                                                             
         MVC   0(2,RE),TCBP1I                                                   
         MVC   TCBP2I,0(RE)                                                     
         MVC   0(2,RE),=X'0001'    SET BREAKPOINT 2                             
*                                                                               
         CLC   TCBP1A,TCBP2A       IF SAME THEN DONT CHECK BELOW                
         BE    BPSTARX                                                          
         CLI   0(R2),X'46'         BCT DONT CHECK THIS EITHER                   
         BE    BPSTARX                                                          
         CLC   0(2,R2),=X'A7F6'    BRCT RF DONT CHECK THIS EITHER               
         BE    BPSTARX                                                          
*                                                                               
         MVC   BYTE,1(R2)          IS THIS AN UNCONDITIONAL BRANCH              
         NI    BYTE,X'F0'                                                       
         CLI   BYTE,X'F0'                                                       
         BNE   BPSTARX                                                          
         ICM   RE,15,TCBP1A        RESTORE BREAKPOINT 1 NOW                     
         BZ    BPSTARX                                                          
         MVC   0(2,RE),TCBP1I      OR SUFFER THE POSSIBLE CONSEQUENCES          
*                                                                               
BPSTARX  CLI   ABENDWHY,C'X'       RESUME TASK                                  
         BE    ABEND2                                                           
         TM    PSW+2,X'C0'         COULD BE IN AR MODE                          
         BNZ   BPSTARAR                                                         
*                                                                               
BPSTARX1 L     R1,SPIER1           POINT TO EPIE                                
         USING EPIE,R1                                                          
         MVC   EPIEPSW,PSW         PSW                                          
         L     RE,SPIERE           GET RETURN ADDRESS                           
         BR    RE                                                               
         DROP  R1                                                               
*                                                                               
BPSTARAR MVC   BYTE,PSW+2          IF PSW IS AR MODE                            
         NI    BYTE,X'C0'                                                       
         CLI   BYTE,X'40'          SET AMODE BEFORE RETURN                      
         BNE   BPSTARX1                                                         
*                                                                               
         XR    R1,R1                                                            
         ICM   R1,7,PSW+5          R1=A(NEXT INSTRUCTION)                       
         LA    RF,ARGO                                                          
         SR    R1,RF               OFFSET FROM ARGO TO INSTRUCTION              
         SRL   R1,1                IN HALFWORDS                                 
         STCM  R1,15,ARGO+2                                                     
         LA    RF,ARSET            SET ARSET AS RETURN POINT                    
         STCM  RF,7,PSW+5                                                       
         B     BPSTARX1            GO FROM ARSET                                
*                                                                               
ARSET    SAC   512                                                              
ARGO     BRCL  15,ARGO                                                          
*                                                                               
DBREGS   DC    13A(0)                                                           
BYTE     DC    X'00'                                                            
         EJECT                                                                  
***********************************************************************         
* START OF PROTECTION TRAP                                            *         
***********************************************************************         
         USING EPIE,R1                                                          
ABENDPRT CLI   EPIEICD1,4          IS IT A S0C4                                 
         BNE   ABENDCHK                                                         
         TM    PSW+1,X'90'         WERE WE IN STORAGE KEY 9                     
         BNO   ABENDCHK                                                         
         DROP  R1                                                               
*                                                                               
         L     R2,=V(SSB)                                                       
         USING SSBD,R2                                                          
         TM    SSBPROT,SSBPROTQ    TEST DUMP ON STORAGE PROTECTION              
         BO    ABENDCHK                                                         
         ICM   R3,15,SSBTKADR                                                   
         BZ    ABEND2                                                           
         USING TCBD,R3                                                          
         ICM   R4,15,TCBUTL                                                     
         BZ    ABENDCHK                                                         
         USING UTLD,R4                                                          
         SR    R5,R5                                                            
         ICM   R5,7,TAPRG                                                       
         BZ    ABENDCHK                                                         
         USING PGMLSTD,R5                                                       
*                                                                               
ABENDPR1 TM    SSBSTAT4,SSBPGDSP   TEST IF DISPLACEMENT                         
         BZ    ABENDPR2            NO                                           
         SR    RE,RE                                                            
         ICM   RE,7,TARSYS                                                      
         BZ    ABENDCHK                                                         
         ICM   RE,15,SEPGMS-SELISTD(RE)                                         
         AR    R5,RE               ADD DISPLACEMENT TO ADDRESS                  
*                                                                               
ABENDPR2 TM    PGMIND4,PGMIPROT    IS THIS A TRUE PROTECTED PROGRAM             
         BO    ABENDCHK                                                         
         TM    TSTATU,TSTATEPR     DID HE CONNECT WITH PROT=Y                   
         BO    ABENDCHK                                                         
         TM    PGMIND3,PGMIUNP     THIS SHOULD NOT BE ON                        
         BO    ABENDCHK                                                         
*                                                                               
         OI    PGMIND3,PGMIUNP     SET THESE TO DISABLE PROTECTION              
         MVI   TCBPROT,0                                                        
         DROP  R5                                                               
*                                                                               
         LA    R6,=C'..+FACXXX+ PROT CHECK .../... **????** AT 000000 '         
         MVC   0(2,R6),=X'002F'                                                 
         MVC   6(3,R6),SSBSYSNA                                                 
         MVC   22(3,R6),TCBLNSYS                                                
         MVC   26(3,R6),TCBLNPRG                                                
*                                                                               
         SR    R1,R1               ADJUST PSW                                   
         ICM   R1,7,PSW+5                                                       
         SR    R0,R0                                                            
         IC    R0,ABENDILC                                                      
         SR    R1,R0                                                            
         STCM  R1,7,PSW+5                                                       
*                                                                               
         L     RE,REGB             CHECK REGB IN RANGE                          
         C     RE,SSBLOADR                                                      
         BL    ABENDWTO                                                         
         C     RE,SSBHIADR                                                      
         BH    ABENDWTO                                                         
*                                                                               
         MVC   30(8,R6),22(RE)     SET MODULE NAME                              
         SR    RE,RE                                                            
         ICM   RE,7,PSW+5                                                       
         S     RE,REGB             CALCULATE OFFSET                             
         ST    RE,PFULL                                                         
         LA    R0,3                                                             
         LA    R1,42(R6)           PRINT '000000' LOCATION DIED                 
         LA    RE,PFULL+1                                                       
*                                                                               
ABENDPR4 LLC   RF,0(RE)            GET NEXT HEX CHARECTER                       
         SRL   RF,4                                                             
         A     RF,=A(HEXTAB)       CONVERT HIGH NIBBLE TO PRINTABLE             
         MVC   0(1,R1),0(RF)                                                    
         LLC   RF,0(RE)                                                         
         NILL  GRF,X'000F'                                                      
         A     RF,=A(HEXTAB)       CONVERT LOW NIBBLE TO PRINTABLE              
         MVC   1(1,R1),0(RF)                                                    
         LA    R1,2(R1)                                                         
         LA    RE,1(RE)                                                         
         BCT   R0,ABENDPR4         BACK FOR NEXT HEX CHARACTER                  
*                                                                               
         L     RE,=A(MSGETXT)      SAVE FOR AUTONOTE                            
         MVC   0(L'MSGETXT,RE),11(R6)                                           
*                                                                               
ABENDWTO WTO   TEXT=(R6),MCSFLAG=HRDCPY                                         
*                                                                               
         NI    PSW+1,X'EF'         RETURN IN STORAGE KEY 8                      
         MVI   ABENDWHY,C'S'       WRITE DUMP THEN RETURN                       
         B     ABEND2                                                           
*&&DO                                                                           
         L     R1,SPIER1           POINT TO EPIE                                
         MVC   72(8,R1),PSW        PSW                                          
         L     RE,SPIERE           GET RETURN ADDRESS                           
         BR    RE                                                               
*&&                                                                             
PPARMS   DS    4F                                                               
PFULL    DS    F                                                                
         DROP  R2,R3,R4                                                         
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* CHECK FOR DEADLY EMBRACE WITH LOCKSPC                               *         
***********************************************************************         
ABENDCHK L     R2,=V(SSB)                                                       
         ICM   R3,15,SSBTKADR-SSBD(R2)                                          
         BZ    ABEND2                                                           
         USING TCBD,R3                                                          
         CLI   ABENDWHY,C'X'                                                    
         BE    ABEND2                                                           
         TM    TCBINDS1,TCBFUPD    UPDATIVE (NEEDS RECOVERY)                    
         BZ    ABEND2                                                           
*                                                                               
         LR    R1,R2               R1=A(SSB)                                    
         LAM   AR2,AR2,SSBALET-SSBD(R1)                                         
         LLC   R2,TCBSEN                                                        
         SLL   R2,6                INDEX TO SYSTEM ENTRY                        
         SAC   512                                                              
         USING DMSPACED,R2                                                      
         CLC   DSPLOCK,SSBLOCK-SSBD(R1)  SAME LOCKWORD AS ME?                   
         BNE   ABENDCHY            NO-SO OK TO ABEND                            
*                                                                               
         CLC   DSPADV+1(1),TCBTASK IS IT THIS TASK                              
         BE    ABENDCHY            YES-THEN OK TO ABEND                         
         OI    DSPFLAG,DSPABPEN    FLAG ABEND IS PENDING                        
         SAC   0                                                                
*                                                                               
         SR    R1,R1               ADJUST PSW                                   
         ICM   R1,7,PSW+5                                                       
         SR    R0,R0                                                            
         IC    R0,ABENDILC         BACK TO FAILING INSTRUCTION                  
         SR    R1,R0                                                            
         STCM  R1,7,PSW+5                                                       
         OI    TCBINDS1,TCBABPEN   ABEND PENDING (WAIT FOR SYSTEM FREE)         
*                                                                               
ABENDCHY SAC   0                                                                
         B     ABEND2                                                           
         EJECT                                                                  
***********************************************************************         
* ESPIE REGISTERS (PSW, GPR, AR, GR)                                  *         
***********************************************************************         
         DS    0D                                                               
         DC    C'ABENDPCS'         SPIE REGISTERS STORED HERE                   
ABENDPCS DS    CL(ABENDRNQ)                                                     
                                                                                
***********************************************************************         
* ESTAE ENTRY POINT                                                   *         
***********************************************************************         
         USING *,RF                                                             
ABENDES  SAC   0                                                                
         STM   RE,RC,12(RD)                                                     
*                                                                               
         CLI   ABENDWHY,0          TIMER POP "X" OR "I"                         
         BE    *+8                                                              
         MVI   ABENDIND,C'Y'       ESPIE MAY BE OFF SO RESET                    
*                                                                               
ABES01   MVI   ABENDWHY,C'P'       INDICATE PROGRAM CHECK                       
         MVI   ABENDSW,C'A'        INDICATE ESTAE                               
         ST    RD,ESTAERD                                                       
         ST    R1,ESTAER1                                                       
         ST    R2,TR2              SAVE R2                                      
*                                                                               
         USING SDWA,R1                                                          
         LA    R9,ABENDPCR                                                      
         USING ABENDREG,R9                                                      
         MVC   PSW,SDWAEC1         PSW AT ABEND                                 
         MVC   GPRS,SDWAGRSV       GPR R0-RF AT ABEND                           
         MVC   ABENDRSN,SDWACMPC                                                
*                                                                               
         USING SDWAPTRS,RE                                                      
         ICM   RE,15,SDWAXPAD                                                   
         BZ    ABES02                                                           
         ICM   R2,15,SDWASRVP                                                   
         BZ    ABES02                                                           
*                                                                               
         USING SDWARC1,R2                                                       
         MVC   ARGS,SDWAARER       AR0-ARF AT ABEND                             
         DROP  R2                                                               
*                                                                               
         USING SDWARC4,R2                                                       
         ICM   R2,15,SDWAXEME                                                   
         BZ    ABES02                                                           
         MVC   GRGS,SDWAG64H       GR0-GRF HIGH ORDER HALF                      
         DROP  R2,RE                                                            
*                                                                               
ABES02   L     R2,TR2              RESTORE R2                                   
         MVC   ABENDESS,PSW                                                     
         B     ABEND2                                                           
*                                                                               
         LTORG                                                                  
         DROP  R1,RF                                                            
***********************************************************************         
* ESTAE REGISTERS (PSW, GPR, AR, GR)                                  *         
***********************************************************************         
         DS    0D                                                               
         DC    C'ABENDESS'         ESTAE REGISTERS STORED HERE                  
ABENDESS DS    CL(ABENDRNQ)                                                     
*                                                                               
TR2      DS    A                   TEMP R2                                      
         EJECT                                                                  
***********************************************************************         
* SPIE AND ESTAE EXITS BOTH COME HERE FOR FURTHER PROCESSING          *         
***********************************************************************         
ABEND2   NBASE DWRKL,**ABND**,SAVE=NO,WORK=A(DWRKC),R8                          
         USING ABENDREG,R9                                                      
         USING DWRKD,RC                                                         
         MVI   ABFLAGS,0           INIT ABFLAGS                                 
         MVI   ABFLAG1,0           INIT ABFLAG1                                 
*                                                                               
         L     RA,=V(SYSFAC)                                                    
         USING SYSFACD,RA                                                       
         L     R3,VSSB                                                          
         USING SSBD,R3                                                          
         CLI   ABENDIND,C'Y'       DO WE NEED TO TURN ON?                       
         BNE   ABEND2A             NO                                           
         OI    SSBSTAT5,SSB5ESPY   TURN ESPIE BACK ON NEXT TRIP                 
         MVI   ABENDIND,C'N'       RESET                                        
*                                                                               
ABEND2A  SAM24                     SET 24-BIT MODE                              
                                                                                
***********************************************************************         
* IF ABENDWHY=C'X' PROGRAM CHECK WAS CAUSED BY TIMER EXIT PROCESSING  *         
* SEE FATASKER FOR SUICIDE CALL TO DO TIMER POP.                      *         
* TIMER POP IS AN ESPIE CATCH                                         *         
* SO RESTORE REGISTERS AND EXIT PROGRAM CHECK IMMEADIATLY             *         
***********************************************************************         
ABEND3   CLI   ABENDWHY,C'X'       TIMER EXIT ROUTINE PROCESSING                
         BNE   CHKCANC                                                          
         MVI   ABENDWHY,0          RESET TIMER EXIT ROUTINE FLAG                
*                                                                               
         L     R4,SSBTKADR         POINT TO ACTIVE TCB & RESTART TIMER          
         USING TCBD,R4                                                          
         GOTO1 VTICTOC,DUB,C'1SET',1                                            
         MVC   TCBTIME,DUB                                                      
         TIMEUSED STORADR=TCBCPUSE,LINKAGE=SYSTEM,CPU=MIC                       
*                                                                               
         MVC   ABENDPCR,TCBPSW     SET PSW AND REGS TO PC AREA                  
         MVC   ARGS,TCBIARS        SET ACCESS  REGS TO PC AREA                  
         MVC   GRGS,TCBIGRS        SET GRAND   REGS TO PC AREA                  
         XC    TCBPSW(72),TCBPSW   CLEAR TCB VALUES                             
         XC    TCBIARS,TCBIARS                                                  
         XC    TCBIGRS,TCBIGRS                                                  
         DROP  R4                                                               
*                                                                               
ABEND4   MVC   DUB,PSW             IF PSW IS AR MODE                            
         NI    DUB+2,X'C0'                                                      
         CLI   DUB+2,X'40'         SET AMODE BEFORE RETURN                      
         BNE   *+8                                                              
         SAC   512                                                              
         B     RETURNTO                                                         
         EJECT                                                                  
***********************************************************************         
* EXTERNAL VALUES FOR WHY AND HOW WE GOT HERE                         *         
***********************************************************************         
         DS    0Q                                                               
         DC    CL6'ABEND='                                                      
ABENDWHY DC    X'00'                                                            
ABENDSW  DC    X'00'               C'A'=ESTAE/C'I'=SPIE                         
*                                                                               
ABENDRSN DC    XL3'0000'                                                        
ABENDILC DC    X'00'                                                            
ABENDIND DC    C'N'                                                             
         DC    XL3'00'                                                          
*                                                                               
         DC    CL8'SPIE RD='                                                    
SPIERD   DC    F'0'                                                             
SPIERE   DC    F'0'                                                             
SPIERF   DC    F'0'                                                             
SPIER0   DC    F'0'                                                             
SPIER1   DC    F'0'                                                             
SPIER2   DC    F'0'                                                             
SPIER3   DC    F'0'                                                             
SPIER4   DC    F'0'                                                             
SPIER5   DC    F'0'                                                             
SPIER6   DC    F'0'                                                             
SPIER7   DC    F'0'                                                             
SPIER8   DC    F'0'                                                             
SPIER9   DC    F'0'                                                             
SPIERA   DC    F'0'                                                             
SPIERB   DC    F'0'                                                             
SPIERC   DC    F'0'                                                             
*                                                                               
ESTAER1  DC    F'0'                                                             
ESTAERD  DC    F'0'                                                             
*                                                                               
         DS    0L                                                               
         DC    CL16'**PC PSW/REGS***'                                           
ABENDPCR DC    XL72'00'                                                         
         DC    XL64'00'                                                         
         DC    XL64'00'                                                         
*                                                                               
         DS    0L                                                               
         DC    CL16'**IT PSW/REGS***'                                           
ABENDITR DC    XL72'00'            PSW &  REGISTERS                             
         DC    XL64'00'            ACCESS REGISTERS                             
         DC    XL64'00'            GRAND  REGISTERS                             
         EJECT                                                                  
***********************************************************************         
* FIND FAILING TASK AND SET FLAGS FOR PROCESSING REQUIRED             *         
* NORMAL MODE IS TO WRITE DUMP TO DISK AND BACKOUT ANY UPDATES        *         
***********************************************************************         
CHKCANC  CLI   ABENDWHY,C'S'       STORAGE PROTECT                              
         BNE   *+12                                                             
         OI    ABFLAG1,ABRETPRO    SET TO RETURN                                
         MVI   ABENDWHY,C'P'       SET BACK TO OLD PROG CHECK                   
*                                                                               
         L     RF,SSBOPECB         OPERATOR ECB SET?                            
         TM    0(RF),X'40'                                                      
         BZ    CHKC02              NO-CONTINUE                                  
*                                                                               
         L     RF,SSBACOMM         A(COMLIST)                                   
         USING COMLIST,RF                                                       
         L     RF,COMCIBPT         A(CIB)                                       
         USING CIBNEXT,RF                                                       
         CLI   CIBVERB,CIBMODFY    DID OPERATOR ENTER 'MODIFY'?                 
         BNE   CHKC02              NO                                           
         CLC   CIBDATLN,=X'0006'                                                
         BNE   CHKC02                                                           
         CLC   CIBDATA(3),=C'CANCEL'                                            
         BNE   CHKC02                                                           
         OI    SSBSTAT3,SSBCANCL   FLAG CANCEL REQUESTED                        
         DROP  RF                                                               
*                                                                               
CHKC02   TM    SSBSTAT3,SSBCANCL   TEST FOR OPER CANCEL                         
         BZ    FINDTSK                                                          
         TM    SSBSTAT1,SSBSEOJ    TEST FOR QUICK CANCEL                        
         BZ    CHKC06                                                           
CHKC04   ABEND 922                 OPER CANCEL                                  
*                                                                               
CHKC06   LHI   R2,921              OPER CANCEL WITH DUMP                        
         B     ENDITALL                                                         
         EJECT                                                                  
***********************************************************************         
* FIND TASK THAT FAILED                                               *         
***********************************************************************         
FINDTSK  LAM   AR0,ARF,ARZERO      RESET ALL ACCESS REGISTERS                   
         OI    ABFLAGS,ABWRTDMP+ABBCKOUT                                        
         GOTO1 VTICTOC,DUB,C'SSET' SUSPEND TIMERS                               
         MVI   SSBMTIND,SSBMTOFF                                                
*                                                                               
         L     R4,VTCB             FIND TCB FOR FAILING TASK                    
         LH    RE,0(R4)                                                         
         L     RF,2(R4)                                                         
         LA    R4,6(R4)                                                         
         USING TCBD,R4                                                          
         C     R4,SSBTKADR         SSB HAS A(FAILING TASK)                      
         BE    FTSK02                                                           
         BXLE  R4,RE,*-8                                                        
         C     R4,SSBTKADR         CHECK ONCE MORE FOR SPARE AOR TASK           
         BE    FTSK02                                                           
         LHI   R2,900              NO-TCB UNRECOVERABLE ERROR                   
         B     ENDITALL                                                         
*                                                                               
FTSK02   PROT  CLEAR               CLEAR TASK STORAGE PROTECTION FLAGS          
         NI    TCBFLAG3,255-TCBTBND                                             
         TM    TCBINDS1,TCBABPEN   ABEND PENDING                                
         BO    FTSK03                                                           
         TM    TCBFLAG3,TCBDEBUG   DEBUG MODE?                                  
         BNO   FTSK04              NO                                           
         OI    TCBFLAG3,TCBDBWAI                                                
*                                                                               
FTSK03   MVC   TCBPSW(72),ABENDPCR SAVE REGS                                    
         MVC   TCBIARS,ARGS                                                     
         MVC   TCBIGRS,GRGS                                                     
         MVI   SSBMTIND,SSBMTON    ENABLE MULTI TASKING                         
         XC    PSW(4),PSW          RESET PSW ADDRESS                            
         L     R0,=V(ADIRPT)       LEAVE THIS TASK FOR DEBUGGING                
         ST    R0,PSW+4                                                         
         ST    RB,REGF             MOVE RB TO SUPVSR REGS                       
         MVC   REGD,SAVERD         MOVE RD TO SUPVSR REGS                       
         B     RETURNTO                                                         
*                                                                               
FTSK04   ST    R4,SVTCB            SAVE TCB ENTRY ADDRESS                       
         L     R5,TCBUTL                                                        
         USING UTLD,R5                                                          
         ST    R5,SVUTL                                                         
         OC    TCBSCRPT,TCBSCRPT                                                
         BZ    *+8                                                              
         OI    ABFLAGS,ABSCRIPT                                                 
         CLI   ABENDWHY,C'P'       TEST REAL PROGRAM CHECK                      
         BE    FTSK06                                                           
         MVC   PSW(72),TCBPSW      NO-MOVE REGS TO ACTIVE AREA                  
         B     FTSK16                                                           
*                                                                               
FTSK06   XR    R2,R2               GET ADDRESS PORTION OF CURRENT PSW           
         ICM   R2,7,PSW+5                                                       
         C     R2,SSBLOADR         TRY TO AVOID A PROGRAM CHECK HERE            
         BL    FTSK16                                                           
         C     R2,SSBHIADR                                                      
         BH    FTSK16                                                           
*                                                                               
FTSK08   CLI   TSVCREQ+1,$CC       DONT DUMP IF $CC                             
         BNE   FTSK10                                                           
         L     RF,TCBTWA                                                        
         USING SRABNFFD,RF                                                      
         OI    ABNSRVH+6,X'80'     SET XMIT                                     
         OI    ABNMSGH+6,X'80'     SET XMIT                                     
         MVC   ABNSRV,=CL17'=CC-ERROR'                                          
         NI    ABFLAGS,255-(ABWRTDMP+ABBCKOUT)                                  
         B     FTSK16                                                           
         DROP  RF                                                               
*                                                                               
FTSK10   TM    SSBSYSFL,X'80'      TEST SYSTEM?                                 
         BO    FTSK12              YES                                          
         CLC   REGB,=V(TISTR)      AVOID TISTR DUMPS IN PRODUCTION              
         BNE   FTSK12                                                           
         NI    ABFLAGS,255-ABWRTDMP                                             
*                                                                               
FTSK12   XC    DUB,DUB                                                          
         CLC   0(7,R2),=C'$JTFULL' JOB TABLE FULL MSG IN TWA                    
         BNE   *+8                                                              
         MVI   DUB+3,8                                                          
         CLC   0(7,R2),=C'$PQFULL' PRTQ FULL MSG IN TWA MSG HDR                 
         BNE   *+8                                                              
         MVI   DUB+3,4                                                          
         CLC   0(7,R2),=C'$NOTZAR' NO TEMPEST MSG IN TWA MSG HDR                
         BNE   *+8                                                              
         MVI   DUB+3,9                                                          
*                                                                               
         CLI   DUB+3,0             TEST IF SPECIAL MSG REQUIRED                 
         BE    FTSK14                                                           
         MVI   DUB,X'FF'                                                        
         GOTO1 =V(GETTXT),DUB      OUTPUT MSG IN TWA MSG FIELD                  
         OI    ABFLAGS,ABUNWIND                                                 
         NI    ABFLAGS,255-ABWRTDMP                                             
         MVI   ABENDWHY,0                                                       
         B     FTSK16                                                           
*                                                                               
FTSK14   CLC   0(6,R2),=C'$ABEND'  TEST UNWIND REQUEST                          
         BNE   FTSK15                                                           
         OI    ABFLAGS,ABUNWIND                                                 
         NI    ABFLAGS,255-ABWRTDMP                                             
         MVI   ABENDWHY,0                                                       
*                                                                               
FTSK15   CLC   0(4,R2),=C'$RET'    TEST RETURN REQUEST                          
         BNE   FTSK16                                                           
         MVI   0(R2),C'X'          ONCE ONLY (NO LOOPS PLEASE)                  
         OI    ABFLAG1,ABRET                                                    
         MVI   ABENDWHY,0                                                       
*                                                                               
FTSK16   XC    TCBPSW(72),TCBPSW   CLEAR TCB                                    
         XC    TCBIRPTS,TCBIRPTS   CLEAR IRPT COUNTER                           
*                                                                               
         TM    TCBINDS1,TCBFABND   TEST TRANSACTION ABENDED                     
         BZ    *+8                                                              
         OI    ABFLAG1,ABAGAIN     SET OH NO NOT AGAIN FLAG                     
         OI    TCBINDS1,TCBFABND   SET TRANSACTION ABENDED                      
         TM    TMQSTA,TMQSPASS     IF ANY MQ PASS MSG PENDING?                  
         BZ    *+8                 NO                                           
         OI    TMQSTA,TMQSFAIL     SET UTL FOR MQ/FAIL MSG                      
*                                                                               
         MVC   SSENAME,QUESTION                                                 
         MVC   SPGMNAME,QUESTION                                                
         L     R2,VSELIST          FIND SE LIST ENTRY FOR SERVICE               
         LA    R2,6(R2)                                                         
         OC    TSVCREQ,TSVCREQ     TEST SERVICE REQUEST                         
         BNZ   FTSK18                                                           
         XR    R2,R2                                                            
         ICM   R2,7,TARSYS         TARSYS POINTS TO CONNECTED SYSTEM            
         BZ    FTSK22                                                           
         USING SELISTD,R2                                                       
*                                                                               
FTSK18   MVC   SSENAME,SENAME      SAVE SENAME                                  
         MVC   SSEOVSY,SEOVSYS     SAVE OVSYS                                   
         LA    R1,TPRG                                                          
         OC    TSVCREQ,TSVCREQ                                                  
         BZ    *+8                                                              
         LA    R1,TSVCREQ+1                                                     
         L     R2,SEPGMS                                                        
         LH    RE,0(R2)                                                         
         L     RF,2(R2)                                                         
         LA    R2,6(R2)                                                         
         USING PGMLSTD,R2                                                       
*                                                                               
FTSK20   CLC   PGMNUM,0(R1)                                                     
         BNE   *+14                                                             
         MVC   SPGMNAME,PGMNAME                                                 
         B     FTSK22                                                           
         BXLE  R2,RE,FTSK20                                                     
         DROP  R2                                                               
*                                                                               
         MVC   SPGMNAME,SPACES                                                  
         XR    RE,RE                                                            
         IC    RE,0(R1)                                                         
         SRDL  RE,4                                                             
         SRL   RF,32-4                                                          
         IC    RF,HEXTAB(RF)                                                    
         STC   RF,SPGMNAME+1                                                    
         SRDL  RE,4                                                             
         SRL   RF,32-4                                                          
         IC    RF,HEXTAB(RF)                                                    
         STC   RF,SPGMNAME                                                      
*                                                                               
FTSK22   BRAS  RE,WRTDMP           WRITE DUMP TO DISK IF NECESSARY              
*                                                                               
         TM    ABFLAG1,ABRETPRO    RETURN AFTER PROT DUMP                       
         BO    FTSK23                                                           
         TM    ABFLAG1,ABRET       RETURN $RET FOUND                            
         BZ    DMPRSTRT                                                         
*                                                                               
         SR    R1,R1               ADJUST PSW                                   
         ICM   R1,7,PSW+5                                                       
         LA    R1,4(R1)            BUMP PAST $RET                               
         STCM  R1,7,PSW+5                                                       
*                                                                               
FTSK23   MVC   LINE,SPACES         *FACNAM* APP FAILURE MESSAGE                 
         MVC   LINE(L'FACNAM),FACNAM                                            
         MVC   LINE+10(L'DMPMSG),DMPMSG                                         
         MVC   LINE+9(20),=C'INLINE DUMP TAKEN TO'                              
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,LVL0                           
         TM    ABFLAG1,ABRETPRO    RETURN AFTER PROT DUMP                       
         BZ    FTSK24                                                           
         ICM   RF,15,=V(GETEMAIL)                                               
         BZ    FTSK24                                                           
         GOTO1 ,DMCB,(R5),MSGEMAIL,(SSEOVSY,L'MSGEMAIL)                         
         BASR  RE,RF                                                            
*                                                                               
         LA    RF,L'MSGEMAIL-1                                                  
FTSK23A  LA    RE,MSGEMAIL(RF)     SEND EMAIL                                   
         CLI   0(RE),X'40'                                                      
         BH    FTSK23B                                                          
         BCT   RF,FTSK23A                                                       
         B     FTSK24              FORGET ABOUT IT                              
*                                                                               
FTSK23B  MVC   MSGEDMP#+1(2),DMPNUMB                                            
         MVI   1(RE),C':'                                                       
         MVC   2(MSGEND-MSGETXT,RE),MSGETXT                                     
         AHI   RE,MSGEND-MSGETXT+2 POINT TO END OF WHOLE                        
         LA    RF,MSG                                                           
         SR    RE,RF                                                            
         STH   RE,MSGLN                                                         
         LA    R2,MSGLN                                                         
         WTO   TEXT=(R2)                                                        
*                                                                               
FTSK24   MVI   SSBMTIND,SSBMTON    ENABLE MULTI TASKING                         
         B     RETURNTO                                                         
*                                                                               
ENDITALL ALESERV EXTRACT,STOKEN=DSPCSTOK,ALET=SSBALET                           
         ABEND (R2),DUMP,DUMPOPX=SNAPCAN                                        
*                                                                               
SNAPCAN  SNAPX DSPSTOR=DSSTART,MF=L                                             
*                                                                               
         DS    0F                                                               
DSSTART  DC    X'00000000'                                                      
DSEND    DC    X'80080000'                                                      
DSPCSTOK DC    X'0000000000000000'                                              
*                                                                               
MSGLN    DC    H'0'                                                             
MSG      DC    C'AUTONOTE*'                                                     
MSGEMAIL DS    CL40' '                                                          
MSGETXT  DC    CL38' '                                                          
         DC    C' DUMP='                                                        
MSGEDMP# DC    C'000'                                                           
MSGEND   DS    0C                                                               
         EJECT                                                                  
***********************************************************************         
* DETERMINE WHETHER RESTART POSSIBLE                                  *         
***********************************************************************         
DMPRSTRT TM    SSBSTAT5,SSB5WLM    WLM INSTALLED?                               
         BZ    DRSTRT01            NO                                           
         GOTOR ENDECLV,(R4)        TERMINATE ANY ENCLAVE                        
*                                                                               
DRSTRT01 L     R2,TCBWRKA                                                       
         LA    R0,8                                                             
DRSTRT02 CLC   0(4,R2),=C'MNTR'    FIND MONITORS REGISTERS                      
         BE    DRSTRT08                                                         
         CLM   R2,7,REGD+1         TEST END OF CHAIN                            
         BE    DRSTRT04                                                         
         CLC   9(3,R2),TCBWRKA+1   TEST FORWARD LINK VALID                      
         BL    DRSTRT06                                                         
         CLC   9(3,R2),TCBPGMA+1                                                
         BH    DRSTRT06                                                         
         L     R2,8(R2)                                                         
         BCT   R0,DRSTRT02                                                      
*                                                                               
DRSTRT04 L     R2,TCBWRKA                                                       
         CLC   0(4,R2),=C'SCRU'    TEST IF SCUNCH FIRST IN TASK                 
         BNE   DRSTRT06                                                         
         OI    ABFLAGS,ABSCRNCH    SET DIED IN SCRUNCH FLAG                     
         B     DRSTRT08                                                         
*                                                                               
DRSTRT06 B     DMPRST3             WE ARE NOT HAPPY WITH W/S                    
*                                                                               
DRSTRT08 L     R2,8(R2)            FORWARD TO MONITORS REGISTERS                
         LA    RD,72(R2)           SET CALLED PGM NMOD TO 0                     
         ST    R2,4(RD)            AND ADJUST LINK BACK                         
         ST    RD,SAVERD                                                        
         L     R2,12(R2)           RE SAVE                                      
         LA    R2,0(R2)                                                         
         LTR   RD,RD                                                            
         BNZ   SETMSG                                                           
*                                                                               
DMPRST3  XR    R2,R2               FORCE CANCEL                                 
         B     SETMSG                                                           
         EJECT                                                                  
***********************************************************************         
* MOVE SYS/PROG/TRM TO CONSOLE LINE                                   *         
***********************************************************************         
SETMSG   ST    R2,STATUS           SAVE CANCEL/RESTART STATUS                   
*                                                                               
         TM    ABFLAGS,ABUNWIND    NO CONSOLE IF UNWIND REQUEST                 
         BO    WRTMSGX                                                          
         B     SMSG02              IGNORE CONNECTED CHECK FOR NOW               
*                                                                               
         OC    TSVCREQ,TSVCREQ     SERVICE REQUEST?                             
         BNZ   SMSG02                                                           
         OC    TARSYS,TARSYS       CONNECTED?                                   
         BNZ   SMSG02                                                           
         XC    STATUS,STATUS       FORCE CANCEL                                 
         B     FMTREG                                                           
*                                                                               
SMSG02   ICM   R0,15,TSIN          FIND SYSTEM INPUT NUM                        
*NOP*    BNZ   *+14                                                             
*NOP*    XC    STATUS,STATUS       FORCE CANCEL                                 
*NOP*    B     FMTREG                                                           
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  DMPSIN,DUB                                                       
*                                                                               
         MVC   DMPTRM,TSYM         SET LUID NAME                                
         ICM   R0,3,TNUM                                                        
         BNZ   *+10                                                             
         MVC   DMPTRM,=CL8'DUMMY'                                               
*                                                                               
         MVC   DMPTRM+9(3),SPACES  SHOW DUPLICATE ON THIS LINE ALSO             
         TM    ABFLAGS,ABSAME                                                   
         BZ    *+10                                                             
         MVC   DMPTRM+9(3),=C'DUPLICATE'                                        
*                                                                               
         MVC   DMPSYS,SSENAME                                                   
         MVC   DMPPRG,SPGMNAME                                                  
*                                                                               
FMTREG   BRAS  RE,OUTREGS          FORMAT REGISTERS FOR OUTPUT                  
         B     WRTMSG                                                           
         EJECT                                                                  
***********************************************************************         
* WRITE ERROR MESSAGE TO CONSOLE                                      *         
***********************************************************************         
WRTMSG   NI    ABFLAG1,255-AB1ARS  SET MODE FOR LINES DISPLAYED                 
         MVC   DUB(1),PSW+2                                                     
         NI    DUB,X'C0'                                                        
         CLI   DUB,X'40'           IN ACCESS REGISTER MODE?                     
         BNE   *+8                 NO                                           
         OI    ABFLAG1,AB1ARS                                                   
         MVC   LINE,SPACES                                                      
*                                                                               
         MVC   MYLEVEL,LVL1        SET ERROR MESSAGE LEVEL                      
         MVC   DMPRSLT,=C'CONTINUING'                                           
*                                                                               
         TM    ABFLAGS,ABSAME      DUPLICATE DUMP?                              
         BZ    WMSG02              NO                                           
         MVC   DMPRSLT,=C'DUPLICATE '                                           
         CLC   DUPCNT,=F'1'                                                     
         BE    WMSG02                                                           
*                                                                               
         ICM   RE,15,DUPPREV                                                    
         ICM   RF,15,DUPTHIS                                                    
         SRL   RE,12               RE=P'0000HHMM' PREVIOUS DUMP                 
         SRL   RF,12               RF=P'0000HHMM' THIS DUMP                     
         CR    RE,RF                                                            
         BE    WRTMSGX             ONLY ONE DUPLICATE MSG PER MINUTE            
*                                                                               
         L     RF,DUPCNT                                                        
         CVD   RF,DUB1                                                          
         OI    DUB1+7,X'0F'                                                     
         MVI   DMPRSLT+3,C'#'      OUTPUT NUMBER OF DUPLICATES SO FAR           
         UNPK  DMPRSLT+4(6),DUB1                                                
*                                                                               
WMSG02   ICM   R2,15,STATUS        TEST FORCE CANCEL REQUESTED                  
         BZ    *+12                                                             
         C     R2,=V(MONBRPRG)     TEST DEATH IN APPLICATION                    
         B     WMSG04              WAS 'BE' BUT NOW WE DONT CARE  *NOP*         
*                                                                               
         MVC   DMPAPLC,=CL11'SYSTEM'                                            
         MVC   DMPMINI,=C'MAXI'                                                 
         MVC   DMPRSLT,=C'CANCELLING'                                           
         MVC   MYLEVEL,LVL3                                                     
*                                                                               
WMSG04   CLC   MYLEVEL,LVL3        DISPLAY FULL MSG IF SYSTEM CANCEL            
*        BE    WMSG06                                                           
**&US*&& CLI   SSBSYSID,6          DISPLAY FULL MSG IF MEL SYSTEM               
**&US*&& BE    WMSG06                                                           
         TM    SSBSYSFL,X'80'      SHORT MSG IF TEST SYSTEM                     
         BZ    WMSG06                                                           
*                                                                               
         MVC   LINE,SPACES         *FACNAM*  APP FAILURE MESSAGE                
         MVC   LINE(L'FACNAM),FACNAM                                            
         MVC   LINE+6(2),=C'01'                                                 
         MVC   LINE+10(L'DMPMSG),DMPMSG                                         
         L     RF,MYLEVEL                                                       
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
         B     WRTMSGX                                                          
*                                                                               
WMSG06   TM    ABFLAGS,ABSAME      DUPLICATE DUMP?                              
         BZ    WMSG07              NO-SEND EMAIL                                
         L     RE,DUPCNT                                                        
         XR    RF,RF                                                            
         SRDL  RE,3                                                             
         LTR   RF,RF                                                            
         BNZ   WMSG08              EVERY 8TH GETS EMAIL INFORMATION             
         OI    ABFLAGS,ABEMAIL                                                  
*                                                                               
WMSG07   MVC   LINE,SPACES                                                      
         MVC   SMSG+3(1),SSBSYSN1  *DHF##01*  DUMP START                        
         MVC   SMSG+4(2),DMPNUMB                                                
         MVC   LINE(L'SMSG),SMSG                                                
         MVC   LINE+6(2),=C'01'                                                 
         MVC   LINE+10(L'LINE1),LINE1                                           
         L     RF,MYLEVEL                                                       
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
*                                                                               
         ICM   RF,15,=V(GETEMAIL)                                               
         BZ    WMSG07A                                                          
         GOTO1 ,DMCB,(R5),EMAIL,(SSEOVSY,L'EMAIL)                               
         BASR  RE,RF                                                            
*                                                                               
WMSG07A  MVC   LINE,SPACES                                                      
         MVC   LINE(L'SMSG),SMSG   *DHF##02* EMAIL:                             
         MVC   LINE+06(02),=CL2'02'                                             
         MVC   LINE+10(06),=CL06'EMAIL:'                                        
         MVC   LINE+16(L'EMAIL),EMAIL                                           
         L     RF,MYLEVEL                                                       
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
*                                                                               
         MVC   LINE,SPACES         *DHF##03* APP FAILURE MESSAGE                
         MVC   LINE(L'SMSG),SMSG                                                
         MVC   LINE+6(2),=CL2'03'                                               
*                                                                               
WMSG08   MVC   LINE+10(L'DMPMSG),DMPMSG                                         
         L     RF,MYLEVEL                                                       
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
*                                                                               
         LA    R6,DMPMSG1                                                       
         LHI   R0,6                6 LINES FOR GPRS ONLY                        
         TM    ABFLAG1,AB1ARS                                                   
         BZ    *+8                                                              
         LHI   R0,10               10 LINES IF ARS ALSO                         
         LHI   R7,4                DUMP DETAILS START AT LINE 4                 
*                                                                               
WMSG10   TM    ABFLAGS,ABSAME      DUPLICATE DUMP?                              
         BZ    *+12                NO                                           
         TM    ABFLAGS,ABEMAIL                                                  
         BZ    WMSG12                                                           
*                                                                               
         MVC   LINE(L'SMSG),SMSG                                                
         CVD   R7,DUB              SET LINE NUMBER                              
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  LINE+6(2),DUB                                                    
*                                                                               
WMSG12   MVC   LINE+10(L'DMPMSG1),0(R6)                                         
         L     RF,LVL0             WRITE FULL INFORMATION MESSAGE               
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
         AHI   R6,L'DMPMSG1                                                     
         AHI   R7,1                                                             
         BCT   R0,WMSG10                                                        
*                                                                               
         TM    ABFLAGS,ABSAME      DUPLICATE DUMP?                              
         BZ    *+12                NO                                           
         TM    ABFLAGS,ABEMAIL                                                  
         BZ    WRTMSGX                                                          
*                                                                               
WMSG14   MVC   LINE,SPACES                                                      
         MVC   LINE(L'SMSG),SMSG   *DHF##XX* DUMP END                           
         CVD   R7,DUB              SET LAST LINE NUMBER                         
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  LINE+6(2),DUB                                                    
*                                                                               
         MVC   LINE+10(L'LINEX),LINEX                                           
         L     RF,MYLEVEL                                                       
         GOTO1 VDMOD000,DMCB,VWCTYPE,LINE,L'LINE,(RF)                           
*                                                                               
WRTMSGX  ICM   R2,15,STATUS        TEST FORCE CANCEL                            
         BZ    CANCEL                                                           
         C     R2,=V(MONBRPRG)     TEST CALLED VIA MONITOR V(MONBRPRG)          
         NOP   CANCEL              WAS 'BNE' BUT NOW WE DONT CARE *NOP*         
         B     RSTRT                                                            
*                                                                               
LINE     DC    CL60' '                                                          
LINE1    DC    CL20'DUMP START'                                                 
EMAIL    DC    CL40'             '                                              
LINEX    DC    CL20'DUMP END'                                                   
         EJECT                                                                  
***********************************************************************         
* EXIT BACK GRACEFULLY TO MVS WITH ABEND CODE 901                     *         
***********************************************************************         
CANCEL   DS    0H                  ZEIGLER STRIKES AGAIN                        
CANCEL1  L     R2,SSBAATC          DETACH ANY ATTACHED SUB-TASKS                
         LH    R6,0(R2)                                                         
         L     R7,2(R2)                                                         
         LA    R2,6(R2)                                                         
         USING ATCD,R2             R2=A(ATC)                                    
CANCEL2  TM    ATCSTAT1,ATCSATCH   TEST TASK ATTACHED                           
         BZ    CANCEL4             NO                                           
         LA    R1,ATCOSTCB                                                      
         DETACH (1),STAE=NO        YES-THEN TELL HIM TO FUCK OFF                
CANCEL4  BXLE  R2,R6,CANCEL2                                                    
*                                                                               
         ESTAE 0                   NO MORE EASTER EGGS OR BUNNIES               
*                                                                               
         CLI   SSBVTID,C' '        CLOSE VTAM IF APPROPRIATE                    
         BE    CANCEL6                                                          
         GOTO1 VLCM,DUB,VTCLOSE                                                 
*                                                                               
CANCEL6  DS    0H                                                               
         ALESERV EXTRACT,STOKEN=DSPCSTOK,ALET=SSBALET                           
         ABEND 901,DUMP,DUMPOPX=SNAPCAN                                         
*                                                                               
         L     R2,=V(ADFIRREG)     RESTORE RETURN REGISTERS                     
         LM    RB,RE,0(R2)                                                      
         BR    RE                  RETURN TO FALOAD WITH A BIT OF LUCK          
         EJECT                                                                  
***********************************************************************         
* RESTART PROCEDURE                                                   *         
***********************************************************************         
RSTRT    ICM   RF,15,=V(AUTOSRTB)                                               
         BZ    RSTRT0X                                                          
*                                                                               
RSTRT0   CLC   0(1,RF),TSVCREQ+1   MATCH TSVCREQ WITH SPECIAL AUTO S/R          
         BNE   *+12                                                             
         MVI   1(RF),C'N'                                                       
         B     RSTRT0X                                                          
         AHI   RF,16                                                            
         CLI   0(RF),0                                                          
         BNE   RSTRT0                                                           
*                                                                               
RSTRT0X  TM    TSTATC,TSTCREPU                                                  
         BZ    *+8                                                              
         BRAS  RE,FORMOSA                                                       
*                                                                               
         XC    TCBIOCNT,TCBIOCNT   RESET I/O COUNTER TO ZERO                    
         MVI   RCVMSG1,C' '                                                     
         MVC   RCVMSG1+1(L'RCVMSG1-1),RCVMSG1                                   
*                                                                               
         NI    TTYPE2,255-(TTYPE2SC+TTYPE2SF+TTYPE2CH)                          
         MVC   SVTTEST(1),TTEST    SAVE AND RESET TEST STATUS                   
         MVI   TTEST,0                                                          
*                                                                               
         CLI   TSVCREQ+1,$UPD      DO RECOVERY FOR SRUPD                        
         BE    RSTRT1                                                           
*&&UK                                                                           
         CLI   TSVCREQ+1,$GUK      DO RECOVERY FOR SRGUK                        
         BE    RSTRT1                                                           
*&&                                                                             
*&&US                                                                           
         CLI   TSVCREQ+1,$DAR      DO RECOVERY FOR SRDAR SPOT DARE              
         BE    RSTRT1                                                           
         CLI   TSVCREQ+1,$RDR      DO RECOVERY FOR SRRDR REP DARE               
         BE    RSTRT1                                                           
         CLI   TSVCREQ+1,$DXM      DO RECOVERY FOR SRDXM SPOT MKG               
         BE    RSTRT1                                                           
         CLI   TSVCREQ+1,$GAP      DO RECOVERY FOR SRGAP CANADA ORDERS          
         BE    RSTRT1                                                           
*&&                                                                             
         CLI   TSVCREQ+1,$EXT      DO RECOVERY FOR SREXT00                      
         BNE   *+12                                                             
         NI    TJOBFLAG,X'FF'-TJOBFEXT                                          
         B     RSTRT1                                                           
*                                                                               
         OC    TSVCREQ,TSVCREQ     ANY OTHER SERVICE REQUEST                    
         BNZ   OPSTEST             YES-NO RECOVERY                              
*                                                                               
RSTRT1   OC    TCBRCVC,TCBRCVC     TEST NO RECOVERY RECORDS                     
         BZ    OPSTEST             YES-NO RECOVERY                              
*                                                                               
         MVC   TSVCREQ,$ABEND      SET $ABEND IN UTL FOR FASWITCH               
         XC    DMCB(24),DMCB                                                    
*                                                                               
         MVI   DMCB+4,C'R'         LOAD RECOVERY INTO PROGRAM AREA              
         MVC   DMCB+5(3),RCVRRSTR                                               
         GOTO1 VCALLOV,DMCB,TCBPGMA                                             
*                                                                               
         OC    TSIN,TSIN           TEST SIN IS VALID                            
         BZ    CANCEL                                                           
         CLC   TSIN,TCBSIN                                                      
         BNE   CANCEL                                                           
*                                                                               
         XR    R0,R0                                                            
         ICM   R0,1,TCBSWNUM       R0=NUMBER OF POSSIBLE SYSTEMS                
         BZ    CANCEL                                                           
*                                                                               
         LA    R2,TCBSWTAB                                                      
         USING TCBSWTAB,R2         R2=A(CHKPT SYSTEM TABLE)                     
         XC    DUB,DUB                                                          
         MVC   DUB(1),TCBSWSYS                                                  
         MVC   DUB+1(3),=X'FFFFFF' SET SPECIAL PLIST FOR FACPAK                 
         GOTO1 VSWITCH,DUB         SWITCH TO CONNECTED SYSTEM                   
         CLI   4(R1),0                                                          
         BNE   CANCEL                                                           
*                                                                               
         MVC   RCVCTCB,TCBRCVC     SAVE COUNT FROM TCB                          
         XC    RCVCRCV,RCVCRCV     INIT COUNR FROM RECOVERY                     
         XC    TCBRCVF,TCBRCVF     CLEAR TCB RECOVERY INFO                      
         XC    TCBRCVL,TCBRCVL                                                  
         XC    TCBRCVC,TCBRCVC                                                  
         B     RSTRT2                                                           
         EJECT                                                                  
***********************************************************************         
* PASS CONTROL TO RECOVERY MODULE FOR EACH SYSTEM IF BACKOUT REQUIRED *         
***********************************************************************         
RSTRT2   OC    TCBSWRVF(3),TCBSWRVF TEST RECOVERY WRITTEN FOR SYSTEM            
         BZ    RSTRT6                                                           
         MVC   DUB(1),TCBSWSYS                                                  
         MVC   DUB+1(3),=X'FFFFFF' SET SPECIAL PLIST FOR FACPAK                 
         XC    DUB+4(4),DUB+4                                                   
         GOTO1 =V(FASWITCH),DUB    SWITCH TO CHKPT SYSTEM                       
         CLI   4(R1),0                                                          
         BE    *+14                                                             
         MVC   RCVMSG1,=CL40'SYSTEM SWITCH ERROR'                               
         B     RSTRT4                                                           
         CLC   TCBSWSYS,TSYS       ENSURE FASWITCH OCCURED                      
         BNE   CANCEL                                                           
*                                                                               
         MVC   DMCB(4),TCBSIN      CALL RECOVER/RESTORE                         
         MVC   DMCB(1),TCBID+6                                                  
         GOTO1 TCBPGMA,DMCB,,(TSYS,V(SYSFAC)),0,0                               
         XC    TCBRCVF,TCBRCVF                                                  
         XC    TCBRCVL,TCBRCVL                                                  
         XC    TCBSWRVF,TCBSWRVF                                                
         XC    TCBSWRVL,TCBSWRVL                                                
         LH    RF,14(R1)           GET NUMBER OF RECORDS RECOVERED              
         AH    RF,RCVCRCV                                                       
         STH   RF,RCVCRCV                                                       
         CLI   8(R1),0             TEST FOR RECOVERY FAILURE                    
         BE    RSTRT6              NO                                           
*                                                                               
RSTRT3   L     R1,8(R1)            EXTRACT RECOVERY FAILURE MESSAGE             
         MVC   RCVMSG1,0(R1)       EXTRACT ERROR MESSAGE                        
*                                                                               
RSTRT4   L     RF,LVL2             OUTPUT ERROR MESSAGE                         
         GOTO1 VDMOD000,P1,VWCTYPE,RCVMSG,RCVMSGL,(RF)                          
*                                                                               
RSTRT6   AHI   R2,TCBSWLEN         BUMP TO NEXT SYSTEM                          
         BCT   R0,RSTRT2                                                        
         DROP  R2                                                               
*                                                                               
RSTRT7   OC    RCVCTCB,RCVCTCB                                                  
         BZ    OPSTEST                                                          
         CLC   RCVCTCB,RCVCRCV     TEST NUM OF RECOVERY RECS AGREE              
         BNE   RSTRT8                                                           
         MVC   RCVMSG1,=CL40'$ABEND ???????? ????/???? RECORDS=XXXXX'           
         TM    TSTATU,TSTATDED                                                  
         BZ    *+10                                                             
         MVC   RCVMSG1(6),=CL6'DEADLY'                                          
         MVC   RCVMSG1+7(8),TLUID                                               
         MVC   RCVMSG1+16(4),SSENAME                                            
         MVC   RCVMSG1+21(4),SPGMNAME                                           
*                                                                               
RSTRT7D  XR    R0,R0                                                            
         ICM   R0,3,RCVCTCB                                                     
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  RCVMSG1+34(5),DUB                                                
         L     RF,LVL2             OUTPUT ERROR MESSAGE                         
         GOTO1 VDMOD000,P1,VWCTYPE,RCVMSG,RCVMSGL,(RF)                          
         B     OPSTEST                                                          
*                                                                               
RSTRT8   MVC   RCVMSG1,=CL40'*RCVR ERROR** ADDED=XXXXX,DELETED=XXXXX'           
         XR    R0,R0                                                            
         ICM   R0,3,RCVCTCB                                                     
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  RCVMSG1+20(5),DUB+4(4)                                           
         ICM   R0,3,RCVCRCV                                                     
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  RCVMSG1+34(5),DUB+4(4)                                           
         L     RF,LVL2             OUTPUT ERROR MESSAGE                         
         GOTO1 VDMOD000,P1,VWCTYPE,RCVMSG,RCVMSGL,(RF)                          
         EJECT                                                                  
***********************************************************************         
* TEST IF ABEND DURING SROPS PROCESSING                               *         
***********************************************************************         
OPSTEST  NI    TSTATU,255-TSTATDED RESET DEADLY FLAG                            
         CLI   TSVCREQ+1,$OPS                                                   
         BNE   ABSCRN                                                           
         TM    SSBOPECB,X'80'                                                   
         BZ    ABSCRN                                                           
         NI    SSBOPECB,255-X'C0'  RESET SROPS IN PROGRESS                      
         L     RF,SSBACOMM                                                      
         USING COMLIST,RF                                                       
         ICM   R6,15,COMCIBPT      A(CIB)                                       
         BZ    ABSCRN                                                           
         LA    R7,COMCIBPT         A(A(CIB))                                    
         QEDIT ORIGIN=(R7),BLOCK=(R6)  FREE THE CIB                             
         DROP  RF                                                               
         EJECT                                                                  
***********************************************************************         
* TEST IF NEED TO MOVE ABEND SCREEN TO OVERWRITE TASK TWA             *         
***********************************************************************         
ABSCRN   TM    ABFLAGS,ABSCRIPT    DONT TOUCH TWA IF SCRIPT DEATH               
         BZ    ABSCRN1                                                          
         MVC   TTEST,SVTTEST                                                    
         MVC   TSVCREQ,$ABEND      LET MONITOR KNOW THAT IT HAPPENED            
         B     DEQPRTQ                                                          
*                                                                               
ABSCRN1  TM    ABFLAGS,ABUNWIND    DONT TOUCH TWA IF UNWIND REQUEST             
         BZ    ABSCRN3                                                          
         MVC   TTEST,SVTTEST                                                    
         B     DEQPRTQ                                                          
*                                                                               
ABSCRN3  OC    TPRNT,TPRNT         DONT TOUCH TWA IF A PRINTER                  
         BZ    ABSCRN4                                                          
         XC    TSVCREQ,TSVCREQ                                                  
         MVC   TTEST,SVTTEST                                                    
         B     DEQPRTQ                                                          
*                                                                               
ABSCRN4  XC    DMCB(24),DMCB       LOAD VIRGIN ABEND SCREEN                     
         L     R2,TCBTWA                                                        
         USING SRABNFFD,R2                                                      
         LA    RE,64(R2)                                                        
         ST    RE,DMCB                                                          
         MVI   DMCB+4,C'R'                                                      
         MVC   DMCB+5(3),$ABEND                                                 
         GOTO1 VCALLOV,DMCB                                                     
         CLI   4(R1),X'FF'                                                      
         BE    CANCEL                                                           
*                                                                               
ABSCRN5  CLI   RCVMSG1,C'*'        WAS THERE A RECOVERY FAILURE MESSAGE         
         BNE   ABSCRN6             NO                                           
         TM    TSTAT1,TSTATDDS     YES-DISPLAY IT IF DDS TERMINAL               
         BZ    ABSCRN6                                                          
         MVC   ABNMSG(RCVMSGL),RCVMSG                                           
*                                                                               
ABSCRN6  MVC   ABNNUM(2),DMPNUMB                                                
         MVC   ABNRGS1+00(36),DMPREG0                                           
         MVC   ABNRGS1+36(35),DMPREG4                                           
         MVC   ABNRGS2+00(36),DMPREG8                                           
         MVC   ABNRGS2+36(35),DMPREGC                                           
         MVC   ABNPSW,DMPPSW                                                    
         MVC   ABNSYS,DMPSYS                                                    
         MVC   ABNPRG,DMPPRG                                                    
         MVC   ABNTRM,DMPTRM                                                    
         MVC   ABNSIN,DMPSIN                                                    
*                                                                               
ABSCRN7  OI    TSTAT2,TSTATNIT     SET TERMINAL NOT INITIALISED                 
         TM    TSTAT1,TSTATDDS                                                  
         BZ    *+8                                                              
         MVI   TOFFCODE,C'*'       RESTORE DDS OFFICE CODE                      
*&&US                                                                           
         CLI   TOVSYS,7            TALENT                                       
         BNE   ABSCRN7A                                                         
         XC    ABNWHO,ABNWHO                                                    
         MVCDD ABNWHO,SR#ABTAL,L                                                
SR#ABTAL EQU   279                                                              
*&&                                                                             
ABSCRN7A OC    TSVCREQ,TSVCREQ                                                  
         BZ    *+14                                                             
         CLC   TSVCREQ,$ABEND      DO NOT DISCONNECT IF =SRV DUMP               
         BNE   ABSCRN8                                                          
*                                                                               
         XC    TCTDATA,TCTDATA     CLEAR CONNECT DATA                           
         LLC   R1,TSESSION         SET SESSION NOT ACTIVE                       
         IC    RF,SSNABITS(R1)                                                  
         EX    RF,*+8                                                           
         B     *+8                                                              
         NI    TSSBITS,0                                                        
         MVI   TRATE,0             CLEAR TRANSACTION RATE COUNTER               
         MVC   TSVCREQ,$ABEND      INFORM MONITOR OF THE DEATH                  
         B     DEQPRTQ                                                          
*                                                                               
ABSCRN8  MVI   TRATE,0             CLEAR TRANSACTION RATE COUNTER               
         MVC   TSVCREQ,$UNWIND     SET UNWIND DEATH TO KEEP CONNECT             
         EJECT                                                                  
***********************************************************************         
* DEQUEUE AND RESOURCES HELD BY FAILING TASK                          *         
***********************************************************************         
DEQPRTQ  TM    TCBFLAG1,TCBENQPQ   DEQUEUE PRTQUE IF ENQUEUED                   
         BZ    DEQPRTQX                                                         
         LA    RF,DMCB+16          SET UP ID OF PRTQ FILE                       
         MVC   0(4,RF),=C'PRTQ'                                                 
         MVC   4(1,RF),TCBPQCHR    THIS IS THE PRTQ FILE ID CHR                 
         GOTO1 VENQDEQ,DMCB,(C'D',(RF))                                         
DEQPRTQX DS    0H                                                               
*                                                                               
DEQWRKR  TM    TCBFLAG1,TCBENQWK   DEQUEUE WKFILE IF ENQUEUED                   
         BZ    DEQWRKRX                                                         
         GOTO1 VENQDEQ,DMCB,(C'D',=C'WRKR')                                     
DEQWRKRX DS    0H                                                               
*                                                                               
DEQFACW  TM    TCBFLAG2,TCBENQFW   DEQUEUE FACWRK IF ENQUEUED                   
         BZ    DEQFACWX                                                         
         GOTO1 VENQDEQ,DMCB,(C'D',=C'FACW')                                     
DEQFACWX DS    0H                                                               
*                                                                               
DEQCTRL  TM    TCBFLAG2,TCBENQCT   DEQUEUE CTRL IF ENQUEUED                     
         BZ    DEQCTRLX                                                         
         GOTO1 =V(DMENQCTL),DMCB,(C'D',=C'CTRL')                                
DEQCTRLX DS    0H                                                               
*                                                                               
         OC    TCBISGQ,TCBISGQ     LET GO OF ENQUEUES FOR TASK                  
         BZ    DEQWRKF                                                          
         STM   R0,RF,SVDREG                                                     
         XC    DMCB(12),DMCB                                                    
         MVI   DMCB+3,C'K'         CLEAN TASK                                   
         LA    RF,=CL5'ALL'                                                     
         ST    RF,DMCB+4                                                        
         LT    RF,=V(DMISGENQ)                                                  
         BZ    DEQWRKF                                                          
         LA    R1,DMCB                                                          
         BASR  RE,RF                                                            
*                                                                               
DEQWRKF  TM    TCBFLAG2,TCBENQWF   DEQUEUE WRKF IF ENQUEUED                     
         BZ    DEQWRKFX                                                         
         LA    RF,DMCB+16          SET UP ID OF WRKF FILE                       
         MVC   0(4,RF),=C'WRKF'                                                 
         MVC   4(1,RF),TCBWFCHR    THIS IS THE WRKF FILE ID CHR                 
         GOTO1 VENQDEQ,DMCB,(C'D',(RF))                                         
DEQWRKFX DS    0H                                                               
*                                                                               
DEQWRKZ  TM    TCBFLAG5,TCBENQWZ   DEQUEUE WRKZ IF ENQUEUED                     
         BZ    DEQWRKZX                                                         
         LA    RF,DMCB+16          SET UP ID OF WRKZ FILE                       
         MVC   0(4,RF),=C'WRKZ'                                                 
         MVC   4(1,RF),TCBWZCHR    THIS IS THE WRKZ FILE ID CHR                 
         GOTO1 VENQDEQ,DMCB,(C'D',(RF))                                         
DEQWRKZX DS    0H                                                               
*                                                                               
         GOTO1 =V(SSBFIX),TCBD                                                  
*&&US                                                                           
DEQEASI  TM    TCBFLAG2,TCBENQEW   DEQUEUE EASIWK IF ENQUEUED                   
         BZ    DEQEASIX                                                         
         GOTO1 VENQDEQ,DMCB,(C'D',=C'EASI')                                     
DEQEASIX DS    0H                                                               
*&&                                                                             
*&&UK                                                                           
DEQMEDZ  TM    TCBFLAG2,TCBENQMZ   DEQUEUE MEDZ IF ENQUEUED                     
         BZ    DEQMEDZX                                                         
         GOTO1 =V(DMENQCTL),DMCB,(C'D',=C'MEDZ')                                
DEQMEDZX DS    0H                                                               
*&&                                                                             
DEQTEMP  TM    ABFLAGS,ABUNWIND    TEST UNWIND REQUEST                          
         BO    DEQTEMPX            DO NOT RELEASE TEMPEST                       
         GOTO1 VDATAMGR,DMCB,=C'DMRLSE',=C'TEMPEST',(255,0)                     
DEQTEMPX EQU   *                                                                
*                                                                               
DEQPOWQ  OC    TCBIRDR,TCBIRDR     DEQUEUE MVS IRDR IF ALLOCATED                
         BZ    DEQPOWQX                                                         
         GOTO1 =V(POWWOW),DMCB,0,=C'END',0,0                                    
DEQPOWQX EQU   *                                                                
*                                                                               
DEQBILL  TM    TSTAT1,TSTATBIL     END BILLING IF STILL ACTIVE                  
         BZ    DEQBILLX                                                         
         GOTO1 =V(BILLIT),DMCB,(C'E',0),0                                       
         NI    TSTAT1,255-TSTATBIL                                              
DEQBILLX EQU   *                                                                
*                                                                               
DEQDSPC  LA    R2,TCBDSPC          UP TO 3 RESOURCES CAN BE LOCKED              
         LA    R0,3                                                             
DEQDSPC1 OC    0(2,R2),0(R2)       DO I OWN A DATASPACE                         
         BZ    DEQDSPCX                                                         
         XC    DMCB(12),DMCB                                                    
         MVI   DMCB,X'11'          FORCE FREE IT                                
         MVC   DMCB+2(2),0(R2)                                                  
         GOTO1 =V(LOCKSPC),DMCB                                                 
         LA    R2,2(R2)            LOOK FOR ANOTHER                             
         BCT   R0,DEQDSPC1                                                      
DEQDSPCX EQU   *                                                                
*                                                                               
DELXCTL  OC    TNUM,TNUM           DELETE XCTL EL FROM TERMS WITH TWAS          
         BZ    DELXCTLX                                                         
         GOTO1 =V(GLOBBER),DMCB,=C'GETD',DMCB1+2,22,04                          
         TM    DMCB+8,X'10'                                                     
         BO    DELXCTLX            NO XFR CONTROL GLOBAL PRESENT                
         GOTO1 =V(GLOBBER),DMCB,=C'DELE'                                        
DELXCTLX EQU   *                                                                
*                                                                               
DLOCKUP  TM    TCBFLAG2,TCBLOKUP   CLEAR LOCKUP ENTRIES WE MAY HAVE             
         BZ    DLOCKUPX                                                         
*                                                                               
         GOTO1 =V(LOCKUP),DMCB,(C'C',0),0                                       
*                                                                               
DLOCKUPX EQU   *                                                                
*&&US                                                                           
         ICM   RF,15,=V(FABSAM)                                                 
         BZ    RETURN                                                           
         GOTO1 (RF),DMCB,3,0                                                    
*&&                                                                             
         B     RETURN                                                           
         EJECT                                                                  
***********************************************************************         
* RETURN CONTROL BACK TO MONITOR                                      *         
***********************************************************************         
RETURN   XC    PSW(4),PSW          RESET PSW ADDRESS                            
         LA    R0,ABXMNTR                                                       
*                                                                               
         TM    ABFLAGS,ABSCRNCH    TEST IF DIED IN SCRUNCH                      
         BZ    *+8                                                              
         LA    R0,ABXSCRU                                                       
*                                                                               
         TM    ABFLAGS,ABSCRIPT    IF SCRIPT DONT CHECK FOR MONGOTO             
         BO    RETURN01                                                         
*                                                                               
         CLC   REGE,=V(MONGORTN)   STILL POINTING BACK TO MONGOTO               
         BNE   *+14                                                             
         MVC   SAVERD,REGD         DONT CHANGE RD THEN                          
         LA    R0,ABXMNTR2                                                      
*                                                                               
         TM    ABFLAG1,ABAGAIN     ARE WE POSSIBLY DUMP LOOPING                 
         BZ    RETURN01                                                         
         CLI   ABENDSW,C'A'        DONT DO THIS FOR ESTAE EXIT                  
         BE    RETURN01                                                         
         L     R0,TCBWRKA                                                       
         ST    R0,SAVERD                                                        
         LA    R0,ABEXIT           SKIP MONITOR AND GO DIRECTLY BACK            
*                                                                               
RETURN01 ST    R0,PSW+4            ABXMNTR, ABXSCRU, ABXMNTR2, ABEXIT           
         ST    RB,REGF             MOVE RB TO SUPVSR REGS                       
         MVC   REGD,SAVERD         MOVE RD TO SUPVSR REGS                       
         MVI   SSBMTIND,SSBMTON    ENABLE MULT-TASKING WAITS                    
*                                                                               
RETURNSP CLI   ABENDSW,C'I'        TEST SPIE PROCESSING                         
         BNE   RETURNES                                                         
         TM    ABFLAGS,ABUNWIND    TEST TO UNWIND CALLING TASK                  
         BZ    RETURNTO                                                         
         MVC   TSVCREQ,$UNWIND                                                  
*&&UK                                                                           
         TM    ABFLAGS,ABSCRIPT    IF SCRIPT $ABEND AND UK RETURN               
         BZ    RETURNTO                                                         
         TM    TCBFLAG4,TCB4SCRA   RETURN IF TCB4SCRA IS SET                    
         JZ    RETURNTO                                                         
         XC    TSVCREQ,TSVCREQ     CLEAR TSVCREQ TO CONTINUE                    
*&&                                                                             
         B     RETURNTO                                                         
*                                                                               
RETURNTO MVC   HALF(1),PSW+2       IF PSW IS AR MODE                            
         NI    HALF,X'C0'                                                       
         CLI   HALF,X'40'          SET AMODE BEFORE RETURN                      
         BNE   RETURNGO                                                         
*                                                                               
         XR    R1,R1                                                            
         ICM   R1,7,PSW+5          R1=A(NEXT INSTRUCTION)                       
         LA    RF,ARGO2                                                         
         SR    R1,RF               OFFSET FROM ARGO TO INSTRUCTION              
         SRL   R1,1                IN HALFWORDS                                 
         STCM  R1,15,ARGO2+2                                                    
         LA    RF,ARSET2           SET ARSET AS RETURN POINT                    
         STCM  RF,7,PSW+5                                                       
         B     RETURNGO            GO FROM ARSET2                               
*                                                                               
ARSET2   SAC   512                 SET ARMODE                                   
ARGO2    BRCL  15,ARGO             AND BRANCH LONG INTO CODE                    
*                                                                               
RETURNGO L     R1,SPIER1           POINT TO EPIE                                
         USING EPIE,R1                                                          
         MVC   EPIEPSW,PSW         PSW                                          
         MVC   EPIEGPR,GPRS        R0-RF                                        
         MVC   EPIEAR,ARGS         ACCESS REGS 0-F                              
         L     RE,SPIERE           GET RETURN ADDRESS                           
         CLI   EPIEVERS,EPIEV2     VERSION 2 OR GREATER                         
         BLR   RE                                                               
*                                                                               
         OI    EPIEFLGS,EPIEUP64+EPIEUKEY                                       
*                                                                               
         MVC   EPIEG6400(4),GRG0   GRAND REGISTERS HI PART                      
         MVC   EPIEG6401(4),GRG1                                                
         MVC   EPIEG6402(4),GRG2                                                
         MVC   EPIEG6403(4),GRG3                                                
         MVC   EPIEG6404(4),GRG4                                                
         MVC   EPIEG6405(4),GRG5                                                
         MVC   EPIEG6406(4),GRG6                                                
         MVC   EPIEG6407(4),GRG7                                                
         MVC   EPIEG6408(4),GRG8                                                
         MVC   EPIEG6409(4),GRG9                                                
         MVC   EPIEG6410(4),GRGA                                                
         MVC   EPIEG6411(4),GRGB                                                
         MVC   EPIEG6412(4),GRGC                                                
         MVC   EPIEG6413(4),GRGD                                                
         MVC   EPIEG6414(4),GRGE                                                
         MVC   EPIEG6415(4),GRGF                                                
*                                                                               
         MVC   EPIEG6400+4(4),REG0 GRAND REGISTERS LO PART                      
         MVC   EPIEG6401+4(4),REG1                                              
         MVC   EPIEG6402+4(4),REG2                                              
         MVC   EPIEG6403+4(4),REG3                                              
         MVC   EPIEG6404+4(4),REG4                                              
         MVC   EPIEG6405+4(4),REG5                                              
         MVC   EPIEG6406+4(4),REG6                                              
         MVC   EPIEG6407+4(4),REG7                                              
         MVC   EPIEG6408+4(4),REG8                                              
         MVC   EPIEG6409+4(4),REG9                                              
         MVC   EPIEG6410+4(4),REGA                                              
         MVC   EPIEG6411+4(4),REGB                                              
         MVC   EPIEG6412+4(4),REGC                                              
         MVC   EPIEG6413+4(4),REGD                                              
         MVC   EPIEG6414+4(4),REGE                                              
         MVC   EPIEG6415+4(4),REGF                                              
*                                                                               
         BR    RE                                                               
         DROP  R1                                                               
*                                                                               
RETURNES CLI   ABENDSW,C'A'        ESTAE EXIT PROCESSING                        
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         MVC   RETURNRD,SAVERD     MOVE XMOD RD SO ADDRESSABLE                  
         L     R1,ESTAER1          R1 MUST POINT TO SDWA                        
         LA    R2,RETURNSX         SET 'RETRY' ADDRESS                          
         SETRP DUMP=NO,RC=4,RETADDR=(R2),FRESDWA=YES                            
         L     RD,ESTAERD                                                       
         LM    RE,RC,12(RD)                                                     
         BR    RE                  CONTROL SHOULD RETURN TO NEXT INST           
*                                                                               
         USING *,RF                                                             
RETURNSX L     RD,RETURNRD                                                      
         DROP  RF                                                               
*                                                                               
ABXMNTR  L     RD,4(RD)            RESTORE MONITORS REGISTERS                   
         LM    RE,RC,12(RD)                                                     
         BR    RE                                                               
*                                                                               
ABXSCRU  L     RD,4(RD)            RESTORE SCRUNCHS REGISTERS                   
         LM    RE,RC,12(RD)                                                     
         BASR  RF,R0                                                            
         USING *,RF                                                             
         L     RF,RETSCRU                                                       
         BR    RF                                                               
*                                                                               
ABXMNTR2 BR    RE                  STILL IN MONGOTO                             
         DROP  RF                                                               
*                                                                               
ABEXIT   LM    RE,RC,12(RD)        HARD EXIT BACK TO TASKER                     
         BR    RE                                                               
         DROP  R3,R5               SSB                                          
*                                                                               
RETURNRD DC    A(0)                                                             
RETSCRU  DC    V(SCRASH)           RETURN TO SCRUNCH ENTRY POINT                
         DC    CL8'MYDUMPIT'                                                    
SVDREG   DS    16F                                                              
         EJECT                                                                  
***********************************************************************         
* OUTPUT PSW AND REGISTERS ON CONSOLE LINE                            *         
***********************************************************************         
OUTREGS  NTR1                                                                   
         L     RF,TCBUTL                                                        
         USING UTLD,RF                                                          
         MVC   FULL(2),TPASSWD                                                  
         DROP  RF                                                               
*                                                                               
         GOTO1 CVHEX,PLIST,FULL,DUB       PID  ON CONSOLE LINE                  
         MVC   DMPPID,DUB                                                       
*                                                                               
         GOTO1 CVHEX,PLIST,PSW,DMPPSW     PSW  ON CONSOLE LINE                  
         GOTO1 (RF),(R1),PSW+4,DMPPSW+9   GPRS ON CONSOLE LINE                  
         GOTO1 (RF),(R1),REG0,DMPREG0                                           
         GOTO1 (RF),(R1),REG1,DMPREG0+09                                        
         GOTO1 (RF),(R1),REG2,DMPREG0+18                                        
         GOTO1 (RF),(R1),REG3,DMPREG0+27                                        
         GOTO1 (RF),(R1),REG4,DMPREG4                                           
         GOTO1 (RF),(R1),REG5,DMPREG4+09                                        
         GOTO1 (RF),(R1),REG6,DMPREG4+18                                        
         GOTO1 (RF),(R1),REG7,DMPREG4+27                                        
         GOTO1 (RF),(R1),REG8,DMPREG8                                           
         GOTO1 (RF),(R1),REG9,DMPREG8+09                                        
         GOTO1 (RF),(R1),REGA,DMPREG8+18                                        
         GOTO1 (RF),(R1),REGB,DMPREG8+27                                        
         GOTO1 (RF),(R1),REGC,DMPREGC                                           
         GOTO1 (RF),(R1),REGD,DMPREGC+09                                        
         GOTO1 (RF),(R1),REGE,DMPREGC+18                                        
         GOTO1 (RF),(R1),REGF,DMPREGC+27                                        
         GOTO1 (RF),(R1),ARG0,DMPARS0     ACRS ON CONSOLE LINE                  
         GOTO1 (RF),(R1),ARG1,DMPARS0+09                                        
         GOTO1 (RF),(R1),ARG2,DMPARS0+18                                        
         GOTO1 (RF),(R1),ARG3,DMPARS0+27                                        
         GOTO1 (RF),(R1),ARG4,DMPARS4                                           
         GOTO1 (RF),(R1),ARG5,DMPARS4+09                                        
         GOTO1 (RF),(R1),ARG6,DMPARS4+18                                        
         GOTO1 (RF),(R1),ARG7,DMPARS4+27                                        
         GOTO1 (RF),(R1),ARG8,DMPARS8                                           
         GOTO1 (RF),(R1),ARG9,DMPARS8+09                                        
         GOTO1 (RF),(R1),ARGA,DMPARS8+18                                        
         GOTO1 (RF),(R1),ARGB,DMPARS8+27                                        
         GOTO1 (RF),(R1),ARGC,DMPARSC                                           
         GOTO1 (RF),(R1),ARGD,DMPARSC+09                                        
         GOTO1 (RF),(R1),ARGE,DMPARSC+18                                        
         GOTO1 (RF),(R1),ARGF,DMPARSC+27                                        
         GOTO1 (RF),(R1),ARGF,DUB                                               
OUTREGSX XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO OUTPUT HEX CHARACTERS AS PRINTABLE                       *         
***********************************************************************         
CVHEX    NTR1                                                                   
         LM    R2,R3,0(R1)                                                      
         MVC   0(8,R3),=8C'0'                                                   
         L     R6,0(R2)                                                         
         LA    RE,7(R3)                                                         
*                                                                               
CVHEX02  LTR   R6,R6                                                            
         BZ    CVHEXX                                                           
         SRDL  R6,4                                                             
         SRL   R7,32-4                                                          
         IC    R7,HEXTAB(R7)                                                    
         STC   R7,0(RE)                                                         
         BCTR  RE,0                                                             
         B     CVHEX02                                                          
*                                                                               
CVHEXX   XIT1                                                                   
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO OUTPUT TO MO FOR REP CONTRACT LISTINGS                   *         
***********************************************************************         
         USING UTLD,R5                                                          
FORMOSA  NTR1                                                                   
         NI    TSTATC,255-TSTCREPU                                              
*                                                                               
         GOTO1 VLCM,DMCB,VTGETUTL                                               
         LTR   R5,R1                                                            
         BZ    FOMO06                                                           
F        USING UTLD,R5                                                          
         SAM31                                                                  
         MVC   F.TLUID,=CL8'NONENONE'                                           
         MVC   F.TSVCREQ,=XL2'0173' SET SPECIAL S/R                             
         MVI   F.TSTATC,TSTCMQ                                                  
*                                                                               
         TIME  TU                                                               
         ST    R0,F.TTIMETU        SET ARRIVAL TIME TO NOW                      
*                                                                               
         ICM   RF,15,F.TUTLXADR                                                 
         ICM   RE,15,XAAPASSR-XAUTLD(RF)                                        
         STCM  RE,15,F.TBUFF       SET XAPASSR AREA AS DUMMY TBUFF              
         MVC   0(4,RE),=CL4'FAIL'                                               
         MVC   4(4,RE),TSIN                                                     
*                                                                               
         L     R6,=V(SELIST)       SE1                                          
         AHI   R6,6                                                             
         USING SELISTD,R6                                                       
         OC    SEFIRST,SEFIRST     QUEUE HAS MEMEBERS ALREADY?                  
         BNZ   FOMO02              YES                                          
         STCM  R5,15,SEFIRST                                                    
         STCM  R5,15,SELAST                                                     
         LHI   RF,1                                                             
         STH   RF,SEQLEN                                                        
         B     FOMO04                                                           
*                                                                               
FOMO02   L     RF,SELAST                                                        
         STCM  R5,15,TXNEXTIN-UTLD(RF)                                          
         STCM  R5,15,SELAST                                                     
         LH    RF,SEQLEN                                                        
         AHI   RF,1                                                             
         STH   RF,SEQLEN                                                        
*                                                                               
FOMO04   XIT1                                                                   
         DROP  F,R6                                                             
*                                                                               
FOMO06   DC    H'0'                PROBABLY NEEDS SOME ERROR HANDLING           
         EJECT                                                                  
***********************************************************************         
* OTHER WORKING STORAGE                                               *         
***********************************************************************         
         DS    0F                                                               
LVL0     DC    C'LVL0'             CONTINUATION MESSAGE                         
LVL1     DC    C'LVL1'             INFORMATION MESSAGE                          
LVL2     DC    C'LVL2'             WARNING MESSAGE                              
LVL3     DC    C'LVL3'             FATAL MESSAGE                                
*                                                                               
RCVRRSTR DC    X'010100'                                                        
$ABEND   DC    X'01FFFF'                                                        
$UNWIND  DC    X'01FB'                                                          
*&&US                                                                           
FACNAM   DC    C'*FACPAK*'                                                      
SMSG     DC    CL09'*DHXXX??*'                                                  
*&&                                                                             
*&&UK                                                                           
FACNAM   DC    C'+FACPAK+'                                                      
SMSG     DC    CL09'+DHXXX??+'                                                  
*&&                                                                             
*                                                                               
$EXT     EQU   X'0A'               SREXT00 EXTRACT UPDATE                       
$UPD     EQU   X'0D'               SRUPD00 UPDATIVE SOONS                       
$GUK     EQU   X'4A'               SRGUK00 MQ                                   
$OPS     EQU   X'0F'               SROPS00 OPERATOR COMMANDS                    
$CC      EQU   X'56'                                                            
$DAR     EQU   X'61'               SRDAR00 SPOT DATE                            
$RDR     EQU   X'62'               SRRDR00 REP DARE                             
$DXM     EQU   X'63'               SRDXM00 SPOT DARE MAKEGOODS                  
$GAP     EQU   X'6F'               SRGAP00 CANADIAN ORDERS                      
*                                                                               
HEXTAB   DC    C'0123456789ABCDEF'                                              
SSACBITS DC    X'0102040810204080'                                              
SSNABITS DC    X'FEFDFBF7EFDFBF7F'                                              
*                                                                               
DMPMSG   DC    CL50'APPLICATION FAILURE - MINI DUMP#NN - CONTINUING'            
         ORG   DMPMSG                                                           
DMPAPLC  DS    CL11                                                             
         DS    CL11                                                             
DMPMINI  DS    CL4                                                              
         DS    CL6                                                              
DMPNUMB  DS    CL2                                                              
         DS    CL3                                                              
DMPRSLT  DS    CL10                                                             
         ORG                                                                    
*                                                                               
DMPMSG1  DC    CL50'+DUMP+   ???????/???????  ????????     SIN=???????'         
         ORG   DMPMSG1                                                          
         DS    CL9                                                              
DMPSYS   DS    CL7                                                              
         DS    CL1                                                              
DMPPRG   DS    CL7                                                              
         DS    CL2                                                              
DMPTRM   DS    CL8                                                              
         DS    CL9                                                              
DMPSIN   DS    CL7                                                              
         ORG                                                                    
*                                                                               
DMPMSG2  DC    CL50'         PSW  XXXXXXXX XXXXXXXX  PID=XXXX         '         
         ORG   DMPMSG2                                                          
         DS    CL14                                                             
DMPPSW   DS    CL17                                                             
         DS    CL2                                                              
         DS    CL4                                                              
DMPPID   DS    CL4                                                              
         ORG                                                                    
*                                                                               
DMPMSG3  DC    CL50'    GPR  0-3  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG3                                                          
         DS    CL14                                                             
DMPREG0  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSG4  DC    CL50'         4-7  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG4                                                          
         DS    CL14                                                             
DMPREG4  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSG5  DC    CL50'         8-B  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG5                                                          
         DS    CL14                                                             
DMPREG8  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSG6  DC    CL50'         C-F  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG6                                                          
         DS    CL14                                                             
DMPREGC  DS    CL8                                                              
         ORG                                                                    
DMPMSG7  DC    CL50'     AR  0-3  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG7                                                          
         DS    CL14                                                             
DMPARS0  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSG8  DC    CL50'         4-7  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG8                                                          
         DS    CL14                                                             
DMPARS4  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSG9  DC    CL50'         8-B  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSG9                                                          
         DS    CL14                                                             
DMPARS8  DS    CL8                                                              
         ORG                                                                    
*                                                                               
DMPMSGA  DC    CL50'         C-F  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX '         
         ORG   DMPMSGA                                                          
         DS    CL14                                                             
DMPARSC  DS    CL8                                                              
         ORG                                                                    
*                                                                               
RCVMSG   DC    C'*FACPAK* '                                                     
RCVMSG1  DC    CL40' '                                                          
RCVMSGL  EQU   *-RCVMSG                                                         
*                                                                               
WRIMSG   DC    C'*FACPAK* '                                                     
         DC    C'DISK ERROR ON DUMP WRITE'                                      
WRIMSGL  EQU   *-WRIMSG                                                         
*                                                                               
READMSG  DC    C'*FACPAK* '                                                     
         DC    C'DISK ERROR ON DUMP HEADER READ'                                
READMSGL EQU   *-READMSG                                                        
                                                                                
***********************************************************************         
* LITERALS AND CONSTANTS                                              *         
***********************************************************************         
K        EQU   1024                                                             
DMDS1SZ  EQU   56*K-1              DMGR DUMP HEADER SIZE                        
DMDS2SZ  EQU   56*K-1              DMGR SYSTEM BLOCK SIZE                       
TBDS1SZ  EQU   56*K-1              TABS BLOCK SIZE                              
XA9S1SZ  EQU   K*K-1               XA9 BLOCK SIZE                               
XAIS1SZ  EQU   80*K-1              ISG BLOCK SIZE                               
*                                                                               
ARZERO   DC    16F'0'                                                           
DMREAD   DC    CL8'DMREAD'                                                      
CTFILE   DC    CL8'CTFILE'                                                      
VDATIM   DC    V(DATTIM)                                                        
VDARPRT  DC    V(DARPT)                                                         
VSWITCH  DC    V(FASWITCH)                                                      
DMPBLKSZ DC    A(DMPBLKQ)          DUMP FILE BLOCK SIZE                         
SPACES   DC    80C' '                                                           
QUESTION DC    8C'?'                                                            
*                                                                               
DUPPREV  DS    PL4                                                              
DUPTHIS  DS    PL4                                                              
DUPCNT   DS    PL4                                                              
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* TERMINATE A SPECIFIC ENCLAVE INSTANCE                               *         
* WE MUST DISASSOCIATE THIS ENCLAVE INSTANCE FROM THE MVS TCB.        *         
* WE MUST USE THE CORRECT STORAGE STRUCTURE THAT REPRESENTS THIS      *         
* TRANSACTIONS UNIQUE COPY OF WLMPARM.                                *         
* OTHERWISE WE WILL DELETE THE WRONG ENCLAVE                          *         
***********************************************************************         
ENDECLV  NTR1  BASE=*,LABEL=*                                                   
         SAM31                     SWITCH INTO 31 BIT MODE                      
         ST    R4,TCB@             SAVE TCB ADDRESS                             
*                                                                               
         ALESERV EXTRACTH,STOKEN=ASTOKEN                                        
*                                                                               
         L     R1,TCB@                                                          
         ICM   R2,15,TCBWLMBF-TCBD(R1)                                          
         BZ    ENDECLVX             NOT CREATED                                 
         USING WLMD,R2                                                          
         ICM   R0,15,WLMTIME        GET ENCLAVE CREATE TIME                     
         BZ    ENDECLVX             NOT CREATED                                 
*                                                                               
         WTO  'FAABEND * ATTEMPTING TO DELETE ENCLAVE'                          
*                                                                               
         LARL  R1,ELCVPARM          ENCLAVE QUERY WORK AREA                     
         USING WLMED,R1                                                         
         XC    0(ECLVWNQ,R1),0(R1)                                              
         MVC   ECLVTOKEN,WLMETOKEN  COPY ENCLAVE TOKEN                          
*                                                                               
         LRL   RF,=V(FAWLMQE)       GET ADCON OF QUERY ENCLAVE                  
         GOTO1 (RF),ELCVPARM,C'WLQE'                                            
*                                                                               
*NOP*    CLC   ECLQTOKEN,ASTOKEN    IS THIS THE STOKEN?                         
*NOP*    BE    ENDECLVX             YES, CANT DELETE IT                         
*                                                                               
         CLC   ECLQTOKEN,ECLVTOKEN  ARE WE IN THE SAME ENCLAVE?                 
         BNE   ENDECLVX             NO, CANT DELETE IT                          
*                                                                               
         LRL   RF,=V(FAWLMDE)       GET ADCON OF DELETE ENCLAVE                 
         GOTO1 (RF),WLMPARM,C'WLMD'                                             
         XC    WLMTIME,WLMTIME      CLEAR STCK TIME                             
         WTO  'FAABEND * ENCLAVE REMOVED'                                       
*                                                                               
ENDECLVX XIT1                                                                   
         DROP  R1,R2                                                            
         LTORG                                                                  
***********************************************************************         
* ENCLAVE QUERY/DELETE WORK AREAS                                     *         
***********************************************************************         
         DS    0D                                                               
         DC    CL8'ELCVPARM'                                                    
ELCVPARM DS    CL(ECLVWNQ)           WLM JOIN/LEAVE/QUERY STORAGE               
         DS    0D                                                               
ASTOKEN  DS    XL8                   ADDRESS SPACE STOKEN                       
TCB@     DS    1A                                                               
         EJECT                                                                  
***********************************************************************         
* WRITE PARTITION DUMP TO DISK                                        *         
***********************************************************************         
         USING SSBD,R3                                                          
         USING UTLD,R5                                                          
WRTDMP   NTR1  BASE=*,LABEL=*                                                   
         MVC   FACNAM+4(3),SSBSYSNA                                             
         MVC   RCVMSG(8),FACNAM                                                 
         MVC   WRIMSG(8),FACNAM                                                 
         MVC   READMSG(8),FACNAM                                                
*                                                                               
         TM    ABFLAGS,ABWRTDMP    WRITE DUMP?                                  
         BZ    WRTDMPX             NO                                           
         LA    R0,DWRK             CLEAR DUMP HEADER                            
         LHI   R1,DMPHDRL                                                       
         XR    RF,RF                                                            
         MVCL  R0,RE                                                            
*                                                                               
HDR      USING DMPHDRD,DWRK                                                     
*                                                                               
         GOTO1 VTICTOC,PLIST,C'SGET'                                            
         MVC   SSBDMPTM,0(R1)      SAVE TIME OF LAST DUMP IN THIS FAC           
*                                                                               
         LA    RF,SSBD             ALSO SAVE TIME IN SSB HEADER                 
         AHI   RF,-(L'SSBDMPTM)                                                 
         MVC   0(L'SSBDMPTM,RF),SSBDMPTM                                        
*                                                                               
         LAM   AR0,ARF,ARZERO                                                   
         LAM   AR2,AR2,SSBTBLET                                                 
         XR    R2,R2                                                            
         SAC   512                                                              
         ICM   R2,15,TABSADDR-FATABSD(R2)                                       
         USING TORDUMPD,R2                                                      
         IC    R0,SSBSYSID         NOW SEE IF SSB IS OK                         
         N     R0,=X'0000000F'                                                  
         MHI   R0,TDLENQ                                                        
         AR    R2,R0               INDEX INTO OUR ENTRY                         
*                                                                               
         CLC   TDSYSNA,SSBSYSN4    DOES ENTRY LOOK GOOD?                        
         BE    WRDMP02             YES                                          
         XR    R2,R2                                                            
         ICM   R2,15,TABSADDR-FATABSD(R2)                                       
         LHI   RF,1                FIRST SLOT IS HARD CODED FOR DUMP 1          
         STCM  RF,15,TDDUMPNO                                                   
         STCM  RF,15,TDDUMPMX                                                   
         STCM  RF,15,TDDUMPFS                                                   
         XC    TDDUMPST,TDDUMPST   AND NEVER EVER SAVED                         
         XC    TDPSW,TDPSW         AND ALWAYS WRITTEN (??)                      
*                                                                               
WRDMP02  ST    R2,MYHEADER                                                      
         MVC   TDDUMPTM,SSBDMPTM   SET TIME OF THIS DUMP                        
         ICM   RE,15,TDDUMPNO      CURRENT DUMP NUMBER SET?                     
         BNZ   *+12                YES                                          
         ICM   RF,15,TDDUMPMX                                                   
         CS    RE,RF,TDDUMPNO      SET IT TO MAXIMUM                            
*                                                                               
         XR    R0,R0                                                            
         ICM   R0,7,PSW+5                                                       
         XR    RF,RF                                                            
         ICM   RF,7,REGB+1                                                      
         SR    R0,RF               R0=PSW-RB VALUE                              
         ST    R0,PSWMRB                                                        
*                                                                               
         C     RF,SSBLOADR         TEST IF RB WITHIN LOW-CORE                   
         BL    WRDMP04                                                          
         C     RF,SSBHIADR                                                      
         BH    WRDMP04                                                          
*                                                                               
         CLC   TDMODID,22(RF)      SAME MODULE AS LAST TIME                     
         BNE   WRDMP04             NO                                           
         C     R0,TDMODDSP         SAME DISPLACEMENT AS LAST TIME               
         BE    WRDMP06             YES-DUPLICATE                                
*                                                                               
WRDMP04  CLC   TDPSW,PSW           TEST SAME PSW AS LAST DUMP                   
         BNE   WRDMP10                                                          
         CLC   TDREGB,REGB         TEST SAME RB AS LAST DUMP                    
         BNE   WRDMP10                                                          
*                                                                               
WRDMP06  TM    SSBSTAT3,SSBDUPDP   TEST IF WRITE DUPLICATE DUMPS                
         BO    WRDMP10             YES                                          
         TM    TCBINDS1,TCBFABDD   OVERRIDE AND WRITE DUP DUMP FOR TASK         
         BO    WRDMP10             YES                                          
         ICM   RE,15,TDDUPCNT      INCREMENT DUPLICATE COUNT                    
         LA    RF,1(RE)                                                         
         CS    RE,RF,TDDUPCNT                                                   
         BNE   WRDMP04                                                          
*                                                                               
         MVC   TDDUPPRV,TDDUPNOW   SET TIME OF PREVIOUS DUMP                    
         MVC   TDDUPNOW,TDDUMPTM   SET TIME OF THIS DUMP                        
*                                                                               
         ICM   RE,15,TDDUPFST      SET TIME OF FIRST DUP (UNLESS SET)           
         BNZ   *+12                                                             
         ICM   RF,15,TDDUMPTM                                                   
         CS    RE,RF,TDDUPFST                                                   
*                                                                               
         MVC   DUPPREV,TDDUPPRV                                                 
         MVC   DUPTHIS,TDDUPNOW                                                 
         MVC   DUPCNT,TDDUPCNT                                                  
*                                                                               
         MVC   MYDUMP#,TDDUMPNO    GET DUPLICATE DUMP NUMBER                    
         OI    ABFLAGS,ABSAME      SET DUPLICATE DUMP                           
         B     WRDMP18                                                          
         EJECT                                                                  
***********************************************************************         
* DUMP IS NOT A DUPLICATE (OR WE ARE WRITING DUPES)                   *         
* GET NEXT ELIGIBLE DUMP NUMBER BASED ON SAVED FLAGS                  *         
***********************************************************************         
WRDMP10  LA    RF,1                                                             
         SLL   RF,31               DUMP SAVED FLAG TEST MASK                    
         SRL   RF,1                X'80' BIT USED FOR SUPPRESS WRITE            
*                                                                               
         ICM   R1,15,TDDUMPNO                                                   
         LR    RE,R1                                                            
         S     RE,TDDUMPFS                                                      
         SRL   RF,0(RE)            INITIALISE TEST MASK                         
*                                                                               
WRDMP12  LA    R1,1(R1)                                                         
         SRL   RF,1                SHIFT TEST MASK                              
         C     R1,TDDUMPMX         REACHED LAST FOR THIS FACPAK?                
         BNH   WRDMP14             NO                                           
         ICM   R1,15,TDDUMPFS      RESET DUMP NUMBER TO FIRST                   
         LA    RF,1                RE-INITIALISE TEST MASK                      
         SLL   RF,31                                                            
         SRL   RF,1                                                             
*                                                                               
WRDMP14  C     R1,TDDUMPNO         IF BEEN ALL WAY AROUND THEN                  
         BNE   *+12                USE CURRENT NUM TO WRITE DUMP OFF            
         ST    R1,MYDUMP#                                                       
         B     WRDMP18             USE CURRENT NUM WRITE DUMP OFF               
         ICM   R0,15,TDDUMPST                                                   
         NR    R0,RF               DUMP SAVED?                                  
         BNZ   WRDMP12             YES-TRY NEXT NUMBER                          
*                                                                               
WRDMP16  ICM   RE,15,TDDUMPNO                                                   
         CS    RE,R1,TDDUMPNO      SET NEW DUMP NUMBER IN DATASPACE             
         BNE   WRDMP10                                                          
         ST    R1,MYDUMP#                                                       
*                                                                               
WRDMP18  SAC   0                                                                
         LAM   AR0,ARF,ARZERO                                                   
         L     R1,MYDUMP#                                                       
         STC   R1,SSBDMPNO         SET NEW DUMP NUMBER IN SSB                   
         STC   R1,HDR.DMPNUM       SET NEW DUMP NUMBER IN DUMP HEADER           
         GOTO1 VDATIM,PLIST,(X'01',HDR.DMPTIME)                                 
*                                                                               
         MVC   HDR.DMPCYL,SSBDMPCY                                              
         MVC   HDR.DMPPAGE,SSBDMP2K                                             
         L     R1,SSBLOADR         SET CORE ADDR AND NAME                       
         ST    R1,HDR.DMPDUMP      TRUE ADDRESS                                 
         SRL   R1,11                                                            
         SLL   R1,11                                                            
         ST    R1,HDR.DMPPART      PARTITION START ADDRESS (MOD 2K)             
*                                                                               
         L     RF,=V(ABENDWHY)                                                  
         MVC   HDR.DMPPART(1),0(RF)                                             
         MVI   0(RF),0                                                          
         MVC   HDR.DMPDESC,=CL8'+FACXXX+'                                       
         MVC   HDR.DMPDESC+4(L'SSBSYSNA),SSBSYSNA                               
         MVC   HDR.DMPFAC4,SSBSYSN4                                             
         MVI   HDR.DMPAOR,C'N'                                                  
         TM    SSBSTAT4,SSBSAOR                                                 
         BZ    *+8                                                              
         MVI   HDR.DMPAOR,C'Y'                                                  
*                                                                               
         MVC   HDR.DMPPSWD,PSW     SET PSW & REGISTERS                          
         MVC   HDR.DMPREGS(28),REG9                                             
         MVC   HDR.DMPREGS+28(36),REG0                                          
*                                                                               
         L     RF,=V(ABENDRSN)     SET REASON FOR DUMP                          
         MVC   HDR.DMPSRSN,0(RF)                                                
         XR    RF,RF                                                            
         ICM   RF,7,PSW+5                                                       
         AHI   RF,-6                                                            
         BM    WRDMP20                                                          
         C     RF,SSBLOADR         TEST IF PSW-6 WITHIN LOW CORE                
         BL    WRDMP20                                                          
         C     RF,SSBHIADR                                                      
         BH    WRDMP20                                                          
*                                                                               
         MVC   HDR.DMPHPW6,0(RF)   COPY CODE FROM PSW-6                         
*                                                                               
WRDMP20  XR    RF,RF                                                            
         ICM   RF,7,REGB+1                                                      
         C     RF,SSBLOADR         TEST IF RB WITHIN LOW-CORE                   
         BL    WRDMP22                                                          
         C     RF,SSBHIADR                                                      
         BH    WRDMP22                                                          
         MVC   HDR.DMPHRTN,22(RF)  SAVE MODULE ID                               
*                                                                               
WRDMP22  MVC   HDR.DMPHTME,SSBDMPTM                                             
         MVC   HDR.DMPHDTE,SSBDATEB                                             
         MVC   HDR.DMPUTL,SVUTL    SET A(UTL)                                   
         MVC   HDR.DMPHTRM,TSYM    SET LUID NAME                                
         MVC   HDR.DMPHSYS,SSENAME                                              
         MVC   HDR.DMPHPRG,SPGMNAME                                             
*                                                                               
         ST    RA,HDR.DMPFACS      SET A(SYSFACS)                               
         MVC   HDR.DMPTCBE,SVTCB   SET A(TCB)                                   
         LA    RF,HDR.DMPCKPT      BUILD HEADER FOR CHECKPOINT AREA             
         MVC   0(24,RF),DWRK                                                    
         L     R0,VCHKPT1                                                       
         ST    R0,12(RF)                                                        
         SRL   R0,11                                                            
         SLL   R0,11                                                            
         L     R1,VCHKPT2X                                                      
         SRL   R1,11                                                            
         LA    R1,1(R1)                                                         
         SLL   R1,11                                                            
         SR    R1,R0                                                            
         SRL   R1,11                                                            
         STH   R1,2(RF)                                                         
         MVC   16(8,RF),=CL8'*CHKPNT*'                                          
*                                                                               
         LA    RF,HDR.DMPFIL1      BUILD HEADER FOR FILE DTF AREA               
         MVC   0(24,RF),DWRK                                                    
         L     R0,TCBDTFS                                                       
         ST    R0,12(RF)                                                        
         SRL   R0,11                                                            
         SLL   R0,11                                                            
         L     R1,TCBDTFX                                                       
         SRL   R1,11                                                            
         LA    R1,1(R1)                                                         
         SLL   R1,11                                                            
         SR    R1,R0                                                            
         SRL   R1,11                                                            
         STH   R1,2(RF)                                                         
         MVC   16(8,RF),=CL8'*DTFIOA*'                                          
*                                                                               
         LA    RF,HDR.DMPPRGM      BUILD HEADER FOR WORK/PGM AREA               
         MVC   0(24,RF),DWRK                                                    
         L     R0,TCBWRKA                                                       
         ST    R0,12(RF)                                                        
         SRL   R0,11                                                            
         SLL   R0,11                                                            
         L     R1,TCBPGMX                                                       
         SRL   R1,11                                                            
         LA    R1,1(R1)                                                         
         SLL   R1,11                                                            
         SR    R1,R0                                                            
         SRL   R1,11                                                            
         STH   R1,2(RF)                                                         
         MVC   16(8,RF),=CL8'*WRKPGM*'                                          
*                                                                               
         LA    RF,HDR.DMPFIL2      BUILD HEADER DATA FOR FILE BUFFERS           
         MVC   0(24,RF),DWRK                                                    
         L     R0,TCBFILES                                                      
         ST    R0,12(RF)                                                        
         SRL   R0,11                                                            
         SLL   R0,11                                                            
         L     R1,TCBFILEX                                                      
         SRL   R1,11                                                            
         LA    R1,1(R1)                                                         
         SLL   R1,11                                                            
         SR    R1,R0                                                            
         SRL   R1,11                                                            
         STH   R1,2(RF)                                                         
         MVC   16(8,RF),=CL8'*BUFIOA*'                                          
*                                                                               
         MVC   HDR.DMPXA9LO,TCBAXA9                                             
         L     RE,TCBAXA9                                                       
         A     RE,=A(XA9S1SZ)      SET XA9 INFORMATION                          
         ST    RE,HDR.DMPXA9HI                                                  
         L     RE,=A(XA9S1SZ)                                                   
         SRDL  RE,32                                                            
         LA    R0,2*K              DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,HDR.DMPXA92K                                                  
         ST    RF,XA92K                                                         
*                                                                               
         MVC   HDR.DMPISGLO,SSBXAISG                                            
         L     RE,SSBXAISG                                                      
         A     RE,=A(XAIS1SZ)      SET ISG INFORMATION                          
         ST    RE,HDR.DMPISGHI                                                  
         L     RE,=A(XAIS1SZ)                                                   
         SRDL  RE,32                                                            
         LA    R0,2*K              DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,HDR.DMPISG2K                                                  
         ST    RF,XAI2K                                                         
*                                                                               
         XC    HDR.DMPTB1LO,HDR.DMPTB1LO                                        
         L     RE,=A(TBDS1SZ)      SET TABS INFORMATION                         
         ST    RE,HDR.DMPTB1HI                                                  
         SRDL  RE,32                                                            
         LA    R0,2*K              DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,HDR.DMPTB12K                                                  
*                                                                               
         MVC   HDR.DMPXALO(18),SSBXALO SET 31-BIT AREAS                         
         MVC   HDR.DMPXALO,TCBFILES                                             
*                                                                               
         L     R1,VTCB                                                          
         LH    RE,0(R1)                                                         
         AHI   R1,6                                                             
         ICM   R0,15,TCBFILES-TCBD(R1)                                          
         AR    R1,RE                                                            
         ICM   RF,15,TCBFILES-TCBD(R1)                                          
         SR    RF,R0               RF=LENGTH OF XA TASK AREA                    
         LR    R0,RF                                                            
         SRL   R0,11               IN 2K BLOCKS                                 
         STH   R0,HDR.DMPXA2K                                                   
         ST    R0,XADMP2K                                                       
*                                                                               
         A     RF,TCBFILES                                                      
         ST    RF,HDR.DMPXAHI                                                   
*                                                                               
         MVC   XACORE,HDR.DMPXALO                                               
*                                                                               
         XC    HDR.DMPDM1LO,HDR.DMPDM1LO                                        
         L     RE,=A(DMDS1SZ)      SIZE OF DUMP HEADER                          
         ST    RE,HDR.DMPDM1HI                                                  
         SRDL  RE,32                                                            
         LA    R0,2*K              DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,HDR.DMPDM12K                                                  
*                                                                               
         XR    R2,R2               HEADERS START AT ADDRESS 0                   
         ICM   R2,1,TCBSEN                                                      
         BZ    WRDMP24                                                          
         SLL   R2,6                INDEX INTO DMGR DATASPACE                    
         LAM   AR2,AR2,SSBALET                                                  
         SAC   512                                                              
         USING DMSPACED,R2                                                      
*                                                                               
         ICM   R2,15,DSPTFRST                                                   
         SLL   R2,2                                                             
         SRL   R2,2                TURN OFF X'40' BIT                           
         STCM  R2,15,HDR.DMPDM2LO                                               
         A     R2,=A(DMDS2SZ)                                                   
         ST    R2,HDR.DMPDM2HI                                                  
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
*                                                                               
         L     RE,=A(DMDS2SZ)                                                   
         SRDL  RE,32                                                            
         LA    R0,2*K              DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,HDR.DMPDM22K                                                  
*                                                                               
WRDMP24  LLC   R1,SSBDMPNO                                                      
         CVD   R1,DUB1                                                          
         OI    DUB1+L'DUB1-1,X'0F'                                              
         UNPK  DMPNUMB,DUB1                                                     
*                                                                               
         TM    SSBDMPSV,X'80'      DUMP SUPRESSION FLAG?                        
         BO    WRTDMPX             YES                                          
*                                                                               
         TM    ABFLAGS,ABSAME      ONLY HEADER IF SAME AS LAST ONE              
         BZ    WRDMP26                                                          
         BAS   RE,WRTDUP           WRITE DUPLICATE DUMP HEADER INFO             
         B     WRTDMPX                                                          
*                                                                               
WRDMP26  LAM   AR2,AR2,SSBTBLET                                                 
         L     R2,MYHEADER                                                      
         USING TORDUMPD,R2                                                      
         SAC   512                                                              
         MVC   TDPSW,PSW           SAVE PSW AND RB                              
         MVC   TDREGB,REGB                                                      
         MVC   TDMODDSP,PSWMRB                                                  
         MVC   TDMODID,HDR.DMPHRTN SAVE MODULE ID                               
         LHI   RF,1                SET NUMBER OF DUPLICATES TO 1                
         STCM  RF,15,TDDUPCNT                                                   
         XC    TDDUPFST,TDDUPFST                                                
         XC    TDDUPPRV,TDDUPPRV                                                
         XC    TDDUPNOW,TDDUPNOW                                                
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         DROP  R2                                                               
*                                                                               
         BRAS  RE,WRITE            WRITE DUMP TO DISK                           
WRTDMPX  XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO WRITE DUPLICATE DUMP HEADER TO DISK                   *         
***********************************************************************         
WRTDUP   NTR1                                                                   
         L     R7,VDMPFILE         R7=A(DUMP FILE)                              
         USING DTFPHD,R7                                                        
*                                                                               
         XC    PARMS,PARMS         SET DADDS TO GET FILE ATTRIBUTES             
         MVC   P1,VDARPRT                                                       
         MVC   P3,DMPBLKSZ         DUMP FILE BLOCK SIZE                         
         ST    R7,P4                                                            
         GOTO1 VDADDS,PARMS                                                     
*                                                                               
         MVC   RECTRK,P3+2         RECTRK=RECORDS PER TRACK                     
         L     R1,P2                                                            
         LH    RE,2(R1)            RE=TRKS PER CYLINDER                         
         STH   RE,TRKCYL                                                        
*                                                                               
         L     R0,MYDUMP#                                                       
         BCTR  R0,0                                                             
         SRDL  R0,32               R1=DUP DUMP NUMBER (ZERO BASED)              
         LLC   RF,SSBDMPCY         R0=DUMP SIZE IN CYLINDERS                    
         MR    R0,RF                                                            
         MR    R0,RE                                                            
*                                                                               
         LA    R1,1(R1)            R1=START RELATIVE TRACK                      
         SLL   R1,16                                                            
         ST    R1,DISKADDR         SET DISK ADDR OF START OF DUMP               
         MVI   DISKADDR+2,1                                                     
*                                                                               
         MVC   P1,VRDID                                                         
         LA    RE,DWRKDUP          A(READ IN BUFFER)                            
         ST    RE,P2                                                            
         LA    RE,DMPHDRL          SIZE OF HEADER REC                           
         ST    RE,P3                                                            
         ST    R7,P4                                                            
         LA    RE,DISKADDR                                                      
         ST    RE,P5                                                            
         GOTO1 VDADDS,PARMS                                                     
         OC    P3(2),P3            TEST FOR READ ERROR                          
         BZ    WDUP02                                                           
*                                                                               
         L     RF,LVL1                                                          
         GOTO1 VDMOD000,DMCB,VWCTYPE,READMSG,READMSGL,(RF)                      
         B     WRTDUPX                                                          
*                                                                               
WDUP02   LAM   AR2,AR2,SSBTBLET                                                 
         L     R2,MYHEADER                                                      
         SAC   512                                                              
         USING TORDUMPD,R2                                                      
DUP      USING DMPHDRD,DWRKDUP                                                  
         MVC   DUP.DMPDUPS,TDDUPCNT                                             
         SAC   0                   SET AR MODE OFF                              
         LAM   AR2,AR2,ARZERO                                                   
         DROP  DUP,R2                                                           
*                                                                               
         MVC   P1,VWTID            WRITE BACK HEADER REC OF FIRST DUP           
         LA    RE,DWRKDUP                                                       
         ST    RE,P2                                                            
         LA    RE,DMPHDRL          SIZE OF HEADER REC                           
         ST    RE,P3                                                            
         LA    RE,DISKADDR                                                      
         ST    RE,P5                                                            
         GOTO1 VDADDS,P1                                                        
         OC    P3(2),P3            TEST WRITE ERROR                             
         BZ    WRTDUPX                                                          
*                                                                               
         L     RF,LVL1                                                          
         GOTO1 VDMOD000,DMCB,VWCTYPE,WRIMSG,WRIMSGL,(RF)                        
*                                                                               
WRTDUPX  XIT1                                                                   
         DROP  R7                                                               
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO WRITE FACPAK TO DISK                                  *         
***********************************************************************         
WRITE    NTR1                                                                   
         L     R7,VDMPFILE                                                      
         USING DTFPHD,R7                                                        
         XC    P1(24),P1           SET DADDS TO GET FILE ATTRIBUTES             
         MVC   P1,VDARPRT                                                       
         MVC   P3,DMPBLKSZ         DUMP FILE BLOCK SIZE                         
         ST    R7,P4               P4=A(DUMP FILE)                              
         GOTO1 VDADDS,P1                                                        
         MVC   RECTRK,P3+2         RECTRK=RECORDS PER TRACK                     
         L     R1,P2                                                            
         LH    RE,2(R1)            RE=TRKS PER CYLINDER                         
         STH   RE,TRKCYL                                                        
*                                                                               
         L     R1,MYDUMP#                                                       
         BCTR  R1,0                R1=DUMP NUM -1                               
         LLC   RF,SSBDMPCY         R0=DUMP SIZE IN CYLINDERS                    
         MR    R0,RF                                                            
         MR    R0,RE                                                            
*                                                                               
         LA    R1,1(R1)            R1=START RELATIVE TRACK                      
         SLL   R1,16                                                            
         ST    R1,DNEXT            SET DISK ADDR OF START OF DUMP               
*                                                                               
         XR    RF,RF                                                            
         ICM   RF,3,SSBDMP2K       SAVE NUMBER OF 2K BLOCKS IN DUMP             
         ST    RF,DMP2K                                                         
         MVC   COREADDR,DWRK+8     SAVE CORE ADDRESS OF START OF DUMP           
         MVI   COREADDR,0                                                       
*                                                                               
         MVC   P1,VWTCKD           WRITE HEADER RECORD TO FIRST TRACK           
         LA    RE,DWRK                                                          
         ST    RE,P2                                                            
         LA    RE,DMPHDRL          SIZE OF HEADER REC                           
         ST    RE,P3                                                            
         LA    RE,DISKADDR                                                      
         ST    RE,P5                                                            
         GOTO1 VDADDS,P1                                                        
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT            POSITION TO NEXT TRACK                       
*                                                                               
         XC    DWRK,DWRK           INITIALISE FOR TRACK WRITES                  
         LA    RE,DWRK                                                          
         ST    RE,P2               P2=A(AREA TO BUILD CCW'S)                    
         LA    RE,160(RE)                                                       
         ST    RE,ARECLIST                                                      
         ST    RE,P6               P6=A(RECORD LIST)                            
         MVI   P6,X'FF'                                                         
         MVC   P1,=V(WTTRK)                                                     
*                                                                               
WRITE02  L     RE,ARECLIST         RE=A(RECLIST)                                
         SR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRITE04  L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRITE06             YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRITE04             NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRITE06  MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         GOTO1 VDADDS,P1                                                        
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRITE02                                                          
         B     WRTXA                                                            
         EJECT                                                                  
***********************************************************************         
* WRITE 31-BIT STORAGE TO DISK                                        *         
* WE WRITE ONLY THAT STORAGE IN TASK THAT ABENDED                     *         
* RANGE IS FROM TCBFILES THROUGH TCBFILES IN NEXT TASK                *         
***********************************************************************         
WRTXA    SAM31                     GET INTO 31-BIT MODE                         
         MVC   DMP2K,XADMP2K                                                    
         MVC   COREADDR,XACORE                                                  
*                                                                               
         SR    RE,RE                                                            
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT            POSITION TO NEXT TRACK                       
*                                                                               
WRXA02   L     RE,ARECLIST         RE=A(RECLIST)                                
         SR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRXA04   L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
*                                                                               
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRXA06              YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRXA04              NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRXA06   MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         OILH  GRF,X'8000'         INDICATE 31 BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRXA02                                                           
*                                                                               
WRXAX    B     WRTXA9                                                           
         EJECT                                                                  
***********************************************************************         
* WRITE KEY9 31-BIT STORAGE TO DISK                                   *         
* WE WRITE ONLY THAT STORAGE IN TASK THAT ABENDED                     *         
***********************************************************************         
WRTXA9   SAM31                     GET INTO 31-BIT MODE                         
*                                                                               
         MVC   DMP2K,XA92K                                                      
         MVC   COREADDR,TCBAXA9                                                 
         OC    COREADDR,COREADDR                                                
         BZ    WRXA9X                                                           
*                                                                               
         SR    RE,RE               BUMP TO NEXT TRACK                           
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT                                                         
         ST    RE,XA9DSK                                                        
*                                                                               
WRXA902  L     RE,ARECLIST         RE=A(RECLIST)                                
         SR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRXA904  L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
*                                                                               
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRXA906             YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRXA904             NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRXA906  MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         OILH  GRF,X'8000'         INDICATE 31-BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRXA902                                                          
*                                                                               
WRXA9X   B     WRTISG                                                           
         EJECT                                                                  
***********************************************************************         
* WRITE ISGENQ 31-BIT STORAGE TO DISK                                 *         
***********************************************************************         
WRTISG   SAM31                     GET INTO 31-BIT MODE                         
*                                                                               
         MVC   DMP2K,XAI2K                                                      
         MVC   COREADDR,SSBXAISG                                                
         OC    COREADDR,COREADDR                                                
         BZ    WRISGX                                                           
*                                                                               
         SR    RE,RE               BUMP TO NEXT TRACK                           
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT                                                         
         ST    RE,XAIDSK                                                        
*                                                                               
WRISG02  L     RE,ARECLIST         RE=A(RECLIST)                                
         SR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRISG04  L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
*                                                                               
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRISG06             YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRISG04             NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRISG06  MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         O     RF,=X'80000000'     INDICATE 31-BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRISG02                                                          
*                                                                               
WRISGX   B     WRDSP                                                            
         EJECT                                                                  
***********************************************************************         
* WRITE DMGR DATASPACE TO DISK                                        *         
* TWO PORTIONS OF DATASPACE ARE WRITTEN OFF                           *         
* 1: THE BLOCK OF DUMP HEADERS (SIZE DMDS1SZ)                         *         
* 2: THE CONNECTED SYSTEM BLOCK (SIZE DMDS2SZ)                        *         
* BECAUSE YOU CANNOT WRITE FROM THE DATASPACE, THE CORE IS COPIED     *         
* INTO THE TSAR BLOCK FOR THIS TASK                                   *         
***********************************************************************         
WRDSP    MVC   COREADDR,TCBTSAR    SET ADDRESS OF FIRST MOVE BLOCK              
*                                                                               
         L     R0,COREADDR         MOVE TO XA ADDRESS                           
         L     R1,=A(DMDS1SZ)                                                   
         LAM   AR0,ARF,ARZERO                                                   
         LAM   ARE,ARE,SSBALET                                                  
         XR    RE,RE               HEADERS START AT ADDRESS 0                   
         LR    RF,R1                                                            
         SAC   512                                                              
         MVCL  R0,RE               COPY SYSTEM HEADERS                          
         SAC   0                                                                
         LAM   ARE,ARE,ARZERO                                                   
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT            POSITION TO NEXT TRACK                       
         ST    RE,DM1DSK                                                        
*                                                                               
         L     RE,=A(DMDS1SZ)      SIZE OF DUMP HEADER                          
         SRDL  RE,32                                                            
         LA    R0,2048             DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,DMP2K                                                         
*                                                                               
WRDS02   L     RE,ARECLIST         RE=A(RECLIST)                                
         SR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRDS04   L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRDS06              YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRDS04              NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRDS06   MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         OILH  GRF,X'8000'         INDICATE 31-BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF FIRST DATA AREA?                      
         BNZ   WRDS02                                                           
*                                                                               
WRDS08   MVC   COREADDR,TCBTSAR    SET ADDRESS OF FIRST MOVE BLOCK              
         L     R0,COREADDR                                                      
         L     R1,=A(DMDS2SZ)                                                   
         L     R1,=A(27*K)         FORCE DOWN TO 27K                            
         LR    RF,R1                                                            
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,1,TCBSEN         GET CONNECTED SYSTEM                         
         BNZ   *+8                                                              
         LHI   RE,1                OR SERVICE SYSTEM                            
         SLL   RE,6                                                             
*                                                                               
         LAM   AR0,ARF,ARZERO                                                   
         LAM   ARE,ARE,SSBALET                                                  
         SAC   512                                                              
         USING DMSPACED,RE                                                      
         ICM   RE,15,DSPTFRST-DMSPACED(RE)                                      
         NILH  GRE,X'00FF'                                                      
         MVCL  R0,RE                                                            
         SAC   0                                                                
         LAM   ARE,ARE,ARZERO                                                   
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT            POSITION TO NEXT TRACK                       
         ST    RE,DM2DSK                                                        
*                                                                               
         L     RE,=A(DMDS2SZ)      SIZE OF DUMP HEADER                          
         SRDL  RE,32                                                            
         LA    R0,2048             DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,DMP2K                                                         
*                                                                               
WRDS12   L     RE,ARECLIST         RE=A(RECLIST)                                
         XR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRDS14   L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRDS16              YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRDS14              NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRDS16   MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         OILH  GRF,X'8000'         INDICATE 31-BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF FIRST DATA AREA?                      
         BNZ   WRDS12                                                           
         B     WRTAP                                                            
         EJECT                                                                  
***********************************************************************         
* WRITE TABS DATASPACE INFORMATION TO DISK                            *         
* BECAUSE YOU CANNOT WRITE FROM THE DATASPACE, THE CORE IS COPIED     *         
***********************************************************************         
WRTAP    MVC   COREADDR,TCBTSAR    SET ADDRESS OF FIRST MOVE BLOCK              
*                                                                               
         L     R0,COREADDR         MOVE TO XA ADDRESS                           
         L     R1,=A(TBDS1SZ)                                                   
         LAM   AR0,ARF,ARZERO                                                   
         LAM   ARE,ARE,SSBTBLET                                                 
         XR    RE,RE                                                            
         LR    RF,R1                                                            
         SAC   512                                                              
         MVCL  R0,RE               COPY TABS DSPACE                             
         SAC   0                                                                
         LAM   ARE,ARE,ARZERO                                                   
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,3,DNEXT                                                       
         LA    RE,1(RE)                                                         
         SLL   RE,16                                                            
         ST    RE,DNEXT            POSITION TO NEXT TRACK                       
         ST    RE,TB1DSK                                                        
*                                                                               
         L     RE,=A(TBDS1SZ)      SIZE OF TABS TO WRITE                        
         SRDL  RE,32                                                            
         LA    R0,2048             DIVIDE INTO 2K BLOCKS                        
         DR    RE,R0                                                            
         LTR   RE,RE               FITS EXACTLY?                                
         BZ    *+8                                                              
         LA    RF,1(RF)            NO-ROUND UP                                  
         ST    RF,DMP2K                                                         
*                                                                               
WRTA02   L     RE,ARECLIST         RE=A(RECLIST)                                
         XR    R1,R1               R1=NUM OF ENTRYS IN RECLIST                  
*                                                                               
WRTA04   L     R0,DMP2K            R0=NUM OF 2K BLOCKS LEFT                     
         LA    RF,4                                                             
         SR    R0,RF               WE WRITE 8K BLOCKS NOW                       
         BP    *+10                                                             
         L     RF,DMP2K                                                         
         XR    R0,R0                                                            
         ST    R0,DMP2K            DECR 2K BLOCKS                               
*                                                                               
         XC    0(8,RE),0(RE)                                                    
         SLA   RF,11               RF=LEN IN BTYES (2K*RF)                      
         STH   RF,6(RE)            SET LEN                                      
         L     R0,COREADDR                                                      
         ST    R0,8(RE)            SET ADR                                      
         AR    R0,RF                                                            
         ST    R0,COREADDR         BUMP CORE ADDRESS                            
*                                                                               
         LA    RE,12(RE)                                                        
         LA    R1,1(R1)                                                         
         CH    R1,RECTRK           END OF TRACK?                                
         BE    WRTA06              YES-WRITE TRACK                              
         OC    DMP2K,DMP2K         END OF DATA?                                 
         BNZ   WRTA04              NO-NEXT BLOCK ON THIS TRACK                  
*                                                                               
WRTA06   MHI   R1,12               WRITE TRACK TO DISK                          
         STH   R1,P3+2                                                          
         L     RF,VDADDS                                                        
         OILH  GRF,X'8000'         INDICATE 31-BIT CALLER                       
         GOTO1 (RF),P1                                                          
         OC    P3(2),P3            TEST FOR ERRORS                              
         BNZ   WRITERR                                                          
*                                                                               
         OC    DMP2K,DMP2K         END OF FIRST DATA AREA?                      
         BNZ   WRTA02                                                           
*                                                                               
         XC    PARMS,PARMS         SET DADDS TO GET FILE ATTRIBUTES             
         MVC   P1,VDARPRT                                                       
         MVC   P3,DMPBLKSZ         DUMP FILE BLOCK SIZE                         
         ST    R7,P4                                                            
         GOTO1 VDADDS,PARMS                                                     
*                                                                               
         MVC   RECTRK,P3+2         RECTRK=RECORDS PER TRACK                     
         L     R1,P2                                                            
         LH    RE,2(R1)            R6=TRKS PER CYLINDER                         
         STH   RE,TRKCYL                                                        
*                                                                               
         L     R0,MYDUMP#                                                       
         BCTR  R0,0                                                             
         SRDL  R0,32               R1=DUP DUMP NUMBER (ZERO BASED)              
         LLC   RF,SSBDMPCY         R0=DUMP SIZE IN CYLINDERS                    
         MR    R0,RF                                                            
         MR    R0,RE                                                            
*                                                                               
         LA    R1,1(R1)            R1=START RELATIVE TRACK                      
         SLL   R1,16                                                            
         ST    R1,DISKADDR         SET DISK ADDR OF START OF DUMP               
         MVI   DISKADDR+2,1                                                     
*                                                                               
         MVC   P1,VRDID                                                         
         LA    RE,DWRKDUP          A(READ IN BUFFER)                            
         ST    RE,P2                                                            
         LA    RE,DMPHDRL          SIZE OF HEADER REC                           
         ST    RE,P3                                                            
         ST    R7,P4                                                            
         LA    RE,DISKADDR                                                      
         ST    RE,P5                                                            
         GOTO1 VDADDS,PARMS                                                     
         OC    P3(2),P3            TEST FOR READ ERROR                          
         BNZ   WRITERR             READ OK                                      
*                                                                               
DUP      USING DMPHDRD,DWRKDUP                                                  
         MVC   DUP.DMPDM1TK,DM1DSK                                              
         MVC   DUP.DMPDM2TK,DM2DSK                                              
         MVC   DUP.DMPTB1TK,TB1DSK                                              
         MVC   DUP.DMPXA9TK,XA9DSK                                              
         MVC   DUP.DMPISGTK,XAIDSK                                              
         DROP  DUP                                                              
*                                                                               
         MVC   P1,VWTID            WRITE BACK HEADER REC OF FIRST DUP           
         LA    RE,DWRKDUP                                                       
         ST    RE,P2                                                            
         LHI   RE,DMPHDRL          SIZE OF HEADER REC                           
         ST    RE,P3                                                            
         LA    RE,DISKADDR                                                      
         ST    RE,P5                                                            
         GOTO1 VDADDS,P1                                                        
         OC    P3(2),P3            TEST WRITE ERROR                             
         BNZ   WRITERR             ERROR                                        
*                                                                               
         XIT1                                                                   
         DROP  R7                                                               
*                                                                               
WRITERR  SAM24                     GET TO 24-BIT MODE FOR THIS CALL             
         L     RF,LVL1                                                          
         GOTO1 VDMOD000,DMCB,VWCTYPE,WRIMSG,WRIMSGL,(RF)                        
         XIT1                                                                   
         EJECT                                                                  
***********************************************************************         
* SOME LABEL USED AT ONE TIME THAT ISNT REFERENCED ANY MORE           *         
***********************************************************************         
         LTORG                                                                  
ABENDXX  EQU   *-1                                                              
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE AREAS                                               *         
***********************************************************************         
DWRKBUFF DS    (DMPBLKQ)X                                                       
DWRKC    DC    800D'0'                                                          
                                                                                
***********************************************************************         
* ABEND SCREEN MAPPING                                                *         
***********************************************************************         
SRABNFFD DSECT                                                                  
         DS    CL64                                                             
       ++INCLUDE SRABNFFD                                                       
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE DSECT                                               *         
***********************************************************************         
DWRKD    DSECT                                                                  
DUB      DS    D                                                                
DUB1     DS    D                                                                
FULL     DS    F                                                                
FULL1    DS    F                                                                
DMCB     DS    6F                                                               
DMCB1    DS    6F                                                               
PLIST    DS    6F                                                               
*                                                                               
         DS    0A                                                               
PARMS    DS    0XL24                                                            
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
*                                                                               
STATUS   DS    F                   DUMP RESTART STATUS                          
MYHEADER DS    A                   THIS DUMP REGION (IN DATASPACE)              
MYDUMP#  DS    F                   THIS DUMP NUMBER (FROM DATASPACE)            
MYLEVEL  DS    F                   THIS DUMP MESSAGE LEVEL                      
COREADDR DS    A                                                                
DISKADDR DS    F                                                                
ARECLIST DS    A                                                                
DMP2K    DS    F                                                                
XACORE   DS    F                                                                
XADMP2K  DS    F                                                                
XA92K    DS    F                                                                
XAI2K    DS    F                                                                
RECTRK   DS    H                                                                
HALF     DS    H                                                                
*                                                                               
PSWMRB   DS    F                                                                
RCVCTCB  DS    H                   COUNT TAKEN FROM TCB                         
RCVCRCV  DS    H                   COUNT TAKEN FROM RCV                         
         DS    F                                                                
*                                                                               
SAVERD   DS    F                                                                
SAVERE   DS    F                                                                
SVTCB    DS    A                                                                
SVUTL    DS    A                                                                
SVTTEST  DS    F                                                                
*                                                                               
TRKCYL   DS    H                                                                
*                                                                               
SSENAME  DS    CL7                                                              
SSEOVSY  DS    XL1                                                              
SPGMNAME DS    CL7                                                              
*                                                                               
ABFLAGS  DS    XL1                 ABEND CONTROL FLAGS                          
ABWRTDMP EQU   X'80'               WRITE DUMP TO DISK                           
ABBCKOUT EQU   X'40'               BACKOUT TRANSACTION                          
ABUNWIND EQU   X'20'               REQUEST TO UNWIND TRANSACTION                
ABSAME   EQU   X'10'               DUMP IS THE SAME AS THE LAST ONE             
ABEMAIL  EQU   X'08'               DO EMAIL REGARDLESS OF DUPE STATUS           
ABSCRNCH EQU   X'02'               DIED IN SCRUNCH (DIDNT GET TO MNTR)          
ABSCRIPT EQU   X'01'               TASK IS EXECUTING A SCRIPT                   
*                                                                               
ABFLAG1  DS    X                                                                
AB1ARS   EQU   X'80'               AR MODE                                      
ABAGAIN  EQU   X'40'               IS THIS TASK IN ABEND AGAIN                  
ABRETPRO EQU   X'08'               ATTEMPT TO RETURN FROM PROT CHECK            
ABRET    EQU   X'04'               ATTEMPT TO RETURN                            
*                                                                               
DM1DSK   DS    F                   SAVED D/A FOR DMGR1 STORAGE                  
DM2DSK   DS    F                   SAVED D/A FOR DMGR2 STORAGE                  
TB1DSK   DS    F                   SAVED D/A FOR TABS1 STORAGE                  
XA9DSK   DS    F                   SAVED D/A FOR XA9   STORAGE                  
XAIDSK   DS    F                   SAVED D/A FOR ISGENQ STORAGE                 
*                                                                               
DWRK     DS    0D                  CCWS MUST BE ON DOUBLEWORD BOUNDARY          
         DS    (DMPHDRL)X                                                       
DWRKDUP  DS    0D                  CCWS MUST BE ON DOUBLEWORD BOUNDARY          
         DS    (DMPHDRL)X                                                       
DWRKL    EQU   *-DWRKD                                                          
***********************************************************************         
* ABEND REGISTERS BLOCKS DSECT                                                  
***********************************************************************         
       ++INCLUDE FAREGSD                                                        
         EJECT                                                                  
***********************************************************************         
* ADDITIONAL DSECTS AND MACROS                                        *         
***********************************************************************         
*FAATC                                                                          
       ++INCLUDE FAATC                                                          
*FACHKPT                                                                        
       ++INCLUDE FACHKPT                                                        
*FADMPHDR                                                                       
       ++INCLUDE FADMPHDR                                                       
*FAPGMLST                                                                       
       ++INCLUDE FAPGMLST                                                       
*FASELIST                                                                       
       ++INCLUDE FASELIST                                                       
*FASSB                                                                          
       ++INCLUDE FASSB                                                          
*FASYSFAC                                                                       
       ++INCLUDE FASYSFAC                                                       
*FATCB                                                                          
       ++INCLUDE FATCB                                                          
*FAUTL                                                                          
       ++INCLUDE FAUTL                                                          
*FATABSD                                                                        
       ++INCLUDE FATABSD                                                        
*FANTFYD                                                                        
       ++INCLUDE FANTFYD                                                        
*FATABSDMP                                                                      
       ++INCLUDE FATABSDMP                                                      
*DMDSHDR                                                                        
       ++INCLUDE DMDSHDR                                                        
*DMSPACED                                                                       
       ++INCLUDE DMSPACED                                                       
*DMDTFPH                                                                        
       ++INCLUDE DMDTFPH                                                        
*FAWLMD                                                                         
       ++INCLUDE FAWLMD                                                         
*FAWLMED                                                                        
       ++INCLUDE FAWLMED                                                        
*CTGENFILE                                                                      
         PRINT OFF                                                              
       ++INCLUDE CTGENFILE                                                      
         PRINT ON                                                               
*IHASDWA MACRO                                                                  
         PRINT OFF                                                              
         IHASDWA GR32=YES                                                       
         PRINT ON                                                               
*IEAPIE                                                                         
         IHAEPIE                                                                
*IEAPICA                                                                        
*NOP*    IHAPICA                                                                
*IEZCIB                                                                         
         PRINT OFF                                                              
         IEZCIB                                                                 
         PRINT ON                                                               
*IEZCOM                                                                         
         PRINT OFF                                                              
         IEZCOM                                                                 
         PRINT ON                                                               
*IHAASCB                                                                        
         PRINT OFF                                                              
         IHAASCB                                                                
         PRINT ON                                                               
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'010FAABEND   09/23/16'                                      
         END                                                                    
