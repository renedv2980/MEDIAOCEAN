*          DATA SET DMWRKFSH   AT LEVEL 022 AS OF 04/16/20                      
*CATALP DMWRKFSH                                                                
*&&      SET   NOP=N                                                  *         
***********************************************************************         
* R2 POINTS TO ORIGINAL CALLERS PARAM LIST                            *         
*                                                                     *         
* A(ACTION)                                                           *         
* A(FILE NAME) GENERICALLY C'WRKFIL' SPECIFICALLY C'WRKF1'/C'WRKF2'.  *         
* A(KEY)                                                              *         
* A(WRKF REC)  MUST BE LARGE ENOUGH TO HOLD A WORKER RECORD (4K)      *         
* A(WRKF BUF)  MUST BE LARGE ENOUTH TO HOLD A DISK   RECORD (14K)     *         
*                                                                     *         
* R1 POINTS TO DATAMGR PARAMS WITH PARAM4=FILNUM/A(DTF)               *         
***********************************************************************         
         TITLE 'DMWRKFSH - ROUTINES TO PROCESS WRKF WITH SHARED MEMORY'         
         PRINT NOGEN                                                            
DMWRKFSH CSECT                                                                  
         ENTRY WKSHLST                                                          
         ENTRY WKSHSTMP                                                         
*                                                                               
         NMOD1 WRKX-WRKD,**WRKF**,R9,R8                                         
         USING WRKD,RC                                                          
         LARL  RA,COMMON                                                        
         USING COMMON,RA                                                        
         ST    R2,APARM                                                         
         MVC   PARM1(24),0(R2)     SAVE PARAMS                                  
         LM    R2,R4,PARM3                                                      
*                                                                               
         SAM24 ,                   FORCE 24-BIT MODE                            
*                                                                               
         USING UKRECD,R2           R2=A(KEY)                                    
         USING WLHDRD,R3           R3=A(WRKF HEADER)                            
         LA    R4,0(R4)            R4=A(CALLERS BUFFER)                         
*                                                                               
         MVI   PARM3,0             SET OK RETURN CODE                           
         MVI   CLOTYP,0            SET UNDEFINED CLOSE TYPE                     
         MVI   ADDWHY,0            SET NORMAL ADD TYPE                          
         XC    USERINFO,USERINFO   RESET USER WRKF FILE INFO BLOCK              
         XC    CIDATA(8),CIDATA                                                 
         LA    RF,CXREC                                                         
         ST    RF,ACXREC                                                        
*                                                                               
         L     RE,VISGENQ                                                       
         ST    RE,FIWENQ           A(DMISGENQ)                                  
         NI    FIWFLG,X'FF'-FIWFNOL-FIWFNRL-FIWFSLK                             
         TM    PARM1,FIWFNOL       X'10' NO LOCKING NEEDED                      
         BZ    *+8                                                              
         OI    FIWFLG,FIWFNOL                                                   
         TM    PARM1,FIWFNRL       X'20' NO REPORT LOCKING NEEDED               
         BZ    *+8                                                              
         OI    FIWFLG,FIWFNRL                                                   
*                                                                               
         LA    R1,WKSHLST                                                       
         CLI   0(R1),0             TEST FIRST CALL                              
         BNE   DMWRKF1                                                          
         ICM   RE,15,=V(SYSFLES)   POINT TO SYSTEM FILES IN DMGR                
         JZ    *+2                 DEATH IF NO SYSTEM FILES                     
         CLI   0(RE),X'01'         FIRST ENTRY MUST BE SERVICE SYSTEM           
         JNE   *+2                 DEATH IF SERVICE NOT FIRST SYSTEM            
         LH    R0,2(RE)            SET NUMBER OF FILES IN LIST                  
         LA    RE,4(RE)            POINT TO FIRST FILE IN LIST                  
         LA    RF,8(R1)                                                         
*                                                                               
         SR    R1,R1               SET NUMBER OF WRKF FILES                     
         SR    R7,R7               SET NUMBER OF EXTRA (SPECIAL) FILES          
DMWRKF0A TM    1(RE),X'80'         TEST FOR WRKF FILE                           
         BZ    DMWRKF0D                                                         
         TM    1(RE),X'40'         TEST WRKF FILE IS EXTRA                      
         BZ    DMWRKF0B                                                         
         LA    R7,1(R7)                                                         
DMWRKF0B LA    R1,1(R1)            BUMP NUM OF WRKF FILES                       
         STC   R1,0(RF)            SAVE FILE REL NUM                            
         STC   R1,1(RF)            SAVE FILE ALPHA ID CHR FOR WRKFN             
*                                                                               
         CHI   R1,X'09'                                                         
         BH    *+12                                                             
         OI    1(RF),C'0'                                                       
         B     DMWRKF0C                                                         
*                                                                               
         LR    R5,R1               TURN X'0A' - C'A' ET AL                      
         AHI   R5,C'A'-10                                                       
         STC   R5,1(RF)                                                         
*                                                                               
DMWRKF0C MVC   4(1,RF),3(RE)       SAVE FILE EXT NUM                            
         MVC   5(3,RF),5(RE)       SAVE FILE DTF ADDR                           
         LA    RF,8(RF)                                                         
DMWRKF0D LA    RE,8(RE)            BUMP TO NEXT FILE IN LIST                    
         BCT   R0,DMWRKF0A                                                      
*                                                                               
         LA    RF,WKSHLST                                                       
         LTR   R1,R1               MUST BE SOME FILES                           
         JZ    *+2                 DEATH IF NO FILES                            
         STC   R7,1(RF)            SAVE NUMBER OF EXTRA WRKF FILES              
         STC   R1,2(RF)            SAVE NUMBER OF TOTAL WRKF FILES              
         SR    R1,R7                                                            
         STC   R1,0(RF)            SAVE NUMBER OF NORMAL WRKF FILES             
                                                                                
***********************************************************************         
* SET IF OFFLINE OR ONLINE AND GET/SET WRKF FILE DATA                 *         
***********************************************************************         
DMWRKF1  MVI   OFFLINE,C'Y'                                                     
         MVC   MYLABEL,LABEL                                                    
*                                                                               
         LT    RE,=V(SSB)                                                       
         JZ    *+2                 DEATH - NO SSB                               
*                                                                               
         USING SSOOFF,RE                                                        
         OC    SSOCNTL,SSOCNTL                                                  
         BNZ   DMWRKF2             TERMINAL # IN SSB MEANS ONLINE               
         CLI   SSOXTND,X'FF'       TEST IF OFFLINE EXTENDED SSB                 
         BNE   DMWRKF2A            OH WELL                                      
         OI    SSOFLAG3,SSO3NINT   DO NOT INTERRUPT                             
         B     DMWRKF2A                                                         
         DROP  RE                                                               
*                                                                               
DMWRKF2  MVI   OFFLINE,C'N'                                                     
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBSIN-TCBD(RE)                                               
         LA    RE,0(RE)                                                         
         STCM  RE,15,MYLABEL+3     SET ONLINE LABEL WITH TASK SIN               
*                                                                               
DMWRKF2A L     RE,PARM2            SET WKR FILE NAME AND DTF ADDR               
         MVC   W_FILE,0(RE)                                                     
         MVC   VW_FILE,12(R1)                                                   
         CLI   W_FILE+4,C'I'       TEST IF GENERIC WRKF NAMED                   
         BNE   DMWRKF2B                                                         
*                                                                               
         MVC   USERIDNO,UKUSRID    SET USER ID NUM FROM KEY                     
         BAS   RE,WHATWKRU                                                      
         B     DMWRKF2C                                                         
*                                                                               
DMWRKF2B MVC   USERWRKF+4(1),W_FILE+4                                           
         BAS   RE,WHATWKRA         GET/SET WRKF INFO FROM ALPHA ID              
DMWRKF2C OI    USERFLAG,X'80'      SET CALLER TOLD US WHICH WKR                 
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
*                                                                               
DMWRKF3  LA    RE,L'W_INDEX                                                     
         STH   RE,CINDXLN                                                       
*                                                                               
DMWRKF4  LR    R7,R4               LOCATE SAVE AREA AT END OF BUFF              
         AH    R7,W_BLKLN                                                       
         LA    R7,3(R7)                                                         
         SRL   R7,2                                                             
         SLL   R7,2                                                             
         USING SKBUFFD,R7          R7=A(SAVE AREA AT END OF BUFFER)             
*                                                                               
DMWRKF5  CLC   SKLABEL,MYLABEL     INITIALISE SAVE AREA                         
         BE    DMWRKFA                                                          
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
                                                                                
***********************************************************************         
* VALIDATE W_FILE ACTION AND PASS CONTROL TO ROUTINE                  *         
***********************************************************************         
DMWRKFA  L     RE,PARM1            RE=A(W_FILE ACTION)                          
         LA    RF,W_ACTNS          RF=A(ACTION TABLE)                           
DMWRKFA1 CLI   1(RF),0             TEST END OF TABLE                            
         BE    DMWRKFE                                                          
         CLC   1(3,RF),0(RE)       MATCH ON FIRST THREE CHRS                    
         BE    DMWRKFB                                                          
         LA    RF,12(RF)                                                        
         B     DMWRKFA1                                                         
*                                                                               
DMWRKFB  MVC   SKACTN,0(RF)        SAVE THIS ACTION VALUE                       
         MVC   SAVADDR,8(RF)       SAVE A(ROUTINE REQUIRED)                     
*                                                                               
DMWRKFB1 TM    SAVADDR,X'01'       GO DIRECT FOR SPECIAL ACTIONS                
         BO    DMWRKFD                                                          
*                                                                               
DMWRKFB2 TM    SAVADDR,X'80'       ACTION REQUIRES SPECIFIC WRKF                
         BZ    DMWRKFB3                                                         
         TM    USERFLAG,X'80'                                                   
         BZ    DMWRKFE             DIE IF CALLER DOES NOT SPECIFY               
         BAS   RE,SETWKR                                                        
         B     DMWRKFD                                                          
*                                                                               
DMWRKFB3 TM    SAVADDR,X'40'       ACTION REQUIRES WRKF NUM IN BUFFER           
         BZ    DMWRKFD             . NO, ACTION WILL DETERMINE WRKF             
         CLI   SKINTNO,0                                                        
         BE    DMWRKFE             DIE IF NO INTERNAL NUM IN BUFFER             
         TM    USERFLAG,X'80'                                                   
         BZ    *+14                                                             
         CLC   USERINUM,SKINTNO    TEST IF USER SWITCHED WRKF FILES             
         BNE   DMWRKFE             YES DIE                                      
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   SKEXTNO,USERXNUM                                                 
         BNE   DMWRKFE             DOUBLE CHECK BUFFER SAVE AREA                
         BAS   RE,SETWKR           SET CIDATA                                   
*                                                                               
DMWRKFD  L     RF,SAVADDR          PASS CONTROL TO ROUTINE FOR ACTION           
         LA    RF,0(RF)                                                         
         BR    RF                                                               
*                                                                               
DMWRKFE  DC    H'0',C'INVALID W_FILE ACTION '                                   
*                                                                               
XITEQU   CR    RB,RB               EXITS                                        
         B     XIT1                                                             
XITNEQ   LTR   RB,RB                                                            
XIT1     XIT1                                                                   
*                                                                               
DMWRKFX  MVC   SKLACTN,SKACTN      SAVE LAST ACTION VALUE                       
DMWRKFY  L     R1,APARM                                                         
         MVC   8(1,R1),PARM3                                                    
*                                                                               
         CLI   OFFLINE,C'Y'                                                     
         BNE   DMWRKFYY                                                         
*                                                                               
         L     RE,=V(SSB)                                                       
         USING SSOOFF,RE                                                        
         CLI   SSOXTND,X'FF'           TEST IF OFFLINE EXTENDED SSB             
         BNE   DMWRKFYY                OH WELL                                  
         NI    SSOFLAG3,X'FF'-SSO3NINT CLEAR NON-INTERUPTIBLE FLAG              
         DROP  RE                                                               
*                                                                               
DMWRKFYY XMOD1 1                                                                
         EJECT                                                                  
***********************************************************************         
* CALL TO INITIALISE BUFFER - PASS BACK IN BUFFER                     *         
*                                                                     *         
* AL4    V(W_TAB)                                                     *         
* AL4    V(W_FILE)                                                    *         
* AL4    DISPLACEMENT OF START OF BUFFER SAVE                         *         
* CL40   CIDATA FROM W_TAB                                            *         
* CL12   N/D                                                          *         
* CL40   WRKF LIST FRON WRKFL                                         *         
***********************************************************************         
BUF      TM    USERFLAG,X'80'      TEST IF CALLER SPECIFIED WRKF                
         BO    BUF010                                                           
         XC    0(8,R4),0(R4)       SET UNKNOWN WRKF DATA                        
         XC    CIDATA,CIDATA                                                    
         B     BUF020                                                           
*                                                                               
BUF010   BAS   RE,SETWKR           GET CIDATA FOR WRKF                          
         MVC   0(4,R4),VWKRTAB                                                  
         MVC   4(4,R4),VW_FILE                                                  
*                                                                               
BUF020   LR    R0,R7               GET DISPLACEMENT TO SAVE AREA                
         SR    R0,R4                                                            
         ST    R0,8(R4)                                                         
         MVC   12(L'CIDATA,R4),CIDATA                                           
         MVC   64(WKSHLSTX-WKSHLST,R4),WKSHLST                                  
         MVC   FUL(1),SKACTN                                                    
         XC    SKLABEL(SKEND-SKLABEL),SKLABEL                                   
         MVC   SKLABEL,MYLABEL                                                  
                                                                                
***********************************************************************         
* RESTORE FROM SAVE AREA THE EXTRACT OF DATA BACK TO BUFFER           *         
***********************************************************************         
BUR      CLI   FUL,ACTNBUR         EXIT IF RESTORE NOT REQUIRED                 
         BNE   DMWRKFX                                                          
         LR    RE,R3               POINT TO WORKER RECORD                       
         USING KSBUFFD,RE                                                       
         MVC   SKINDEX,KSINDEX     RESTORE BUFFER DATA FROM RECORD AREA         
         MVC   SKFSTCI,KSFSTCI                                                  
         MVC   SKINTNO,KSINTNO                                                  
         MVC   SKEXTNO,KSEXTNO                                                  
         MVC   UKINDEX,KSINDEX     RESTORE USERS KEY                            
         B     DMWRKFX                                                          
                                                                                
***********************************************************************         
* SAVE EXTRACT OF SAVE DATA IN BUFFER - ENOUGH TO IDENTIFY FILE       *         
***********************************************************************         
BUS      LR    RE,R3               POINT TO WORKER RECORD                       
         USING KSBUFFD,RE                                                       
         MVC   KSINDEX,SKINDEX     SAVE BUFFER DATA INTO RECORD AREA            
         MVC   KSFSTCI,SKFSTCI                                                  
         MVC   KSINTNO,SKINTNO                                                  
         MVC   KSEXTNO,SKEXTNO                                                  
         B     DMWRKFX                                                          
         DROP  RE                                                               
                                                                                
***********************************************************************         
* RETURN A(WKSHLST) IN UKUSRINF                                       *         
***********************************************************************         
GLI      LA    RE,WKSHLST          POINT TO LIST OF WRKF FILES                  
         STCM  RE,15,UKUSRINF                                                   
         LA    RE,WKSHXPE          POINT TO LIST OF WRKF INDEX DATA             
         STCM  RE,15,UKUSRINF+4                                                 
         B     DMWRKFY                                                          
                                                                                
***********************************************************************         
* RETURN WRKF FILE NAME IN UKUSRINF FROM USERID NUM IN UKUSRID        *         
***********************************************************************         
GFI      MVC   USERIDNO,UKUSRID    SET USER ID NUM FROM KEY                     
         BAS   RE,WHATWKRU                                                      
         MVC   UKINFO(1),USERINUM  RETURN INT/EXT FILE NUMS IN KEY              
         MVC   UKINFO+1(1),USERXNUM                                             
         MVC   UKFILENX(3),USERADTF                                             
         MVC   UKUSRINF,USERWRKF   RETURN DMCB WRKF NAME IN KEY                 
         B     DMWRKFY                                                          
                                                                                
***********************************************************************         
* INITIALISE WRKF REQUESTED BY CALLER                                 *         
***********************************************************************         
INI      OC    CIDATA(4),CIDATA    TEST IF INITIALISED ALREADY                  
         BNZ   DMWRKFX                                                          
         BRAS  RE,IWKR             CALL INITIALISE ROUTINE AND EXIT             
         B     DMWRKFX                                                          
         EJECT                                                                  
***********************************************************************         
* READ W_FILE SEQUENTIALLY FILTERED BY KEY.                           *         
* PARM4 POINTS TO A WORK AREA. (4K)                                   *         
* LENGTH OF TOTAL REC PASSED BACK AT PARM4-4(2).                      *         
* USER INDEX IS NOT CHANGED - ALL NON ZERO FIELDS ARE FILTERS.        *         
*                                                                     *         
* IF INDEX+30=X'80' BIT IS OFF THEN INDEX DATA WILL BE RETURNED IN    *         
* PARM4 WITH RECORD FORMAT AS FOLLOWS. CTXX IS LAST 4 BYTES OF INDEX. *         
*                                                                     *         
* SOFSOF..CTXX.....##..DA.F.<--1ST 20 CHR NDX-->                      *         
*                                                                     *         
* IF INDEX+30=X'80' BIT IS ON THEN FILE DATA WILL BE RETURNED BETWEEN *         
* HDR AND TRL RECORDS BY SUCESSIVE CALLS AS FOLLOWS.                  *         
*                                                                     *         
* SOFSOF..CTXX.....##..DA.F.<--1ST 20 CHR NDX--><--FILE DATA.....>    *         
* REC-1.....                                                          *         
* REC-2.....                                                          *         
* EOFEOF                                                              *         
*                                                                     *         
* IF A READ ERROR THEN EOF LABEL SET TO EOFERR                        *         
***********************************************************************         
SEQ      TM    SKSCTRL,X'01'       INITIALISE BUFFER ON FIRST CALL              
         BO    SEQ010                                                           
*                                                                               
         MVI   SKSCTRL,X'01'                                                    
         MVI   SKACTRL,0                                                        
         MVC   SKINTNO,USERINUM    SAVE INTERNAL WRKF FILE NUM                  
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL WRKF FILE NUM                  
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         LA    RF,0(R3)            CLEAR RECORD LEN AND DATA                    
         AHI   RF,-4                                                            
         XC    0(32,RF),0(RF)                                                   
*                                                                               
         SAM31                                                                  
*                                                                               
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   SEQ004                                                           
         MVC   FIWNDA,FIWP1A                                                    
         BRAS  RE,FIRNC                                                         
         MVC   SKFSTCI,FIWCIA                                                   
         XC    SKADDR,SKADDR                                                    
         B     SEQ025                                                           
*                                                                               
SEQ004   MVC   FIWCIA,SKFSTCI                                                   
         BRAS  RE,FIRCN            CONVERT A(NODE) TO A(CI) & REPORT #          
         XC    SKADDR,SKADDR       NEW REPORT TO READ THROUGH                   
         B     SEQ025                                                           
*                                                                               
SEQ010   SAM31                                                                  
         CLC   SKINTNO,USERINUM    TEST IF SAME WRKF AS LAST TIME               
         JNE   *+2                 DEATH IF NOT THE SAME                        
         TM    SKSCTRL,X'80'       READ DATA MODE                               
         BO    SEQ170              . YES                                        
         B     SEQ120                                                           
*                                                                               
         USING W_RECD,R5                                                        
SEQ025   L     RF,FIWNDA                                                        
         MVC   FIWNDX,SI1NDX-SI1PAR(RF)                                         
         LA    R5,FIWNDX                                                        
*                                                                               
         CLI   W_STAT,0            IGNORE PURGED ENTRYS                         
         BE    SEQ120                                                           
         TM    UKFLAG,UKFLTMP      TEST USER WANTS TEMP ENTRIES                 
         BO    SEQ030                                                           
         TM    W_STAT,W_STRUN      IGNORE TRANSIENT ENTRIES                     
         BNZ   SEQ120                                                           
*                                                                               
SEQ030   OC    UKUSRID,UKUSRID     FILTER ON USER ID                            
         BZ    SEQ040                                                           
         CLC   UKUSRID,W_USRID                                                  
         BNE   SEQ120                                                           
*                                                                               
SEQ040   OC    UKSYSPRG(4),UKSYSPRG   FILTER ON SYSPRG                          
         BZ    SEQ070                                                           
*                                                                               
         LA    RF,UKSYSPRG                                                      
         LA    RE,W_SYSPRG                                                      
SEQ050   CLI   0(RF),C'*'          * IS WILDCARD                                
         BE    SEQ060                                                           
         CLI   0(RF),X'0'          ZERO ALSO                                    
         BE    SEQ060                                                           
         CLC   0(1,RE),0(RF)       ELSE MUST MATCH                              
         BNE   SEQ120                                                           
SEQ060   LA    RF,1(RF)                                                         
         LA    RE,1(RE)                                                         
         BCT   R0,SEQ050           TEST NEXT CHAR                               
*                                                                               
SEQ070   CLI   UKDAY,0             TEST DAY NUMBER                              
         BE    SEQ080                                                           
         CLC   UKDAY,W_DAY                                                      
         BNE   SEQ120                                                           
*                                                                               
SEQ080   CLI   UKCLASS,0           FILTER ON CLASS                              
         BE    SEQ090                                                           
         CLC   UKCLASS,W_CLASS                                                  
         BNE   SEQ120                                                           
*                                                                               
SEQ090   CLI   UKSTAT,0            FILTER ON STATUS                             
         BE    SEQ100                                                           
         MVC   DUB(1),UKSTAT                                                    
         TM    DUB,W_STKE                                                       
         BZ    *+12                                                             
         TM    W_STAT,W_STKE                                                    
         BZ    SEQ120                                                           
         NI    DUB,255-W_STKE                                                   
         BZ    SEQ100                                                           
         NC    DUB(1),W_STAT                                                    
         BZ    SEQ120                                                           
*                                                                               
SEQ100   OC    UKFILENO,UKFILENO   FILTER ON FILE NUMBER                        
         BZ    SEQ110                                                           
         CLC   UKFILENO,W_FILENO                                                
         BE    SEQ110                                                           
         BH    SEQ120                                                           
         OC    UKFILENX,UKFILENX                                                
         BZ    SEQ110                                                           
         CLC   UKFILENX,W_FILENO                                                
         BL    SEQ120                                                           
*                                                                               
SEQ110   B     SEQ150              ENTRY FOUND VALID FOR ALL FILTERS            
*                                                                               
SEQ120   XC    SKADDR,SKADDR       NEW REPORT TO READ THROUGH                   
         MVC   FIWCIA,SKFSTCI                                                   
         BRAS  RE,FIRCN                                                         
         BRAS  RE,FIRNSN           BUMP TO NEXT INDEX ENTRY                     
         BNE   SEQEOF                                                           
         BRAS  RE,FIRNC            CONVERT A(NODE) TO A(CI) & REPORT #          
         MVC   SKFSTCI,FIWCIA                                                   
         B     SEQ025                                                           
*                                                                               
SEQ150   MVC   CIADDR,FIWCIA                                                    
         XC    SKINDEX,SKINDEX                                                  
         MVC   SKKEY,W_KEY                                                      
         MVC   SKSTAT,W_STAT                                                    
         MVC   SKCIADDR,CIADDR                                                  
         XC    SKFCTRL,SKFCTRL                                                  
         MVC   SKFSTCI,CIADDR      SAVE DISK ADDR OF FILE IN BUFFER             
*                                                                               
         XC    0(28,R3),0(R3)      PASS BACK SOF HEADER IN RECORD               
         MVC   0(8,R3),SOFLAB                                                   
         MVC   WLREPRNO,W_FILENO                                                
         MVC   WLREPFNO,USERWRKF+4                                              
         MVC   WLINDEX,W_INDEX                                                  
         LA    R6,WLBATTR          POINT TO NEXT CHR IN SOF HEADER              
*                                                                               
         TM    UKFLAG,X'80'        TEST IF CALLER WANTS DATA AS WELL            
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO-SET IN INDEX READ MODE                    
         B     SEQ190                                                           
         OI    SKSCTRL,X'80'       YES- SET IN DATA READ MODE                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST                                                        
         BE    SEQ160                                                           
         MVC   5(3,R3),=C'ERR'     ERROR ON FIRST DATA READ                     
         NI    SKSCTRL,X'7F'                                                    
         B     SEQ190                                                           
*                                                                               
SEQ160   LR    R5,R4               RETURN EXTENDED FILE HEADER                  
         MVC   WLINDEX,W_INDEX                                                  
         MVC   WLBATTR,W_BATTR                                                  
         MVC   WLDATA,W_DATA                                                    
         LA    R6,WLSOFEND         POINT TO END OF DATA                         
         B     SEQ190                                                           
*                                                                               
SEQ170   TM    UKFLAG,X'80'        DATA READ MODE                               
         BO    *+12                                                             
         NI    SKSCTRL,X'7F'       NO LONGER REQUIRED RETURN TO INDEX           
         B     SEQ010                                                           
*                                                                               
         BAS   RE,RDFNXT           READ NEXT DATA RECORD                        
         BNE   SEQ180                                                           
         LH    R6,SKLEN            POINT TO END OF DATA                         
         AR    R6,R3                                                            
         B     SEQ190              RETURN REC LEN                               
*                                                                               
SEQ180   XC    0(28,R3),0(R3)      RETURN EOF/ERR TRAILER RECORD                
         MVC   0(8,R3),EOFLAB                                                   
         TM    DMCB+8,X'80'                                                     
         BO    *+10                                                             
         MVC   5(3,R3),=C'ERR'                                                  
         LA    R6,L'EOFLAB(R3)                                                  
         NI    SKSCTRL,X'7F'       RESET TO INDEX READ MODE                     
*                                                                               
SEQ190   LA    R3,0(R3)            R6 POINTS PAST END OF RECORD                 
         SR    R6,R3                                                            
         CLC   WLSOFLAB,SOFLAB     SOF & EOF HAVE NO LEN                        
         BE    SEQ200                                                           
         CLC   WLSOFLAB,EOFLAB                                                  
         BE    SEQ200                                                           
         STH   R6,0(R3)            SET NORMAL RECORD LEN                        
SEQ200   LA    R6,4(R6)            SET RECORD LEN PLUS 4 BYTE HEADER            
         SLL   R6,16                                                            
         LR    RF,R3                                                            
         AHI   RF,-4                                                            
         ST    R6,0(RF)            STORE RECORD LENGTH                          
         B     DMWRKFX                                                          
*                                                                               
SEQERR   MVI   PARM3,X'40'         ERROR ON INDEX READ                          
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
SEQEOF   MVI   PARM3,X'90'         END OF FILE ON INDEX READ                    
         MVI   SKSCTRL,0                                                        
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKFX                                                          
         EJECT                                                                  
***********************************************************************         
* READ W_FILE INDEX - PASS BACK INDEX ENTRY IN USER INDEX (PARM3).    *         
*                                                                     *         
* SET USER INDEX BEFORE FIRST CALL TO ONE OF THE FOLLOWING VALUES-    *         
* SET UKFLAG TO X'80' AND UKFILENO TO LOCATE ENTRY WITH THAT REFERENCE*         
* SET UKKEY TO ZERO TO LOCATE FIRST INDEX ENTRY.                      *         
* SET UKKEY TO VALUE TO LOCATE THAT SPECIFIC KEY IN THE INDEX.        *         
* SUBSEQUENT CALLS GIVE NEXT INDEX AFTER THAT GIVEN BY FIRST CALL.    *         
* SET PARM1(1) TO X'08' TO OBTAIN DEAD INDEX ENTRYS.                  *         
*                                                                     *         
* USER INDEX IS UPDATED BY THIS LOGIC.                                *         
***********************************************************************         
         USING W_RECD,R5                                                        
NDX      XC    SKFCTRL,SKFCTRL     RESET FILE I/O CONTROL                       
         MVI   SKACTRL,0                                                        
         MVI   SKSCTRL,0                                                        
         MVC   SKINTNO,USERINUM    SAVE INTERNAL WRKF FILE NUM                  
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL WRKF FILE NUM                  
         MVI   FLAG,0                                                           
*                                                                               
         TM    UKFLAG,UKFLNOX      NO EXPIRED WANTED                            
         BZ    *+12                                                             
         BAS   RE,GETDATE          SET DATE & TIME FOR EXPIRED TEST             
         BAS   RE,GETTIME                                                       
*                                                                               
         SAM31                                                                  
*                                                                               
         TM    UKFLAG,X'80'        TEST IF REPORT # PASSED BY CALLER            
         BZ    NDX020              NO                                           
         MVC   CIRSN,UKFILENO                                                   
         LLH   RE,CIRSN            REPORT REFERENCE #                           
         ST    RE,FIWREF                                                        
         BRAS  RE,FIRRN            CONVERT REPORT # TO A(NODE)                  
         BRAS  RE,FIRN1            MAKE SURE WE HAVE A VALID PART1              
         BNE   NDXEOF              NO: PASS BACK END OF FILE                    
         L     RF,FIWNDA                                                        
         MVC   FIWNDX,SI1NDX-SI1PAR(RF)                                         
         LA    R5,FIWNDX                                                        
         B     NDX150                                                           
*                                                                               
NDX020   MVC   SVINDEX,UKINDEX     SAVE CALLERS INDEX ENTRY                     
*                                                                               
         TM    UKFLAG,X'02'        DOES CALLER WANT PART2 INDEX?                
         BZ    NDX060              . NO                                         
         OC    SVKEY,SVKEY         DOES CALLER WANT FIRST INDEX?                
         BNZ   NDX030              . NO                                         
         MVC   FIWNDA,FIWP2A       SET FIRST PART2                              
         BRAS  RE,FIRNC            CONVERT A(NODE) TO A(CI)                     
         B     NDX050                                                           
*                                                                               
NDX030   XC    SVKEY,SVKEY         GET NEXT PART2 INDEX                         
*                                                                               
NDX040   L     RF,FIWNDA                                                        
         LA    RF,L'SI2PAR(,RF)    BUMP TO NEXT PART2 NODE                      
         L     RE,FIWRHA                                                        
         L     RE,SITSIZE-SITAB(,RE)                                            
         A     RE,FIWP1A                                                        
         CR    RF,RE               ANY MORE PART2 INDEXES?                      
         BNL   NDXEOF              . NO                                         
         ST    RF,FIWNDA                                                        
         BRAS  RE,FIRNC            CONVERT A(NODE) TO A(CI)                     
*                                                                               
NDX050   L     RF,FIWNDA                                                        
         MVC   FIWNDX,SI2NDX-SI2PAR(RF)                                         
         LA    R5,FIWNDX                                                        
         B     NDX100                                                           
*                                                                               
NDX060   MVC   FIWNDA,FIWP1A       SET FIRST PART1 NODE                         
         OC    SVKEY,SVKEY         DOES CALLER WANT FIRST INDEX?                
         BZ    NDX090              YES                                          
*                                                                               
NDX070   CLC   SVINDEX,SKINDEX     DOES CALLER WANT NEXT INDEX                  
         BNE   NDX080              NO                                           
         LLH   RE,SVINDEX+(UKFILENO-UKINDEX)                                    
         ST    RE,FIWREF                                                        
         BRAS  RE,FIRRN                                                         
         XC    SVKEY,SVKEY                                                      
         B     NDX140                                                           
*                                                                               
NDX080   OC    UKFILENO,UKFILENO   TEST IF CALLER PASSED FILE NUMBER            
         BZ    NDX090              CALLER DIDN'T PASS A NUMBER                  
         MVC   CIRSN,UKFILENO                                                   
         LLH   RE,CIRSN            REPORT REFERENCE #                           
         ST    RE,FIWREF                                                        
         BRAS  RE,FIRRN            CONVERT REPORT # TO A(NODE)                  
**NOP                                                                           
*DX080   MVC   FIWNDX,SVINDEX      CALLER WANTS THIS INDEX                      
*        BRAS  RE,FIRTLOCK         TREE LOCK                                    
*        BRAS  RE,FIRGTN           GET THIS INDEX TREE NODE                     
*        BE    NDX088              . FOUND IT                                   
*        BRAS  RE,FIRTUNLK         UNLOCK THE INDEX TREE                        
*        B     NDXEOF              . NO MORE INDEXES                            
*DX088   BRAS  RE,FIRTUNLK         UNLOCK THE INDEX TREE                        
*                                                                               
NDX090   L     RF,FIWNDA                                                        
         MVC   FIWNDX,SI1NDX-SI1PAR(RF)                                         
         LA    R5,FIWNDX                                                        
*                                                                               
NDX100   CLI   W_STAT,0            IGNORE PURGED ENTRYS                         
         BE    NDX140                                                           
         OC    W_USRID,W_USRID     IGNORE INVALID ENTRYS                        
         BZ    NDX140                                                           
         OC    W_FILEID,W_FILEID                                                
         BZ    NDX140                                                           
         OC    W_FILENO,W_FILENO                                                
         BZ    NDX140                                                           
         TM    W_STAT,W_STRUN      TEST FOR TRANSIENT                           
         BZ    NDX110                                                           
         TM    UKFLAG,UKFLTMP      UNLESS CALLER WANTS TEMP ENTRYS              
         BZ    NDX140                                                           
         NI    UKFLAG,255-UKFLTMP                                               
*                                                                               
NDX110   TM    W_STAT,W_STDEAD     IGNORE USED ENTRYS                           
         BZ    NDX120                                                           
         TM    PARM1,X'08'         UNLESS CALLER WANTS THEM                     
         BZ    NDX140                                                           
*                                                                               
NDX120   TM    UKFLAG,UKFLNOX      CALLER DOESN'T WANT EXPIRED?                 
         BZ    NDX130                                                           
         CLC   DATEC(3),W_AGERD    SKIP EXPIRED FILES                           
         BH    NDX140                                                           
*                                                                               
NDX130   OC    SVKEY(5),SVKEY      CALLER WANTS NEXT ENTRY                      
         BZ    NDX150                                                           
         CLC   SVKEY(5),W_KEY      CALLER WANTS SPECIFIC INDEX                  
         BE    NDX150                                                           
*                                                                               
NDX140   TM    UKFLAG,X'02'        DOES CALLER WANT PART2 INDEX?                
         BO    NDX040              . YES                                        
         BRAS  RE,FIRNSN           GET NEXT SEQUENTIAL NODE                     
         BNE   NDXEOF                                                           
         B     NDX090                                                           
*                                                                               
NDX150   TM    UKFLAG,X'02'        DOES CALLER WANT PART2 INDEX?                
         BO    NDX160              . YES                                        
         LLH   RE,W_FILENO                                                      
         ST    RE,FIWREF           FIWREF USED LATER                            
         BRAS  RE,FIRRC            CONVERT REPORT # TO A(CI)                    
*                                                                               
NDX160   MVC   CIADDR,FIWCIA                                                    
         MVC   UKINDEX,W_INDEX     RETURN INDEX TO CALLER                       
         MVC   UKCIADDR,CIADDR     RETURN A(CI) TO CALLER                       
         NI    UKFLAG,255-X'80'    TURN OFF ADDR PASSED BY CALLER FLAG          
         MVC   SKINDEX,UKINDEX     UPDATE SAVED INDEX                           
         MVC   SKFSTCI,CIADDR      SAVE A(FIRST CI)                             
         B     DMWRKFX                                                          
*                                                                               
NDXERR   MVI   PARM3,X'40'         DISK ERROR ON INDEX READ                     
         XC    SKXCTRL,SKXCTRL                                                  
         DC    H'0'                                                             
*                                                                               
NDXEOF   MVI   PARM3,X'90'         EOF ON INDEX READ                            
         XC    SKXCTRL,SKXCTRL                                                  
         B     DMWRKFX                                                          
                                                                                
***********************************************************************         
* READ W_FILE DATA RECORDS - PASS BACK RECORD IN PARM4                *         
***********************************************************************         
RDF      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   RDF2                                                             
RDF1     DC    H'0',C'INVALID W_FILE READ SEQUENCE'                             
*                                                                               
RDF2     OC    SKADDR,SKADDR       TEST IF FIRST READ                           
         BNZ   RDF4                                                             
         MVC   CIADDR,SKFSTCI                                                   
         LR    R0,R4                                                            
         BAS   RE,RDFFST           READ FIRST BLOCK AND INITIALISE              
         BE    RDF4                                                             
         MVC   PARM3(1),DMCB+8     RETURN READ ERROR                            
         B     DMWRKFX                                                          
*                                                                               
RDF4     BAS   RE,RDFNXT           GET NEXT RECORD                              
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
                                                                                
***********************************************************************         
* READ RANDOM W_FILE DATA RECORDS - RECORD INFO IN REC AREA AT PARM4  *         
* XL4  RECORD NUMBER                                                  *         
* XL4  C'RECD'                                                        *         
* XL4  SPARE                                                          *         
***********************************************************************         
RDR      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BZ    RDF1                INVALID W_FILE READ SEQUENCE                 
         MVC   FUL,0(R3)           SET FUL TO RECORD NUMBER                     
*                                                                               
         CLC   4(3,R3),=C'REC'                                                  
         BE    *+6                                                              
         DC    H'0'                REC IS ONLY VALID CALL                       
*                                                                               
         BAS   RE,RAN              SEARCH FOR REQUIRED RECORD                   
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
                                                                                
***********************************************************************         
* WRITE BACK LAST W_FILE RECORD READ - NEW RECORD IN PARM4            *         
***********************************************************************         
WRF      MVI   SKACTRL,0                                                        
         OC    SKFSTCI,SKFSTCI     MUST HAVE FILE DEFINED                       
         BZ    WRF010                                                           
         OC    SKADDR,SKADDR       MUST HAVE BLOCK DEFINED                      
         BZ    WRF010                                                           
         B     WRF020                                                           
WRF010   DC    H'0',C'INVALID W_FILE WRITE SEQUENCE '                           
*                                                                               
WRF020   LH    R1,SKLEN            MOVE REC BACK TO BUFFER                      
         LR    RF,R4                                                            
         AH    RF,SKDISP                                                        
         SR    RF,R1                                                            
         MOVE  ((RF),(R1)),(R3)                                                 
*                                                                               
         SAM31                                                                  
         USING SITABD,R1                                                        
         L     R1,FIWRHA                                                        
         CLC   SKADDR,SIT1STT      A(CI) WITHIN THE INDEX?                      
         BNL   *+6                                                              
         DC    H'0'                CAN'T BE                                     
         DROP  R1                                                               
         SAM24                                                                  
*                                                                               
         CLC   SKADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R4)                    
         MVC   PARM3(1),DMCB+8                                                  
         B     DMWRKFX                                                          
                                                                                
***********************************************************************         
* SPECIAL STATUS CHECK FOR ACTION C'SEN', WHICH COULD MEAN C'SEN(T)'  *         
* OR C'SEN(DING)'.  THE SENDING STATUS HAD NEVER BEEN SET BEFORE, DUE *         
* TO THE FACT THAT THE CODE ONLY CHECKS THE FIRST THREE CHARACTERS OF *         
* THE ACTION.  SO SENDING WOULD ALWAYS RESULT IN A SENT STATUS.       *         
***********************************************************************         
SEN      L     RE,PARM1            RE=A(W_FILE ACTION)                          
         CLC   =C'SEND',0(RE)      CHECK FOR 'SENDING'                          
         BNE   STA                 NO, THEN 'SENT'                              
         LARL  RF,ACTSEND          YES, POINT TO 'SENDING' ACTION ENTRY         
         MVC   SKACTN,0(RF)        SAVE THIS ACTION VALUE                       
         MVC   SAVADDR,8(RF)       SAVE A(ROUTINE REQUIRED)                     
                                                                                
***********************************************************************         
* CHANGE STATUS OF FILE DEFINED IN BUFFER BY SKFSTCI                  *         
* SET PARM1(1)=X'40' TO INHIBIT ENQUEUE/DEQUEUE.                      *         
***********************************************************************         
STA      MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   STA010                                                           
         DC    H'0',C'INVALID W_FILE STATUS SEQUENCE'                           
*                                                                               
STA010   MVC   FIWCIA,SKFSTCI                                                   
*                                                                               
         SAM31                                                                  
         BRAS  RE,FIRCN            A(CI) -> A(INDEX NODE) & REF#                
         BRAS  RE,FIRRLOCK         LOCK THE REPORT (ENQUEUE)                    
         SAM24                                                                  
*                                                                               
         BAS   RE,GETDATE          SET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
         XC    STPARM,STPARM       SET ACTION VALUES FOR STATUS CHANGE          
         MVC   STACTN,SKACTN                                                    
         MVI   STCTRL,X'23'        SET FILE AND INDEX CHANGE REQUIRED           
         TM    PARM1,X'40'                                                      
         BZ    *+8                                                              
         OI    STCTRL,X'40'        SET INHIBIT LOCK                             
         MVC   STFSTCI,SKFSTCI                                                  
         LA    RE,CXREC            USE CXREC AS I/O BUFFER                      
         ST    RE,STBUFFA                                                       
*                                                                               
         BAS   RE,STAT             GOTO STATUS CHANGE ROUTINE                   
         MVC   PARM3(1),DMCB+8                                                  
*                                                                               
         SAM31                                                                  
         BRAS  RE,FIRRUNLK         UNLOCK THE REPORT (DEQUEUE)                  
         SAM24                                                                  
*                                                                               
         B     DMWRKFX                                                          
         EJECT                                                                  
***********************************************************************         
* CHANGE ATTRIBUTES OF FILE DEFINED IN BUFFER BY SKFSTCI              *         
***********************************************************************         
ATT      MVI   SKACTRL,0           FILE MUST BE DEFINED                         
         OC    SKFSTCI,SKFSTCI                                                  
         BNZ   ATT010                                                           
         DC    H'0',C'INVALID W_FILE ATTRIBUTE CHANGE '                         
*                                                                               
ATT010   MVC   CIADDR,SKFSTCI      READ FIRST CI REC INTO CXREC                 
         MVC   FIWCIA,SKFSTCI                                                   
*                                                                               
         SAM31                                                                  
         BRAS  RE,FIRCN                                                         
         BRAS  RE,FIRRLOCK         LOCK THE REPORT (ENQUEUE)                    
         SAM24                                                                  
*                                                                               
         LA    R5,CXREC                                                         
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         MVC   PARM3(1),DMCB+8                                                  
         CLI   DMCB+8,0                                                         
         BNE   ATTX                                                             
*                                                                               
         CLI   SKACTN,ACTNDES      SET DESCRIPTION DATA                         
         BNE   ATT020                                                           
         MVC   W_DESC,WLDESC                                                    
         B     ATT050                                                           
*                                                                               
ATT020   CLI   SKACTN,ACTNREL      SET LIVE RETAIN HOURS                        
         BNE   ATT030                                                           
         MVC   W_RETNL,WLRETNL                                                  
         B     ATT050                                                           
*                                                                               
ATT030   CLI   SKACTN,ACTNRED      SET DEAD RETAIN HOURS                        
         BNE   ATT040                                                           
         MVC   W_RETND,WLRETND                                                  
         B     ATT050                                                           
*                                                                               
ATT040   DC    H'0'                UNKNOWN ATTRIBUTE                            
*                                                                               
ATT050   CLC   CIADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,CIADDR,(R5)                    
         MVC   PARM3(1),DMCB+8                                                  
*                                                                               
ATTX     SAM31                                                                  
         BRAS  RE,FIRRUNLK         UNLOCK THE REPORT (DEQUEUE)                  
         SAM24                                                                  
*                                                                               
         B     DMWRKFX                                                          
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO READ FIRST RECORD IN A W_FILE CONTROL INTERVAL        *         
***********************************************************************         
RDFFST   NTR1  ,                   READ FIRST FILE RECORD                       
         MVI   RDFP,1                                                           
         B     RDFFST0                                                          
RDFADD   NTR1  ,                   READ FIRST FILE RECORD FOR ADD               
         MVI   RDFP,0                                                           
         B     RDFFST0                                                          
*                                                                               
RDFFST0  MVI   DMCB+8,0                                                         
         LR    R5,R0               R0=A(BUFFER) & CIADDR GIVES CI               
         SR    R7,R4                                                            
         AR    R7,R0                                                            
*                                                                               
         MVC   SKADDR,CIADDR       SET FILE ADDR IN BUFFER                      
         MVC   SKSTRCI,CIADDR      SET START OF THIS CI                         
*                                                                               
         SAM31                                                                  
         MVC   CIADDRX,FIWCIA      SAVE                                         
         MVC   FIWCIA,SKSTRCI                                                   
         BRAS  RE,FIRFL            CONVERT FIRST D/A TO LAST D/A                
         MVC   SKENDCI,FIWCIA      LAST DISK ADDRESS FOR THIS CI                
         MVC   FIWCIA,CIADDRX      RESTORE                                      
         MVC   CIADDRX,SKENDCI                                                  
         SAM24                                                                  
*                                                                               
         CLI   RDFP,0                                                           
         BE    RDFFST2                                                          
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BE    RDFFST2                                                          
         XC    SKADDR,SKADDR       RESET FILE ADDR ON ERROR                     
         B     RDFFSTX                                                          
*                                                                               
RDFFST2  XC    SKRECS,SKRECS       INIT RECORDS READ                            
         MVC   SKNXTCI(2),W_CINEXT SET START OF NEXT CI                         
         MVC   SKNXTCI+2(2),=X'0100'                                            
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LLH   R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    RDFFST4                                                          
         LLH   R0,CJTRKS                                                        
RDFFST4  AR    RF,R0                                                            
         BCTR  RF,0                                                             
         SLL   RF,16                                                            
         ST    RF,SKENDCI          SET END OF THIS CI                           
         MVC   SKENDCI+2(1),CIHIREC+1                                           
         LA    RF,W_DATA-W_INDEX                                                
         CLC   CIADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,W_DATA1-W_INDEX                                               
         STH   RF,SKDISP                                                        
         XC    SKLEN,SKLEN                                                      
*                                                                               
RDFFSTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO READ NEXT RECORD IN A W_FILE FILE                     *         
***********************************************************************         
RDFNXT   NTR1  ,                   READ NEXT FILE RECORD                        
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
*                                                                               
RDFNXT0  LR    RE,R5               POINT TO NEXT REC IN BUFFER                  
         AH    RE,SKDISP                                                        
         MVC   SKLEN,0(RE)         SAVE LENGTH OF REC IN BUFFER                 
         LH    R1,SKLEN                                                         
         CLC   0(2,RE),=H'1'                                                    
         BE    RDFNXT8             END OF FILE                                  
         BL    RDFNXT4             END OF BLOCK                                 
*                                                                               
RDFNXT1  TM    PARM1,X'01'         TEST IF CALLER WANTS REC LEN                 
         BZ    *+12                                                             
         L     RF,APARM            YES RETURN IN DMCB+6(2)                      
         STH   R1,22(RF)                                                        
         TM    PARM1,X'02'         DOES CALLER ONLY WANT CIREC                  
         BO    RDFNXTX                                                          
         MOVE  ((R3),(R1)),(RE)    MOVE V/L REC TO CALLERS PARM4                
         B     RDFNXT3                                                          
*                                                                               
RDFNXT3  LH    R1,SKLEN            BUMP BUFFER DISPLACEMENT                     
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP                                                        
         L     R1,SKRECS           BUMP LINE COUNT                              
         LA    R1,1(R1)                                                         
         ST    R1,SKRECS                                                        
         B     RDFNXTX                                                          
*                                                                               
RDFNXT3A L     R1,SKRECS           BUMP RECORD COUNT                            
         LA    R1,1(R1)                                                         
         ST    R1,SKRECS                                                        
         B     RDFNXTX                                                          
*                                                                               
RDFNXT4  SR    RF,RF               BUMP TO NEXT BLOCK                           
         IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   RDFNXT6                                                          
*                                                                               
         ICM   RF,3,SKADDR         BUMP TO NEXT TRACK                           
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
*                                                                               
         CLM   RF,3,SKENDCI                                                     
         BNH   RDFNXT6                                                          
         MVC   SKSTRCI,SKNXTCI     BUMP TO NEXT CI                              
         MVC   SKADDR,SKNXTCI                                                   
         SR    RF,RF                                                            
         ICM   RF,3,SKADDR                                                      
         BZ    RDFNXTA                                                          
         LLH   R0,CITRKS                                                        
         CLM   RF,3,CJSTTRK                                                     
         BL    RDFNXT5                                                          
         LLH   R0,CJTRKS                                                        
RDFNXT5  AR    RF,R0                                                            
         BCTR  RF,0                                                             
         STH   RF,SKENDCI                                                       
*                                                                               
RDFNXT6  GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,SKADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   RDFNXTA+4                                                        
         LA    RF,W_DATA-W_INDEX                                                
         CLC   SKADDR,SKFSTCI                                                   
         BNE   *+8                                                              
         LA    RF,W_DATA1-W_INDEX                                               
         STH   RF,SKDISP                                                        
         CLC   SKADDR,SKNXTCI      IS THIS FIRST REC OF CI                      
         BNE   RDFNXT0             NO                                           
         MVC   SKNXTCI(2),W_CINEXT YES SAVE START OF NEXT CI                    
         B     RDFNXT0                                                          
*                                                                               
RDFNXT8  MVI   DMCB+8,X'90'        SET EOF                                      
         B     RDFNXTB                                                          
RDFNXTA  MVI   DMCB+8,X'41'        FORMAT ERROR                                 
         CLI   SKACTN,ACTNREA                                                   
         BNE   *+10                                                             
         XC    SKFSTCI,SKFSTCI     RESET FOR NO I/O                             
RDFNXTB  XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
*                                                                               
RDFNXTX  CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO READ RANDOM W_FILE RECORDS                            *         
***********************************************************************         
RAN      NTR1                                                                   
         LR    R5,R4                                                            
         MVI   DMCB+8,0                                                         
         CLI   FUL,0                                                            
         BNE   RANE                TEST SILLY RECORD NUMBER                     
         OC    FUL,FUL                                                          
         BZ    RAN2A               SPECIAL CODE FOR RECORD ZERO                 
*                                                                               
RAN2     OC    SKADDR,SKADDR       READ FIRST BLOCK AND INITIALISE              
         BNZ   RAN4                                                             
RAN2A    LR    R0,R4               USE CALLERS BUFFER                           
         MVC   CIADDR,SKFSTCI                                                   
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
         LR    R1,R7               COPY SAVE INTO CXREC BUFFER                  
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
         OC    FUL,FUL                                                          
         BNZ   RAN4                                                             
         MVC   0(8,R3),SOFLAB     RETURN HEADER RECORD IF FUL=ZERO              
         MVC   WLINDEX,W_INDEX                                                  
         MVC   WLBATTR,W_BATTR                                                  
         MVC   WLDATA,W_DATA                                                    
         B     RANX                                                             
*                                                                               
RAN4     L     R0,FUL                                                           
         BCTR  R0,0                                                             
         C     R0,SKRECS                                                        
         BNE   RAN4B                                                            
         BAS   RE,RDFNXT           RECNUM IS ONE HIGHER THAN PREV               
         BE    RANX                                                             
         TM    DMCB+8,X'90'                                                     
         BO    RANE                                                             
         B     RANG                                                             
*                                                                               
RAN4B    LA    R0,1                TEST IF RECORD IN BUFFER                     
         CLC   SKADDR,SKFSTCI                                                   
         BE    RAN4C                                                            
         ICM   R0,15,W_RECS        R0 IS LOW RECORD/PAGE                        
RAN4C    C     R0,FUL              TEST LOW RECORD WITH REQUIRED                
         BH    RAN4E                                                            
         ICM   R0,15,W_RECH        R0 IS HIGH RECORD                            
RAN4D    C     R0,FUL              TEST HIGH RECORD WITH REQUIRED               
         BNL   RANC                RECORD IS IN THIS BLOCK                      
RAN4E    CLC   SKADDR,SKFSTCI                                                   
         BE    RAN4F                                                            
         XC    SKADDR,SKADDR       RECORD NOT IN BLOCK SO READ FIRST            
         B     RAN2                                                             
RAN4F    SR    R0,R0               GET MAX RECORDS FROM 1ST BLOCK               
         ICM   R0,15,W_RECS                                                     
         C     R0,FUL              TEST MAX RECORD WITH REQUIRED                
         BL    RANE                                                             
         LR    R1,R7               COPY SAVE INTO CXREC BUFFER                  
         SR    R1,R4                                                            
         LA    RE,CXREC(R1)                                                     
         MVC   0(SKEND-SKBCTRL,RE),0(R7)                                        
*                                                                               
RAN6     OC    SKNXTCI(2),SKNXTCI  CALLERS BUFFER HAS FIRST CI REC              
         BZ    RAN8                                                             
         LA    R0,CXREC            READ FIRST REC IN NEXT CI INTO CXREC         
         MVC   CIADDR,SKNXTCI                                                   
         BAS   RE,RDFFST                                                        
         BNE   RANG                                                             
         SR    R0,R0               R0 CONTAINS LOW RECORD NEXT CI               
         ICM   R0,15,CXREC+W_RECS-W_INDEX                                       
RAN6A    C     R0,FUL                                                           
         BH    RAN8                                                             
RAN6B    LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LR    R1,R7                                                            
         SR    R1,R4                                                            
         LA    R1,SKEND-SKBCTRL(R1)                                             
         MOVE  ((RF),(R1)),(RE)                                                 
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
RAN6C    C     R0,FUL                                                           
         BE    RANC                RECORD IS IN 1ST BLOCK OF THIS CI            
         B     RAN6                                                             
*                                                                               
RAN8     CLC   SKADDR(2),SKENDCI   CALLERS BUFFER HAS THE HOME CI               
         BE    RANA                                                             
         MVC   CIADDR,SKADDR       BUMP TO NEXT TRACK                           
         SR    RF,RF                                                            
         ICM   RF,3,CIADDR                                                      
         LA    RF,1(RF)                                                         
         STH   RF,CIADDR                                                        
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,CXREC                  
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
*                                                                               
         CLC   W_USRID(10),CXREC+W_USRID-W_INDEX                                
         BNE   RANA                                                             
         CLC   W_CLASS,CXREC+W_CLASS-W_INDEX                                    
         BNE   RANA                                                             
*                                                                               
         SR    R0,R0               SET RO TO LOW RECORD IN BLOCK                
         ICM   R0,15,CXREC+W_RECS-W_INDEX                                       
RAN8A    C     R0,FUL                                                           
         BH    RANA                                                             
RAN8B    MVC   SKADDR,CIADDR                                                    
         LR    RF,R4               COPY CXREC INTO CALLERS BUFFER               
         LA    RE,CXREC                                                         
         LH    R1,CIBLKLN                                                       
         MOVE  ((RF),(R1)),(RE)                                                 
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
RAN8C    C     R0,FUL              REC IS IN 1ST BLOCK OF THIS TRK              
         BE    RANC                                                             
         B     RAN8                                                             
*                                                                               
RANA     LA    R0,1                CALLERS BUFFER HAS THE HOME TRK              
         CLC   SKADDR,SKFSTCI                                                   
         BE    RANA2                                                            
         ICM   R0,15,W_RECS        SET R0 TO HIGH PAGE/RECORD                   
RANA2    C     R0,FUL                                                           
         BH    RANA4                                                            
         SR    R0,R0                                                            
         ICM   R0,15,W_RECH        SET R0 TO LOW PAGE/RECORD                    
RANA3    C     R0,FUL                                                           
         BNL   RANC                RECORD IS IN THIS BLOCK                      
RANA4    IC    RF,SKADDR+2                                                      
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CLC   SKADDR+2(1),SKENDCI+2                                            
         BH    RANF                                                             
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,SKADDR,(R4)                   
         CLI   DMCB+8,0                                                         
         BNE   RANG                                                             
         B     RANA                                                             
*                                                                               
RANC     LA    R0,1                CALLERS BUFFER HAS THE HOME BLOCK            
         LA    RE,W_DATA1                                                       
         XC    SKRECS,SKRECS                                                    
         CLC   SKADDR,SKFSTCI      TEST FOR FIRST BLOCK IN FILE                 
         BE    RANC0                                                            
         LA    RE,W_DATA                                                        
         ICM   R0,15,W_RECS        R0 IS LOW PAGE/RECORD IN BLOCK               
         ST    R0,SKRECS                                                        
RANC0    L     R1,FUL                                                           
         SR    R1,R0                                                            
         LA    R1,1(R1)            R1=RELATIVE REC NUM (FIRST=1)                
*                                                                               
RANC1    MVC   HALF,0(RE)          SEARCH FOR NTH RECORD BLOCK                  
         LH    R0,HALF                                                          
         CH    R0,=H'1'                                                         
         BNH   RANF                FORMAT ERROR ON END OF BLOCK                 
RANC2    SH    R1,=H'1'            DECR RECORD NUMBER IN BLOCK                  
         BZ    RANC5                                                            
         AR    RE,R0               BUMP TO NEXT RECORD IN BLOCK                 
         B     RANC1                                                            
*                                                                               
RANC5    MVC   SKLEN,0(RE)         SAVE LEN OF RECORD                           
         LH    R1,SKLEN                                                         
         CLC   0(2,RE),=H'1'                                                    
         BNH   RANF                FORMAT ERROR IF END OF BLOCK                 
         LA    R0,0(RE,R1)         SAVE DISPLACEMENT OF NEXT REC                
         SR    R0,R4                                                            
         STH   R0,SKDISP                                                        
*                                                                               
RANC6    MVC   SKRECS,FUL                                                       
*                                                                               
RAND     TM    PARM1,X'01'         TEST IF CALLER WANTS REC LEN                 
         BZ    *+12                                                             
         L     RF,APARM            YES RETURN LEN IN DMCB+6(2)                  
         STH   R1,22(RF)                                                        
         MOVE  ((R3),(R1)),(RE)    MOVE V/L REC TO CALLERS PARM4                
         B     RANX                                                             
*                                                                               
RANE     MVI   DMCB+8,X'90'        SET EOF/NOTFOUND                             
         B     RANH                                                             
RANF     MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     RANH                                                             
RANG     EQU   *                   SET DISK ERROR                               
*                                                                               
RANH     XC    SKADDR,SKADDR       RESET FOR FIRST I/O                          
         B     RANX                                                             
*                                                                               
RANX     CLI   DMCB+8,0                                                         
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO CHANGE STATUS OF FILE - DRIVEN BY STPARM VALUES       *         
***********************************************************************         
STAT     NTR1                                                                   
         MVI   DMCB+8,0            SET RETURN DATAMGR CODE                      
         MVI   STFLAG,0                                                         
*                                                                               
         CLI   STACTN,0            SET NI/OI BITS IF ACTION SET                 
         BNE   STAT010                                                          
         TM    STVAL,W_STLIVE                                                   
         BZ    *+8                                                              
         OI    STFLAG,X'80'        SET FLAG FOR LIVE FILE                       
         TM    STVAL,W_STDEAD                                                   
         BZ    *+12                                                             
         OI    STFLAG,X'40'        SET FLAG FOR DEAD FILE                       
         MVI   STINFO+3,X'FF'      SET INFO TO UPDATE RETAIN INFO               
         B     STAT150                                                          
*                                                                               
STAT010  CLI   STACTN,ACTNACT      TEST SET STATUS TO ACTIVE                    
         BNE   STAT020                                                          
         MVI   STNI,255-W_STDEAD-W_STHO-W_STRUN-W_STPR                          
         MVI   STOI,W_STAC                                                      
         OI    STFLAG,X'80'        SET LIVE FLAG                                
         B     STAT144                                                          
*                                                                               
STAT020  CLI   STACTN,ACTNHOL      TEST SET STATUS TO HOLD                      
         BNE   STAT030                                                          
         MVI   STNI,255-W_STDEAD-W_STAC-W_STRUN-W_STPR                          
         MVI   STOI,W_STHO                                                      
         OI    STFLAG,X'80'        SET LIVE FLAG                                
         B     STAT144                                                          
*                                                                               
STAT030  CLI   STACTN,ACTNDEL      TEST SET STATUS TO DELETED                   
         BNE   STAT040                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STDL                                                      
         OI    STFLAG,X'10'        SET DELETED FLAG                             
         B     STAT144                                                          
*                                                                               
STAT040  CLI   STACTN,ACTNSEN      TEST SET STATUS TO SENT                      
         BNE   STAT050                                                          
         MVI   STNI,255-W_STLIVE-W_STSEN                                        
         MVI   STOI,W_STSE                                                      
         OI    STFLAG,X'40'        SET DEAD FLAG                                
         MVI   STINFO+3,X'FF'      SET INFO TO UPDATE RETAIN INFO               
         B     STAT144                                                          
*                                                                               
STAT050  CLI   STACTN,ACTNKEE      TEST SET STATUS TO KEEP                      
         BNE   STAT060                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STKE                                                      
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT150                                                          
*                                                                               
STAT060  CLI   STACTN,ACTNPRO      TEST SET STATUS TO PROCESSED                 
         BNE   STAT070                                                          
         MVI   STNI,255-W_STRUN                                                 
         MVI   STOI,W_STPR                                                      
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT150                                                          
*                                                                               
STAT070  CLI   STACTN,ACTNRUN      TEST SET STATUS TO RUNNING                   
         BNE   STAT080                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STRUN                                                     
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT150                                                          
*                                                                               
STAT080  CLI   STACTN,ACTNSNG      TEST SET STATUS TO SENDING                   
         BNE   STAT090                                                          
         MVI   STNI,255                                                         
         MVI   STOI,W_STSEN                                                     
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT150                                                          
*                                                                               
STAT090  CLI   STACTN,ACTNUNK      TEST SET STATUS TO UNKEEP                    
         BNE   STAT100                                                          
         MVI   STNI,255-W_STKE                                                  
         MVI   STOI,0                                                           
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         B     STAT150                                                          
*                                                                               
STAT100  CLI   STACTN,ACTNPUR      TEST SET STATUS TO PURGED                    
         BNE   STAT110                                                          
         MVI   STNI,0                                                           
         MVI   STOI,0                                                           
         B     STAT150                                                          
*                                                                               
STAT110  CLI   STACTN,ACTNRET      TEST SET NEW RETAIN INFO                     
         BNE   STAT130                                                          
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         OI    STFLAG,X'20'        SET SUB STATUS FLAG                          
         MVC   STINFO(2),UKINFO    GET RETAIN INFO FROM USER KEY                
         MVC   STINFO+2(1),UKFLAG                                               
         OC    STINFO(3),STINFO                                                 
         BNZ   STAT120                                                          
         DC    H'0',C'INVALID RETAIN DATE/TIME'                                 
STAT120  TM    STINFO+2,UKFLHRS    TEST IF PASSING HOURS                        
         BZ    STAT150                                                          
         MVC   DUB(3),DATEC        SET DATEC/TIMEI NOW                          
         MVC   DUB+3(2),STINFO     SET PASSED HOURS                             
         MVI   DUB+5,0                                                          
         BRAS  RE,GETRETN          COMPUTE NEW RETAIN INFO                      
         MVC   STINFO(3),DUB1                                                   
         B     STAT150                                                          
*                                                                               
STAT130  CLI   STACTN,ACTNUDAT     TEST SET UDATA IN INDEX                      
         BNE   STAT140                                                          
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         MVC   STINFO(1),UKINFO    GET USER DATA FROM USER KEY                  
         B     STAT150                                                          
*                                                                               
STAT140  CLI   STACTN,ACTNNCD      CODE NEW NCD OCD STATS CHANGE HERE           
         BNE   STAT141                                                          
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         B     STAT150                                                          
*                                                                               
STAT141  CLI   STACTN,ACTNOCD                                                   
         BNE   STAT143                                                          
         MVI   STNI,255                                                         
         MVI   STOI,0                                                           
         B     STAT150                                                          
*                                                                               
STAT143  DC    H'0'                INVALID ACTION                               
*                                                                               
STAT144  L     RE,PARM1            TEST FOR C'...RET' IN ACTION NAME            
         CLC   3(3,RE),=C'RET'                                                  
         BNE   *+10                                                             
         MVC   STINFO(3),=C'RET'   SET INFO TO UPDATE RETAIN INFO               
*                                                                               
STAT150  XC    BADCNDX,BADCNDX     CLEAR BAD FILE DATA                          
         XC    BADXNDX,BADXNDX                                                  
*                                                                               
         TM    STCTRL,X'01'        SET STATUS IN FILE RECORDS                   
         BZ    STAT400             NO: JUST LOOK AT INDEX                       
                                                                                
***********************************************************************         
* UPDATE FILE                                                         *         
***********************************************************************         
         L     R5,STBUFFA          R5=A(I/O BUFFER FOR FILE RECS)               
         LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         MVC   0(2,R6),STFSTCI                                                  
         MVC   2(2,R6),FFS                                                      
         MVC   SVNEXT(2),STFSTCI                                                
         MVC   SVNEXT+2(2),=X'0100'                                             
         GOTO1 ,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                          
         TM    STCTRL,X'20'        TEST IF NATIVE CALL FROM USER                
         BZ    STAT160                                                          
         CLC   SVNEXT,SKADDR       TEST IF FIRST REC IN USERS BUFFER            
         BNE   STAT160                                                          
         MVC   CIADDR,SVNEXT       COPY USERS BUFFER INTO CXREC                 
         LH    R1,CIBLKLN                                                       
         LR    RF,R5                                                            
         LR    RE,R4                                                            
         MOVE  ((RF),(R1)),(RE)                                                 
         B     STAT170                                                          
*                                                                               
STAT160  OC    SVNEXT(2),SVNEXT    READ FIRST REC OF NEXT CI                    
         BZ    STAT400                                                          
         MVC   CIADDR,SVNEXT                                                    
         MVC   0(2,R6),CIADDR      SAVE CI ADDR IN CASE OF ERROR                
         MVC   2(2,R6),FFS                                                      
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD)                                      
         CLI   DMCB+8,0                                                         
         BNE   STAT230                                                          
*                                                                               
STAT170  CLC   CIADDR(2),STFSTCI   SAVE FIRST CI VALUES                         
         BNE   STAT200                                                          
*                                                                               
         TM    W_ATTB,W_ATNCD      FILE HAS NEW COMPRESSED DATES?               
         BZ    STAT170A            NO: SKIP                                     
         CLI   DATEMODE,DATENEW    YES: WE WANT NEW COMPRESSED DATES?           
         BE    STAT170B            YES: FILE HAS NEW, WE WANT NEW               
         MVI   DATEMODE,DATENEW    SET NEW DATE MODE                            
         MVC   DATEC,DATECN        USE NEW COMPRESSED DATE                      
         MVI   STINFO+3,X'FF'      SET INFO TO UPDATE RETAIN INFO               
         B     STAT170B                                                         
                                                                                
STAT170A CLI   DATEMODE,DATEOLD    WE WANT OLD COMPRESSED DATES?                
         BE    STAT170B            YES: FILE HAS OLD, WE WANT OLD               
         MVI   DATEMODE,DATEOLD    SET MODE                                     
         MVC   DATEC,DATECO        USE OLD COMPRESSED DATE                      
         MVI   STINFO+3,X'FF'      SET INFO TO UPDATE RETAIN INFO               
*                                                                               
STAT170B MVC   SVDATA,W_INDEX      SVDATA CONTAINS INDEX OF 1ST CI              
         SR    RE,RE                                                            
         IC    RE,W_SEQ                                                         
         SH    RE,=H'1'                                                         
         STC   RE,SVSEQ            SVSEQ CONTAINS PREVIOUS CI SEQ NUM           
*                                                                               
STAT180  XC    DUB,DUB             SAVE RETENTION INFO                          
         TM    STFLAG,X'10'        TEST IF SETTING TO DELETED                   
         BO    STAT188             NO                                           
         TM    STFLAG,X'C0'        TEST IF SETTING TO LIVE/DEAD                 
         BZ    STAT200             NO                                           
         CLC   STINFO(3),=C'RET'   YES TEST IF NEW RETAIN REQUIRED              
         BNE   STAT200                                                          
         MVC   DUB+0(3),DATEC      SET DATEC/TIMEI NOW                          
         MVC   DUB+3(2),W_RETNL    SET LIVE RETENTION                           
         TM    STFLAG,X'80'                                                     
         BO    STAT190                                                          
         MVC   DUB+3(2),W_RETND    SET DEAD RETENTION                           
         B     STAT190                                                          
*                                                                               
STAT188  MVC   DUB+3(2),=X'0018'   SET 24 HOURS FOR DELETED                     
STAT190  MVI   DUB+5,0             SET GO FORWARD                               
         BRAS  RE,GETRETN          COMPUTE NEW RETAIN INFO                      
*                                                                               
STAT200  IC    RE,SVSEQ            BUMP SAVED PREVIOUS CI SEQ NUM               
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         CLC   W_SEQ,SVSEQ         CHECK CI SEQ NUM IS ONE HIGHER               
         BE    STAT216                                                          
         TM    W_ATTB,W_ATXCI      TEST THIS IS XTNSN CI                        
         BZ    STAT220                                                          
         CLI   SVSEQ,LASTSEQP      LAST NORMAL SHOULD BE 255                    
         BNE   STAT220                                                          
         CLI   W_SEQ,FRSTXTN       FIRST XTNSN SHOULD BE 2                      
         BNE   STAT220                                                          
         MVI   SVSEQ,FRSTXTN                                                    
*                                                                               
STAT216  CLC   W_KEY,SVKEY         CHECK SAME KEY                               
         BE    STAT222                                                          
*                                                                               
STAT220  MVI   DMCB+8,X'41'        SET FORMAT ERROR                             
         B     STAT230                                                          
*                                                                               
STAT222  MVC   SVNEXT(2),W_CINEXT  BUILD CI ADDR LIST                           
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         B     STAT240                                                          
*                                                                               
STAT230  OI    STFLAG,X'08'        ERROR ON FILE IO                             
         CLI   DMCB+8,X'41'                                                     
         BE    *+8                                                              
         OI    STFLAG,X'04'        SET FLAG FOR DISK ERR                        
         MVC   BADCNDX,W_INDEX     SAVE THE BAD CI INDEX DATA                   
         BRAS  RE,LOGERR           LOG THE ERROR                                
         LA    RE,STCIAS                                                        
         XC    SVDATA,SVDATA       PURGE INDEX ENTRY ON ERROR                   
         MVC   2(2,RE),FFS         ADJUST LIST SO ONLY ONE CI                   
         B     STAT400             GO AND DO INDEX                              
*                                                                               
STAT240  CLI   STACTN,0            SET NEW STATUS FROM VALUE                    
         BNE   *+14                                                             
         MVC   W_STAT,STVAL                                                     
         B     STAT250                                                          
         NC    W_STAT,STNI         SET NEW STATUS FROM ACTION                   
         OC    W_STAT,STOI                                                      
*                                                                               
STAT250  CLI   W_STAT,W_STPU       TEST IF NEW STATUS PURGED                    
         BNE   STAT260                                                          
         XC    W_INDEX,W_INDEX     CLEAR WHOLE INDEX ENTRY                      
         MVI   SVDATA+W_STAT-W_INDEX,W_STPU                                     
         B     STAT300                                                          
*                                                                               
STAT260  TM    STFLAG,X'C0'        TEST IF NEW STATUS LIVE/DEAD                 
         BZ    STAT270                                                          
         OC    DUB(2),DUB          TEST IF NEW RETAIN REQUIRED                  
         BZ    STAT270                                                          
         MVC   W_AGERD(3),DUB1     SET NEW COMPUTED RETAIN INFO                 
*                                                                               
STAT270  CLI   STACTN,ACTNRET      TEST IF SETTING NEW RETAIN                   
         BNE   STAT280                                                          
         MVC   W_AGERD(3),STINFO   SET PASSED RETAIN INFO                       
         CLC   W_AGERD,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT290                                                          
                                                                                
*** THIS IS TEMPORARY AND NEEDS TO BE REMOVED AT SOME POINT.  RIGHT NOW         
*** CALLS TO DMWRKF TO SET THE RETENTION ARE DONE BY PASSING OLD                
*** COMPRESSED DATES, BUT WE WILL WANT TO CHANGE THAT, AND THIS CODE            
*** IS TO SUPPORT PASSING NEW COMPRESSED DATES.  WHEN THE DATES HAVE            
*** BEEN FULLY CONVERTED WE SHOULD LOOK TO REMOVE THIS CODE.                    
         CLI   DATEMODE,DATEOLD    DO WE NEED OLD DATES?                        
         BNE   STAT270A            NO                                           
         TM    W_AGERD,X'80'       DID THE CALLER PASS AN OLD DATE?             
         BO    STAT290             YES: WE ARE GOOD                             
         GOTO1 VDATCON,DUB2,(14,W_AGERD),(2,W_AGERD) ELSE CONVERT               
         B     STAT290                                                          
STAT270A CLI   DATEMODE,DATENEW    DO WE NEED NEW DATES?                        
         BNE   STAT290             NO                                           
         TM    W_AGERD,X'80'       DID THE CALLER PASS A NEW DATE?              
         BZ    STAT290             YES: WE ARE GOOD                             
         GOTO1 VDATCON,DUB2,(2,W_AGERD),(30,W_AGERD) ELSE CONVERT               
         B     STAT290                                                          
*                                                                               
STAT280  CLI   STACTN,ACTNUDAT     TEST IF SETTING USER INDEX DATA              
         BNE   STAT285                                                          
         MVC   W_UDATA,STINFO      SET PASSED USER DATA                         
         B     STAT290                                                          
*                                                                               
STAT285  CLI   STACTN,ACTNNCD      SET NEW COMP DATES                           
         BNE   STAT286                                                          
         TM    W_ATTB,W_ATNCD      ALREADY DONE                                 
         BO    STAT290                                                          
         CLC   W_AGELD,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT285A                                                         
         GOTO1 VDATCON,DUB2,(2,W_AGELD),(30,W_AGELD)                            
STAT285A CLC   W_AGERD,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT285B                                                         
         GOTO1 VDATCON,DUB2,(2,W_AGERD),(30,W_AGERD)                            
STAT285B CLI   W_SEQ,1                                                          
         BH    STAT285D                                                         
         CLC   W_DATEL,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT285C                                                         
         GOTO1 VDATCON,DUB2,(2,W_DATEL),(30,W_DATEL)                            
STAT285C OC    W_DATED,W_DATED                                                  
         JZ    STAT285D                                                         
         CLC   W_DATED,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT285D                                                         
         GOTO1 VDATCON,DUB2,(2,W_DATED),(30,W_DATED)                            
STAT285D OI    W_ATTB,W_ATNCD                                                   
         B     STAT290                                                          
*                                                                               
STAT286  CLI   STACTN,ACTNOCD      SET OLD COMP DATES                           
         BNE   STAT290                                                          
         TM    W_ATTB,W_ATNCD      ALREADY DONE                                 
         BNO   STAT290                                                          
         CLC   W_AGELD,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT286A                                                         
         GOTO1 VDATCON,DUB2,(14,W_AGELD),(2,W_AGELD)                            
STAT286A CLC   W_AGERD,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT286B                                                         
         GOTO1 VDATCON,DUB2,(14,W_AGERD),(2,W_AGERD)                            
STAT286B CLI   W_SEQ,1                                                          
         BH    STAT286D                                                         
         CLC   W_DATEL,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT286C                                                         
         GOTO1 VDATCON,DUB2,(14,W_DATEL),(2,W_DATEL)                            
STAT286C OC    W_DATED,W_DATED                                                  
         JZ    STAT286D                                                         
         CLC   W_DATED,PERMDATE    IF PERMANENT, DON'T CONVERT                  
         BNL   STAT286D                                                         
         GOTO1 VDATCON,DUB2,(14,W_DATED),(2,W_DATED)                            
STAT286D NI    W_ATTB,255-W_ATNCD                                               
         B     STAT290                                                          
*                                                                               
STAT290  CLC   CIADDR(2),STFSTCI   TEST IF FIRST CI                             
         BNE   *+10                                                             
         MVC   SVDATA,W_INDEX      SVDATA CONTAINS UPDATED INDEX DATA           
*                                                                               
STAT300  CLC   CIADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         JNH   *+2                 DIE IF LOWER, MUST BE HIGHER                 
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BE    STAT160                                                          
         B     STAT230                                                          
                                                                                
***********************************************************************         
* NOW UPDATE INDEX                                                    *         
***********************************************************************         
STAT400  TM    STCTRL,X'02'        SET STATUS IN INDEX RECORDS?                 
         BZ    STATX               . NO NEED                                    
*                                                                               
STAT410  LA    R6,STCIAS           R6=A(LIST OF CI ADDRS)                       
         NI    STFLAG,X'FF'-X'01'  TURN OFF SWAPS BIT                           
STAT420  CLC   2(2,R6),FFS         SORT CI ADDRS INTO ASCENDING ORDER           
         BE    STAT440                                                          
         CLC   2(2,R6),0(R6)       COMPARE NEXT ENTRY TO THIS                   
         BNL   STAT430                                                          
         XC    2(2,R6),0(R6)       SWAP IF IN WRONG ORDER                       
         XC    0(2,R6),2(R6)                                                    
         XC    2(2,R6),0(R6)                                                    
         OI    STFLAG,X'01'                                                     
STAT430  LA    R6,2(R6)            BUMP TO NEXT CI ADDR                         
         B     STAT420                                                          
STAT440  TM    STFLAG,X'01'        DONE IF NO SWAPS THIS PASS                   
         BO    STAT410                                                          
         ST    R6,STCILAST         SAVE A(LAST ENTRY IN CI ADDR LIST)           
*                                                                               
         XC    FUL,FUL                                                          
         LA    R6,STCIAS           R6=A(SORTED LIST OF CI ADDRS)                
         CLC   2(2,R6),FFS         TEST IF ONLY ONE CI                          
         BE    STAT500             YES NO NEED TO RESERVE                       
         TM    STCTRL,X'80'        TEST CALL BY ADD                             
         BZ    STAT500             NO                                           
         L     R5,STCILAST         ADD MUST UPDATE FIRST CI LAST                
         MVC   2(2,R5),0(R6)                                                    
         MVC   4(2,R5),FFS         PUT FIRST CI AT END OF LIST                  
         MVC   CIADDR(2),0(R6)                                                  
         LA    R6,2(R6)                                                         
*                                                                               
STAT500  CLC   0(2,R6),FFS                                                      
         BE    STAT900                                                          
*                                                                               
         MVC   FIWCIA(2),0(R6)                                                  
         MVC   FIWCIA+2(2),=X'0100'                                             
         MVC   CIADDR,FIWCIA       GET CI ADDRESS                               
         LA    R5,FIWNDX           POINT TO INDEX                               
*                                                                               
         SAM31                                                                  
         BRAS  RE,FIRCN            CONVERT A(CI) TO A(NODE)                     
         BRAS  RE,FIRC1            IS THIS CI A PART1?                          
         L     RF,FIWNDA           SET INDEX FROM NODE                          
         BNE   *+14                                                             
         MVC   FIWNDX,SI1NDX-SI1PAR(RF)                                         
         B     *+10                                                             
         MVC   FIWNDX,SI2NDX-SI2PAR(RF)                                         
*                                                                               
         SAM24                                                                  
         MVC   SVSEQ,W_SEQ         SAVE INDEX ENTRY CI SEQ NUM                  
         MVC   SVTYPE,W_TYPE                                                    
         MVC   SVATTB,W_ATTB                                                    
         TM    W_STAT,W_STCRE                                                   
         BZ    STAT520                                                          
         CLI   W_AGERT,X'FE'                                                    
         BNE   STAT520                                                          
         TM    STFLAG,X'20'        TEST IF SUB STATUS OF CREATING FILE          
         BZ    STAT520                                                          
         MVC   W_STAT,SVDATA+W_STAT-W_INDEX                                     
         OI    W_STAT,W_STCRE                                                   
         B     STAT540                                                          
*                                                                               
STAT520  CLC   0(2,R6),STFSTCI     TEST IF FIRST INDEX ENTRY                    
         BNE   STAT530                                                          
         OC    SVKEY,SVKEY                                                      
         BZ    STAT530                                                          
         CLC   W_KEY,SVKEY         TEST KEY IN INDEX SAME AS KEY IN CI          
         BE    STAT530                                                          
         MVC   BADXNDX,W_INDEX                                                  
         OI    STFLAG,X'08'+X'02'  SET FORMAT ERROR ON INDEX                    
         BRAS  RE,LOGERR           LOG THE ERROR                                
         OC    W_KEY,W_KEY         TEST IF INDEX ENTRY PURGED (TYPE#1)          
         BNZ   *+12                IF SO WE WILL IGNORE THE ERROR               
         NI    STFLAG,X'FF'-X'08'-X'02'                                         
         B     STAT530                                                          
         MVC   2(2,R6),FFS         TRUNCATE THE LIST OF CI ADDRS                
         XC    SVDATA,SVDATA       SET TO PURGE INDEX ENTRY                     
*                                                                               
STAT530  MVC   W_INDEX,SVDATA      COPY INDEX ENTRY FROM FILE FIRST CI          
*                                                                               
STAT540  CLI   W_STAT,W_STPU       TEST IF PURGING A REPORT                     
         BNE   *+14                                                             
         XC    W_INDEX,W_INDEX     CLEAR INDEX ENTRY FOR PURGE                  
         B     STAT600                                                          
         TM    W_ATTB,W_ATXTN                                                   
         BZ    STAT550                                                          
         TM    SVATTB,W_ATXCI                                                   
         BZ    STAT550                                                          
         OI    W_ATTB,W_ATXCI                                                   
*                                                                               
STAT550  TM    STCTRL,X'80'        TEST IF CALL FROM ADD LOGIC                  
         BZ    STAT560             NO                                           
         CLC   CIADDR(2),STFSTCI   YES USE FIRST CI SEQ NUM IN INDEX            
         BE    STAT600                                                          
STAT560  MVC   W_SEQ,SVSEQ         RESTORE INDEX ENTRY CI SEQ NUM               
                                                                                
***********************************************************************         
* INDEX CHANGE FOR PART1 OR PART2                                     *         
***********************************************************************         
STAT600  SAM31                                                                  
         BRAS  RE,FIRC1            IS THIS CI A PART1?                          
         BNE   STAT700             NO: IT'S A PART2                             
                                                                                
***********************************************************************         
* PART1                                                               *         
***********************************************************************         
         CLI   W_STAT,W_STPU       IS THE PART1 BEING PURGED?                   
         BNE   STAT650             NO: UPDATE THE INDEX                         
*                                                                               
         L     RF,FIWNDA                                                        
         MVC   W_INDEX,SI1NDX-SI1PAR(RF)                                        
*                                                                               
         OC    SVDATA,SVDATA       IS THIS A PURGE DO TO FILE ERROR             
         BZ    STAT632             YES:                                         
         CLC   W_KEY(L'W_KEY+L'W_FILENO),SVDATA                                 
         BE    STAT632                                                          
         BRAS  RE,KM_P1M           ISSUE WARNING: PART1 MISMATCH                
*                                                                               
STAT632  CLI   W_STAT,W_STPU       IS IT ALREADY PURGED?                        
         BNE   STAT634             NO: GOOD, READY TO PURGE                     
         BRAS  RE,KM_P1P           YES: ISSUE WARNING                           
         B     STAT640             UPDATE INDEX                                 
*                                                                               
STAT634  BRAS  RE,FIRTLOCK         LOCK INDEX KEY TREE                          
         BRAS  RE,FIRDTN           DELETE NODE FROM INDEX TREE                  
         BE    STAT636             DELETED: ADD TO AVAILABLE QUEUE              
         BRAS  RE,FIRTUNLK         UNLOCK TREE                                  
         BRAS  RE,KM_KNF           KEY NOT FOUND IN TREE                        
         B     STAT640             UPDATE INDEX                                 
*                                                                               
STAT636  BRAS  RE,FIRTUNLK         UNLOCK INDEX KEY TREE                        
         BRAS  RE,FIR1LOCK         LOCK PART1 AVAILABLE QUEUE                   
         BRAS  RE,FIRADD1          ADD PART1 TO AVAILABLE QUEUE                 
         BRAS  RE,FIR1UNLK         UNLOCK PART1 AVAILABLE QUEUE                 
*                                                                               
STAT640  XC    W_INDEX,W_INDEX     CLEAR INDEX                                  
*                                                                               
         USING SI1PARD,RF                                                       
STAT650  L     RF,FIWNDA           A(PART1 INDEX NODE)                          
         MVC   SI1NDX,W_INDEX      SET PART1 INDEX                              
         B     STAT800                                                          
         DROP  RF                                                               
                                                                                
***********************************************************************         
* PART2                                                               *         
***********************************************************************         
STAT700  CLI   W_STAT,W_STPU       IS THE PART2 BEING PURGED?                   
         BNE   STAT750             NO: UPDATE THE INDEX                         
*                                                                               
         L     RF,FIWNDA           REMOVE FROM INDEX KEY TREE                   
         MVC   W_INDEX,SI2NDX-SI2PAR(RF)                                        
*                                                                               
         OC    SVDATA,SVDATA       IS THIS A PURGE DO TO FILE ERROR             
         BZ    STAT732             YES:                                         
         CLC   W_KEY(L'W_KEY+L'W_FILENO),SVDATA                                 
         BE    STAT732                                                          
         BRAS  RE,KM_P2M           WARNING: MISMATCH                            
*                                                                               
STAT732  CLI   W_STAT,W_STPU       IS IT ALREADY PURGED?                        
         BNE   STAT734             NO: GOOD, READY TO PURGE                     
         BRAS  RE,KM_P2P           YES: ISSUE WARNING                           
         B     STAT740                                                          
*                                                                               
STAT734  BRAS  RE,FIR2LOCK                                                      
         BRAS  RE,FIRADD2          ADD PART2 TO AVAILABLE QUEUE                 
         BRAS  RE,FIR2UNLK                                                      
*                                                                               
STAT740  XC    W_INDEX,W_INDEX     CLEAR INDEX                                  
*                                                                               
         USING SI2PARD,RF                                                       
STAT750  L     RF,FIWNDA           A(PART2 INDEX NODE)                          
         MVC   SI2NDX,W_INDEX      SET PART2 INDEX                              
         DROP  RF                                                               
                                                                                
***********************************************************************         
* NEXT CI                                                             *         
***********************************************************************         
STAT800  SAM24                                                                  
         LA    R6,2(R6)                                                         
         B     STAT500                                                          
                                                                                
***********************************************************************         
* END OF INDEX UPDATE                                                 *         
***********************************************************************         
STAT900  AHI   R6,-2                                                            
         LA    RF,STCIAS                                                        
         CR    RF,R6                                                            
         BE    *+20                                                             
         CLC   0(2,R6),0(RF)       ADJUST LIST IF FIRST CI IS LAST              
         BNE   *+10                                                             
         MVC   0(2,R6),FFS                                                      
*                                                                               
         TM    STFLAG,X'08'        TEST FOR FORMAT ERROR IN CI                  
         BZ    STATX                                                            
         MVI   DMCB+8,X'41'                                                     
         TM    STFLAG,X'04'        TEST FOR DISK ERROR IN CI                    
         BZ    STATX                                                            
         MVI   DMCB+8,X'40'                                                     
         B     STATX                                                            
*                                                                               
STATX    CLI   DMCB+8,0            SET CC TO EQL IF NO ERROR                    
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* ADD RECORDS TO W_FILE. PARM3 NOT DEFINED. FILE ATTRIBUTES IN PARM4  *         
*                                                                     *         
* FILE CAN BE CREATED BY 'OPEN' COMMAND, FOLLOWED BY SUCCESSIVE 'ADD' *         
* COMMANDS, WITH A FINAL 'CLOSE' COMMAND. ALTERNATIVELY A FILE CAN    *         
* BE CREATED BY A SUCCESSION OF 'DMPRINT' COMMANDS. IF THE FIRST CHRS *         
* ARE *SOFSOF* THEN AN OPEN IS ASSUMMED AND IF THE FIRST CHRS ARE     *         
* *EOFEOF THEN A CLOSE IS PERFORMED.                                  *         
*                                                                     *         
* CLO     IS USED TO DO A NORMAL CLOSE OF A FILE (OR *EOF)            *         
* CLO/PUR IS USED TO CLOSE AND PURGE A FILE BEING CREATED             *         
* CLO/ERR IS USED TO CLOSE A FILE THAT HAS ABENDED                    *         
* CLO/USR IS USED TO CLOSE A FILE AND PASS SOME USER DATA             *         
* CLO/USX IS USED TO CLOSE A FILE AND PASS SOME USER INDEX DATA       *         
***********************************************************************         
ADDPRT   CLC   WLSOFLAB,SOFLAB     FOR DMPRINT SOFSOF MEANS OPEN                
         BE    ADDOPN                                                           
*                                                                               
         CLC   WLSOFLAB(4),EOFLAB  FOR DMPRINT EOFEOF MEANS CLOSE               
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE IF CLO/ERR                   
         BNE   ADD                                                              
*                                                                               
         MVI   CLOTYP,CLOTNOR      SET NORMAL CLOSE                             
         CLC   WLSOFLAB,EOFLAB                                                  
         BE    ADDCLS1                                                          
         OI    CLOTYP,CLOTTMP      SET TEMP CLOSE                               
         CLC   WLSOFLAB,EOFTMP                                                  
         BE    ADDCLS1                                                          
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE                              
         CLC   WLSOFLAB,EOFERR                                                  
         BE    ADDCLS1                                                          
         DC    H'0'                *EOF UNRECOGNISED                            
*                                                                               
ADDERR   DC    H'0',C'INVALID SEQ FOR OPEN/CLOSE/ADD'                           
*                                                                               
ADDOPN   CLI   SKACTRL,0           TEST IF VALID OPEN COMMAND                   
         BNE   ADDERR                                                           
ADDOPN1  MVI   SKSCTRL,0           INITIALISE BUFFER FOR ADD                    
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         BAS   RE,OPN              OPEN NEW FILE                                
         B     ADDX                                                             
                                                                                
***********************************************************************         
* CLOSE THE FILE                                                      *         
***********************************************************************         
ADDCLS   MVI   CLOTYP,CLOTNOR      SET NORMAL CLOSE                             
         L     RE,PARM1                                                         
         CLC   0(7,RE),=C'CLO/PUR'                                              
         BNE   *+8                                                              
         MVI   CLOTYP,CLOTPUR      SET PURGE CLOSE IF CLO/PUR                   
         CLC   0(7,RE),=C'CLO/ERR'                                              
         BNE   *+8                                                              
         MVI   CLOTYP,CLOTERR      SET ERROR CLOSE IF CLO/ERR                   
         CLC   0(7,RE),=C'CLO/USR'                                              
         BNE   *+18                                                             
         MVI   CLOTYP,CLOTUSR      SET CLOSE WITH USER DATA                     
         L     RF,PARM3            AND SAVE USER DATA IN KEY AREA               
         MVC   CLOINF,UKUSRINF-UKRECD(RF)                                       
         CLC   0(7,RE),=C'CLO/USX'                                              
         BNE   *+18                                                             
         MVI   CLOTYP,CLOTUSX      SET CLOSE WITH USER INDEX DATA               
         L     RF,PARM3            AND SAVE USER DATA IN KEY AREA               
         MVC   SVUDATA,UKINFO-UKRECD(RF)                                        
*                                                                               
ADDCLS1  TM    SKACTRL,X'01'       EXIT IF NO FILE IS OPEN                      
         BZ    ADDX                                                             
         CLI   SKINTNO,0           MUST HAVE WRKF FILE IN BUFFER                
         BE    ADDERR                                                           
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   USERXNUM,SKEXTNO                                                 
         BNE   ADDERR              DOUBLE CHECK BUFFER OK                       
         BAS   RE,SETWKR                                                        
         OI    SKACTRL,X'04'                                                    
         LR    R5,R4                                                            
*                                                                               
ADDCLS3  LR    RF,R4               WRITE LAST BLOCK WITH EOF RECORD             
         AH    RF,SKDISP                                                        
         MVC   0(2,RF),=H'1'                                                    
         BAS   RE,ADDBLK                                                        
         BNE   ADDERRX                                                          
*                                                                               
ADDCLS4  MVI   P1,0                SET NORMAL CLOSE                             
         OC    W_RECH,W_RECH                                                    
         BNZ   *+8                                                              
         OI    CLOTYP,CLOTPUR      SET PURGE CLOSE IF EMPTY FILE                
         TM    CLOTYP,CLOTPUR                                                   
         BZ    *+8                                                              
         MVI   P1,1                SET ERROR CLOSE IF CLO/PUR                   
         BAS   RE,CLS                                                           
         B     ADDX                                                             
                                                                                
***********************************************************************         
* ADD TO AN ALREADY OPENED WORKER FILE                                *         
***********************************************************************         
ADD      CLI   SKINTNO,0           MUST HAVE WRKF FILE IN BUFFER                
         BE    ADDERR                                                           
         MVC   USERINUM,SKINTNO                                                 
         BAS   RE,WHATWKRI                                                      
         MVC   W_FILE,USERWRKF     SET ALPHA DMGR WRKF ID                       
         MVC   VW_FILE,USERXNUM    SET EXTERNAL NUM AND A(DTF)                  
         CLC   USERXNUM,SKEXTNO                                                 
         BNE   ADDERR              DOUBLE CHECK BUFFER OK                       
         BAS   RE,SETWKR                                                        
*                                                                               
ADD0     LR    R5,R4               FILE MUST HAVE BEEN OPENED                   
         TM    SKACTRL,X'01'                                                    
         BZ    ADDERR              INVALID ACTION NO PREV OPEN                  
*                                                                               
ADD1     TM    SKACTRL,X'02'       TEST FIRST ADD                               
         BO    ADD3                                                             
         OI    SKACTRL,X'02'                                                    
*                                                                               
ADD3     CLC   0(2,R3),=H'4'       V/L DATA HAS LEN IN 1ST TWO BYTES            
         BL    ADDERRL                                                          
         CLC   0(2,R3),CIBLKLN                                                  
         BH    ADDERRL             IGNORE FUNNY LEN RECORDS                     
         ICM   R1,3,0(R3)                                                       
*                                                                               
ADD3X    STH   R1,SKLEN            PUT LEN IN SKLEN                             
*                                                                               
ADD8     LH    RF,CIBLKLN          TEST IF RECORD FITS IN BUFFER                
         SH    RF,SKDISP                                                        
         LH    RE,SKLEN                                                         
         LA    RE,2(RE)            NEED LEN+2 FOR END OF BUFFER                 
         CR    RF,RE                                                            
         BNL   ADDA                                                             
*                                                                               
         LR    RF,R5               CLEAR EOF FLAG                               
         AH    RF,SKDISP                                                        
         XC    0(2,RF),0(RF)                                                    
         BAS   RE,ADDBLK           SET REASON CODE TO NO ROOM FOR DATA          
         BNE   ADDERRX             WRITE BUFFER AND INIT NEW BUFFER             
         CLI   PARM3,X'81'                                                      
         BE    ADDX                                                             
         B     ADDF                                                             
*                                                                               
ADDA     LH    R1,SKLEN            ADJUST BLOCK ATTRIBUTES                      
         L     R0,SKBYTES                                                       
         AR    R0,R1                                                            
         ST    R0,SKBYTES          BUMP TOTAL BYTES                             
*                                                                               
         CH    R1,SKBYTEMX                                                      
         BNH   *+8                                                              
         STH   R1,SKBYTEMX         SAVE MAXIMUM RECORD LEN                      
*                                                                               
         SR    R0,R0                                                            
         ICM   R0,15,W_RECH        SET HIGH RECORD IN BLOCK                     
         AHI   R0,1                                                             
         STCM  R0,15,W_RECH                                                     
         TM    SKACTRL,X'80'       TEST IF FIRST LINE IN BLOCK                  
         BO    ADDA2                                                            
*                                                                               
         OI    SKACTRL,X'80'                                                    
         STCM  R0,15,W_RECS        SET LOW RECORD IN BLOCK                      
*                                                                               
ADDA2    EQU   *                                                                
*                                                                               
ADDB     LH    RF,SKDISP           MOVE DATA TO BUFFER                          
         AR    RF,R4                                                            
         ST    RF,FUL                                                           
*                                                                               
         SR    R1,R1               SKLEN IS DATA LENGTH                         
         ICM   R1,3,SKLEN                                                       
*                                                                               
         MOVE  ((RF),(R1)),(R3)    MOVE DATA                                    
         SR    R1,R1                                                            
         ICM   R1,3,SKLEN                                                       
         L     RF,FUL              RESTORE RF AFTER MOVE                        
         AR    RF,R1                                                            
         AH    R1,SKDISP                                                        
         STH   R1,SKDISP           BUMP SKDISP                                  
         MVC   0(2,RF),=H'1'                                                    
*                                                                               
         CLC   SKLABEL,MYLABEL     TEST SKLABEL STILL GOOD                      
         BE    ADDX                                                             
         DC    H'0'                OH NO WHAT HAVE YOU DONE                     
*                                                                               
ADDF     LA    RF,W_DATA-W_INDEX   RESET BUFFER DISPLACEMENT                    
         STH   RF,SKDISP                                                        
         IC    RF,SKADDR+2         BUMP DISK ADDR FOR NEXT WRITE                
         LA    RF,1(RF)                                                         
         STC   RF,SKADDR+2                                                      
         CH    RF,CIHIREC                                                       
         BNH   ADDG                                                             
         ICM   RF,3,SKADDR         BUMP TO NEXT TRACK                           
         LA    RF,1(RF)                                                         
         STH   RF,SKADDR                                                        
         MVI   SKADDR+2,1                                                       
*                                                                               
ADDG     EQU   *                                                                
*                                                                               
ADDH     LH    R1,SKDISP           INITIALISE NEW BUFFER                        
         LA    RE,W_DATA                                                        
         LH    RF,CIBLKLN                                                       
         SR    RF,R1                                                            
         XCEF                                                                   
         NI    SKACTRL,X'3F'       RESET FIRST LINE                             
*                                                                               
ADDI     B     ADDA                RETURN TO PUT DATA IN BUFFER                 
*                                                                               
ADDERR1  MVI   BYTE,X'41'          FORMAT ERROR                                 
         B     ADDERRX                                                          
ADDERR2  MVI   BYTE,X'40'          DISK ERROR                                   
         B     ADDERRX                                                          
ADDERR3  MVI   BYTE,X'80'          END OF FILE ERROR                            
         B     ADDERRX                                                          
ADDERRL  MVI   PARM3,0             LENGTH ERROR. JUST DROP THE RECORD           
         B     ADDX                                                             
ADDERRX  MVI   P1,1                                                             
         BAS   RE,CLS              CLOSE FILE DUE TO ERROR ON ADD               
         MVC   PARM3(1),BYTE       ERROR CODE IS IN BYTE                        
*                                                                               
ADDX     B     DMWRKFX                                                          
         EJECT                                                                  
***********************************************************************         
* ADD BLOCK TO WRKF                                                   *         
***********************************************************************         
ADDBLK   NTR1                                                                   
*                                                                               
         CLC   SKADDR(2),SKENDCI   TEST DISK ADDR WITH LAST IN CI               
         BL    ADDBLK2             WRITE BLOCK IN THIS CI                       
         BH    ADDBLK1             WRITE BLOCK IN NEXT CI                       
         CLC   SKADDR+2(1),CIHIREC+1                                            
         BNE   ADDBLK2                                                          
         CLI   W_SEQ,LASTSEQ       TEST IF LAST BLOCK IN LAST CI                
         BNE   ADDBLK2                                                          
         TM    W_ATTB,W_ATXCI+W_ATXTN                                           
         BZ    ADDBLK2                                                          
         LR    RF,R5               SET FORCED END OF DATA IN BLOCK              
         AH    RF,SKDISP                                                        
         MVC   0(2,RF),=H'1'                                                    
*                                                                               
         CLC   SKADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R5)                    
         CLI   DMCB+8,0                                                         
         BNE   ADDBLKE                                                          
         MVI   P1,0                SET NORMAL CLOSE                             
         BAS   RE,CLS                                                           
         MVI   PARM3,X'81'         RETURN FORCED END OF FILE                    
         B     XITEQU                                                           
*                                                                               
ADDBLK1  MVI   GCIP,2              GET A PART 2 CI                              
         BAS   RE,GETCI                                                         
         BNE   XITNEQ              ERROR - CODE IS IN BYTE                      
*                                                                               
         SAM31                                                                  
         L     R1,FIWNDA                                                        
         USING SI2PARD,R1                                                       
         MVC   SI2NDX,W_INDEX      UPDATE INDEX                                 
         DROP  R1                                                               
         SAM24                                                                  
*                                                                               
         B     ADDBLKX             OK GOT ONE                                   
*                                                                               
ADDBLK2  CLC   SKADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,SKADDR,(R5)                    
         CLI   DMCB+8,0                                                         
         BNE   ADDBLKE                                                          
*                                                                               
ADDBLKX  B     XITEQU                                                           
*                                                                               
ADDBLKE  MVC   BYTE,DMCB+8                                                      
         B     XITNEQ                                                           
         EJECT                                                                  
***********************************************************************         
* OPEN FILE - FILE ATTRIBUTES IN HEADER REC AT R3                     *         
***********************************************************************         
OPN      NTR1                                                                   
*                                                                               
         BAS   RE,GETDATE          GET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
*                                                                               
         OC    WLUSRID,WLUSRID     USER ID SPECIFIED                            
         BNZ   OPN080                                                           
         TM    WLFLAG,WLFLREFN     TEST IF FILE NUMBER PASSED                   
         BO    OPNERR1             ERROR - MUST HAVE USERID                     
         CLI   OFFLINE,C'Y'        TEST IF OFFLINE                              
         BE    OPNERR1             ERROR - MUST HAVE USERID                     
*                                                                               
         L     RE,=V(SSB)          ONLINE VALUE FROM UTL ENTRY                  
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBUTL-TCBD(RE)                                               
         MVC   WLUSRID,TUSER-UTLD(RE)                                           
*                                                                               
OPN080   CLC   WLUSRID,=X'FFFF'    THIS USERID FUCKS UP WKR REAL BAD            
         BE    OPNERR1                                                          
         OC    WLUSRID,WLUSRID     ZERO IS NOT TOO GOOD EITHER                  
         BZ    OPNERR1                                                          
*                                                                               
         MVC   USERIDNO,WLUSRID    FIND WHAT WRKF FOR THIS USER                 
         BAS   RE,WHATWKRU                                                      
         MVC   SKINTNO,USERINUM    SAVE INTERNAL FILE NUM IN BUFF               
         MVC   SKEXTNO,USERXNUM    SAVE EXTERNAL FILE NUM IN BUFF               
         MVC   W_FILE,USERWRKF                                                  
         MVC   VW_FILE,USERXNUM                                                 
         BAS   RE,SETWKR           SET CI DATA FOR THIS WRKF FILE               
                                                                                
***********************************************************************         
* FILE NUMBER PASSED BY CALLER                                        *         
***********************************************************************         
         TM    WLFLAG,WLFLREFN     TEST IF FILE NUMBER PASSED                   
         BNZ   OPN090                                                           
*                                                                               
         TM    WLFLAG,WLFLRCOP     ARE WE COPYING VALUES FROM WORKER            
         BO    OPN100              CAN'T FORCE A DATE CHANGE                    
*                                                                               
         L     R1,FIWSHA                                                        
         USING SIHDRD,R1                                                        
         SAM31                                                                  
         NI    WLATTB,255-WLATNCD                                               
         TM    SIHFIND,SIHFNCD     NEW COMPRESSED DATES NEEDED                  
         BZ    *+8                                                              
         OI    WLATTB,WLATNCD      NEW FILE MUST BE NEW DATE                    
         SAM24                                                                  
         B     OPN100                                                           
         DROP  R1                                                               
*                                                                               
OPN090   SAM31                                                                  
         LLH   RE,WLFILENO         LOCATE 1ST CI FOR THIS REP                   
         ST    RE,FIWREF                                                        
*                                                                               
         BRAS  RE,FIRRC            CONVERT REF# TO A(CI)                        
         BRAS  RE,FIRRN            CONVERT REF# TO A(NODE)                      
*                                                                               
         MVC   CIADDR,FIWCIA                                                    
*                                                                               
         LLH   RE,CICINDX          READ FILE AND VALIDATE                       
         MH    RE,CITRKS                                                        
         CLM   RE,3,CIADDR         TEST CI DISK ADDR WITH MIN VALUE             
         BH    OPNERR1                                                          
         CLC   CJSTTRK,CIADDR      TEST CI DISK ADDR WITH MAX VALUE             
         BNH   OPNERR1                                                          
*                                                                               
         BRAS  RE,FIRRLOCK         LOCK THE REPORT BY REFERENCE #               
         SAM24                                                                  
*                                                                               
         LR    R0,R4               READ CI INTO CALLERS BUFFER                  
         BAS   RE,RDFFST                                                        
         BNE   OPNERR1                                                          
         OC    0(2,R4),0(R4)       IF REPORT NOT PURGED                         
         BZ    OPN100                                                           
         CLC   WLUSRID,0(R4)       USER IDS MUST MATCH                          
         BNE   OPNERR1                                                          
*                                                                               
         TM    WLFLAG,WLFLRCOP     COPY VALUES FROM WKFILE                      
         BZ    OPN095                                                           
         MVC   WLINDEX,W_INDEX-W_RECD(R4)                                       
         MVC   WLBATTR,W_BATTR-W_RECD(R4)                                       
         MVC   WLDATA,W_DATA-W_RECD(R4)                                         
*                                                                               
OPN095   TM    WLFLAG,WLFLMOD      TEST OPEN FOR UPDATE                         
         BO    OPN100                                                           
*                                                                               
         MVC   SKFSTCI,CIADDR      PURGE EXISTING FILE                          
         MVI   SKACTRL,0           MUST HAVE FILE DEFINED                       
         XC    STPARM,STPARM       SET ACTION VALUES FOR STATUS CHANGE          
         MVC   STFSTCI,SKFSTCI                                                  
         MVI   STACTN,ACTNPUR                                                   
         MVI   STCTRL,X'23'        SET INDEX CHANGE REQUIRED                    
         LA    RE,CXREC            USE CXREC AS I/O BUFFER                      
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO STATUS CHANGE ROUTINE                   
         B     OPN080                                                           
                                                                                
***********************************************************************         
* CONTINUE WITH OPEN                                                  *         
***********************************************************************         
OPN100   LA    RE,WLSYSPRG         SCAN WLSYSPRG FIELD                          
         LA    RF,4                                                             
OPN110   CLI   0(RE),C'A'          REPLACE SPACES BY DOTS                       
         BNL   *+8                                                              
         MVI   0(RE),C'.'                                                       
         LA    RE,1(RE)                                                         
         BCT   RF,OPN110                                                        
*                                                                               
         CLI   WLCLASS,C'A'        DEFAULT FILE CLASS                           
         BNL   *+8                                                              
         MVI   WLCLASS,C' '        SET TO BLANK IF < A                          
*                                                                               
         TM    WLFLAG,WLFLMOD                                                   
         BNZ   OPN120                                                           
         LR    RE,R4               INITIALISE CALLERS BUFFER                    
         LH    RF,CIBLKLN                                                       
         XCEF                                                                   
*                                                                               
OPN120   LR    R5,R4               R5=A(CALLERS BUFFER TO BUILD HDR)            
         MVC   W_USRID,WLUSRID     COPY USER                                    
         MVC   W_FILEID,WLFILEID   FILE ID                                      
         MVC   W_TYPE,WLTYPE       TYPE                                         
         MVI   W_ATTB,0            ATTRIBUTES ARE SET DURING CREATION           
         MVC   W_UDATA,WLUDATA     USER DATA                                    
         MVC   SVUDATA,WLUDATA                                                  
*                                                                               
         TM    WLATTB,WLATNCD      TEST FILE WANTS NEW COMPRSD DATES            
         BZ    OPEN121                                                          
         MVI   DATEMODE,DATENEW                                                 
         MVC   DATEC,DATECN                                                     
         B     OPEN122                                                          
OPEN121  MVI   DATEMODE,DATEOLD                                                 
         MVC   DATEC,DATECO                                                     
*                                                                               
OPEN122  CLI   DATEMODE,DATENEW    TEST/SET NEW COMPRESSED DATES                
         BNE   *+8                                                              
         OI    W_ATTB,W_ATNCD                                                   
*                                                                               
         MVC   W_STAT,WLSTAT       COPY STATUS FROM HEADER                      
         OI    W_STAT,W_STCRE      SET TEMP BIT                                 
         CLI   W_STAT,W_STCRE      IF STATUS IS TEMP-PURGED                     
         BNE   *+8                                                              
         OI    W_STAT,W_STAC       SET ACTIVE BIT                               
*                                                                               
         MVC   W_RETNL,WLRETNL     SET LIVE & DEAD RETAIN FROM HDR              
         MVC   W_RETND,WLRETND                                                  
         OC    W_RETNL,W_RETNL     IF ZERO USE DEFAULT RETAINS                  
         BNZ   *+10                                                             
         MVC   W_RETNL,DEFRETNL    DEFAULT LIVE                                 
         OC    W_RETND,W_RETND                                                  
         BNZ   *+10                                                             
         MVC   W_RETND,DEFRETND    DEFAULT DEAD                                 
*                                                                               
         MVC   W_AGELD,WLDATEL     SET CREATED DATE/TIME FROM HDR               
         MVC   W_DATEL,WLDATEL                                                  
         MVC   W_TIMEL,WLTIMEL                                                  
         MVC   W_AGELT,WLAGELT                                                  
         MVC   W_DATED,WLDATED                                                  
         MVC   W_TIMED,WLTIMED                                                  
         MVC   W_PRCNT,WLPRCNT     AND LAST KNOWN PRTD/SENT INFO                
         MVC   W_PRLOC,WLPRLOC                                                  
         MVC   W_PRSYM,WLPRSYM                                                  
*                                                                               
         TM    WLFLAG,WLFLRSET     RESET RETAIN                                 
         BO    OPN130                                                           
         MVC   W_AGERD(3),WLAGERD  RETAIN DATE/TIME FROM HEADER                 
         OC    WLAGERD(3),WLAGERD                                               
         BNZ   OPN140                                                           
*                                                                               
OPN130   MVC   DUB+0(3),DATEC      COMPUTE RETENTION FROM TODAYS DATE           
         MVC   DUB+3(2),W_RETNL                                                 
         TM    W_STAT,W_STDEAD     PLUS LIVE OR DEAD HOURS                      
         BZ    *+10                                                             
         MVC   DUB+3(2),W_RETND                                                 
         MVI   DUB+5,0                                                          
         BRAS  RE,GETRETN                                                       
         MVC   W_AGERD(3),DUB1     SET RETENTION DATE/TIME                      
*                                                                               
OPN140   MVC   W_DESC,WLDESC       SET FILE DESCRIPTION                         
         OC    W_DESC,SPACES                                                    
*                                                                               
         MVC   W_PSWD,WLPSWD       SET PASSWORD VALUE                           
         OC    W_PSWD,SPACES                                                    
         CLC   W_PSWD,SPACES                                                    
         BE    *+8                                                              
         OI    W_ATTB,W_ATPW       SET PASSWORD PROTECTED ATTRIBUTE             
*                                                                               
         MVC   W_MAKER,WLMAKER     SET SYS/PRG/SUBPRG                           
         CLI   W_MAKER,C' '                                                     
         BH    *+10                                                             
         XC    W_MAKER,W_MAKER     CLEAR IF NOT PROPERLY DEFINED                
*                                                                               
         TM    WLFLAG,WLFLRCOP     VALUES COPIED FROM WKFILE                    
         BZ    *+12                                                             
         TM    WLFLAG,WLFLRSET     RESET RETAIN                                 
         BZ    OPN150                                                           
*                                                                               
         MVI   W_STAT,W_STAC+W_STCRE  SET ACTIVE+CRE                            
*                                                                               
         MVC   W_AGELD,DATEC       SET CREATED DATE/TIME FROM NOW               
         MVC   W_DATEL,DATEC                                                    
         MVC   W_TIMEL,TIMEB                                                    
         MVC   W_AGELT,TIMEC                                                    
         MVC   W_DATA1(2),=H'1'    SET EOF FLAG AT START                        
*                                                                               
OPN150   MVI   GCIP,1              GET A PART1 CI                               
         BAS   RE,GETCI                                                         
         BNE   OPNERR4             ERROR - CODE IN BYTE                         
*                                                                               
         MVC   WLREPRNO,W_FILENO   RETURN ASSIGNED FILE NUMBER                  
*                                                                               
         LLH   R0,W_FILENO                                                      
         ST    R0,FIWREF                                                        
*                                                                               
         SAM31                                                                  
         TM    WLFLAG,WLFLREFN     TEST IF FILE REF GIVEN                       
         BO    OPN155              . YES, REPORT WILL ALREADY BE LOCKED         
         BRAS  RE,FIRRLOCK         LOCK THE REPORT BY REFERENCE #               
*                                                                               
OPN155   L     R1,FIWNDA                                                        
         USING SI1PARD,R1                                                       
         MVC   SI1NDX,W_INDEX      UPDATE INDEX                                 
         DROP  R1                                                               
*                                                                               
         MVC   SKINDEX,W_INDEX                                                  
         OI    SKACTRL,X'01'       SET FILE OPEN FLAG                           
         MVI   PARM3,0                                                          
*                                                                               
         TM    WLFLAG,WLFLMOD      OPENING FOR MODIFICATION                     
         BO    OPN160                                                           
         BRAS  RE,FIRTLOCK         TREE LOCK                                    
         BRAS  RE,FIRITN           INSERT INTO THE TREE                         
         JNE   *+2                 ERROR: SOMETHING WENT WRONG                  
         BRAS  RE,FIRTUNLK         SUCCESS: UNLOCK TREE                         
         B     OPNX                                                             
*                                                                               
OPN160   SAM24                                                                  
         MVC   SKBYTES,W_FSIZE                                                  
         MVC   SKBYTEMX,W_MAXRL                                                 
*                                                                               
         MVC   CIADDR,WLTTBR                                                    
         GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         XC    FUL,FUL                                                          
         MVC   SKADDR,CIADDR       SAVE CURRENT CIADDR                          
         MVC   HALF,CIADDR                                                      
         SR    RE,RE                                                            
         XR    RF,RF                                                            
         ICM   RF,3,HALF                                                        
         MVC   FUL+2(2),CITRKS     FUL=TRKS PER PART1                           
         CLC   CIADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BL    OPN170              . NO, PART1                                  
         MVC   FUL+2(2),CJTRKS     FUL=TRKS PER PART2                           
         SR    R0,R0                                                            
         ICM   R0,3,CJSTTRK                                                     
         SR    RF,R0                                                            
                                                                                
OPN170   D     RE,FUL              DIVIDE BY TRKS PER CI                        
         MH    RF,FUL+2            AND MULTIPLY BACK                            
         CLC   CIADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BL    OPN180                                                           
         SR    R0,R0                                                            
         ICM   R0,3,CJSTTRK                                                     
         AR    RF,R0                                                            
*                                                                               
OPN180   STH   RF,SKSTRCI                                                       
         MVC   SKSTRCI+2(2),=X'0100'                                            
         L     RE,FUL                                                           
         BCTR  RE,0                                                             
         AR    RE,RF                                                            
         STH   RE,SKENDCI                                                       
         MVC   SKENDCI+2(1),CIHIREC+1                                           
         MVI   SKENDCI+3,0                                                      
*                                                                               
         LA    R1,W_DATA                                                        
         CLC   SKADDR(2),CJSTTRK   ARE WE ON PART 2S                            
         BNL   OPN190                                                           
         CLC   SKSTRCI,SKADDR                                                   
         BNE   OPN190                                                           
         LA    R1,W_DATA1                                                       
*                                                                               
OPN190   SR    R0,R0                                                            
         ICM   R0,3,0(R1)                                                       
         BNZ   *+6                                                              
         DC    H'0'                BAD LENGTH ON FILE                           
*                                                                               
         CLC   0(2,R1),=X'0001'                                                 
         BE    OPN200                                                           
         AR    R1,R0                                                            
         B     OPN190                                                           
*                                                                               
OPN200   SR    R1,R5                                                            
         STH   R1,SKDISP                                                        
         OI    SKACTRL,X'80'       NOT FIRST IN BLOCK                           
         B     OPNX                                                             
*                                                                               
OPNERR1  MVI   PARM3,X'41'         FORMAT ERROR                                 
         B     OPNERRX                                                          
OPNERR2  MVI   PARM3,X'40'         DISK ERROR                                   
         B     OPNERRX                                                          
OPNERR3  MVI   PARM3,X'80'         END OF FILE                                  
         B     OPNERRX                                                          
OPNERR4  MVC   PARM3,BYTE          ERROR IN BYTE                                
         B     OPNERRX                                                          
*                                                                               
OPNERRX  SAM31                                                                  
         BRAS  RE,FIRRUNLK         UNLOCK THE REPORT                            
*                                                                               
OPNX     CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* SUBROUTINE TO CLOSE FILE - DRIVEN BY CLOSE TYPE IN P1               *         
***********************************************************************         
CLS      NTR1                                                                   
*                                                                               
         LR    R5,R4               R5=A(CALLERS BUFFER)                         
         BAS   RE,GETDATE          GET DATE AND TIME NOW                        
         BAS   RE,GETTIME                                                       
         MVC   P1+1(1),W_SEQ       NORMAL CLOSE SAVE BUFFER DATA                
         CLI   P1+1,0                                                           
         BNE   *+8                                                              
         MVI   P1+1,1              NUMBER OF CIS                                
         XC    P1+2(2),P1+2                                                     
         TM    W_ATTB,W_ATXTN+W_ATXCI                                           
         BZ    CLS010                                                           
         MVC   P1+2(1),W_SEQ       NUMBER OF EXTENSION CIS                      
         MVI   P1+3,1              SET WE ARE NOW IN EXTENSION MODE             
*                                                                               
CLS010   CLI   P1,0                TEST ERROR CLOSE OR CLO/PUR                  
         BNE   CLS040              YES WE DONT NEED THE FOLLOWING DATA          
         MVC   P3(4),W_RECH        NUMBER OF RECORDS                            
         MVC   P5,SKBYTES          NUMBER OF CHRS                               
         MVC   P6+2(2),SKBYTEMX    NUMBER OF CHRS PER LINE MAXIMUM              
         XC    P7,P7               RETAIN INFO NOT CHANGED                      
         TM    ADDWHY,X'01'        TEST IF CLOSING EMPTY FILE                   
         BZ    CLS040              NO                                           
*                                                                               
         MVC   DUB+0(3),DATEC      YES COMPUTE NEW SHORT RETAIN                 
         MVC   DUB+3(2),W_RETNL                                                 
         MVI   DUB+5,0                                                          
         BRAS  RE,GETRETN                                                       
         MVC   P7(3),DUB1          SAVE NEW RETAIN DATE/TIME                    
*                                                                               
CLS040   MVC   CIADDR,SKSTRCI      SET FIRST RECORD IN LAST CI                  
         XC    FUL,FUL             USED FOR THE CI ADDRESS                      
         XC    FUL2,FUL2           USED FOR THE INDEX DISPLACEMENT              
         IC    RE,W_SEQ                                                         
         LA    RE,1(RE)                                                         
         STC   RE,SVSEQ                                                         
         LA    R6,STCIAS           R6=A(AREA TO BUILD LIST OF CI ADDRS)         
*                                                                               
CLS050   GOTO1 DATAMGR,DMCB,(X'00',DMREAD),W_FILE,CIADDR,(R5)                   
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
         MVC   DUB(2),W_CIPREV     SAVE LINK BACK TO PREV CI                    
         MVC   W_CINEXT,FUL        SET LINK FORWARD TO NEXT CI                  
*                                                                               
         CLI   P1+2,0              TEST IF EXTENSION CI'S PRESENT               
         BE    CLS090                                                           
         CLI   P1+3,0              TEST IF BACK TO NORMAL CI                    
         BNE   *+12                                                             
         OI    W_ATTB,W_ATXTN                                                   
         B     CLS090                                                           
         TM    W_ATTB,W_ATXTN+W_ATXCI                                           
         BNO   CLSERR1                                                          
         CLI   W_SEQ,FRSTXTN       TEST IF FIRST EXTENSION CI                   
         BNE   CLS100                                                           
         CLI   SVSEQ,FRSTXTNP                                                   
         BNE   CLSERR1                                                          
         MVI   P1+1,LASTSEQ        SET 255 NORMAL CIS                           
         MVI   P1+3,0              SET NEXT CI IS NORMAL                        
         MVI   SVSEQ,LASTSEQP      AND SHOULD HAVE W_SEQ=255                    
         B     CLS110                                                           
*                                                                               
CLS090   OC    DUB(2),DUB                                                       
         BNZ   CLS100                                                           
         CLI   SVSEQ,2             ADJUST SEQ NUM OF FIRST CI OF MULTI          
         BNE   *+8                                                              
         MVI   W_SEQ,1                                                          
CLS100   SR    RE,RE               CHECK SEQ NUM IS VALID                       
         IC    RE,SVSEQ                                                         
         BCTR  RE,0                                                             
         STC   RE,SVSEQ                                                         
         CLC   W_SEQ,SVSEQ                                                      
         BNE   CLSERR1                                                          
*                                                                               
CLS110   TM    CLOTYP,CLOTTMP      TEST TEMPORARY CLOSE                         
         BO    *+8                                                              
         NI    W_STAT,255-W_STCRE  TURN OFF TEMPORARY FILE FLAG                 
*                                                                               
         TM    CLOTYP,CLOTERR      TEST IF CLO/ERR                              
         BZ    CLS120                                                           
         OI    W_ATTB,W_ATERR      YES SET FILE IS IN ERROR                     
*                                                                               
CLS120   CLI   P1,0                TEST IF ERROR CLOSE                          
         BE    CLS130                                                           
         XC    W_INDEX,W_INDEX     CLEAR INDEX IF ERROR CLOSE                   
*                                                                               
CLS130   OC    DUB(2),DUB          SET VALUES IN FIRST CI                       
         BNZ   CLS170                                                           
         MVC   W_NCI,P1+1          SET TOTAL NUMBER OF CIS                      
         SR    R1,R1                                                            
         ICM   R1,1,P1+2           R1=W_SEQ OF HIGHEST XTNSN CI                 
         BZ    *+10                                                             
         BCTR  R1,0                                                             
         STC   R1,W_NCIX           SET TOTAL NUMBER OF XTNSN CIS                
         MVC   W_RECS,P3           SET TOTAL NUMBER OF RECORDS                  
*                                                                               
         MVC   W_TTBR,SKADDR       SAVE LAST BLOCK ADDRESS                      
*                                                                               
         SR    RF,RF               COMPUTE SIZE FACTOR                          
         L     RF,P5                                                            
         C     RF,=F'131072'       IF 1-128K BYTES                              
         BH    CLS140                                                           
         SRL   RF,10               DIVIDE BY 1024                               
         B     CLS160                                                           
*                                                                               
CLS140   C     RF,=F'8388608'      IF 128K-8M BYTES                             
         BH    CLS150                                                           
         SRL   RF,17               DIVIDE BY 128K                               
         A     RF,=F'128'          ADD 128                                      
         B     CLS160                                                           
*                                                                               
CLS150   SRL   RF,20               8M => DIVIDE BY 1M                           
         A     RF,=F'191'          ADD 191                                      
         B     CLS160                                                           
*                                                                               
CLS160   CH    RF,=H'255'          255 IS THE MAX 64M=>                         
         BNH   *+8                                                              
         LH    RF,=H'255'                                                       
         STC   RF,W_AGES           SAVE SIZE FACTOR                             
*                                                                               
         SR    RE,RE               COMPUTE AVERAGE RECORD LENGTH                
         L     RF,P5                                                            
         SR    R0,R0                                                            
         ICM   R0,15,W_RECS                                                     
         BNZ   *+10                                                             
         SR    RF,RF                                                            
         B     *+6                                                              
         DR    RE,R0                                                            
         STCM  RF,3,W_AVGRL                                                     
*                                                                               
         MVC   W_FSIZE,SKBYTES                                                  
         MVC   W_MAXRL,SKBYTEMX                                                 
*                                                                               
         OC    P7,P7               TEST IF NEW RETAIN REQUIRED                  
         BZ    *+10                                                             
         MVC   W_AGERD(3),P7       SET NEW RETAIN DATE/TIME                     
*                                                                               
         TM    CLOTYP,CLOTUSX      TEST IF CLOSE WITH USER INDEX DATA           
         BZ    *+10                                                             
         MVC   W_UDATA,SVUDATA                                                  
*                                                                               
CLS170   CLC   CIADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT)                                       
         CLI   DMCB+8,0                                                         
         BNE   CLSERR2                                                          
*                                                                               
         SAM31                                                                  
*                                                                               
         MVC   FIWCIA,CIADDR                                                    
         BRAS  RE,FIRCN            CONVERT A(CI) TO A(INDEX NODE)               
         BRAS  RE,FIRN1            IS THIS A PART1                              
         BNE   CLS172              NO, PART2                                    
*                                                                               
         L     R1,FIWNDA           PART1                                        
         USING SI1PARD,R1                                                       
         MVC   SI1NXT,FUL2         SET NEXT CI IN PART1                         
         B     CLS176                                                           
*                                                                               
CLS172   L     R1,FIWNDA           PART2                                        
         USING SI2PARD,R1          SET NEXT CI IN PART1                         
         MVC   SI2NXT,FUL2                                                      
         DROP  R1                                                               
*                                                                               
CLS176   L     R0,FIWNDA           A(CURRENT INDEX NODE)                        
         SL    R0,FIWSHA           GET DISPLACEMENT                             
         ST    R0,FUL2             STORE TO USE FOR PREV'S NEXT                 
                                                                                
         SAM24                                                                  
*                                                                               
         MVC   0(2,R6),CIADDR                                                   
         MVC   2(2,R6),FFS                                                      
         LA    R6,2(R6)                                                         
         OC    DUB(2),DUB          TEST IF FIRST CI                             
         BZ    CLS200                                                           
         MVC   FUL,CIADDR          SAVE ADDR OF THIS CI                         
         MVC   CIADDR(2),DUB       SAVE ADDR OF PREV CI                         
*                                                                               
         B     CLS050                                                           
*                                                                               
CLS200   MVC   STFSTCI,CIADDR      SAVE DISK ADDR OF FIRST CI                   
         MVC   SVDATA,W_INDEX      SET PARAMS FOR INDEX STATUS CHANGE           
         XC    STPARM,STPARM                                                    
         MVC   STVAL,W_STAT        USE STATUS VALUE IN FIRST CI                 
         MVI   STCTRL,X'82'        SET UPDATE INDEX ON ADD                      
         MVC   STFSTCI(2),CIADDR                                                
         LA    RE,CXREC            USE CXREC AS INDEX I/O AREA                  
         ST    RE,STBUFFA                                                       
         BAS   RE,STAT             GOTO1 INDEX UPDATE ROUTINE                   
         BNE   CLSERR3                                                          
*                                                                               
         MVI   PARM3,0                                                          
         MVI   SKACTRL,X'00'                                                    
         XC    SKFCTRL,SKFCTRL     CLEAR FILE INFO AND SET FIRST CI             
         MVC   SKFSTCI(2),STFSTCI                                               
         MVC   SKFSTCI+2(2),=X'0100'                                            
         XC    SKXCTRL,SKXCTRL     CLEAR INDEX INFO                             
         LR    R0,R4               SET FILE INFO FOR FIRST CI                   
         MVC   CIADDR,SKFSTCI                                                   
         BAS   RE,RDFADD                                                        
         B     CLSX                                                             
*                                                                               
CLSERR1  MVI   PARM3,X'41'         FORMAT ERROR ON FILE UPDATE                  
         B     *+8                                                              
CLSERR2  MVI   PARM3,X'40'         DISK ERROR ON FILE UPDATE                    
         XC    SKFCTRL,SKFCTRL                                                  
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'00'                                                    
         B     CLSX                                                             
CLSERR3  XC    SKFCTRL,SKFCTRL     ERROR ON INDEX UPDATE                        
         XC    SKXCTRL,SKXCTRL                                                  
         MVI   SKACTRL,X'00'                                                    
         DC    H'0'                                                             
*                                                                               
CLSX     CLI   OFFLINE,C'Y'        IF ONLINE RETURN GLOBAL WRKF ID              
         BE    CLSXX                                                            
         TM    CLOTYP,CLOTNOR      BUT ONLY IF A NORMAL CLOSE                   
         BZ    CLSXX                                                            
         L     RE,=V(SSB)                                                       
         L     RE,SSBTKADR-SSBD(RE)                                             
         L     RE,TCBWRKA-TCBD(RE)                                              
         LA    RE,72+16(RE)        POINT TO WRKF GLOBAL IN MNTR'S W/S           
         MVC   0(8,RE),0(R4)       SET WRKF KEY IN GLOBAL AREA                  
*                                                                               
CLSXX    SAM31                                                                  
         MVC   FIWCIA(2),STFSTCI                                                
         MVC   FIWCIA+2(2),=X'0100'                                             
         BRAS  RE,FIRCN                                                         
         BRAS  RE,FIRRUNLK         UNLOCK THE REPORT                            
                                                                                
         CLI   PARM3,0             SET CC TO EQL IF NO ERROR                    
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* GET FREE CONTROL INTERVAL BYTE= PART 1 OR 2                         *         
* RETURN BYTE=0 OK ELSE BYTE=ERROR RETURN CC NEQ                      *         
***********************************************************************         
GETCI    ST    RE,SAVERE                                                        
         XC    EOFCNT(8),EOFCNT    CLEAR EOF COUNTERS                           
         MVC   EOFMAX(6),EOFMAXON                                               
         CLI   OFFLINE,C'Y'                                                     
         BNE   *+10                                                             
         MVC   EOFMAX(6),EOFMAXOF                                               
*                                                                               
GETCI2   MVC   P1(1),GCIP          SET WHAT PART CI WANTED                      
         BAS   RE,GCI              GET NEW CI                                   
         CLC   P1,FFS                                                           
         BE    GETCIERR            DISK ERROR                                   
         OC    P1,P1                                                            
         BNZ   GETCIOK                                                          
         LH    R1,EOFCNT           BUMP END OF FILE COUNTER                     
         LA    R1,1(R1)                                                         
         STH   R1,EOFCNT                                                        
         CH    R1,EOFMAX                                                        
         BH    GETCIEOF            RETURN EOF IF EXCEEDS MAX COUNT              
**NOP    STIMER WAIT,BINTVL=EOFBIN                                              
         B     GETCI2              BACK AND TRY AGAIN                           
*                                                                               
GETCIEOF MVI   BYTE,X'80'          EOF - NONE AVAILABLE                         
         B     GETCIXIT                                                         
GETCIERR MVI   BYTE,X'40'          DISK ERROR                                   
         B     GETCIXIT                                                         
GETCIOK  MVI   BYTE,0              OK GOT ONE                                   
         B     GETCIXIT                                                         
*                                                                               
GETCIXIT L     RE,SAVERE                                                        
         CLI   BYTE,0              SET CC                                       
         BR    RE                                                               
                                                                                
***********************************************************************         
* SEARCH INDEX FOR ENTRY FOR NEW CONTROL INTERVAL                     *         
* R4=A(BUFFER) P1=01 OR 02 FOR SMALL OR LARGE CIS                     *         
*                                                                     *         
* P1(4) SET TO ZEROS=EOF,FFS=ERROR,OR ELSE INDEX PAGE ENTRY           *         
* P2(4) SET TO FILE SEQUENCE NUMBER                                   *         
* P3(4) USED TO CONTROL ERROR RETRYS                                  *         
***********************************************************************         
B        USING W_RECD,R4                                                        
I        USING W_RECD,R5                                                        
*                                                                               
GCI      NTR1                                                                   
         SAM31                                                                  
*                                                                               
         CLI   P1,X'01'            DO WE WANT A PART1?                          
         BNE   GCI020              . NO                                         
***********************************************************************         
* GET A PART1 CI                                                      *         
***********************************************************************         
         TM    WLFLAG,WLFLREFN     TEST IF FILE REF GIVEN                       
         BZ    GCI010              . NO                                         
         LLH   R1,WLFILENO         LOCATE 1ST CI FOR THIS REP                   
         ST    R1,FIWREF                                                        
         BRAS  RE,FIRRC            CONVERT REF# TO A(CI)                        
         BRAS  RE,FIRRN            CONVERT REF# TO A(INDEX NODE)                
         B     GCI015                                                           
*                                                                               
GCI010   BRAS  RE,FIR1LOCK         LOCK RESOURCE CI AVAILABLE QUEUE             
         BRAS  RE,FIRGET1          GET NEXT AVAILABLE PART1                     
         BNE   GCIEF1X             . NONE AVAILABLE                             
         OC    FIWNDA,FIWNDA       DID WE FIND AN AVAILABLE PART1?              
         BZ    GCIEF1X             . NO                                         
         BRAS  RE,FIR1UNLK         UNLOCK RESOURCE CI AVAILABLE QUEUE           
*                                                                               
         BRAS  RE,FIRNC            CONVERT A(NODE) TO A(CI) AND REF#            
*                                                                               
GCI015   MVC   CIADDR,FIWCIA       SAVE A(CI)                                   
         MVC   STFSTCI,CIADDR      SET FILE ADDR                                
         XC    P2,P2                                                            
         MVC   P2+2(2),FIWREF+2                                                 
         MVC   B.W_FILENO,FIWREF+2                                              
         MVI   B.W_SEQ,0                                                        
         B     GCI030                                                           
***********************************************************************         
* GET A PART2 CI                                                      *         
***********************************************************************         
GCI020   BRAS  RE,FIR2LOCK         LOCK RESOURCE CI AVAILABLE QUEUE             
         BRAS  RE,FIRGET2          GET NEXT AVAILABLE PART2                     
         BNE   GCIEF2X                                                          
         OC    FIWNDA,FIWNDA       DID WE FIND AN AVAILABLE PART2?              
         BZ    GCIEF2X             . NO                                         
         BRAS  RE,FIR2UNLK         UNLOCK RESOURCE CI AVAILABLE QUEUE           
*                                                                               
         BRAS  RE,FIRNC            CONVERT A(INDEX) TO A(CI)                    
         MVC   CIADDR,FIWCIA       SAVE A(CI)                                   
                                                                                
         MVC   B.W_FILENO,SKFILENO GET STORED REPORT NUMBER                     
         CLI   B.W_SEQ,LASTSEQ     ADJUST PART2 CI DATA IN BUFFER               
         BNE   GCI022                                                           
         TM    B.W_ATTB,W_ATXCI+W_ATXTN                                         
         BNZ   GCIEFX                                                           
         OI    B.W_ATTB,W_ATXCI+W_ATXTN                                         
         MVI   B.W_SEQ,FRSTXTNM    SET SEQ NUMBER OF FIRST XTNSN CI             
         B     GCI025                                                           
*                                                                               
GCI022   CLI   B.W_SEQ,0           BUMP SEQ FOR FIRST PART2                     
         BNE   GCI025                                                           
         MVI   B.W_SEQ,1                                                        
*                                                                               
GCI025   IC    RF,B.W_SEQ          BUMP SEQ NUM                                 
         LA    RF,1(RF)                                                         
         STC   RF,B.W_SEQ                                                       
         MVC   B.W_CIPREV,SKSTRCI  CHAIN THIS CI TO PREVIOUS CI                 
*                                                                               
         MVC   FIWCIA,SKSTRCI      A(START OF THIS CI)                          
         BRAS  RE,FIRCN                                                         
         L     R0,FIWNDA                                                        
         S     R0,FIWSHA                                                        
         ST    R0,FIWNDS           SAVE THE NODE DISPLACEMENT                   
                                                                                
***********************************************************************         
* WRITE CI                                                            *         
***********************************************************************         
GCI030   MVC   SKADDR,CIADDR       SAVE CI DATA IN BUFFER                       
         MVC   SKSTRCI,CIADDR      START DISK ADDRESS FOR THIS CI               
*                                                                               
         MVC   FIWCIA,CIADDR                                                    
         BRAS  RE,FIRFL            CONVERT FIRST D/A TO LAST D/A                
         MVC   CIADDRX,FIWCIA                                                   
         MVC   SKENDCI,FIWCIA      LAST DISK ADDRESS FOR THIS CI                
*                                                                               
         LA    RF,B.W_DATA-B.W_INDEX                                            
         CLI   P1,X'01'            IS THIS A PART1                              
         BNE   *+8                 . NO                                         
         LA    RF,B.W_DATA1-B.W_INDEX                                           
         STH   RF,SKDISP           DISPLACEMENT TO FIRST RECORD IN CI           
*                                                                               
         CLC   CIADDR(2),=X'0001'  TRACK 1 PROTECTION                           
         BH    *+6                                                              
         DC    H'0'                CAN'T BE                                     
*                                                                               
         USING SITABD,R1                                                        
         L     R1,FIWRHA                                                        
         CLC   CIADDR,SIT1STT      A(CI) WITHIN THE INDEX?                      
         BNL   *+6                                                              
         DC    H'0'                CAN'T BE                                     
         DROP  R1                                                               
*                                                                               
         SAM24                                                                  
         GOTO1 DATAMGR,DMCB,(X'00',DMWRT),W_FILE,CIADDR,(R4)                    
         MVC   P3+1(1),8(R1)       SAVE RESULT OF WRITE CI                      
         SAM31                                                                  
*                                                                               
         MVC   FIWCIA,CIADDR                                                    
         BRAS  RE,FIRCN            CONVERT A(CI) TO A(INDEX)                    
*                                                                               
         BRAS  RE,FIRN1                IS THIS A PART1?                         
         BNE   GCI034                  . NO                                     
*                                                                               
         USING SI1PARD,R1                                                       
         L     R1,FIWNDA                                                        
         LA    R5,SI1NDX           R5= A(PART1 INDEX)                           
         B     GCI035                                                           
*                                                                               
         USING SI2PARD,R1                                                       
GCI034   L     R1,FIWNDA                                                        
         MVC   SI2PRV,FIWNDS       SAVED PREVIOUS NODE                          
         LA    R5,SI2NDX           R5= A(PART2 INDEX)                           
         DROP  R1                                                               
*                                                                               
GCI035   MVC   I.W_INDEX,B.W_INDEX                                              
*                                                                               
         CLI   P3+1,0              FIX INDEX ENTRY IF BAD CI WRITE              
         BE    GCI040                                                           
*                                                                               
         MVI   I.W_STAT,W_STHO                                                  
         MVI   I.W_ATTB,W_ATSHIT                                                
         MVC   I.W_AGERD,=X'FF9F8F' SET 31DEC27 RETAIN                          
         B     GCIERX                                                           
*                                                                               
GCI040   MVI   I.W_STAT,W_STCRE    SET INDEX TEMP CREATE                        
         MVC   I.W_CPUID,CPUASID   SET INDEX CPU/PTN                            
         MVI   I.W_AGERT,X'FF'     SET INDEX TIME TO FF                         
         B     GCIOKX                                                           
*                                                                               
GCIERX   MVC   P1,FFS                                                           
         B     GCIX                                                             
*                                                                               
GCIEF1X  BRAS  RE,FIR1UNLK         UNLOCK RESOURCE CI AVAILABLE QUEUE           
         MVI   MOPP,SITRP1S        INDICATE TO FREE UP CI  (PART1)              
         BRAS  RE,MONPOST          POST MONITORING JOB TO FREE UP CI            
         B     GCIEFX                                                           
*                                                                               
GCIEF2X  BRAS  RE,FIR2UNLK         UNLOCK RESOURCE CII AVAILABLE QUEUE          
         MVI   MOPP,SITRP2S        INDICATE TO FREE UP CII (PART2)              
         BRAS  RE,MONPOST          POST MONITORING JOB TO FREE UP CII           
*                                                                               
GCIEFX   XC    P1,P1                                                            
         B     GCIX                                                             
*                                                                               
GCIOKX   MVC   P1,FIWNDA                                                        
GCIX     J     EXIT                                                             
         DROP  B,I                                                              
         EJECT                                                                  
***********************************************************************         
* SET CONTROL INTERVAL DATA FOR WRKF FILE REFERENCED                  *         
***********************************************************************         
SETWKR   ST    RE,SAVRESWK         SET CONTROL INTERVAL DATA                    
*                                                                               
         L     RF,VW_FILE                                                       
         LA    RF,0(RF)                                                         
         NI    36(RF),X'FF'-X'40'  TURN OFF NOP BIT IN DTF                      
*&&UK*&& AHI   RF,-40                                                           
*&&US*&& AHI   RF,-64                                                           
         ST    RF,VWKRTAB          CI DATA LIVES INFRONT OF DTF                 
*                                                                               
SETWKR1  OC    0(4,RF),0(RF)       INITIALISE FILE ON FIRST REFERENCE           
         BNZ   SETWKR2                                                          
         BRAS  RE,IWKR                                                          
*                                                                               
SETWKR2  L     RF,VWKRTAB          SET CI DATA FROM FILE INFO                   
         MVC   CIDATA,0(RF)                                                     
*                                                                               
         CLI   SKACTN,ACTNFFO      OPENING THE FILE ONLY?                       
         BE    SETWKRX             YES, SKIP SHARED MEMORY ATTACH               
*                                                                               
         OC    ASHFI,ASHFI         A(SHARED MEMORY FILE INDEXES)                
         JZ    *+2                 DEATH - NEED INDEXES AT THIS POINT           
*                                                                               
         SAM31                                                                  
         MVC   FIWSHA,ASHFI                                                     
         MVC   FIWRES,SPACES                                                    
         MVC   FIWRES(L'USERWRKF),USERWRKF     FILE NAME                        
         OI    FIWFLG,FIWFSLK                                                   
         BRAS  RE,FIRSLOCK         SHARED FILE LOCK                             
         BRAS  RE,FIRSET           SET VALUES FOR THIS WORKER                   
         JNE   *+2                 INVALID WORKER FILE                          
*                                                                               
         L     RF,FIWSHA                                                        
         USING SIHDRD,RF                                                        
         MVI   DATEMODE,DATEOLD    SET OLD DATE FORMAT                          
         TM    SIHFIND,SIHFNCD     NEW COMPRESSED DATES NEEDED                  
         BZ    *+8                                                              
         MVI   DATEMODE,DATENEW    SET NEW DATE FORMAT                          
         DROP  RF                                                               
         SAM24                                                                  
*                                                                               
SETWKRX  L     RE,SAVRESWK                                                      
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINES TO GET/SET WRKF DATA FROM VARIOUS INPUT FIELDS             *         
***********************************************************************         
WHATWKRA ST    RE,SAVREWWK         GET WRKF FROM ALPHA AT USERWRKF+4            
         LA    RE,WKSHLST+8                                                     
WHATWKA1 CLI   0(RE),0                                                          
         BNE   *+6                                                              
         DC    H'0'                DIE IF INVALID ALPHA WKR ID                  
         CLC   1(1,RE),USERWRKF+4                                               
         BE    WHATWKRX                                                         
         LA    RE,8(RE)                                                         
         B     WHATWKA1                                                         
*                                                                               
WHATWKRI ST    RE,SAVREWWK         GET WRKF FROM INT NUM IN USERINUM            
         CLC   USERINUM,WKSHLST+2                                               
         BNH   *+6                                                              
         DC    H'0'                DIE IF INVALID INTERNAL WKR NUM              
         SR    RE,RE                                                            
         IC    RE,USERINUM                                                      
         SLL   RE,3                                                             
         LA    RE,WKSHLST(RE)                                                   
         B     WHATWKRX                                                         
*                                                                               
WHATWKRU ST    RE,SAVREWWK         GET WRKF FROM USERID USERIDNO                
         SR    RE,RE                                                            
         CLC   USERIDNO,=AL2(32000) PUBLIC FILES GO TO FIRST WRKF               
         BL    *+14                                                             
         CLC   USERIDNO,=AL2(32100)                                             
         BNH   WHATWKR2                                                         
*&&US                                                                           
WWUUS1   CLI   WKSHLST+1,0         TEST IF EXTRA WRKF FILES                     
         BE    WWUUS2                                                           
         CLC   USERIDNO,=AL2(6183) STRATA GOES TO FIRST EXTRA FILE              
         BNE   WWUUS2                                                           
         IC    RE,WKSHLST          POINT TO LAST NORMAL WRKF FILE               
         B     WHATWKR2                                                         
*                                                                               
WWUUS2   CLC   USERIDNO,=AL2(1646) WILA                                         
         BNE   *+12                                                             
         LHI   RE,11               FORCE TO WRKFB INSTEAD OF WRKFC              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(14840) PHDTOU                                      
         BNE   *+12                                                             
         LHI   RE,2                FORCE TO WRKF2 INSTEAD OF WRKF6              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(13503) BROMRE                                      
         BNE   *+12                                                             
         LHI   RE,3                FORCE TO WRKF3 INSTEAD OF WRKF4              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(17)   SJR                                          
         BNE   *+12                                                             
         LHI   RE,3                FORCE TO WRKF3 TO KEEP ON WRKF3              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(5332) WAVA                                         
         BNE   *+12                                                             
         LHI   RE,3                FORCE TO WRKF3 INSTEAD OF WRKF8              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(14345) MSCORE                                      
         BNE   *+12                                                             
         LHI   RE,11               FORCE TO WRKFB INSTEAD OF WRKF6              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(12699) ZEREP                                       
         BNE   *+12                                                             
         LHI   RE,4                FORCE TO WRKF4 INSTEAD OF WRKFA              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(12737) ZDFPERE                                     
         BNE   *+12                                                             
         LHI   RE,6                FORCE TO WRKF6 INSTEAD OF WRKF3              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(10572) OMDEZ                                       
         BNE   *+12                                                             
         LHI   RE,12               FORCE TO WRKFC INSTEAD OF WRKFD              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(11038) MSNYD                                       
         BNE   *+12                                                             
         LHI   RE,1                FORCE TO WRKF1 INSTEAD OF WRKFE              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(11553) MCLOU                                       
         BNE   *+12                                                             
         LHI   RE,1                FORCE TO WRKF1 INSTEAD OF WRKF4              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(10368) MVCTOA                                      
         BNE   *+12                                                             
         LHI   RE,1                FORCE TO WRKF1 INSTEAD OF WRKF4              
         B     WHATWKR3                                                         
*                                                                               
         CLC   USERIDNO,=AL2(1910) WITO     > FORCE INTO 5 AS                   
         BE    WWUUS2A                      > BEFORE                            
         CLC   USERIDNO,=AL2(9934) WINYN    >                                   
         BE    WWUUS2A                                                          
         B     WWUUS3                                                           
*                                                                               
WWUUS2A  LHI   RE,5                INITIATIVE MEDIA FORCED INTO WRKF5           
         B     WHATWKR3                                                         
*                                                                               
WWUUS3   EQU   *                                                                
*&&                                                                             
WHATWKR1 SR    RE,RE               SET UP RE AND RF FOR DIVIDE                  
         SR    RF,RF                                                            
         ICM   RF,3,USERIDNO                                                    
         SR    R0,R0                                                            
         IC    R0,WKSHLST          GET NUMBER OF WRKF FILES                     
         DR    RE,R0                                                            
WHATWKR2 LA    RE,1(RE)            RE=RELATIVE WRKF                             
*                                                                               
         CHI   RE,11               IF I WAS SUPPOSED TO BE IN B                 
         BNE   *+8                 NOW I GO INTO 5 INSTEAD                      
         LHI   RE,5                TO SAVE B FOR WILA (ABOVE)                   
*&&US                                                                           
         CHI   RE,3                IF I WAS SUPPOSED TO BE IN 3                 
         BNE   *+8                 NOW I GO INTO 4 INSTEAD                      
         LHI   RE,4                TO SAVE FOR FORCED ID ABOVE                  
*                                                                               
         CHI   RE,7                IF WRKF7, JUST FDMJW ONLY                    
         BNE   WWKR010             NO SO CONTINUE AS PLANNED                    
         CLC   USERIDNO,=AL2(6516) FDMJW                                        
         BE    WHATWKR3            FDMJW GOES TO WRKF7 ONLY                     
         LHI   RE,2                EVERYONE ELSE ON WRKF7 GOES TO WRKF2         
         B     WHATWKR3                                                         
*                                                                               
WWKR010  CHI   RE,15               IF WRKFF, JUST MSNYA ONLY                    
         BNE   WHATWKR3            NO SO CONTINUE AS PLANNED                    
         CLC   USERIDNO,=AL2(8594) MSNYA                                        
         BE    WHATWKR3            MSNYA GOES TO WRKFF ONLY                     
         LHI   RE,1                EVERYONE ELSE ON WRKFF GOES TO WRKF1         
*&&                                                                             
WHATWKR3 SLL   RE,3                                                             
         LA    RE,WKSHLST(RE)      POINT TO LIST ENTRY FOR WRKF                 
*                                                                               
WHATWKRX MVC   USERWRKF,=CL8'WRKF'                                              
         MVC   USERWRKF+4(1),1(RE) SET DMCB WRKF NAME                           
         MVC   USERINUM,0(RE)      SET INTNUM                                   
         MVC   USERXNUM(4),4(RE)   SET EXTNUM AND A(DTF)                        
*                                                                               
         L     RE,SAVREWWK                                                      
         BR    RE                                                               
                                                                                
***********************************************************************         
* GET DATE AND SAVE IN SEVERAL FORMATS                                          
***********************************************************************         
GETDATE  ST    RE,SAVRE                                                         
         GOTO1 VDATCON,DUB2,(5,0),(0,DATEE)                                     
         GOTO1 VDATCON,DUB2,(5,0),(3,DATEB)                                     
         GOTO1 VDATCON,DUB2,(5,0),(2,DATECO)                                    
         GOTO1 VDATCON,DUB2,(5,0),(30,DATECN)                                   
*                                                                               
         CLI   DATEMODE,DATEOLD    DO WE WANT OLD DATES?                        
         BNE   *+14                NO                                           
         MVC   DATEC,DATECO        YES: SET OLD COMPRESSED DATE                 
         B     GETDATEX            EXIT                                         
*                                                                               
         MVC   DATEC,DATECN        SET NEW COMPRESSED DATE                      
         MVI   DATEMODE,DATENEW    SET NEW COMPRESSED MODE                      
*                                                                               
GETDATEX L     RE,SAVRE                                                         
         BR    RE                                                               
                                                                                
***********************************************************************         
* I REMOVED THIS CODE AND ADDED DATCON CALLS. THE DOCUMENTATION                 
* FOR THE DATE MACRO SAYS TO ONLY USE THE MACRO IF YOU CAN'T GET TO             
* DATCON. PERHAPS THIS WAS DONE TO SAVE MIPS, BUT AT THIS POINT I               
* WOULD LIKE TO MOVE OVER TO DATCON.                                            
***********************************************************************         
* GET DATE AND SAVE IN SEVERAL FORMATS                                *         
***********************************************************************         
*ETDATE  ST    RE,SAVRE                                                         
*        CLI   OFFLINE,C'Y'                                                     
*        BNE   GETDATE1                                                         
*        L     RF,=V(SSB)                                                       
*        LTR   RF,RF                                                            
*        BZ    GETDATE1                                                         
*        CLI   2(RF),X'FF'         TEST IF OFFLINE EXTENDED SSB                 
*        BNE   GETDATE1                                                         
*        TM    5(RF),X'80'         IF SO TEST IF DATE PASSED                    
*        BZ    GETDATE1                                                         
*        MVC   DATEE(6),8(RF)      EXTRACT C'YYMMDD' FROM OFFLINE SSB           
*        MVC   DATEE+6(2),SPACES                                                
*        B     GETDATE2                                                         
*ETDATE1 DATE  DATEE               DATEE=C'YYMMDDCC'                            
*                                                                               
*ETDATE2 MVC   DATEB(2),DATEE      TEST CHANGE IN CENTURY                       
*        SR    R1,R1                                                            
*        CLI   DATEB,C'9'                                                       
*        BNH   GETDATE3                                                         
*        IC    R1,DATEB                                                         
*        SH    R1,=H'10'                                                        
*        STC   R1,DATEB                                                         
*        LA    R1,100                                                           
*ETDATE3 PACK  DUB,DATEB+0(2)                                                   
*        CVB   R0,DUB                                                           
*        AR    R0,R1                                                            
*        STC   R0,DATEB+0                                                       
*        PACK  DUB,DATEE+2(2)                                                   
*        CVB   R0,DUB                                                           
*        STC   R0,DATEB+1                                                       
*        PACK  DUB,DATEE+4(2)                                                   
*        CVB   R0,DUB                                                           
*        STC   R0,DATEB+2          DATEB=X'YYMMDD'                              
*                                                                               
*        SR    R0,R0               NEW COMPRESSED DATE                          
*        ICM   R1,15,DATEB                                                      
*        SLDL  R0,8                                                             
*        AHI   R0,-64              BASE YEAR IS 1964                            
*        SLL   R1,4                                                             
*        SLDL  R0,4                                                             
*        SLL   R1,3                                                             
*        SLDL  R0,5                                                             
*        STCM  R0,3,DATECN         DATECN=B'YYYYYYYMMMMDDDDD' BASE 1964         
*        STCM  R0,3,DATECO                                                      
*        OI    DATECO,X'80'        DATECO=B'YYYYYYYMMMMDDDDD' BASE 1900         
*                                                                               
*        MVC   DATEC,DATECO        SET DATEC TO OLD OR NEW FORMAT               
*        TM    DATEMODE,DATENEW                                                 
*        BZ    *+10                                                             
*        MVC   DATEC,DATECN                                                     
*                                                                               
*        L     RE,SAVRE                                                         
*        BR    RE                                                               
*        EJECT                                                                  
***********************************************************************         
* GET TIME AND SAVE IN SEVERAL FORMATS                                *         
***********************************************************************         
GETTIME  ST    RE,SAVRE                                                         
         TIME  TU                  R0=TIME IN 1/38400 SECS                      
         SRDL  R0,32                                                            
         D     R0,=F'38400'        R1=TIME IN SECONDS                           
         LR    RF,R1                                                            
         MH    R1,=H'3'                                                         
         SRL   R1,2                R1=(SECS*3)/4                                
         STH   R1,TIMEC            TIMEC=TIME IN SPECIAL UNITS                  
         LR    R1,RF                                                            
         SR    R0,R0                                                            
         D     R0,=F'60'           R1=BINARY MINUTES                            
         SR    RE,RE                                                            
         LR    RF,R1                                                            
         D     RE,=F'10'                                                        
         LTR   RE,RE                                                            
         BZ    *+8                                                              
         LA    RF,1(RF)                                                         
         STC   RF,TIMEI            TIMEI=SINGLE BYTE 10MIN INCREMENT            
         SR    R0,R0                                                            
         D     R0,=F'60'           R0=MINS,R1=HOURS                             
         STC   R1,TIMEB                                                         
         STC   R0,TIMEB+1          TIMEB=B'HHHHHHHHMMMMMMMM'                    
         L     RE,SAVRE                                                         
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* END OF ADDRESSABILITY VIA RB,R9,R8                                  *         
* ALL TABLES AND ROUTINES BEYOND THIS POINT ARE ADDRESSED BY RA       *         
* OR ACCESSED BY RELATIVE INSTRUCTIONS.                               *         
* EACH ROUTINE MUST BE LESS THAN 4K AND USE RB AS ITS MOCAL BASE REG. *         
* FIRST 4K OF MAIN CSECT GOES UNADDRESSABLE.                          *         
***********************************************************************         
         DROP  RB,R9,R8                                                         
COMMON   DS    0D                  USING COMMON,RA                              
*                                                                               
EXIT     XIT1                                                                   
                                                                                
***********************************************************************         
* CONSTANTS AND TABLES                                                *         
***********************************************************************         
DATAMGR  DC    V(DATAMGR)                                                       
VSHMUSS  DC    V(DMSHMUSS)                                                      
VISGENQ  DC    V(DMISGENQ)                                                      
VTICTOC  DC    V(TICTOC)                                                        
VHEXOUT  DC    V(HEXOUT)                                                        
VDATCON  DC    V(DATCON)                                                        
ASHFI    DC    A(0)                A(SHARED MEMORY FILE INDEX)                  
*                                                                               
DATE2MAX DC    X'7F9F'             CMPRSD NEW 2027-12-31                        
PERMDATE DC    X'FF9F'             USUALLY FFFF, >FF9F MEANS PERMANENT          
*&&UK                                                                           
EOFCNTOF DC    AL2(0)                                                           
EOFMAXOF DC    AL2(10)             OFFLINE MAX EOF ATTEMPTS                     
EOFBINOF DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
EOFMAXON DC    AL2(3)              OFFLINE MAX EOF ATTEMPTS                     
EOFBINON DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
RTLIVEON DC    AL2(12)             ONLINE  LIVE RETAIN HOURS                    
RTLIVEOF DC    AL2(12)             OFFLINE LIVE RETAIN HOURS                    
RTDEADON DC    AL2(02)             ONLINE  DEAD RETAIN HOURS                    
RTDEADOF DC    AL2(02)             OFFLINE DEAD RETAIN HOURS                    
*                                                                               
DFLPP    DC    AL1(66)             DEFAULT LINES PER PAGE                       
         DC    AL1(0)                                                           
DEFRETNL DC    AL2(24)             DEFAULT LIVE 24 HOURS                        
DEFRETND DC    AL2(02)             DEFAULT DEAD 02 HOURS                        
*&&                                                                             
*&&US                                                                           
EOFCNTOF DC    AL2(0)                                                           
EOFMAXOF DC    AL2(3)              OFFLINE MAX EOF ATTEMPTS                     
EOFBINOF DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
EOFMAXON DC    AL2(3)              OFFLINE MAX EOF ATTEMPTS                     
EOFBINON DC    AL4(02*60*100)      OFFLINE BINTVL WAIT TIME (1/100 SEC)         
*                                                                               
RTLIVEON DC    AL2(12)             ONLINE  LIVE RETAIN HOURS                    
RTLIVEOF DC    AL2(48)             OFFLINE LIVE RETAIN HOURS                    
RTDEADON DC    AL2(03)             ONLINE  DEAD RETAIN HOURS                    
RTDEADOF DC    AL2(18)             OFFLINE DEAD RETAIN HOURS                    
*                                                                               
DFLPP    DC    AL1(88)             DEFAULT LINES PER PAGE                       
         DC    AL1(0)                                                           
DEFRETNL DC    AL2(24)             DEFAULT LIVE 24 HOURS                        
DEFRETND DC    AL2(12)             DEFAULT DEAD 12 HOURS                        
*&&                                                                             
MAXSEQ   DC    F'65000'                                                         
FFS      DC    8X'FF'                                                           
W_BLKLN  DC    H'13680'            DEFAULT BLK LEN (GOOD FOR 3390)              
         DC    H'0'                                                             
*                                                                               
SPACES   DC    CL80' '                                                          
MEMORY   DC    CL8'WRKF'                                                        
ATTACH   DC    CL8'ATTACH'                                                      
DMREAD   DC    CL8'DMREAD'                                                      
DMWRT    DC    CL8'DMWRT'                                                       
LABEL    DC    CL8'*W_SAVE*'                                                    
*                                                                               
SOFLAB   DS    0CL8                                                             
         DC    C'*SOFSOF*'                                                      
EOFLAB   DS    0CL8                                                             
         DC    C'*EOFEOF*'                                                      
EOFTMP   DS    0CL8                                                             
         DC    C'*EOFTMP*'                                                      
EOFERR   DS    0CL8                                                             
         DC    C'*EOFERR*'                                                      
         EJECT                                                                  
***********************************************************************         
* ENTRY POINT - LIST OF WRKF FILES. BUILT ON FIRST CALL.              *         
* FIRST ENTRY XL1=NUM OF NORMAL FILES,XL1=EXTRA FILES,XL1=TOTAL FILES *         
* EACH OTHER ENTRY CONTAINS WRKF NUM /WRKF CHR/FLAGS/EXT NUM/A(DTF)   *         
***********************************************************************         
         DS    0D                                                               
         DC    CL8'WKSHLST '                                                    
WKSHLST  DS    0XL8                                                             
         DC    AL1(0),AL1(0),AL1(0),XL5'00'                                     
*                                                                               
         DC    AL1(1),C'I',XL2'00',X'F5',VL3(WRKF)                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00'                                              
         DC    AL1(0),C' ',XL6'00' SPACE FOR ONE EXTRA FILE                     
*                                                                               
         DC    AL1(0),C' ',XL6'00'                                              
WKSHLSTX EQU   *                                                                
                                                                                
***********************************************************************         
* ENTRY POINT - TABLE OF WRKF FILE CPUID/DSPACE FROM STAMP IN FILE    *         
***********************************************************************         
         DC    01XL2'00'           CL2=DDSQDQ STAMP                             
WKSHSTMP DC    17XL2'00'           CL2=STAMP OF EACH WRKF OPENED                
                                                                                
***********************************************************************         
* ENTRY POINT - TABLE OF WRKF FILE INFO INDEXED BY USERINUM.          *         
* ZEROTH ENTRY HAS CUMULATIVE DATA FOR ALL QUEUES.                    *         
* ENTRY FOR EACH QUEUE HAS FOLLOWING INFO.                            *         
*                                                                     *         
* +00(4) LAST INDEX PAGE/ENTRY WHERE FILE WAS ADDED                   *         
* +04(4) SPARE                                                        *         
* +08(4) SEARCH PART1 FOR NEW FILE - COUNT                            *         
* +12(4) SEARCH PART1 FOR NEW FILE - NUMBER OF I/0'S                  *         
* +16(4) SEARCH PART1 FOR OLD FILE TO PURGE - COUNT                   *         
* +20(4) SEARCH PART1 FOR OLD FILE TO PURGE - NUMBER OF I/0'S         *         
* +24(4) SEARCH PART2 FOR AVAIL CI - COUNT                            *         
* +28(4) SEARCH PART2 FOR AVAIL CI - NUMBER OF I/0'S                  *         
***********************************************************************         
         DS    0D                                                               
         DC    CL8'WKSHXPE '                                                    
WKSHXPE  DS    0XL32                                                            
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
         DC    XL8'FFFF000000000000',6F'0'                                      
WKSHXPEX EQU   *                                                                
         EJECT                                                                  
***********************************************************************         
* TABLE OF AVAILABLE FILES. SEQUENCE IS ORDER OF USERBILITY           *         
* FIRST ENTRY MUST BE FOR PURGED FILES                                *         
* SAME USERID REQUIRED ENTRYS (X'80') MUST COME NEXT                  *         
* ANY USERID ENTRYS MUST COME AFTER SAME USERID ENTRYS                *         
* ANY ENTRY CAN HAVE USE LARGEST FILE (X'40') INSTEAD OF OLDEST       *         
***********************************************************************         
AVSTAT   DS    0XL2                                                             
         DC    X'00',X'00'         PURGED    N/A                                
*                                                                               
         DC    X'10',X'C0'         SENT      SAMEUSER  LARGEST                  
         DC    X'20',X'C0'         PRTD      SAMEUSER  LARGEST                  
         DC    X'C0',X'80'         LIVE      SAMEUSER                           
*                                                                               
         DC    X'10',X'40'         SENT      ANYUSER   LARGEST                  
         DC    X'20',X'40'         PRTD      ANYUSER   LARGEST                  
         DC    X'C0',X'00'         LIVE      ANYUSER                            
*                                                                               
         DC    X'FF',X'00'         LAST/SENT N/A                                
         DC    X'FF',X'00'         LAST/PRTD N/A                                
         EJECT                                                                  
***********************************************************************         
* TABLE OF VALID WRKF ACTIONS                                         *         
*                                                                     *         
* XL1    INTERNAL ACTION NUMBER                                       *         
* CL7    EXTERNAL ACTION NAME (MATCH ON FIRST THREE CHRS)             *         
* XL1    FLAGS X'80'=WRKF FILE MUST BE SET BY CALLER IN DMCB          *         
*              X'40'=WRKF FILE MUST BE DEFINED IN BUFFER              *         
*              X'01'=WRKF FILE NEED NOT BE DEFINED AT ALL             *         
* AL3    ADDRESS OF PROCESSING ROUTINE                                *         
***********************************************************************         
W_ACTNS  DC    0F'0'                                                            
         DC    X'01',C'DMPRINT',X'00',AL3(ADDPRT)                               
         DC    X'02',C'OPEN   ',X'00',AL3(ADDOPN)                               
         DC    X'03',C'ADD    ',X'00',AL3(ADD)                                  
         DC    X'04',C'CLOSE  ',X'00',AL3(ADDCLS)                               
*                                                                               
         DC    X'21',C'ACTI   ',X'40',AL3(STA)                                  
         DC    X'22',C'HOLD   ',X'40',AL3(STA)                                  
         DC    X'23',C'DELETE ',X'40',AL3(STA)                                  
         DC    X'24',C'SENT   ',X'40',AL3(SEN)  SEN=SENDING OR SENT             
         DC    X'25',C'KEEP   ',X'40',AL3(STA)                                  
         DC    X'26',C'UNKEEP ',X'40',AL3(STA)                                  
         DC    X'27',C'PURGE  ',X'40',AL3(STA)                                  
         DC    X'28',C'RETAIN ',X'40',AL3(STA)                                  
         DC    X'29',C'PROC   ',X'40',AL3(STA)                                  
         DC    X'2A',C'UDATA  ',X'40',AL3(STA)                                  
         DC    X'30',C'RUNNING',X'40',AL3(STA)                                  
ACTSEND  DC    X'31',C'SENDING',X'40',AL3(SEN)  SEN=SENDING OR SENT             
*                                                                               
         DC    X'32',C'NCD    ',X'40',AL3(STA)                                  
         DC    X'33',C'OCD    ',X'40',AL3(STA)                                  
*                                                                               
         DC    X'41',C'INDEX  ',X'80',AL3(NDX)                                  
         DC    X'42',C'READ   ',X'40',AL3(RDF)                                  
         DC    X'43',C'SEQ    ',X'80',AL3(SEQ)                                  
         DC    X'44',C'WRITE  ',X'40',AL3(WRF)                                  
         DC    X'45',C'RANDOM ',X'40',AL3(RDR)                                  
*                                                                               
         DC    X'61',C'DESC   ',X'40',AL3(ATT)                                  
         DC    X'62',C'RELIVE ',X'40',AL3(ATT)                                  
         DC    X'63',C'REDEAD ',X'40',AL3(ATT)                                  
*                                                                               
         DC    X'81',C'BUFFER ',X'01',AL3(BUF)                                  
         DC    X'82',C'BURSTR ',X'01',AL3(BUF)                                  
         DC    X'83',C'BUSAVE ',X'01',AL3(BUS)                                  
*                                                                               
         DC    X'A1',C'INIT   ',X'80',AL3(INI)                                  
         DC    X'A2',C'GLIST  ',X'01',AL3(GLI)                                  
         DC    X'A3',C'GFILE  ',X'01',AL3(GFI)                                  
**NOP    DC    X'A4',C'CLEANUP',X'80',AL3(INI)  NO LONGER USED                  
         DC    X'A5',C'FFINIT ',X'80',AL3(INI)  FORCE FILE INIT                 
         DC    X'A6',C'FFOPEN ',X'01',AL3(BUF)  FORCE FILE OPEN                 
*                                                                               
W_ACTNX  DC    X'00',X'00'                                                      
*                                                                               
* EQUATES FOR WRKF ACTIONS                                                      
*                                                                               
ACTNDMP  EQU   X'01'                                                            
ACTNOPE  EQU   X'02'                                                            
ACTNADD  EQU   X'03'                                                            
ACTNCLO  EQU   X'04'                                                            
*                                                                               
ACTNACT  EQU   X'21'                                                            
ACTNHOL  EQU   X'22'                                                            
ACTNDEL  EQU   X'23'                                                            
ACTNSEN  EQU   X'24'                                                            
ACTNKEE  EQU   X'25'                                                            
ACTNUNK  EQU   X'26'                                                            
ACTNPUR  EQU   X'27'                                                            
ACTNRET  EQU   X'28'                                                            
ACTNPRO  EQU   X'29'                                                            
ACTNUDAT EQU   X'2A'                                                            
ACTNRUN  EQU   X'30'                                                            
ACTNSNG  EQU   X'31'                                                            
ACTNNCD  EQU   X'32'                                                            
ACTNOCD  EQU   X'33'                                                            
*                                                                               
ACTNREA  EQU   X'42'                                                            
*                                                                               
ACTNDES  EQU   X'61'                                                            
ACTNREL  EQU   X'62'                                                            
ACTNRED  EQU   X'63'                                                            
*                                                                               
ACTNBUF  EQU   X'81'                                                            
ACTNBUR  EQU   X'82'                                                            
ACTNBUS  EQU   X'83'                                                            
*                                                                               
ACTNINI  EQU   X'A1'               INITIALIZATION                               
ACTNGLI  EQU   X'A2'               GET LIST OF WORKER FILES                     
ACTNGFI  EQU   X'A3'               GET FILE ASSIGNED TO THIS COMPANY ID         
*CTNCLE  EQU   X'A4'               CLEAN UP                                     
ACTNFFI  EQU   X'A5'               FORCED FILE INITIALIZATION                   
ACTNFFO  EQU   X'A6'               FORCED FILE OPEN                             
*                                                                               
LASTSEQ  EQU   255                                                              
LASTSEQM EQU   254                                                              
LASTSEQP EQU   0                                                                
FRSTXTN  EQU   2                                                                
FRSTXTNM EQU   1                                                                
FRSTXTNP EQU   3                                                                
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* SHARED MEMORY INDEX ROUTINES                                        *         
***********************************************************************         
         DS    0D                                                               
       ++INCLUDE DDSHFIR                                                        
         EJECT                                                                  
***********************************************************************         
* PASS   DUB+0(3)  DATEC/TIMEI. TIMII IGNORED,USE TIMEB.              *         
* PASS   DUB+3(2)  RETENTION PERIOD IN HOURS (X'FFFF'=PER)            *         
* PASS   DUB+5(1)  X'FF' IF WANT TO GO BACKWARDS                      *         
*                                                                     *         
* RETURN DUB1+0(3) NEW DATEC/TIMEI                                    *         
* RETURN DUB1+6(2) NEW TIME IN (SEC*3)/$ UNITS                        *         
***********************************************************************         
GETRETN  NTR1  BASE=*,LABEL=*                                                   
*                                                                               
         XC    DUB1,DUB1           INITIALISE RETURN VALUES                     
         XC    GRCB,GRCB                                                        
         ICM   RF,15,=V(GETRET)    TEST IF GET RETAIN MODULE INCLUDED           
         BZ    GRETN1                                                           
         MVC   GRHOURS,DUB+3       SET BINARY HOURS RETAIN PERIOD               
*                                                                               
         CLI   DATEMODE,DATEOLD                                                 
         BE    GRETN0                                                           
         GOTO1 VDATCON,DUB2,(14,DUB),(3,GRIYEAR)                                
         B     GRETN01                                                          
GRETN0   GOTO1 VDATCON,DUB2,(2,DUB),(3,GRIYEAR)                                 
*                                                                               
GRETN01  MVC   GRIHOUR(2),TIMEB    SET BINARY HOURS/MINUTES                     
         CLI   DUB+5,X'FF'                                                      
         BNE   *+8                                                              
         OI    GRFLAGS,X'C4'       SET GO BACK AND IGNORE WEEKENDS              
         OI    GRFLAGS,GRDF2028    ALLOW YEARS GREATER THAN 2027                
         LA    R1,GRCB                                                          
         ICM   RF,15,=V(GETRET)    V(GETRET) MUST BE RESOLVED                   
         BNZ   *+6                                                              
         DC    H'0'                                                             
         BASR  RE,RF                                                            
*                                                                               
GRETN1   MVC   DUB2+4(3),GROYEAR   RETURN YEAR/MONTH/DAY                        
         CLI   DATEMODE,DATEOLD                                                 
         BE    GRETN11                                                          
         GOTO1 VDATCON,DUB2,(3,GROYEAR),(30,DUB1)                               
         B     GRETN2                                                           
GRETN11  GOTO1 VDATCON,DUB2,(3,GROYEAR),(2,DUB1)                                
*                                                                               
GRETN2   SR    R0,R0               CONVERT TIME TO WK TIME UNITS                
         IC    R0,GROMIN                                                        
         SR    R1,R1                                                            
         IC    R1,GROHOUR                                                       
         MH    R1,=H'60'                                                        
         AR    R1,R0               R1=BINARY MINUTES                            
         LR    RF,R1               RF=BINARY MINUTES                            
         SR    R0,R0                                                            
         D     R0,=F'10'                                                        
         LTR   R0,R0                                                            
         BZ    *+8                                                              
         AHI   R1,1                                                             
         STC   R1,DUB1+2           RETURN NEW TIME IN 10MIN INCREMENTS          
         MHI   RF,60*3             RF=SECONDS*3                                 
         SRL   RF,2                                                             
         STH   RF,DUB1+6           RETURN NEW TIME IN (SECS*3)/4                
*                                                                               
GRETNX   J     EXIT                                                             
         LTORG                                                                  
                                                                                
***********************************************************************         
* SUBROUTINE TO INITIALISE WRKF FILE                                  *         
***********************************************************************         
IWKR     NTR1  BASE=*,LABEL=*                                                   
*                                                                               
         MVI   INIFLAGS,0          FLAGS USED DURING THIS INIT                  
*                                                                               
         CLI   USERINUM,0          WRKF FILE MUST BE DEFINED                    
         JE    *+2                 DEATH - MUST BE DEFINED                      
         MVC   CFWKID,USERWRKF     SET WRKF ALPHA ID FOR ENQUEUE                
*                                                                               
         CLI   SKACTN,ACTNFFO      OPENING THE FILE ONLY?                       
         BE    IWKR020             YES, SKIP SHARED MEMORY ATTACH               
*                                                                               
         OC    ASHFI,ASHFI         A(SHARED MEMORY FILE INDEXES)                
         BNZ   IWKR010                                                          
         GOTO1 VSHMUSS,DMCB,ATTACH,MEMORY,0,0                                   
         ICM   R1,15,DMCB+8                                                     
         JZ    *+2                 DEATH - CANNOT ATTACH                        
         ST    R1,ASHFI                                                         
*                                                                               
IWKR010  SAM31                                                                  
         MVC   FIWSHA,ASHFI                                                     
         MVC   FIWRES,SPACES                                                    
         MVC   FIWRES(L'CFWKID),CFWKID  FILE NAME                               
         BRAS  RE,FIRSET           SET VALUES FOR THIS WORKER                   
         JNE   *+2                 DEATH- INVALID WORKER FILE                   
         SAM24                                                                  
*                                                                               
IWKR020  XC    P1(24),P1           BUILD DADDS PARM LIST                        
         LA    RE,CXREC                                                         
         ST    RE,P2                                                            
         MVC   P4,VW_FILE          SET DTF ADDR                                 
         LA    RE,CXADDR                                                        
         ST    RE,P5                                                            
         CLI   OFFLINE,C'Y'        OPEN W_FILE IF OFFLINE                       
         BNE   IWKR100                                                          
         L     RE,VW_FILE                                                       
         TM    36(RE),X'20'        TEST IF FILE ALREADY OPEN                    
         BO    IWKR160                                                          
         MVC   P1,VDAOPEN                                                       
         GOTO1 VDADDS,P1                                                        
*                                                                               
IWKR100  MVC   P1,VDACPUID         READ RECORD ZERO TO GET CPU ID               
         GOTO1 VDADDS,P1                                                        
         MVC   THISSTMP,P3+2       STAMP IS CL1=CPUID,CL1=DSPACE                
         MVI   DSPACEV,C' '                                                     
         CLI   OFFLINE,C'Y'        GET DSPACE=Z VALUE FROM OFFLINE SSB          
         BNE   IWKR110                                                          
         L     RE,=V(SSB)                                                       
         CLI   SSOXTND-SSOOFF(RE),X'FF'                                         
         BNE   *+10                                                             
         MVC   DSPACEV,SSODSPAC-SSOOFF(RE)                                      
*                                                                               
IWKR110  TM    P3+1,X'80'          TEST IF CPUID MATCHES                        
         BZ    IWKR120                                                          
         MVC   INIMSG1X,W_FILE+4                                                
         MVC   INIMSG1Y,THISSTMP                                                
         LA    R6,INIMSG1L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'01'      CPUID DOES NOT MATCH                         
*                                                                               
IWKR120  CLI   OFFLINE,C'Y'        TEST IF DSPACE=CARD MATCHES STAMP            
         BNE   IWKR140             ONLY IF OFFLINE                              
         CLC   DSPACEV,THISSTMP+1                                               
         BE    IWKR140             STAMPS MATCH, MOVE ALONG                     
         MVC   INIMSG2X,W_FILE+4                                                
         MVC   INIMSG2Y,THISSTMP                                                
         MVC   INIMSG2Z,DSPACEV                                                 
         LA    R6,INIMSG2L                                                      
         WTO   TEXT=(R6)           STAMP DOES NOT MATCH                         
         CLI   DSPACEV,C' '        NO DATA SPACE SET, ASSUME ADV FILES          
         BNH   IWKR130                                                          
*&&US*&& CLI   DSPACEV,C'R'        REP USES ADV WORKER FILES                    
*&&US*&& BE    IWKR130                                                          
         B     IWKR132                                                          
IWKR130  CLI   THISSTMP+1,C'A'     ADV WORKER FILES                             
         JE    IWKR140                                                          
IWKR132  OI    INIFLAGS,X'02'      DSPACE DOES NOT MATCH                        
*                                                                               
IWKR140  SR    RE,RE               INDEX INTO STAMP TABLE                       
         IC    RE,USERINUM                                                      
         CHI   RE,16                                                            
         BH    IWKR150                                                          
         SLL   RE,1                                                             
         LA    RE,WKSHSTMP(RE)                                                  
         MVC   0(2,RE),THISSTMP    SAVE THE STAMP OF THIS WRKF                  
*                                                                               
         LA    RE,WKSHSTMP         POINT TO FIRST ENTRY                         
         OC    0(2,RE),0(RE)                                                    
         BNZ   *+10                                                             
         MVC   0(2,RE),THISSTMP    SAVE THE CURRENT STAMP                       
         MVC   LASTSTMP,0(RE)                                                   
         CLC   THISSTMP,LASTSTMP   TEST THE WRKF STAMPS MATCH                   
         BE    IWKR150                                                          
         MVC   INIMSG3X,W_FILE+4                                                
         MVC   INIMSG3Y,THISSTMP                                                
         MVC   INIMSG3Z,LASTSTMP                                                
         LA    R6,INIMSG3L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'04'      WF STAMP DOES NOT MATCH LAST STAMP           
*                                                                               
IWKR150  XC    P3(4),P3            CLEAR CPUID/DSPACE DATA                      
*                                                                               
IWKR160  LA    R1,DYNBLK2          GET DSN OF WORKER FILE                       
         ST    R1,DYNBLK1          SET UP DYNALLOC PARMS                        
         OI    DYNBLK1,X'80'                                                    
         LA    R1,DYNBLK4                                                       
         ST    R1,DYNBLK3                                                       
         LA    R1,DYNBLK5                                                       
         ST    R1,DYNBLK3+4                                                     
         OI    DYNBLK3+4,X'80'                                                  
         MVC   DYNBLK2,=X'1407000000000000000000000000000000000000'             
         LA    R1,DYNBLK3                                                       
         ST    R1,DYNBLK2+8                                                     
         MVC   DYNBLK4(6),=X'000100010008'                                      
         MVC   DYNBLK4+6(8),SPACES                                              
         MVC   DYNBLK4+6(L'FIWRES),FIWRES                                       
         MVC   DYNBLK5,SPACES                                                   
         MVC   DYNBLK5(6),=X'00050001002C'                                      
         LA    R1,DYNBLK1                                                       
         DYNALLOC                                                               
         LTR   RF,RF                                                            
         BZ    *+10                                                             
         XC    DYNBLK5,DYNBLK5                                                  
         LA    RF,DYNBLK5+6                                                     
*                                                                               
         CLI   SKACTN,ACTNFFO      OPENING THE FILE ONLY?                       
         BE    IWKR165             YES, SKIP SHARED MEMORY ATTACH               
         CLI   SKACTN,ACTNFFI      INITIALIZE FROM FILE?                        
         BNE   IWKR170             NO, GO CHECK DSN & INIT FROM MEMORY          
*                                                                               
IWKR165  XC    P3(4),P3            YES, READ FILE                               
         MVC   P1,VRDID                                                         
         MVC   CXADDR,=X'00010100'                                              
         GOTO1 VDADDS,P1                                                        
         OC    P3(2),P3                                                         
         BNZ   IWKRERR                                                          
         L     RE,VWKRTAB                                                       
         MVC   0(20,RE),CXREC      SET PART1 INDEX DATA                         
         MVC   20(20,RE),PART2IND                                               
         TM    0(RE),X'80'                                                      
         BZ    *+14                                                             
         MVC   20(20,RE),CXREC+L'W_INDEX SET PART2 INDEX DATA                   
         NI    0(RE),X'7F'                                                      
         MVC   14(1,RE),USERINUM   SET INTERNAL WRKF FILE NUM                   
         MVC   15(5,RE),USERWRKF   SET ALPHA WRKF FILE NAME                     
         MVC   CIDATA,0(RE)                                                     
         MVI   CIRSNF,X'01'        X'01'=RSN IS REL POSN IN INDEX               
         B     IWKR190                                                          
*                                                                               
IWKR170  SAM31                                                                  
         L     R1,FIWRHA                                                        
         USING SITABD,R1                                                        
*                                                                               
         CLC   SITDSN,0(RF)        COMPARE TO DSN OF SHARED INDEX               
*&&UK*&& B     IWKR180             TEMP FIX FOR UK TEST SYSTEMS                 
         BE    IWKR180             SHOULD BE SAME, IF NOT THEN TROUBLE          
         MVC   TEMPWS(L'SITDSN),0(RF)                                           
         MVC   INIMSG4X,W_FILE+4                                                
         MVC   INIMSG4Y,0(RF)                                                   
         MVC   INIMSG4Z,SITDSN                                                  
         LA    R6,INIMSG4L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'08'      DSN DOES NOT MATCH MEMORY                    
         B     IWKR195                                                          
*                                                                               
IWKR180  MVC   CXADDR,=X'00010100'                                              
         XC    CIDATA,CIDATA                                                    
         MVC   CICINDX,SITXCIC+2   INDEX NUMBER OF CI'S                         
         MVC   CITRKS,SIT1TPC+2    PART1 TRACKS PER CI                          
         MVC   CIHIREC+1(1),SITRFHR+2 BLOCKS PER TRACK                          
         MVC   CIBLKLN,SITDBS+2    BLOCK SIZE                                   
         MVC   CICITOT,SIT1CIC+2   PART1 TOTAL NUMBER OF CI'S                   
         MVC   CJCITOT,SIT2CIC+2   PART2 TOTAL NUMBER OF CI'S                   
         MVC   CJTRKS,SIT2TPC+2    PART2 TRACKS PER CI                          
         MVC   CJSTTRK,SIT2STT     PART2 START TRACK                            
         MVC   CIFDTRK,SIT1STT     FIRST DATA CI STARTS ON THIS TRACK           
         MVC   CFWFXID,SITFXID     FILE EXTERNAL ID (TST/ADV/REP)               
         MVC   CFWKINUM,USERINUM   SET INTERNAL WRKF FILE NUM                   
         MVC   CFWKID,USERWRKF     SET ALPHA WRKF FILE NAME                     
         MVI   CIRSNF,X'01'        X'01'=RSN IS REL POSN IN INDEX               
         DROP  R1                                                               
         SAM24                                                                  
*                                                                               
IWKR190  L     RE,VWKRTAB          A(PRE-DTF INFORMATION)                       
         MVC   0(L'CIDATA,RE),CIDATA SET PRE-DTF VALUES                         
*                                                                               
IWKR195  CLI   CFWFXID,C' '        TEST IF EXTID SET IN INDEX RECORD            
         BNH   IWKR200                                                          
         CLC   CFWFXID,THISSTMP+1                                               
         BE    IWKR200                                                          
         MVC   INIMSG5X,W_FILE+4                                                
         MVC   INIMSG5Y,THISSTMP                                                
         MVC   INIMSG5Z,CFWFXID                                                 
         LA    R6,INIMSG5L                                                      
         WTO   TEXT=(R6)                                                        
         OI    INIFLAGS,X'10'      EXTID DOES NOT MATCH                         
*                                                                               
IWKR200  L     RE,VW_FILE          SET F/L RECORD SIZE IN W_FILE DTF            
         LA    RE,52(RE)                                                        
         MVC   0(2,RE),CIBLKLN                                                  
         OI    0(RE),X'80'                                                      
         CLC   CIBLKLN,W_BLKLN     TEST ACTUAL VRS ASSUMED BLOCK LEN            
         BNH   IWKRY                                                            
         DC    H'0'                I DONT THINK I CAN COPE WITH THIS            
*                                                                               
IWKRERR  MVI   PARM3,X'40'                                                      
         MVC   INIMSG6X,W_FILE+4                                                
         MVC   INIMSG6Y,THISSTMP                                                
         LA    R6,INIMSG6L         WFX=YY DISK ERROR DURING INIT                
         WTO   TEXT=(R6)                                                        
         CLI   OFFLINE,C'Y'        EXIT WITH ERROR IF ONLINE                    
         BNE   IWKRZ                                                            
         OI    INIFLAGS,X'20'      WRKF INITIALIZATION ERROR                    
*                                                                               
IWKRY    MVI   PARM3,0                                                          
*                                                                               
IWKRZ    TM    INIFLAGS,X'01'+X'02'+X'08'+X'20'                                 
         BZ    *+6                 ANY CRITICAL FAILURES?                       
         DC    H'0'                YES, DEATH                                   
*                                                                               
         CLI   PARM3,0             EXIT WITH CC EQUAL IF OK                     
         J     EXIT                                                             
*                                                                               
PART2IND DC    XL4'00',XL10'7FFF7FFF000000010100',XL6'00'                       
VDADDS   DC    V(DADDS)                                                         
VDAOPEN  DC    V(DAOPEN)                                                        
VRDID    DC    V(RDID)                                                          
VDACPUID DC    V(DACPUID)                                                       
*                                                                               
         LTORG                                                                  
*                                                                               
ASMIDF   DC    CL8'ASMIDF'                                                      
*                                                                               
INIMSG1L DC    H'54'                                                            
INIMSG1  DC    CL54' '                                                          
         ORG   INIMSG1                                                          
         DC    C'WFERR#S WF'                                                    
INIMSG1X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG1Y DC    C'YY'                                                            
         DC    C' STAMP DOES NOT MATCH CPUID'                                   
         ORG                                                                    
*                                                                               
INIMSG2L DC    H'54'                                                            
INIMSG2  DC    CL54' '                                                          
         ORG   INIMSG2                                                          
         DC    C'WFERR#S WF'                                                    
INIMSG2X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG2Y DC    C'YY'                                                            
         DC    C' STAMP DOES NOT MATCH DSPACE='                                 
INIMSG2Z DC    C'Z'                                                             
         ORG                                                                    
*                                                                               
INIMSG3L DC    H'54'                                                            
INIMSG3  DC    CL54' '                                                          
         ORG   INIMSG3                                                          
         DC    C'WFERR#S WK'                                                    
INIMSG3X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG3Y DC    C'YY'                                                            
         DC    C' STAMP DOES NOT MATCH WRKF='                                   
INIMSG3Z DC    C'ZZ'                                                            
         ORG                                                                    
*                                                                               
INIMSG4L DC    H'54'                                                            
INIMSG4  DC    CL54' '                                                          
         ORG   INIMSG4                                                          
         DC    C'WFERR#S WF'                                                    
INIMSG4X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG4Y DC    C'YYYYYYYYYY'                                                    
         DC    C' DOES NOT MATCH DSN='                                          
INIMSG4Z DC    C'ZZZZZZZZZZ'                                                    
         ORG                                                                    
*                                                                               
INIMSG5L DC    H'54'                                                            
INIMSG5  DC    CL54' '                                                          
         ORG   INIMSG5                                                          
         DC    C'WFERR#S WK'                                                    
INIMSG5X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG5Y DC    C'YY'                                                            
         DC    C' STAMP DOES NOT MATCH EXTID='                                  
INIMSG5Z DC    C'Z'                                                             
         ORG                                                                    
*                                                                               
INIMSG6L DC    H'54'                                                            
INIMSG6  DC    CL54' '                                                          
         ORG   INIMSG6                                                          
         DC    C'WFERR#S WF'                                                    
INIMSG6X DC    C'X'                                                             
         DC    C'='                                                             
INIMSG6Y DC    C'YY'                                                            
         DC    C' DISK ERROR DURING INIT'                                       
         ORG                                                                    
*                                                                               
DSPACEV  DC    CL1' '                                                           
THISSTMP DC    CL2' '                                                           
LASTSTMP DC    CL2' '                                                           
         EJECT                                                                  
***********************************************************************         
* KEY STATUS WARNING MESSAGES                                         *         
***********************************************************************         
KM_P1M   MVI   KMSP,1              PART1 KEY MISMATCH ON PURGE                  
         J     KEYMESS                                                          
KM_P2M   MVI   KMSP,2              PART2 KEY MISMATCH ON PURGE                  
         J     KEYMESS                                                          
KM_KNF   MVI   KMSP,3              KEY NOT FOUND IN TREE ON PURGE               
         J     KEYMESS                                                          
KM_P1P   MVI   KMSP,4              PURGING PART1 THAT IS ALREADY PURGED         
         J     KEYMESS                                                          
KM_P2P   MVI   KMSP,5              PURGING PART2 THAT IS ALREADY PURGED         
         J     KEYMESS                                                          
                                                                                
***********************************************************************         
* ISSUE KEY STATUS WARNING MESSAGE                                    *         
***********************************************************************         
KEYMESS  NTR1  BASE=*,LABEL=*                                                   
         SAM31                                                                  
         L     R2,FIWNDA                                                        
*                                                                               
         LHI   R1,L'MSGW           INIT WTO MESSAGE                             
         STCM  R1,3,MSGWLEN                                                     
         MVC   MSGWTXT,SPACES                                                   
         MVC   MSGWTXT(L'MSGWA),MSGWA                                           
*                                                                               
KM10     CLI   KMSP,1              PART1 KEY MISMATCH ON PURGE                  
         BNE   KM20                                                             
         MVC   MSGWTXT+L'MSGWA(L'MSGW1),MSGW1                                   
         USING SI1PARD,R2                                                       
         MVC   BADXNDX,SVDATA                                                   
         B     KM100                                                            
*                                                                               
KM20     CLI   KMSP,2              PART2 KEY MISMATCH ON PURGE                  
         BNE   KM30                                                             
         MVC   MSGWTXT+L'MSGWA(L'MSGW2),MSGW2                                   
         USING SI2PARD,R2                                                       
         MVC   BADXNDX,SI2NDX                                                   
         B     KM100                                                            
*                                                                               
KM30     CLI   KMSP,3              KEY NOT FOUND IN TREE ON PURGE               
         BNE   KM40                                                             
         MVC   MSGWTXT+L'MSGWA(L'MSGW3),MSGW3                                   
         USING SI1PARD,R2                                                       
         MVC   BADXNDX,SI1NDX                                                   
         B     KM100                                                            
*                                                                               
KM40     CLI   KMSP,4              PURGING PART1 THAT IS ALREADY PURGED         
         BNE   KM50                                                             
         MVC   MSGWTXT+L'MSGWA(L'MSGW4),MSGW4                                   
         MVC   BADXNDX,SI1NDX                                                   
         B     KM100                                                            
*                                                                               
KM50     CLI   KMSP,5              PURGING PART2 THAT IS ALREADY PURGED         
         BNE   KM100                                                            
         MVC   MSGWTXT+L'MSGWA(L'MSGW5),MSGW5                                   
         MVC   BADXNDX,SI1NDX                                                   
         DROP  R2                                                               
*                                                                               
KM100    SAM24 ,                   OUTPUT INDEX KEYS                            
         LA    R3,MSGW                                                          
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         USING UKRECD,R2                                                        
         LA    R2,FIWNDX                                                        
         MVC   MSGWNDX,SPACES                                                   
         GOTO1 VHEXOUT,DMCB,UKUSRID,MXUSER,L'UKUSRID,0                          
         MVC   MXSYSP,UKSYSPRG                                                  
         GOTO1 VHEXOUT,DMCB,UKDAY,MXDAY,L'UKDAY,0                               
         MVC   MXCLASS,UKCLASS                                                  
         XC    FULL,FULL                                                        
         MVC   FULL+2(2),UKFILENO                                               
         EDIT  (B4,FULL),(5,MXREFNO),ZERO=NOBLANK,FILL=0,WRK=TEMPWS             
         GOTO1 VHEXOUT,DMCB,UKSTAT,MXSTAT,L'UKSTAT,0                            
         EDIT  (B1,UKSEQ),(3,MXSEQ),ZERO=NOBLANK,WRK=TEMPWS                     
         MVC   FULL,FIWCIA                                                      
         GOTO1 VHEXOUT,DMCB,FULL,MXCIA,L'FIWCIA,0                               
         MVC   MSGWMSG(L'MSGWNDX),MSGWNDX                                       
*                                                                               
         LA    R2,BADXNDX                                                       
         MVC   MSGWNDX,SPACES                                                   
         GOTO1 VHEXOUT,DMCB,UKUSRID,MXUSER,L'UKUSRID,0                          
         MVC   MXSYSP,UKSYSPRG                                                  
         GOTO1 VHEXOUT,DMCB,UKDAY,MXDAY,L'UKDAY,0                               
         MVC   MXCLASS,UKCLASS                                                  
         XC    FULL,FULL                                                        
         MVC   FULL+2(2),UKFILENO                                               
         EDIT  (B4,FULL),(5,MXREFNO),ZERO=NOBLANK,FILL=0,WRK=TEMPWS             
         GOTO1 VHEXOUT,DMCB,UKSTAT,MXSTAT,L'UKSTAT,0                            
         EDIT  (B1,UKSEQ),(3,MXSEQ),ZERO=NOBLANK,WRK=TEMPWS                     
         MVC   FULL,FIWCIA                                                      
         GOTO1 VHEXOUT,DMCB,FULL,MXCIA,L'FIWCIA,0                               
         MVC   MSGWDET(L'MSGWNDX),MSGWNDX                                       
         MVC   MSGWNDX,SPACES                                                   
         DROP  R2                                                               
*                                                                               
         LA    R3,MSGW                                                          
         WTO   TEXT=(R3)                                                        
         MVC   MSGWTXT,SPACES                                                   
*                                                                               
         MVI   KMSP,0                                                           
         J     EXIT                                                             
*&&US                                                                           
MSGWA    DC    C'AUTONOTE*AWIL:'                                                
*&&                                                                             
*&&UK                                                                           
MSGWA    DC    C'AUTONOTE*RMOR:'                                                
*&&                                                                             
MSGW1    DC    C'*WARNING* KEY MISMATCH ON PART1 PURGE'                         
MSGW2    DC    C'*WARNING* KEY MISMATCH ON PART2 PURGE'                         
MSGW3    DC    C'*WARNING* KEY NOT FOUND IN INDEX TREE'                         
MSGW4    DC    C'*WARNING* KEY PURGE FOR PART1 ALREADY PURGED'                  
MSGW5    DC    C'*WARNING* KEY PURGE FOR PART2 ALREADY PURGED'                  
*                                                                               
MSGWNDX  DS    0CL40                                                            
MXUSER   DS    CL4,CL1                                                          
MXSYSP   DS    CL4                                                              
MXDAY    DS    CL2                                                              
MXCLASS  DS    CL1,CL1                                                          
MXREFNO  DS    CL5,CL1                                                          
MXSTAT   DS    CL2,CL1                                                          
MXSEQ    DS    CL3,CL1                                                          
MXCIA    DS    CL8,CL8                                                          
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
* POST TO INDEX MONITORING PROGRAM                                    *         
* ON ENTRY 'MOPP' CONTAINS REASON FOR POST (SITRIND IN SITABD)        *         
***********************************************************************         
MONPOST  NTR1  BASE=*,LABEL=*                                                   
         SAM31                                                                  
*                                                                               
         LHI   R1,L'MSGW           INIT WTO MESSAGE                             
         STCM  R1,3,MSGWLEN                                                     
         MVC   MSGWTXT,SPACES                                                   
         MVC   MSGWMSG,MONPMSG     SET ALERT                                    
*                                                                               
         L     R2,FIWSHA                                                        
         USING SIHDRD,R2                                                        
         L     R3,FIWRHA                                                        
         USING SITABD,R3                                                        
*                                                                               
         CLI   MOPP,X'FF'          REBUILD ENTIRE INDEX?                        
         BNE   MONP012             NO                                           
         MVC   MSGWDET(L'MONPDET1),MONPDET1                                     
         MVC   MSGWDET+L'MONPDET1(L'MEMORY),MEMORY                              
         OI    SIHDR,X'80'         TURN ON RESET FLAG                           
         XC    SIHEYE,SIHEYE       CLEAR EYE CATCHER                            
         B     MONP040                                                          
MONP012  TM    MOPP,SITRBLD        INDEX REBUILD FOR RESOURCE?                  
         BZ    MONP016             NO                                           
         MVC   MSGWDET(L'MONPDET2),MONPDET2                                     
         MVC   MSGWDET+L'MONPDET2(L'FIWRES),FIWRES                              
         B     MONP018                                                          
MONP014  TM    MOPP,SITRP1S        LOW ON PART 1 CONTROL INTERVALS?             
         BZ    MONP016             NO                                           
         MVC   MSGWDET(L'MONPDET3),MONPDET3                                     
         MVC   MSGWDET+L'MONPDET3(L'FIWRES),FIWRES                              
         B     MONP018                                                          
MONP016  TM    MOPP,SITRP2S        LOW ON PART 2 CONTROL INTERVALS?             
         BZ    MONP018             NO                                           
         MVC   MSGWDET(L'MONPDET4),MONPDET4                                     
         MVC   MSGWDET+L'MONPDET4(L'FIWRES),FIWRES                              
MONP018  OC    SITRIND,MOPP        SET REASON FOR POST IN MEMORY                
*                                                                               
MONP040  TM    MOPP,SITRBLD        ARE WE REQUESTING A BUILD?                   
         BO    MONP045             YES: ALWAYS SEND EMAIL                       
         OC    EOFCNT,EOFCNT       IS THIS A SUBSEQUENT SCAN ATTEMPT?           
         BNZ   MONP050             YES: SENT AN EMAIL ALREADY                   
MONP045  LA    R4,MSGW             OUTPUT REASON FOR POST                       
         WTO   TEXT=(R4)                                                        
         MVC   MSGWDET,SPACES                                                   
*                                                                               
MONP050  MVC   MSGWDET(L'MONPDET5),MONPDET5                                     
         LOCASCB STOKEN=SIHMSTOK   LOCATE ASCB FROM JOB STOKEN                  
         LTR   RF,RF                                                            
         BNZ   MONPERX                                                          
*                                                                               
         MVC   MSGWDET(L'MONPDET6),MONPDET6                                     
         LR    R4,R1                                                            
         USING ASCB,R4                                                          
         CLC   ASCBASCB,=C'ASCB'                                                
         BNE   MONPERX                                                          
*                                                                               
         MVC   MSGWDET(L'MONPDET7),MONPDET7                                     
         L     R3,SIHMECB                                                       
         POST  (R3),99,ASCB=(R4),LINKAGE=SYSTEM,ECBKEY=8,MF=(E,POSTPA)          
         LTR   RF,RF                                                            
         BNZ   MONPERX                                                          
*                                                                               
         CLI   OFFLINE,C'Y'                                                     
         BE    MONP070             YES                                          
         LHI   R1,3840             1 MILLISEC = 38.4 TUS                        
         MHI   R1,10                                                            
         ICM   RF,15,=V(TKWAIT)                                                 
         BZ    MONP060                                                          
         BASR  RE,RF                                                            
         L     RE,=V(SSB)          FOR ONLINE                                   
         L     RE,SSBTKADR-SSBD(RE)                                             
         ICM   RF,15,TCBTKWT-TCBD(RE)                                           
         BNP   MONPXIT                                                          
         BCTR  RF,RF                                                            
         STCM  RF,15,TCBTKWT-TCBD(RE)                                           
         B     MONPXIT                                                          
MONP060  GOTO1 VTICTOC,DUB,C'SSET'                                              
MONP070  LHI   R1,3840             OFFLINE DO FULL TIMER WAIT                   
         MHI   R1,10                                                            
         ST    R1,FUL                                                           
         STIMER WAIT,TUINTVL=FUL                                                
         CLI   OFFLINE,C'Y'                                                     
         BE    MONPXIT             NO                                           
         GOTO1 VTICTOC,DUB,C'RSET' YES: RESET TIMER                             
         B     MONPXIT                                                          
*                                                                               
MONPERX  LA    R4,MSGW             OUTPUT REASON FOR ERROR                      
         WTO   TEXT=(R4)                                                        
*                                                                               
MONPXIT  MVC   MSGWTXT,SPACES                                                   
         MVI   MOPP,0                                                           
         J     EXIT                                                             
         DROP  R2,R3,R4                                                         
*                                                                               
POSTPA   POST  ECBKEY=YES,MF=L                                                  
*&&US                                                                           
MONPMSG  DC    CL40'AUTONOTE*US-MF_FAC_NOTIFY:*ALERT*'                          
*&&                                                                             
*&&UK                                                                           
MONPMSG  DC    CL40'AUTONOTE*EU-FAC-TEAM:*ALERT*'                               
*&&                                                                             
MONPDET1 DC    C'FULL INDEX MEMORY RESET FOR '                                  
MONPDET2 DC    C'INDEX REBUILD REQUESTED FOR '                                  
MONPDET3 DC    C'NO AVAILABLE PART1S FOR '                                      
MONPDET4 DC    C'NO AVAILABLE PART2S FOR '                                      
MONPDET5 DC    C'*WRKF* POST FAIL (STOKEN)'                                     
MONPDET6 DC    C'*WRKF* POST FAIL (ASCB)'                                       
MONPDET7 DC    C'*WRKF* POST FAIL (POST)'                                       
         EJECT                                                                  
***********************************************************************         
* SET REPORT IN ERROR TABLE. TABLE HAS HEADER PLUS ENTRIES.           *         
* HEADER CL8=EYECATCHER,XL2=ENTRYSIZE,XL2=ENTRYMAX,XL2=ENTRYCOUNT     *         
* ENTRY  XL1=ACTION,XL1=FLAG,XL1=N/D,CL1=WRKFID,XL4=CIADDR            *         
*        XL7=REPKEY,XL1=REPSEQ,XL7=CIKEY,XL1=CISEQ                    *         
***********************************************************************         
LOGERR   NTR1  BASE=*                                                           
         XC    DUB(16),DUB                                                      
         TIME  DEC,DUB,LINKAGE=SYSTEM                                           
         MVC   WKSHERRT,DUB                                                     
         MVC   LOGMSG1+10(1),W_FILE+4                                           
         ICM   RF,15,VHEXOUT                                                    
         BZ    LOGERR0                                                          
         LA    R1,LOGPL                                                         
         GOTO1 (RF),(R1),WKSHERRT+3,LOGMSG1+12,3,=C'TOG'                        
         GOTO1 (RF),(R1),CXADDR,LOGMSG1+19,4,=C'TOG'                            
         LH    RE,CXENTRY                                                       
         MH    RE,CINDXLN                                                       
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  LOGMSG1+28(5),DUB                                                
         GOTO1 (RF),(R1),W_KEY,LOGMSG1+34,10,=C'TOG'                            
         GOTO1 (RF),(R1),CIADDR,LOGMSG2+19,4,=C'TOG'                            
         GOTO1 (RF),(R1),SVDATA,LOGMSG2+34,10,=C'TOG'                           
*                                                                               
LOGERR0  LA    RF,WKSHERRS         RF=A(WKSHERRS TABLE)                         
         LH    R1,14(RF)           BUMP TOTAL OF ERRORS                         
         LA    R1,1(R1)                                                         
         STH   R1,14(RF)                                                        
         CLI   STCTRL,X'53'        TEST IF PURGING MULTI CI REPORT              
         BNE   LOGERR1                                                          
         MVC   LOGAVLX,AVLXNDX     SAVE INDEX DATA OF BAD REPORT                
         MVC   LOGCBAD,BADCNDX                                                  
         MVC   LOGXBAD,BADXNDX                                                  
*                                                                               
LOGERR1  CLI   STFLAG,X'8A'        TYPE#1 ERROR                                 
         BNE   LOGERR2                                                          
         LH    R1,16(RF)           BUMP TYPE#1 COUNT                            
         LA    R1,1(R1)                                                         
         STH   R1,16(RF)                                                        
         MVI   LOGMSG1+6,C'1'                                                   
         MVI   LOGMSG2+6,C'1'                                                   
         LA    RF,WKSHERRS                                                      
         CLC   16(2,RF),=H'4'      ONLY WTO A FEW OF THESE                      
         BH    LOGERR1B                                                         
LOGERR1A LA    R6,LOGMSG1L                                                      
         WTO   TEXT=(R6)                                                        
         LA    R6,LOGMSG2L                                                      
         WTO   TEXT=(R6)                                                        
LOGERR1B LA    RF,WKSHERRS                                                      
         CLC   16(2,RF),=H'4'      ONLY LOG A FEW OF THESE                      
         BH    LOGERRX                                                          
         B     LOGERR4                                                          
*                                                                               
LOGERR2  CLI   STACTN,X'27'        TYPE#2 ERROR                                 
         BNE   LOGERR3                                                          
         MVI   LOGMSG1+6,C'2'                                                   
         MVI   LOGMSG2+6,C'2'                                                   
         OC    W_KEY(7),W_KEY                                                   
         BNZ   LOGERR2A                                                         
         CLI   W_SEQ,0                                                          
         BNE   LOGERR3                                                          
         OC    SVKEY(7),SVKEY                                                   
         BNZ   LOGERR3                                                          
         CLI   SVSEQ,1                                                          
         BNE   LOGERR3                                                          
         LH    R1,18(RF)           BUMP TYPE#2 COUNT                            
         LA    R1,1(R1)                                                         
         STH   R1,18(RF)                                                        
         CH    R1,=H'2'            ONLY LOG A FEW OF THESE                      
         BH    LOGERRX                                                          
         B     LOGERR4                                                          
*                                                                               
LOGERR2A LA    R6,LOGMSG1L         PURGE KEY NOT IN INDEX TABLE                 
         WTO   TEXT=(R6)                                                        
         LA    R6,LOGMSG2L                                                      
         WTO   TEXT=(R6)                                                        
         B     LOGERR4                                                          
*                                                                               
LOGERR3  CLI   STACTN,C'I'         PURGE TEMP REPORT DURING INIT                
         BNE   LOGERR4                                                          
         LH    R1,20(RF)           BUMP TYPE#0 COUNT                            
         LA    R1,1(R1)                                                         
         STH   R1,20(RF)                                                        
         MVI   LOGMSG1+6,C'0'                                                   
         MVI   LOGMSG2+6,C'0'                                                   
         LA    RF,WKSHERRS                                                      
         CLC   20(2,RF),=H'1'      ONLY LOG ONE OF THESE                        
         BH    LOGERR3B                                                         
LOGERR3A LA    R6,LOGMSG1L                                                      
         WTO   TEXT=(R6)                                                        
         LA    R6,LOGMSG2L                                                      
         WTO   TEXT=(R6)                                                        
LOGERR3B LA    RF,WKSHERRS                                                      
         CLC   20(2,RF),=H'1'      ONLY LOG ONE OF THESE                        
         BH    LOGERRX                                                          
         B     LOGERR4                                                          
*                                                                               
LOGERR4  LH    R1,12(RF)           GET ENTRY COUNT                              
         CH    R1,10(RF)                                                        
         BNL   LOGERRX             TABLE IS FULL                                
*                                                                               
         LA    R1,1(R1)            BUMP ENTRY COUNT                             
         STH   R1,12(RF)                                                        
         MH    R1,=H'32'                                                        
         AR    RF,R1               RF=A(ENTRY)                                  
         CLC   04(04,RF),WKSHERRX                                               
         BE    LOGERRX             INSURANCE                                    
*                                                                               
         MVC   00(01,RF),STACTN    STATUS ACTION                                
         MVC   01(01,RF),STFLAG    STATUS FLAG (08=FORMAT ERROR)                
         MVC   02(01,RF),STCTRL    STATUS CTRL (TYPE OF STATUS CALL)            
         MVC   03(01,RF),W_FILE+4  WRKF FILE ID                                 
         MVC   04(04,RF),CIADDR    CI IN ERROR DISK ADDR                        
         MVC   08(10,RF),W_KEY     CI IN ERROR KEY                              
         MVC   18(01,RF),W_SEQ     CI IN ERROR CI SEQ                           
         MVC   19(10,RF),SVKEY     REPORT KEY                                   
         MVC   29(01,RF),SVSEQ     REPORT CI SEQ                                
*                                                                               
LOGERRX  J     EXIT                                                             
*                                                                               
LOGPL    DC    6F'0'                                                            
LOGMSG1L DC    H'54'                                                            
LOGMSG1  DC    CL54'WFERR#1 WF1 THMIJU CXADDR..+HHHHH XXXX....'                 
LOGMSG2L DC    H'54'                                                            
LOGMSG2  DC    CL54'WFERR#1            CIADDR..       XXXX....'                 
*                                                                               
         DS    0D                                                               
         DC    C'LOGAVLX '                                                      
LOGAVLX  DC    XL24'00'            INDEX ENTRY TO BE PURGED                     
         DC    C'LOGCBAD '                                                      
LOGCBAD  DC    XL24'00'            BAD INDEX OF CI TO BE PURGED                 
         DC    C'LOGXBAD '                                                      
LOGXBAD  DC    XL24'00'            BAD INDEX OF INDEX TO BE PURGED              
*                                                                               
         LTORG                                                                  
                                                                                
***********************************************************************         
* HEADER CL8=EYECATCHER,XL2=ENTRYSIZE,XL2=ENTRYMAX,XL2=ENTRYCOUNT     *         
*        XL2=ERRORTOTAL,XL2=TYPE1TOT,XL2=TYPE2TOT                     *         
* ENTRY  XL1=ACTION,XL1=FLAG,XL1=N/D,CL1=WRKFID,XL4=CIADDR            *         
*        XL7=REPKEY,XL1=REPSEQ,XL7=CIKEY,XL1=CISEQ                    *         
***********************************************************************         
WKSHERRT DC    D'0'                TIME OF ERROR P'HHMMSSTHMIJU0000'            
WKSHERRS DS    0XL32'00'                                                        
         DC    C'WKSHERRS',H'32',H'20',H'00',H'0',XL16'00'                      
         DC    20XL32'00'                                                       
WKSHERRX DC    8X'FF'                                                           
         EJECT                                                                  
***********************************************************************         
* WORKING STORAGE                                                     *         
***********************************************************************         
WRKD     DSECT                                                                  
DUB      DS    D                                                                
DUB1     DS    D                                                                
DUB2     DS    D                                                                
FUL      DS    F                                                                
FUL2     DS    F                                                                
SAVR2    DS    F                                                                
SAVRE    DS    F                                                                
SAVERE   DS    F                                                                
SAVREWWK DS    F                                                                
SAVRESWK DS    F                                                                
SAVADDR  DS    A                                                                
EOFCNT   DS    H                                                                
EOFMAX   DS    H                                                                
EOFBIN   DS    F                                                                
DMCB     DS    6F                                                               
*                                                                               
USERINFO DS    0XL16               USER INFO FOR WHICH WRKF FILE                
USERIDNO DS    H                   USER ID NUM                                  
USERFLAG DS    XL1                 USER FLAG 80=SET BY CALLER                   
USERINUM DS    X                   USER WRKF INTERNAL FILE NUMBER               
USERWRKF DS    CL8                 USER WRKF NAME FOR DATAMGR                   
USERXNUM DS    X                   USER WRKF EXTERNAL FILE NUMBER               
USERADTF DS    AL3                 USER WRKF A(DTF)                             
*                                                                               
DATEE    DS    CL8                 EBCDIC DATE C'YYMMDD  '                      
DATEB    DS    XL3                 BINARY DATE X'YMD'                           
         DS    XL1                                                              
DATEC    DS    XL2                 CMPRSD DATE B'YYYYYYYMMMMDDDDD'              
TIMEI    DS    XL1                 BINARY TIME X'I' I=10MIN INTERVAL            
         DS    XL1                                                              
TIMEB    DS    XL2                 BINARY TIME X'HM'                            
TIMEC    DS    XL2                 BINARY TIME CREATED UNITS=SECS*3/4           
*                                                                               
DATECO   DS    XL2                 CMPRSD DATE OLD FORMAT                       
DATECN   DS    XL2                 CMPRSD DATE NEW FORMAT (BASE 1964)           
DATEMODE DS    CL1                 COMPRESSED DATE MODE                         
DATEUNK  EQU   C' '                DATE MODE UNKNOWN                            
DATEOLD  EQU   C'O'                OLD COMPRSD DATE FORMAT                      
DATENEW  EQU   C'N'                NEW COMPRSD DATE FORMAT                      
*                                                                               
         DS    0F                                                               
TEMPWS   DS    0XL28               REUSABLE WORK AREA                           
GRCB     DS    0XL16               GET RETAIN CONTROL BLOCK                     
GRRETC   DS    X                   RETURN CODE                                  
GRCTRY   DS    X                   COUNTRY CODE                                 
GRHOURS  DS    XL2                 NUMBER OF HOURS                              
GRFLAGS  DS    X                   FLAGS X'80'=BACK,X'40'=NO HOLS               
GRINFO   DS    X                   RETURN CODE                                  
GRIYEAR  DS    X                   INPUT YEAR                                   
GRIMONTH DS    X                   INPUT MONTH                                  
GRIDAY   DS    X                   INPUT DAY                                    
GRIHOUR  DS    X                   INPUT HOUR                                   
GRIMIN   DS    X                   INPUT MIN                                    
GROYEAR  DS    X                   OUTPUT YEAR                                  
GROMONTH DS    X                   OUTPUT MONTH                                 
GRODAY   DS    X                   OUTPUT DAY                                   
GROHOUR  DS    X                   OUTPUT HOUR                                  
GROMIN   DS    X                   OUTPUT MIN                                   
         DS    XL12                N/D                                          
*                                                                               
ACXREC   DS    A                                                                
CPUASID  DS    F                   CPUID/ASID                                   
VWKRTAB  DS    A                                                                
VW_FILE  DS    A                                                                
W_FILE   DS    CL8                                                              
MYLABEL  DS    CL8                                                              
OFFLINE  DS    C                                                                
SAVECC   DS    X                                                                
*                                                                               
CLOTYP   DS    X                   CLOSE TYPE                                   
CLOTNOR  EQU   X'01'               CLOSE NORMAL (DEFAULT)                       
CLOTPUR  EQU   X'02'               CLOSE AND PURGE FILE                         
CLOTERR  EQU   X'08'               CLOSE AND SET IN ERROR                       
CLOTUSR  EQU   X'10'               CLOSE AND SET USER DATA                      
CLOTUSX  EQU   X'20'               CLOSE AND SET USER INDEX DATA                
CLOTTMP  EQU   X'80'               CLOSE AND LEAVE TEMP BIT ON                  
*                                                                               
CLOINF   DS    XL8                                                              
ADDWHY   DS    X                                                                
         DS    XL2                                                              
*                                                                               
PARM1    DS    F                                                                
PARM2    DS    F                                                                
PARM3    DS    F                                                                
PARM4    DS    F                                                                
PARM5    DS    F                                                                
PARM6    DS    F                                                                
*                                                                               
P1       DS    F                                                                
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
P7       DS    F                                                                
*                                                                               
APARM    DS    F                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    X                                                                
FLAG     DS    X                                                                
SVSEQ    DS    X                                                                
SVTYPE   DS    X                                                                
SVATTB   DS    X                                                                
SVUDATA  DS    XL1                                                              
         DS    XL4                                                              
SVNEXT   DS    F                                                                
*                                                                               
SVINDEX  DS    0CL24               LEN=L'USER-INDEX                             
SVDATA   DS    0CL24               LEN=L'ACTUAL-INDEX                           
SVKEY    DS    0CL8                LEN=L'KEY                                    
         DS    XL2                                                              
         DS    CL3                                                              
         DS    CL1                                                              
         DS    XL1                                                              
         DS    CL1                                                              
         DS    CL16                                                             
*                                                                               
BADCNDX  DS    CL24                BAD CI INDEX                                 
BADXNDX  DS    CL24                BAD INDEX INDEX                              
AVLXNDX  DS    CL24                AVAILABLE INDEX INDEX                        
AVTYPE   DS    C                   AVAILABLE FILE TYPE                          
AVCOUNT  DS    X                   COUNT OF PURGE ATTEMPTS                      
         DS    XL2                                                              
AVTBLX   DS    A                   ADR LAST ENTRY IN TABLE                      
AVTBL    DS    12XL10              NUM ENTRYS GE NUM ENTRYS IN AVSTAT           
*                                                                               
MSGW     DS    0CL82               WTO OUTPUT MESSAGE                           
MSGWLEN  DS    XL2                                                              
MSGWTXT  DS    0CL80                                                            
MSGWMSG  DS    CL40                WTO INFORMATION MESSAGE                      
MSGWDET  DS    CL40                WTO INFORMATION DETAIL                       
*                                                                               
TEMP     DS    CL30                                                             
         DS    XL1                                                              
INIFLAGS DS    XL1                 INITIALIZATION FLAGS                         
GCIP     DS    XL1                 GCI PARAMETER                                
RDFP     DS    XL1                 READ FIRST PARAMETER                         
MOPP     DS    XL1                 MONITOR JOB POSTING PARAMETER                
KMSP     DS    XL1                 KEY MESSAGE PARAMETER                        
*                                                                               
DYNBLK1  DS    F                   DYNALLOC BLOCKS                              
DYNBLK2  DS    XL20                                                             
DYNBLK3  DS    XL8                                                              
DYNBLK4  DS    XL14                                                             
DYNBLK5  DS    XL38                                                             
*                                                                               
STPARM   DS    0CL24                                                            
STACTN   DS    XL1                 ACTION VALUE FROM WKRACTNS TABLE             
STVAL    DS    XL1                 STATUS VALUE IF ZERO ACTION VALUE            
STCTRL   DS    XL1                 CONTROL 01=FILE,02=INDEX,80=ADD              
STFLAG   DS    XL1                 FLAG FOR WORK                                
STNI     DS    XL1                 NI STATUS BITS                               
STOI     DS    XL1                 OI STATUS BITS                               
STINFO   DS    XL4                 EXTRA INFO REQUIRED FOR ACTION               
STFSTCI  DS    XL2                 TTTT OF FIRST CI                             
STBUFFA  DS    A                   A(I/O BUFFER)                                
STXCADR  DS    A                   CORE ADDR OF COPY INDEX PAGE                 
STXDADR  DS    F                   DISK ADDR OF COPY INDEX PAGE                 
*                                                                               
STCILAST DS    A                   A(LAST ENTRY IN CI ADDR LIST)                
STCIAS   DS    514XL2              TTTT OF EACH CI IN FILE                      
*                                                                               
       ++INCLUDE DMWRKFW                                                        
         DS    2F                  EXTRA PARAMS FOR LOCKER CALL CIP4/5          
*                                                                               
       ++INCLUDE DDSHFIW                                                        
*                                                                               
CXREC    DS    14336C                                                           
*                                                                               
WRKX     EQU   *                                                                
*                                                                               
       ++INCLUDE DMWRKFD                                                        
       ++INCLUDE DMWRKFS                                                        
       ++INCLUDE DMWRKFK                                                        
       ++INCLUDE DMWRKFL                                                        
       ++INCLUDE DDSHFID                                                        
       ++INCLUDE DDGETRETD                                                      
*                                                                               
KSBUFFD  DSECT                     BUFFER SAVE/RESTORE AREA                     
KSDATA   DS    0XL30                                                            
KSINDEX  DS    XL24                                                             
KSFSTCI  DS    XL4                                                              
KSINTNO  DS    X                                                                
KSEXTNO  DS    X                                                                
*                                                                               
*FASSB/FASSBOFF                                                                 
*FATCB                                                                          
*FAUTL                                                                          
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
       ++INCLUDE FASSBOFF                                                       
       ++INCLUDE FATCB                                                          
       ++INCLUDE FAUTL                                                          
         IHAASCB LIST=YES                                                       
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'022DMWRKFSH  04/16/20'                                      
         END                                                                    
