*          DATA SET GESRCHCALL AT LEVEL 013 AS OF 02/12/96                      
*CATALP SRCHCALL                                                                
         TITLE 'SEARCH SYSTEM, APPLICATION INTERFACE MODULE'                    
* CMOL 013 14JUL95 - SUPPORT FOR ANY SEPARATOR IN SCANNER STYLE CALL            
* TCLE 012 24MAY95 - TRANSMIT FIELD ON ANALYZE CALL IF CHANGED                  
* CMOL 011 22MAY95 - LIMACC CHANGES                                             
* TGUT 010 30NOV94 - STAR OUT TEMP CHANGE TO USE =SEARCH/A                      
* TCLE 009 21NOV94 - SUPPORT 'SCANNER' FIELDS (SEE PFDISP)                      
*                  - TEMP CHANGE TO USE =SEARCH/A                               
* TCLE 008 18DEC92 - PERMIT FIELD HEADER BEYOND TWA END                         
*                  - ALLOW FIELD HEADER DISPLACEMENT UPTO 14K                   
* TCLE 006 09JUN92 - CHANGE TO USE '=' IN PLACE OF '$' IN S/R FIELD             
*                                                                               
***********************************************************************         
*                                                                     *         
* MODULE CALLED BY APPLICATION TO EDIT SEARCHABLE FIELDS.             *         
*                                                                     *         
* TWO OPERATING MODES. ONE ANALYSES A FIELD AND INVOKES SEARCH IF     *         
* REQUIRED, THE OTHER CONSTRUCTS DATA IN 'EXTENDED FIELD' FORMAT.     *         
*                                                                     *         
* 'EXTENDED FIELD' FORMAT IS A WAY OF ALLOWING LONG SEARCH ARGUMENTS  *         
* IN WHAT WOULD OTHERWISE BE A SHORT INPUT FIELD. FOR EXAMPLE, IF     *         
* A SCREEN MIGHT DISPLAY CLIENT IN THE FOLLOWING WAY.                 *         
*                                                                     *         
*    CLIENT ACM_____ ASSOCIATED COMBINED MEGAGLOMERATE                *         
*                                                                     *         
* HERE 'ACM' IS IN A SMALL INPUT FIELD, WHILE THE REST IS PROTECTED,  *         
* THE SCREEN COULD BE REDEFINED TO COMBINE THE INPUT FIELD AND THE    *         
* PROTECTED 'FULL NAME' FIELD INTO ONE LONG INPUT FIELD, IN THIS WAY  *         
* THE ABOVE EXAMPLE COULD DISPLAY AS                                  *         
*                                                                     *         
*    CLIENT ACM      <ASSOCIATED COMBINED MEGAGLOMERATE>              *         
*                                                                     *         
* WHERE ONLY THE WORD 'CLIENT' IS PROTECTED, THE REST IS A SINGLE,    *         
* EXTENDED, INPUT FIELD.                                              *         
*                                                                     *         
* SEARCH IS INVOKED WHENEVER THE INPUT IS FOUND TO CONTAIN AN '='     *         
* SIGN IN THE SPECIFIED POSITION (NORMALLY THE FIRST BYTE).           *         
*                                                                     *         
* WHENEVER AN INPUT FIELD IS ANALYZED, THE FIRST '<' AND EVERYTHING   *         
* AFTER IT IS REMOVED, AND THE FIELD HEADER ADJUSTED ACCORDINGLY.     *         
* THIS IS DONE BEFORE TESTING FOR THE LEADING '=' SIGN, SO THAT       *         
* NO MODIFICATION IS REQUIRED TO EXISTING VALIDATION CODE.            *         
*                                                                     *         
* THE SECOND CALL FORM WILL MOVE A GIVEN KEY AND FULL NAME INTO       *         
* THE FIELD IN THE EXTENDED FORMAT.                                   *         
*                                                                     *         
* PARAMETERS FOR BUILD MODE CALL                                      *         
* P1 BYTE 0    ZERO = CALL IS TO BUILD FIELD, GIVEN KEY AND FULL NAME *         
* P1 BYTE 1    DISPLACEMENT TO START OF KEY DATA IN SEARCH FIELD      *         
*              X'80' BIT MUST BE OFF (SEE PFDISP) BUILD MODE CALL NOT *         
*              APPROPRIATE FOR 'SCANNER' TYPE FIELDS.                 *         
* P1 BYTE 2-3  DISPLACEMENT OF SEARCH FIELD IN TWA                    *         
* P2 BYTE 0-3  ADDRESS OF TWA                                         *         
* P3 BYTE 0    LENGTH OF KEY TO BE PLACED IN FIELD, EG CLIENT CODE    *         
*              CAN INCLUDE TRAILING BLANKS SO LEADING '<' IS PLACED   *         
*              IN A SPECIFIC COLUMN, RATHER THAN FLOATED IN.          *         
* P3 BYTE 1-3  ADDRESS OF KEY DATA                                    *         
* P4 BYTE 0    LENGTH OF FULL NAME TO BE PLACED IN FIELD AFTER KEY    *         
*              DATA, AND ENCLOSED IN '<>'S                            *         
* P4 BYTE 1-3  ADDRESS OF FULL NAME                                   *         
*                                                                     *         
* PARAMETERS FOR INPUT ANALYSIS MODE CALL                             *         
* P1 BYTE 0    PAGE NUMBER TO BE USED TO COMMUNICATE WITH SEARCH, AND *         
*              FOR SEARCH TO USE AS SAVED STORAGE. MUST BE BETWEEN 1  *         
*              AND 4 INCLUSIVE.                                       *         
* P1 BYTE 1    DISPLACEMENT TO START OF KEY DATA IN SEARCH FIELD.     *         
*              OR INDEX TO A 'KEYWORD=VALUE' PAIR IN 'SCANNER' TYPE   *         
*              FIELD IF X'80' BIT IS ON (SEE PFDISP). IN THE CASE OF  *         
*              THE LATTER, A SEPARATOR CHARACTER WILL BE PASSED IN    *         
*              P3 BYTE 0 IF THE X'40' BIT IS SET (SEE PFDISP).        *         
* P1 BYTE 2-3  DISPLACEMENT OF SEARCH FIELD IN TWA                    *         
* P2 BYTE 0    USER OPTION BYTE,    X'80'=RETURN VIA =GOBACK REQUIRED *         
*                                   X'40'=BYTES 1-3 ARE A(LIMACC BLK) *         
* P2 BYTE 1-3  ADDRESS OF LIMACC BLOCK IF BYTE 0 HAS X'40' BIT SET    *         
* P3 BYTE 0    SEPARATOR CHARACTER FOR SCANNER IF P1 BYTE 0 HAS BOTH  *         
*              X'80' AND X'40' BITS SET.                              *         
* P3 BYTE 1-3  ADDRESS OF COMFACS                                     *         
* P4 BYTE 0    LENGTH OF 'OTHER' DATA QUALIFYING SEARCH ID (0=NONE)   *         
* P4 BYTE 1-3  ADDRESS OF 'OTHER' DATA                                *         
* P5 BYTE 0    TYPE OF SEARCH CODE, 0=USE FIELD CODE IN EXTENDED HDR  *         
*                                   1=SEARCH CODE PROVIDED            *         
* P5 BYTE 1-3  ADDRESS OF 8 BYTE SEARCH CODE IF P5/0=1                *         
* P6 BYTE 0    TYPE OF SYSTEM CODE, 0=USE CONNECTED SYSTEM            *         
*                                   1=SYSTEM CODE PROVIDED            *         
*                                   2=SYSTEM SWITCH DATA PROVIDED     *         
* P6 BYTE 1-3  ADDRESS OF 6 BYTE SYSTEM CODE IF P6/0=1, OR            *         
*              ADDRESS OF 7 BYTE SYSTEM SWITCH DATA IF P6/0=2,        *         
*              SWITCH DATA = XL1'SENUM,OVSYS,AGYBIN',XL4'LIMITACCESS' *         
*                                                                     *         
***********************************************************************         
         SPACE                                                                  
***********************************************************************         
* NOTE ON PFDISP (P1 BYTE 1)                                          *         
*                                                                     *         
* PFDISP=X'00' (X'80' BIT OFF) FIELD IS SIMPLE WITH NO PREFIX.        *         
*    KEY IS BUILT IN POSITION ZERO. '=' IS EXPECTED IN POSITION ZERO  *         
*    E.G.      "=ASSOC*                                        "      *         
*              "ACM      <ASSOCIATED COMBINED MEGAGLOMERATE>   "      *         
*                                                                     *         
* PFDISP=X'NN' (X'80' BIT OFF) FIELD IS SIMPLE WITH NN-BYTE PREFIX.   *         
*    KEY IS BUILT IN POSITION NN. '=' IS EXPECTED IN POSITION NN      *         
*    E.G. NN=3 "123=ASSOC*                                     "      *         
*              "123ACM      <ASSOCIATED COMBINED MEGAGLOMERATE>"      *         
*                                                                     *         
* PFDISP=X'8N' (X'80' BIT ON) FIELD IS 'SCANNER' TYPE.                *         
*    '=' IS EXPECTED IN RIGHT HAND, OR ONLY SIDE OF THE NTH TERM IN   *         
*    A SCANNER STRING. THE RETURNED KEY REPLACES THE SEARCH STRING    *         
*    AND THE FIELD IS REARRANGED ACCORDINGLY. NOTE THAT THIS COULD    *         
*    CAUSE DATA TO BE SHIFTED OUT OF THE RIGHT HAND END, NO ERROR     *         
*    INDICATION CAN BE GIVEN IF THIS HAPPENS. THERE IS NO 'BUILD'     *         
*    FUNCTION AS NAMES ARE NOT NORMALLY RETURNED IN SCANNER FIELDS    *         
*    E.G. N=3  "XXX=123,YYY=456,CLI==ASSOC*,ZZZ=789            "      *         
*    RETURNS   "XXX=123,YYY=456,CLI=ACM,ZZZ=789                "      *         
*    THE CALLER HAS TO INDICATE AS USUAL WHAT IS TO BE SEARCHED FOR.  *         
*    IF THIS DEPENDS ON THE VALUE OF THE LEFT HAND SIDE OF THE PAIR,  *         
*    HE MUST SCAN THE FIELD FIRST AND CALL SEARCH AS SOON AS HE HAS   *         
*    IDENTIFIED THE LEFT HAND SIDE AS POTENTIALLY SEARCHABLE. HE THEN *         
*    CALLS SRCHCALL TO CHECK FOR THE '=' SIGN AND CALL SEARCH IF RQD. *         
*                                                                     *         
* PFDISP=X'CN' (X'80'+X'40' BITS ON) - AS ABOVE, BUT THE SEPARATOR    *         
*    USED IN THE SCANNER CALLS IS PASSED IN PSEP (SEE PARAMETER LIST) *         
***********************************************************************         
         EJECT                                                                  
SRCHCALL CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 SRCHWRKL,**SRCA**,RR=RE                                          
*                                                                               
         USING SRCHWORK,RC         RC=TEMP WORK AREA                            
INIT     ST    RE,RELO                                                          
         ST    R1,APARMS                                                        
         MVC   PARMS(PARMSL),0(R1)    SAVE PARAMETERS                           
*                                                                               
         CLC   PFIELD,=Y(14*1024)  TEST FIELD DISP IS REASONABLE                
         BH    EXIT                IGNORE IF NOT.                               
         CLI   PPAGE,0             IS THIS A BUILD CALL?                        
         BE    INIT02              YES - TWA IS PASSED AS A PARAMETER           
*                                                                               
INIT00   L     RF,PCOMFACS         USE SWITCH TO LOCATE TCBWRKA & TWA           
         L     RF,CSWITCH-COMFACSD(,RF)                                         
         GOTO1 (RF),DMCB,X'00FFFFFF'                                            
         L     RE,0(,R1)                                                        
         USING TCBD,RE                                                          
         MVC   ATCBWRK,TCBWRKA     SAVE A(CALLER'S TCB WORK AREA)               
         L     R2,TCBTWA           R2=A(TWA)                                    
         LR    R3,R2                                                            
         AH    R3,PFIELD           R3=ADDRESS OF SEARCH FIELD                   
         B     INIT04                                                           
         DROP  RE                                                               
*                                                                               
INIT02   L     R2,PATWA            A(TWA) IS PASSED FOR BUILD CALL              
         LA    R2,0(R2)                                                         
         LR    R3,R2                                                            
         AH    R3,PFIELD           R3=ADDRESS OF SEARCH FIELD                   
*                                                                               
INIT04   XR    R4,R4                                                            
         IC    R4,0(,R3)           TWA FIELD LENGTH                             
         SH    R4,=Y(8)                                                         
         BP    *+6                                                              
         DC    H'0'                DIE IF FIELD LENGTH SILLY                    
         TM    1(R3),X'02'         COULD BE EXTENDED                            
         BZ    *+14                                                             
         SH    R4,=Y(8)            R4=LENGTH OF SEARCH FIELD                    
         BP    *+6                                                              
         DC    H'0'                DIE IF FIELD LENGTH SILLY                    
         CH    R4,=Y(78)           R4=SCREEN FIELD LENGTH                       
         BNH   *+6                                                              
         DC    H'0'                DIE IF FIELD LENGTH SILLY                    
*                                                                               
         XR    R7,R7                                                            
         IC    R7,PFDISP           GET DATA DISPLACEMENT/INDEX                  
         TM    PFDISP,PFDISCIQ     TEST 'SCANNER' MODE                          
         BO    INITSCAN            YES, SKIP                                    
INITDISP CR    R4,R7                                                            
         BH    *+6                                                              
         DC    H'0'                DIE IF DATA DISP UNREASONABLE                
         CLI   PPAGE,0             IS IT BUILD CALL                             
         BE    BUILD                                                            
         B     ANALYZE             NO - GO ANALYZE FIELD                        
*                                                                               
INITSCAN CLI   PPAGE,0             IS IT BUILD CALL                             
         BNE   *+6                                                              
         DC    H'0'                YES, NOT SUPPORTED FOR SCANNER FIELD         
         SLL   R7,32-6             SHIFT OFF X'80' AND X'40' BITS               
         SRL   R7,32-6             (MUST BE BETWEEN 0 AND 15)                   
         BNZ   *+6                                                              
         DC    H'0'                0TH FIELD NOT ALLOWED                        
         LA    RF,15                                                            
         CR    R7,RF                                                            
         BNH   ANALYZE                                                          
         DC    H'0'                                                             
         EJECT                                                                  
***********************************************************************         
*        BUILD EXTENDED FORMAT TWA FIELD                              *         
***********************************************************************         
BUILD    OI    6(R3),X'80'         SET TRANSMIT                                 
*                                                                               
         LA    R3,8(R7,R3)         R3=START OF FIELD PLUS DATA DISP             
         SR    R4,R7               R4=FIELD LENGTH MINUS DATA DISP              
         LR    RE,R4                                                            
         BCTR  RE,0                                                             
         EX    RE,*+4                                                           
         MVC   0(0,R3),SPACES      CLEAR FIELD                                  
*                                                                               
         XR    RE,RE                                                            
         IC    RE,PLKEY            RE=LENGTH OF KEY DATA                        
         L     RF,PAKEY            RF=ADDRESS OF KEY DATA                       
         CR    RE,R4                                                            
         BNH   *+6                                                              
         LR    RE,R4               USE FIELD LENGTH IF LESS                     
         SR    R4,RE               R4=LENGTH LEFT                               
         BCTR  RE,0                                                             
         EX    RE,*+4                                                           
         MVC   0(0,R3),0(RF)       MOVE KEY TO START OF FIELD                   
         LA    R3,1(RE,R3)                                                      
*                                                                               
         XR    RE,RE                                                            
         ICM   RE,1,PLFULL         RE=LENGTH OF FULL NAME                       
         BZ    EXIT                IF NONE, ALL DONE                            
*                                                                               
         SH    R4,=Y(3)            NEED 3 BYTES FOR ' <>'                       
         BNP   EXIT                                                             
         MVI   1(R3),C'<'          START FULL NAME FIELD                        
*                                                                               
         L     RF,PAFULL           RF=ADDRESS OF FULL NAME                      
         CR    RE,R4                                                            
         BNH   *+6                                                              
         LR    RE,R4               USE LENGTH LEFT IF LESS                      
         BCTR  RE,0                                                             
         EX    RE,*+4                                                           
         MVC   2(0,R3),0(RF)       MOVE FULL NAME TO FIELD AFTER KEY            
         LR    R4,R3               SAVE A(FIRST CHEVRON-1)                      
         AR    R3,RE               LAST POSITION -2                             
*                                                                               
         CLI   2(R3),C' '          LOOK FOR LAST NONBLANK                       
         BH    *+8                                                              
         BCT   R3,*-8                                                           
         MVI   3(R3),C'>'          END FULL NAME FIELD                          
         CR    R3,R4               DID WE ENCLOSE ANY TEXT?                     
         BNL   EXIT                YES: EXIT                                    
         MVC   1(2,R4),SPACES      NO, CLEAR OUT CHEVRONS                       
         B     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
*        ANALYZE INPUT, STRIPPING OFF EXTENDED DATA                   *         
***********************************************************************         
ANALYZE  TM    PFDISP,PFDISCIQ     TEST 'SCANNER' MODE                          
         BO    ANALSCAN            YES, SKIP                                    
*                                                                               
         LA    R1,8(R7,R3)         LOOK FOR EXTENDED DATA                       
         LR    RF,R4                                                            
         SR    RF,R7                                                            
ANALLOOP CLI   0(R1),C'<'          IS THIS START OF FULL NAME                   
         BE    ANALCHOP            YES, GO REMOVE IT                            
         LA    R1,1(,R1)                                                        
         BCT   RF,ANALLOOP                                                      
         B     ANALEXIT            ELSE LEAVE FIELD AS INPUT                    
*                                                                               
ANALCHOP LA    RE,1(,R4)                                                        
         SR    RE,RF               RE=LENGTH UPTO AND INCLUDING '<'             
ANALEND  BCTR  R1,0                PREVIOUS CHARACTER                           
         BCT   RE,*+8              SCAN BACK FOR END OF KEY DATA                
         B     ANALCLR             SKIP IF NOTHING BEFORE '<'                   
         CLI   0(R1),C' '                                                       
         BNH   ANALEND                                                          
*                                                                               
ANALCLR  LR    RF,R4                                                            
         SR    RF,RE               RF=LENGTH TO CLEAR                           
         BCTR  RF,0                                                             
         EX    RF,*+4                                                           
         MVC   1(0,R1),SPACES      CLEAR EVERYTHING AFTER KEY                   
*                                                                               
         OI    6(R3),X'80'         SET TRANSMIT                                 
         NI    4(R3),X'F1'         SET OFF NUM/ALPH/HEX BITS                    
         STC   RE,5(R3)            SET NEW LENGTH                               
         LTR   RE,RE                                                            
         BZ    EXIT                EXIT IF NOTHING LEFT                         
         OI    4(R3),X'0E'         SET ON NUM/ALPH/HEX BITS                     
*                                                                               
ANALNUM  CLI   0(R1),C'0'          IS THIS NUMERIC                              
         BL    ANALNNUM            TOO LOW, COULD BE ALPHA                      
         CLI   0(R1),C'9'                                                       
         BH    ANALNOWT            TOO HIGH, NOT ANYTHING                       
         NI    4(R3),X'FD'         YES, SET NOT ALPHA                           
         B     ANALPREV                                                         
ANALNNUM NI    4(R3),X'F7'         SET NOT NUMERIC                              
ANALHEX  CLI   0(R1),C'A'          IS THIS A-F                                  
         BL    ANALNOWT            TOO LOW, CAN'T BE ANYTHING                   
         CLI   0(R1),C'F'                                                       
         BNH   ANALPREV            YES, LEAVE ALPHA AND HEX                     
         NI    4(R3),X'FD'         TOO HIGH, SET NOT HEX                        
         CLI   0(R1),C'I'                                                       
         BL    ANALPREV            A-I IS ALPHA                                 
         CLI   0(R1),C'J'                                                       
         BL    ANALNOWT                                                         
         CLI   0(R1),C'R'                                                       
         BL    ANALPREV            J-R IS ALPHA                                 
         CLI   0(R1),C'S'                                                       
         BL    ANALNOWT                                                         
         CLI   0(R1),C'Z'                                                       
         BL    ANALPREV            S-Z IS ALPHA                                 
ANALNOWT NI    4(R3),X'F1'         SET NOT ANYTHING                             
         B     ANALEXIT                                                         
ANALPREV BCTR  R1,0                                                             
         BCT   RE,ANALNUM          LOOP TILL ALL CHECKED                        
*                                                                               
ANALEXIT LA    RE,8(R7,R3)         POINT TO (SUB)FIELD                          
         CLI   0(RE),C'='          DOES IT START WITH '='                       
         BNE   EXIT                NO, EXIT                                     
         XR    R7,R7               R7=LENGTH=0 (FOR TSFLEN)                     
         B     SEARCH                                                           
         EJECT                                                                  
***********************************************************************         
*        ANALYZE INPUT FOR 'SCANNER' TYPE FIELD                       *         
***********************************************************************         
ANALSCAN MVC   UNSWORK(10),SPACES  FIND ',=' IN CONNECTED LANGUAGE              
         MVI   UNSWORK,C'X'                                                     
         MVC   UNSWORK+10(30),UNSWORK                                           
         L     RF,PCOMFACS                                                      
         L     RF,CUNSCAN-COMFACSD(,RF)                                         
         GOTO1 (RF),DMCB,(2,UNSWORK),(C'C',UNSWORK+40),C',=  '                  
         MVC   SCEQUALS,UNSWORK+40+1                                            
         MVC   SCCOMMA,UNSWORK+40+3                                             
*                                                                               
         LA    R1,8(,R3)           LOOK FOR REQUIRED SUBFIELD                   
         LR    RF,R4                                                            
         BCT   R7,*+8              MAKE INDEX (1-15) ZERO BASED (0-14)          
         B     ANALSCFF            IF IT WAS 1, WE ALREADY HAVE IT              
*                                                                               
ANALSCLP TM    PFDISP,PFDISSEQ     SPECIAL SEPARATOR CHARACTER PASSED?          
         BNO   ANALSCL2            NO - JUST CHECK FOR COMMA                    
         CLC   PSEP,0(R1)          ELSE CHECK FOR SPECIAL CHAR FIRST            
         BE    *+10                                                             
*                                                                               
ANALSCL2 CLC   SCCOMMA,0(R1)       IS THIS COMMA                                
         LA    R1,1(,R1)                                                        
         BCT   RF,*+8                                                           
         B     EXIT                EVEN IF IT IS, THERE'S NOTHING AFTER         
         BNE   ANALSCLP            IT ISN'T, KEEP LOOKING                       
         BCT   R7,ANALSCLP         COUNT OFF FIELD, LOOK FOR NEXT               
*                                                                               
ANALSCFF CLI   0(R1),C'='          IF FIRST BYTE IS C'=' ASSUME ITS A           
         BE    ANALSCSF            SINGLE SIDED SEARCH FIELD                    
ANALSCFL CLC   SCCOMMA,0(R1)       HUNT FOR SUB-FIELD END                       
         BE    EXIT                IF FOUND, THERE'S NO SEARCH DATA             
         TM    PFDISP,PFDISSEQ     SPECIAL SEPARATOR CHAR PASSED?               
         BNO   *+14                NO, SO DON'T CHECK FOR IT                    
         CLC   PSEP,0(R1)                                                       
         BE    EXIT                                                             
         CLC   SCEQUALS,0(R1)      HUNT FOR RHS                                 
         LA    R1,1(,R1)                                                        
         BCT   RF,*+8                                                           
         B     EXIT                REACHED END, SO NO SEARCH FIELD              
         BNE   ANALSCFL            KEEP LOOKING IF NOT RHS                      
         CLI   0(R1),C'='          IF FIRST BYTE OF RHS IS NOT C'='             
         BNE   EXIT                THERE'S NO SEARCH DATA                       
*                                                                               
ANALSCSF LR    R7,R1               SAVE ADDR SEARCH DATA                        
         LR    R0,R7               PRESET END OF DATA +1                        
ANALSCSL CLC   SCCOMMA,0(R1)       HUNT FOR SUB-FIELD END                       
         BE    ANALSCSE            IF FOUND, THAT'S END OF SEARCH DATA          
         TM    PFDISP,PFDISSEQ     SPECIAL SEPARATOR CHAR PASSED?               
         BNO   *+14                NO, SO DON'T CHECK FOR IT                    
         CLC   PSEP,0(R1)                                                       
         BE    ANALSCSE                                                         
         CLI   0(R1),C' '          IS THIS A BLANK                              
         LA    R1,1(,R1)                                                        
         BE    *+6                 YES, SKIP                                    
         LR    R0,R1               NO, SAVE ADDR NEXT BYTE                      
         BCT   RF,ANALSCSL         LOOP TILL END OF FIELD                       
         LR    R1,R0               REACHED END, SET LAST BYTE +1                
*                                                                               
ANALSCSE SR    R1,R7               R1=LENGTH OF SEARCH DATA                     
         CH    R1,=Y(2)            SHOULD BE AT LEAST TWO BYTES (=X)            
         BL    EXIT                                                             
         LA    R0,8(,R3)           R0=FIELD START                               
         SR    R7,R0               R7=SEARCH DATA DISPLACEMENT                  
         STC   R7,PFDISP           CONVERT INDEX TO DISPLACEMENT                
         LR    R7,R1               R7=LENGTH (FOR TSFLEN)                       
         EJECT                                                                  
***********************************************************************         
*        CONSTRUCT TEMPSTR PAGE AND INVOKE SEARCH                     *         
*        CARRY OUT EXTENSIVE PLIST CHECKS BEFORE COMMITTING TO SEARCH *         
***********************************************************************         
SEARCH   OI    6(R3),X'40'         POSITION CURSOR TO FIELD IN CASE =RE         
         LA    RE,TSCALL                                                        
         LA    RF,TSCALLNQ                                                      
         XCEF                                                                   
         MVC   TSIDENT,=AL4(TSIDENTQ) SET IDENT FOR =SEARCH                     
         MVC   TSID,SPACES         DEFAULT SEARCH ID SPACES                     
         MVC   TSFIELD,PFIELD      COPY FIELD DISPLACEMENT                      
         MVC   TSFDISP,PFDISP      COPY FIELD DATA DISPLACEMENT                 
         STC   R7,TSFLEN           SET FIELD DATA LENGTH                        
         MVC   TSOPTS,POPTS        COPY USER OPTIONS BYTE                       
         MVI   TSIDLANG,0          ID PASSED IN ENGLISH                         
         TM    TSOPTS,TSOPTLAQ     WAS A LIMIT ACCESS BLOCK PASSED?             
         BNO   SETOTHER            NO                                           
         L     R1,PALIMBLK         R1 NOW CONTAINS A(LIMACC BLOCK)              
         MVC   TSLIMBLK,0(R1)      COPY BLOCK TO TEMPSTR PAGE                   
*                                                                               
SETOTHER CLI   PLOTHER,L'TSOTHER                                                
         BNH   *+6                                                              
         DC    H'0'                OTHERS FIELD TOO LONG                        
         XR    R1,R1                                                            
         ICM   R1,1,PLOTHER        LENGTH OF OTHERS DATA                        
         BZ    SETSRCH             NONE GIVEN                                   
         L     RE,PAOTHER                                                       
         BCTR  R1,0                                                             
         EX    R1,*+4                                                           
         MVC   TSOTHER(0),0(RE)    COPY TO OTHERS FIELD                         
*                                                                               
SETSRCH  CLI   PTSEARCH,PTSEHDRQ                                                
         BE    SETSYS              SEARCH CODE FROM EXTENDED HEADER             
         CLI   PTSEARCH,PTSECODQ                                                
         BE    *+6                 SEARCH CODE GIVEN                            
         DC    H'0'                INVALID PARAMETER                            
         L     RE,PASEARCH                                                      
         MVC   TSSRCH,0(RE)        COPY TO SEARCH FIELD                         
*                                                                               
SETSYS   CLI   PTSYSTEM,PTSYCONQ                                                
         BE    CHKFIELD            SYSTEM CODE IS CONNECTED SYSTEM              
         L     RE,PASYSTEM                                                      
         CLI   PTSYSTEM,PTSYCODQ   SYSTEM CODE GIVEN                            
         BNE   *+14                                                             
         MVC   TSSYS,0(RE)         YES, COPY TO SYSTEM FIELD                    
         B     CHKFIELD                                                         
         CLI   PTSYSTEM,PTSYSWDQ   SWITCH DATA GIVEN                            
         BNE   *+14                                                             
         MVC   TSSYSW,0(RE)        YES, COPY TO SWITCH DATA FIELD               
         B     CHKFIELD                                                         
         DC    H'0'                INVALID PARAMETER                            
*                                                                               
CHKFIELD LA    R5,64(,R2)          POINT TO FIRST TWA FIELD (MESSAGE)           
         XR    R0,R0                                                            
         ICM   R0,1,0(R5)          LENGTH MESSAGE FIELD                         
         BNZ   *+6                                                              
         DC    H'0'                TWA INVALID IF ZERO                          
*                                                                               
         AR    R5,R0               R5=NEXT FIELD, S/B SERVICE FIELD             
         LR    R6,R5               COPY ITS ADDRESS                             
         ICM   R0,1,0(R5)          LENGTH SERVICE FIELD                         
         BNZ   *+6                                                              
         DC    H'0'                TWA INVALID IF ZERO                          
         AR    R6,R0               R6=FIRST USER FIELD                          
*                                                                               
         CLC   2(2,R5),=AL2(62)    CHECK SERVICE SCREEN ADDRESS OK              
         BE    *+6                                                              
         DC    H'0'                TWA INVALID                                  
         CLI   0(R5),17+8          CHECK FIELD LENGTH CORRECT                   
         BE    SRVSRCH                                                          
         TM    1(R5),X'02'         COULD BE EXTENDED I SUPPOSE                  
         BO    *+6                                                              
         DC    H'0'                TWA INVALID IF NOT 17 BYTES                  
         CLI   0(R5),17+8+8        CHECK EXTENDED FIELD LENGTH CORRECT          
         BE    SRVSRCH                                                          
         DC    H'0'                TWA INVALID IF NOT 17 BYTES                  
*                                                                               
SRVSRCH  XC    8(17,R5),8(R5)      CLEAR SERVICE FIELD                          
         MVC   8(8,R5),=C'=SEARCH,' SET SEARCH SERVICE REQUEST                  
*        MVC   8(10,R5),=C'=SEARCH/A,' ****TEMP A VERSION                       
         MVC   16(1,R5),PPAGE      SET PAGE NO (1-4)                            
*        MVC   18(1,R5),PPAGE      ********TEMP A VERSION                       
         OI    16(R5),X'F0'        CHANGE TO ZONED                              
*        OI    18(R5),X'F0'        ********TEMP A VERSION                       
*                                                                               
         LR    R5,R6               SAVE FIRST USER FIELD                        
FINDFLD  CR    R6,R3               SEE IF THIS IS CALLERS FIELD                 
         BE    CURSORS             YES, PFIELD IS FLDHDR IN SCREEN              
         BL    *+6                                                              
         DC    H'0'                PFIELD IN SCREEN, BUT NOT A FLDHDR           
         ICM   R0,1,0(R6)          LENGTH FIELD                                 
         BZ    CHKSRCH             END - ASSUME PASSING DUMMY FLDHDR            
         AR    R6,R0                     BEYOND END OF SCREEN                   
         B     FINDFLD             CONTINUE SCAN                                
CURSORS  LR    R6,R5               RESET TO FIRST USER FIELD                    
UNSETCUR CR    R6,R3               LOOP TILL REACH CALLERS FIELD                
         BE    CHKSRCH                                                          
         NI    6(R3),255-X'40'     UN-SET CURSOR ON ALL PRECEDING FLDS          
         ICM   R0,1,0(R6)          LENGTH FIELD                                 
         AR    R6,R0                                                            
         B     UNSETCUR                                                         
*                                                                               
CHKSRCH  CLI   PTSEARCH,PTSEHDRQ   GETTING SEARCH FROM EXTENDED HEADER          
         BNE   CHKPAGE             NO                                           
         TM    1(R3),X'02'         EXTENDED HEADER ON GIVEN FIELD               
         BO    *+6                 YES                                          
         DC    H'0'                CAN'T DETERMINE SEARCH                       
         LA    RE,8(R3,R4)         START OF EXTENDED HEADER                     
         CLI   0(RE),0             IS THERE A NUMBER IN IT                      
         BNE   CHKPAGE             YES                                          
         DC    H'0'                CAN'T DETERMINE SEARCH                       
*                                                                               
CHKPAGE  CLI   PPAGE,4             CHECK PAGE NUMBER OK                         
         BNH   *+6                                                              
         DC    H'0'                VALID FOR PAGE 1 TO 4 ONLY                   
*                                                                               
TEMPPUT  IC    R6,PPAGE                                                         
         SLL   R6,32-8             R6=PP000000 PAGE NUMBER                      
         ICM   R6,B'0011',TWATRM-TWAD(R2) INSERT TERMINAL NO FROM TWA           
         L     RF,PCOMFACS                                                      
         L     RF,CDATAMGR-COMFACSD(,RF)                                        
         GOTO1 (RF),DMCB,DMWRT,TEMPSTR,(R6),TSCALL,0                            
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                TEMPSTR IO ERROR                             
*                                                                               
FINDMNTR L     R1,ATCBWRK                                                       
         L     RD,8(,R1)           CALLERS ROOT SAVE AREA                       
         LM    RE,RC,12(RD)        RETURN TO MONITOR                            
         BR    RE                                                               
*                                                                               
EXIT     XIT1                                                                   
         EJECT                                                                  
************************                                                        
*        LITERALS      *                                                        
************************                                                        
DMWRT    DC    CL6'DMWRT'                                                       
TEMPSTR  DC    CL7'TEMPSTR'                                                     
         SPACE                                                                  
SPACES   DC    CL80' '                                                          
         SPACE                                                                  
         LTORG                                                                  
         EJECT                                                                  
***********************************************************************         
*        WORKING STORAGE                                              *         
***********************************************************************         
SRCHWORK DSECT                                                                  
DUB      DS    D                                                                
FULL     DS    F                                                                
HALF     DS    H                                                                
BYTE     DS    C                                                                
BYTE2    DS    C                                                                
DMCB     DS    6F                                                               
RELO     DS    A                                                                
APARMS   DS    A                   ADDRESS CALLERS PARAMETER LIST               
ATCBWRK  DS    A                   ADDRESS CALLERS TCB WRK AREA                 
SCCOMMA  DS    C                                                                
SCEQUALS DS    C                                                                
*                                                                               
PARMS    DS    0A                  COPY CALLERS PARAMETER LIST                  
PPAGE    DS    AL1          P1/0   TEMPSTR PAGE NUMBER IF ANALYSE CALL          
*                                  ZERO IF BUILD MODE CALL                      
PFDISP   DS    AL1          P1/1   DISP TO SEEK DATA IN SEARCH FIELD            
PFDISCIQ EQU   X'80'               PFDISP IS INDEX INTO SCANNER FIELD           
PFDISSEQ EQU   X'40'               IF PFDISCIQ IS SET, A SEPARATOR FOR          
*                                  SCANNER WILL BE PASSED IN PSEP               
PFIELD   DS    AL2          P1/2-3 DISP OF SEARCH FIELD IN TWA                  
*                                                                               
PATWA    DS    A            P2/1-3 ADDRESS OF TWA FOR BUILD MODE                
PLKEY    DS    0AL1         P3/0   LENGTH  OF KEY DATA IF BUILD MODE            
PAKEY    DS    A            P3/1-3 ADDRESS OF KEY DATA IF BUILD MODE            
PLFULL   DS    0AL1         P4/0   LENGTH  OF FULL NAME IF BUILD MODE           
PAFULL   DS    A            P4/1-3 ADDRESS OF FULL NAME IF BUILD MODE           
*                                                                               
         ORG   PATWA               REDEFINE FOR ANALYSE MODE                    
POPTS    DS    0C           P2/0   OPTIONS FOR ANALYSE MODE                     
PALIMBLK DS    A            P2/1-3 A(LIMACC BLOCK) IF POPTS HAS                 
*                                  TSOPTLAQ SET.                                
PSEP     DS    0C           P3/0   SEPARATOR CHARACTER FOR SCANNER              
*                                  STYLE CALL IF PFDISP HAS BOTH                
*                                  PFDISCIQ AND PFDISSEQ SET                    
PCOMFACS DS    A            P3/1-3 ADDRESS OF COMFACS                           
*                                                                               
PLOTHER  DS    0AL1         P4/0   LENGTH  OF 'OTHER' DATA (0=NONE)             
PAOTHER  DS    A            P4/1-3 ADDRESS OF 'OTHER' DATA                      
*                                                                               
PTSEARCH DS    0X           P5/0   TYPE    OF SEARCH CODE                       
PTSEHDRQ EQU   0                   USE FIELD CODE IN EXTENDED HEADER            
PTSECODQ EQU   1                   PASEARCH -> CL8'SEARCH CODE'                 
PASEARCH DS    A            P5/1-3 ADDRESS OF SEARCH CODE                       
PTSYSTEM DS    0X           P6/0   TYPE    OF SYSTEM CODE                       
PTSYCONQ EQU   0                   USE CONNECTED OVSYS                          
PTSYCODQ EQU   1                   PASYSTEM -> CL6'SYSTEM CODE'                 
PTSYSWDQ EQU   2                   PASYSTEM -> XL7'SYSTEM SWITCH DATA'          
PASYSTEM DS    A            P6/1-3 ADDRESS OF SYSTEM CODE / SWITCH DATA         
PARMSL   EQU   *-PARMS                                                          
*                                                                               
UNSWORK  DS    CL(40+80)                                                        
         ORG   UNSWORK                                                          
*                                                                               
* DATA TO BE WRITTEN TO TEMPSTR                                                 
*                                                                               
       ++INCLUDE GESRCHTMPD                                                     
*                                                                               
         ORG   ,                                                                
SRCHWRKL EQU   *-SRCHWORK                                                       
         EJECT                                                                  
* GESRCHBLKD                                                                    
* DDCOMFACS                                                                     
* FATWA                                                                         
* FATCB                                                                         
         PRINT OFF                                                              
       ++INCLUDE GESRCHBLKD                                                     
       ++INCLUDE DDCOMFACS                                                      
       ++INCLUDE FATWA                                                          
       ++INCLUDE FATCB                                                          
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'013GESRCHCALL02/12/96'                                      
         END                                                                    
