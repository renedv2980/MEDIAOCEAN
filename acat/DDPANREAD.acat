*          DATA SET DDPANREAD  AT LEVEL 005 AS OF 05/01/02                      
*CATALP PANREAD                                                                 
PANRD2 TITLE '- MODULE TO READ AND INTERPRET PAN DUMP TAPES'                    
PANREAD  CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKX-WORKD,*PANREAD                                             
         USING WORKD,RC            RC=A(LOCAL WORKING STORAGE)                  
         LR    R3,R1               R3=A(PARAMETER LIST)                         
         L     R2,0(R3)            R2=A(80 BYTE CARD AREA)                      
         MVC   0(L'SPACES,R2),SPACES                                            
         LA    R9,PANTAPE          R9=A(DCB FOR PAN BACKUP FILE)                
         LA    R8,BLK              R8=A(BLOCK READ FROM TAPE)                   
         USING BLOCK,R8                                                         
         NOP   READ2                                                            
         OI    *-3,X'F0'           FIRST TIME CODE                              
         OPEN  ((R9),INPUT)                                                     
         GET   (R9),BLK                                                         
         MVI   CARRY,X'00'         INDICATES NO RESIDUAL CHARS                  
         XC    BLKDISP,BLKDISP                                                  
         B     READ4                                                            
*                                                                               
READ2    LH    RF,BLKDISP            PT TO DATA                                 
         AR    RF,R8                                                            
         CLC   0(4,RF),=X'DFFFEFFF'  END OF BLK?                                
         BNE   READ6                 NO                                         
*                                                                               
READ4    BAS   RE,SVBLK                                                         
         GET   (R9),BLK              YES - GET NEXT BLOCK                       
         MVC   BLKLEN,PANTAPE+82     GET BLOCK LENGTH                           
         MVC   BLKDISP,=H'6'         SET DISPLACEMENT                           
         LA    RF,6(R8)              PT 2 BYTES BEFORE TO DO COMPARE            
         CLC   8(2,R8),=X'8FFF'      BEG OF NEW BOOK?                           
         BE    READ61                NO                                         
*                                                                               
***      MVC   BLKDISP,=H'17'        DISP TO BEGIN OF DATA                      
***      CLC   8(2,R8),=X'1FFF'      IS THIS A CONTINUATION?                    
***      BE    CARD                  NO                                         
         MVC   BLKDISP,=H'16'        DISP TO BEGIN OF DATA                      
         B     CARD                                                             
*                                                                               
READ6    CLC   0(4,RF),=X'DFFF8FFF'  END OF PREV BOOK/BEG NEW ONE?              
         BNE   READ7                 NO, SO CONTIN READING DATA                 
*                                                                               
READ61   LH    R1,BLKDISP            ADJUST DISP                                
         CLC   44+2(2,RF),=X'0000'   DOES NEW MEMBER INDICATOR=0?               
         BNE   READ6A                NO, IT'S A CONTIN OF MEMBER                
         CLC   SVNAME,12(RF)         DOES PREV MEMEBER NAME MATCH THIS?         
         BE    READ6A                YES,IT'S A CONTIN OF MEMBER                
         LA    R1,2(R1)              PT TO THE '8F'                             
         STH   R1,BLKDISP            R8+BLKDISP='8F'                            
         B     DIR                   FORMAT DIR CARD                            
*                                                                               
READ6A   LA    R1,BLKDATQ+2(R1)      PT TO FIRST DATA BYTE                      
         STH   R1,BLKDISP            STORE DISP TO CONT'D DATA                  
         B     CARD                  PROCESS CARD                               
*                                                                               
READ7    CLC   0(4,RF),=X'DFFF0FFF'  REPEATED HEADER?                           
         BNE   CARD                  NO, SO CONTIN READING DATA                 
         LH    RF,BLKLEN                                                        
         SH    RF,BLKDISP                                                       
         SH    RF,=H'6'              ADJ FOR DFFF + DFFFEFFF EOB FLAG           
         CH    RF,=H'47'             ARE ALL HEADER BYTES PRESENT               
         BL    READ8                 NO                                         
         LH    RF,BLKDISP            ADJUST DISP                                
         LA    RF,49(RF)             SKIP OVER HEADER BYTES--GET DATA           
         STH   RF,BLKDISP            SAVE NEW DISPLACEMENT                      
         B     CARD                  READ DATA                                  
* NOT ALL HEADING BYTES PRESENT                                                 
READ8    LA    R0,47                 NUMBER OF BYTES IN COMPLETE HEADER         
         SR    R0,RF                 LESS ACTUAL HEADER BYTES PRESENT           
         ST    R0,DUB                SAVE REMAINING HEADER BYTES                
*                                                                               
         LA    R8,BLK                                                           
         LH    R4,BLKDISP                                                       
         AR    R8,R4                 PT TO 'DF'                                 
         LA    R4,SVHDR              PT TO STORAGE FOR BROKEN HEADER            
         BCTR  RF,0                  #BYTES OF HDR IN THIS BLK-1 EX             
         EXMVC RF,0(R4),2(R8)        SAVE BYTES BEGINING WITH '0F'              
         LA    R4,1(RF,R4)           BUMP TO NEXT FREE POSITION IN STRG         
*                                                                               
         BAS   RE,SVBLK                                                         
         GET   (R9),BLK                                                         
*                                                                               
         LA    R8,BLK+16             PT TO 1ST CONT'D HDR BYTE IN BLK           
         SR    RF,RF                                                            
         A     RF,DUB                RF=NUMBER OF REMAINING BYTES               
         BCTR  RF,0                  -1 FOR EX                                  
         EXMVC RF,0(R4),0(R8)        PUT CONT'D BYTES INTO STRG                 
         LA    RF,17(RF)             DISPL TO 1ST DATA BYTE AFTER DIR           
         STH   RF,CONTIN             AFTER DIR,THIS IS THE DISP TO DATA         
*                                                                               
         XC    BLKDISP,BLKDISP       CLEAR DISPLACEMENT                         
         LA    R8,SVHDR              PT TO THE HEADER                           
         CLC   44(2,R8),=X'0000'     CONT'D MEMBER OR NEW ONE?                  
         BE    DIR                   X'0000', THIS IS A NEW MEMBER              
*                                                                               
         LA    R0,16                 CONT'D MEMBER, ADJUST DISPL                
         A     R0,DUB                                                           
         STH   R0,BLKDISP                                                       
         B     CARD                                                             
*                                                                               
READX    MVI   0(R3),X'80'         END OF INPUT FILE                            
         MVC   0(2,R2),=C'/*'      INSERT END OF FILE MARKER                    
         CLOSE ((R9))              CLOSE PANTAPE FILE                           
         B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO FORMAT DIRECTORY                                         *         
***********************************************************************         
         SPACE 1                                                                
DIR      LH    R4,BLKDISP                                                       
         AR    R8,R4               PT TO '8F' CHARACTER                         
         MVI   0(R3),1             THIS IS A DIRECTORY ITEM                     
         MVI   COMMENT,C'N'                                                     
         MVC   SVNAME,BLKNAME        SAVE MEMBER NAME FOR LATER COMPARE         
         GOTO1 =V(SIXUNPK),PARA,BLKNAME,0(R2),9                                 
         SR    R0,R0               GET LEVEL NUMBER                             
         IC    R0,BLKLEV                                                        
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  10(3,R2),DUB                                                     
         GOTO1 =V(DATCON),PARA,(2,BLKDATE1),(10,DUB)                            
         MVC   34(8,R2),DUB                                                     
         GOTO1 (RF),(R1),(2,BLKDATE2),(10,DUB)                                  
         MVC   42(8,R2),DUB                                                     
         SR    R0,R0                                                            
         ICM   R0,3,BLKSTMT        GET NUMBER OF STATEMENTS                     
         CVD   R0,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  47(8,R2),DUB                                                     
         CLI   0(R8),X'0F'         WAS THIS A BROKEN HEADER?                    
         BNE   DIR2                NO,                                          
         MVC   BLKDISP,CONTIN      SET TO APPROPRIATE DISPLACEMENT              
         B     DIRX                                                             
*                                                                               
DIR2     LH    R4,BLKDISP          ADD IN DISP TO 1ST DATA BYTE                 
         LA    R4,BLKDATQ(R4)                                                   
         STH   R4,BLKDISP          SAVE FOR NEXT CALL TO READ DATA              
DIRX     B     XIT                                                              
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO FORMAT CARD                                              *         
***********************************************************************         
         SPACE 1                                                                
CARD     LH    R4,BLKDISP          R4=NEXT BLOCK DISPLACEMENT                   
         LA    R8,BLK                                                           
         AR    R8,R4               R7=A(NEXT CARD)                              
         SR    R5,R5               R5=LENGTH OF OUTPUT                          
         MVI   CARRY,X'00'         CLR CARRY OVER INDICATOR EMPTY               
*                                                                               
CARD2    ZIC   R1,0(R8)              R1-'80' BIT=#SPACES                        
         N     R1,=X'0000007F'       REMOVE X'80'BIT                            
         TM    0(R8),X'80'           WAS THE '80' BIT ON?                       
         BZ    CARD3                 NO,THEN THIS IS A LENGTH FIELD             
         CLC   0(4,R8),=X'DFFF8FFF'  MEMBER CONTINUED?                          
         BE    CARD2A                NOT YET                                    
         CLC   0(4,R8),=X'DFFFEFFF'  END OF BLOCK?                              
         BNE   CARD2B                NOT YET                                    
         MVI   CARRY,X'00'           YES, CLR CARRY FLAG                        
         B     CARD6                                                            
*                                                                               
CARD2A   LA    R8,BLKDATQ+2(R8)      NO, BUMP TO NEXT INPUT AREA                
         LA    R4,BLKDATQ+2(R4)      INCR BLK DISP                              
         B     CARD2                 SKIP OVER REPEATED HEADER                  
*                                                                               
CARD2B   LA    R8,1(R8)              NO, BUMP TO NEXT INPUT AREA                
         LA    R4,1(R4)              INCR BLK DISP                              
         B     CARD5                 BUMP R1 # SPACES                           
*                                                                               
CARD3    LH    RF,BLKLEN                                                        
         SR    RF,R4                 REMOVE DISPLACEMENT                        
         SH    RF,=H'5'              # BYTES LEFT IN THIS BLOCKD                
         LA    R0,1(R1)              ACTUAL # BYTES TO MOVE                     
         BP    CARD3A                                                           
         STC   R0,CARRY                                                         
         B     CARD6                                                            
*                                                                               
CARD3A   CR    R0,RF                 ARE ALL BYTES IN THIS BLK                  
         BNH   CARD4                 YES, JUST MOVE THEM IN                     
         SR    R0,RF                 NO, ADJUST TO WHAT IS HERE                 
         STC   R0,CARRY              SAVE OVER HANG                             
         BCTR  RF,0                  DECR FOR EX                                
         LR    R1,RF                 #BYTES IN THIS REC-1 TO MOVE               
*                                                                               
CARD4    EXMVC R1,0(R2),1(R8)        MOVE DATA INTO CARD                        
         LA    R8,2(R8,R1)           BUMP TO NEXT INPUT AREA                    
         LA    R4,2(R4,R1)           INCR BLK DISP                              
*                                                                               
CARD5    LA    R2,1(R2,R1)           BUMP TO NEXT OUTPUT AREA                   
         LA    R5,1(R5,R1)           INCR OUTPUT LENGTH                         
         CH    R5,=Y(L'SPACES)       HAVE WE OUTPUT 80 CHARS?                   
         BE    CARDX                 YES, DONE WITH CARD                        
         BL    CARD5B                NOT YET                                    
         DC    H'0'                  OH, NO--BUG-TOO MANY CHARS READ            
*                                                                               
*DO WE NEED TO READ ANOTHER BLOCK TO COMPLETE THIS CARD?                        
CARD5B   CLI   CARRY,X'00'           MORE DATA IN THIS BLK TO READ?             
         BE    CARD2                 YES                                        
CARD6    BAS   RE,SVBLK                                                         
         GET   (R9),BLK              NO, DATA IS IN NEXT BLOCK                  
         MVC   BLKLEN,PANTAPE+82     GET BLOCK LENGTH                           
         CLC   BLK+8(2),=X'1FFF'     MAKE SURE NEXT REC BEG WITH CONTIN         
         BE    CARD7                 YES, CONTINUE CHARACTER WAS FOUND          
         DC    H'0'                  ELSE BUG                                   
*                                                                               
CARD7    LA    R8,BLK+15             R8=A(BEG OF DATA-1)                        
         LA    R4,15                 R4=DISPL TO DATA-1                         
         ZIC   R1,CARRY              R1=# BYTES TO MOVE RIGHT AWAY              
         BCTR  R1,0                  DECR FOR EX                                
         MVI   CARRY,X'00'           RESET CARRY AFTER NEW BLK READ             
         LTR   R1,R1                 DATA BEG WITH REMNDR OF CHARS?             
         BNM   CARD4                 YES, MOVE CHARS DIRECTLY TO CARD           
         LA    R8,1(R8)              PT TO 1ST DATA BYTE                        
         LA    R4,1(R4)              BUMP DISP                                  
         B     CARD2                 (1ST BYTE WILL HAVE '80' BIT ON)           
*                                                                               
CARDX    STH   R4,BLKDISP                                                       
         MVI   0(R3),3             SET THIS IS A DATA CARD                      
         CLI   COMMENT,C'Y'                                                     
         BNE   XIT                                                              
         MVI   0(R3),2             SET THIS IS A COMMENT                        
         MVI   COMMENT,C'N'                                                     
*                                                                               
XIT      XIT1  ,                                                                
         EJECT                                                                  
* SUBROUTINE TO SAVE PREVIOUS BLOCK *                                           
         SPACE 1                                                                
SVBLK    NTR1                                                                   
         L     R0,=A(PREVBLK)                                                   
         LH    R1,BLKLEN                                                        
         L     RE,=A(BLK)                                                       
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         B     XIT                                                              
         EJECT                                                                  
         LTORG                                                                  
         SPACE 1                                                                
BLKLEN   DS    H                                                                
BLKDISP  DC    H'0'                                                             
CONTIN   DC    H'0'                                                             
SVNAME   DC    CL8' '                                                           
SVHDR    DS    CL50                                                             
SPACES   DC    CL80' '                                                          
CARRY    DC    X'FF'                                                            
COMMENT  DC    C' '                                                             
OPENSW   DC    C'N'                                                             
         SPACE 1                                                                
         PRINT GEN                                                              
PANTAPE  DCB   EODAD=READX,DDNAME=PANTAPE,DSORG=PS,MACRF=GM,RECFM=VS            
         PRINT NOGEN                                                            
         SPACE 1                                                                
         DC    CL8'***BLK**'                                                    
BLK      DS    0X                  ** PAN LIBRARY BLOCK DEFINITION **           
         DS    55X                 OVERHEAD FOR DIRECTORY INFO                  
         DS    (64*1024)X          MAXIMUM LENGTH OF DATA IS 64K                
         SPACE 1                                                                
         DC    CL8'**SVBLK*'                                                    
PREVBLK  DS    0X                                                               
         DS    55X                                                              
         DS    (64*1024)X                                                       
         DC    C'MIRIAM WAS HERE'                                               
         SPACE 1                                                                
*                                                                               
BLOCK    DSECT                                                                  
BLKQLFY  DS    XL2                   QUALIFIER- START,END,CONT MARKER           
         DS    XL8                                                              
BLKNAME  DS    XL8                   NAME OF PAN BOOK- 6 BIT OCTAL              
BLKLEV   DS    XL1                   PAN BOOK LEVEL                             
         DS    XL1                                                              
BLKDATE1 DS    XL2                   LAST ACCESS DATE (COMPRESSED)              
BLKDATE2 DS    XL2                   LAST MAINT DATE  (COMPRESSED)              
         DS    XL7                                                              
BLKIND1  DS    XL1                   BLOCK INDICATOR 1                          
BLKICOM  EQU   X'20'                                                            
         DS    XL5                                                              
BLKSTMT  DS    XL2                   NUMBER OF STATEMENTS                       
         DS    XL7                                                              
BLKIND2  DS    XL1                   BLOCK INDICATOR 2                          
BLKIFRST EQU   X'80'                                                            
BLKDATA  DS    0X                    START OF DATA                              
BLKDATQ  EQU   BLKDATA-BLOCK                                                    
         SPACE 1                                                                
*                                                                               
WORKD    DSECT                     ** LOCAL WORKING STORAGE **                  
DUB      DS    D                                                                
PARA     DS    6F                                                               
WORKX    EQU   *                                                                
         SPACE 1                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'005DDPANREAD 05/01/02'                                      
         END                                                                    
