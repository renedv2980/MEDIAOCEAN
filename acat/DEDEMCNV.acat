*          DATA SET DEDEMCNV   AT LEVEL 136 AS OF 01/25/21                      
*PROCESS USING(WARN(15))                                                        
*CATALP DEMCNV                                                                  
         TITLE 'DEMCON - DEMO CONVERSION CONTROLLER'                            
DEMCON   CSECT                                                                  
         PRINT NOGEN                                                            
         ENTRY SSB                                                              
         ENTRY UTL                                                              
         ENTRY COMFACS                                                          
                                                                                
         IEABRCX DEFINE            SET UP FOR JUMPS IN IBM MACROS               
                                                                                
         NBASE 0,**DEMCON,=A(DEWORKC),RA,R9                                     
         LARL  R8,DEMCONC                                                       
         USING DEMCOND,R8          R8=A(GLOBAL W/S)                             
         L     R7,VCPRINT                                                       
         USING DPRINT,R7           R7=A(PRINTER DSECT)                          
*                                                                               
         ST    RB,ABASE                                                         
         ST    RA,BBASE                                                         
*                                                                               
         BAS   RE,INITPROG         GLOBAL INITIALIZATION                        
         EJECT                                                                  
* VALIDATE INPUT PARAMETERS & INITIALIZE FOR EACH REQUEST                       
*                                                                               
DEM1     DS    0H                                                               
         BAS   RE,PARMVAL          VALIDATE PARAMETER CARDS                     
         BNE   DEM60               EXIT ON INVALID CARD OR EOF                  
         CLI   OPENFLAG,C'Y'                                                    
         BE    DEM1C                                                            
         MVI   OPENFLAG,C'Y'                                                    
         GOTO1 VDATAMGR,DMCB,(0,=C'DMOPEN'),=C'DEMO',DMFLIST                    
*                                                                               
DEM1C    DS    0H                                                               
         CLC   NFSDDNAM,SPACES     ANY NFS DDNAME PROVIDED?                     
         BE    DEM1H               NO                                           
*                                                                               
         GOTO1 VDYNALLC,DMCB,(C'A',NFSDDNAM)                                    
         CLI   DMCB+4,0            IT'S ALLOCATED?                              
         BE    DEM1D               NO                                           
*                                                                               
         GOTO1 VDYNALLC,DMCB,(C'U',NFSDDNAM)  DYNAMICALLY UNALLOCATE            
*                                                                               
DEM1D    DS    0H                                                               
         OPEN  NFSFILES            CONTAINS FILENAMES IN MOUNTED FOLDER         
*                                                                               
         GET   NFSFILES,TEMP       GET THE FIRST FILENAME                       
         SR    R3,R3                                                            
         ICM   R3,3,TEMP           RECLEN (FROM RDW)                            
         SHI   R3,4                L'RDW                                        
*                                                                               
         GOTO1 VDYNALLC,DMCB,(C'H',NFSDDNAM),((R3),TEMP+4),(X'50',0)            
         TM    DMCB+8,X'20'        DYNAMIC ALLOCATION FAILED?                   
         BZ    *+6                                                              
         DC    H'0'                YES                                          
*                                                                               
DEM1E    DS    0H                                                               
         GET   NFSFILES,TEMP       GET THE NEXT FILENAME                        
         SR    R3,R3                                                            
         ICM   R3,3,TEMP           RECLEN (FROM RDW)                            
         SHI   R3,4                L'RDW                                        
*                                                                               
         GOTO1 VDYNALLC,DMCB,(C'H',DUB),((R3),TEMP+4),(X'58',0)                 
         TM    DMCB+8,X'20'        DYNAMIC ALLOCATION FAILED?                   
         BZ    *+6                                                              
         DC    H'0'                YES                                          
*                                                                               
         MVC   DUB1,SPACES                                                      
         LLC   R1,DMCB+8                                                        
         N     R1,=X'00000007'     L'RETURNED DDNAME (MINUS ONE !!!)            
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   DUB1(0),DUB         RETURNED DDNAME FROM DYNALLOC                
         GOTO1 VDYNALLC,DMCB,(C'C',NFSDDNAM),DUB1  CONCATENATE                  
         B     DEM1E               ALLOCATE & CONCATENATE THE NEXT FILE         
*                                                                               
* DCB FOR DATASET WITH FILENAMES IN NFS-MOUNTED FOLDER                          
NFSFILES DCB   DDNAME=NFSFILES,DSORG=PS,MACRF=GM,LRECL=256,RECFM=VB,   +        
               EODAD=DEM1F                                                      
*                                                                               
DEM1F    DS    0H                                                               
         CLOSE NFSFILES                                                         
*                                                                               
DEM1H    DS    0H                                                               
*                                                                               
         CLI   NETCTREC,C'Y'       CREATE NET CONTROL RECORDS?                  
         BNE   *+8                                                              
         OI    FLAGS1,CREATE_NETCTREC     YES                                   
*                                                                               
         CLI   NETCTCOR,C'N'       EXCLUDE CORRECTN BOOKS FROM CTRECS?          
         BNE   *+8                                                              
         OI    FLAGS1,EXCLUDE_CORRECTIONS YES                                   
*                                                                               
         IF (CLI,WARNFLAG,EQ,C'N')       WARN=NO CARD ENCOUNTERED?              
           OI  FLAGS1,INHIBIT_WARNING_EMAILS  YES: INHIBIT WARNINGS             
         ENDIF ,                                                                
*                                                                               
         MVI   MSGFLAG,0                                                        
         CLI   MKTEMAIL,C'Y'       NEED TO GENERATE NET OR MKT EMAILS?          
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   DEM3A               NO                                           
*                                                                               
         CLC   EFILE,SPACES        ALLOCATE VTS IF DEFINED BY EFILE             
         BE    DEM1K               ELSE ETAPE SHOULD BE DEFINED                 
         MVC   DSNAME(L'EFILE),EFILE                                            
         GOTO1 VDYNALLC,DMCB,(2,DDNAME),DSNAME   ETAPE IS NOW VTS               
DEM1K    L     R2,AETAPE                                                        
         OPEN  ((R2),(OUTPUT))                                                  
*                                                                               
         CLI   NETEMAIL,C'Y'       FOR NET EMAILS DON'T CREATE                  
         BE    DEM3A               MARKET LIST HEADER                           
         L     R3,AMREC                                                         
         MVI   1(R3),50            LENGTH OF RECORD                             
         MVC   4(50,R3),SPACES                                                  
         MVC   4(11,R3),=C'MARKET LIST'                                         
         MVC   19(L'INPSRCE,R3),INPSRCE        INPUT SOURCE                     
         MVI   23(R3),C','                                                      
         GOTO1 VDATCON,DMCB,(5,0),(10,24(R3))  CURRENT DAY                      
         MVI   32(R3),C','                                                      
         ICM   RF,7,1(R1)                                                       
         ICM   R5,15,4(RF)                                                      
         AHI   R5,6*60*60          ADD 6 HOURS TO ADJUST TIME                   
         ST    R5,DUB              CURRENT TIME IN SECONDS                      
         GOTO1 VTIMCON,DMCB,(1,DUB),33(R3)   PRINTABLE TIME                     
         MVI   40(R3),C','                                                      
         CLI   LOADTYPE,LDORIGEQ       ORIGINAL LOAD                            
         BNE   *+14                                                             
         MVC   41(8,R3),=C'ORIGINAL'   LOAD TYPE                                
         B     DEM3PUT                                                          
         CLI   LOADTYPE,LDREISEQ       REISSUE LOAD                             
         BNE   *+14                                                             
         MVC   41(7,R3),=C'REISSUE'                                             
         B     DEM3PUT                                                          
         CLI   LOADTYPE,LDRELDEQ       RELOAD                                   
         BNE   *+14                                                             
         MVC   41(6,R3),=C'RELOAD'                                              
         B     DEM3PUT                                                          
         DC    H'0'                                                             
DEM3PUT  MVC   MTITLE,0(R3)        SAVE TITLE WITH DATE/TIME                    
*                                                                               
DEM3A    ZAP   LINE,=P'99'                                                      
         MVC   MID1,SPACES                                                      
         MVC   MID2,SPACES                                                      
         LARL  RE,SRCTAB                                                        
         USING SRCTABD,RE          RE=A(SOURCE TABLE)                           
*                                  FIND CORRECT SOURCE ENTRY IN SRCTAB          
DEM4     CLI   SRCCODE,0                                                        
         BNE   *+6                                                              
         DC    H'0'                DIE IF E-O-T REACHED                         
         CLC   SRCCODE,SRCSW                                                    
         BE    DEM8                                                             
*                                                                               
DEM6     LA    RE,SRCLEN(RE)       BUMP TO NEXT TABLE ENTRY                     
         B     DEM4                                                             
*                                  TEST BOOK DATE AGAINST TABLE                 
DEM8     CLC   FILTBOOK+1(2),SRCSTART                                           
         LA    R0,FILTBOOK                                                      
         BL    DEM6                                                             
         CLC   FILTBOOK+1(2),SRCEND                                             
         BH    DEM6                                                             
*                                                                               
         OC    IPHASE,IPHASE                                                    
         BNZ   *+10                                                             
         MVC   IPHASE,SRCIPHS      SET INPUT PHASE                              
         OC    OPHASE,OPHASE                                                    
         BNZ   *+10                                                             
         MVC   OPHASE,SRCOPHS      SET OUTPUT PHASE                             
         MVC   INTALPHL,SRCLINT                                                 
         MVC   INTNMAC2,SRCNUMAC                                                
         LLC   R0,INTALPHL         CALCULATE INTERIM RECORD LENGTH              
         SR    R1,R1                                                            
         ICM   R1,3,INTNMAC2                                                    
         SLL   R1,2                                                             
         AR    R1,R0                                                            
         LA    R1,INTDATA-INTERD(R1)                                            
         STCM  R1,3,INTRECL                                                     
         DROP  RE                                                               
         EJECT                                                                  
         BRAS  RE,LDPHASES         LOAD IPHASE/OPHASE/COMFACS ADDRESSES         
*                                                                               
         L     R3,ACOMFACS                                                      
         USING COMFACSD,R3                                                      
*                                                                               
* VALIDATE BOOKTYPE (1 OR 2 CHARACTERS)                                         
*                                                                               
         OC    TEMPBTYP,TEMPBTYP   ANY BOOKTYPE GIVEN?                          
         BNZ   *+12                YES: VALIDATE IT                             
         MVI   BOOKTYPE,0          NO: DEFAULT TO STANDARD                      
         B     DEM11                                                            
*                                                                               
         GOTO1 CDEMTABS,DMCB,SPBOOKTB  GET A(BOOKTYPE TABLE)                    
         ICM   RF,15,0(R1)         A(TABLE) RETURNED IN P1                      
         BNZ   *+6                                                              
         DC    H'0'                BAD TABLEID PASSED                           
         L     R0,4(R1)            L'TABLE ENTRY RETURNED IN P2                 
*                                                                               
         USING SPBKTYPD,RF                                                      
DEM9     CLI   0(RF),X'FF'         EOT?                                         
         BNE   DEM9A               YES: INVALID BOOKTYPE                        
         MVC   P(16),=C'INVALID BOOKTYPE'                                       
         GOTO1 VPRINTER                                                         
         B     DEM60                                                            
*                                                                               
DEM9A    CLC   TEMPBTYP,SPBKTYPA   IS BOOKTYPE IN TABLE?                        
         BE    *+10                                                             
         AR    RF,R0               NO: TRY NEXT                                 
         B     DEM9                                                             
*                                                                               
         MVC   BOOKTYPE,SPBKTYPN   SET BTYPE FOR DEMO LOOKUPS                   
         DROP  RF                                                               
         DROP  R3                                                               
*                                                                               
DEM11    DS    0H                                                               
         GOTO1 SETPTCH,DMCB,ABASE,CPATCH                                        
         GOTO1 SETPTCH,DMCB,AIPHASE,IPATCH                                      
         GOTO1 SETPTCH,DMCB,AOPHASE,OPATCH                                      
         EJECT                                                                  
* GET AN INPUT RECORD AND APPLY FILTERS                                         
*                                                                               
         MVI   INTAPESW,0          SET INPUT TAPE UNOPENED                      
         XC    SAVEMRKT,SAVEMRKT   SET FIRST TIME CONTROL                       
*                                                                               
DEM14    L     RE,AIREC            CLEAR INTERIM RECORD                         
         LHI   RF,MAX_RECLEN                                                    
         XCEF                                                                   
         CLI   INTAPESW,0                                                       
         BNE   *+16                                                             
         L     R0,NITAPES                                                       
         AHI   R0,1                                                             
         ST    R0,NITAPES                                                       
         GOTO1 AIPHASE,0           GET A RECORD                                 
         MVC   DUB(1),INTAPESW                                                  
         TM    DUB,X'80'           TEST FOR INPUT TAPE I/O ERROR                
         BO    DEM42                                                            
         CLI   DUB,2               TEST FOR E-O-F                               
         BE    DEM42                                                            
         MVI   INTAPESW,1          SET INPUT TAPE OPENED                        
*                                                                               
         CLI   NETEMAIL,C'Y'       FOR NET EMAILS                               
         BNE   DEM14A                                                           
         L     RE,ARREC                                                         
         CLC   4(2,RE),=C'00'      EXTRACT INFO FROM THE '00' RECORD            
         BNE   DEM14A                                                           
         BRAS  RE,NETMSG           GO CREATE NET MESSAGE LINE                   
*                                                                               
DEM14A   TM    DUB,X'40'           TEST IF RECORD TO BE DROPPED                 
         BZ    DEM15                                                            
         TM    DUB,X'03'           TEST RREC TO BE PRINTED                      
         BNO   DEM28                                                            
         L     R1,ARREC            PRINT RATING SERVICE RECORD                  
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'R',ARREC),(R0),=X'010000FFFF',0                 
         B     DEM28                                                            
*                                                                               
DEM15    L     RE,AIREC                                                         
         USING INTERD,RE           RE=A(INTERIM RECORD)                         
         CLI   FORCE,C'Y'                                                       
         BNE   *+10                                                             
         MVC   INTBOOK,FILTBOOK+1  SET FORCE BOOK VALUE                         
*                                                                               
         SR    RF,RF               SET INTERIM RECORD LENGTH FOR SORT           
         ICM   RF,3,INTRECL        RF=MAX RECORD LENGTH                         
         LA    R1,0(RE,RF)         R1=A(END OF RECORD)                          
         LA    R0,INTDATA-INTERD                                                
         SR    RF,R0               RF=MAX DATA LENGTH                           
         CLI   0(R1),0             LOOK FOR LAST NON ZERO DATA BYTE             
         BNE   *+10                                                             
         BCTR  R1,0                                                             
         BCT   RF,*-10                                                          
         SR    R1,RE                                                            
         LA    R1,1(R1)            R1=ACTUAL RECORD LENGTH                      
         STCM  R1,3,0(RE)          SET LENGTH IN INTERIM RECORD                 
*                                  APPLY RECORD TYPE FILTERS                    
         SR    RF,RF                                                            
         ICM   RF,1,FILTRECS                                                    
         BZ    DEM16                                                            
         LA    R1,FILTRECS+1                                                    
         CLC   INTRTYP,0(R1)                                                    
         BE    DEM16                                                            
         LA    R1,L'INTRTYP(R1)                                                 
         BCT   RF,*-14                                                          
         B     DEM28                                                            
*                                  APPLY MARKET FILTERS                         
DEM16    SR    RF,RF                                                            
         ICM   RF,1,FILTMRKT                                                    
         BZ    DEM18                                                            
         OC    INTMRKT,INTMRKT                                                  
         BZ    DEM18                                                            
         LA    R1,FILTMRKT+1                                                    
*                                                                               
         TM    FLAGS1,NEGATIVE_FILTMRKT    NEGATIVE MARKET FILTER LIST?         
         BO    DEM17               YES                                          
         CLC   INTMRKT,0(R1)                                                    
         BE    DEM18                                                            
         LA    R1,L'INTMRKT(R1)                                                 
         BCT   RF,*-14                                                          
         B     DEM28                                                            
*                                                                               
DEM17    CLC   INTMRKT,0(R1)                                                    
         BE    DEM28                                                            
         LA    R1,L'INTMRKT(R1)                                                 
         BCT   RF,DEM17                                                         
*                                  APPLY STATION FILTERS                        
DEM18    SR    RF,RF                                                            
         ICM   RF,1,FILTSTAT                                                    
         BZ    DEM19                                                            
         OC    INTSTA,INTSTA                                                    
         BZ    DEM19                                                            
         LA    R1,FILTSTAT+1                                                    
         CLC   INTSTA,0(R1)                                                     
         BE    *+16                                                             
         LA    R1,10(R1)                                                        
         BCT   RF,*-14                                                          
         B     DEM28                                                            
         CLC   5(5,R1),SPACES                                                   
         BE    *+10                                                             
         MVC   INTSTA,5(R1)        RENAME STATION                               
*                                  APPLY ACM FILTER                             
DEM19    SR    RF,RF                                                            
         ICM   RF,1,VTYPES         NUMBER OF VIEWING TYPES TO FILTER ON         
         BZ    DEM20                                                            
         LA    R1,VTYPES+1                                                      
         CLI   INTKSRC,0           VIEWING TYPE NOT SET                         
         BE    DEM20                                                            
         CLC   INTKSRC,0(R1)       MATCH ON VIEWING TYPE?                       
         BE    DEM20               YES. KEEP IT                                 
         LA    R1,L'INTKSRC(R1)                                                 
         BCT   RF,*-14                                                          
         B     DEM28               NO MATCH. DISCARD IT.                        
*                                                                               
DEM20    SR    RF,RF                                                            
         ICM   RF,1,FILTBOOK                                                    
         BZ    DEM21                                                            
         LA    R1,FILTBOOK+1                                                    
DEM20A   CLC   INTBOOK,0(R1)                                                    
         BL    *+14                                                             
         CLC   INTBOOK,2(R1)                                                    
         BNH   DEM22                                                            
         LA    R1,4(R1)                                                         
         BCT   RF,DEM20A                                                        
         B     DEM28                                                            
*                                  APPLY WEEK FILTERS                           
DEM21    SR    RF,RF                                                            
         ICM   RF,1,FILTWEEK                                                    
         BZ    DEM22                                                            
         LA    R1,FILTWEEK+1                                                    
DEM21A   CLC   INTBOOK,0(R1)                                                    
         BE    DEM22                                                            
         LA    R1,2(R1)                                                         
         BCT   RF,DEM21A                                                        
         B     DEM28                                                            
*                                  APPLY STATION TYPE FILTERS                   
DEM22    SR    RF,RF                                                            
         ICM   RF,1,FILTSTYP                                                    
         BZ    DEM24                                                            
         OC    INTSTYP,INTSTYP                                                  
         BZ    DEM24                                                            
         LA    R1,FILTSTYP+1                                                    
         CLC   INTSTYP,0(R1)                                                    
         BE    DEM24                                                            
         LA    R1,L'INTSTYP(R1)                                                 
         BCT   RF,*-14                                                          
         B     DEM28                                                            
*                                  APPLY TIME FILTERS                           
DEM24    SR    RF,RF                                                            
         ICM   RF,1,FILTTIME                                                    
         BZ    DEM26                                                            
         OC    INTSQH(2),INTSQH                                                 
         BZ    DEM26                                                            
         LA    R1,FILTTIME+1                                                    
DEM24A   CLC   INTSQH,0(R1)                                                     
         BL    *+14                                                             
         CLC   INTEQH,1(R1)                                                     
         BNH   DEM26                                                            
         LA    R1,2(R1)                                                         
         BCT   RF,DEM24A                                                        
         B     DEM28                                                            
*                                                                               
DEM26    B     DEM30               PROCESS RECORD                               
*                                  BUMP FILTERED RECORD COUNT                   
DEM28    L     R0,NFRECS                                                        
         AHI   R0,1                                                             
         ST    R0,NFRECS                                                        
         B     DEM14                                                            
         DROP  RE                                                               
         EJECT                                                                  
* HANDLE SORT INPUT                                                             
*                                                                               
DEM30    L     RE,AIREC                                                         
         USING INTERD,RE           RE=A(INTERIM RECORD)                         
         OC    INTMRKT,INTMRKT                                                  
         BZ    DEM32                                                            
         CLC   SAVEMRKT,INTMRKT    TEST IF CHANGE OF MARKET                     
         BE    DEM32                                                            
*                                                                               
         CLI   MEDIA,C'N'                                                       
         BE    DEM31                                                            
         CLI   MEDIA,C'R'          RADIO MUST WAIT TILL END                     
         BE    DEM31                                                            
         OC    SAVEMRKT,SAVEMRKT   YES - TEST FIRST TIME                        
         BNZ   DEM42                                                            
*                                                                               
DEM31    L     R0,NMRKTS                                                        
         AHI   R0,1                                                             
         ST    R0,NMRKTS                                                        
*                                                                               
         MVC   SAVEMRKT,INTMRKT                                                 
         DROP  RE                                                               
*                                  PRINT RATING SERVICE RECORD                  
DEM32    CLI   RPRINT,0                                                         
         BE    DEM34                                                            
         L     R1,ARREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'R',ARREC),(R0),RPRINT,0                         
*                                  PRINT INTERIM RECORD                         
DEM34    CLI   IPRINT,0                                                         
         BE    DEM35                                                            
         L     R1,AIREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'I',AIREC),(R0),IPRINT,0                         
*                                                                               
DEM35    CLI   MSGFLAG,1           MESSG SENT BY CONVERSION                     
         BNE   DEM36                                                            
         MVI   MSGFLAG,0                                                        
         CLI   MPRINT,0                                                         
         BE    DEM35A                                                           
         L     R1,AMREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'M',AMREC),(R0),MPRINT,0                         
DEM35A   CLI   MKTEMAIL,C'Y'       MKT OR NET EMAIL REQUESTED?                  
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   DEM36                                                            
*                                                                               
         L     R2,AETAPE           YES.                                         
         L     R3,AESUB                                                         
         OC    0(4,R3),0(R3)       OUTPUT SUBJECT YET?                          
         BZ    DEM35B                                                           
         PUT   (R2),(R3)                                                        
         XC    0(4,R3),0(R3)       CLEAR SUBJECT                                
*                                                                               
DEM35B   OC    MTITLE(4),MTITLE    OUTPUT HEADING YET?                          
         BZ    DEM35C                                                           
         LA    R3,MTITLE                                                        
         PUT   (R2),(R3)                                                        
         MVI   3(R3),50                                                         
         MVC   4(50,R3),SPACES     AND A BLANK LINE                             
         PUT   (R2),(R3)                                                        
         XC    MTITLE(4),MTITLE    CLEAR TITLE                                  
*                                                                               
DEM35C   L     R3,AMREC                                                         
         PUT   (R2),(R3)           WRITE MESSAGE TO TAPE                        
*                                  INITIALIZE SORT                              
DEM36    CLI   SORTSW,0                                                         
         BNE   DEM38                                                            
*                                                                               
         CLI   SORTFLAG,C'Y'       IS THE SORT SUPPRESSED?                      
         BE    DEM37               NO                                           
         OPEN  (TEMPBUF,OUTPUT)    YES: OPEN A TEMPORARY BUFFER DATASET         
         MVI   TEMPBUF_MODE,TEMPBUF_OUTPUT                                      
         B     DEM37D                                                           
*                                                                               
DEM37    DS    0H                                                               
         LHI   RE,MAX_RECLEN                                                    
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  RECCARDL,DUB                                                     
*                                                                               
         ICM   RF,15,ASRTCARD      A(OVERRIDE "SORT" CARD) IS PRESENT?          
         BZ    *+14                                                             
         MVC   SORTCARD,0(RF)      YES: USE IT                                  
         B     DEM37B                                                           
*                                                                               
         LHI   RE,L'INTKEY                                                      
         CVD   RE,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SORTCRDL,DUB                                                     
*                                                                               
DEM37B   DS    0H                                                               
         GOTO1 VSORTER,DMCB,SORTCARD,(X'80',RECCARD),(X'80',0)                  
*                                                                               
DEM37D   DS    0H                                                               
         MVI   SORTSW,1                                                         
*                                                                               
DEM38    DS    0H                                                               
         CLI   SORTFLAG,C'Y'       IS THE SORT SUPPRESSED?                      
         BE    DEM39               NO                                           
         LARL  RE,TEMPBUF          YES: JUST BUFFER THE RECORDS                 
         L     RF,AIREC                                                         
         PUT   (RE),(RF)                                                        
         B     DEM40                                                            
DEM39    GOTO1 VSORTER,DMCB,=C'PUT',AIREC    PUT A RECORD TO SORT               
*                                                                               
DEM40    DS    0H                                                               
         L     R0,NUMISORT                                                      
         AHI   R0,1                                                             
         ST    R0,NUMISORT                                                      
         ICM   R1,15,NRECS         DECREMENT MAX RECORD COUNTER                 
         SHI   R1,1                                                             
         BNP   *+12                                                             
         STCM  R1,15,NRECS                                                      
         B     DEM14                                                            
*                                  MAX RECORD COUNTER HAS BECOME ZERO           
         GOTO1 AIPHASE,8           FORCE A CLOSE OF INPUT TAPE                  
         MVI   INTAPESW,2                                                       
         B     DEM42                                                            
         SPACE 2                                                                
SORTCARD DC    CL80' '                                                          
         ORG   SORTCARD                                                         
         DC    C'SORT FIELDS=(5,'                                               
SORTCRDL DS    CL3                                                              
         DC    C',A),FORMAT=BI '                                                
         ORG                                                                    
*                                                                               
RECCARD  DC    C'RECORD TYPE=V,LENGTH=('                                        
RECCARDL DS    CL5                                                              
         DC    C',,,,) '                                                        
         EJECT                                                                  
* HANDLE SORT OUTPUT                                                            
*                                                                               
DEM42    CLI   SORTSW,0            ANY RECORDS PUT TO SORT?                     
         BE    DEM52                                                            
*                                  YES: GET SORT RECORD & PROCESS               
DEM44    DS    0H                                                               
         L     RE,ASREC            CLEAR SORT RECORD BUFFER                     
         LHI   RF,MAX_RECLEN                                                    
         XCEF                                                                   
*                                                                               
         CLI   SORTFLAG,C'Y'       IS THE SORT SUPPRESSED?                      
         BE    DEM45C              NO                                           
         CLI   TEMPBUF_MODE,TEMPBUF_INPUT   TEMPBUF OPENED FOR INPUT?           
         BE    DEM45                                                            
         MVI   TEMPBUF_MODE,TEMPBUF_INPUT   NO: DO IT NOW                       
         CLOSE TEMPBUF                      CLOSE FOR OUTPUT                    
         OPEN  (TEMPBUF,INPUT)              REOPEN FOR INPUT                    
*                                                                               
DEM45    DS    0H                                                               
         LARL  RE,TEMPBUF          READ FROM THE BUFFER DATATSET                
         L     RF,ASREC                                                         
         GET   (RE),(RF)                                                        
         L     R0,NUMOSORT                                                      
         AHI   R0,1                                                             
         ST    R0,NUMOSORT                                                      
         B     DEM45E                                                           
*                                                                               
DEM45C   GOTO1 VSORTER,DMCB,=C'GET'    GET RECORD FROM SORT                     
         ICM   RE,15,4(R1)                                                      
         BZ    DEM50               EXIT IF E-O-F                                
*                                                                               
         L     R0,NUMOSORT                                                      
         AHI   R0,1                                                             
         ST    R0,NUMOSORT                                                      
         LH    R1,0(RE)                                                         
         L     RF,ASREC                                                         
         MOVE  ((RF),(R1)),(RE)                                                 
*                                  PRINT SORT RECORD                            
DEM45E   DS    0H                                                               
         CLI   SPRINT,0                                                         
         BE    DEM46                                                            
         L     R1,ASREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'S',ASREC),(R0),SPRINT,0                         
*                                                                               
DEM46    TM    INTAPESW,X'80'      TEST FOR INPUT TAPE I/O ERROR                
         BO    DEM44               YES - DON'T CONVERT RECORD                   
         L     RE,AWREC            CLEAR WORK RECORD                            
         LHI   RF,MAX_RECLEN                                                    
         XCEF                                                                   
         MVI   BYPSORT,0                                                        
         GOTO1 AIPHASE,4           CONVERT INTERIM TO WORK                      
         TM    BYPSORT,X'80'       INPUT PHASE SAYS BYPASS                      
         BO    DEM44                                                            
         GOTO1 AOPHASE,0           CONVERT WORK TO OUTPUT                       
*                                  PRINT WORK RECORD                            
         CLI   WPRINT,0                                                         
         BE    DEM47                                                            
         L     RE,AWREC                                                         
         OC    0(256,RE),0(RE)     TEST FOR DATA IN WORK RECORD                 
         BE    DEM47                                                            
         LHI   R0,MAX_RECLEN       MAX WORK RECORD LENGTH                       
         GOTO1 APRNTREC,DMCB,(C'W',AWREC),(R0),WPRINT,0                         
*                                                                               
DEM47    CLI   MSGFLAG,1           MESSG SENT BY CONVERSION                     
         BNE   DEM48                                                            
         MVI   MSGFLAG,0                                                        
         CLI   MPRINT,0                                                         
         BE    DEM47A                                                           
         L     R1,AMREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'M',AMREC),(R0),MPRINT,0                         
DEM47A   CLI   MKTEMAIL,C'Y'       IF MKT OF NET EMAIL WAS REQUESTED            
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   DEM48                                                            
         L     R2,AETAPE                                                        
         L     R3,AMREC                                                         
         PUT   (R2),(R3)           WRITE MESSAGE TO TAPE                        
*                                                                               
DEM48    B     DEM44               GET NEXT RECORD                              
         EJECT                                                                  
* HANDLE EOF ON SORT                                                            
*                                                                               
DEM50    MVI   SORTSW,0            SET SORT UNINITIALIZED                       
         CLI   SORTFLAG,C'Y'       IS THE SORT SUPPRESSED?                      
         BE    DEM51               NO                                           
         CLOSE TEMPBUF                                                          
         MVI   TEMPBUF_MODE,C' '                                                
         B     DEM51D                                                           
DEM51    GOTO1 VSORTER,DMCB,=C'END'    TERMINATE THE SORT                       
*                                                                               
DEM51D   DS    0H                                                               
         TM    INTAPESW,X'80'      TEST FOR INPUT TAPE I/O ERROR                
         BO    DEM52                                                            
         GOTO1 AOPHASE,4           NO - OUTPUT FINAL RECORD                     
*                                                                               
DEM52    TM    INTAPESW,X'80'      TEST FOR INPUT TAPE I/O ERROR                
         BO    DEM54                                                            
         CLI   INTAPESW,2          TEST IF TAPE E-O-F                           
         BE    *+14                                                             
         XC    SAVEMRKT,SAVEMRKT   NO - GO PROCESS SAVED RECORD                 
         B     DEM30                                                            
         BRAS  RE,PRTTOTS          PRINT REQUEST TOTALS                         
*                                                                               
* DEIS JUN/2020:                                                                
*   THE DEMCNV SYSIN INPUT STREAM CONSISTS OF A SERIES OF CONTROL CARDS         
*   TERMINATED BY AN "END" CARD. DEMCNV USED TO SUPPORT MULTIPLE                
*   CONVERSION "REQUESTS" WITHIN A SINGLE EXECUTION STEP. THIS WAS DONE         
*   BY INCLUDING MULTIPLE SETS OF CONTROL CARDS, ONE SET AFTER ANOTHER,         
*   EACH TERMINATED BY AN "END" CARD. A "/*" CARD FOLLOWED THE LAST             
*   "END" CARD. IT HAS BEEN DETERMINED THAT THIS "MULTI-REQUEST"                
*   FEATURE IS NO LONGER NECESSARY, AND ACTUALLY MUST BE DISALLOWED             
*   (BECAUSE CODE HAS BEEN ADDED OVER THE YEARS RELYING ON THE                  
*   ASSUMPTION THAT ONLY ONE CONVERSION TAKES PLACE DURING A SINGLE             
*   DEMCNV EXECUTION STEP). SO IF WE SEE ANY PARAMETER CARDS AFTER AN           
*   "END" CARD, WE INVALIDATE THE ENTIRE RUN (SEE LABEL VALP40). IN             
*   ADDITION, WHEN WE REACH THIS POINT IN THE CODE, WE NO LONGER BRANCH         
*   BACK TO READ MORE PARAMETER CARDS.                                          
*********B     DEM1                GET NEXT PARAMETER CARDS                     
         B     DEM60               WE'RE DONE READING CARDS                     
*                                                                               
*                                  HANDLE INPUT TAPE I/O ERRORS                 
DEM54    MVC   P,SPACES                                                         
         MVC   P(33),=C'INPUT TAPE ERRORS - TAPE BYPASSED'                      
         GOTO1 VPRINTER                                                         
         L     R0,NETAPES                                                       
         AHI   R0,1                                                             
         ST    R0,NETAPES                                                       
         XC    SAVEMRKT,SAVEMRKT                                                
         MVI   INTAPESW,2                                                       
         B     DEM42                                                            
         SPACE 2                                                                
* HANDLE E-O-J                                                                  
*                                                                               
DEM60    CLI   OUTAPESW,0          TEST IF OUTPUT TAPE OPEN                     
         BE    DEM61                                                            
         MVI   OUTAPESW,2                                                       
         GOTO1 APUTTAPE            CLOSE OUTPUT TAPE                            
DEM61    CLI   MKTEMAIL,C'Y'                                                    
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   DEM62                                                            
         L     R2,AETAPE                                                        
         CLOSE ((R2),)                                                          
*                                                                               
DEM62    DS    0H                                                               
         OC    ATRACDCB,ATRACDCB   TRACEFIL=YES?                                
         BZ    DEM63               NO                                           
         CLOSE TRACEFIL                                                         
*                                                                               
DEM63    DS    0H                                                               
         CLI   OUTAPESW,0          WAS OTAPE EVER OPENED?                       
         BNE   XBASE               YES: THAT'S GOOD                             
*                                                                               
* ALWAYS OPEN AND CLOSE OTAPE, SO THAT THE +1 GENERATION OF THE GDG IS          
* CREATED. OTHERWISE, THE UPDATE THAT FOLLOWS THE CONVERSION WILL READ          
* THE PREVIOUS GENERATION OF THE GDG!                                           
*                                                                               
         L     R2,AOTAPE           R2=A(ODTF)                                   
         OPEN  ((R2),(OUTPUT))                                                  
         MVI   OUTAPESW,2                                                       
         GOTO1 APUTTAPE            CLOSE OUTPUT TAPE                            
*                                                                               
         MVC   SUBJECT1+62(8),MVSJOBNM                                          
         SR    RF,RF                                                            
         ICM   RF,3,MVSJOB#        JOB NUMBER                                   
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  SUBJECT1+72(5),DUB                                               
*                                                                               
         TM    FLAGS1,INHIBIT_WARNING_EMAILS+EMPTY_OTAPE_OKAY                   
         BNZ   DEM70               DON'T GENERATE AN E-MAIL                     
*                                                                               
         GOTO1 =V(SMTP),DMCB,('SMTPAINI',0)    ATTACH AND INIT. JESMAIL         
*                                                                               
         GOTO1 =V(SMTP),DMCB,('SMTPATCS',SMTPTO1),                     +        
               (L'SUBJECT1,SUBJECT1),(0,SMTPCC1),0                              
*                                                                               
         GOTO1 =V(SMTP),DMCB,('SMTPAPTL',LINE1A)                                
         GOTO1 =V(SMTP),DMCB,('SMTPAPTL',LINE1B)                                
*                                                                               
         GOTO1 =V(SMTP),DMCB,('SMTPASND',0)   SEND THE BUFFERED E-MAIL          
         GOTO1 =V(SMTP),DMCB,('SMTPAEND',0)   DETACH JESMAIL                    
*                                                                               
DEM70    DS    0H                                                               
         MVC   P(L'SUBJECT1),SUBJECT1         ADD WARNING MSG TO TRACE          
         GOTO1 VPRINTER                                                         
*                                                                               
XBASE    DS    0H                                                               
         MVC   P(4),=C'JOB '       PRINT "JOB COMPLETED" MESSAGE TO LOG         
         MVC   P+4(8),MVSJOBNM                                                  
         MVC   P+12(2),=C'(J'                                                   
         SR    RF,RF                                                            
         ICM   RF,3,MVSJOB#        JOB NUMBER                                   
         CVD   RF,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  P+14(5),DUB                                                      
         MVI   P+19,C')'                                                        
         MVC   P+21(9),=C'COMPLETED'                                            
         GOTO1 VPRINTER                                                         
*                                                                               
         LLC   RF,RETCODE          RF = RETURN CODE BACK TO JES                 
         XBASE RC=(RF)                                                          
         EJECT                                                                  
*                                                                               
* ROUTINE TO SET PATCHES.                                                       
*                                                                               
SETPTCH  NTR1                                                                   
         LM    RE,RF,0(R1)         RE=A(PHASE), RF=A(PATCH POOL)                
         SR    R0,R0                                                            
         ICM   R0,1,0(RF)          R0=NUMBER OF PATCHES                         
         BZ    SETPTCHX                                                         
         LA    RF,1(RF)            RF=A(DISP/LEN/PATCH)                         
*                                                                               
SETPTCH2 SR    R1,R1                                                            
         ICM   R1,3,0(RF)                                                       
         LA    R1,0(R1,RE)         R1=A(AREA TO BE PATCHED)                     
         LLC   RC,2(RF)            RC=L'PATCH-1                                 
         EX    RC,*+8                                                           
         B     *+10                                                             
         MVC   0(0,R1),3(RF)                                                    
         LA    RF,23(RF)           BUMP TO NEXT PATCH                           
         BCT   R0,SETPTCH2                                                      
*                                                                               
SETPTCHX XIT1                                                                   
*                                                                               
         EJECT                                                                  
* PROGRAM INTIALIZATION                                                         
*                                                                               
INITPROG NTR1                                                                   
*                                                                               
         MVC   ANIINPUT,=A(NIINPUT)                                             
*                                                                               
         GOTO1 VDATCON,DMCB,(5,0),(0,DUB)                                       
         GOTO1 VDATCON,DMCB,DUB,(3,TODAY3)                                      
         GOTO1 VDATCON,DMCB,DUB,(2,TODAYB)                                      
*                                                                               
         LA    RF,PROTECT          FAKE ADDRESSES FOR PROTON/PROTOFF            
         L     RE,ACOMFACS                                                      
         ST    RF,CPROTON-COMFACSD(RE)                                          
         ST    RF,CPROTOFF-COMFACSD(RE)                                         
*                                                                               
         LA    R2,FULL                                                          
         EXTRACT (2),'S',FIELDS=(ASID)                                          
         LA    R1,FULL                                                          
         L     R2,0(R1)                                                         
         LOCASCB ASID=(R2)         GET ASCB ADDRESS INTO R1                     
         L     R2,ASCBASSB-ASCB(R1) R2 = A(ASSB)                                
         SAM31 ,                   SWITCH TO 31-BIT MODE                        
         L     R1,ASSBJSAB-ASSB(R2) R1 = A(JSAB)                                
         PACK  DUB,JSABJBID-JSAB+3(5,R1)  JOB#####                              
         CVB   R1,DUB                                                           
         STCM  R1,3,MVSJOB#        SAVE BINARY JOB#                             
         SAM24 ,                   SWITCH BACK TO 24-BIT MODE                   
         LA    R2,FULL                                                          
         EXTRACT (2),FIELDS=TIOT                                                
         L     R2,FULL                                                          
         MVC   MVSJOBNM,0(R2)      JOBNAME                                      
*                                                                               
         XIT1                                                                   
*                                                                               
PROTECT  BR    RE                  FAKE PROTON/PROTOFF                          
*                                                                               
         EJECT                                                                  
* ROUTINE TO PRINT REQUEST CONTROL TOTALS                                       
*                                                                               
PRTTOTS  NTR1                                                                   
         LA    R3,NVALS            R3=A(ACCUMULATOR BLOCK)                      
         ZAP   LINE,=P'99'                                                      
         ZAP   PAGE,=P'1'                                                       
         MVC   TITLE,SPACES                                                     
         MVC   MID1,SPACES                                                      
         MVC   MID2,SPACES                                                      
         MVC   P,SPACES                                                         
         MVC   TITLE(31),=C'DEMCON - REQUEST CONTROL TOTALS'                    
*                                                                               
         DO  WHILE=(CLI,0(R3),NE,X'FF') UNTIL EOT IS REACHED:                   
           IF (ICM,R1,15,0(R3),NZ)        PRINT ACCUMULATOR IF NON-ZERO         
             MVC   P(24),4(R3)             ACCUMULATOR DESCRIPTION              
             EDIT  (R1),(13,P+25),ZERO=NOBLANK,COMMAS=YES                       
             GOTO1 VPRINTER                                                     
           ENDIF ,                                                              
           LA    R3,28(R3)           BUMP TO NEXT LINE                          
         ENDDO ,                                                                
*                                                                               
         XIT1  ,                                                                
         EJECT                                                                  
PARMVAL  NTR1  WORK=(RC,PARMWRKX-PARMWRKD)                                      
         USING PARMWRKD,RC         RC=A(TEMP W/S)                               
         ZAP   LINE,=P'99'                                                      
         ZAP   PAGE,=P'1'                                                       
         MVC   TITLE,SPACES                                                     
         MVC   MID1,SPACES                                                      
         MVC   MID2,SPACES                                                      
         MVC   TITLE(38),=C'DEMCON - PARAMETER CARD VALIDATION JOB'             
         MVC   MID1(15),=C'PARAMETER CARDS'                                     
         MVC   MID2(15),=15C'-'                                                 
         MVC   TITLE+39(8),MVSJOBNM  JOB NAME                                   
         MVC   TITLE+47(2),=C'(J'                                               
         SR    R1,R1                                                            
         ICM   R1,3,MVSJOB#        JOB NUMBER                                   
         CVD   R1,DUB                                                           
         OI    DUB+7,X'0F'                                                      
         UNPK  TITLE+49(5),DUB                                                  
         MVI   TITLE+54,C')'                                                    
*                                                                               
         MVI   PARMSW,0                                                         
         L     R5,APARMTAB                                                      
         USING PARMTABD,R5         R5=A(PARAMETER TABLE)                        
*                                  CLEAR LAST TIME VALUES                       
VALP4    CLI   PARMLEN,0                                                        
         BE    VALP6                                                            
         TM    PARMINDS,X'04'      "GLOBAL" PARAMETER (SET ONLY ONCE)?          
         BO    VALP5               YES                                          
         MVI   PARMVALS,0          SET PARM NOT INPUT                           
         MVI   PARMNUMF,0                                                       
         MVC   *+8(2),PARMOUTA                                                  
         LA    RF,0                RF = A(OUTPUT FIELD)                         
         LTR   RF,RF                                                            
         BZ    *+8                                                              
         MVI   0(RF),0             SET ZERO IN FIRST OUTPUT BYTE                
VALP5    DS    0H                                                               
         LLC   R1,PARMLEN                                                       
         AR    R5,R1                                                            
         B     VALP4                                                            
*                                                                               
VALP6    GOTO1 VCARDS,DMCB,PARMCARD,=C'RE00'                                    
         MVC   PARMERR,SPACES                                                   
         CLC   PARMCARD(2),=C'/*'  TEST FOR E-O-F                               
         BE    VALPEOF                                                          
         MVC   P(L'PARMCARD),PARMCARD                                           
         CLI   PARMSW,2            TEST IF A PREVIOUS ERROR                     
         BE    VALPE1              YES - IGNORE THIS CARD                       
         CLI   PARMCARD,C'*'       COMMENT?                                     
         BE    VALP26              YES: PRINT IT, THEN READ NEXT CARD           
         XC    PARMHDR,PARMHDR                                                  
         MVI   PARMHDR,88                                                       
         LA    R1,PARMCARD+L'PARMCARD-1                                         
         LA    R0,L'PARMCARD                                                    
         CLI   0(R1),C' '          WORK OUT L'INPUT DATA                        
         BNE   *+10                                                             
         BCTR  R1,0                                                             
         BCT   R0,*-10                                                          
         LTR   R0,R0               ERROR IF NO DATA ON CARD                     
         BZ    VALPE2                                                           
         STC   R0,PARMHDR+5        SET LENGTH IN DUMMY FIELD HEADER             
         GOTO1 VSCANNER,DMCB,(60,PARMHDR),(20,PARMBLK1),0                       
         CLI   4(R1),0                                                          
         BE    VALPE2                                                           
         MVC   NPARMS,4(R1)        SAVE NUMBER OF PARMS ON CARD                 
         MVI   PARMN,1                                                          
         LA    R3,PARMBLK1         R3=A(PARM SCAN BLOCK)                        
*                                                                               
VALP8    CLC   PARMN,NPARMS        TEST IF ALL PARMS PROCESSED                  
         BH    VALP26                                                           
         CLI   0(R3),2             CHECK L'PARM                                 
         BL    VALPE3                                                           
         CLI   0(R3),8                                                          
         BH    VALPE3                                                           
         LLC   R1,0(R3)                                                         
         BCTR  R1,0                R1=L'PARM-1                                  
         L     R5,APARMTAB                                                      
         SR    RE,RE                                                            
*                                  MATCH INPUT PARM TO TABLE                    
VALP10   CLI   PARMLEN,0           TEST E-O-T                                   
         BE    VALPE3                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   PARMID(0),12(R3)                                                 
         BE    *+14                                                             
         IC    RE,PARMLEN                                                       
         AR    R5,RE                                                            
         B     VALP10                                                           
         TM    PARMVALS,X'80'      TEST IF PARM PREVIOUSLY INPUT                
         BZ    *+12                                                             
         CLI   PARMMAXF,1          DUPLICATES ALLOWED FOR MULTI SUBFLDS         
         BNH   VALPE4                                                           
         OI    PARMVALS,X'80'      SET PARM INPUT                               
         CLI   1(R3),0             TEST IF SUBFLD INPUT                         
         BNE   VALP12                                                           
         CLI   PARMMAXI,0          NO - TEST IF SUBFLD REQUIRED                 
         BNE   VALPE5                                                           
         B     VALP24                                                           
*                                                                               
VALP12   CLI   PARMMAXI,0          TEST IF SUBFLDS ALLOWED                      
         BE    VALPE6                                                           
         CLC   =C'SOURCE',12(R3)                                                
         BNE   *+10                                                             
         MVC   INPSRCE,22(R3)      SAVE INPUT SOURCE                            
*                                                                               
         MVC   PARMCARD(60),22(R3)                                              
         MVC   PARMCARD+60(20),SPACES                                           
         XC    PARMHDR,PARMHDR                                                  
         MVI   PARMHDR,88                                                       
         LA    R1,PARMCARD+L'PARMCARD-1                                         
         LA    R0,L'PARMCARD                                                    
         CLI   0(R1),C' '          WORK OUT L'INPUT DATA                        
         BNE   *+10                                                             
         BCTR  R1,0                                                             
         BCT   R0,*-10                                                          
         LTR   R0,R0                                                            
         BZ    VALPE9                                                           
         STC   R0,PARMHDR+5        SET L'FIELD                                  
         GOTO1 VSCANNER,DMCB,(60,PARMHDR),(20,PARMBLK2),X'6B7E6100'             
         CLI   4(R1),0                                                          
         BE    VALPE7                                                           
         MVC   NSUBFS,4(R1)        SAVE NUMBER OF SUBFLDS INPUT                 
         MVI   SUBFN,1                                                          
         LA    R4,PARMBLK2         R4=A(SUBFLD SCAN BLOCK)                      
*                                                                               
VALP14   CLC   SUBFN,NSUBFS        TEST IF ALL SUBFLDS PROCESSED                
         BH    VALP24                                                           
         CLC   PARMNUMF,PARMMAXF   TEST IF N'SUBFLDS EXCEEDED                   
         BE    VALPE8                                                           
         CLC   0(1,R4),PARMMINI    TEST L'SUBFLD                                
         BL    VALPE9                                                           
         CLC   0(1,R4),PARMMAXI                                                 
         BH    VALPE9                                                           
         SR    RE,RE                                                            
         ICM   RE,7,PARMADDR       RE=A(TABLE/ROUTINE/ZERO)                     
         BNZ   *+14                                                             
         MVC   PARMFLD,12(R4)      SET OUTPUT FIELD FROM INPUT                  
         B     VALP20                                                           
         TM    PARMINDS,X'10'      TEST IF A(TABLE)                             
         BZ    VALP18                                                           
         LLC   RF,PARMOUTL                                                      
         LA    RF,LOPTION+1(RF)    RF=L'TABLE ENTRY                             
         LLC   R1,0(R4)                                                         
         BCTR  R1,0                R4=L'SUBFLD-1                                
*                                                                               
VALP16   CLI   0(RE),0             TEST E-O-T                                   
         BE    VALPE9                                                           
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   0(0,RE),12(R4)                                                   
         BE    *+10                                                             
         AR    RE,RF                                                            
         B     VALP16                                                           
         MVC   PARMFLD,8(RE)       SET OUTPUT FIELD FROM TABLE                  
         B     VALP20                                                           
*                                                                               
VALP18   BR    RE                  GO TO VALIDATION ROUTINE                     
*                                                                               
VALP20   LLC   R1,PARMOUTL         MOVE OUTPUT FIELD TO W/S                     
         LA    RE,1(R1)            RE=L'OUTPUT FIELD                            
         LLC   RF,PARMNUMF         RF=NUMBER OF SUBFLDS SO FAR                  
         LA    R0,1(RF)                                                         
         STC   R0,PARMNUMF                                                      
         MR    RE,RE                                                            
         MVC   *+8(2),PARMOUTA                                                  
         LA    RE,0                GET A(W/S FIELD) IN RE                       
         LTR   RE,RE                                                            
         BZ    VALP22                                                           
         AR    RF,RE                                                            
         CLI   PARMMAXF,1          TEST IF A MULTI SUB FIELD                    
         BNH   *+12                                                             
         LA    RF,1(RF)                                                         
         STC   R0,0(RE)            SET NUMBER OF SUB FIELDS                     
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),PARMFLD     MOVE FIELD TO W/S                            
*                                                                               
VALP22   LLC   R1,SUBFN            BUMP TO NEXT SUBFLD                          
         LA    R1,1(R1)                                                         
         STC   R1,SUBFN                                                         
         LA    R4,L'PARMBLK2(R4)                                                
         B     VALP14                                                           
*                                                                               
VALP24   MVI   PARMSW,1                                                         
         TM    PARMINDS,X'40'      TEST IF TERMINATOR PARAMETER                 
         BO    VALP26                                                           
         LLC   R1,PARMN            BUMP TO NEXT PARM                            
         LA    R1,1(R1)                                                         
         STC   R1,PARMN                                                         
         LA    R3,L'PARMBLK1(R3)                                                
         B     VALP8                                                            
*                                                                               
VALP26   GOTO1 VPRINTER                                                         
         TM    PARMINDS,X'40'                                                   
         BZ    VALP6                                                            
*                                                                               
* AFTER READING THE "END" CARD, PERFORM CROSS-CARD INTEGRITY CHECK.             
*                                                                               
VALP27   L     R5,APARMTAB                                                      
*                                  TEST IF ANY REQD PARMS NOT INPUT             
VALP28   CLI   PARMLEN,0                                                        
         BE    VALP34                                                           
         TM    PARMINDS,X'80'                                                   
         BZ    VALP30                                                           
         TM    PARMVALS,X'80'                                                   
         BZ    VALPE10                                                          
         B     VALP32                                                           
*                                  SET DEFAULT VALUES OF OPTIONAL PARMS         
VALP30   TM    PARMVALS,X'80'                                                   
         BO    VALP32                                                           
         TM    PARMINDS,X'08'      TEST IF DEFAULT VALUE PRESENT                
         BZ    VALP32                                                           
         LLC   R1,PARMOUTL                                                      
         MVC   *+8(2),PARMOUTA                                                  
         LA    RF,0                RF = A(OUTPUT FIELD)                         
         LTR   RF,RF                                                            
         BZ    VALP32                                                           
         CLI   PARMMAXF,1          TEST IF MULTI SUB FIELDS                     
         BNH   *+12                                                             
         MVI   0(RF),1                                                          
         LA    RF,1(RF)                                                         
         EX    R1,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),PARMDVAL                                                 
         OI    PARMINDS,X'80'                                                   
         MVI   PARMNUMF,1                                                       
*                                                                               
VALP32   LLC   RE,PARMLEN                                                       
         AR    R5,RE                                                            
         B     VALP28                                                           
*                                  CHECK LOGICAL INTERELATIONSHIPS              
VALP34   CLI   NETBKSW,1           TEST IF NETWORK BOOK INPUT                   
         BNE   VALP34A                                                          
         CLI   SRCSW,C'G'          YES - SOURCE MUST BE NETWORK                 
         BE    VALP34A                                                          
         CLI   SRCSW,C'T'          INCLUDING NHI                                
         BNE   VALPE11                                                          
VALP34A  CLI   SRCSW,C'G'          TEST IF NETWORK SOURCE INPUT                 
         BNE   VALP36                                                           
         CLI   FILTBOOK,0                                                       
         BNE   *+8                                                              
         MVI   NETBKSW,1                                                        
         CLI   NETBKSW,1           YES - BOOK MUST BE NETWORK                   
         BNE   VALPE11                                                          
*                                                                               
VALP36   CLI   FORCE,C'Y'          BOOK MUST BE INPUT IF FORCE=Y                
         BNE   *+12                                                             
         CLI   FILTBOOK,0                                                       
         BE    VALPE12                                                          
*                                                                               
         CLI   MKTEMAIL,C'Y'       IF EMAILS REQUESTED,                         
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   VALP38                                                           
         CLI   LOADTYPE,0          LOAD TYPE IS REQUIRED                        
         BE    VALPE14                                                          
*                                                                               
VALP38   CLI   LOADTYPE,0          LOADTYPE NEEDS EMAIL CARD                    
         BE    VALP40                                                           
         CLI   MKTEMAIL,C'Y'                                                    
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   VALPE16                                                          
*                                                                               
VALP40   DS    0X                                                               
         GOTO1 VCARDS,DMCB,PARMCARD,=C'RE00'                                    
         MVC   P(L'PARMCARD),PARMCARD    PRINT THE CARD                         
         GOTO1 VPRINTER                                                         
         CLI   PARMCARD,C'*'       COMMENT?                                     
         BE    VALP40              YES, THAT'S OKAY                             
         CLC   =C'/*',PARMCARD     ANY CARDS AFTER "END" ?                      
         BE    VALPEXIT            NO: THAT'S GOOD                              
         B     VALPE17             FORCE A "MULTIPLE REQUEST" ERROR             
*                                                                               
*                                  END OF DATA                                  
VALPEOF  CLI   PARMSW,1                                                         
         BL    VALPEXIT                                                         
         BE    VALP27                                                           
         MVC   P(44),=C'PARAMETER CARD ERRORS - EXECUTION TERMINATED'           
         GOTO1 VPRINTER                                                         
         ABEND 960                                                              
*                                                                               
VALPEXIT DS    0H                                                               
         CLI   PARMSW,1            SET CC=NEQ IF NO MORE CARDS                  
         XIT1                                                                   
         EJECT                                                                  
* VALIDATE XPRINT SUBFIELD (XPRINT=YES OR XPRINT=POS-LEN/ETC.)                  
*                                                                               
VALPRNT  LLC   R1,0(R4)            R1=L'SUBFLD                                  
         LR    RE,R1                                                            
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         B     *+10                                                             
         CLC   12(0,R4),=C'YES'    TEST 'YES'                                   
         BNE   *+14                                                             
         MVC   PARMFLD(4),=X'0000FFFF'                                          
         B     VALP20                                                           
         LA    RF,12(R4)           RF=A(SUBFLD)                                 
         CLI   0(RF),C'-'          LOOK FOR '-'                                 
         BE    *+16                                                             
         LA    RF,1(RF)                                                         
         BCT   RE,*-12                                                          
         B     VALPE9                                                           
         LA    R1,12(R4)                                                        
         BCTR  RF,0                                                             
         SR    RF,R1                                                            
         BM    VALPE9                                                           
         MVC   DUB,=8C'0'          TEST IF POS VALID                            
         EX    RF,*+8                                                           
         B     *+10                                                             
         MVZ   DUB(0),0(R1)                                                     
         CLC   DUB,=8C'0'                                                       
         BNE   VALPE9                                                           
         EX    RF,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,R1)                                                      
         CVB   R0,DUB                                                           
         STCM  R0,3,PARMFLD                                                     
         LA    R1,2(RF,R1)                                                      
         SHI   RE,2                                                             
         BM    VALPE9                                                           
         MVC   DUB,=8C'0'          TEST IF LEN VALID                            
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVZ   DUB(0),0(R1)                                                     
         CLC   DUB,=8C'0'                                                       
         BNE   VALPE9                                                           
         EX    RE,*+8                                                           
         B     *+10                                                             
         PACK  DUB,0(0,R1)                                                      
         CVB   R0,DUB                                                           
         LTR   R0,R0                                                            
         BZ    VALPE9                                                           
         STCM  R0,3,PARMFLD+2                                                   
         B     VALP20                                                           
         EJECT                                                                  
* VALIDATE FILE SUBFIELD (FILE=1 THRU 9)                                        
*                                                                               
VALFILE  CLI   12(R4),C'1'                                                      
         BL    VALPE9                                                           
         CLI   12(R4),C'9'                                                      
         BH    VALPE9                                                           
         MVC   PARMFLD(1),12(R4)                                                
         NI    PARMFLD,X'0F'                                                    
         B     VALP20                                                           
         SPACE 2                                                                
* VALIDATE NRECS SUBFIELD (NRECS=1 THRU 999999)                                 
*                                                                               
VALNREC  TM    2(R4),X'80'         TEST NUMERIC                                 
         BZ    VALPE9                                                           
         OC    4(4,R4),4(R4)                                                    
         BZ    VALPE9                                                           
         MVC   PARMFLD(4),4(R4)                                                 
         B     VALP20                                                           
         SPACE 2                                                                
*                                                                               
* VALIDATE ALTERNATE DDSIO LOAD MODULE NAME                                     
*                                                                               
VALDDSI  DS    0H                                                               
         ICM   RF,15,=V(DDSIO)                                                  
         BZ    *+10                                                             
         MVC   0(8,RF),12(R4)                                                   
         B     VALP20                                                           
         SPACE 2                                                                
*                                                                               
* VALIDATE ALTERNATE DSPACE ID                                                  
*                                                                               
VALDSPAC DS    0H                                                               
         LARL  RF,SSB                                                           
         MVC   SSODSPAC-SSOOFF(1,RF),12(R4)   DSPACE=X                          
         B     VALP20                                                           
         SPACE 2                                                                
*                                                                               
* VALIDATE BOOK SUBFIELD (BOOK=MMMYY/ETC. OR BOOK=MMMDDYY/ETC.)                 
*                                                                               
VALBOOK  CLI   0(R4),5             VALIDATE FOR MMMYY                           
         BH    VALBOOK2                                                         
         GOTO1 VDATVAL,DMCB,(2,12(R4)),WORK                                     
*                                                                               
         MVC   DUB,=CL8'T00AFB'    PERVAL                                       
         GOTO1 =V(LOADER),DMCB,DUB,0,0                                          
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         USING COMFACSD,R6                                                      
         L     R6,ACOMFACS                                                      
         MVC   CPERVAL-COMFACSD(,R6),4(R1) A(PERVAL)                            
*                                                                               
         DS    0H                  FUDGE A "/" IN MMMYY                         
         XC    DUB,DUB                                                          
         LLC   R1,0(R4)                                                         
         LA    R0,1(R1)                                                         
         STC   R0,DUB+0                                                         
         BCTR  R1,0                                                             
         EX    R1,*+8                                                           
         J     *+10                                                             
         MVC   DUB+1(0),12(R4)                                                  
         LA    R1,DUB+1(R1)         R1-->LAST CHAR OF INPUT                     
         LHI   RF,2                 SHIFT LAST 2 CHARS OF INPUT                 
         MVC   1(1,R1),0(R1)         ONE SPACE TO THE RIGHT                     
         BCTR  R1,0                                                             
         BCT   RF,*-8                                                           
         MVI   1(R1),C'/'           INSERT THE "/" FOR VALIDATION RTN           
         GOTO1 CPERVAL,DMCB,(DUB+0,DUB+1),(0,WORK)                              
         DROP  R6                                                               
*                                                                               
         LA    R6,WORK             A(OUTPUT)                                    
         USING PERVALD,R6                                                       
*                                                                               
         CLI   4(R1),X'01'         FIELD ONE NOT VALID                          
         BE    VALPE9                                                           
*********DC    H'0'                                                             
*                                                                               
         MVC   PARMFLD(1),PVALBSTA                                              
         MVC   PARMFLD+1(1),PVALBSTA+1                                          
         MVC   PARMFLD+2(2),PARMFLD                                             
         DROP  R6                                                               
         B     VALP20                                                           
*    OLD CODE                                                                   
VALB10   PACK  DUB,WORK(2)                                                      
         CVB   R0,DUB                                                           
         PACK  DUB,WORK+2(2)                                                    
         CVB   R1,DUB                                                           
         STC   R0,PARMFLD                                                       
         STC   R1,PARMFLD+1                                                     
         MVC   PARMFLD+2(2),PARMFLD                                             
         B     VALP20                                                           
*                                  VALIDATE FOR MMMDDYY (NETWORK BOOK)          
VALBOOK2 CLI   SRCSW,C' '          MUST HAVE A SOURCE HERE                      
         BNH   VALPE13                                                          
         GOTO1 VDATVAL,DMCB,(0,12(R4)),WORK                                     
         OC    0(4,R1),0(R1)                                                    
         BZ    VALPE9                                                           
         CLI   SRCSW,C'Q'          NSI WEEKLY                                   
         BE    VALBOOK3                                                         
         CLI   SRCSW,X'90'         OVERNIGHTS OTP NSI                           
         BE    VALBOOK3                                                         
*                                                                               
         GOTO1 VNETWEEK,DMCB,WORK,VGETDAY,VADDAY                                
*        LLC   RE,0(R1)                                                         
*        PACK  DUB,WORK(2)                                                      
*        CVB   R1,DUB                                                           
* CODE ABOVE REPLACED BY OPUP                                                   
         ZIC   R1,DMCB+4           YEAR                                         
         ZIC   RE,DMCB+8           WEEK NUMBER FOR NETWORK                      
         STC   R1,PARMFLD                                                       
         STC   RE,PARMFLD+1        YYWW(1)                                      
         LA    RE,1(RE)                                                         
         STC   R1,PARMFLD+2                                                     
         STC   RE,PARMFLD+3        YYWW(2)                                      
         MVI   NETBKSW,1                                                        
         B     VALP20                                                           
*                                                                               
VALBOOK3 GOTO1 VNSIWEEK,DMCB,WORK,VGETDAY,VADDAY,VDATCON                        
         LLC   RE,0(R1)            WEEK                                         
         MVC   PARMFLD(1),4(R1)    YEAR                                         
         STC   RE,PARMFLD+1        YYWW(1)                                      
         MVI   FORCE,C'Y'                                                       
         B     VALP20                                                           
         EJECT                                                                  
* VALIDATE MARKET SUBFIELD (MARKET=NNNN/ETC.)                                   
*                                                                               
VALMKTEX OI    FLAGS1,NEGATIVE_FILTMRKT  MARKET FILTER LIST IS NEGATIVE         
*                                                                               
VALMRKT  TM    2(R4),X'80'         TEST NUMERIC                                 
         BZ    VALPE9                                                           
         OC    4(4,R4),4(R4)                                                    
         BZ    VALPE9                                                           
         OC    4(2,R4),4(R4)                                                    
         BNZ   VALPE9                                                           
         MVC   PARMFLD(2),6(R4)                                                 
         B     VALP20                                                           
         SPACE 2                                                                
* VALIDATE TIME SUBFIELD (TIME=TIME1/ETC.)                                      
*                                                                               
VALTIME  LLC   R0,0(R4)                                                         
         GOTO1 VTIMVAL,DMCB,((R0),12(R4)),WORK                                  
         CLI   0(R1),X'FF'         TEST VALID TIME EXPRESSION                   
         BE    VALPE9                                                           
         GOTO1 VHRTOQH,DMCB,WORK,PARMFLD                                        
         MVI   PARMFLD+1,X'FF'                                                  
         OC    WORK+2(2),WORK+2                                                 
         BZ    VALP20                                                           
         GOTO1 VHRTOQH,DMCB,WORK+2,PARMFLD+1                                    
         B     VALP20                                                           
         EJECT                                                                  
* VALIDATE PATCH SUBFIELD (XPATCH=DDDD-PPPP..PPP/ETC.)                          
*                                                                               
VALPTCH  CLI   16(R4),C'-'                                                      
         BNE   VALPE9                                                           
         GOTO1 VHEXIN,DMCB,12(R4),PARMFLD,4                                     
         OC    12(4,R1),12(R1)                                                  
         BZ    VALPE9                                                           
         LLC   R0,0(R4)                                                         
         SHI   R0,5                R0=L'PATCH VALUE                             
         GOTO1 VHEXIN,DMCB,17(R4),PARMFLD+3,(R0)                                
         ICM   R0,15,12(R1)                                                     
         BZ    VALPE9                                                           
         BCTR  R0,0                                                             
         STC   R0,PARMFLD+2        SET L'PATCH                                  
         B     VALP20                                                           
         SPACE 2                                                                
* VALIDATE STATION SUBFIELD (STATION=AAAAA(-BBBBB)/ETC.)                        
*                                                                               
VALSTAT  MVC   PARMFLD(10),SPACES                                               
         LA    R1,PARMFLD          R1=A(OUTPUT FIELD)                           
         LA    RE,12(R4)           RE=A(INPUT FIELD)                            
         LLC   R0,0(R4)            R0=L'INPUT FIELD                             
         SR    RF,RF                                                            
VALSTAT2 CLI   0(RE),C'-'          TEST FOR DELIMITER                           
         BE    VALSTAT6                                                         
         MVC   0(1,R1),0(RE)                                                    
         LA    R1,1(R1)                                                         
         LA    RF,1(RF)                                                         
VALSTAT4 LA    RE,1(RE)                                                         
         BCT   R0,VALSTAT2                                                      
VALSTAT6 CHI   RF,3                TEST L'OUTPUT FIELD                          
         BL    VALPE9                                                           
         CHI   RF,5                                                             
         BH    VALPE9                                                           
         LTR   R0,R0                                                            
         BZ    VALP20                                                           
         SR    RF,RF               SET UP FOR SECOND FIELD                      
         LA    R1,PARMFLD+5                                                     
         B     VALSTAT4                                                         
         EJECT                                                                  
* VALIDATE WEEK SUBFIELD (WEEK=YYWW/ETC.)                                       
*                                                                               
VALWEEK  TM    2(R4),X'80'         TEST NUMERIC                                 
         BZ    VALPE9                                                           
         CLI   0(R4),4             AND 4 BYTES LONG                             
         BNE   VALPE9                                                           
         PACK  DUB,12(2,R4)                                                     
         CVB   R0,DUB              R0=YEAR                                      
         CHI   R0,27                                                            
         BH    *+8                                                              
         AHI   R0,100              ADJUST FOR Y2K                               
         PACK  DUB,14(2,R4)                                                     
         CVB   R1,DUB              R1=WEEK                                      
         LTR   R0,R0               TEST YEAR VALID                              
         BZ    VALPE9                                                           
         CHI   R0,79                                                            
         BL    VALPE9                                                           
         LTR   R1,R1                                                            
         BZ    VALPE9                                                           
         CHI   R1,53               TEST WEEK VALID                              
         BH    VALPE9                                                           
         STC   R0,PARMFLD                                                       
         STC   R1,PARMFLD+1                                                     
         B     VALP20                                                           
         SPACE 2                                                                
* VALIDATE OPELEM SUBFIELD (OPELEM=ELEM CODE1/ELEM CODE2/ETC.)                  
*                          (OR OPELEM=ALL)                                      
*                                                                               
VALPELEM LLC   R0,0(R4)                                                         
*                                                                               
         CLC   12(3,R4),=C'ALL'    SEE IF ALL ELEMENTS REQUESTED                
         BNE   *+12                                                             
         MVI   PARMFLD,0           SIGNIFY ALL ELEMENTS                         
         B     VALP20                                                           
*                                                                               
         GOTO1 VHEXIN,DMCB,12(R4),PARMFLD,(R0),0                                
         OC    DMCB+12(3),DMCB+12                                               
         BNZ   VALPE6                                                           
         CLI   DMCB+15,1                                                        
         BL    VALPE9                                                           
         BH    VALPE6                                                           
         B     VALP20                                                           
         SPACE 2                                                                
* VALIDATE TRACEFIL= CARD                                                       
*                                                                               
VALTRCFL DS    0H                                                               
         CLI   12(R4),C'Y'         TRACEFIL=YES?                                
         BNE   VALP20                                                           
         MVC   PARMFLD(4),=A(TRACEFIL)  YES: SAVE A(DCB)                        
         OPEN  (TRACEFIL,OUTPUT)                                                
         B     VALP20                                                           
*                                                                               
         EJECT                                                                  
* FORMAT & PRINT ERROR MESSAGE                                                  
*                                                                               
VALPE1   MVC   PARMERR(29),=C'IGNORED DUE TO PREVIOUS ERROR'                    
         B     VALPEX                                                           
VALPE2   MVC   PARMERR(24),=C'INVALID PARAMETER SYNTAX'                         
         B     VALPEX                                                           
VALPE3   MVC   PARMERR(24),=C'INVALID INPUT PARAMETER-'                         
         MVC   PARMERR+24(10),12(R3)                                            
         B     VALPEX                                                           
VALPE4   MVC   PARMERR(26),=C'DUPLICATE INPUT PARAMETER-'                       
         MVC   PARMERR+26(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE5   MVC   PARMERR(22),=C'MISSING SUB FIELD FOR '                           
         MVC   PARMERR+22(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE6   MVC   PARMERR(25),=C'SUB FIELDS NOT VALID FOR '                        
         MVC   PARMERR+25(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE7   MVC   PARMERR(29),=C'INVALID SUB FIELD SYNTAX FOR '                    
         MVC   PARMERR+29(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE8   MVC   PARMERR(24),=C'TOO MANY SUB FIELDS FOR '                         
         MVC   PARMERR+24(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE9   MVC   PARMERR(18),=C'INVALID SUB FIELD-'                               
         MVC   PARMERR+18(L'PARMID),PARMID                                      
         LA    R1,PARMERR+26                                                    
         CLI   0(R1),C' '                                                       
         BNE   *+8                                                              
         BCT   R1,*-8                                                           
         MVI   1(R1),C'='                                                       
         MVC   2(10,R1),12(R4)                                                  
         B     VALPEX                                                           
VALPE10  MVC   PARMERR(27),=C'REQUIRED PARAMETER MISSING-'                      
         MVC   PARMERR+27(L'PARMID),PARMID                                      
         B     VALPEX                                                           
VALPE11  MVC   PARMERR(30),=C'BOOK FORMAT INVALID FOR SOURCE'                   
         B     VALPEX                                                           
VALPE12  MVC   PARMERR(34),=C'BOOK REQUIRED IF FORCE=Y SPECIFIED'               
         B     VALPEX                                                           
*                                                                               
VALPE13  MVC   PARMERR(33),=C'SOURCE REQUIRED BEFORE THIS FIELD'                
         B     VALPEX                                                           
*                                                                               
VALPE14  MVC   PARMERR(18),=C'LOADTYPE REQUIRED.'                               
         MVC   PARMERR+18(32),=C'LOADTYPE=ORIGINAL/REISSUE/RELOAD'              
         MVC   P(L'PARMERR),PARMERR                                             
         B     VALPEX5                                                          
*                                                                               
VALPE16  MVC   PARMERR(33),=C'MISSING MKTEMAIL OR NETEMAIL CARD'                
         MVC   P(L'PARMERR),PARMERR                                             
         B     VALPEX5                                                          
*                                                                               
VALPE17  MVC   PARMERR(37),=C'MULTIPLE REQUESTS NO LONGER SUPPORTED'            
         B     VALPEX                                                           
*                                                                               
VALPEX   MVC   P+81(L'PARMERR),PARMERR                                          
VALPEX5  GOTO1 VPRINTER                                                         
         MVI   PARMSW,2                                                         
         B     VALP6                                                            
         DROP  R5,RC                                                            
*                                                                               
         EJECT                                                                  
* ROUTINE TO PRINT A RECORD IN ALPHA AND HEX FORMAT.                            
*                                                                               
* ON ENTRY R1 POINTS TO A PARAMETER LIST WITH THE FOLLOWING VALUES -            
*                                                                               
* BYTE 0   = RECORD TYPE                                                        
*      1-3 = A(RECORD)                                                          
*      4-7 = L'RECORD                                                           
*      8-11= A(PRINT SPECS)                                                     
*     12-15= A(PRINT ELEMENT SPECS)                                             
*                                                                               
PRNTREC  NTR1  BASE=ABASE,WORK=(RC,PRNTWRKX-PRNTWRKD)                           
         USING PRNTWRKD,RC         RC=A(TEMP W/S)                               
         L     RA,BBASE            RA=SECOND BASE REGISTER                      
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD  BASE REGISTER                      
         L     R7,VCPRINT          R7=A(PRINT CSECT)                            
         MVC   P,SPACES                                                         
         MVC   PRNTPARM,0(R1)      MOVE PARMS TO TEMP W/S                       
         L     RE,PRNTSPEC                                                      
         CLI   0(RE),0                                                          
         BNE   *+8                                                              
         LA    RE,=X'010000FFFF'                                                
         MVC   PRNTCNT,0(RE)       SAVE NUMBER OF PRINT SPECS                   
         LA    RE,1(RE)                                                         
         ST    RE,PRNTNEXT         SET A(FIRST PRINT SPEC)                      
*                                                                               
PRNTREC2 MVC   P(1),PRNTRTYP                                                    
         MVC   P+1(6),=C'RECORD'                                                
         L     RE,PRNTNEXT                                                      
*                                                                               
         MVC   PRNTSTLN,0(RE)      SAVE START COL & LEN                         
         CLI   PRNTRTYP,C'R'       IF RREC, THEN LEAVE                          
         BE    PRNTRC2B             START COL & LEN ALONE                       
         CLI   PRNTRTYP,C'M'       IF MREC, THEN LEAVE                          
         BE    PRNTRC2B             START COL & LEN ALONE                       
         CLI   KEYONLY,C'Y'        IF ONLY RELEVANT INFO WANTED, THEN           
         BNE   PRNTRC2B             IT HAS PRECEDENCE OVER COL & LEN            
         XC    PRNTSTRT,PRNTSTRT   NEW START COL AT BEGINNING                   
         LA    R1,27               IF OREC, THEN                                
         CLI   PRNTRTYP,C'O'        PRINT 1ST 27 BYTES                          
         BE    PRNTRC2A                                                         
         LLC   R1,INTALPHL         R1=L(INTERIM DATA)                           
         LA    R1,(INTDATA-INTERD)(R1)  + L(GENERAL INTERIM "HEADER")           
PRNTRC2A STCM  R1,3,PRNTLEN        NEW LENGTH TO PRINT                          
*                                                                               
PRNTRC2B L     R3,PRNTRECL         R3=RECORD LENGTH                             
         L     R2,PRNTAREC         R2=A(RECORD)                                 
         LA    R2,0(R2)                                                         
         LA    R4,0(R3,R2)         R4=A(END OF RECORD)                          
         CH    R3,PRNTSTRT                                                      
         BH    *+10                                                             
         XC    PRNTSTRT,PRNTSTRT                                                
         AH    R2,PRNTSTRT         R2=START DISPLAY ADDRESS                     
         LR    R3,R2                                                            
         SR    R0,R0                                                            
         ICM   R0,3,PRNTLEN                                                     
         AR    R3,R0                                                            
         CR    R3,R4                                                            
         BNH   *+6                                                              
         LR    R3,R4                                                            
         SR    R3,R2               R3=DISPLAY LENGTH                            
         SR    R4,R4                                                            
*                                                                               
PRNTREC4 SR    R3,R4               ANY MORE TO DISPLAY                          
         BNP   PRNTRECA                                                         
         AR    R2,R4               R2=NEXT DISPLAY ADDRESS                      
         AH    R4,PRNTSTRT                                                      
         STH   R4,PRNTSTRT         SET NEW DISPLACEMENT                         
         LA    R4,L'PRNTHEX                                                     
         CR    R4,R3                                                            
         BL    *+6                                                              
         LR    R4,R3               R4=L'TO PRINT                                
         LH    R0,PRNTSTRT         FORMAT START-END BYTES                       
         CVD   R0,PRNTDUB                                                       
         UNPK  P+8(4),PRNTDUB                                                   
         OI    P+11,X'F0'                                                       
         MVI   P+12,C'-'                                                        
         LR    R0,R4                                                            
         AH    R0,PRNTSTRT                                                      
         BCTR  R0,0                                                             
         CVD   R0,PRNTDUB                                                       
         UNPK  P+13(4),PRNTDUB                                                  
         OI    P+16,X'F0'                                                       
*                                                                               
PRNTREC6 CP    LINE,=P'57'         FORMAT PRINT LINES                           
         BL    *+10                                                             
         ZAP   LINE,=P'99'                                                      
         LR    R5,R4                                                            
         BCTR  R5,0                                                             
         EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   P+20(0),0(R2)                                                    
         GOTO1 VDUMPOUT,PRNTDMCB,((R4),P+20),0,0                                
         GOTO1 VPRINTER                                                         
         GOTO1 VHEXOUT,PRNTDMCB,(R2),PRNTHEX,(R4),=C'SEP'                       
         LA    R6,PRNTHEX                                                       
         LA    R0,2                                                             
*                                                                               
PRNTREC8 EX    R5,*+8                                                           
         B     *+10                                                             
         MVC   P+20(0),0(R6)                                                    
         GOTO1 VPRINTER                                                         
         AR    R6,R4                                                            
         BCT   R0,PRNTREC8                                                      
         BASR  RE,RF               PRINT A SPACE LINE                           
         B     PRNTREC4                                                         
*                                  GET NEXT PRINT SPEC                          
PRNTRECA LLC   R1,PRNTCNT                                                       
         SHI   R1,1                                                             
         BZ    PRNTELM2                                                         
         STC   R1,PRNTCNT                                                       
         L     RE,PRNTNEXT                                                      
         LA    RE,4(RE)                                                         
         ST    RE,PRNTNEXT                                                      
         B     PRNTREC2                                                         
*                                                                               
* PRINT ELEMENT DATA                                                            
*                                                                               
PRNTELM2 OC    PRNTESPC,PRNTESPC   ANY ELEMENT TO PRINT OUT?                    
         BZ    PRNTRECX                                                         
         L     RE,PRNTESPC         CHECK # OF ELEMENTS                          
         CLI   0(RE),0                                                          
         BE    PRNTRECX             IF ZERO, THEN EXIT                          
         MVC   PRNTCNT,0(RE)       SAVE # OF ELEMENTS TO PRINT                  
         LA    RE,1(RE)            RE-->ELEMENT CODES,                          
         ST    RE,PRNTNEXT          NEXT ELEMENT TO DO                          
*                                                                               
PRNTELM4 CLI   PRNTRTYP,C'O'       IS IT AN OREC?                               
         BNE   *+12                                                             
         LA    R4,4+OKEYLN+3       DISP TO 1ST ELEM OF OREC                     
         B     *+6                                                              
         DC    H'0'                DIE IF WE CAN'T MATCH REC TYPE               
*                                                                               
         A     R4,PRNTAREC         R4-->A(1ST ELEMENT)                          
         XC    PRNTNBLK,PRNTNBLK   CLEAR # OF BLOCKS                            
PRNTELM6 CLI   0(R4),0             END OF RECORD?                               
         BE    PRNTELML            CAN'T FIND ELEMENT ASKED FOR                 
         L     R3,PRNTNEXT         R3-->ELEMENT CODE TO LOOK FOR                
         CLI   0(R3),0             ALL ELEMENTS ASKED FOR?                      
         BE    PRNTELM8             YES, THEN JUST MOVE ON                      
         CLC   0(1,R4),0(R3)       ELEMENT CODES MATCH?                         
         BE    PRNTELM8             YES!                                        
         LLC   R0,1(R4)            R0=L(ELEMENT)                                
         AR    R4,R0               BUMP TO NEXT ELEMENT                         
         B     PRNTELM6                                                         
*                                                                               
PRNTELM8 ST    R4,PRNTSVR4         SAVE WHERE WE ARE                            
         NI    PRNTFLAG,X'FF'-PFLGDDTA                                          
         CLI   0(R4),X'30'         SEE IF IT IS DEMO DATA                       
         BL    PRNTELMA                                                         
         CLI   0(R4),X'5D'                                                      
         BH    PRNTELMA                                                         
         OI    PRNTFLAG,PFLGDDTA    YES IT IS                                   
*                                                                               
PRNTELMA TM    PRNTFLAG,PFLGDDTA                                                
         BO    PRNTELMD                                                         
*                                                                               
** ELEMENT IS NOT DEMO-DATA                                                     
*                                                                               
         BAS   RE,PRNTECDE         FORMAT ELEMENT CODE                          
         BAS   RE,PRNTHXE          HEXOUT ELEMENT                               
         B     PRNTELMK                                                         
*                                                                               
** ELEMENT IS DEMO DATA                                                         
*                                                                               
PRNTELMD TM    2(R4),X'80'         A DUPLICATE OF AN ELEM ABOVE?                
         BO    PRNTELME             YES                                         
*                                                                               
         SR    RE,RE               CALCULATE PRNTNBLK                           
         LLC   RF,1(R4)            RF=L(ELEMENT)                                
         SHI   RF,3                LESS L(ELEMENT OVERHEAD)                     
         LA    R0,X'0F'                                                         
         LLC   R1,2(R4)            NI '0F' OF SIZE OF FIELD                     
         NR    R1,R0               R1=SIZE OF FIELD                             
         DR    RE,R1               RF=# OF BLOCKS                               
         OR    RE,RE               MAKE SURE THERE ARE NO REMAINDERS            
         BZ    *+6                                                              
         DC    H'0'                                                             
         STH   RF,PRNTNBLK                                                      
         STH   R1,PRNTFSZE         SIZE OF FIELDS IN ELEMENT                    
*                                                                               
PRNTELME BAS   RE,PRNTECDE         PRINT A HEADING FOR DISPLAY                  
         TM    2(R4),X'80'         A DUPLICATE OF AN ELEM ABOVE?                
         BZ    *+12                 NOPE                                        
         BAS   RE,PRNTHXE           YES, SET UP TO PRINT ELEMENT                
         B     PRNTELMK                                                         
*                                                                               
         LA    R4,3(R4)            R4-->DEMO DATA                               
         LA    R5,P+20+PRNTBSZE                                                 
         MVI   PRNTNBKL,0          NO BLOCKS ON PRINT LINE YET                  
*                                                                               
PRNTELMF OC    PRNTNBLK,PRNTNBLK   MORE BLOCKS TO GO?                           
         BZ    PRNTELMJ             NOPE                                        
         LA    R0,P+20+80-PRNTBSZE                                              
         CR    R5,R0               IS R5 PAST LAST BLOCK ON PRT LINE?           
         BNH   PRNTELMH                                                         
         GOTO1 VPRINTER                                                         
         LA    R5,P+20+PRNTBSZE     PRINT LINE, AND SET TO NEXT LINE            
*                                                                               
PRNTELMH LH    R1,PRNTFSZE         FORMAT DATA INTO BLOCK                       
         LR    RE,R4               RE WILL POINT TO DATA TO USE                 
         SR    RF,RF               RF WILL CONTAIN DEMO DATA IN HEX             
         IC    RF,0(RE)            INSERT ONE BYTE AT A TIME,                   
         SLL   RF,8                 AND SHIFT IT OVER 1 BYTE                    
         LA    RE,1(RE)             UNTIL WE HAVE ALL DEMO DATA                 
         BCT   R1,*-12              FROM THAT FIELD                             
         SRL   RF,8                COMPENSATE OFF-BY-ONE SHIFT                  
         CVD   RF,PRNTDUB                                                       
         UNPK  PRNTDUB2,PRNTDUB                                                 
         OI    PRNTDUB2+L'PRNTDUB2-1,X'F0'                                      
         LHI   R1,PRNTBSZE-1                                                    
         BCTR  R1,0                R1=EXECUTED FIRST LENGTH FOR UNPK            
         EX    R1,*+8                                                           
         J     *+10                                                             
         MVC   1(0,R5),PRNTDUB2+1                                               
*                                                                               
         AH    R4,PRNTFSZE         R4-->NEXT FIELD IN ELEMENT                   
         LA    R5,PRNTBSZE(R5)     R5-->NEXT POS ON PRINT LINE                  
         LLC   R1,PRNTNBKL         UPDATE # OF BLOCKS ON PRINT LINE             
         LA    R1,1(R1)                                                         
         STC   R1,PRNTNBKL                                                      
         LH    R1,PRNTNBLK         UPDATE # OF BLOCKS LEFT TO PRINT             
         SHI   R1,1                                                             
         BZ    PRNTELMJ                                                         
         STH   R1,PRNTNBLK                                                      
         B     PRNTELMF                                                         
*                                                                               
PRNTELMJ GOTO1 VPRINTER                                                         
         GOTO1 VPRINTER                                                         
PRNTELMK L     R4,PRNTSVR4         GO BACK AND LOOK FOR MORE                    
         LLC   R1,1(R4)                                                         
         AR    R4,R1                                                            
         B     PRNTELM6             ELEMENTS WITH SAME ELEM CODE                
*                                                                               
PRNTELML LLC   R1,PRNTCNT          UPDATE # OF ELEMS LEFT TO GO                 
         SHI   R1,1                                                             
         BZ    PRNTRECX                                                         
         STC   R1,PRNTCNT                                                       
         L     R1,PRNTNEXT                                                      
         CLI   0(R1),0             IF ALL ELEMENTS PRINTED, THEN                
         BE    PRNTRECX             DON'T REPEAT SAME ELEMENT                   
         LA    R1,1(R1)            BUMP TO NEXT ELEM CODE                       
         ST    R1,PRNTNEXT                                                      
         B     PRNTELM4                                                         
*                                                                               
PRNTRECX GOTO1 VPRINTER                                                         
         XIT1                                                                   
         SPACE 3                                                                
* SUB-ROUTINE TO FORMAT A ELEMENT-CODE HEADING                                  
*                                                                               
** CALLED WITHIN PRNTREC ONLY                                                   
** R4-->ELEMENT                                                                 
*                                                                               
PRNTECDE ST    RE,PRNTSVRE                                                      
         LA    R5,P+20                                                          
         GOTO1 VHEXOUT,PRNTDMCB,(R4),(R5),1                                     
         OC    PRNTDMCB+16(4),PRNTDMCB+16   MAKE SURE THERE ARE                 
         BNZ   *+6                           NO ERRORS                          
         DC    H'0'                                                             
         A     R5,PRNTDMCB+16                                                   
         MVC   1(4,R5),=C'ELEM'                                                 
         L     RE,PRNTSVRE                                                      
         BR    RE                                                               
         SPACE 3                                                                
* SUB-ROUTINE TO HEXOUT WHATEVER'S IN AN ELEMENT                                
*                                                                               
** CALLED WITHIN PRNTREC ONLY                                                   
** R4-->ELEMENT                                                                 
*                                                                               
PRNTHXE  ST    RE,PRNTSVRE                                                      
         CLI   1(R4),1             MAKE SURE ELEMENT IS                         
         BH    *+6                                                              
         DC    H'0'                 NOT TOO SMALL                               
         LLC   R3,1(R4)            R3=L(ELEMENT) LEFT TO PRINT                  
PRNTHXE2 LA    R6,L'PRNTHEX-PRNTBSZE-1  R6=L(1 LINE DISPLAY AMOUNT)             
         CR    R6,R3               HOW MUCH LEFT TO PRINT?                      
         BL    *+6                                                              
         LR    R6,R3                NOT MUCH, IT FITS ON 1 LINE                 
         LR    R0,R6                                                            
         BCTR  R6,0                                                             
         EX    R6,*+8                                                           
         J     *+10                                                             
         MVC   P+20+(PRNTBSZE+1)(0),0(R4)                                       
         CP    LINE,=P'54'                                                      
         BL    *+10                                                             
         ZAP   LINE,=P'99'                                                      
         GOTO1 VPRINTER                                                         
         GOTO1 VHEXOUT,PRNTDMCB,(R4),PRNTHEX,(R0),=C'SEP'                       
         LA    R5,PRNTHEX                                                       
         LA    R0,2                                                             
*                                                                               
PRNTHXE4 EX    R6,*+8                                                           
         J     *+10                                                             
         MVC   P+20+(PRNTBSZE+1)(0),0(R5)                                       
         GOTO1 VPRINTER                                                         
         LA    R5,1(R6,R5)                                                      
         BCT   R0,PRNTHXE4                                                      
         BASR  RE,RF               PRINT A BLANK LINE                           
         LA    R6,1(R6)            RESTORE FROM EX LENGTH                       
         AR    R4,R6               BUMP TO NEXT DATA                            
         SR    R3,R6               UPDATE L(DATA LEFT TO PRINT),                
         BP    PRNTHXE2             GO AND PRINT THEM                           
         L     RE,PRNTSVRE                                                      
         BR    RE                                                               
         DROP  RC                                                               
         EJECT                                                                  
* ROUTINE TO HANDLE I/O TO OUTPUT TAPE.                                         
*                                                                               
* NO I/O IS EXECUTED IF MODE=REPORT. PRNTREC IS CALLED IF OPRINT                
* PARAMETERS HAVE BEEN INPUT.                                                   
*                                                                               
PUTTAPE  NTR1  BASE=ABASE,WORK=(RC,PUTTAPLQ)                                    
         USING PUTTAPED,RC                                                      
         L     RA,BBASE                                                         
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD  BASE REGISTER                      
         L     R2,AOTAPE           R2=A(DTF)                                    
         L     R3,AOREC            R3=A(RECORD)                                 
         CLI   OUTAPESW,2          TEST IF CALLED TO CLOSE TAPE                 
         BNE   PUTTAPE2                                                         
         CLOSE ((R2),)                                                          
         LTR   RF,RF                                                            
         BZ    PUTTAPEX                                                         
         ABEND 962                 UNSUCCESSFUL OUTPUT FILE CLOSE               
*                                                                               
PUTTAPE2 L     R0,NUMORECS                                                      
         AHI   R0,1                                                             
         ST    R0,NUMORECS                                                      
         CLI   OPRINT,0            PRINT OUTPUT RECORD                          
         BE    PUTTAPE3                                                         
         TM    PRINTSW,X'80'       TEST IF USER SUPPRESSED PRINTING             
         BO    PUTTAPE3                                                         
*&&DO                                                                           
         LH    R0,0(R3)                                                         
         B     *+8                                                              
         LHI   R0,100              THIS JUST FOR TESTING                        
         LR    R1,RC                                                            
         GOTO1 APRNTREC,(R1),(C'O',AOREC),(R0),OPRINT,OPELEM                    
*&&                                                                             
         CLC   =AL2(27),0(R3)      IS VARIABLE RECLEN = 27 ?                    
         BNE   PUTTAP2B            NO: IT'S A RECORD (NOT A POINTER)            
         GOTO1 =V(PRNTBL),DMCB,=C'ORECORD (PASSIVE KEY)',              +        
               (R3),C'DUMP',27,=C'1D'                                           
         B     PUTTAP2E                                                         
*                                                                               
PUTTAP2B CLI   KEYONLY,C'Y'        USER ONLY WANTS THE KEY PRINTED?             
         BNE   PUTTAP2C            NO, PRINT THE WHOLE RECORD                   
         GOTO1 =V(PRNTBL),DMCB,=C'ORECORD (ELEMENTS SUPPRESSED)',      +        
               (R3),C'DUMP',27,=C'1D'                                           
         B     PUTTAP2E                                                         
*                                                                               
PUTTAP2C DS    0H                                                               
         L     R0,AOREC            A(OUTPUT RECORD)                             
         AHI   R0,4                BUMP BEYOND RDW                              
         GOTO1 =V(PRTREC),PTDMCB,(R0),(23,20),V(PRINT),V(HEXOUT),      +        
               C'DOME',=C'ORECORD'                                              
*                                                                               
PUTTAP2E DS    0H                                                               
         GOTO1 VPRINTER                                                         
*                                                                               
PUTTAPE3 CLI   MSGFLAG,1           MESSG SENT BY CONVERSION                     
         BNE   PUTTAPE4                                                         
         MVI   MSGFLAG,0                                                        
         CLI   MPRINT,0                                                         
         BE    PUTTAP3A                                                         
         L     R1,AMREC                                                         
         LH    R0,0(R1)                                                         
         GOTO1 APRNTREC,DMCB,(C'M',AMREC),(R0),MPRINT,0                         
PUTTAP3A CLI   MKTEMAIL,C'Y'      IF EMAIL WAS REQUESTED                        
         BE    *+12                                                             
         CLI   NETEMAIL,C'Y'                                                    
         BNE   PUTTAPE4                                                         
         L     R2,AETAPE                                                        
         L     R3,AMREC                                                         
         PUT   (R2),(R3)           WRITE MESSAGE TO TAPE                        
*                                                                               
PUTTAPE4 TM    MODE,RUN            EXIT IF MODE=REPORT                          
         BZ    PUTTAPEX                                                         
         L     R2,AOTAPE           R2=A(ODTF)       RESTORE REGS                
         L     R3,AOREC            R3=A(ORECORD)                                
         CLI   OUTAPESW,0          OPEN TAPE IF CLOSED                          
         BNE   PUTTAPE6                                                         
         OPEN  ((R2),(OUTPUT))                                                  
         MVI   OUTAPESW,1                                                       
*                                  PUT A RECORD TO TAPE                         
PUTTAPE6 PUT   (R2),(R3)                                                        
*                                                                               
PUTTAPEX XIT1                                                                   
         DROP  RC                                                               
         SPACE 2                                                                
PUTTAPED DSECT                                                                  
PTDMCB   DS    6F                                                               
PUTTAPLQ EQU   *-PUTTAPED                                                       
*                                                                               
         EJECT                                                                  
* ROUTINE TO BUILD BASIC OUTPUT RECORD.                                         
*                                                                               
* ON ENTRY R1 POINTS TO A PARAMETER LIST AS FOLLOWS -                           
*                                                                               
* BYTE  0   = X'00' FOR ACTIVE KEY                                              
*           = C'P'  FOR PASSIVE KEY                                             
*           = C'E'  FOR EXTENDED PASSIVE KEY                                    
* BYTES 1-3 = A(OUTPUT RECORD KEY)                                              
*                                                                               
DEMCON   CSECT                                                                  
BLDREC   NTR1  BASE=ABASE                                                       
         L     RA,BBASE                                                         
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD  BASE REGISTER                      
         L     RF,0(R1)            RF=A(KEY OF RECORD)                          
         L     RE,AOREC            RE=A(OUTPUT RECORD)                          
         XC    0(4,RE),0(RE)                                                    
         LA    RE,4(RE)                                                         
         CLI   0(R1),C'E'          EXTENDED PASSIVE KEY?                        
         BNE   BLDREC1             YES                                          
         MVC   0(MAJKEYLN,RE),0(RF) MOVE MAJOR KEY TO I/O AREA...               
         MVC   MAJKEYLN(4,RE),MAJKEYLN+1(RF) ...AND DATA BYTES...               
         MVC   MAJKEYLN+4(1,RE),MAJKEYLN(RF) ...AND STATUS BYTE                 
         OI    MAJKEYLN+4(RE),X'40' SET EXTENDED PASSIVE STATUS BIT             
         LA    RE,DIRRECLN(RE)     RE POINTS JUST BEYOND THE POINTER            
         B     BLDREC4             SET RECLEN IN RDW                            
*                                                                               
BLDREC1  DS    0H                                                               
         MVC   0(OKEYLN,RE),0(RF)  MOVE KEY TO I/O AREA                         
         LA    RE,OKEYLN(RE)                                                    
         XC    0(4,RE),0(RE)                                                    
         CLI   0(R1),C'P'          TEST IF A PASSIVE POINTER                    
         BNE   BLDREC2                                                          
         MVC   0(2,RE),=X'FFFF'    YES - SET RECLEN TO -1                       
         LA    RE,3(RE)                                                         
         B     BLDREC4                                                          
*                                                                               
BLDREC2  LA    R0,OKEYLN+4         SET RECLEN TO KEYLEN+4                       
         STCM  R0,3,0(RE)                                                       
         LA    RE,4(RE)                                                         
*                                                                               
BLDREC4  L     RF,AOREC            SET OUTPUT RECORD LENGTH                     
         SR    RE,RF                                                            
         STCM  RE,3,0(RF)                                                       
*                                                                               
BLDRECX  XIT1                                                                   
         EJECT                                                                  
* ROUTINE TO ADD AN ELEMENT TO OUTPUT RECORD.                                   
*                                                                               
* ON ENTRY R1=A(ELEMENT TO BE ADDED)                                            
*                                                                               
PUTEL    NTR1  BASE=ABASE                                                       
         L     RA,BBASE                                                         
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD  BASE REGISTER                      
         L     RE,AOREC            RE=A(OUTPUT RECORD)                          
         SR    RF,RF                                                            
         ICM   RF,3,OKEYLN+4(RE)                                                
         LA    RF,4(RE,RF)                                                      
         BCTR  RF,0                RF=A(OUTPUT SLOT)                            
         LLC   R2,1(R1)                                                         
         BCTR  R2,0                R2=L'ELEMENT-1                               
         EX    R2,*+8                                                           
         B     *+10                                                             
         MVC   0(0,RF),0(R1)       MOVE ELEMENT TO SLOT                         
         LA    R1,1(R2,RF)                                                      
         MVI   0(R1),0             SET NEW E-O-R                                
         LA    R1,1(R1)                                                         
         LA    RF,4(RE)                                                         
         SR    R1,RF               R1=NEW RECORD LENGTH                         
         STCM  R1,3,OKEYLN+4(RE)                                                
         LA    R1,4(R1)            SET NEW OUTPUT LENGTH                        
         STCM  R1,3,0(RE)                                                       
*                                                                               
PUTELX   XIT1                                                                   
         SPACE 2                                                                
MAJKEYLN EQU   18                  ASSUMES ALL MAJOR KEYS HAVE LEN=18           
DIRRECLN EQU   23                  ASSUMES ALL POINTERS HAVE LEN=23             
OKEYLN   EQU   20                  OUTPUT RECORD KEY LENGTH                     
         EJECT                                                                  
* ROUTINE WRITES THE DATA IN FIELD P (IN DDDPRINT) TO SYSPRIN2 (VIA             
*  THE "PRINT" SUBROUTINE).                                                     
*                                                                               
* NOTE: THIS ROUTINE                                                            
*        1) MOVES SPACES TO FIELD P AFTER PRINTING.                             
*        2) OVERWRITES FIELD SUB3.                                              
*        3) OVERWRITES LAST BYTE OF FIELD SUB2.                                 
*                                                                               
DEPRNT2  NTR1  BASE=ABASE                                                       
         L     RA,BBASE                                                         
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD BASE REGISTER                       
*                                                                               
         MVC   SUB3,P              USE FIELDS SUB3, AND THE LAST...             
*                                  ... BYTE OF SUB2 (FOR CARRIAGE CNTL)         
         GOTO1 =V(PRINT2),DMCB,SUB3-1,=C'BL01'    WRITE AND SKIP 1 LINE         
*                                                                               
         MVC   P,SPACES            SO DDPRINT DOESN'T TRY TO PRINT THIS         
         MVC   SUB3,SPACES                                                      
         MVI   SUB2+131,C' '                                                    
*                                                                               
         XIT1                                                                   
         EJECT                                                                  
* RETURN A(MARKET NAME TABLE).                                                  
*                                                                               
* NO INPUT PARAMETERS ARE NEEDED.                                               
* ON OUTPUT, THE ADDRESS OF THE MARKET NAME TABLE WILL BE IN P1.                
*                                                                               
* THIS ROUTINE IS PROVIDED FOR BACKWARD COMPATIBILITY WITH EXISTING             
* CONVERSIONS. THE OBSOLETE MODULE DELDCREC USED TO CONTAIN A HARD-             
* CODED TABLE OF MARKET NAMES. THE MARKET NAME TABLE IS NOW INCLUDED            
* IN DEMTABOF (A COMMON MODULE).                                                
*                                                                               
* THE ENTRY POINT TO THIS ROUTINE (MKTNAMES) USED TO BE V(LDCREC), AND          
* IS STILL POINTED TO BY SYMBOL VLDCREC IN DEDEMCNVD.                           
*                                                                               
MKTNAMES NTR1  BASE=ABASE                                                       
         L     RA,BBASE                                                         
         LR    R9,RA                                                            
         AHI   R9,X'1000'          R9=THIRD BASE REGISTER                       
*                                                                               
         L     RF,ACOMFACS                                                      
         L     RF,CDEMTBOF-COMFACSD(RF)    DEMTABOF                             
         LHI   R0,MRKTNAMT         MARKET NAME TABLE INDICATOR                  
         ST    R0,DMCB                                                          
         GOTO1 (RF),DMCB           GET A(MARKET NAME TABLE)                     
         ICM   RE,15,0(R1)         A(TABLE) RETURNED IN P1                      
         BNZ   *+6                                                              
         DC    H'0'                                                             
*                                                                               
         XIT1                                                                   
         EJECT                                                                  
*                                                                               
* COMMON I/O ERROR HANDLER                                                      
*                                                                               
IOERR    DS    0H                                                               
*                                                                               
* NOTE: *** WE DO NOT RETURN FROM THIS ROUTINE. WE ALWAYS ABEND !!!             
*                                                                               
*       *** THIS IS BASELESS CODE. WE DO NOT RELY ON RB.                        
*       *** THE ASSUMPTION IS THAT IF A FILE IS IN BAD ENOUGH SHAPE             
*       *** TO CAUSE AN I/O ERROR, THERE IS NO POINT IN TRYING TO               
*       *** PROCESS IT AT ALL, SO WE JUST ABEND HERE. I.E., WE DON'T            
*       *** BOTHER SAVING AND RESTORING REGISTERS.                              
*                                                                               
* EXTRACT SYSTEM ERROR MESSAGES INTO FIELD TEMP. SEE IBM MANUAL                 
* "Z/OS DFSMS MACRO INSTRUCTIONS FOR DATA SETS", SECTION ON SYNADAF             
* MACRO, FOR DETAILS. IF WE HAVE A DDNAME, TRY TO EXTRACT A DSN OR              
* PATHNAME AND DISPLAY IT ALONG WITH THE SYNAD MESSAGES.                        
*                                                                               
     SYNADAF ACSMETH=QSAM                                                       
     MVC   TEMP,50(R1)         MESSAGE AREA FROM SYNADAF                        
     SYNADRLS ,                                                                 
     GOTO1 =V(LOGIO),DMCB,X'FF000001',=C'I/O ERROR: FORCING USER ABEND'         
                                                                                
     DO ONCE                                                                    
       DOEXIT (CLC,TEMP+25(8),EQ,SPACES)  IF WE HAVE A DDNAME:                  
*                                           TRY TO EXTRACT THE DSN              
       GOTO1 =V(DDINFO),DMCB,(8,TEMP+25),(0,=AL2(DINRTDSN)),0                   
       DOEXIT (LTR,RF,RF,NZ)     EXIT IF BAD RETURN FROM DDINFO                 
       SR    R2,R2                                                              
       ICM   R2,1,DMCB+8                                                        
       DOEXIT (Z)                EXIT IF NO DSN AVAILABLE                       
                                                                                
       L     RE,DMCB+8           A(RETURNED DSN OR PATHNAME)                    
*                                 IF IT'S A PATHNAME, TRY TO EXTRACT IT         
       IF (CLC,=C'...PATH=.SPECIFIED...',EQ,0(RE))                              
         GOTO1 =V(DDINFO),DMCB,(8,TEMP+25),(0,=AL2(DINRPATH)),0                 
         DOEXIT (LTR,RF,RF,NZ)     EXIT IF BAD RETURN FROM DDINFO               
         SR    R2,R2                                                            
         ICM   R2,1,DMCB+8                                                      
         DOEXIT (Z)                EXIT IF NO PATHNAME RETURNED                 
         L     RE,DMCB+8           A(RETURNED DSN OR PATHNAME)                  
       ENDIF ,                                                                  
*                                                                               
       MVC   OPERMSG(21),=C'FAILURE READING FROM '                              
       BCTR  R2,0                                                               
       EXRL  R2,*+10                                                            
       J     *+10                                                               
       MVC   OPERMSG+21(0),0(RE) PUT PATHNAME INTO CONSOLE MESSAGE              
       AHI   R2,1+21             R2 = L'MESSAGE                                 
       GOTO1 =V(LOGIO),DMCB,X'FF000001',((R2),OPERMSG)                          
     ENDDO ,                                                                    
*                                                                               
     GOTO1 =V(LOGIO),DMCB,X'FF000001',=C'SYNAD ERROR MESSAGES FOLLOW:'          
     MVC   OPERMSG,SPACES      WRITE FIRST MESSAGE LINE TO CONSOLE...           
     MVC   OPERMSG(59),TEMP+18 ...STARTING AFTER <JOBNAME,STEPNAME,>            
     GOTO1 =V(LOGIO),DMCB,X'FF000001',(59,OPERMSG)                              
     IF (CLI,TEMP+77,EQ,C'S')  IF THERE IS A 2ND MESSAGE:                       
       MVC   OPERMSG,SPACES      WRITE IT TO THE CONSOLE                        
       MVC   OPERMSG,TEMP+94                                                    
       GOTO1 =V(LOGIO),DMCB,X'FF000001',(L'OPERMSG,OPERMSG)                     
     ENDIF ,                                                                    
*                                                                               
     ABEND 925                 FORCE USER ABEND                                 
*                                                                               
     EJECT                                                                      
*                                                                               
OPERMSG  DS    CL100               MAXIMUM LENGTH FOR LOGIO                     
*                                                                               
         EJECT                                                                  
* LITERAL POOL                                                                  
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
OPENFLAG DC    C'N'                                                             
TEMPBUF_MODE   DC C' '             TEMPORARY BUFFER FILE (WHEN SORT=NO)         
TEMPBUF_INPUT  EQU C'I'             OPENED FOR INPUT                            
TEMPBUF_OUTPUT EQU C'O'             OPENED FOR OUTPUT                           
ATABLES  DC    X'D4',3X'00',X'FF'                                               
DDNAME   DC    CL8'ETAPE'                                                       
DSNAME   DC    CL20' '                                                          
TEMPBTYP DS    CL2                                                              
MTITLE   DS    CL80                                                             
INPSRCE  DC    CL4' '              INPUT SOURCE                                 
         SPACE 2                                                                
* REQUEST CONTROL TOTALS                                                        
*                                                                               
NVALS    DS    0F                                                               
NIINPUT  DC    F'0',CL24'INPUT RECORDS PROCESSED'                               
NITAPES  DC    F'0',CL24'INPUT TAPES PROCESSED'                                 
NFRECS   DC    F'0',CL24'RECORDS FILTERED'                                      
NMRKTS   DC    F'0',CL24'MARKETS PROCESSED'                                     
NUMISORT DC    F'0',CL24'SORT INPUT RECORDS'                                    
NUMOSORT DC    F'0',CL24'SORT OUTPUT RECORDS'                                   
NUMORECS DC    F'0',CL24'OUTPUT RECORDS'                                        
NETAPES  DC    F'0',CL24'TAPES IN ERROR'                                        
         DC    X'FF'                                                            
*                                                                               
SMTPTO1  DC    C'US-DEMOLOADTEAM@MEDIAOCEAN.COM:'                               
SMTPCC1  DC    C'US-DEMOSTEAM@MEDIAOCEAN.COM:'                                  
SUBJECT1 DC    C'*DEMCNV WARNING*: EMPTY CONVERSION OTAPE DATASET CREAT+        
               ED. JOB XXXXXXXX(JXXXXX)'                                        
LINE1A   DC    CL80'THIS CONVERSION PRODUCED NO OUTPUT RECORDS. THIS IS+        
                TYPICALLY DUE TO AN'                                            
LINE1B   DC    CL80'OPERATIONAL ERROR. IT MAY ALSO BE DUE TO BAD INPUT +        
               DATA OF SOME KIND.'                                              
         EJECT                                                                  
* VARIOUS FILTERS AND FIELDS                                                    
*                                                                               
VTYPES   DC    X'00',9X'00'        VIEWING TYPE FILTERS                         
EFILE    DS    CL16                NAME OF FILE TO BE EMAILED                   
NETEMAIL DC    C'N'                                                             
MKTEMAIL DC    C'N'                                                             
NETCTREC DC    C'N'                                                             
NETCTCOR DC    C'Y'                                                             
WARNFLAG DC    C'Y'                                                             
         SPACE 2                                                                
* CORE-RESIDENT PHASE NAMES                                                     
DEMDISP  DS    CL8                                                              
DEMOMATH DS    CL8                                                              
DEMAINT  DS    CL8                                                              
DEMADDR  DS    CL8                                                              
DEMOUT   DS    CL8                                                              
DEGET    DS    CL8                                                              
DEGET01  DS    CL8                                                              
DEMEL    DS    CL8                                                              
DEMOVAL  DS    CL8                                                              
DEMTABS  DS    CL8                                                              
DEMTABOF DS    CL8                                                              
DEMOCON  DS    CL8                                                              
         EJECT                                                                  
* DATA MANAGER LITERALS                                                         
*                                                                               
DMFLIST  DC    0D                                                               
         DC    C'NDEMDIRN'                                                      
         DC    C'NL=DEMFN'                                                      
         DC    C'NDEMDIRA'                                                      
         DC    C'NL=DEMFA'                                                      
         DC    C'NDEMDIRR'                                                      
         DC    C'NL=DEMFR'                                                      
         DC    C'NNTIDIR '                                                      
         DC    C'NL=NTIFL'                                                      
         DC    C'NPAVDIR '                                                      
         DC    C'NL=PAVFL'                                                      
         DC    C'NCTFILE '                                                      
         DC    C'X'                                                             
         EJECT                                                                  
         MACRO                                                                  
         PARMD &MODE,&LABEL=                                                    
         GBLC  &PREND                                                           
         AIF   ('&MODE' EQ 'END').PARMO20                                       
         AIF   (T'&MODE NE 'O').PARMERR                                         
         AIF   (T'&LABEL NE 'O').PARMO10                                        
.PARMERR MNOTE 8,'INVALID OR MISSING PARMD PARAMETER'                           
         AGO   .PARMXIT                                                         
.PARMO10 ANOP                                                                   
&PREND   SETC  'END_&LABEL'                                                     
&LABEL   DS    0C                                                               
         DC    AL1(&PREND-&LABEL)  LENGTH OF TABLE ENTRY                        
         AGO   .PARMXIT                                                         
.PARMO20 ANOP                                                                   
&PREND   DS    0H                    END OF TABLE ENTRY                         
.PARMXIT ANOP                                                                   
         MEXIT                                                                  
         MEND                                                                   
         EJECT                                                                  
* TABLE OF VALID PARAMETERS (SEE PARMTABD FOR DESCRIPTION)                      
*                                                                               
* EACH PARAMETER DEFINITION MUST BEGIN WITH A PARMD CALL (WITH A                
* LABEL= PARAMETER), AND END WITH A "PARMD END" MACRO CALL.                     
* THE "LABEL=" PARAMETER GENERATES A UNIQUE LABEL (OF THE PROGRAMMER'S          
* CHOOSING) AT THE START OF EACH TABLE ENTRY. IT'S HANDY TO HAVE THIS           
* AVAILABLE IF WE EVER NEED TO REFERENCE A PARTICULAR TABLE ENTRY.              
*                                                                               
PARMTAB  DS    0H                                                               
*                                                                               
         PARMD LABEL=PARM_DEGET                                                 
         DC    X'080000',C'DEGET   ',AL1(01,06,08),AL3(0)                       
         DC    S(DEGET),AL1(L'DEGET-1)                                          
         DC    CL8'T00ADD'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEGET01                                               
         DC    X'080000',C'DEGET01 ',AL1(01,06,08),AL3(0)                       
         DC    S(DEGET01),AL1(L'DEGET01-1)                                      
         DC    CL8'T00AE6'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMOMATH                                              
         DC    X'080000',C'DEMOMATH',AL1(01,06,08),AL3(0)                       
         DC    S(DEMOMATH),AL1(L'DEMOMATH-1)                                    
         DC    CL8'T00ADA'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMAINT                                               
         DC    X'080000',C'DEMAINT ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMAINT),AL1(L'DEMAINT-1)                                      
         DC    CL8'T00ADC'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMOUT                                                
         DC    X'080000',C'DEMOUT  ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMOUT),AL1(L'DEMOUT-1)                                        
         DC    CL8'T00ADF'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMDISP                                               
         DC    X'080000',C'DEMDISP ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMDISP),AL1(L'DEMDISP-1)                                      
         DC    CL8'T00AD0'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMTABS                                               
         DC    X'080000',C'DEMTABS ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMTABS),AL1(L'DEMTABS-1)                                      
         DC    CL8'T00AD1'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMTABOF                                              
         DC    X'080000',C'DEMTABOF',AL1(01,06,08),AL3(0)                       
         DC    S(DEMTABOF),AL1(L'DEMTABOF-1)                                    
         DC    CL8'T00AD2'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMEL                                                 
         DC    X'080000',C'DEMEL   ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMEL),AL1(L'DEMEL-1)                                          
         DC    CL8'T00ADB'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMOVAL                                               
         DC    X'080000',C'DEMOVAL ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMOVAL),AL1(L'DEMOVAL-1)                                      
         DC    CL8'T00AD9'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMADDR                                               
         DC    X'080000',C'DEMADDR ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMADDR),AL1(L'DEMADDR-1)                                      
         DC    CL8'T00ADE'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DEMOCON                                               
         DC    X'080000',C'DEMOCON ',AL1(01,06,08),AL3(0)                       
         DC    S(DEMOCON),AL1(L'DEMOCON-1)                                      
         DC    CL8'T00AE0'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DDSIO                                                 
         DC    X'280000',C'DDSIO   ',AL1(01,05,08),AL3(VALDDSI)                 
         DC    S(0),AL1(0)                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_DSPACE                                                
         DC    X'200000',C'DSPACE  ',AL1(01,01,01),AL3(VALDSPAC)                
         DC    S(0),AL1(0)                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_MODE                                                  
         DC    X'180000',C'MODE    ',AL1(01,02,08),AL3(VALMODE)                 
         DC    S(MODE),AL1(L'MODE-1)                                            
         DC    X'01'                                                            
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_BOOK                                                  
         DC    X'200000',C'BOOK    ',AL1(05,04,07),AL3(VALBOOK)                 
         DC    S(FILTBOOK),AL1(3)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_WEEK                                                  
         DC    X'200000',C'WEEK    ',AL1(02,04,04),AL3(VALWEEK)                 
         DC    S(FILTWEEK),AL1(1)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_SOURCE                                                
         DC    X'900000',C'SOURCE  ',AL1(01,02,06),AL3(VALSRCE)                 
         DC    S(SOURCE),AL1(L'SOURCE-1)                                        
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_TIME                                                  
         DC    X'200000',C'TIME    ',AL1(05,01,10),AL3(VALTIME)                 
         DC    S(FILTTIME),AL1(1)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_STATION                                               
         DC    X'200000',C'STATION ',AL1(05,03,11),AL3(VALSTAT)                 
         DC    S(FILTSTAT),AL1(9)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_VTYPES                                                
         DC    X'100000',C'VTYPES  ',AL1(09,02,02),AL3(VALVTYPS)                
         DC    S(VTYPES),AL1(0)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_MARKET                                                
         DC    X'200000',C'MARKET  ',AL1(10,01,05),AL3(VALMRKT)                 
         DC    S(FILTMRKT),AL1(1)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_EXMARKET                                              
         DC    X'200000',C'EXMARKET',AL1(10,01,05),AL3(VALMKTEX)                
         DC    S(FILTMRKT),AL1(1)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_RTYPE                                                 
         DC    X'000000',C'RTYPE   ',AL1(05,01,01),AL3(0)                       
         DC    S(FILTRECS),AL1(0)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_STYPE                                                 
         DC    X'100000',C'STYPE   ',AL1(05,01,08),AL3(VALSTYP)                 
         DC    S(FILTSTYP),AL1(0)                                               
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_SORT                                                  
         DC    X'180000',C'SORT    ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(SORTFLAG),AL1(L'SORTFLAG-1)                                    
         DC    C'Y'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_TRACEFIL                                              
         DC    X'2C0000',C'TRACEFIL',AL1(01,01,03),AL3(VALTRCFL)                
         DC    S(ATRACDCB),AL1(L'ATRACDCB-1)                                    
         DC    XL4'00'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_FILE                                                  
         DC    X'280000',C'FILE    ',AL1(01,01,01),AL3(VALFILE)                 
         DC    S(FILNUM),AL1(L'FILNUM-1)                                        
         DC    AL1(1)                                                           
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_NFSDD                                                 
         DC    X'080000',C'NFSDD   ',AL1(01,01,08),AL3(0)                       
         DC    S(NFSDDNAM),AL1(L'NFSDDNAM-1)                                    
         DC    CL8' '              DEFAULT: NO NFS READ                         
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_GLOBAL                                                
         DC    X'180000',C'GLOBAL  ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(GLOBAL),AL1(L'GLOBAL-1)                                        
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_XSPILL                                                
         DC    X'180000',C'XSPILL  ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(XSPILL),AL1(L'XSPILL-1)                                        
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_FORCE                                                 
         DC    X'180000',C'FORCE   ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(FORCE),AL1(L'FORCE-1)                                          
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_NRECS                                                 
         DC    X'280000',C'NRECS   ',AL1(01,01,05),AL3(VALNREC)                 
         DC    S(NRECS),AL1(L'NRECS-1)                                          
         DC    X'7FFFFFFF'                                                      
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_IPHASE                                                
         DC    X'080000',C'IPHASE  ',AL1(01,04,08),AL3(0)                       
         DC    S(IPHASE),AL1(L'IPHASE-1)                                        
         DC    XL8'00'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_OPHASE                                                
         DC    X'080000',C'OPHASE  ',AL1(01,04,08),AL3(0)                       
         DC    S(OPHASE),AL1(L'OPHASE-1)                                        
         DC    XL8'00'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_IPHSPARM                                              
         DC    X'080000',C'IPHSPARM',AL1(01,01,08),AL3(0)                       
         DC    S(IPHSPARM),AL1(L'IPHSPARM-1)                                    
         DC    XL8'00'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_OPHSPARM                                              
         DC    X'080000',C'OPHSPARM',AL1(01,01,08),AL3(0)                       
         DC    S(OPHSPARM),AL1(L'OPHSPARM-1)                                    
         DC    XL8'00'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_RPRINT                                                
         DC    X'200000',C'RPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(RPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_IPRINT                                                
         DC    X'200000',C'IPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(IPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_SPRINT                                                
         DC    X'200000',C'SPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(SPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_WPRINT                                                
         DC    X'200000',C'WPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(WPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_OPRINT                                                
         DC    X'200000',C'OPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(OPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_MPRINT                                                
         DC    X'200000',C'MPRINT  ',AL1(05,01,10),AL3(VALPRNT)                 
         DC    S(MPRINT),AL1(3)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_HUTPRINT                                              
         DC    X'180000',C'HUTPRINT',AL1(01,01,08),AL3(VALHPRT)                 
         DC    S(HUTPRINT),AL1(L'HUTPRINT-1)                                    
         DC    C'D'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_BTYPE                                                 
         DC    X'080000',C'BTYPE   ',AL1(01,01,02),AL3(0)                       
         DC    S(TEMPBTYP),AL1(L'TEMPBTYP-1)                                    
         DC    X'0000'                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_IPATCH                                                
         DC    X'200000',C'IPATCH  ',AL1(05,07,47),AL3(VALPTCH)                 
         DC    S(IPATCH),AL1(22)                                                
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_OPATCH                                                
         DC    X'200000',C'OPATCH  ',AL1(05,07,47),AL3(VALPTCH)                 
         DC    S(OPATCH),AL1(22)                                                
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_CPATCH                                                
         DC    X'200000',C'CPATCH  ',AL1(05,07,47),AL3(VALPTCH)                 
         DC    S(CPATCH),AL1(22)                                                
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_KEYONLY                                               
         DC    X'180000',C'KEYONLY ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(KEYONLY),AL1(L'KEYONLY-1)                                      
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_OPELEM                                                
         DC    X'200000',C'OPELEM  ',AL1(10,01,03),AL3(VALPELEM)                
         DC    S(OPELEM),AL1(0)                                                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_ORIGINAL                                              
         DC    X'080000',C'ORIGINAL',AL1(01,01,01),AL3(0)                       
         DC    S(ORIGINAL),AL1(L'ORIGINAL-1)                                    
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_EFILE                                                 
         DC    X'080000',C'EFILE   ',AL1(01,04,16),AL3(0)                       
         DC    S(EFILE),AL1(L'EFILE-1)                                          
         DC    CL20' '                                                          
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_NETEMAIL                                              
         DC    X'180000',C'NETEMAIL',AL1(01,01,08),AL3(VALYESNO)                
         DC    S(NETEMAIL),AL1(L'NETEMAIL-1)                                    
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_NETCTREC                                              
         DC    X'180000',C'NETCTREC',AL1(01,01,08),AL3(VALYESNO)                
         DC    S(NETCTREC),AL1(L'NETCTREC-1)                                    
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_NETCTCOR                                              
         DC    X'180000',C'NETCTCOR',AL1(01,01,08),AL3(VALYESNO)                
         DC    S(NETCTCOR),AL1(L'NETCTCOR-1)                                    
         DC    C'Y'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_MKTEMAIL                                              
         DC    X'180000',C'MKTEMAIL',AL1(01,01,08),AL3(VALYESNO)                
         DC    S(MKTEMAIL),AL1(L'MKTEMAIL-1)                                    
         DC    C'N'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_LOADTYPE                                              
         DC    X'180000',C'LOADTYPE',AL1(01,06,08),AL3(VALLTYP)                 
         DC    S(LOADTYPE),AL1(L'LOADTYPE-1)                                    
         DC    HL1'0'                                                           
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_READFILE                                              
         DC    X'180000',C'READFILE',AL1(01,06,07),AL3(VALRDFIL)                
         DC    S(RDFLFLAG),AL1(L'RDFLFLAG-1)                                    
         DC    C'P'                DEFAULT TO PAV FILE ON MERGE                 
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_WARN                                                  
         DC    X'180000',C'WARN    ',AL1(01,01,03),AL3(VALYESNO)                
         DC    S(WARNFLAG),AL1(L'WARNFLAG-1)                                    
         DC    C'Y'                                                             
         PARMD END                                                              
*                                                                               
         PARMD LABEL=PARM_END                                                   
         DC    X'C00000',C'END     ',AL1(00,00,00),AL3(0)                       
         DC    S(0),AL1(0)                                                      
         PARMD END                                                              
*                                                                               
         DC    AL1(0)              EOT                                          
         EJECT                                                                  
* TABLE OF MODE SUBFIELDS (MODE=XXXXXXXX)                                       
LOPTION  EQU   8                   ALL OPTIONS MUST BE CL8 !                    
*                                                                               
VALMODE  DS    0H                                                               
         DC    C'RUN     ',X'01'                                                
         DC    C'REPORT  ',X'02'                                                
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE OF SOURCE SUBFIELDS (SOURCE=XXXX)                                       
*                                                                               
VALSRCE  DS    0H                                                               
         DC    C'ARB     ',C'TAA'                                               
         DC    C'BBM     ',C'CAB'                                               
         DC    C'CAN     ',C'CNC'                                               
         DC    C'DNSI    ',C'DND'  DAYPART SUMMARY TAPES                        
         DC    C'PARB    ',C'TAE'                                               
         DC    C'PNSI    ',C'TNF'  PROGRAM AVERAGE TAPES                        
         DC    C'NNSI    ',C'NNG'  NTI NETWORK TAPES                            
         DC    C'NCBL    ',C'NNH'  NTI CABLE TAPES                              
         DC    C'NNAD    ',C'NNI'  NTI NAD TAPES                                
         DC    C'ONTI    ',C'NNJ'  NTI NETWORK TAPES (DIARY FORMAT)             
         DC    C'RSBBM   ',C'RMK'  BBM RADIO SUMMARY TAPE                       
         DC    C'NPA     ',C'PAL'  MARKET/PROGRAM TAPES (ARB)                   
         DC    C'MPA     ',C'PNM'  MARKET/PROGRAM TAPES (NSI)                   
         DC    C'NSI     ',C'TNN'  QUARTER HOUR TAPES                           
         DC    C'RARB    ',C'RAO'  ARB RADIO                                    
         DC    C'RBIRCH  ',C'RNP'  BIRCH RADIO                                  
         DC    C'WNSI    ',C'WNQ'  WEEKLY NSI METERED MARKETS                   
         DC    C'SRC     ',C'TSR'                                               
         DC    C'NNHI    ',C'NNT'  NHTI TAPES                                   
         DC    C'FUSION  ',C'TFU'  FUSION                                       
         DC    C'RADA    ',C'RRW'  ARB RADIO                                    
         DC    C'CNET    ',C'ENX'  CANADIAN CABLE                               
         DC    C'NCMV    ',C'NNY'  CABLE MOVIE GOER                             
         DC    C'CCOV    ',C'UNZ'  COUNTY COVERAGE                              
         DC    C'TON     ',C'ON',X'90'    OVERNIGHTS OTP NSI                    
         DC    C'PON     ',C'ON',X'91'    OVERNIGHTS PAV NSI                    
         DC    C'RCC     ',C'UN',X'92'    RADIO COUNTY COVERAGE                 
         DC    C'RTRI    ',C'RT',X'93'    TRITON RADIO                          
         DC    C'VID     ',C'TV',X'94'     VIDEOLOGY                            
         DC    C'IHT     ',C'RH',X'95'     IHEART                               
         DC    C'LNCM    ',C'TC',X'96'     LOCAL NCM                            
*                                          TRUE WEEKLY NSI TIME PERIOD          
         DC    C'NSIW    ',X'A6',C'N',X'97'   (LOWERCASE "W")                   
*                                                                               
* THESE ARE FOR THE MERGE PHASES (DEMRGI AND DEMRGO)                            
*********DC    C'PAV     ',C'TNF'  PROGRAM AVERAGE TAPES SPOT                   
*********DC    C'NTI     ',C'TNF'  PROGRAM AVERAGE TAPES NET                    
*********DC    C'TP      ',C'TNN'  QUARTER HOUR TAPES SPOT                      
*                                                                               
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE OF STYPE SUBFIELDS (STYPE=XXX/ETC.)                                     
*                                                                               
VALSTYP  DS    0H                                                               
         DC    C'PARENT  ',X'02'                                                
         DC    C'P+S1    ',X'01'                                                
         DC    C'P+S2    ',X'04'                                                
         DC    C'S1      ',X'08'                                                
         DC    C'S2      ',X'10'                                                
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE OF HUTPRINT SUBFIELDS (HUTPRINT=XXXXXXX)                                
*                                                                               
VALHPRT  DS    0H                                                               
         DC    C'SUMMARY ',C'S'                                                 
         DC    C'DETAIL  ',C'D'                                                 
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE FOR YES/NO SUBFIELDS                                                    
*                                                                               
VALYESNO DS    0H                                                               
         DC    C'YES     ',C'Y'                                                 
         DC    C'NO      ',C'N'                                                 
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE FOR LOADTYPE OPTIONS                                                    
*                                                                               
VALLTYP  DS    0H                                                               
         DC    C'ORIGINAL',AL1(LDORIGEQ)                                        
         DC    C'REISSUE ',AL1(LDREISEQ)                                        
         DC    C'RELOAD  ',AL1(LDRELDEQ)                                        
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE FOR READFILE OPTIONS (USED BY MERGE)                                    
*                                                                               
VALRDFIL DS    0H                                                               
         DC    C'PAVFILE ',C'P'                                                 
         DC    C'DEMFILE ',C'D'                                                 
         DC    X'00'                                                            
         SPACE 2                                                                
* TABLE FOR ACM OPTIONS                                                         
*                                                                               
VALVTYPS DS    0H                                                               
         DC    CL8'LV',AL1(SRCLIVE)                                             
         DC    CL8'SD',AL1(SRCLIVSD)                                            
         DC    CL8'7+',AL1(SRCLIVE7)                                            
         DC    CL8'1+',AL1(SRCLIVE1)                                            
         DC    CL8'2+',AL1(SRCLIVE2)                                            
         DC    CL8'3+',AL1(SRCLIVE3)                                            
         DC    CL8'AL',AL1(SRCALV)                                              
         DC    CL8'AS',AL1(SRCALS)                                              
         DC    CL8'A7',AL1(SRCAL7)                                              
         DC    X'00'                                                            
         EJECT                                                                  
* SOURCE TABLE (SEE SRCTABD FOR DESCRIPTION)                                    
*                                                                               
         PRINT DATA                                                             
*                                                                               
SRCTAB   DS    0D                                                               
*                                                                               
*                                  ARB TPT                                      
 DC C'A',AL2(OCT_99,HIGH),C'DETA0205',C'DECNVTP3',AL1(37),AL2(100)              
 DC C'A',AL2(OCT_93,SEP_99),C'DETA9310',C'DECNVTP3',AL1(37),AL2(277)            
 DC C'A',AL2(FEB_88,SEP_93),C'DETA8802',C'DECNVTPT',AL1(113),AL2(277)           
 DC C'A',AL2(FEB_87,JAN_88),C'DETA8702',C'DECNVTPT',AL1(113),AL2(277)           
 DC C'A',AL2(MAY_85,JAN_87),C'DETA8505',C'DECNVTPT',AL1(113),AL2(176)           
 DC C'A',AL2(LOW,MAR_85),C'DETA8205',C'DECNVTPT',AL1(113),AL2(176)              
*                                                                               
*                                  BBM/TPT                                      
 DC C'B',AL2(NOV_87,HIGH),C'DETB8711',C'DECNVTPT',AL1(113),AL2(180)             
 DC C'B',AL2(NOV_85,OCT_87),C'DETB8511',C'DECNVTPT',AL1(113),AL2(100)           
 DC C'B',AL2(LOW,OCT_85),C'DETB8205',C'DECNVTPT',AL1(113),AL2(100)              
*                                                                               
*                                  CANADIAN NSI/TPT                             
 DC C'C',AL2(JAN_96,HIGH),C'DECAN96 ',C'DECNVCAN',AL1(72),AL2(100)              
 DC C'C',AL2(NOV_88,DEC_95),C'DETC8811',C'DECNVTPT',AL1(72),AL2(100)            
 DC C'C',AL2(SEP_84,OCT_88),C'DETC8409',C'DECNVTPT',AL1(72),AL2(100)            
 DC C'C',AL2(LOW,AUG_84),C'DETC8205',C'DECNVTPT',AL1(72),AL2(100)               
*                                                                               
*                                  NSI/DPT                                      
 DC C'D',AL2(JAN_96,HIGH),C'DEDN9611',C'DECNVDPT',AL1(91),AL2(160)              
 DC C'D',AL2(OCT_93,NOV_95),C'DEDN9310',C'DECNVDPT',AL1(91),AL2(160)            
 DC C'D',AL2(AUG_92,SEP_93),C'DEDN9210',C'DECNVDPT',AL1(91),AL2(160)            
 DC C'D',AL2(SEP_90,JUL_92),C'DEDN9010',C'DECNVDPT',AL1(91),AL2(160)            
 DC C'D',AL2(LOW,JUL_90),C'DEDN8310',C'DECNVDPT',AL1(91),AL2(160)               
*                                                                               
*                                  LOCAL MONTHLIES PAV (NSI/PAV)                
 DC C'F',AL2(SEP_10,HIGH),C'DELMPAI ',C'DELMPAO ',AL1(52),AL2(121)              
 DC C'F',AL2(MAR_00,AUG_10),C'DEPN0003',C'DECNVPA3',AL1(47),AL2(100)            
 DC C'F',AL2(OCT_93,FEB_00),C'DEPN9310',C'DECNVPA2',AL1(38),AL2(100)            
 DC C'F',AL2(OCT_90,AUG_93),C'DEPN9010',C'DECNVPAV',AL1(19),AL2(100)            
 DC C'F',AL2(MAY_82,AUG_90),C'DEPN8205',C'DECNVPAV',AL1(19),AL2(100)            
 DC C'F',AL2(LOW,APR_82),C'DELMPAI ',C'DELMPAO ',AL1(52),AL2(121)               
                                                                                
*                                  ARB/PAV                                      
 DC C'E',AL2(OCT_93,HIGH),C'DEPA9310',C'DECNVPA2',AL1(38),AL2(215)              
 DC C'E',AL2(FEB_88,SEP_93),C'DEPA8802',C'DECNVPAV',AL1(19),AL2(215)            
 DC C'E',AL2(FEB_87,JAN_88),C'DEPA8702',C'DECNVPAV',AL1(19),AL2(215)            
 DC C'E',AL2(MAY_85,JAN_87),C'DEPA8505',C'DECNVPAV',AL1(19),AL2(100)            
 DC C'E',AL2(LOW,APR_85),C'DEPA8205',C'DECNVPAV',AL1(19),AL2(100)               
*                                                                               
*                                  NSI/NTI/POCKETPIECE 01/95                    
 DC C'G',AL2(LOW,HIGH),C'DENN9501',C'DECNVT95',AL1(192),AL2(420)                
*                                                                               
*                                  NSI/NTI/POCKETPIECE                          
 DC C'J',AL2(LOW,HIGH),C'DENNO733',C'DECNVNTI',AL1(104),AL2(180)                
                                                                                
*                                  NSI/NTI/CBL                                  
 DC C'H',AL2(LOW,HIGH),C'DECN9109',C'DECNVCB2',AL1(104),AL2(100)                
 DC C'H',AL2(JUL_89,AUG_91),C'DECN8907',C'DECNVCB2',AL1(104),AL2(100)           
 DC C'H',AL2(LOW,JUN_89),C'DECN8501',C'DECNVCBL',AL1(104),AL2(100)              
*                                                                               
*                                  NSI/NTI/NAD                                  
 DC C'I',AL2(LOW,HIGH),C'DEAN9505',C'DECNVN95',AL1(222),AL2(300)                
*                                                                               
*                                  BBM RADIO SUMMARY                            
 DC C'K',AL2(NOV_87,HIGH),C'DESM8711',C'DECNVRAD',AL1(113),AL2(294)             
 DC C'K',AL2(LOW,OCT_87),C'DESM8701',C'DECNVRAD',AL1(113),AL2(294)              
*                                                                               
*                                  ARB/MPA                                      
 DC C'L',AL2(LOW,HIGH),C'DEAM8810',C'DECNVMPA',AL1(60),AL2(100)                 
*                                                                               
*                                  NSI/MPA                                      
 DC C'M',AL2(NOV_93,HIGH),C'DENM9311',C'DECNVMP2',AL1(62),AL2(100)              
 DC C'M',AL2(LOW,OCT_93),C'DENM8901',C'DECNVMPA',AL1(60),AL2(100)               
*                                                                               
*                                  LOCAL MONTHLIES TP (NSI TPT)                 
 DC C'N',AL2(SEP_10,HIGH),C'DELMTPI ',C'DELMTPO ',AL1(42),AL2(121)              
 DC C'N',AL2(JUL_04,AUG_10),C'DETN0407',C'DECNVTP3',AL1(37),AL2(100)            
 DC C'N',AL2(NOV_03,JUN_04),C'DETN0311',C'DECNVTP3',AL1(37),AL2(100)            
 DC C'N',AL2(OCT_93,OCT_03),C'DETN9310',C'DECNVTP3',AL1(37),AL2(100)            
 DC C'N',AL2(OCT_90,AUG_93),C'DETN9010',C'DECNVTP2',AL1(120),AL2(100)           
 DC C'N',AL2(JAN_89,AUG_90),C'DETN8901',C'DECNVTP2',AL1(120),AL2(100)           
 DC C'N',AL2(MAY_82,DEC_88),C'DETN8205',C'DECNVTPT',AL1(113),AL2(100)           
 DC C'N',AL2(LOW,APR_82),C'DELMTPI ',C'DELMTPO ',AL1(42),AL2(121)               
*                                                                               
*                                  ARB RADIO                                    
*                                  NEW RMR SUMMARY                              
 DC C'O',AL2(NOV_99,HIGH),C'DERA9911',C'DECNVR99',AL1(23),AL2(8*20)             
 DC C'O',AL2(FEB_96,OCT_99),C'DERA9602',C'DECNVR96',AL1(113),AL2(294)           
 DC C'O',AL2(JUL_89,JAN_96),C'DERA8907',C'DECNVRAD',AL1(113),AL2(294)           
 DC C'O',AL2(LOW,JUN_89),C'DERA8210',C'DECNVRAD',AL1(113),AL2(294)              
*                                                                               
*                                  BIRCH RADIO                                  
 DC C'P',AL2(FEB_90,HIGH),C'DERB9002',C'DECNVRAD',AL1(113),AL2(294)             
 DC C'P',AL2(LOW,JAN_90),C'DERB8210',C'DECNVRAD',AL1(113),AL2(294)              
*                                                                               
*                                  NSI WEEKLY METERED MARKET                    
 DC C'Q',AL1(YR_1993,WEEK_33),AL2(HIGH)                                         
        DC C'DEWN9333',C'DECNVTP3',AL1(37),AL2(100)                             
 DC C'Q',AL2(LOW),AL1(YR_1993,WEEK_32)                                          
        DC C'DEWN8733',C'DECNVTPT',AL1(113),AL2(100)                            
*                                                                               
*                                  SRC TPT                                      
 DC C'R',AL2(NOV_93,HIGH),C'DETS9311',C'DECNVTP3',AL1(37),AL2(160)              
 DC C'R',AL2(AUG_92,OCT_93),C'DETS9209',C'DECNVTPT',AL1(113),AL2(160)           
 DC C'R',AL2(LOW,JUL_92),C'DETS9011',C'DECNVTPT',AL1(113),AL2(160)              
*                                                                               
*                                  NSI/NHTI/NAD                                 
 DC C'T',AL2(LOW,HIGH),C'DEAH9501',C'DECNVH95',AL1(192),AL2(250)                
*                                                                               
*                                  FUSION                                       
 DC C'U',AL2(LOW,HIGH),C'DETF39I ',C'DETF39O ',AL1(22),AL2(57)                  
*                                                                               
*                                  RADAR RADIO                                  
 DC C'W',AL2(JAN_99,HIGH),C'DERR9902',C'DECNVR00',AL1(23),AL2(8*20)             
*                                                                               
*                                  CANADIAN CABLE                               
 DC C'X',AL2(LOW,HIGH),C'DECSN02I',C'DECSN02O',AL1(99),AL2(234)                 
*                                                                               
*                                  CABLE MOVIE GOER                             
 DC C'Y',AL2(LOW,HIGH),C'DECNMGI ',C'DECNMGO ',AL1(222),AL2(150)                
*                                                                               
*                                  COUNTY COVERAGE                              
 DC C'Z',AL2(LOW,HIGH),C'DECY93I ',C'DECY93O ',AL1(153),AL2(150)                
*                                                                               
*                                  NSI OVERNIGHTS QH                            
 DC X'90',AL2(LOW,HIGH),C'DEOTN110',C'DECNVTON',AL1(37),AL2(250)                
*                                                                               
*                                  NSI OVERNIGHTS PAV                           
 DC X'91',AL2(LOW,HIGH),C'DEONP804',C'DEONPAVO',AL1(37),AL2(250)                
*                                                                               
*                                  RADIO COUNTY COVERAGE                        
 DC X'92',AL2(LOW,HIGH),C'DERC09I ',C'DERC09O ',AL1(237),AL2(72)                
*                                                                               
*                                  TRITON RADIO                                 
 DC X'93',AL2(LOW,HIGH),C'DETR12I ',C'DETR12O ',AL1(23),AL2(8*20)               
*                                                                               
*                                  VIDEOLOGY                                    
 DC X'94',AL2(LOW,HIGH),C'DEVDTPI ',C'DEVDTPO ',AL1(42),AL2(121)                
*                                                                               
*                                  IHEART                                       
 DC X'95',AL2(LOW,HIGH),C'DEIH08I ',C'DECNIHO ',AL1(42),AL2(121)                
*                                  NCM LOCAL                                    
 DC X'96',AL2(LOW,HIGH),C'DELMNCM ',C'DELMNMO ',AL1(42),AL2(121)                
*                                                                               
 DC X'97',AL2(LOW,HIGH),C'DELMTWI ',C'DELMTWO ',AL1(42),AL2(121)                
*                                                                               
         DC    X'00'               EOT                                          
*                                                                               
LOW      EQU   0                                                                
HIGH     EQU   X'FFFF'                                                          
                                                                                
         PRINT NODATA                                                           
         EJECT                                                                  
* GLOBAL WORKING STORAGE                                                        
*                                                                               
DEMCONC  DS    0D                                                               
         DC    1500X'00'                                                        
         DC    A(OTAPE)                                                         
         DC    A(PARMTAB)                                                       
         DC    A(SRCTAB)                                                        
         DC    A(RREC)                                                          
         DC    A(IREC)                                                          
         DC    A(SREC)                                                          
         DC    A(WREC)                                                          
         DC    A(OREC)                                                          
         DC    A(PUTTAPE)                                                       
         DC    A(PRNTREC)                                                       
         DC    A(BLDREC)                                                        
         DC    A(PUTEL)                                                         
         DC    A(COMFACS)                                                       
         DC    A(0)                ASRTCARD                                     
         DC    A(0)                                                             
         DC    A(0)                AIPHASE                                      
         DC    A(0)                AOPHASE                                      
         DC    A(IOERR)            I/O ERROR                                    
         DC    A(PUTBUFF)                                                       
         DC    V(ADDAY)                                                         
         DC    V(CARDS)                                                         
         DC    V(CPRINT)                                                        
         DC    V(DATAMGR)                                                       
         DC    V(DATCON)                                                        
         DC    V(DATVAL)                                                        
         DC    3A(0)                                                            
         DC    V(DEDPTAC)                                                       
         DC    V(DERDTPT)                                                       
         DC    V(DEMKTAC)                                                       
         DC    A(0)                                                             
         DC    V(DUMPOUT)                                                       
         DC    2A(0)                                                            
         DC    V(GETDAY)                                                        
         DC    V(HEXOUT)                                                        
         DC    V(LOADER)                                                        
         DC    V(LOGIO)                                                         
         DC    V(NETWEEK)                                                       
         DC    V(HRTOQH)                                                        
         DC    V(QHTOHR)                                                        
         DC    A(0)                                                             
         DC    V(PRINT)                                                         
         DC    V(PRINTER)                                                       
         DC    V(SCANNER)                                                       
         DC    A(0)                                                             
         DC    V(SORTER)                                                        
         DC    A(0)                                                             
         DC    V(TIMVAL)                                                        
         DC    V(UNTIME)                                                        
         DC    V(XSORT)                                                         
         DC    V(HEXIN)                                                         
         DC    V(NSIWEEK)                                                       
         DC    A(MKTNAMES)         WAS V(LDCREC)                                
         DC    V(BINSRCH)                                                       
         DC    V(GETBROAD)                                                      
         DC    V(DECALUNV)                                                      
         DC    V(DECALVPH)                                                      
         DC    V(DECALPUT)                                                      
         DC    V(DENTIPRG)                                                      
         DC    A(BITMAP1)                                                       
         DC    A(BITMAP2)                                                       
         DC    A(NTIDDS)                                                        
         DC    A(0)                WAS A(DEGET01)                               
         DC    A(ESUB)             WAS A(PERVAL) NOW A(EMAIL SUBJECT)           
         DC    A(HLFBUF)           HPT 1/2HRS BUFFER                            
         DC    A(QHRBUF)           HPT 1/4HRS BUFFER                            
*                             NEW FIELDS FOR EMAIL FEATURE                      
         DC    A(ETAPE)                                                         
         DC    A(MREC)                                                          
         DC    V(TIMCON)                                                        
         DC    V(DYNALLOC)                                                      
         DC    A(DEPRNT2)          CALL V(PRINT2) TO WRITE TO SYSPRIN2          
*                                                                               
* COMMON FACILITIES LIST FOR DEMO LOOK-UPS                                      
COMFACS  DS    0D                                                               
         DC    V(DATAMGR)                                                       
         DC    4A(0)                                                            
         DC    V(HELLO)                                                         
         DC    V(SCANNER)                                                       
         DC    A(0)                                                             
         DC    V(HEXIN)                                                         
         DC    V(HEXOUT)                                                        
         DC    A(0)                                                             
         DC    V(DATVAL)                                                        
         DC    V(DATCON)                                                        
         DC    2A(0)                                                            
         DC    V(ADDAY)                                                         
         DC    V(GETDAY)                                                        
         DC    3A(0)                                                            
         DC    V(XSORT)                                                         
         DC    3A(0)                                                            
         DC    A(0)                V(DEMADDR)                                   
         DC    A(0)                V(DEMDISP)                                   
         DC    A(0)                V(DEMTABS)                                   
         DC    A(0)                V(DEMTABOF)                                  
         DC    A(0)                CT00AD3-D8 TABLES IN DATASPACE               
         DC    5A(0)                                                            
         DC    A(0)                V(DEMOUT)                                    
         DC    A(0)                V(DEMEL)                                     
         DC    A(0)                V(DEMAINT)                                   
         DC    A(0)                V(DEMAND)                                    
         DC    A(0)                V(DEMOMATH)                                  
         DC    A(0)                V(DEMOVAL)                                   
         DC    A(0)                                                             
         DC    A(0)                V(PERVAL)                                    
         DC    21A(0)                                                           
         DC    V(BINSRCH)                                                       
         DC    2A(0)                                                            
         DC    V(HELEN)                                                         
         DC    2A(0)                                                            
         DC    V(LOCKUP)                                                        
         DC    V(MASTC)            MASTC                                        
         DC    V(LOCKSPC)          LOCKSPACE                                    
         DC    5A(0)                                                            
         DC    A(0)                DEMOCON                                      
         DC    18A(0)                                                           
*                                                                               
* DCB FOR OUTPUT LOAD TAPE                                                      
*                                                                               
OTAPE    DCB   DDNAME=OTAPE,DSORG=PS,RECFM=VB,LRECL=2000,BLKSIZE=8200, *        
               MACRF=PM                                                         
         SPACE 2                                                                
* DCB FOR MESSAGE TAPE (TO BE EMAILED)                                          
*                                                                               
ETAPE    DCB   DDNAME=ETAPE,DSORG=PS,RECFM=VB,LRECL=250,BLKSIZE=2500,  *        
               MACRF=PM                                                         
         SPACE 2                                                                
* DCB FOR TEMPORARY BUFFER FILE (USED WHEN SORT=NO)                             
*                                                                               
TEMPBUF  DCB   DDNAME=TEMPBUF,DSORG=PS,RECFM=VB,LRECL=2000,            +        
               BLKSIZE=2004,MACRF=(GM,PM),EODAD=DEM50                           
         SPACE 2                                                                
* DCB FOR TRACE OUTPUT FILE (USED WHEN TRACEFIL=YES)                            
*                                                                               
TRACEFIL DCB   DDNAME=TRACEFIL,DSORG=PS,RECFM=FB,LRECL=1996,MACRF=PM            
*                                                                               
         EJECT                                                                  
********************************************************************            
* LOAD IPHASE AND OPHASE                                                        
* LOAD COMFACS ADDRESSES                                                        
********************************************************************            
LDPHASES NTR1  BASE=*,LABEL=*                                                   
* LOAD INPUT & OUTPUT PHASES                                                    
*                                                                               
         L     R3,ACOMFACS                                                      
         USING COMFACSD,R3                                                      
*                                                                               
         MVC   DUB,IPHASE                                                       
         GOTO1 VLOADER,DMCB,DUB,0,0                                             
         OC    4(4,R1),4(R1)                                                    
         BZ    LDPHAS10                                                         
         MVC   AIPHASE,4(R1)       SET A(INPUT PHASE)                           
         MVC   DUB,OPHASE                                                       
         GOTO1 (RF),(R1),DUB,0,0                                                
         OC    4(4,R1),4(R1)                                                    
         BZ    LDPHAS10                                                         
         MVC   AOPHASE,4(R1)       SET A(OUTPUT PHASE)                          
*                                                                               
         GOTO1 (RF),(R1),DEGET,0,0                                              
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMAND,4(R1)                                                    
*                                                                               
         GOTO1 (RF),(R1),DEGET01,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMAND1,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMADDR,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMADDR,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMOMATH,0,0                                           
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMOMTH,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMOUT,0,0                                             
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMOUT,4(R1)                                                    
*                                                                               
         GOTO1 (RF),(R1),DEMAINT,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMAINT,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMDISP,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CT00AD0,4(R1)                                                    
*                                                                               
         GOTO1 (RF),(R1),DEMEL,0,0                                              
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMEL,4(R1)                                                     
*                                                                               
         GOTO1 (RF),(R1),DEMOVAL,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMOVAL,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMTABS,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMTABS,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMTABOF,0,0                                           
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMTBOF,4(R1)                                                   
*                                                                               
         GOTO1 (RF),(R1),DEMOCON,0,0                                            
         OC    4(4,R1),4(R1)                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         MVC   CDEMOCON,4(R1)                                                   
*                                                                               
         B     LDPHASEX                                                         
*                                                                               
LDPHAS10 MVC   P,SPACES                                                         
         MVC   P(38),=C'PHASE XXXXXXXX NOT FOUND - RUN ABORTED'                 
         MVC   P+6(8),DUB                                                       
         GOTO1 VPRINTER                                                         
         ABEND 961                                                              
*                                                                               
LDPHASEX XIT1                                                                   
         LTORG                                                                  
         DROP  RB                                                               
         DROP  RA,R9                                                            
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO CREATE A NET MESSAGE LINE USING THE '00' DESCRIPTOR RECORD         
* FROM THE MIT FILES. THIS IS DONE FOR THE PURPOSE OF GENERATING AN             
* AUTONOTE NOTIFICATION EMAIL AFTER NATIONAL DATA HAS BEEN LOADED.              
*                                                                               
* AT CONVERSION TIME AN AUTONOTE* STYLE MESSAGE WILL BE WRITTEN TO THE          
* 'ETAPE' DATA SET OR THE VTS DEFINED VIA 'EFILE'.                              
*                                                                               
* AFTER THE LOAD JOB, ANOTHER STEP IN THE JCL WILL TAKE THE CONTENT OF          
* THE OUTPUT FILE OR TAPE AND WRITE IT TO THE CONSOLE. IF THE                   
* LINE STARTS WITH AUTONOTE* AN AUTOMATED EMAIL WILL BE GENERATED.              
*                                                                               
* THE OPERATOR IS RESPONSIBLE FOR DEFINING THE LOADTYPE (ORIGINAL,              
*  RELOAD, OR REISSUE).                                                         
* FOR ORIGINAL LOADS SEND EMAIL ONLY WHEN LIVE+7 IS LOADED TO AVOID             
*  EMAILS FOR EVERY STREAM. THIS ASSUMES THAT LIVE+7 IS LOADED LAST.            
*  EXCEPTION IS THE NTI DAILY DATA THAT GETS ONLY LIVE AND LIVE+SD              
*  DATA. IN THIS CASE SEND EMAIL WHEN LIVE+SD IS LOADED.                        
* NEVER SEND EMAILS FOR RELOADS. A GENERIC MESSAGE 'NO EMAIL' WILL BE           
*  WRITTEN TO THE FILE AND WILL END UP ON THE CONSOLE.                          
* ALWAYS SEND EMAILS FOR REISSUES.                                              
***********************************************************************         
NETMSG   NTR1  BASE=*,LABEL=*                                                   
         L     R5,ARREC            '00' RECORD FROM THE MIT FILE                
         LA    R5,4(R5)                                                         
         USING B0REC,R5                                                         
*                                                                               
         L     R6,AMREC            CREATE MESSAGE RECORD HERE                   
         LR    R3,R6               SAVE START OF MESSAGE AREA                   
         XC    0(4,R6),0(R6)                                                    
         LA    R6,4(R6)                                                         
         MVC   0(8,R6),=C'NO EMAIL' DEFAULT IS NO EMAIL                         
         LA    R6,8(R6)                                                         
*                                                                               
         CLI   LOADTYPE,LDRELDEQ   NEVER SEND EMAILS FOR RELOADS                
         BE    NETMS90                                                          
*                                                                               
         CLI   LOADTYPE,LDORIGEQ   FOR ORIGINAL LOADS SEND ONE EMAIL            
         BNE   NETMS30             FOR ALL STREAMS                              
*                                                                               
*EXCEPT FOR DAILIES, GENERATE MESSAGE WHEN LIVE+7 DATA IS CONVERTED             
         LA    RE,B0REPORT+L'B0REPORT-1  LAST CHAR OF REPORT NAME               
         LA    RF,B0REPORT                                                      
         CLC   =C'PRELIMINARY',B0REPORT  NTI DAILY DATA?                        
         BE    NETMS22                   YES                                    
NETMS10  CLI   0(RE),C' '          DETERMINE IF REPORT TITLE ENDS WITH          
         BNE   NETMS20             CHARACTER '7'                                
         SHI   RE,1                                                             
         CR    RE,RF               CHECK BOUNDARY                               
         BH    NETMS10                                                          
         DC    H'0'                                                             
NETMS20  CLI   0(RE),C'7'                                                       
         BNE   NETMS90             NOT LIVE+7, DON'T SEND EMAIL YET             
         B     NETMS30             LIVE+7. GENERATE MESSAGE                     
*                                                                               
*FOR DAILIES GENERATE MESSAGE WHEN LIVE+SD DATA IS CONVERTED. DAILIES           
*DON'T HAVE LIVE+7 DATA.                                                        
NETMS22  CLI   0(RE),C' '          DETERMINE IF REPORT TITLE ENDS WITH          
         BNE   NETMS24             CHARACTERS '3'                               
         SHI   RE,1                                                             
         CR    RE,RF               CHECK BOUNDARY                               
         BH    NETMS22                                                          
         DC    H'0'                                                             
NETMS24  SHI   RE,1                                                             
***      CLC   =C'SD',0(RE)                                                     
         CLC   =C'+3',0(RE)                                                     
         BNE   NETMS90             NOT LIVE+3, DON'T SEND EMAIL YET             
         MVC   B0REPORT(11),=CL11'NTI DAILY'                                    
*                                       OVERWRITE REPORT TITLE                  
*GENERATE MESSAGE                                                               
NETMS30  LR    R6,R3               MESSAGE OUTPUT AREA                          
         LA    R6,4(R6)            AUTONOTE* SYNTAX WILL CAUSE EMAIL            
         MVC   0(37,R6),=C'AUTONOTE*US-DEMOSTEAM@MEDIAOCEAN.COM:'               
         LA    R6,37(,R6)          BUMP PAST ADDRESSEE                          
*                                                                               
         MVC   0(L'B0REPORT,R6),B0REPORT    REPORT NAME                         
         LA    R6,L'B0REPORT(R6)                                                
         MVI   0(R6),C' '          CHARACTER AFTER REPORT NAME                  
NETMS40  CLI   0(R6),C' '          FIND LAST CHAR OF REPORT NAME                
         BNE   NETMS50                                                          
         SHI   R6,1                                                             
         CR    R6,R3               CHECK BOUNDARY                               
         BH    NETMS40                                                          
         DC    H'0'                                                             
*                                                                               
NETMS50  CLI   LOADTYPE,LDORIGEQ   FOR ORIGINAL LOADS, REMOVE                   
         BNE   NETMS70             STREAM INDICATOR FROM TITLE (LIVE..)         
NETMS60  CLC   =C'LIVE',0(R6)      BACKUP UNTIL I FIND THE WORD 'LIVE'          
         BE    NETMS80             AND REMOVE EVRYTNG AFTER THAT POINT          
         SHI   R6,1                                                             
         CR    R6,R3               CHECK BOUNDARY                               
         BH    NETMS60                                                          
         DC    H'0'                INVALID REPORT NAME                          
NETMS70  LA    R6,2(R6)            LEAVE A SPACE AND ADVANCE 1 CHAR             
*                                                                               
NETMS80  GOTO1 VDATCON,DMCB,(0,B0START+1),(10,(R6))  START DATE                 
         LA    R6,8(R6)                                                         
         MVI   0(R6),C'-'                                                       
         LA    R6,1(R6)                                                         
*                                                                               
         CLC   =C'NTI DAILY',B0REPORT  DON'T PRINT END DATE FOR DAILIES         
         BE    NETMS85                                                          
         GOTO1 VDATCON,DMCB,(0,B0END+1),(10,(R6))    END DATE                   
         LA    R6,8(R6)                                                         
         MVI   0(R6),C' '                                                       
         LA    R6,1(R6)                                                         
*                                                                               
NETMS85  CLI   LOADTYPE,LDREISEQ                                                
         BNE   NETMS90                                                          
         MVC   0(9,R6),=C'--REISSUE'                                            
         LA    R6,9(R6)                                                         
*                                                                               
NETMS90  SR    R6,R3               COMPUTE LENGTH OF MESSAGE RECORD             
         STC   R6,1(R3)                                                         
*                                                                               
         L     R2,AETAPE           PUT RECORD TO ETAPE                          
         PUT   (R2),(R3)                                                        
         XIT1                                                                   
         LTORG                                                                  
         DROP  R5,RB                                                            
         EJECT                                                                  
*                                                                               
* RECORD AREAS                                                                  
*                                                                               
MAX_RECLEN EQU 2000                                                             
*                                                                               
         DS    0D                                                               
         DC    C'**RREC**'                                                      
RREC     DS    (MAX_RECLEN)C                                                    
         DC    C'**IREC**'                                                      
IREC     DS    (MAX_RECLEN)C                                                    
         DC    C'**SREC**'                                                      
SREC     DS    (MAX_RECLEN)C                                                    
         DC    C'**WREC**'                                                      
WREC     DS    (MAX_RECLEN)C                                                    
         DC    C'**OREC**'                                                      
OREC     DS    (MAX_RECLEN)C                                                    
         DC    C'**ESUB**'         EMAIL SUBJECT                                
ESUB     DS    CL250                                                            
         DC    C'**MREC**'         MESSAGE AREA                                 
MREC     DS    CL250                                                            
         EJECT                                                                  
* EXTRA WORK AREAS/BUFFERS/TABLES ETC.                                          
*                                                                               
         DS    0D                                                               
         DC    C'*PUTBUF*'                                                      
PUTBUFF  DS    0D                  RDTPT/MKTAC ACCUMULATOR BUFFER               
         DS    168000F             200(ACCUMS)*7(DAYS)*80(QTRHRS)               
*                                                                               
         DC    C'*HLFBUF*'                                                      
HLFBUF   DS    0D                  HALF HOUR BUFFER (CABLE)                     
*********DC    33800X'00'          L'HPTD(APPX 352)* 96 QHRS=33792              
         DC    40000X'00'          L'HPTD INCREASED FOR CABLE(APPX 374)         
*                                                                               
         DC    C'*QHRBUF*'                                                      
QHRBUF   DS    0D                  QHR ACCUM BUFFER (CABLE)                     
*********DC    33800X'00'          L'HPTD*96QHRS                                
         DC    40000X'00'          L'HPTD INCREASED FOR CABLE(APPX 374)         
*                                                                               
DEWORKC  DS    0D                  REGISTER SAVE & WORK AREA                    
         DS    25000C                                                           
*                                                                               
UTL      DS    0D                                                               
         DC    4X'00',X'0C'        UTL FOR DEMOS SYSTEM                         
*                                                                               
BITMAP1  DS    0D                  BITMAP W/PRG NUMBERS USED                    
         DC    8193X'00'                                                        
*                                                                               
BITMAP2  DS    0D                  2ND BITMAP W/PRG NUMBERS USED                
         DC    8193X'00'                                                        
*                                                                               
NTIDDS   DS    0D                  NEW NTI-DDS PRG# ASSIGNMENTS                 
         DC    5000X'00'                                                        
         EJECT                                                                  
         DS    0L                                                               
         DC    CL16'****DEMCNVSSB***'                                           
* ++INCLUDE FASSBOFF                                                            
         PRINT OFF                                                              
       ++INCLUDE FASSBOFF                                                       
         PRINT ON                                                               
         ORG   SSOOFF                                                           
SSB      DC    XL(SSOOFFX-SSOOFF)'00'                                           
         ORG   SSOXTND                                                          
         DC    X'FF'               SET EXTENDED OFFLINE SSB                     
         ORG   SSOMTIND            SYSTEM DATAMGR FLAGS                         
         DC    AL1(SSOWRTN)        WRITE=NO (DON'T OPEN FOR UPDATE)             
         ORG                                                                    
         EJECT                                                                  
MASTC    CSECT                                                                  
       ++INCLUDE DDMASTC                                                        
         EJECT                                                                  
***********************************************************************         
* DSECT TO COVER THE '00' RECORD ON THE MIT FILES                               
***********************************************************************         
B0REC    DSECT                                                                  
B0SEQ    DS    CL2          1-2    C'00' - REPORT DESCRIPTOR RECORD             
         DS    CL41         3-43                                                
B0START  DS    CL7         44-50   CYYMMDD                                      
B0END    DS    CL7         51-57   CYYMMDD                                      
         DS    CL57        58-114                                               
B0REPORT DS    CL35        115-149 REPORT DESCRIPTION                           
*                                                                               
***********************************************************************         
* DSECT TO COVER PARMVAL WORKING STORAGE                                        
***********************************************************************         
PARMWRKD DSECT                                                                  
PARMSW   DS    X                   0=CARD EOF,1=VALID,2=ERROR                   
PARMFLD  DS    CL30                                                             
PARMHDR  DS    CL8                                                              
PARMCARD DS    CL80                                                             
PARMERR  DS    CL50                ERROR MESSAGE                                
NPARMS   DS    HL1                 NUMBER OF PARAMETERS ON CARD                 
PARMN    DS    HL1                                                              
NSUBFS   DS    HL1                 NUMBER OF SUBFIELDS                          
SUBFN    DS    HL1                                                              
PARMBLK1 DS    20CL82                                                           
PARMBLK2 DS    20CL82                                                           
PARMWRKX EQU   *                                                                
         SPACE 2                                                                
* DSECT TO COVER INPUT PARAMETER TABLE                                          
*                                                                               
PARMTABD DSECT                                                                  
PARMLEN  DS    HL1                 L'PARM TABLE ENTRY                           
PARMINDS DS    XL1                 INDICATORS                                   
*                                  X'80'=REQUIRED PARAMETER                     
*                                  X'40'=TERMINATOR CARD                        
*                                  X'20'=PARMADDR IS A(ROUTINE)                 
*                                  X'10'=PARMADDR IS A(TABLE)                   
*                                  X'08'=DEFAULT VALUE PRESENT                  
*                                  X'04'="GLOBAL" (ONLY SET ONCE)               
PARMVALS DS    XL1                 BITS SET BY VALIDATION ROUTINE               
*                                  X'80'=PARAMETER INPUT                        
PARMNUMF DS    HL1                 NUMBER OF SUB FIELDS PROCESSED               
PARMID   DS    CL8                 PARAMETER ID                                 
PARMMAXF DS    HL1                 MAXIMUM NUMBER OF SUB FIELDS                 
PARMMINI DS    HL1                 MINIMUM L'SUB FIELD                          
PARMMAXI DS    HL1                 MAXIMUM L'SUB FIELD                          
PARMADDR DS    AL3                 A(ROUTINE), A(TABLE) OR A(0)                 
PARMOUTA DS    S                   A(OUTPUT FIELD)                              
PARMOUTL DS    HL1                 L'OUTPUT FIELD-1                             
PARMDVAL DS    0X                  DEFAULT VALUE OF OUTPUT FIELD                
         EJECT                                                                  
* DSECT TO COVER PRNTREC WORKING STORAGE                                        
*                                                                               
PRNTWRKD DSECT                                                                  
PRNTDUB  DS    D                                                                
PRNTDUB2 DS    D                                                                
PRNTDMCB DS    6F                                                               
PRNTNEXT DS    A                   A(CURRENT PRINT SPEC)                        
PRNTSTLN DS    0F                                                               
PRNTSTRT DS    H                   START DISPLACEMENT                           
PRNTLEN  DS    H                   DISPLAY LENGTH                               
PRNTPARM DS    0XL16                                                            
PRNTRTYP DS    0CL1                RECORD TYPE                                  
PRNTAREC DS    A                   A(RECORD)                                    
PRNTRECL DS    F                   L'RECORD                                     
PRNTSPEC DS    A                   A(PRINT SPEC)                                
PRNTESPC DS    A                   A(PRINT ELEM SPEC)                           
PRNTNBLK DS    H                   # OF BLOCKS TO BREAK ELEM INTO               
PRNTFSZE DS    H                   SIZE OF FIELD, MAX = 7                       
PRNTSVR4 DS    A                   SAVE R4, R4-->INTO ELEM                      
PRNTSVRE DS    A                   SAVE RE                                      
PRNTCNT  DS    HL1                 N'PRINT SPECS                                
PRNTNBKL DS    HL1                 # OF BLOCKS ON PRINT LINE                    
PRNTFLAG DS    X                                                                
PFLGDDTA EQU   X'80'                ELEMENT IS DEMO DATA                        
PRNTHEX  DS    2CL80                                                            
PRNTWRKX EQU   *                                                                
PRNTBSZE EQU   8                   FIXED SIZE OF BLOCK                          
         SPACE 2                                                                
* DSECT TO COVER SOURCE TABLE                                                   
*                                                                               
SRCTABD  DSECT                                                                  
SRCCODE  DS    C                   SOURCE CODE (SRCSW)                          
SRCSTART DS    XL2                 START BOOK (BINARY YYMM)                     
SRCEND   DS    XL2                 END BOOK (BINARY YYMM)                       
SRCIPHS  DS    CL8                 INPUT PHASE NAME                             
SRCOPHS  DS    CL8                 OUTPUT PHASE NAME                            
SRCLINT  DS    HL1                 L'ALPHA DATA IN INTERIM RECORD               
SRCNUMAC DS    HL2                 N'ACCUMS IN INTERIM RECORD                   
SRCLEN   EQU   *-SRCTABD                                                        
       ++INCLUDE DDCOMFACS                                                      
         EJECT                                                                  
       ++INCLUDE DEDEMCNVD                                                      
         EJECT                                                                  
* DEINTD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DEINTD                                                         
         PRINT ON                                                               
         SPACE 2                                                                
* DDMONYREQU                                                                    
* DDDPRINT                                                                      
* DDPERVALD                                                                     
* DEDEMTABD                                                                     
* DDSMTPD                                                                       
         PRINT OFF                                                              
         EJECT                                                                  
       ++INCLUDE DDMONYREQU                                                     
         EJECT                                                                  
       ++INCLUDE DDDPRINT                                                       
         EJECT                                                                  
       ++INCLUDE DDPERVALD                                                      
         EJECT                                                                  
       ++INCLUDE DEDEMTABD                                                      
         EJECT                                                                  
       ++INCLUDE DDSMTPD                                                        
         PRINT ON                                                               
         SPACE 2                                                                
         IHAASCB                                                                
         IHAASSB                                                                
         IAZJSAB                                                                
         IEFZB4D0                                                               
         IEFZB4D2                                                               
         SPACE 2                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'136DEDEMCNV  01/25/21'                                      
         END                                                                    
