*          DATA SET ACPRESENT  AT LEVEL 019 AS OF 01/17/06                      
*CATALP PRESENT                                                                 
         TITLE 'ACPRESENT - PRODUCTION MASTER FILE RECORD LOOP'                 
PRESENT  CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKL,**PSNT**,RA,RR=R4,CLEAR=YES                                
         LR    R9,RC                                                            
         USING WORKD,R9                                                         
         LR    R8,R1                                                            
         USING PSNTBLKD,R8                                                      
         L     R7,PSNTCOMF                                                      
         USING COMFACSD,R7                                                      
         ST    R4,RELO                                                          
         MVC   USERRD,4(RD)                                                     
         MVI   SPACES,C' '                                                      
         MVC   SPACES+1(L'SPACES-1),SPACES                                      
*                                                                               
         ZIC   RE,PSNTLCLI         CONVERT SUPPLIED HEIRARCHY TO                
         STC   RE,LCLI                 LOCAL COMPOSITE VALUES                   
         ZIC   RF,PSNTLPRO                                                      
         AR    RE,RF                                                            
         STC   RE,LCLIPRO          LCLIPRO = L'CLIENT + 'LPRODUCT               
         ZIC   RF,PSNTLJOB                                                      
         AR    RE,RF                                                            
         STC   RE,LCLIJOB          LCLIJOB = L'CLI + L'PRO + L'JOB              
         EJECT                                                                  
* LOOP THROUGH THE RECORDS FOR THE SPECIFIED RECORD AND FILTER                  
* TYPE AND PASS THEM TO THE HOOK.                                               
*                                                                               
RECLOOP  LA    R2,BIGKEY           R2 = A(BIGKEY)                               
         LA    R3,RECFILT          R3 = A(RECORD/FILTER/ROUTINES TABLE)         
         USING RECFILTD,R3                                                      
         MVI   PSNTMATF,C'N'       NOT YET FOUND A MATCH                        
*                                                                               
RL10     CLI   RECFRTYP,0          IF END OF TABLE REACHED THEN DONE            
         BE    RLX                                                              
*                                                                               
         CLC   PSNTRTYP,RECFRTYP   IF RECORD/FILTER TYPES DON'T MATCH           
         BNE   RL100                   THEN BUMP TO NEXT TABLE ENTRY            
         CLC   PSNTFTYP,RECFFTYP                                                
         BNE   RL100                                                            
*                                                                               
         MVI   PSNTMATF,C'Y'       FOUND A MATCH - PROCESS ENTRY                
*                                                                               
         MVC   PSNTBTYP,RECFHTYP   SET RECORD TYPE FOR HOOK                     
         MVC   RAPTYPE,RECFRAPK    SAVE RAP KEY RECORD TYPE                     
*                                                                               
         L     RF,RECFAFST         GET FIRST KEY                                
         A     RF,RELO                                                          
         BASR  RE,RF                                                            
*                                                                               
RL50     BNE   RL100               IF END OF KEYS THEN NEXT RECFILT             
*                                                                               
         GOTO1 GETREC              GET THE RECORD                               
*                                                                               
         BAS   RE,CALLHOOK         CALL THE HOOK                                
*                                                                               
         L     RF,RECFANXT         GET NEXT KEY                                 
         A     RF,RELO                                                          
         BASR  RE,RF                                                            
         B     RL50                AND LOOP BACK                                
*                                                                               
RL100    LA    R3,RECFILTL(R3)     BUMP TO NEXT RECFILT TABLE ENTRY             
         B     RL10                AND LOOP BACK                                
*                                                                               
RLX      B     XIT                                                              
         DROP  R3                                                               
*                                                                               
* RAP NTR1/XIT1 AROUND THE CALL TO HOOK FOR AUTOMATIC RESTORATION               
* OF REGISTERS.                                                                 
*                                                                               
CALLHOOK NTR1  ,                                                                
         L     RF,PSNTHOOK         CALL THE HOOK                                
         L     RE,USERRD                                                        
         LM    R0,RC,20(RE)                                                     
         GOTO1 (RF),DMCB                                                        
         XIT1                                                                   
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL MEDIA GROUP KEY FOR FILTER TYPE               
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING MGRRECD,R2                                                       
*                                                                               
FSTMGAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD MEDIA GROUP START KEY                  
         MVI   MGRKTYP,MGRKTYPQ                                                 
         MVI   MGRKSUB,MGRKSUBQ                                                 
         MVC   MGRKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NMGAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT MEDIA GROUP KEY FOR FILTER TYPE 'ALL'.            
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTMGAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NMGAL50  CLC   BIGKEY(MGRKCODE-MGRKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL MEDIA KEY FOR FILTER TYPE                     
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING PMDRECD,R2                                                       
*                                                                               
FSTMDAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD MEDIA START KEY                        
         MVI   PMDKTYP,PMDKTYPQ                                                 
         MVC   PMDKCPY,PSNTCUL                                                  
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NMDAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT MEDIA KEY FOR FILTER TYPE 'ALL'.                  
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTMDAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NMDAL50  CLC   BIGKEY(PMDKMED-PMDKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL OFFICE GROUP KEY FOR FILTER TYPE              
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING OGRRECD,R2                                                       
*                                                                               
FSTOGAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD OFFICE GROUP START KEY                 
         MVI   OGRKTYP,OGRKTYPQ                                                 
         MVI   OGRKSUB,OGRKGRPQ                                                 
         MVC   OGRKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NOGAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT OFFICE GROUP KEY FOR FILTER TYPE 'ALL'.           
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTOGAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NOGAL50  CLC   BIGKEY(OGRKCODE-OGRKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL OFFICE KEY FOR FILTER TYPE                    
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING OGRRECD,R2                                                       
*                                                                               
FSTOFAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD OFFICE START KEY                       
         MVI   OGRKTYP,OGRKTYPQ                                                 
         MVI   OGRKSUB,OGRKOFFQ                                                 
         MVC   OGRKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NOFAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT OFFICE GROUP KEY FOR FILTER TYPE 'ALL'.           
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTOFAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NOFAL50  CLC   BIGKEY(OGRKCODE-OGRKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL WORK GROUP KEY FOR FILTER TYPE                
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING WGRRECD,R2                                                       
*                                                                               
FSTWGAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD WORK GROUP START KEY                   
         MVI   WGRKTYP,WGRKTYPQ                                                 
         MVI   WGRKSUB,WGRKSUBQ                                                 
         MVC   WGRKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NWGAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT WORK GROUP KEY FOR FILTER TYPE 'ALL'.             
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTWGAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NWGAL50  CLC   BIGKEY(WGRKCODE-WGRKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL WORKCODE KEY FOR FILTER TYPE                  
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING WCORECD,R2                                                       
*                                                                               
FSTWCAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD WORKCODE START KEY                     
         MVI   WCOKTYP,WCOKTYPQ                                                 
         MVC   WCOKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NWCAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT WORKCODE KEY FOR FILTER TYPE 'ALL'.               
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTWCAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NWCAL50  CLC   BIGKEY(WCOKWRK-WCOKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL SCHEME KEY FOR FILTER TYPE                    
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING SCHRECD,R2                                                       
*                                                                               
FSTSCAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD SCHEME START KEY                       
         MVI   SCHKTYP,SCHKTYPQ                                                 
         MVI   SCHKSUB,SCHKSUBQ                                                 
         MVC   SCHKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NSCAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT SCHEME KEY FOR FILTER TYPE 'ALL'.                 
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTSCAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NSCAL50  CLC   BIGKEY(SCHKCODE-SCHKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL CATEGORY KEY FOR FILTER TYPE                  
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING CATRECD,R2                                                       
*                                                                               
FSTCWAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD CATEGORY START KEY                     
         MVI   CATKTYP,CATKTYPQ                                                 
         MVI   CATKSUB,CATKSUBQ                                                 
         MVC   CATKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NCWAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT CATEGORY KEY FOR FILTER TYPE 'ALL'.               
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTCWAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NCWAL50  CLC   BIGKEY(CATKSCH-CATKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL CLIENT KEY FOR FILTER TYPE                    
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING ACTRECD,R2                                                       
*                                                                               
FSTCLAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD CLIENT START KEY                       
         MVC   ACTKCPY(3),PSNTCUL                                               
         MVI   ACTKACT,X'41'                                                    
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NCLAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT CLIENT KEY FOR FILTER TYPE 'ALL'.                 
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTCLAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NCLAL50  CLC   BIGKEY(ACTKACT-ACTKEY),KEYSAVE                                   
         BNE   XIT                                                              
*                                                                               
         ZIC   RF,LCLI             IF CLIENT RECORD THEN RETURN 'YES'           
         LA    RF,ACTKACT(RF)                                                   
         CLI   0(RF),C' '                                                       
         BE    YES                                                              
*                                                                               
         MVI   0(RF),X'FF'         ELSE SET KEY FOR NEXT CLIENT                 
         GOTO1 HIGH                READ NEXT KEY                                
         B     NCLAL50             AND LOOP BACK                                
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL PRODUCT KEY FOR FILTER TYPE                   
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING ACTRECD,R2                                                       
*                                                                               
FSTPRAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD CLIENT START KEY                       
         MVC   ACTKCPY(3),PSNTCUL                                               
         MVI   ACTKACT,X'41'                                                    
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NPRAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT PRODUCT KEY FOR FILTER TYPE 'ALL'.                
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTPRAL  NTR1  ,                                                                
*                                                                               
NPRAL10  GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NPRAL50  CLC   BIGKEY(ACTKACT-ACTKEY),KEYSAVE                                   
         BNE   XIT                                                              
*                                                                               
         ZIC   RF,LCLI             IF NO PRODUCT IN KEY THEN NEXT KEY           
         LA    RF,ACTKACT(RF)                                                   
         CLI   0(RF),C' '                                                       
         BE    NPRAL10                                                          
*                                                                               
         ZIC   RF,LCLIPRO          IF PRODUCT RECORD THEN RETURN 'YES'          
         LA    RF,ACTKACT(RF)                                                   
         CLI   0(RF),C' '                                                       
         BE    YES                                                              
*                                                                               
         MVI   0(RF),X'FF'         ELSE SET KEY FOR NEXT PRODUCT                
         GOTO1 HIGH                READ NEXT KEY                                
         B     NPRAL50             AND LOOP BACK                                
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL JOB KEY FOR FILTER TYPE                       
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING ACTRECD,R2                                                       
*                                                                               
FSTJBAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD CLIENT START KEY                       
         MVC   ACTKCPY(3),PSNTCUL                                               
         MVI   ACTKACT,X'41'                                                    
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NJBAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT JOB KEY FOR FILTER TYPE 'ALL'.                    
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTJBAL  NTR1  ,                                                                
*                                                                               
NJBAL10  GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NJBAL50  CLC   BIGKEY(ACTKACT-ACTKEY),KEYSAVE                                   
         BNE   XIT                                                              
*                                                                               
         ZIC   RF,LCLIPRO          IF NO JOB IN KEY THEN NEXT KEY               
         LA    RF,ACTKACT(RF)                                                   
         CLI   0(RF),C' '                                                       
         BE    NJBAL10                                                          
*                                                                               
         ZIC   RF,LCLIJOB          IF JOB RECORD THEN EXCLUDE CLOSED            
         LA    RF,ACTKACT(RF)      JOBS AND RETURN YES FOR OPEN ONES            
         CLI   0(RF),C' '          TEST FOR JOB RECORD                          
         BNE   NJBAL60             NO                                           
         TM    ACTKSTAT,ACTSCLOS   JOB CLOSED?                                  
         BZ    YES                 NO, PASS IT                                  
         CLI   PSNTCLS,C'Y'        YES, DO YOU WANT CLOSED JOBS?                
         BE    YES                 YES, PASS IT                                 
*                                                                               
NJBAL60  MVI   0(RF),X'FF'         ELSE SET KEY FOR NEXT JOB                    
         GOTO1 HIGH                READ NEXT KEY                                
         B     NJBAL50             AND LOOP BACK                                
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE INITIAL SUPPLIER KEY FOR FILTER TYPE                  
* 'ALL'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
*                                                                               
FSTSPAL  NTR1  ,                                                                
         BAS   RE,GETCPY                                                        
         MVC   HALF,SUPPLEDG       SET UNIT/LEDGER CODE                         
         B     FSTSP10                                                          
*                                                                               
FSTSWAL  NTR1  ,                                                                
         BAS   RE,GETCPY                                                        
         OC    XSUPLEDG,XSUPLEDG   TEST FOR EXTRA SUPPLIER LEDGER               
         BZ    NO                                                               
         MVC   HALF,XSUPLEDG                                                    
         B     FSTSP10                                                          
*                                                                               
FSTP1AL  NTR1  ,                                                                
         BAS   RE,GETCPY                                                        
         CLI   PSUPLEDG,C' '       ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG                                               
         B     FSTSP10                                                          
*                                                                               
FSTP2AL  NTR1  ,                                                                
         CLI   PSUPLEDG+1,C' '     ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG+1                                             
         B     FSTSP10                                                          
*                                                                               
FSTP3AL  NTR1  ,                                                                
         CLI   PSUPLEDG+2,C' '     ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG+2                                             
         B     FSTSP10                                                          
*                                                                               
FSTP4AL  NTR1  ,                                                                
         CLI   PSUPLEDG+3,C' '     ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG+3                                             
         B     FSTSP10                                                          
*                                                                               
FSTP5AL  NTR1  ,                                                                
         CLI   PSUPLEDG+4,C' '     ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG+4                                             
         B     FSTSP10                                                          
*                                                                               
FSTP6AL  NTR1  ,                                                                
         CLI   PSUPLEDG+5,C' '     ANY PRESTO LEDGERS                           
         BE    NO                                                               
         MVC   HALF(1),SUPPLEDG                                                 
         MVC   HALF+1(1),PSUPLEDG+5                                             
         B     FSTSP10                                                          
*                                                                               
         USING ACTRECD,R2                                                       
FSTSP10  XC    BIGKEY,BIGKEY       BUILD SUPPLIER START KEY                     
         MVC   ACTKCPY(1),PSNTCUL                                               
         MVC   ACTKCPY+1(2),HALF                                                
         MVI   ACTKACT,X'41'                                                    
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NSPAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT SUPPLIER KEY FOR FILTER TYPE 'ALL'.               
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTSPAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP1AL  NTR1  ,                                                                
         CLI   PSUPLEDG,C' '                                                    
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP2AL  NTR1  ,                                                                
         CLI   PSUPLEDG+1,C' '                                                  
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP3AL  NTR1  ,                                                                
         CLI   PSUPLEDG+2,C' '                                                  
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP4AL  NTR1  ,                                                                
         CLI   PSUPLEDG+3,C' '                                                  
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP5AL  NTR1  ,                                                                
         CLI   PSUPLEDG+4,C' '                                                  
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTP6AL  NTR1  ,                                                                
         CLI   PSUPLEDG+5,C' '                                                  
         BE    XIT                                                              
         GOTO1 SEQ                 GET NEXT KEY                                 
         B     NSPAL50                                                          
*                                                                               
NXTSWAL  NTR1  ,                                                                
         OC    XSUPLEDG,XSUPLEDG   TEST FOR EXTRA SUPPLIER LEDGER               
         BZ    XIT                                                              
         GOTO1 SEQ                                                              
*                                                                               
*                                  TEST FOR END                                 
NSPAL50  CLC   BIGKEY(ACTKACT-ACTKEY),KEYSAVE                                   
         BNE   XIT                                                              
*                                                                               
         CLI   BIGKEY+ACTKEND,C' ' TEST THAT IT IS AN ACCOUNT                   
         BE    XIT                                                              
*                                  BUMP TO NEXT ACCOUNT                         
         MVI   BIGKEY+ACTKEND,X'FF'                                             
         GOTO1 HIGH                                                             
         B     NSPAL50                                                          
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE COMPANY KEY FOR FILTER TYPE 'ALL' (THERE              
* IS ONLY ONE) AND DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE               
* AND RETURNS THE CONDITION CODE.                                               
*                                                                               
         USING ACTRECD,R2                                                       
*                                                                               
FSTAGAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD COMPANY KEY                            
         MVC   ACTKCPY(1),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY AND TEST FOUND                 
         CLC   BIGKEY(1),PSNTCUL                                                
         B     XIT                                                              
*                                                                               
* THIS ROUTINE RETURNS NO BECAUSE THERE IS ONLY ONE COMPANY RECORD.             
*                                                                               
NXTAGAL  NTR1  ,                                                                
         B     NO                                                               
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE OFFICE LIST KEY FOR FILTER TYPE 'ALL'                 
* AND DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE                            
* AND RETURNS THE CONDITION CODE.                                               
*                                                                               
         USING OFFRECD,R2                                                       
*                                                                               
FSTOLAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD OFFICE LIST KEY                        
         MVI   OFFKTYP,OFFKTYPQ                                                 
         MVC   OFFKCPY,PSNTCUL     COMPANY CODE                                 
*                                                                               
         GOTO1 HIGH                GET FIRST KEY AND TEST FOUND                 
         B     NOLAL50                                                          
*                                                                               
NXTOLAL  NTR1  ,                                                                
*                                                                               
NOLAL10  GOTO1 SEQ                                                              
*                                                                               
NOLAL50  CLC   OFFKEY(2),KEYSAVE                                                
         BNE   XIT                                                              
*                                                                               
         TM    OFFKSTAT,OFFSLIST   TEST FOR OFFICE LIST                         
         BZ    NOLAL10             NO-GET NEXT ONE                              
*                                                                               
         CLC   OFFKOFFC,SPACES     TEST FOR EFFECTIVE DATE TYPE KEYS            
         BNE   NOLAL10             YES-GET NEXT ONE                             
*                                                                               
         B     YES                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE PRICE LIST KEY FOR FILTER TYPE 'ALL' AND              
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING PRLRECD,R2                                                       
*                                                                               
FSTPLAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD PRICE LIST START KEY                   
         MVI   PRLKTYP,PRLKTYPQ                                                 
         MVC   PRLKCPY,PSNTCUL                                                  
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NPLAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT PRICE LIST KEY FOR FILTER TYPE 'ALL'.             
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTPLAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NPLAL50  CLC   BIGKEY(PRLKNUM-PRLKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE TAX RULE KEY FOR FILTER TYPE 'ALL' AND                
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING TAXRECD,R2                                                       
*                                                                               
FSTTXAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD TAX RULE START KEY                     
         MVI   TAXKTYP,TAXKTYPQ                                                 
         MVC   TAXKCPY,PSNTCUL                                                  
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NTXAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT TAX LIST KEY FOR FILTER TYPE 'ALL'.               
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTTXAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NTXAL50  CLC   BIGKEY(TAXKCPY+L'TAXKCPY-TAXKEY),KEYSAVE                         
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE OPTION KEY FOR FILTER TYPE 'ALL' AND                  
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING POPRECD,R2                                                       
*                                                                               
FSTOPAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD TAX RULE START KEY                     
         MVI   POPKTYP,POPKTYPQ                                                 
         MVI   POPKSUB,POPKSUBQ                                                 
         MVC   POPKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NOPAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT OPTION KEY FOR FILTER TYPE 'ALL'.                 
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTOPAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NOPAL50  CLC   BIGKEY(POPKOFG-POPKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE USER FIELD KEY FOR 'ALL' AND                          
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING UFSRECD,R2                                                       
*                                                                               
FSTUSAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD USER FIELD START KEY                   
         MVI   UFSKTYP,UFSKTYPQ                                                 
         MVI   UFSKSUB,UFSKSUBQ                                                 
         MVC   UFSKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NUSAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT USER FIELD FOR FILTER TYPE 'ALL'.                 
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTUSAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NUSAL50  CLC   BIGKEY(UFSKOFG-UFSKEY),KEYSAVE                                   
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE LEDGER KEY FOR 'LES' AND                              
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING LDGRECD,R2                                                       
*                                                                               
FSTLSAL  NTR1  ,                                                                
         MVC   LDGKEY,SPACES       BUILD LEDGER START KEY                       
         MVC   LDGKCPY,PSNTCUL     COMPANY ONLY                                 
         MVI   LDGKUNT,X'41'       GET FIRST UNIT                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NLSAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT LEDGER FOR FILTER TYPE 'LES'.                     
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTLSAL  NTR1  ,                                                                
*                                                                               
*                                  TEST FOR END                                 
NLSAL50  ZIC   R1,LDGKLDG          GET NEXT LEDGER                              
         AHI   R1,1                                                             
         STC   R1,LDGKLDG                                                       
         GOTO1 HIGH                                                             
         CLC   BIGKEY(LDGKUNT-LDGKEY),KEYSAVE                                   
         BNE   XIT                                                              
         CLI   LDGKLDG,C' '                                                     
         BE    NLSAL50                                                          
         CLC   BIGKEY+LDGKEND(L'LDGKEY-LDGKEND),SPACES                          
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE 1R LEDGER KEY FOR 'LEN' AND                           
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING LDGRECD,R2                                                       
*                                                                               
FSTLNAL  NTR1  ,                                                                
         MVC   LDGKEY,SPACES       BUILD LEDGER START KEY                       
         MVC   LDGKCPY,PSNTCUL     COMPANY ONLY                                 
         MVI   LDGKUNT,C'1'                                                     
         MVI   LDGKLDG,C'R'                                                     
         LA    R1,LDGKLDG                                                       
         ZIC   RE,PSNTLOFF         LENGTH OF OFFICE CODE                        
         AR    R1,RE               ADD TO POINT TO LAST BYTE OF OFFICE          
         MVI   0(R1),X'41'         TO GET FIRST OFFICE RECORD                   
*                                                                               
         GOTO1 HIGH                1R LEDGER RECORD                             
         B     NLNAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT LEDGER FOR FILTER TYPE 'LEN'.                     
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTLNAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NLNAL50  CLC   BIGKEY(LDGKEND),KEYSAVE                                          
         BNE   XIT                                                              
*                                                                               
* POINT TO FIRST BYTE AFTER SUB-DEPT CODE                                       
         LA    R1,LDGKEY+LDGKEND   OFFICE CODE                                  
         ZIC   RE,PSNTLOFF         LENGTH OF OFFICE CODE                        
         ZIC   RF,PSNTLDEP         LENGTH OF DEPT CODE                          
         AR    RE,RF               ADD LENGTH OF DEPT CODE                      
         ZIC   RF,PSNTLSUB         LENGTH OF SUB-DEPT CODE                      
         AR    RE,RF               ADD LENGTH OF SUB-DEPT CODE                  
         AR    R1,RE               ADD LENGTH OF OFF + DEPT + SUB-DEPT          
*                                                                               
* MAKE SURE IT'S AN OFFICE, DEPT, OR SUB-DEPT LEVEL RECORD                      
* BY MAKING SURE THE REST OF THE KEY ARE SPACES                                 
         LNR   RE,RE                                                            
         AHI   RE,L'LDGKEY-LDGKEND-1                                            
         EX    RE,*+8                                                           
         B     *+10                                                             
         CLC   0(0,R1),SPACES                                                   
         BE    XIT                                                              
*                                                                               
* 1F IT ISN'T ADD 1 TO SUBDEPT AND CLEAR OUT THE REST OF KEY TO SKIP            
*  LOWER LEVEL RECORDS                                                          
         EX    RE,*+8                                                           
         B     *+10                                                             
         XC    0(0,R1),0(R1)                                                    
         SHI   R1,1                                                             
         ZIC   RE,0(R1)                                                         
         AHI   RE,1                                                             
         STC   RE,0(R1)                                                         
         GOTO1 HIGH                                                             
         B     NLNAL50                                                          
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE PERSON KEY FOR 'PER' AND                              
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING PERRECD,R2                                                       
*                                                                               
FSTPEAL  NTR1  ,                                                                
         MVC   PERKEY,SPACES       BUILD PERSON START KEY                       
         MVI   PERKTYP,PERKTYPQ    PERSON RECORD TYPE                           
         MVC   PERKCPY,PSNTCUL     COMPANY ONLY                                 
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NPEAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT LEDGER FOR FILTER TYPE 'PER'.                     
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTPEAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NPEAL50  CLC   BIGKEY(PERKCODE-PERKEY),KEYSAVE                                  
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
* THIS ROUTINE BUILDS THE RATE KEY FOR 'RAT' AND                                
* DOES A READHI.  IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE                
* CONDITION CODE.                                                               
*                                                                               
         USING PCRRECD,R2                                                       
*                                                                               
FSTRAAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD RATE START KEY                         
         MVI   PCRKTYP,PCRKTYPQ    RATE RECORD TYPE X'2A'                       
         MVC   PCRKCPY,PSNTCUL     COMPANY ONLY                                 
*                                                                               
*&&UK                                                                           
         CLI   PSNTCTRY,CTRYGERQ   CHECK IF COUNTRY = GERMANY                   
         JE    *+16                                                             
         TM    PSNTSTA7,CPYSTMSY   TIME MANAGEMENT SYSTEM IN USE                
         JZ    *+8                                                              
         MVI   PCRKTYP,PCRKTMSQ    X'29' RECORD                                 
*&&                                                                             
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NRAAL50             TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT LEDGER FOR FILTER TYPE 'RAT'.                     
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTRAAL  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
*&&US                                                                           
NRAAL50  CLC   BIGKEY(PCHKDOF-PCHKEY),KEYSAVE                                   
*&&                                                                             
*&&UK                                                                           
NRAAL50  CLC   BIGKEY(PCHKPER-PCHKEY),KEYSAVE                                   
*&&                                                                             
         B     XIT                                                              
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
* THIS ROUTINE BUILDS THE INITIAL EST KEY FOR FILTER TYPE                       
* 'EAP'  AND DOES A READHI TO START THE READ LOOP.  IT COMPARES THE             
* KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                                
*                                                                               
         USING EVERECD,R2                                                       
*                                                                               
FSTESAL  NTR1  ,                                                                
         XC    BIGKEY,BIGKEY       BUILD CLIENT START KEY                       
         MVI   EVEKTYP,EVEKTYPQ                                                 
         MVI   EVEKSUB,EVEKSUBQ                                                 
         MVC   EVEKCPY(3),PSNTCUL                                               
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NESAL50             TEST FOR END                                 
*                                                                               
*                                                                               
* THIS ROUTINE READS THE NEXT JOB KEY FOR FILTER TYPE 'EAP'.                    
* IT COMPARES THE KEY TO KEYSAVE AND RETURNS THE CONDITION CODE.                
*                                                                               
NXTESAL  NTR1  ,                                                                
*                                                                               
NESAL10  GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
* TEST IF ITS A ESTIMATE                                                        
NESAL50  CLC   BIGKEY(EVEKCLI-EVEKEY),KEYSAVE                                   
         BNE   XIT                                                              
*                                                                               
* TEST IF ITS A REVISION                                                        
         CLI   EVEKTYPE,EVEKTREV                                                
         BE    NESAL70             YES                                          
         BH    NESAL60             NO MORE REVISIONS                            
         MVI   EVEKTYPE,EVEKTREV   READ FOR A REVISION                          
         B     NESAL100                                                         
*                                                                               
NESAL60  MVI   EVEKTYPE,X'FF'      READ FOR NEXT JOB                            
         B     NESAL100                                                         
*                                                                               
* CHECK THAT OTHER FIELDS ARE ZEROES.                                           
NESAL70  OC    EVEKWC(EVEKSTA-EVEKWC),EVEKWC                                    
         BZ    NESAL80                                                          
         MVC   EVEKWC,=X'FFFF'                                                  
         B     NESAL100                                                         
         DROP  R2                                                               
*                                                                               
* READ THE JOB RECORD TO SEE IF IT IS CLOSED                                    
NESAL80  MVC   SAVEKEY,BIGKEY                                                   
         LA    R6,SAVEKEY                                                       
         USING EVERECD,R6                                                       
         USING ACTRECD,R2                                                       
         XC    BIGKEY,BIGKEY       BUILD CLIENT START KEY                       
         MVC   ACTKCPY(3),PSNTCUL                                               
         LA    R3,ACTKACT                                                       
         ZIC   R1,PSNTLCLI         LENGTH OF CLIENT                             
         AR    R3,R1               POINT TO LOCATION OF PRODUCT CODE            
         BCTR  R1,0                                                             
         EX    R1,*+4                                                           
         MVC   ACTKACT(0),EVEKCLI                                               
         ZIC   R1,PSNTLPRO         LENGTH OF PRODUCT                            
         LR    R4,R1                                                            
         BCTR  R1,0                                                             
         EX    R1,*+4                                                           
         MVC   0(0,R3),EVEKPRO                                                  
         AR    R3,R4               ADD LENGTH OF PRD TO POINT TO JOB            
         ZIC   R1,PSNTLJOB         LENGTH OF JOB                                
         BCTR  R1,0                                                             
         EX    R1,*+4                                                           
         MVC   0(0,R3),EVEKJOB                                                  
         GOTO1 HIGH                                                             
         CLC   BIGKEY(ACTKEND),KEYSAVE                                          
         BNE   NESAL90                                                          
****     BE    *+6                                                              
*****    DC    H'0'                                                             
*                                                                               
         TM    ACTKSTAT,ACTSCLOS   JOB CLOSED?                                  
         BO    NESAL90             YES                                          
         DROP  R2,R6                                                            
*                                                                               
         USING EVERECD,R2                                                       
         MVC   BIGKEY,SAVEKEY                                                   
         GOTO1 HIGH                RE-READ ESTIMATE                             
         B     YES                                                              
*                                                                               
* JOB IS CLOSED, READ FOR NEXT JOB                                              
NESAL90  MVC   BIGKEY,SAVEKEY                                                   
         MVI   EVEKTYPE,X'FF'                                                   
NESAL100 GOTO1 HIGH                READ NEXT KEY                                
         B     NESAL50             AND LOOP BACK                                
*                                                                               
         DROP  R2                                                               
         EJECT                                                                  
* SUB-ROUTINE TO READ ALL THE PRESTO ORDERS FOR A COMPANY                       
*                                                                               
ORD      NTR1  ,                                                                
         LA    R2,BIGKEY                                                        
         USING ORDRECD,R2                                                       
         XC    ORDKEY,ORDKEY                                                    
         MVI   ORDKTYP,ORDKTYPQ                                                 
         MVC   ORDKCPY,PSNTCUL                                                  
         GOTO1 HIGH                                                             
         B     ORD20                                                            
*                                                                               
ORD10    GOTO1 SEQ                                                              
*                                                                               
ORD20    CLC   ORDKEY(ORDKORD-ORDKEY),KEYSAVE                                   
         BNE   ORDX                ALL DONE WITH COMPANY                        
         TM    ORDKSTAT,ORDSLDEL   TEST FOR LOGICALLY DELETED ORDER             
         BO    ORD10               YES-SKIP IT                                  
*                                                                               
         GOTO1 GETREC                                                           
         GOTO1 CHELLO,DMCB,(C'G',ACCMST),('ORDELQ',PSNTAIO),0                   
         L     R6,12(R1)                                                        
         CLI   12(R1),0            TEST IF ELEMENT FOUND                        
         BNE   ORD10                                                            
         USING ORDELD,R6                                                        
*&&US*&& CLI   ORDLN,ORDLN2Q       TEST FOR MINIMUM LENGTH                      
*&&UK*&& CLI   ORDLN,ORDLN3Q                                                    
         BL    ORD10               CAN'T BE A PRESTO ORDER                      
         TM    ORDSTAT,ORDSPRES    TEST FOR PRESTO ORDER                        
         BNO   ORD10               NO-SKIP THIS ORDER                           
*                                                                               
         BAS   RE,CALLHOOK         HOOK BACK TO USER                            
         B     ORD10               GET NEXT RECORD                              
*                                                                               
ORDX     B     XIT                                                              
         DROP  R2,R6                                                            
         EJECT                                                                  
* SUB-ROUTINE TO GET THE COMPANY RECORD AND EXTRACT INFORMATION                 
* FROM IT                                                                       
*                                                                               
GETCPY   NTR1  ,                                                                
         LA    R2,BIGKEY                                                        
         USING CPYRECD,R2                                                       
         MVC   CPYKEY,SPACES                                                    
         MVC   CPYKCPY,PSNTCUL                                                  
         GOTO1 HIGH                                                             
         CLC   CPYKEY,KEYSAVE                                                   
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         GOTO1 GETREC                                                           
         GOTO1 CHELLO,DMCB,(C'G',ACCMST),('CPYELQ',PSNTAIO),0                   
         L     R6,12(R1)                                                        
         CLI   12(R1),0            TEST IF ELEMENT FOUND                        
         BE    *+6                                                              
         DC    H'0'                                                             
         USING CPYELD,R6                                                        
         MVC   SUPPLEDG,CPYSUPP    EXTRACT SUPPLIER UNIT/LEDGER                 
*&&US                                                                           
         CLI   CPYXSUPP,0          TEST FOR EXTRA SUPPLIER                      
         BE    GETCPY2                                                          
*                                                                               
         MVC   XSUPLEDG(1),SUPPLEDG                                             
         MVC   XSUPLEDG+1(1),CPYXSUPP                                           
*                                                                               
GETCPY2  CLI   CPYLN,CPYLN4Q       DO WE HAVE THE NEW ELEMENT?                  
         BL    GETCPYX             NO                                           
         CLI   CPYPRSTL,0          YES, ANY PRESTO LEDGERS?                     
         BE    GETCPYX             NO                                           
         MVC   PSUPLEDG,CPYPRSTL   YES, SAVE THEM                               
*&&                                                                             
*                                                                               
GETCPYX  B     XIT                                                              
         DROP  R2,R6                                                            
         EJECT                                                                  
*                           GENERAL ROUTINE FOR MONITORING                      
*                                                                               
* BUILD INITIAL KEY USING TIME/DATE PASSED FROM CALLER                          
* RETURNS NOT EQUAL IF ACTIVITY POINTERS FOUND FOR RECORD TYPE                  
*                                                                               
*                                                                               
FSTGEDT  NTR1  ,                                                                
         USING RAPRECD,R2                                                       
         BAS   RE,BUILDRAP         SET KEY TYPE/DATE/TIME                       
         MVC   RAPKRTYP,RAPTYPE    READ FOR SPECIFIC RECORD TYPE                
*                                                                               
         GOTO1 HIGH                GET FIRST KEY                                
         B     NGEDTX              TEST FOR END                                 
*                                                                               
* THIS ROUTINE READS THE NEXT ACTIVITY POINTER FOR THE RECORD TYPE              
* RETURNS NOT EQUAL IF NO MORE ACTIVITY POINTERS ARE FOUND                      
*                                                                               
NXTGEDT  NTR1  ,                                                                
         GOTO1 SEQ                 GET NEXT KEY                                 
*                                                                               
*                                  TEST FOR END                                 
NGEDTX   B     CHECKRAP                                                         
         EJECT                                                                  
*     FIRST AND NEXT SUPPORTING SUBROUTINES                                     
*                                                                               
* BUILD A GENERIC (NO TYPE) ACTIVITY POINTER USING THE DATE AND TIME            
*        REQESTED                                                               
*                                                                               
         USING RAPRECD,R2                                                       
BUILDRAP XC    BIGKEY,BIGKEY       BUILD MEDIA GROUP START KEY                  
         MVI   RAPKTYP,RAPKTYPQ                                                 
         MVC   RAPKCPY,PSNTCUL                                                  
         MVC   RAPKDATE,PSNTDATE                                                
         MVC   RAPKTIME,PSNTTIME                                                
         BR    RE                                                               
         DROP  R2                                                               
*                                                                               
*   COMPARE KEYS, SET CONDITION CODE AND XIT                                    
*                                                                               
CHECKRAP CLC   BIGKEY(RAPKDATE-RAPKEY),KEYSAVE                                  
         BH    XIT                 RETURN NOT EQUAL IF HIGH                     
         B     YES                 ELSE RETURN EQUAL                            
         EJECT                                                                  
*                                                                               
*   DATAMGR ROUTINES                                                            
*                                                                               
HIGH     NTR1  ,                                                                
         MVC   KEYSAVE,BIGKEY                                                   
         GOTO1 CDATAMGR,DMCB,DMRDHI,ACCDIR,BIGKEY,BIGKEY,0,0                    
         B     XIT                                                              
*                                                                               
SEQ      NTR1  ,                                                                
         GOTO1 CDATAMGR,DMCB,DMRSEQ,ACCDIR,BIGKEY,BIGKEY,0,0                    
         B     XIT                                                              
*                                                                               
GETREC   NTR1  ,                                                                
         LA    R2,BIGKEY+DISPDSKA                                               
         GOTO1 CDATAMGR,DMCB,DMGET,ACCMST,(R2),PSNTAIO,DMWORK,0                 
         B     XIT                                                              
*                                                                               
YES      SR    RC,RC                                                            
NO       LTR   RC,RC                                                            
XIT      XIT1                                                                   
*                                                                               
DMRDHI   DC    CL8'DMRDHI'                                                      
DMRSEQ   DC    CL8'DMRSEQ'                                                      
DMGET    DC    CL8'GETREC'                                                      
ACCDIR   DC    CL8'ACCDIR'                                                      
ACCMST   DC    CL8'ACCMST'                                                      
DISPDSKA EQU   ACCKDA-ACCKEY                                                    
         EJECT                                                                  
* LITERAL POOL                                                                  
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
         DS    0D                                                               
RECFILT  DS    0XL(RECFILTL)                                                    
*                                                                               
*        EACH RECORD TYPE HAS AN INDIVIDUAL LOAD TABLE ENTRY                    
*                                                                               
         DC    AL1(PRRQRTMG,PRRQFTAL,0,0),A(FSTMGAL,NXTMGAL,ACPRBMGQ)           
         DC    AL1(PRRQRTMD,PRRQFTAL,0,0),A(FSTMDAL,NXTMDAL,ACPRBMDQ)           
         DC    AL1(PRRQRTOG,PRRQFTAL,0,0),A(FSTOGAL,NXTOGAL,ACPRBOGQ)           
         DC    AL1(PRRQRTOF,PRRQFTAL,0,0),A(FSTOFAL,NXTOFAL,ACPRBOFQ)           
         DC    AL1(PRRQRTWG,PRRQFTAL,0,0),A(FSTWGAL,NXTWGAL,ACPRBWGQ)           
         DC    AL1(PRRQRTWC,PRRQFTAL,0,0),A(FSTWCAL,NXTWCAL,ACPRBWCQ)           
         DC    AL1(PRRQRTSC,PRRQFTAL,0,0),A(FSTSCAL,NXTSCAL,ACPRBSCQ)           
         DC    AL1(PRRQRTCW,PRRQFTAL,0,0),A(FSTCWAL,NXTCWAL,ACPRBCWQ)           
         DC    AL1(PRRQRTCL,PRRQFTAL,0,0),A(FSTCLAL,NXTCLAL,ACPRBCLQ)           
         DC    AL1(PRRQRTPR,PRRQFTAL,0,0),A(FSTPRAL,NXTPRAL,ACPRBPRQ)           
         DC    AL1(PRRQRTJB,PRRQFTAL,0,0),A(FSTJBAL,NXTJBAL,ACPRBJBQ)           
         DC    AL1(PRRQRTSP,PRRQFTAL,0,0),A(FSTSPAL,NXTSPAL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTSWAL,NXTSWAL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP1AL,NXTP1AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP2AL,NXTP2AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP3AL,NXTP3AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP4AL,NXTP4AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP5AL,NXTP5AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTSW,PRRQFTAL,0,0),A(FSTP6AL,NXTP6AL,ACPRBSPQ)           
         DC    AL1(PRRQRTAG,PRRQFTAL,0,0),A(FSTAGAL,NXTAGAL,ACPRBAGQ)           
         DC    AL1(PRRQRTOL,PRRQFTAL,0,0),A(FSTOLAL,NXTOLAL,ACPRBOLQ)           
         DC    AL1(PRRQRTPL,PRRQFTAL,0,0),A(FSTPLAL,NXTPLAL,ACPRBPLQ)           
         DC    AL1(PRRQRTTX,PRRQFTAL,0,0),A(FSTTXAL,NXTTXAL,ACPRBTXQ)           
         DC    AL1(PRRQRTOP,PRRQFTAL,0,0),A(FSTOPAL,NXTOPAL,ACPRBOPQ)           
         DC    AL1(PRRQRTOX,PRRQFTAL,0,0),A(ORD,0,ACPRBODQ)                     
         DC    AL1(PRRQRTUS,PRRQFTAL,0,0),A(FSTUSAL,NXTUSAL,ACPRBUFQ)           
         DC    AL1(PRRQRTLS,PRRQFTAL,0,0),A(FSTLSAL,NXTLSAL,ACPRBLSQ)           
         DC    AL1(PRRQRTLN,PRRQFTAL,0,0),A(FSTLNAL,NXTLNAL,ACPRBLNQ)           
         DC    AL1(PRRQRTPE,PRRQFTAL,0,0),A(FSTPEAL,NXTPEAL,ACPRBPEQ)           
         DC    AL1(PRRQRTRA,PRRQFTAL,0,0),A(FSTRAAL,NXTRAAL,ACPRBRAQ)           
         DC    AL1(PRRQREAP,PRRQFTAL,0,0),A(FSTESAL,NXTESAL,ACPREAPQ)           
*                                                                               
*        EACH RECORD TYPE HAS AN INDIVIDUAL DATE/TIME TABLE ENTRY               
*                                                                               
         DC    AL1(PRRQRTMG,PRRQFTDT,0,RAPKRMGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBMGQ)                                      
*                                                                               
         DC    AL1(PRRQRTMD,PRRQFTDT,0,RAPKRMED)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBMDQ)                                      
*                                                                               
         DC    AL1(PRRQRTOG,PRRQFTDT,0,RAPKROGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOGQ)                                      
*                                                                               
         DC    AL1(PRRQRTOF,PRRQFTDT,0,RAPKROFF)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOFQ)                                      
*                                                                               
         DC    AL1(PRRQRTWG,PRRQFTDT,0,RAPKRWGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBWGQ)                                      
*                                                                               
         DC    AL1(PRRQRTWC,PRRQFTDT,0,RAPKRWRK)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBWCQ)                                      
*                                                                               
         DC    AL1(PRRQRTSC,PRRQFTDT,0,RAPKRSCH)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBSCQ)                                      
*                                                                               
         DC    AL1(PRRQRTCW,PRRQFTDT,0,RAPKRCAT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBCWQ)                                      
*                                                                               
         DC    AL1(PRRQRTCL,PRRQFTDT,0,RAPKRCLI)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBCLQ)                                      
*                                                                               
         DC    AL1(PRRQRTPR,PRRQFTDT,0,RAPKRPRO)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPRQ)                                      
*                                                                               
         DC    AL1(PRRQRTJB,PRRQFTDT,0,RAPKRJOB)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBJBQ)                                      
*                                                                               
         DC    AL1(PRRQRTSP,PRRQFTDT,0,RAPKRSUP)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBSPQ)                                      
*                                                                               
         DC    AL1(PRRQRTOL,PRRQFTDT,0,RAPKROFL)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOLQ)                                      
*                                                                               
         DC    AL1(PRRQRTOS,PRRQFTDT,0,RAPKRORD)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOSQ)                                      
*                                                                               
         DC    AL1(PRRQRTPL,PRRQFTDT,0,RAPKRPRL)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPLQ)                                      
*                                                                               
         DC    AL1(PRRQRTTX,PRRQFTDT,0,RAPKRTAX)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBTXQ)                                      
*                                                                               
         DC    AL1(PRRQRTOP,PRRQFTDT,0,RAPKROPT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOPQ)                                      
*                                                                               
         DC    AL1(PRRQRTUS,PRRQFTDT,0,RAPKRUSR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBUFQ)                                      
*                                                                               
         DC    AL1(PRRQRTLS,PRRQFTDT,0,RAPKRLED)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLSQ)                                      
*                                                                               
         DC    AL1(PRRQRTLN,PRRQFTDT,0,RAPKR1RA)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTLN,PRRQFTDT,0,RAPKR1RB)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTLN,PRRQFTDT,0,RAPKR1RC)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTPE,PRRQFTDT,0,RAPKRPER)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPEQ)                                      
*                                                                               
         DC    AL1(PRRQRTRA,PRRQFTDT,0,RAPKRRAT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBRAQ)                                      
*                                                                               
         DC    AL1(PRRQREAP,PRRQFTDT,0,RAPKRAPP)                                
         DC    A(FSTGEDT,NXTGEDT,ACPREAPQ)                                      
*                                                                               
*        ALL RECORD TYPES ARE LOADED DURING INITIAL LOAD                        
*                                                                               
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTMGAL,NXTMGAL,ACPRBMGQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTMDAL,NXTMDAL,ACPRBMDQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTOGAL,NXTOGAL,ACPRBOGQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTOFAL,NXTOFAL,ACPRBOFQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTWGAL,NXTWGAL,ACPRBWGQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTWCAL,NXTWCAL,ACPRBWCQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTSCAL,NXTSCAL,ACPRBSCQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTCWAL,NXTCWAL,ACPRBCWQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTCLAL,NXTCLAL,ACPRBCLQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTPRAL,NXTPRAL,ACPRBPRQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTJBAL,NXTJBAL,ACPRBJBQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTSPAL,NXTSPAL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTSWAL,NXTSWAL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP1AL,NXTP1AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP2AL,NXTP2AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP3AL,NXTP3AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP4AL,NXTP4AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP5AL,NXTP5AL,ACPRBSPQ)           
*&&US*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTP6AL,NXTP6AL,ACPRBSPQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTOLAL,NXTOLAL,ACPRBOLQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTAGAL,NXTAGAL,ACPRBAGQ)           
*&&UK*&& DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTPLAL,NXTPLAL,ACPRBPLQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTTXAL,NXTTXAL,ACPRBTXQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTOPAL,NXTOPAL,ACPRBOPQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTUSAL,NXTUSAL,ACPRBUFQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTLSAL,NXTLSAL,ACPRBLSQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTLNAL,NXTLNAL,ACPRBLNQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTLNAL,NXTLNAL,ACPRBRAQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTPEAL,NXTPEAL,ACPRBPEQ)           
         DC    AL1(PRRQRTC1,PRRQFTAL,0,0),A(FSTRAAL,NXTRAAL,ACPRBRAQ)           
*                                                                               
*        ONLY PRODUCTION HIERARCHY RECORDS ARE MONITORED REGULARLY              
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRMGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBMGQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRMED)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBMDQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKROGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOGQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKROFF)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOFQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRWGR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBWGQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRWRK)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBWCQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRSCH)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBSCQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRCAT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBCWQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRCLI)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBCLQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRPRO)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPRQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRJOB)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBJBQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRSUP)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBSPQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKROFL)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOLQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRORD)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOSQ)                                      
*                                                                               
*&&UK                                                                           
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRPRL)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPLQ)                                      
*                                                                               
*&&                                                                             
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRTAX)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBTXQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKROPT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBOPQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRUSR)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBUFQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRLED)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLSQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKR1RA)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKR1RB)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKR1RC)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBLNQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRPER)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBPEQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRRAT)                                
         DC    A(FSTGEDT,NXTGEDT,ACPRBRAQ)                                      
*                                                                               
         DC    AL1(PRRQRTC2,PRRQFTDT,0,RAPKRAPP)                                
         DC    A(FSTGEDT,NXTGEDT,ACPREAPQ)                                      
*                                                                               
         DC    AL1(0)                                                           
         EJECT                                                                  
* OVERLAY WORKING STORAGE                                                       
*                                                                               
WORKD    DSECT                                                                  
RELO     DS    A                                                                
USERRD   DS    A                                                                
DMCB     DS    6F                                                               
DUB      DS    D                                                                
HALF     DS    H                                                                
*                                                                               
LCLI     DS    X                   L'CLIENT                                     
LCLIPRO  DS    X                   L'CLIENT + L'PRODUCT                         
LCLIJOB  DS    X                   L'CLIENT + L'PRODUCT + L'JOB                 
RAPTYPE  DS    XL1                 RAP KEY RECORD TYPE                          
SUPPLEDG DS    CL2                                                              
XSUPLEDG DS    CL2                 EXTRA SUPPLIER LEDGER                        
PSUPLEDG DS    CL6                 PRESTO SUPPLIERS                             
*                                                                               
SPACES   DS    CL80                                                             
BIGKEY   DS    XL(ACCKLEN)         KEY                                          
KEYSAVE  DS    XL(ACCKLEN)         KEYSAVE                                      
SAVEKEY  DS    XL(ACCKLEN)         SAVEKEY                                      
DMWORK   DS    80X                                                              
WORKL    EQU   *-WORKD                                                          
         EJECT                                                                  
* DSECT TO COVER RECORD FILTER TABLE                                            
*                                                                               
RECFILTD DSECT                                                                  
RECFRTYP DS    XL1                 RECORD TYPE                                  
RECFFTYP DS    XL1                 FILTER TYPE                                  
         DS    XL1                 SPARE                                        
RECFRAPK DS    XL1                 RAP KEY RECORD TYPE                          
RECFAFST DS    A                   A(FIRST RECORD ROUTINE)                      
RECFANXT DS    A                   A(NEXT RECORD ROUTINE)                       
         DS    XL3                                                              
RECFHTYP DS    XL1                 HOOK RECORD TYPE                             
RECFILTL EQU   *-RECFILTD                                                       
         EJECT                                                                  
* ACPRESENTD                                                                    
       ++INCLUDE ACPRESENTD                                                     
         EJECT                                                                  
* ACPRESENTQ                                                                    
       ++INCLUDE ACPRESENTQ                                                     
         EJECT                                                                  
* ACPRESTOQ                                                                     
       ++INCLUDE ACPRESTOQ                                                      
         EJECT                                                                  
* DDCOMFACSD                                                                    
       ++INCLUDE DDCOMFACSD                                                     
         EJECT                                                                  
* FACTRYEQUS                                                                    
       ++INCLUDE FACTRYEQUS                                                     
         EJECT                                                                  
* ACGENFILE                                                                     
         PRINT OFF                                                              
       ++INCLUDE ACGENFILE                                                      
         PRINT ON                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'019ACPRESENT 01/17/06'                                      
         END                                                                    
