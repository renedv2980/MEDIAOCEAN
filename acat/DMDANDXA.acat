*          DATA SET DMDANDXA   AT LEVEL 028 AS OF 02/24/00                      
*CATALP DMDANDXA                                                                
DMDANDX  TITLE 'DMDANDX - DMRDHI/DMRSEQ - D/A INDEXED FILES'                    
                                                                                
***********************************************************************         
* R1 POINTS TO PARAM LIST (DTF ADDRESS SUPPLIED)                      *         
* R2 POINTS TO USER DMCB                                              *         
*                                                                     *         
* NOTE:  IF THE HIGH ORDER BIT OF RF IS ON ALL PARAMETERS ARE 31 BIT  *         
*        ADDRESSES, ELSE 24 BIT ADDRESSING IS ASSUMED                 *         
***********************************************************************         
                                                                                
DMDANDX  CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WORKX-WORKD,DMDANDX,CLEAR=YES                                    
         USING WORKD,RC            RC=A(W/S)                                    
                                                                                
         MVC   LOWBITS,XAADBITS    SET 31 BIT ADDRESSING                        
         LTR   RF,RF                                                            
         BM    *+8                                                              
         MVI   LOWBITS,0           SET 24 BIT ADDRESSING                        
                                                                                
         LA    RF,*+10                                                          
         O     RF,XAON             ENTER 31 BIT ADDRESSING MODE                 
         BSM   0,RF                                                             
                                                                                
         USING DMCBD,R2            R2=A(USER DMCB)                              
         MVI   DMCBWERR,0          RESET ERROR RETURN BYTE                      
         LR    R3,R1                                                            
         USING PARAMD,R3           R3=A(DMOD000 PLIST)                          
         L     R4,PARAM4                                                        
         N     R4,LOWBITS                                                       
         USING DTFPHD,R4           R4=A(DTF)                                    
         TM    DIND,DINDNDX+DIND2BU                                             
         BNO   ERR1                                                             
         ST    R4,DMCBW5           RETURN A(DTF) IN USER P5                     
                                                                                
         MVI   RUNMODE,RUNMON      SET RUNNING ONLINE                           
         ICM   R1,15,VSSB          SKIP ALLOCATION IF ONLINE                    
         BZ    *+14                (NO SSB - MUST BE OFFLINE)                   
         OC    SSBCNTL-SSBD(,R1),SSBCNTL-SSBD(R1)                               
         BNZ   DANDX04             (MASTER TERMINAL=0 OFFLINE)                  
         MVI   RUNMODE,RUNMOFF     SET RUNNING OFFLINE                          
                                                                                
         OC    DBLK,DBLK           TEST BLOCK ADDRESS SET                       
         BNZ   DANDX02                                                          
         SR    R0,R0               ALLOCATE BUFFER IF NEEDED                    
         ICM   R0,3,DBLKSZ                                                      
         BZ    DANDX02                                                          
         OC    DNDX,DNDX                                                        
         BNZ   *+8                                                              
         SLL   R0,1                BUFFER*2 IF NO INDEX AREA DEFINED            
         GETMAIN R,LV=(0)          GET BUFFER AREA                              
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                                                             
         ST    R1,DBLK                                                          
         XC    0(BLKHDRLN,R1),0(R1)                                             
         OC    DNDX,DNDX           CHECK IOAREA2                                
         BNZ   DANDX02                                                          
         AH    R1,DBLKSZ                                                        
         ST    R1,DNDX                                                          
         XC    0(NDXHDRLN,R1),0(R1)                                             
                                                                                
DANDX02  TM    DMCBWIND,DMCBWTRK   TEST FULL TRACK READ REQUESTED               
         BZ    DANDX04                                                          
         OC    ATRKBUFF,ATRKBUFF   TEST ALLOCATED YET                           
         BNZ   DANDX04                                                          
         LHI   R0,TRKSIZE                                                       
         GETMAIN R,LV=(0)          GET FULL TRACK READ BUFFER                   
         LTR   RF,RF                                                            
         BZ    *+6                                                              
         DC    H'0'                CAN'T GRAB THE STORAGE                       
         ST    R1,ATRKBUFF                                                      
                                                                                
DANDX04  L     R5,DNDX                                                          
         USING NDXD,R5             R5=A(INDEX BLOCK)                            
         L     R6,DBLK                                                          
         USING BLKD,R6             R6=A(DATA BLOCK)                             
                                                                                
         L     RE,PARAM5                                                        
         N     RE,LOWBITS                                                       
         MVC   PNDXDA,0(RE)        SAVE D/A OF INDEX RECORD                     
         L     RE,PARAM2                                                        
         N     RE,LOWBITS                                                       
         MVC   PNDXKEY,0(RE)       SAVE KEY FOR READ HIGH                       
                                                                                
         CLI   RUNMODE,RUNMON      TEST RUNNING ONLINE                          
         BE    DANDX06                                                          
         BC    0,DANDX06           INITIALIZE BUFFER AREA                       
         OI    *-3,X'F0'           NO-OP INITIALIZE NEXT TIME                   
         ICM   RF,15,VDMDABUF                                                   
         BZ    DANDX06                                                          
         LA    R0,MAXBUFF                                                       
         GOTO1 ,DMCB2,(C'I',PARAMD),(20,(R0))                                   
         BASSM RE,RF               CALL DABUFF IN 24-BIT MODE                   
         LA    RE,*+10                                                          
         O     RE,XAON             GET BACK TO 31-BIT MODE                      
         BSM   0,RE                                                             
         MVC   ABUFF,4(R1)         SAVE A(BUFFER)                               
                                                                                
DANDX06  L     RE,DMCBW1           GO TO ACTION ROUTINE                         
         N     RE,LOWBITS                                                       
         CLC   0(4,RE),DMRSEQ      TEST REQD SEQUENTIAL                         
         BE    DASQ                                                             
         CLC   0(4,RE),DMRDHI      TEST READ HIGH                               
         BNE   ERR2                                                             
         EJECT                                                                  
***********************************************************************         
* DAHI - D/A INDEXED FILE                                             *         
*                                                                     *         
* D/A OF INDEX RECORD MUST BE PASSED IN DMCBW3 & KEY OF REQUIRED      *         
* RECORD PASSED AT THE FRONT OF USER SUPPLIED I/O AREA (DMCBW4)       *         
***********************************************************************         
                                                                                
DAHI     XC    DNDXPTR,DNDXPTR     CLEAR INDEX POINTER                          
         XC    DBLKPTR,DBLKPTR     CLEAR BLOCK POINTER                          
         MVI   DBLKNUM,0           RESET RECORD NUMBER                          
         LA    R0,2                R0=INDEX READ LOOP COUNT                     
         CLC   PNDXDA,NDXNDXDA     TEST SAME USER INDEX BLOCK D/A               
         BNE   DAHI02              NO - FORCE INDEX READ                        
         CLC   DNDXDA,PNDXDA       TEST SAME DTF INDEX BLOCK D/A                
         BE    DAHI04                                                           
                                                                                
DAHI02   GOTOR GETNDX,PNDXDA       READ INDEX RECORD                            
                                                                                
DAHI04   LH    RF,DKEYLNL                                                       
         BCTR  RF,0                                                             
         EX    RF,*+8                                                           
         BE    DAHI16                                                           
         CLC   PNDXKEY(0),NDXMAJOR TEST IF MAJOR KEYS CONSISTANT                
         BCT   R0,DAHI02           NO - READ INDEX RECORD AGAIN                 
         DC    H'0'                DIE IF BAD KEY PASSED                        
                                                                                
DAHI16   LA    RE,NDXMAJOR                                                      
         AH    RE,DKEYLNL          RE=A(FIRST MINOR KEY IN INDEX)               
         LA    R1,PNDXKEY+1(RF)    R1=A(PASSED MINOR KEY)                       
         LH    RF,DKEYLNR                                                       
         BCTR  RF,0                RF=L'MINOR KEY-1                             
                                                                                
DAHI18   CLC   0(2,RE),EFFS        TEST IF END OF INDEX                         
         BE    DAHI20                                                           
         EX    RF,*+8                                                           
         BNL   DAHI22                                                           
         CLC   0(0,RE),0(R1)       COMPARE INDEX KEY WITH PASSED KEY            
         LA    RE,5(RE,RF)         BUMP TO NEXT INDEX KEY                       
         B     DAHI18                                                           
                                                                                
DAHI20   OC    NDXLNKDA,NDXLNKDA   TEST IF INDEX LINK PRESENT                   
         BZ    DMEOF                                                            
         GOTOR GETNDX,NDXLNKDA     READ NEXT INDEX RECORD                       
         LA    R0,1                                                             
         B     DAHI04                                                           
                                                                                
DAHI22   ST    RE,DNDXPTR          SET A(CURRENT INDEX ENTRY)                   
         AH    RE,DKEYLNR                                                       
         MVC   BLKDA,0(RE)         SET D/A OF DATA BLOCK                        
         CLC   DBLKDA,BLKDA        TEST IF DATA BLOCK IN CORE                   
         BNE   *+14                NO - READ IT                                 
         CLC   BLKBLKTB,BLKDA      TEST D/A IN DATA BLOCK AGREES                
         BE    DAHI24              YES - DATA BLOCK IS IN CORE                  
         GOTOR GETDTA              READ DATA BLOCK                              
                                                                                
DAHI24   LH    R7,DKEYLNL                                                       
         AH    R7,DKEYLNR                                                       
         BCTR  R7,0                R7=TOTAL L'KEY-1                             
                                                                                
DAHI26   GOTOR GETNXT              LOCATE RECORD IN DATA BLOCK                  
         BE    DMEOF                                                            
         L     RE,DBLKPTR                                                       
         EX    R7,*+8                                                           
         BL    DAHI26                                                           
         CLC   2(0,RE),PNDXKEY     COMPARE RECORD KEY WITH PASSED KEY           
         B     RETREC              RETURN RECORD TO USER                        
         EJECT                                                                  
***********************************************************************         
* DASQ - D/A INDEXED FILE                                             *         
*                                                                     *         
* D/A OF INDEX RECORD NEED ONLY BE PASSED ON INITIAL READ SEQUENTIAL. *         
* ALL RECORDS FOR A CONTROL INTERVAL WILL BE PASSED IF NOT PRECEDED   *         
* WITH A READ HIGH                                                    *         
***********************************************************************         
                                                                                
DASQ     OC    DBLKPTR,DBLKPTR     TEST IF FIRST TIME                           
         BZ    DASQ02                                                           
         CLC   DNDXDA,PNDXDA       TEST FOR CHANGE OF C/I                       
         BE    DASQ10                                                           
         XC    DNDXPTR,DNDXPTR     YES - CLEAR INDEX & BLOCK POINTERS           
         XC    DBLKPTR,DBLKPTR                                                  
                                                                                
DASQ02   OC    DNDXPTR,DNDXPTR     TEST INDEX POINTER SET                       
         BNZ   DASQ06                                                           
         CLC   DNDXDA,PNDXDA       TEST INDEX BLOCK IN CORE                     
         BE    DASQ04                                                           
         GOTOR GETNDX,PNDXDA       READ INDEX RECORD                            
                                                                                
DASQ04   LA    RE,NDXMAJOR         SET INDEX PTR TO FIRST ENTRY                 
         AH    RE,DKEYLNL                                                       
         B     DASQ08                                                           
                                                                                
DASQ06   L     RE,DNDXPTR          SET INDEX PTR TO NEXT MINOR KEY              
         AH    RE,DKEYLNR                                                       
         LA    RE,L'DBLKDA(RE)                                                  
                                                                                
DASQ08   ST    RE,DNDXPTR          SET A(CURRENT INDEX ENTRY)                   
         CLC   0(2,RE),EFFS        TEST FOR END OF INDEX                        
         BE    DASQ12                                                           
         AH    RE,DKEYLNR                                                       
         MVC   BLKDA,0(RE)         SET D/A OF DATA BLOCK                        
         CLC   DBLKDA,BLKDA        TEST DATA BLOCK IN CORE                      
         BNE   *+14                NO - READ IT                                 
         CLC   BLKBLKTB,BLKDA      TEST D/A IN DATA BLOCK AGREES                
         BE    DASQ10              YES - DATA BLOCK IS IN CORE                  
         GOTOR GETDTA              READ DATA BLOCK                              
                                                                                
DASQ10   GOTOR GETNXT              GET FIRST/NEXT RECORD                        
         BE    DASQ02              END OF BLOCK                                 
         B     RETREC              RETURN RECORD TO USER                        
                                                                                
DASQ12   OC    NDXLNKDA,NDXLNKDA   TEST IF INDEX LINK PRESENT                   
         BZ    DMEOF                                                            
         GOTOR GETNDX,NDXLNKDA     READ NEXT INDEX RECORD                       
         B     DASQ04                                                           
         EJECT                                                                  
***********************************************************************         
* READ INDEX BLOCK INTO AREA ADDRESSED BY DNDX                        *         
***********************************************************************         
                                                                                
GETNDX   ST    RE,SAVERE                                                        
         MVC   NDXDA,0(R1)                                                      
         XC    DNDXPTR,DNDXPTR                                                  
         XC    DBLKPTR,DBLKPTR                                                  
         MVC   P2,DNDX             SET A(IOAREA)                                
         GOTOR GETREC,NDXDA                                                     
         CLC   NDXDA,NDXNDXDA                                                   
         BNE   ERR4                                                             
         MVC   DNDXDA,NDXDA        SET D/A OF INDEX BLOCK IN DTF                
         MVI   DBLKNUM,0                                                        
GETNDXX  L     RE,SAVERE                                                        
         BR    RE                                                               
                                                                                
***********************************************************************         
* READ DATA BLOCK INTO AREA ADDRESSED BY DBLK                         *         
***********************************************************************         
                                                                                
GETDTA   ST    RE,SAVERE                                                        
         XC    DBLKPTR,DBLKPTR                                                  
         MVC   P2,DBLK             SET A(IOAREA)                                
         GOTOR GETREC,BLKDA                                                     
         CLC   BLKBLKTB,BLKDA                                                   
         BNE   ERR5                                                             
         CLI   BLKBLKHR,0          ENSURE NON-ZERO HIGH RECORD                  
         BE    ERR5                                                             
         OC    BLKBLKLN,BLKBLKLN   AND POSITIVE BLOCK LENGTH                    
         BZ    ERR5                                                             
         MVC   DBLKDA,BLKDA        SET D/A OF DATA BLOCK IN DTF                 
         MVI   DBLKNUM,0                                                        
GETDTAX  L     RE,SAVERE                                                        
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* ISSUE READ OR FULL TRACK READ FOR FILE                              *         
* NTRY - R1=A(DISK ADDRESS)                                           *         
***********************************************************************         
                                                                                
GETREC   LR    R0,RE                                                            
         ST    R1,P5                                                            
         MVC   P4,PARAM4           SET FILE NUMBER/ADDRESS                      
         ICM   RF,15,VDMDABUF                                                   
         BZ    GETREC02                                                         
         LA    R1,DMODREAD         SET REGULAR READ                             
         TM    DMCBWIND,DMCBWTRK   TEST FULL TRACK READ REQ                     
         BZ    *+14                                                             
         LA    R1,DMODRTRK         SET FULL TRACK READ                          
         MVC   P6,ATRKBUFF         SET A(TRACK BUFFER)                          
         ST    R1,P1                                                            
                                                                                
         GOTO1 ,DMCB2,(C'R',P1),ABUFF,VDMOD000                                  
         BASSM RE,RF               BRANCH IN 24-BIT MODE                        
                                                                                
         LA    RE,*+10                                                          
         O     RE,XAON             RETURN TO 31-BIT ADDRESSING                  
         BSM   0,RE                                                             
         CLI   8(R1),0             TEST FOR ERRORS                              
         B     GETRECX                                                          
                                                                                
GETREC02 OC    PARAM4+1(3),PARAM4+1                                             
         BNZ   *+6                                                              
         DC    H'0'                                                             
         LA    R1,RDID             GET DADDS ROUTINE NUMBER                     
         TM    DMCBWIND,DMCBWTRK   TEST FULL TRACK READ REQUEST                 
         BZ    *+14                                                             
         LA    R1,RDTRK                                                         
         MVC   P6,ATRKBUFF                                                      
                                                                                
         ST    R1,P1                                                            
         MVI   P4,0                P4 MUST BE A VALID 31-BIT ADDRESS            
         LA    R1,P1                                                            
         L     RF,VDADDS                                                        
         O     RF,XAON             INDICATE 31-BIT CALLER                       
                                                                                
         BASSM RE,RF                                                            
                                                                                
         LA    RE,*+10                                                          
         O     RE,XAON             ENSURE 31-BIT MODE ON RETURN                 
         BSM   0,RE                                                             
                                                                                
         OC    P3(2),P3            TEST FOR ERRORS                              
                                                                                
GETRECX  BNE   DMERRS                                                           
         LR    RE,R0                                                            
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* GET ADDRESS OF NEXT RECORD IN A DATA BLOCK                          *         
*                                                                     *         
* EXIT WITH CC=EQ IF END OF BLOCK                                     *         
***********************************************************************         
                                                                                
GETNXT   ST    RE,SAVERE                                                        
         SR    R0,R0                                                            
         IC    R0,DBLKNUM          BUMP RECORD NUMBER                           
         AHI   R0,1                                                             
         STC   R0,DBLKNUM                                                       
         XC    DBLKPTR,DBLKPTR                                                  
         CLC   DBLKNUM,BLKBLKHR    TEST IF HIREC EXCEEDED                       
         BH    GETNXTX                                                          
         LH    R1,BLKBLKLN                                                      
         SHI   R1,BLKHDRLN         R1=TOTAL L'DATA                              
         LA    RE,BLKFIRST         RE=A(FIRST DATA RECORD IN BLOCK)             
         SR    RF,RF                                                            
         B     GETNXT04                                                         
                                                                                
GETNXT02 ICM   RF,3,0(RE)                                                       
         AR    RE,RF                                                            
         SR    R1,RF                                                            
         BNP   GETNXTX                                                          
                                                                                
GETNXT04 BCT   R0,GETNXT02                                                      
         ST    RE,DBLKPTR          SET A(RECORD) IN DTF                         
                                                                                
GETNXTX  OC    DBLKPTR,DBLKPTR     SET CC=EQ IF END OF BLOCK                    
         L     RE,SAVERE                                                        
         BR    RE                                                               
                                                                                
***********************************************************************         
* MOVE DATA RECORD FROM DATA BLOCK TO CALLERS I/O AREA AND SET        *         
* RECORD LENGTH IN PARAMETER LIST                                     *         
***********************************************************************         
                                                                                
RETREC   L     RE,DBLKPTR          GET RECORD ADDRESS                           
         LH    RF,0(RE)            GET LENGTH                                   
         SHI   RF,2                SET 'FROM' LENGTH                            
         STH   RF,DMCBWRLN         AND RETURN IT TO CALLER                      
         LA    RE,2(RE)            SET 'FROM' ADDRESS                           
                                                                                
         L     R0,PARAM2           SET 'TO' ADDRESS                             
         N     R0,LOWBITS                                                       
         LR    R1,RF               SET 'TO' LENGTH = FROM LENGTH                
                                                                                
         MVCL  R0,RE                                                            
                                                                                
         L     RF,PARAM2                                                        
         N     RF,LOWBITS                                                       
         AH    RF,DMCBWRLN                                                      
         XC    0(2,RF),0(RF)       SET ZEROES AT END OF RECORD                  
         B     DMEXIT                                                           
         EJECT                                                                  
***********************************************************************         
* EXITS FROM PROGRAM                                                  *         
***********************************************************************         
                                                                                
DMEOF    DC    H'0'                                                             
         OI    DMCBWERR,DMCBWEOF                                                
         LH    RE,DKEYLNL                                                       
         AH    RE,DKEYLNR                                                       
         SHI   RE,2                RE=KEY LENGTH-2                              
         L     RF,PARAM2           RF=A(IOAREA)                                 
         N     RF,LOWBITS                                                       
         MVI   0(RF),X'FF'         SET USER KEY IN IOAREA TO FF'S               
         EX    RE,*+4                                                           
         MVC   1(0,RF),0(RF)                                                    
                                                                                
DMERRS   XC    DBLKPTR,DBLKPTR                                                  
         XC    DNDXPTR,DNDXPTR                                                  
                                                                                
DMEXIT   LA    RF,DMEXITX                                                       
         N     RF,XAADBITS                                                      
         BSM   0,RF                                                             
                                                                                
DMEXITX  XIT1  ,                                                                
         EJECT                                                                  
MAXBUFF  EQU   500                 MAXIMUM N'BUFFERS                            
TRKSIZE  EQU   52000               SIZE OF TRACK BUFFER                         
                                                                                
         LTORG                                                                  
                                                                                
VSSB     DC    V(SSB)                                                           
VDMOD000 DC    V(DMOD000)                                                       
VDMDABUF DC    V(DMDABUFF)                                                      
VDADDS   DC    V(DADDS)                                                         
ATRKBUFF DC    A(0)                GETMAIN'D FULL TRK READ BUFF ADDR            
ABUFF    DC    A(0)                A(I/O BUFFER FROM DMDABUFF)                  
XAON     DC    X'80000000'                                                      
XAADBITS DC    X'7FFFFFFF'                                                      
                                                                                
                                                                                
ERR1     DC    H'0',C'INVALID DTF TYPE'                                         
ERR2     DC    H'0',C'INVALID ACTION CALL '                                     
ERR3     DC    H'0',C'INVALID DISK ADDRESS'                                     
ERR4     DC    H'0',C'INVALID INDEX BLOCK HEADER'                               
ERR5     DC    H'0',C'INVALID DATA BLOCK HEADER'                                
                                                                                
EFFS     DC    X'FFFF'                                                          
DMRSEQ   DC    C'DMRSEQ '                                                       
DMRDHI   DC    C'DMRDHI'                                                        
         EJECT                                                                  
WORKD    DSECT                     ** DSECT FOR LOCAL W/S **                    
SAVERE   DS    A                                                                
LOWBITS  DS    F                                                                
PNDXDA   DS    XL(L'DNDXDA)                                                     
PNDXKEY  DS    XL64                                                             
NDXDA    DS    XL(L'DNDXDA)                                                     
BLKDA    DS    XL(L'DBLKDA)                                                     
                                                                                
P1       DS    F                   PARMS TO CALL DMOD000                        
P2       DS    F                                                                
P3       DS    F                                                                
P4       DS    F                                                                
P5       DS    F                                                                
P6       DS    F                                                                
                                                                                
DMCB2    DS    6F                  PARMS TO CALL DMDABUFF                       
                                                                                
RUNMODE  DS    XL1                 RUN MODE                                     
RUNMON   EQU   1                   RUNNING ONLINE                               
RUNMOFF  EQU   2                   RUNNING OFFL                                 
                                                                                
WORKX    EQU   *                                                                
                                                                                
PARAMD   DSECT                     ** DSECT FOR DMOD000 PARM LIST **            
PARAM1   DS    F                                                                
PARAM2   DS    F                                                                
PARAM3   DS    F                                                                
PARAM4   DS    F                                                                
PARAM5   DS    F                                                                
PARAM6   DS    F                                                                
                                                                                
DMCBD    DSECT                     ** DSECT FOR USER DMCB **                    
DMCBWIND DS    0XL1                                                             
DMCBWTRK EQU   X'01'               FULL TRACK READ REQUEST                      
DMCBW1   DS    F                                                                
DMCBW2   DS    F                                                                
DMCBWERR DS    0XL1                                                             
DMCBWEOF EQU   X'80'               END OF FILE                                  
DMCBW3   DS    F                                                                
DMCBW4   DS    F                                                                
DMCBW5   DS    F                                                                
DMCBW6   DS    0F                                                               
         DS    H                                                                
DMCBWRLN DS    H                                                                
                                                                                
NDXD     DSECT                     ** DSECT FOR INDEX BLOCK **                  
NDXNDXDA DS    XL(L'DNDXDA)        DISK ADDRESS OF INDEX BLOCK                  
NDXNDXLN DS    XL2                 LENGTH OF BLOCK USED                         
NDXLNKDA DS    XL(L'DNDXDA)        LINK ADDRESS                                 
NDXHDRLN EQU   *-NDXD                                                           
NDXMAJOR DS    0X                  MAJOR KEY                                    
*                                  FOLLOWED BY ENTRIES CONTAINING:-             
*                                  MINOR KEY (VARIABLE)                         
*                                  D/A OF DATA BLOCK                            
                                                                                
BLKD     DSECT                     ** DSECT FOR DATA BLOCK **                   
BLKBLKDA DS    0XL(L'DBLKDA)                                                    
BLKBLKTB DS    XL3                 TTTTBB OF DATA BLOCK                         
BLKBLKHR DS    XL1                 HIGH RECORD NUMBER IN BLOCK                  
BLKBLKLN DS    XL2                 LENGTH OF BLOCK USED                         
BLKHDRLN EQU   *-BLKD                                                           
BLKFIRST DS    0X                  DISPLACEMENT TO FIRST RECORD                 
*                                  FOLLOWED BY ENTRIES CONTAINING:-             
*                                  RECORD LENGTH (2)                            
*                                  DATA RECORD (FULL KEY/VARIABLE)              
                                                                                
* DMDTFPH                                                                       
         PRINT OFF                                                              
       ++INCLUDE DMDTFPH                                                        
         PRINT ON                                                               
                                                                                
* FASSB                                                                         
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         PRINT ON                                                               
                                                                                
* DMGREQUS                                                                      
       ++INCLUDE DMGREQUS                                                       
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'028DMDANDXA  02/24/00'                                      
         END                                                                    
