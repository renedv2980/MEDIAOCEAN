*          DATA SET BUILDER    AT LEVEL 006 AS OF 05/01/02                      
*CATALP BUILDER                                                                 
         TITLE 'BUILDER - BUILD PLAN REPORT IN CORE'                            
BUILDER  CSECT                                                                  
         PRINT NOGEN                                                            
         NMODL BUILDX-BUILDD,**BLDR**,RA,CLEAR=YES                              
         USING BUILDD,RC           RC=A(LOCAL W/S)                              
*                                                                               
         ST    R1,APARM            SAVE A(PARM LIST)                            
         USING BUPARMD,R1                                                       
         MVC   VNODBLK,BUPANODB                                                 
         MVC   VDTATAB,BUPADTAB                                                 
         MVC   VNODIO,BUPAFAC1                                                  
         DROP  R1                                                               
*                                                                               
         L     R9,VNODBLK                                                       
         USING NODBLKD,R9          R9=A(NODIO BLOCK)                            
*                                                                               
         LA    RE,BUILDD           SET A(W/S TABLES)                            
         AH    RE,=Y(ACCTAB-BUILDD)                                             
         ST    RE,AACCTAB                                                       
         LA    RE,BUILDD                                                        
         AH    RE,=Y(ROWTAB-BUILDD)                                             
         ST    RE,AROWTAB                                                       
         LA    RE,BUILDD                                                        
         AH    RE,=Y(COLTAB-BUILDD)                                             
         ST    RE,ACOLTAB                                                       
         B     BU2                                                              
         EJECT                                                                  
***********************************************************************         
* INITIALIZE OUTLINE TABLE & ADD ENTRY FOR PLAN                       *         
***********************************************************************         
         SPACE 1                                                                
BU2      L     R8,NDIOA                                                         
         USING BURECD,R8           R8=A(PLAN RECORD)                            
*                                                                               
         LA    R1,BUFRSTEL         R1=A(PLAN ELEMENT)                           
         USING BUPLND,R1                                                        
         CLI   BUPLNEL,BUPLNELQ                                                 
         BE    *+6                                                              
         DC    H'0'                                                             
         MVC   PLNSTD,BUPLNST      SAVE PLAN START & END DATES                  
         MVC   PLNEND,BUPLNEND                                                  
         MVC   PLNPTR,NDLEVPTR     SAVE PLAN NDLVTAB ENTRY ADDRESS              
         MVC   PLNLEV,NDLEV        SAVE PLAN NODIO LEVEL NUMBER                 
         MVC   WORK(L'BUPLNNAM),BUPLNNAM                                        
         SR    RE,RE                                                            
         ICM   RE,3,BUPLNCNT                                                    
         BZ    BUX                                                              
         LA    RE,2(RE)            ADD 1 FOR PLAN & 1 FOR LUCK                  
         STCM  RE,3,OUTSEQM        SET MAX SEQUENCE NUMBER                      
         LA    RF,OUTTABL                                                       
         MR    RE,RE                                                            
         ST    RF,DUB              SAVE L'OUTLINE TABLE IN DUB                  
         LA    R0,0(RF)            HOB IS SUB-POOL FOR LV=(0)                   
         STCM  R0,7,LOUTTAB                                                     
         GETMAIN R,LV=(0)          GET STORAGE FOR OUTLINE TABLE                
         ST    R1,AOUTTAB                                                       
*                                                                               
         L     R0,AOUTTAB          CLEAR OUTTAB TO BINARY ZEROES                
         L     R1,DUB                                                           
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
*                                                                               
         LA    R1,OUTREC           BUILD & ADD PLAN LINE TO OUTTAB              
         USING OUTTABD,R1                                                       
         MVC   OUTCODE,PLNCODE     PLAN HAS HARD CODE                           
         MVI   OUTLVLN,0           PLAN IS LEVEL ZERO                           
         MVI   OUTIND2,OUTITOT     PLAN IS A TOTALS LINE                        
         XC    OUTSEQP,OUTSEQP     PLAN HAS NO PARENT                           
         MVC   OUTNAME,WORK        PLAN FULL NAME                               
         BAS   RE,PUTOUT           ADD PLAN ENTRY TO OUTLINE TABLE              
         B     BU10                                                             
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* READ DATA TYPE RECORDS AND BUILD REPORT COLUMN DEFINITION TABLE AND *         
* ACCUMULATOR COLUMN DEFINITION TABLE & INITIALIZE ACCUMULATORS       *         
***********************************************************************         
         SPACE 1                                                                
BU10     L     R2,VDTATAB                                                       
         USING DTATABD,R2          R2=A(DATA TYPE TABLE)                        
         MVC   ACOLNXT,ACOLTAB                                                  
BU12     CLI   DTACODE,0           TEST E-O-T                                   
         BE    BU16                                                             
         ZIC   RE,ACREPCOL         BUMP N'REPORT COLUMNS REQUESTED              
         LA    RE,1(RE)                                                         
         STC   RE,ACREPCOL                                                      
         GOTO1 NDDMGR,DMCB,GETREC,NDFILNAM,DTADA,NDIOA,WORK                     
         CLI   8(R1),0             TEST FOR ERRORS                              
         BE    *+6                                                              
         DC    H'0'                                                             
         L     R8,NDIOA                                                         
         CLI   BUDSUB,BUDSUBQ      ENSURE CORRECT RECORD WAS READ               
         BE    *+6                                                              
         DC    H'0'                                                             
         CLC   BUDTYP,DTACODE                                                   
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         MVI   ADDCOLLV,0          SET LEVEL FOR ADDCOL ROUTINE                 
         XC    DTADA,DTADA                                                      
         GOTO1 ADDCOL,BURECD       PROCESS DATA TYPE RECORD(S)                  
         LTR   R1,R1                                                            
         BNZ   *+8                                                              
         OI    DTAINDS,DTAILVL     SET BAD FORMULA                              
*                                                                               
BU14     LA    R2,DTATABL(R2)      BUMP TO NEXT DATA TYPE                       
         B     BU12                                                             
*                                                                               
BU16     SR    R1,R1               SET ACTUAL N'COLUMNS REQUIRED                
         ICM   R1,1,ACRAWCOL                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         SR    R0,R0                                                            
         ICM   R0,1,ACREPCOL                                                    
         BNZ   *+6                                                              
         DC    H'0'                                                             
         CR    R1,R0                                                            
         BH    *+6                                                              
         LR    R1,R0                                                            
         STH   R1,ACCOLUMN                                                      
         MH    R1,=Y(AW)                                                        
         STH   R1,ACCWIDTH                                                      
         SR    R0,R0                                                            
         ICM   R0,3,OUTSEQM                                                     
         MR    R0,R0                                                            
         LA    R0,0(R1)            HOB IS SUBPOOL FOR LV=(0)                    
         STCM  R0,7,LACCUMS                                                     
         GETMAIN R,LV=(0)                                                       
*                                                                               
         ST    R1,AACCUMS          SET A(ACCUMULATOR BLOCK)                     
         SR    R0,R0                                                            
         ICM   R0,3,OUTSEQM                                                     
         MH    R0,ACCOLUMN                                                      
         ZAP   0(AW,R1),PZERO      CLEAR ACCUMS TO PACKED ZEROES                
         LA    R1,AW(R1)                                                        
         BCT   R0,*-10                                                          
*                                                                               
         L     R1,AACCTAB          SORT ACCTAB INTO TYPE/PERIOD SEQ             
         IC    R0,ACRAWCOL                                                      
         SH    R0,=H'1'                                                         
         BZ    BU10X                                                            
BU18     LA    RF,ACCTABL(R1)                                                   
         LR    RE,R0                                                            
BU20     CLC   0(ACCTABL,R1),0(RF)                                              
         BNH   *+22                                                             
         XC    0(ACCTABL,R1),0(RF)                                              
         XC    0(ACCTABL,RF),0(R1)                                              
         XC    0(ACCTABL,R1),0(RF)                                              
         LA    RF,ACCTABL(RF)                                                   
         BCT   RE,BU20                                                          
         LA    R1,ACCTABL(R1)                                                   
         BCT   R0,BU18                                                          
*                                                                               
BU10X    B     BU40                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* READ OUTLINE RECORDS VIA NODIO AND BUILD OUTTAB ENTRY FOR EACH      *         
* FOR DETAIL LEVEL OUTLINES - READ DATA RECORDS AND POST TO ACCUMS    *         
***********************************************************************         
         SPACE 1                                                                
BU40     LA    R0,BU42                                                          
         ST    R0,NDHOOK                                                        
         XC    WORK,WORK                                                        
         GOTO1 VNODIO,PARM,NODBLKD,LSEQ,WORK                                    
         B     BU100                                                            
*                                                                               
BU42     ST    RE,SAVERE           SAVE NODIO RE                                
         CLI   NDMODE,NDPROC       TEST NODIO MODE=PROC                         
         BNE   EXIT                                                             
         L     R8,NDIOA                                                         
         LA    R3,OUTREC                                                        
         USING OUTTABD,R3          R3=A(OUTLINE ENTRY)                          
         XC    OUTTABD(OUTTABL),OUTTABD                                         
*                                                                               
         LA    R2,BUFRSTEL         PROCESS OUTLINE RECORD                       
BU44     CLI   0(R2),0             TEST E-O-R                                   
         BE    BU52                                                             
         CLI   0(R2),BUOUTELQ      TEST OUTLINE ELEMENT                         
         BE    BU48                                                             
         CLI   0(R2),BUPOLELQ      POLISH ELEMENT                               
         BE    BU50                                                             
BU46     ZIC   R0,1(R2)            BUMP TO NEXT ELEMENT                         
         AR    R2,R0                                                            
         B     BU44                                                             
*                                                                               
         USING BUOUTD,R2           PROCESS OUTLINE ELEMENT                      
BU48     L     RF,NDLEVPTR                                                      
         USING NDLVTABD,RF         RF=A(NODIO LEVEL ENTRY)                      
         MVC   OUTCODE,NDLVCOD                                                  
         OC    OUTCODE,SPACES                                                   
         MVC   OUTNODE,NDLVNOD                                                  
         ZIC   R1,NDLEV                                                         
         ZIC   R0,PLNLEV                                                        
         SR    R1,R0                                                            
         STC   R1,OUTLVLN          SET RELATIVE OUTLINE LEVEL NUMBER            
         MVC   OUTBEF,BUOUTBEF                                                  
         MVC   OUTAFT,BUOUTAFT                                                  
         MVC   OUTIND1,BUOUTIND                                                 
         MVC   OUTNAME,BUOUTNAM                                                 
         LA    RF,NDLVTABL(RF)     BUMP TO NEXT LEVEL TABLE ENTRY               
         CLI   OUTLVLN,MAXOUTS     TEST AT LOWEST LEVEL                         
         BE    BU49                YES-MUST BE A DETAIL LINE                    
         OC    NDLVNOD,NDLVNOD     TEST THIS LEVEL CREATES A NODE               
         BZ    BU49                                                             
*                                                                               
         OI    OUTIND2,OUTITOT     SET THIS IS A TOTAL LINE                     
         B     BU46                                                             
*                                                                               
BU49     OI    OUTIND2,OUTIDET     SET THIS IS A DETAIL LINE                    
         B     BU46                                                             
         DROP  RF                                                               
*                                                                               
         USING BUPOLD,R2           PROCESS POLISH ELEMENT                       
BU50     SR    RE,RE                                                            
         ICM   RE,3,FORMDAN        SAVE D/A OF RECORD FOR LATER READ            
         LA    RE,1(RE)                                                         
         LA    R0,MAXROWF                                                       
         CR    RE,R0               TEST N'ROW FORMULAS EXCEEDS MAX              
         BNH   *+6                                                              
         DC    H'0'                                                             
         STCM  RE,3,FORMDAN                                                     
         SLL   RE,2                                                             
         LA    RE,FORMDAS-4(RE)                                                 
         L     RF,NDLEVPTR                                                      
         MVC   0(4,RE),NDLVDA-NDLVTABD(RF)                                      
         NI    OUTIND2,X'FF'-OUTIDET CANNOT BE A DETAIL                         
         OI    OUTIND2,OUTIFOR     NOTE ROW FORMULA OUTLINE                     
         B     BU46                                                             
*                                                                               
BU52     BAS   RE,PUTOUT           ADD ENTRY TO OUTLINE TABLE                   
         TM    OUTIND2,OUTIDET     TEST DETAIL LEVEL OUTLINE                    
         BZ    *+8                 YES - READ DATA VALUES RECORDS               
         BAS   RE,BU54                                                          
         L     RE,SAVERE                                                        
         BR    RE                  EXIT BACK TO NODIO                           
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* READ DATA TYPE/PERIOD RECORDS VIA ACCTAB AND POST VALUES TO ACCUMS  *         
***********************************************************************         
         SPACE 1                                                                
BU54     NTR1  WORK=(R7,BU54WRKX-BU54WRKD)                                      
         USING BU54WRKD,R7         R7=A(LOCAL W/S)                              
         MVI   BU54FLAG,0                                                       
         L     R2,AACCTAB                                                       
         USING ACCTABD,R2          R2=A(ACCUM DEFINITION TABLE)                 
         ZIC   R3,ACRAWCOL         R3=N'TABLE ENTRIES                           
*                                                                               
BU56     LA    R8,BU54KEY          BUILD DATA TYPE/PERIOD KEY                   
         L     R1,NDLEVPTR                                                      
         MVC   BUKEY,NDLVKEY-NDLVTABD(R1)                                       
         MVI   BUKSUB,BUVSUBQ                                                   
         MVC   BUVDTYP,ACCCODE                                                  
         MVC   BUVPER,ACCSTD                                                    
         MVC   BU54KEYS(L'BUKEY),BUKEY                                          
         GOTO1 NDDMGR,DMCB,DMRDHI,NDDIRNAM,BUKEY,BUKEY                          
*                                                                               
BU58     CLI   8(R1),0             TEST EOF/PHYSICAL ERROR                      
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         CLC   BUKEY(BUVPER-BUKEY),BU54KEYS                                     
         BNE   BU70                                                             
         CLC   BUVPER,ACCEND       TEST PERIOD END EXCEEDED                     
         BH    BU70                                                             
         GOTO1 NDDMGR,DMCB,GETREC,NDFILNAM,BUKDA,NDIOA2,WORK                    
         CLI   8(R1),0             TEST PHYSICAL ERROR                          
         BE    *+6                                                              
         DC    H'0'                                                             
*                                                                               
         XC    DUB,DUB             INITIALIZE DUB FOR EXTRACTED VALUE           
         L     R8,NDIOA2           R8=A(DATA RECORD)                            
         LA    R4,BUFRSTEL                                                      
         USING BUDAD,R4            R4=A(FIRST ELEMENT)                          
         OC    ACCASAT,ACCASAT     TEST AS AT DATE REQUESTED                    
         BNZ   BU62                YES                                          
         SPACE 2                                                                
***********************************************************************         
* FOR ACCASAT=0, SEARCH FOR CURRENT DATA ONLY                         *         
***********************************************************************         
         SPACE 1                                                                
BU60     CLI   BUDAEL,0            TEST E-O-R                                   
         BE    BU66                                                             
         CLI   BUDAEL,BUDAELQ      DATA VALUE ELEMENT                           
         BNE   BU61                                                             
*                                                                               
         OC    BUDADATE,BUDADATE   TEST FOR CURRENT DATA                        
         BNZ   BU61                NO                                           
         MVC   DUB+0(EW),BUDAPREC  YES-EXTRACT IT                               
         ZAP   DUB+EW(PW),BUDATA                                                
         B     BU66                AND WE ARE DONE                              
*                                                                               
BU61     ZIC   R0,BUDALEN                                                       
         AR    R4,R0                                                            
         B     BU60                                                             
         SPACE 2                                                                
***********************************************************************         
* FOR ACCASAT NEQ 0, FIND THE APPROPRIATE SNAPSHOT ELEMENT OR RETURN  *         
* ZERO IF ACCASAT < ALL SNAPSHOTS DATES OR IF THERE ARE NO SNAPSHOTS  *         
***********************************************************************         
         SPACE 1                                                                
BU62     CLI   BUDAEL,0            TEST FOR EOR                                 
         BE    BU65                YES                                          
         CLI   BUDAEL,BUDAELQ      TEST FOR DATA ELEMENT                        
         BNE   BU64                                                             
         OC    BUDADATE,BUDADATE   TEST FOR CURRENT DATA                        
         BZ    BU64                YES-IGNORE IT                                
*                                                                               
BU63     MVC   BU54DATE,BUDADATE   GET COMPLEMENTED EFFECTIVE DATE              
         XC    BU54DATE,EFFS       REVERSE COMPLEMENT                           
         CLC   BU54DATE,ACCASAT    TEST EFF. DATE L.T. OR = AS AT DATE          
         BH    BU64                NO-BUMP TO NEXT ELEMENT                      
         MVC   DUB+0(EW),BUDAPREC                                               
         ZAP   DUB+EW(PW),BUDATA                                                
         B     BU66                STOP SEARCH                                  
*                                                                               
BU64     ZIC   R0,BUDALEN          BUMP TO NEXT ELEMENT                         
         AR    R4,R0                                                            
         B     BU62                                                             
*                                                                               
BU65     XC    DUB,DUB             NO SNAPSHOTS OR ASAT < ALL SNAPSHOTS         
*                                                                               
BU66     OC    DUB,DUB             TEST FOR ANY DATA TO POST                    
         BZ    BU68                NO-READ FOR NEXT RECORD                      
*                                                                               
         SR    RF,RF               DATA FOUND - POST TO ACCUM LINE              
         ICM   RF,3,OUTSEQL                                                     
         BCTR  RF,0                                                             
         MH    RF,ACCWIDTH                                                      
         A     RF,AACCUMS          RF=A(ACCUM LINE)                             
         SR    R0,R0                                                            
         ICM   R0,1,ACCSEQ                                                      
         BNZ   *+6                                                              
         DC    H'0'                                                             
         BCTR  R0,0                                                             
         MH    R0,=Y(AW)           R0=INDEX INTO ACCUM LINE                     
         AR    RF,R0               RF=OPERAND2                                  
         LA    R1,DUB              R1=OPERAND1                                  
         BAS   RE,OPADD            ADD DATA VALUE TO ACCUM                      
         OI    BU54FLAG,BU54FPST   SET DATA POSTED FLAG                         
*                                                                               
BU68     CLC   BUVPER,ACCEND       TEST PERIOD END DATE REACHED                 
         BNL   BU70                YES                                          
         LA    R8,BU54KEY                                                       
         GOTO1 NDDMGR,DMCB,DMRSEQ,NDDIRNAM,BUKEY,BUKEY                          
         B     BU58                                                             
*                                                                               
BU70     LA    R2,ACCTABL(R2)      BUMP TO NEXT ACCTAB ENTRY                    
         BCT   R3,BU56             DO FOR NUMBER OF ENTRIES                     
*                                                                               
BU72     TM    BU54FLAG,BU54FPST   TEST ANY DATA FOUND FOR THIS OUTLINE         
         BZ    BU54X                                                            
         SR    R1,R1                                                            
         ICM   R1,3,OUTSEQL                                                     
         BCTR  R1,0                                                             
         LA    R0,OUTTABL                                                       
         MR    R0,R0                                                            
         A     R1,AOUTTAB          R1=A(OUTLINE TABLE ENTRY)                    
         OI    OUTIND2-OUTTABD(R1),OUTIPST                                      
         BAS   RE,ROLL             ROLL ACCUM LINE TO PARENT LINES              
*                                                                               
BU54X    B     EXIT                EXIT TO NODIO                                
         DROP  R2,R4,R7                                                         
         EJECT                                                                  
***********************************************************************         
* READ OUTLINE RECORDS THAT CONTAIN FORMULAS & POST TO ROWTAB         *         
* THEN RESOLVE OUTLINE FORMULAS                                       *         
***********************************************************************         
         SPACE 1                                                                
BU100    SR    R0,R0                                                            
         ICM   R0,3,FORMDAN        R0=NUMBER OF ROW FORMULAS                    
         BZ    BU100X                                                           
         LA    R2,FORMDAS          R2=A(LIST OF FORMULA D/A'S)                  
         GOTO1 ,DMCB,GETREC,NDFILNAM,DUB,NDIOA,WORK                             
BU102    MVC   DUB(L'FORMDAS),0(R2)                                             
         GOTO1 NDDMGR,DMCB                                                      
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                                                             
         BAS   RE,PUTFORM          ADD OUTLINE FORMULA TO ROWTAB                
         LA    R2,L'FORMDAS(R2)                                                 
         BCT   R0,BU102                                                         
*                                                                               
         L     R2,AROWTAB          RESOLVE ROW FORMULAS                         
         USING ROWTABD,R2          R2=A(ROW FORMULA TABLE)                      
BU104    ICM   R2,7,ROWFRWD        R2=A(NEXT ROWTAB ENTRY)                      
         BZ    BU100X              TEST TABLE EMPTY                             
         CLI   ROWOP,ROWBOT        TEST B-O-T                                   
         BE    BU100X                                                           
         SR    R1,R1                                                            
         ICM   R1,3,ROWFROM                                                     
         BCTR  R1,0                                                             
         MH    R1,ACCWIDTH                                                      
         A     R1,AACCUMS          R1=A(FROM ACCUMULATOR LINE)                  
         SR    RF,RF                                                            
         ICM   RF,3,ROWTO                                                       
         BCTR  RF,0                                                             
         MH    RF,ACCWIDTH                                                      
         A     RF,AACCUMS          RF=A(TO ACCUMULATOR LINE)                    
         LH    R0,ACCOLUMN         R0=N'ACCUMS IN LINE                          
*                                                                               
BU106    MVC   OP,ROWOP            SET OPERATION CODE                           
         CLI   OP,ROWCON           TEST CONSTANT ATTACHED                       
         BNE   BU108                                                            
         LR    R3,R1               SAVE OPERAND ADDRESSES                       
         LR    R4,RF                                                            
         MVC   DUB,0(R1)                                                        
         LA    RF,DUB              RF=OPERAND2 (ROW)                            
         MVC   OP,ROWOP2           SET OPERATION                                
         LA    R1,ROWCNS           R1=OPERAND1 (CONSTANT)                       
         BAS   RE,OPERATE                                                       
         LA    R1,DUB                                                           
         LR    RF,R4                                                            
         BAS   RE,OPADD            ADD RESULT TO 'TO' OUTLINE                   
         LR    R1,R3                                                            
         B     BU110                                                            
BU108    BAS   RE,OPERATE                                                       
BU110    LA    R1,AW(R1)                                                        
         LA    RF,AW(RF)                                                        
         BCT   R0,BU106                                                         
         B     BU104               GET NEXT ROWTAB ENTRY                        
*                                                                               
BU100X   B     BU200                                                            
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* RESOLVE COLUMN FORMULAS FOR EACH ACCUM LINE STARTING WITH THE LAST  *         
* SO THAT FORMULAS REFERRING TO HIGHER LEVEL TOTALS (VERTICAL PCTS)   *         
* CAN REFERENCE RAW DATA CELLS (COLUMN VALUES OVERLAY RAW DATA)       *         
***********************************************************************         
         SPACE 1                                                                
BU200    SR    R2,R2                                                            
         ICM   R2,3,OUTSEQL                                                     
         LR    R3,R2               R3=CURRENT ACCUM LINE NUMBER                 
         BCTR  R2,0                                                             
         MH    R2,ACCWIDTH                                                      
         A     R2,AACCUMS          R2=A(LAST ACCUM LINE)                        
*                                                                               
BU202    LA    R0,ACCLINE          SET ACCUM LINE FOR EXECUTE S/R               
         LH    R1,ACCWIDTH                                                      
         LR    RE,R2                                                            
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
*                                                                               
         LR    R1,R2               CLEAR ACCUMULATOR LINE TO ZEROES             
         ZIC   R0,ACRAWCOL                                                      
         ZAP   0(AW,R1),PZERO                                                   
         LA    R1,AW(R1)                                                        
         BCT   R0,*-10                                                          
*                                                                               
         LR    R1,R3               TRACE OUTLINE PARENTAGE                      
         STCM  R1,3,OUTSEQL        SET CURRENT OUTLINE NUMBER                   
         BCTR  R1,0                                                             
         LA    R0,OUTTABL                                                       
         MR    R0,R0                                                            
         LA    RE,OUTSEQS          RE=A(OUTLINE TRACE TABLE)                    
         SR    RF,RF               RF=NUMBER OF PARENT OUTLINES                 
BU204    A     R1,AOUTTAB          R1=A(OUTLINE TABLE ENTRY)                    
         SR    R0,R0                                                            
         ICM   R0,3,OUTSEQP-OUTTABD(R1)                                         
         BZ    BU206                                                            
         STCM  R0,3,0(RE)          SET PARENT OUTLINE NUMBER IN TABLE           
         LA    RE,2(RE)            BUMP TO NEXT LEVEL TABLE ENTRY               
         LA    RF,1(RF)                                                         
         BCTR  R0,0                SET DISPLACEMENT TO PARENT OUTLINE           
         LA    R1,OUTTABL                                                       
         MR    R0,R0                                                            
         B     BU204               PROCESS NEXT PARENT OUTLINE                  
BU206    STC   RF,OUTLEVL          SET TOTAL NUMBER OF ANCESTORS                
*                                                                               
         L     R4,ACOLTAB          PROCESS COLUMN FORMULAS                      
         USING COLTABD,R4          R4=A(COLUMN FORMULA TABLE)                   
BU208    CLI   COLNUM,0            TEST NESTED FORMULA                          
         BE    BU210                                                            
         MVC   ADJ,COLOCTL         SET SCALE/EXPONENT OF OUTPUT                 
         GOTO1 EXECUTE,COLTABD     PROCESS COLUMN FORMULA                       
         ZIC   R1,COLNUM           INDEX INTO ACCUM LINE                        
         BCTR  R1,0                                                             
         MH    R1,=Y(AW)                                                        
         LA    R1,0(R2,R1)         R1=A(OUTPUT VALUE)                           
         MVC   0(AW,R1),DUB        SET OUTPUT VALUE                             
BU210    SR    RE,RE                                                            
         ICM   RE,3,COLLEN                                                      
         BZ    *+12                                                             
         LA    R4,COLTABD(RE)      BUMP TO NEXTS                                
         B     BU208                                                            
         SH    R2,ACCWIDTH         BACK UP TO PREVIOUS ACCUM LINE               
         BCT   R3,BU202            DO FOR NUMBER OF ACCUM LINES                 
*                                                                               
BU200X   B     BUX                 BUILD RETURN PARMS TO CALLER                 
         DROP  R4                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO EXECUTE A REPORT COLUMN FORMULA                          *         
*                                                                     *         
* NTRY - R1=A(COLUMN FORMULA)                                         *         
*        ACCLINE CONTAINS RAW DATA CELLS TO BE USED                   *         
*        ADJ CONTAINS OUTPUT SCALE/EXPONENT VALUE                     *         
*                                                                     *         
* EXIT - CC=EQUAL IF FORMULA EXECUTED OK WITH DUB CONTAINING RESULT   *         
*        CC=NOT EQUAL ON ERROR WITH DUB CONTAINING ZERO               *         
*                                                                     *         
* NOTE - THIS ROUTINE WILL CALL ITSELF TO RESOLVE NESTED COLUMN       *         
*        FORMULAS                                                     *         
***********************************************************************         
         SPACE 1                                                                
EXECUTE  NTR1  WORK=(R7,EXECWRKX-EXECWRKD)                                      
         USING EXECWRKD,R7         R7=A(LOCAL W/S)                              
         LR    R2,R1                                                            
         USING COLTABD,R2          R2=A(COLUMN FORMULA TABLE ENTRY)             
         LA    R3,EXECOPS          R3=A(OPERAND STACK)                          
         LA    R4,EXECVAL          R4=A(FORMULA STACK)                          
         LA    R5,COLOPND                                                       
         USING COLOPND,R5          R5=A(OPERAND LIST)                           
*                                                                               
         TM    COLINDS,COLIEXT     TEST DATA IS AN EXTRACT TYPE                 
         BZ    EXEC2                                                            
         BAS   RE,GETVAL           GET OPERAND VALUE (INTO DUB)                 
         BNE   EXECN                                                            
         BAS   RE,ADJUST           ADJUST SCALE/EXPONENT                        
         B     EXECY                                                            
*                                                                               
EXEC2    CLI   COLOPNUM,COLOPEND   TEST END OF OPERAND LIST                     
         BNE   *+12                                                             
         LA    R5,1(R5)            POINT TO FORMULA & EXECUTE IT                
         B     EXEC10                                                           
*                                                                               
         TM    COLOPTYP,COLOPCOL   TEST EXTRACT TYPE                            
         BZ    EXEC4                                                            
         BAS   RE,GETVAL           GET OPERAND VALUE (INTO DUB)                 
         BNE   EXECN                                                            
         BAS   RE,ADJUST           ADJUST SCALE/EXPONENT                        
         LA    R0,COLOPL1                                                       
         B     EXEC8                                                            
*                                                                               
EXEC4    TM    COLOPTYP,COLOPCNS   TEST SCALED CONSTANT VALUE                   
         BZ    EXEC6                                                            
         MVC   DUB,COLOPVAL        SET OPERAND VALUE                            
         LA    R0,COLOPL2                                                       
         B     EXEC8                                                            
*                                                                               
EXEC6    TM    COLOPTYP,COLOPFRM   TEST NESTED COLUMN FORMULA                   
         BNZ   *+6                                                              
         DC    H'0'                                                             
         ICM   R1,7,COLOPADR       R1=A(NESTED COLUMN FORMULA)                  
         BAS   RE,EXECUTE          RECURSE TO EXECUTE NESTED FORMULAS           
         BNE   EXECN                                                            
         LA    R0,COLOPL3                                                       
*                                                                               
EXEC8    AR    R5,R0               BUMP TO NEXT OPERAND ENTRY                   
         MVC   0(AW,R3),DUB                                                     
         LA    R3,AW(R3)                                                        
         B     EXEC2                                                            
*                                                                               
EXEC10   TM    0(R5),X'40'         TEST OPERAND/OPERATION                       
         BNZ   EXEC12                                                           
*                                                                               
         ZIC   R1,0(R5)            EXTRACT OPERAND                              
         BCTR  R1,0                                                             
         MH    R1,=Y(AW)                                                        
         LA    R1,EXECOPS(R1)                                                   
         MVC   0(AW,R4),0(R1)      SET OPERAND VALUE IN FORMULA STACK           
         B     EXEC14                                                           
*                                                                               
EXEC12   SH    R4,=Y(AW)           BACK-UP ONE OPERAND                          
         CLI   0(R5),C'='          TEST END OF FORMULA                          
         BE    EXEC16                                                           
         SH    R4,=Y(AW)           BACK-UP TWO OPERANDS                         
         LA    RF,0(R4)            RF=OPERAND1                                  
         LA    R1,AW(R4)           R1=OPERAND2                                  
         MVC   OP,0(R5)            SET OPERATION                                
         BAS   RE,OPERATE          EXECUTE OPERATION                            
*                                                                               
EXEC14   LA    R4,AW(R4)           BUMP TO NEXT OPERAND IN STACK                
         LA    R5,1(R5)            BUMP TO NEXT OPERAND/OPERATION               
         B     EXEC10                                                           
*                                                                               
EXEC16   MVC   DUB,0(R4)           RETURN VALUE                                 
         B     EXECY                                                            
*                                                                               
EXECN    LTR   RB,RB               SET CC=NOT EQUAL ON ERROR                    
         B     EXIT                                                             
*                                                                               
EXECY    CR    RB,RB               SET CC=EQUAL IF OK                           
         B     EXIT                                                             
         DROP  R2,R5,R7                                                         
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO GET OPERAND VALUE FROM AN ACCUMULATOR LINE               *         
*                                                                     *         
* NTRY - R5=A(OPERAND LEVEL NUMBER/ACCUMULATOR NUMBER)                *         
*                                                                     *         
* EXIT - DUB CONTAINS OPERAND VALUE (FROM ACCUMULATOR LINE)           *         
*        CC=EQUAL IF VALUE SET WITH DUB CONTAINING VALUE IF OK        *         
*        CC=NOT EQUAL WITH DUB CONTAINING ZERO ON ERROR               *         
***********************************************************************         
         SPACE 1                                                                
GETVAL   ZAP   DUB,PZERO           SET INITIAL OUTPUT VALUE                     
         USING COLOPND,R5          R5=A(OPERAND TO BE EXTRACTED)                
         LA    R1,ACCLINE                                                       
         CLI   COLOPLEV,0          TEST LEVEL=0 (CURRENT ACCUM LINE)            
         BE    GETVAL6                                                          
         SR    RF,RF                                                            
         ICM   RF,8,COLOPLEV       RF=LEVEL NUMBER (-N TO +N)                   
         SRA   RF,24                                                            
         LTR   RF,RF               -VE (-1=MY PARENT,-2=MY GRANDPARENT)         
         BP    GETVAL2             +VE (+1=PLAN LINE,+2=OUTLINE LEVEL1)         
         LPR   RF,RF                                                            
         CLM   RF,1,OUTLEVL        TEST GR ACTUAL LEVELS                        
         BH    GETVAL6                                                          
         SLL   RF,1                                                             
         LA    R1,OUTSEQS-2(RF)                                                 
         B     GETVAL4                                                          
GETVAL2  CLM   RF,1,OUTLEVL        TEST GR ACTUAL LEVELS                        
         BH    GETVAL6                                                          
         SLL   RF,1                                                             
         ZIC   R1,OUTLEVL                                                       
         SLL   R1,1                                                             
         LA    R1,OUTSEQS(R1)                                                   
         SR    R1,RF                                                            
GETVAL4  SR    R0,R0               POINT R1 TO ACCUM LINE                       
         ICM   R0,3,0(R1)                                                       
         BNZ   *+6                                                              
         DC    H'0'                                                             
         BCTR  R0,0                                                             
         LH    R1,ACCWIDTH                                                      
         MR    R0,R0                                                            
         A     R1,AACCUMS          R1=A(ACCUM LINE AT LEVEL +N OR -N)           
GETVAL6  ZIC   R0,COLOPACN                                                      
         BCTR  R0,0                                                             
         MH    R0,=Y(AW)           R0=INDEX TO ACCUMULATOR VALUE                
         AR    R1,R0                                                            
         MVC   DUB,0(R1)           SET OPERAND VALUE                            
GETVALX  LA    R1,DUB                                                           
         CR    RB,RB               SET CC=EQUAL IF VALUE SET                    
         BR    RE                                                               
         DROP  R5                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO BUILD COLTAB ENTRY FOR A DATA TYPE                       *         
*                                                                     *         
* NTRY - R1=A(DATA TYPE RECORD)                                       *         
*        R2=A(DATA TYPE TABLE ENTRY)                                  *         
*        ADDCOLLV=FORMULA NEST LEVEL                                  *         
*        ACREPCOL=REPORT COLUMN NUMBER                                *         
*                                                                     *         
* EXIT - R1=A(FORMULA ENTRY) OR ZERO IF NEST LEVEL EXCEEDED           *         
*                                                                     *         
* NOTE - THIS ROUTINE CAN BE CALLED BY ITSELF TO PROCESS RECURSIVE    *         
*        COLUMN FORMULAS                                              *         
***********************************************************************         
         SPACE 1                                                                
ADDCOL   NTR1  WORK=(R7,ADDWRKX-ADDWRKD)                                        
         USING ADDWRKD,R7          R7=A(LOCAL W/S)                              
         USING DTATABD,R2          R2=A(DTATAB ENTRY)                           
         LR    R8,R1                                                            
         SR    R1,R1                                                            
         ICM   R1,1,ADDCOLLV       R1=NET LEVEL (ZERO=BASE CALLER)              
         BNZ   *+16                                                             
         MVC   ADDCOLRD,4(RD)      SAVE RETURN REGISTER ADDRESS                 
         MVC   ACOLSAV,ACOLNXT     SAVE COLTAB POINTER                          
         LA    R1,1(R1)            BUMP CALLING LEVEL COUNT                     
         LA    R0,MAXNEST                                                       
         CR    R1,R0               TEST MAXIMUM LEVEL EXCEEDED                  
         BH    ADDCOLN             YES - EXIT TO BASE CALLER                    
         STC   R1,ADDCOLLV                                                      
*                                                                               
         LA    R3,ADDCOLWK                                                      
         USING COLTABD,R3          R3=A(REPORT COLUMN DEFN TABLE)               
         XC    COLTABD(COLHDRL),COLTABD                                         
         LA    RE,COLHDRL          SET INITIAL TABLE LENGTH                     
         STCM  RE,3,COLLEN                                                      
         CLI   ADDCOLLV,1          TEST LEVEL 0 (BASE CALLER)                   
         BNE   *+10                                                             
         MVC   COLNUM,ACREPCOL     YES - SET RECORD COLUMN NUMBER               
*                                                                               
         LA    R4,BUFRSTEL         R4=A(FIRST DATA TYPE REC ELEMENT)            
ADDCOL4  CLI   0(R4),0             TEST E-O-R                                   
         BE    ADDCOL32                                                         
         CLI   0(R4),BUDTELQ       DATA TYPE ELEMENT                            
         BE    ADDCOL8                                                          
         CLI   0(R4),BUDOPELQ      DATA OPERAND ELEMENT                         
         BE    ADDCOL12                                                         
         CLI   0(R4),BUPOLELQ      POLISH FORMULA ELEMENT                       
         BE    ADDCOL30                                                         
ADDCOL6  ZIC   R0,1(R4)            BUMP TO NEXT ELEMENT                         
         AR    R4,R0                                                            
         B     ADDCOL4                                                          
*                                                                               
         USING BUDTD,R4            R4=A(DATA TYPE ELEMENT)                      
ADDCOL8  CLI   COLINDS,0                                                        
         BE    *+6                                                              
         DC    H'0'                                                             
         ZIC   RE,BUDTSC                                                        
         ZIC   RF,BUDTDEC                                                       
         SR    RE,RF               RE=SCALE-N'DECIMAL PLACES                    
         BNM   *+10                                                             
         LPR   RE,RE                                                            
         LA    RE,NE(RE)                                                        
         STC   RE,COLOCTL          SET OUTPUT FIELD PRECISION                   
         CLI   BUDTEX,0            TEST EXTRACTABLE DATA                        
         BE    *+12                                                             
         OI    COLINDS,COLIEXT     SET EXTRACT OPERAND EXPECTED                 
         B     *+8                                                              
         OI    COLINDS,COLIFRM     ASSUME FORMULA OPERAND EXPECTED              
*                                                                               
         LR    R1,R4               LOCATE FIRST OPERAND ELEMENT                 
         SR    R0,R0                                                            
ADDCOL10 IC    R0,1(R1)                                                         
         AR    R1,R0                                                            
         CLI   0(R1),0             TEST E-O-R                                   
         BE    *+16                                                             
         CLI   0(R1),BUDOPELQ      OPERAND FOUND - IS A FORMULA                 
         BE    ADDCOL6                                                          
         B     ADDCOL10                                                         
*                                                                               
         USING BUDOPD,R1           ADD DUMMY OPERAND ELEMENT TO RECORD          
         MVI   BUDOPEL,BUDOPELQ                                                 
         MVI   BUDOPLEN,BUDOPL2Q                                                
         MVI   BUDOPCTL,BUDOPDTA   SET DATA TYPE OPERAND                        
         MVC   BUDOPTYP,DTACODE                                                 
         MVC   BUDOPLEV,DTAOPLEV                                                
         XC    BUDOPPER,BUDOPPER                                                
         IC    R0,BUDOPLEN                                                      
         AR    R1,R0                                                            
         MVI   0(R1),0             SET NEW E-O-R                                
         NI    COLINDS,FF-COLIFRM                                               
         OI    COLINDS,COLIEXT     SET EXTRACT OPERAND (DATA IS INPUT)          
         B     ADDCOL6                                                          
         DROP  R1                                                               
*                                                                               
         USING BUDOPD,R4           R4=A(DATA TYPE OPERAND ELEMENT)              
ADDCOL12 CLI   COLINDS,0           TEST DATA TYPE ELEMENT PROCESSED             
         BNE   *+6                                                              
         DC    H'0'                                                             
         OI    COLINDS,COLIOPS     SET OPERAND FOUND                            
         SR    R1,R1                                                            
         ICM   R1,3,COLLEN                                                      
         LA    R1,COLLEN(R1)                                                    
         USING COLOPND,R1          R1=A(OPERAND ENTRY)                          
         XC    COLOPND(COLOPL2),COLOPND                                         
         TM    BUDOPCTL,BUDOPDTA   TEST DATA TYPE OPERAND                       
         BNZ   ADDCOL14                                                         
         TM    COLINDS,COLIFRM     NO - MUST BE A FORMULA                       
         BNZ   *+6                                                              
         DC    H'0'                                                             
*                                                                               
         MVC   COLOPNUM,BUDOPN     BUILD CONSTANT ENTRY                         
         OI    COLOPTYP,COLOPCNS                                                
         MVC   COLOPVAL(EW),BUDOPCTL                                            
         NI    COLOPVAL,BUDOPNEG+BUDOPEXP                                       
         ZAP   COLOPVAL+EW(PW),BUDOPCON                                         
         LA    R0,COLOPL2                                                       
         B     ADDCOL28                                                         
*                                                                               
ADDCOL14 LA    RF,ADDWORK          ASSIGN A RAW DATA COLUMN TO OPERAND          
         USING ACCTABD,RF          RF=A(ACCTAB ENTRY)                           
         XC    ACCTABD(ACCTABL),ACCTABD                                         
         TM    COLINDS,COLIEXT     TEST DATA TYPE IS EXTRACT TYPE               
         BZ    ADDCOL20            NO                                           
         MVC   ACCCODE,BUDOPTYP    BUILD DUMMY ENTRY IN WORK                    
         OC    ACCSTD,BUDOPST      TEST ARGUMENT                                
         BNZ   *+10                                                             
         OC    ACCSTD,DTASTDT      YES - SET ARGUMENT VALUE                     
         BNZ   *+10                                                             
         OC    ACCSTD,PLNSTD       (DEFAULT=PLAN START DATE)                    
         OC    ACCEND,BUDOPEND     TEST ARGUMENT                                
         BNZ   *+10                                                             
         OC    ACCEND,DTAENDT      YES - SET ARGUMENT VALUE                     
         BNZ   *+10                                                             
         OC    ACCEND,PLNEND       (DEFAULT=PLAN END DATE)                      
         OC    ACCASAT,BUDOPAS                                                  
         BNZ   *+10                                                             
         MVC   ACCASAT,DTAASAT                                                  
         CLC   ACCASAT,EFFS        TEST ARGUMENT                                
         BNE   *+10                                                             
         XC    ACCASAT,ACCASAT     YES - SET ARGUMENT VALUE                     
*                                                                               
         L     RF,AACCTAB          TEST COLUMN IS ALREADY ASSIGNED              
         LA    RE,1                RE=COLUMN COUNT                              
         SR    R1,R1                                                            
         ICM   R1,1,ACRAWCOL       R1=N'COLUMNS USED SO FAR                     
         BZ    ADDCOL18                                                         
ADDCOL16 CLC   ACCTABD(ACCSEQ-ACCTABD),ADDWORK                                  
         BE    ADDCOL22                                                         
         LA    RE,1(RE)                                                         
         LA    RF,ACCTABL(RF)                                                   
         BCT   R1,ADDCOL16                                                      
*                                                                               
ADDCOL18 STC   RE,ACRAWCOL         SET NUMBER OF RAW DATA COLUMNS               
         LR    R1,RF                                                            
         LA    RF,ADDWORK                                                       
         MVC   ACCSEQ,ACRAWCOL                                                  
         MVC   0(ACCTABL,R1),ACCTABD                                            
         B     ADDCOL22                                                         
*                                                                               
ADDCOL20 LA    R8,ADDKEY           READ DATA TYPE RECORD                        
         ICM   RE,15,PLNPTR                                                     
         MVC   BUKEY,NDLVKEY-NDLVTABD(RE)                                       
         MVI   BUDSUB,BUDSUBQ                                                   
         MVC   BUDTYP,BUDOPTYP                                                  
         OC    BUDTYP,SPACES                                                    
         GOTO1 NDDMGR,DMCB,DMREAD,NDDIRNAM,BUKEY,BUKEY                          
         TM    8(R1),FF-X'12'      TEST ERRORS                                  
         BZ    *+6                                                              
         DC    H'0'                                                             
         TM    8(R1),X'12'         TEST NOT FOUND/DELETED                       
         BNZ   ADDCOLN                                                          
         GOTO1 (RF),(R1),GETREC,NDFILNAM,BUKDA,ADDIO,WORK                       
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                                                             
         MVC   ADDWORK2,DTATABD                                                 
         LR    R0,R2                                                            
         LA    R2,ADDWORK2                                                      
         MVC   DTACODE,BUDOPTYP                                                 
         OC    BUDOPST,BUDOPST                                                  
         BZ    *+10                                                             
         MVC   DTASTDT,BUDOPST                                                  
         OC    BUDOPEND,BUDOPEND                                                
         BZ    *+10                                                             
         MVC   DTAENDT,BUDOPEND                                                 
         OC    BUDOPAS,BUDOPAS                                                  
         BZ    *+10                                                             
         MVC   DTAASAT,BUDOPAS                                                  
         CLI   BUDOPLEV,0          TEST VERTICAL LEVEL OVERRIDE                 
         BE    *+10                                                             
         MVC   DTAOPLEV,BUDOPLEV                                                
         GOTO1 ADDCOL,ADDIO        PROCESS DATA TYPE RECORD                     
         LR    R2,R0                                                            
         LTR   R1,R1               TEST DATA IS AN EXTRACT TYPE                 
         BNZ   *+12                                                             
         IC    RE,DUB              YES - GET COLUMN NUMBER                      
         B     ADDCOL22                                                         
         STCM  R1,7,DUB+1          SET FORMULA ADDRESS                          
         SR    RE,RE               SET FORMULA OPERAND                          
*                                                                               
ADDCOL22 STC   RE,DUB              SET COLUMN NUMBER ASSIGNED                   
         SR    R1,R1                                                            
         ICM   R1,3,COLLEN                                                      
         LA    R1,COLLEN(R1)                                                    
         USING COLOPND,R1          R1=A(OPERAND ENTRY)                          
         CLI   DUB,0                                                            
         BE    ADDCOL26                                                         
         TM    COLINDS,COLIEXT     TEST EXTRACT TYPE                            
         BZ    ADDCOL24                                                         
         CLI   ADDCOLLV,1          YES - TEST LEVEL 0 CALLER                    
         BE    ADDCOL24                                                         
         SR    R1,R1               INDICATE EXTRACT TYPE TO CALLER              
         B     ADDCOLY             NOTE - DUB CONTAINS ACCUM NUMBER             
*                                                                               
ADDCOL24 MVC   COLOPNUM,BUDOPN     BUILD OPERAND ENTRY                          
         OI    COLOPTYP,COLOPCOL                                                
         MVC   COLOPLEV,BUDOPLEV                                                
         CLI   COLOPLEV,0                                                       
         BNE   *+10                                                             
         MVC   COLOPLEV,DTAOPLEV                                                
         MVC   COLOPACN,DUB                                                     
         LA    R0,COLOPL1                                                       
         B     ADDCOL28                                                         
*                                                                               
ADDCOL26 OI    COLOPTYP,COLOPFRM                                                
         MVC   COLOPADR,DUB+1                                                   
         LA    R0,COLOPL3                                                       
*                                                                               
ADDCOL28 SR    R1,R1               SET DISPLACEMENT TO NEXT OPERAND             
         ICM   R1,3,COLLEN                                                      
         AR    R1,R0                                                            
         STCM  R1,3,COLLEN                                                      
         B     ADDCOL6                                                          
*                                                                               
         USING BUPOLD,R4           R4=A(POLISH FORMULA ELEMENT)                 
ADDCOL30 TM    COLINDS,COLIFRM+COLIOPS                                          
         BO    *+6                                                              
         DC    H'0'                                                             
         TM    COLINDS,COLIPOL     ONLY ONE FORMULA SHOULD BE FOUND             
         BZ    *+6                                                              
         DC    H'0'                                                             
         OI    COLINDS,COLIPOL     SET FORMULA ELEMENT FOUND                    
         SR    R1,R1                                                            
         ICM   R1,3,COLLEN                                                      
         LR    RF,R1               SAVE CURRENT ENTRY LENGTH                    
         LA    R1,COLLEN(R1)       R1=A(NEXT OPERAND)                           
         MVI   0(R1),COLOPEND      DELIMIT OPERAND LIST                         
         ZIC   RE,BUPOLEN          ADD POLISH STRING AFTER DELIMITER            
         LA    R0,BUPOLISH+1-BUPOLD                                             
         SR    RE,R0                                                            
         EX    RE,*+8                                                           
         B     *+10                                                             
         MVC   1(0,R1),BUPOLISH                                                 
         LA    RE,2(RF,RE)         RE=NEW ENTRY LENGTH                          
         STCM  RE,3,COLLEN                                                      
         B     ADDCOL6                                                          
         DROP  R4                                                               
*                                                                               
ADDCOL32 TM    COLINDS,COLIEXT     TEST OPERAND FOUND IF EXTRACT                
         BZ    *+14                                                             
         TM    COLINDS,COLIOPS                                                  
         BNZ   ADDCOL34                                                         
         DC    H'0'                                                             
         TM    COLINDS,COLIFRM     TEST OPERAND & FORMULA FOUND IF NOT          
         BZ    *+12                                                             
         TM    COLINDS,COLIOPS+COLIPOL                                          
         BO    ADDCOL34                                                         
         DC    H'0'                                                             
*                                                                               
ADDCOL34 L     R0,ACOLNXT          MOVE FORMULA TO COLTAB                       
         LR    R4,R0               SAVE COLUMN TABLE ADDRESS                    
         SR    R1,R1                                                            
         ICM   R1,3,COLLEN                                                      
         LA    RE,0(R1,R4)                                                      
         ST    RE,ACOLNXT                                                       
         XC    0(COLHDRL,RE),0(RE)                                              
         LA    RE,COLLEN                                                        
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         LR    R1,R4                                                            
         B     ADDCOLY                                                          
*                                                                               
ADDCOLN  L     R1,ACOLSAV          RESTORE ORIGINAL COLTAB POINTER              
         ST    R1,ACOLNXT                                                       
         XC    0(COLHDRL,R1),0(R1)                                              
         ICM   RD,15,ADDCOLRD      RETURN TO LEVEL 0 CALLER                     
         LM    RE,RC,12(RD)                                                     
         SR    R1,R1                                                            
         BR    RE                                                               
*                                                                               
ADDCOLY  ZIC   RE,ADDCOLLV         DECREMENT NEST LEVEL                         
         BCTR  RE,0                                                             
         STC   RE,ADDCOLLV                                                      
         XIT1  REGS=(R1)           RETURN A(ENTRY) TO CALLER                    
         DROP  R2,R3,R7,RF                                                      
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO ADD OUTLINE FORMULA TO LIST OF FORMULAS - ENTRIES IN     *         
* ROWTAB ARE ADDED IN THE SEQUENCE THAT ENSURES CORRECT RESOLUTION    *         
* OF RECURSIVE OUTLINE ROW FORMULAS                                   *         
*                                                                     *         
* NTRY - NDIOA POINTS TO AN OUTLINE RECORD CONTAINING A ROW FORMULA   *         
***********************************************************************         
         SPACE 1                                                                
PUTFORM  NTR1  ,                                                                
         L     R8,NDIOA            R8=A(OUTLINE RECORD)                         
         MVC   DUB,BUKCODE                                                      
         OC    DUB,SPACES                                                       
         GOTO1 GETSEQ,DUB          XLATE CODE TO SEQUENCE NUMBER                
         BE    *+6                                                              
         DC    H'0'                OUTLINE MUST EXIST                           
*                                                                               
         LA    R1,WORK+L'ROWFROM   R1=A(ROW 'TO' LIST)                          
         MVC   0(L'ROWTO,R1),DUB                                                
PUTF1    SR    RE,RE               ADD ENTRY FOR ALL PARENTS                    
         ICM   RE,3,0(R1)                                                       
         BZ    PUTF2               ZERO=LAST PARENT                             
         BCTR  RE,0                                                             
         LA    RF,OUTTABL                                                       
         MR    RE,RE                                                            
         A     RF,AOUTTAB          RF=A(OUTLINE ENTRY)                          
         LA    R1,L'ROWTO(R1)      BUMP LIST POINTER                            
         TM    OUTIND1-OUTTABD(RF),BUOUTNSU                                     
         BNZ   PUTF2                                                            
         MVC   0(L'ROWTO,R1),OUTSEQP-OUTTABD(RF)                                
         B     PUTF1                                                            
*                                                                               
PUTF2    XC    0(L'ROWTO,R1),0(R1)                                              
         LA    R2,BUFRSTEL                                                      
         USING BUROPD,R2           R2=A(OPERAND ELEMENT)                        
PUTF3    CLI   BUROPEL,0           TEST E-O-R                                   
         BE    PUTFORMX                                                         
         CLI   BUROPEL,BUROPELQ    TEST OPERAND ELEMENT                         
         BNE   PUTF9                                                            
         TM    BUROPCTL,BUROPOUT   MUST BE OUTLINE OPERAND                      
         BZ    PUTF9                                                            
         MVC   DUB,BUROPCOD                                                     
         OC    DUB,SPACES                                                       
         GOTO1 GETSEQ,DUB          XLATE CODE TO SEQUENCE NUMBER                
         BNE   PUTF9                                                            
         MVC   WORK(L'ROWFROM),DUB SAVE 'FROM' ROW                              
         LA    R3,WORK+L'ROWFROM   POINT TO FIRST 'TO' LINE                     
*                                                                               
         ZIC   R1,BUROPLEN         CHECK IF A CONSTANT FOLLOWS                  
         LA    R1,BUROPD(R1)       R1=A(NEXT ELEMENT)                           
         CLI   BUROPEL-BUROPD(R1),BUROPELQ                                      
         BNE   PUTF4                                                            
         TM    BUROPCTL-BUROPD(R1),BUROPCNS                                     
         BZ    PUTF4                                                            
         MVC   OPND(EW),BUROPCTL-BUROPD(R1)                                     
         NI    OPND,BUROPNEG+BUROPEXP                                           
         ZAP   OPND+EW(PW),BUROPCON-BUROPD(L'BUROPCON,R1)                       
         MVC   OP,BUROPER2-BUROPD(R1)                                           
         MVI   BUROPER,ROWCON      SET CONSTANT REQUIRED                        
*                                                                               
PUTF4    OC    0(2,R3),0(R3)       TEST END OF 'TO' LIST                        
         BZ    PUTF9                                                            
         LA    RF,ROWREC           BUILD ROWTAB LINE                            
         USING ROWTABD,RF                                                       
         XC    ROWREC,ROWREC                                                    
         MVC   ROWFROM,WORK                                                     
         MVC   ROWTO,0(R3)                                                      
         MVC   ROWOP,BUROPER                                                    
         CLI   ROWOP,ROWCON        TEST CONSTANT REQUIRED                       
         BNE   *+16                                                             
         MVC   ROWOP2,OP                                                        
         MVC   ROWCNS,OPND                                                      
         DROP  RF                                                               
*                                                                               
         L     RE,AROWTAB          LOCATE CORRECT PLACE FOR ENTRY               
         USING ROWTABD,RE                                                       
         XC    DUB,DUB                                                          
         ICM   RE,7,ROWFRST        RE=A(FIRST ENTRY)                            
         BNZ   PUTF5                                                            
*                                                                               
         L     RE,AROWTAB          TABLE EMPTY - INITIALIZE                     
         LA    RF,ROWTABD+ROWTABL                                               
         XC    ROWTABD(ROWTABL*2),ROWTABD                                       
         MVC   0(ROWTABL2,RF),ROWREC                                            
         STCM  RF,7,ROWLAST        SET ANCHOR LINKS                             
         STCM  RF,7,ROWFRST                                                     
         STCM  RF,7,ROWHIGH                                                     
         USING ROWTABD,RF                                                       
         STCM  RE,7,ROWBACK        SET FIRST ENTRY LINKS                        
         STCM  RE,7,ROWFRWD                                                     
         B     PUTF8                                                            
         DROP  RF                                                               
*                                                                               
         USING ROWTABD,RE          PROCESS ALL ROWTAB ENTRIES                   
PUTF5    CLC   ROWTO,ROWFROM-ROWTABD(RF)                                        
         BNE   *+8                                                              
         ST    RE,DUB+0            SET A(LAST REFERENCE OF ROWFROM)             
         CLC   ROWFROM,ROWTO-ROWTABD(RF)                                        
         BNE   PUTF6                                                            
         OC    DUB+4(4),DUB+4      SET A(FIRST REFERENCE OF ROWTO)              
         BNZ   *+8                                                              
         ST    RE,DUB+4                                                         
PUTF6    ICM   RE,7,ROWFRWD        RE=NEXT ENTRY IN CHAIN                       
         CLI   ROWOP,ROWBOT        TEST B-O-T                                   
         BNE   PUTF5                                                            
*                                                                               
         ICM   RF,7,ROWHIGH        CREATE NEW ENTRY                             
         LA    R0,ROWTABL                                                       
         CLI   ROWOP-ROWTABD(RF),ROWCON                                         
         BNE   *+8                                                              
         LA    R0,ROWTABL2                                                      
         AR    RF,R0                                                            
         STCM  RF,7,ROWHIGH                                                     
         MVC   0(ROWTABL2,RF),ROWREC                                            
         ICM   RE,15,DUB+4         ADD BEFORE THIS ENTRY                        
         BZ    *+12                                                             
         ICM   RE,7,ROWBACK        (ADD BEFORE THIS = ADD AFTER PREV)           
         B     PUTF7                                                            
         ICM   RE,15,DUB+0         ADD AFTER THIS ENTRY                         
         BNZ   PUTF7                                                            
         L     RE,AROWTAB                                                       
         ICM   RE,7,ROWLAST        ADD AFTER LAST ENTRY                         
*                                                                               
PUTF7    DS    0H                  LINK NEW ENTRY TO PREV & NEXT                
         MVC   ROWFRWD-ROWTABD(L'ROWFRWD,RF),ROWFRWD                            
         STCM  RF,7,ROWFRWD                                                     
         ICM   RE,7,ROWFRWD-ROWTABD(RF)                                         
         MVC   ROWBACK-ROWTABD(L'ROWBACK,RF),ROWBACK                            
         STCM  RF,7,ROWBACK                                                     
*                                                                               
PUTF8    LA    R3,L'ROWTO(R3)      POINT TO NEXT 'TO' LIST ENTRY                
         B     PUTF4                                                            
*                                                                               
PUTF9    ZIC   R0,BUROPLEN         BUMP TO NEXT ELEMENT                         
         AR    R2,R0                                                            
         B     PUTF3                                                            
*                                                                               
PUTFORMX B     EXIT                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO TRANSLATE OUTLINE CODE INTO OUTLINE ROW NUMBER           *         
*                                                                     *         
* NTRY - R1=A(OUTLINE CODE)                                           *         
*                                                                     *         
* EXIT - DUB(2)=OUTLINE SEQUENCE NUMBER                               *         
*        CC=EQ IF OUTLINE CODE FOUND, NEQ IF NOT FOUND                *         
***********************************************************************         
         SPACE 1                                                                
GETSEQ   L     RF,AOUTTAB                                                       
         USING OUTTABD,RF          RF=A(OUTTAB)                                 
         SR    R0,R0                                                            
         ICM   R0,3,OUTSEQL        R0=N'OUTTAB ENTRIES                          
GETSEQ2  CLC   OUTCODE,0(R1)       MATCH TABLE TO ARGUMENT                      
         BNE   *+14                                                             
         MVC   DUB(L'OUTSEQN),OUTSEQN                                           
         CR    RB,RB               SET CC=EQ                                    
         BR    RE                                                               
         LA    RF,OUTTABL(RF)                                                   
         BCT   R0,GETSEQ2                                                       
         LTR   RB,RB               SET CC=NEQ                                   
         BR    RE                                                               
         DROP  RF                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO ADD AN OUTLINE ENTRY TO OUTTAB                           *         
*                                                                     *         
* NTRY - OUTREC CONTAINS OUTLINE ENTRY TO BE ADDED                    *         
*        OUTSEQL IS CURRENT HIGHEST OUTLINE SEQUENCE NUMBER USED      *         
*        OUTSEQS CONTAIN LEVEL PARENT DETAILS                         *         
***********************************************************************         
         SPACE 1                                                                
PUTOUT   LA    R1,OUTREC                                                        
         USING OUTTABD,R1          R1=A(OUTLINE ENTRY TO BE ADDED               
         SR    RF,RF                                                            
         ICM   RF,3,OUTSEQL        ASSIGN NEXT OUTLINE SEQUENCE NUMBER          
         LA    RF,1(RF)                                                         
         STCM  RF,3,OUTSEQL        AND ALLOCATE TO THIS ENTRY                   
         STCM  RF,3,OUTSEQN                                                     
         ZIC   RF,OUTLVLN                                                       
         SLL   RF,1                RE=OUTLINE LEVEL NUMBER*2                    
         LA    RF,OUTSEQS-2(RF)                                                 
         CLI   OUTLVLN,0           TEST PLAN ENTRY (LEVEL=0)                    
         BE    *+10                YES - PLAN HAS NO PARENT                     
         MVC   OUTSEQP,0(RF)       SET SEQUENCE NUMBER OF MY PARENT             
         MVC   2(2,RF),OUTSEQN     SET SEQUENCE NUMBER FOR MY CHILDREN          
         SR    R1,R1                                                            
         ICM   R1,3,OUTSEQL                                                     
         BCTR  R1,0                                                             
         LA    R0,OUTTABL                                                       
         MR    R0,R0                                                            
         A     R1,AOUTTAB          R1=A(ALLOCATED OUTLINE TABLE ENTRY)          
         MVC   0(OUTTABL,R1),OUTREC                                             
         XC    OUTTABL(OUTTABL,R1),OUTTABL(R1)                                  
PUTOUTX  BR    RE                                                               
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINE TO ROLL ACCUMULATOR LINE TO ALL PARENT LINES                *         
*                                                                     *         
* NTRY - R1=A(OUTLINE TABLE ENTRY TO BE ROLLED)                       *         
***********************************************************************         
         SPACE 1                                                                
ROLL     NTR1  ,                                                                
         LR    R2,R1                                                            
         USING OUTTABD,R2          R2=A(OUTLINE TABLE ENTRY)                    
         SR    R3,R3                                                            
         ICM   R3,3,OUTSEQN                                                     
         BCTR  R3,0                                                             
         MH    R3,ACCWIDTH                                                      
         A     R3,AACCUMS          R3=A(ACCUMS TO BE ROLLED)                    
ROLL2    SR    R1,R1                                                            
         ICM   R1,3,OUTSEQP        EXIT ON LAST PARENT                          
         BZ    ROLLX                                                            
         TM    OUTIND1,BUOUTNSU    TEST THIS LINE POSTS                         
         BNZ   ROLLX                                                            
         BCTR  R1,0                                                             
         LR    RF,R1                                                            
         LA    R0,OUTTABL                                                       
         MR    R0,R0                                                            
         A     R1,AOUTTAB                                                       
         LR    R2,R1               R2=A(PARENT OUTLINE TABLE ENTRY)             
         MH    RF,ACCWIDTH                                                      
         A     RF,AACCUMS          RF=A(PARENT ACCUM LINE)                      
         LH    R0,ACCOLUMN         R0=NUMBER OF ACCUM COLUMNS                   
         LR    R1,R3               R1=A(ACCUM LINE TO BE ROLLED)                
ROLL4    BAS   RE,OPADD                                                         
         LA    R1,AW(R1)                                                        
         LA    RF,AW(RF)                                                        
         BCT   R0,ROLL4                                                         
         B     ROLL2               PROCESS NEXT PARENT ENTRY                    
ROLLX    B     EXIT                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* ROUTINES TO PERFORM COMPUTATIONS ON TWO NUMBERS IN SCALE FORMAT     *         
*                                                                     *         
* NTRY - R1=A(SOURCE ACCUMULATOR)      - OPERAND1                     *         
*        RF=A(DESTINATION ACCUMULATOR) - OPERAND2                     *         
*                                                                     *         
* CALL - OPADD   - TO ADD OPERAND1 TO OPERAND2                        *         
*        OPSUB   - TO SUBTRACT OPERAND1 FROM OPERAND2                 *         
*        OPMUL   - TO MULTIPLY OPERAND2 BY OPERAND1                   *         
*        OPDIV   - TO DIVIDE OPERAND2 BY OPERAND1 (ROUNDED)           *         
*        OPERATE - WITH OP CONTAINING OPERATION TO BE PERFORMED       *         
*                                                                     *         
* EXIT - OPERAND2 CONTAINS RESULT                                     *         
*                                                                     *         
* NOTE - SCALE VALUE OF EITHER OPERAND1 OR OPERAND2 MAY BE ALTERED BY *         
*        THIS ROUTINE TO REFLECT THE HIGHEST LEVEL OF PRECISION OF    *         
*        EITHER OPERAND UNLESS BOTH OPERANDS HAVE THE SAME SCALE      *         
***********************************************************************         
         SPACE 1                                                                
OPADDQ   EQU   C'+'                ADD                                          
OPADD    MVI   OP,OPADDQ                                                        
         B     OPERATE                                                          
         SPACE 1                                                                
OPSUBQ   EQU   C'-'                SUBTRACT                                     
OPSUB    MVI   OP,OPSUBQ                                                        
         B     OPERATE                                                          
         SPACE 1                                                                
OPMULQ   EQU   C'*'                MULTIPLY                                     
OPMUL    MVI   OP,OPMULQ                                                        
         B     OPERATE                                                          
         SPACE 1                                                                
OPDIVQ   EQU   C'/'                DIVIDE                                       
OPDIV    MVI   OP,OPDIVQ                                                        
         B     OPERATE                                                          
         SPACE 1                                                                
OPERATE  STM   RE,R1,12(RD)        SAVE REGISTERS                               
         CLC   0(EW,R1),0(RF)      TEST BOTH OPERANDS HAVE SAME SCALE           
         BE    OPERATE4            YES - NO SCALE ADJUSTMENTS REQUIRED          
*                                                                               
         ZIC   R0,0(R1)            SET R0 TO OPERAND1 SHIFT VALUE               
         SLL   R0,24+1             SHIFT OFF EXPONENT SIGN                      
         SRL   R0,24+1                                                          
         TM    0(R1),NE            TEST NEGATIVE EXPONENT                       
         BO    *+6                                                              
         LNR   R0,R0               POSITIVE EXPONENTS SHIFT RIGHT               
*                                                                               
         ZIC   RE,0(RF)            SET RE TO OPERAND2 SHIFT VALUE               
         SLL   RE,24+1             SHIFT OFF EXPONENT SIGN                      
         SRL   RE,24+1                                                          
         TM    0(RF),NE            TEST NEGATIVE EXPONENT                       
         BO    *+6                                                              
         LNR   RE,RE               POSITIVE EXPONENTS SHIFT RIGHT               
         CR    R0,RE                                                            
         BL    OPERATE2                                                         
*                                                                               
         SR    R0,RE               ADJUST OPERAND2 SCALE                        
         LR    RE,R0                                                            
         SRP   EW(PW,RF),0(RE),0                                                
         MVC   0(EW,RF),0(R1)                                                   
         B     OPERATE4                                                         
*                                                                               
OPERATE2 SR    RE,R0               ADJUST OPERAND1 SCALE                        
         SRP   EW(PW,R1),0(RE),0                                                
         MVC   0(EW,R1),0(RF)                                                   
*                                                                               
OPERATE4 CLI   OP,OPSUBQ           GO TO OPERATION S/R                          
         BE    OPSUBR                                                           
         CLI   OP,OPMULQ                                                        
         BE    OPMULR                                                           
         CLI   OP,OPDIVQ                                                        
         BE    OPDIVR                                                           
         SPACE 1                                                                
OPADDR   AP    EW(PW,RF),EW(PW,R1)                                              
         B     OPERATEX                                                         
         SPACE 1                                                                
OPSUBR   SP    EW(PW,RF),EW(PW,R1)                                              
         B     OPERATEX                                                         
         SPACE 1                                                                
OPMULR   ZAP   WORK(16),EW(PW,RF)  USE WORK(16) FOR MULTIPLY                    
         MP    WORK(16),EW(PW,R1)                                               
         TM    0(RF),NE            TEST IF ANY DECIMAL PLACES                   
         BZ    OPMULR2                                                          
         ZIC   RE,0(RF)                                                         
         SLL   RE,24+1                                                          
         SRL   RE,24+1                                                          
         LNR   RE,RE                                                            
         SRP   WORK(16),0(RE),5    YES - SHIFT OFF EXTRAS GENERATED             
OPMULR2  ZAP   EW(PW,RF),WORK(16)                                               
         B     OPERATEX                                                         
         SPACE 1                                                                
OPDIVR   CP    EW(PW,R1),PZERO     TEST DIVIDE BY ZERO                          
         BNE   *+14                                                             
         ZAP   EW(PW,RF),PZERO     YES - RESULT IS ZERO                         
         B     OPERATEX                                                         
         ZAP   WORK(16),EW(PW,RF)  USE WORK(16) FOR DIVIDE                      
         SR    RE,RE                                                            
         TM    0(RF),NE            TEST ANY DECIMAL PLACES                      
         BZ    OPDIV2                                                           
         ZIC   RE,0(RF)                                                         
         SLL   RE,24+1                                                          
         SRL   RE,24+1             RE=N'DECIMAL PLACES                          
OPDIV2   LA    RE,1(RE)                                                         
         SRP   WORK(16),0(RE),0    SHIFT FIELD N'DECS (+1 FOR ROUND)            
         DP    WORK(16),EW(PW,R1)  DIVIDE & ROUND RESULT                        
         SRP   WORK(16-PW),64-1,5                                               
         ZAP   EW(PW,RF),WORK(16-PW)                                            
         SPACE 1                                                                
OPERATEX LM    RE,R1,12(RD)        RESTORE REGISTERS & RETURN                   
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* ADJUST SCALE/EXPONENT OF A FIELD TO VALUE SET IN ADJ                *         
*                                                                     *         
* NTRY - R1=A(FIELD TO BE ADJUSTED)                                   *         
*        ADJ=NEW SCALE/EXPONENT VALUE                                 *         
***********************************************************************         
         SPACE 1                                                                
ADJUST   CLC   ADJ,0(R1)           TEST SCALE/EXPONENT EQUAL                    
         BE    ADJUSTX                                                          
         ZIC   RF,ADJ                                                           
         SLL   RF,24+1                                                          
         SRL   RF,24+1                                                          
         TM    ADJ,NE                                                           
         BO    *+6                                                              
         LNR   RF,RF               RF='ADJUST TO' SHIFT VALUE                   
         ZIC   R0,0(R1)                                                         
         SLL   R0,24+1                                                          
         SRL   R0,24+1                                                          
         TM    0(R1),NE                                                         
         BO    *+6                                                              
         LNR   R0,R0               R0='ADJUST FROM' SHIFT VALUE                 
         SR    RF,R0               RF=TOTAL SHIFT VALUE                         
         SRP   EW(PW,R1),0(RF),5                                                
         MVC   0(EW,R1),ADJ        SET NEW SCALE/EXPONENT VALUE                 
ADJUSTX  BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* BUILD RETURN PARAMETERS & EXIT TO CALLER                            *         
***********************************************************************         
         SPACE 1                                                                
BUX      L     R1,APARM                                                         
         USING BUPARMD,R1                                                       
         MVC   BUPAOUTT,AOUTTAB                                                 
         LA    R0,WORK                                                          
         ST    R0,BUPAACCD                                                      
         MVC   BUPAACCS,AACCUMS                                                 
         LA    R1,WORK                                                          
         USING ACCDEFD,R1                                                       
         XC    ACCDEFD(ACCDEFL),ACCDEFD                                         
         MVC   ACCACOLS,ACCOLUMN                                                
         MVC   ACCAWDTH,ACCWIDTH                                                
         ZIC   R0,ACREPCOL                                                      
         STCM  R0,3,ACCPCOLS                                                    
         MH    R0,=Y(AW)                                                        
         STCM  R0,3,ACCPWIDE                                                    
         MVC   ACCAROWS,OUTSEQM                                                 
         MVC   ACCOUTL,LOUTTAB                                                  
         MVC   ACCACCL,LACCUMS                                                  
         DROP  R1                                                               
         SPACE 1                                                                
EXIT     XIT1  ,                                                                
         EJECT                                                                  
         LTORG                                                                  
         SPACE 1                                                                
PLNCODE  DC    C'**PLAN**'                                                      
GETREC   DC    C'GETREC  '                                                      
DMREAD   DC    C'DMREAD  '                                                      
DMRDHI   DC    C'DMRDHI  '                                                      
DMRSEQ   DC    C'DMRSEQ  '                                                      
LSEQ     DC    C'LSEQ'                                                          
EFFS     DC    X'FFFFFFFF'                                                      
SPACES   DC    CL8' '                                                           
PZERO    DC    P'0'                                                             
         SPACE 1                                                                
MAXCOLS  EQU   182                 MAXIMUM NUMBER OF ACCUM COLUMNS              
MAXOUTS  EQU   6                   NUMBER OF OUTLINE LEVELS                     
MAXLEVS  EQU   7                   MAXIMUM N'OUTLINE LEVELS+1 FOR PLAN          
MAXNEST  EQU   8                   MAXIMUM NEST LEVEL OF COLUMN FORMULA         
MAXROWF  EQU   3500                MAXIMUM NUMBER OF ROW FORMULAS               
NE       EQU   X'80'               NEGATIVE EXPONENT                            
FF       EQU   X'FF'               GENERAL FF                                   
AW       EQU   8                   ACCUMULATOR WIDTH                            
EW       EQU   1                   EXPONENT WIDTH                               
PW       EQU   AW-EW               PACKED VALUES WIDTH                          
         EJECT                                                                  
COLTABD  DSECT                     ** COLUMN FORMULA TABLE **                   
COLLEN   DS    XL2                 L'COLTAB ENTRY                               
COLNUM   DS    X                   OUTPUT REPORT COLUMN NUMBER                  
COLOCTL  DS    X                   OUTPUT VALUE PRECISION                       
COLINDS  DS    X                   COLUMN DATA DERIVATION                       
COLIEXT  EQU   X'80'               DATA IS AN EXTRACT TYPE                      
COLIFRM  EQU   X'40'               FORMULA FOLLOWS                              
COLIOPS  EQU   X'20'               OPERAND(S) FOUND                             
COLIPOL  EQU   X'10'               POLISH FORMULA FOUND                         
COLHDRL  EQU   *-COLTABD                                                        
*                                                                               
COLOPND  DS    0X                  FORMULA OPERAND LIST                         
COLOPNUM DS    X                   OPERAND NUMBER                               
COLOPEND EQU   X'FF'               END-OF-LIST TERMINATOR                       
COLOPTYP DS    X                   OPERAND TYPE                                 
COLOPCOL EQU   X'80'               LEVEL NUMBER/COLUMN NUMBER FOLLOWS           
COLOPCNS EQU   X'40'               SCALED CONSTANT FOLLOWS                      
COLOPFRM EQU   X'20'               A(COLUMN FORMULA FOLLOWS)                    
COLOP    DS    0X                  OPERAND FOLLOWS                              
*                                                                               
COLOPLEV DS    X                   ACCUMULATOR LEVEL NUMBER (-N TO +N)          
COLOPACN DS    X                   ACCUMULATOR COLUMN NUMBER (1-N)              
COLOPL1  EQU   *-COLOPND                                                        
         ORG   COLOP                                                            
COLOPVAL DS    PL(AW)              SCALED CONSTANT VALUE                        
COLOPL2  EQU   *-COLOPND                                                        
         ORG   COLOP                                                            
COLOPADR DS    AL3                 A(NESTED COLUMN FORMULA)                     
COLOPL3  EQU   *-COLOPND                                                        
*                                  POLISH FORMULA FOLLOWS OPERAND LIST          
         SPACE 1                                                                
ACCTABD  DSECT                     ** RAW ACCUM DEFINITION TABLE **             
ACCCODE  DS    CL8                 DATA TYPE CODE                               
ACCSTD   DS    XL2                 START DATE                                   
ACCEND   DS    XL2                 END DATE                                     
ACCASAT  DS    XL3                 ASAT DATE                                    
ACCSEQ   DS    X                   SEQUENCE NUMBER                              
ACCTABL  EQU   *-ACCTABD                                                        
         EJECT                                                                  
ROWTABD  DSECT                     ** ROW FORMULA TABLE **                      
ROWBACK  DS    AL3                 LINK TO PREVIOUS ENTRY                       
ROWLAST  EQU   ROWBACK             LINK ANCHOR TO LAST ENTRY                    
ROWFRWD  DS    AL3                 LINK TO NEXT ENTRY                           
ROWFRST  EQU   ROWFRWD             LINK ANCHOR TO FIRST ENTRY                   
ROWOP    DS    X                   OPERATION VALUE (SEE OP EQUATES)             
ROWBOT   EQU   0                   ANCHOR ENTRY ID (BOTTOM-OF-TABLE)            
ROWCON   EQU   1                   CONSTANT PRESENT                             
ROWHIGH  DS    AL3                 LINK TO NEXT AVAILABLE SLOT                  
         ORG   ROWHIGH                                                          
ROWFROM  DS    XL2                 FROM OUTLINE ROW                             
ROWTO    DS    XL2                 TO OUTLINE ROW                               
ROWTABL  EQU   *-ROWTABD                                                        
*                                                                               
ROWOP2   DS    X                   CONSTANT OPERATION                           
ROWCNS   DS    PL(AW)              SCALED CONSTANT VALUE                        
ROWTABL2 EQU   *-ROWTABD                                                        
         EJECT                                                                  
       ++INCLUDE BUILDERD                                                       
         EJECT                                                                  
BU54WRKD DSECT                     ** BU54 S/R LOCAL W/S **                     
BU54FLAG DS    X                   FLAG BYTE                                    
BU54FPST EQU   X'80'               DATA IS POSTED TO OUTLINE                    
BU54DATE DS    XL3                 DATA VALUE ELEMENT EFFECTIVE DATE            
BU54KEY  DS    XL64                DATA VALUE KEY                               
BU54KEYS DS    XL64                DATA VALUE KEY SAVE                          
BU54WRKX EQU   *                                                                
         SPACE 1                                                                
ADDWRKD  DSECT                     ** ADDCOL S/R LOCAL W/S **                   
ADDCOLWK DS    512X                COLTAB ENTRY BUILT HERE                      
ADDWORK  DS    XL(ACCTABL)         ACCTAB ENTRY BUILT HERE                      
ADDWORK2 DS    XL(DTATABL)         DTATAB ENTRY BUILT HERE                      
ADDKEY   DS    XL64                DATA TYPE KEY                                
ADDIO    DS    1000C               DATA TYPE RECORD                             
ADDWRKX  EQU   *                                                                
         SPACE 1                                                                
EXECWRKD DSECT                     ** EXECUTE S/R LOCAL W/S **                  
EXECOPS  DS    (MAXCOLS)PL(AW)     OPERAND VALUES                               
EXECVAL  DS    (MAXCOLS)PL(AW)     OPERAND STACK FOR FORMULA EXECUTION          
EXECWRKX EQU   *                                                                
         EJECT                                                                  
BUILDD   DSECT                     ** BUILDER GLOBAL W/S **                     
DUB      DS    D                                                                
DMCB     DS    6F                                                               
PARM     DS    6F                                                               
WORK     DS    XL80                                                             
SAVERE   DS    A                                                                
APARM    DS    A                   A(PASSED PARAMETER LIST)                     
VNODBLK  DS    A                   A(NODIO BLOCK)                               
VDTATAB  DS    A                   A(DATA TABLE)                                
VNODIO   DS    A                   A(NODIO)                                     
AOUTTAB  DS    A                   A(OUTLINE TABLE)                             
AACCUMS  DS    A                   A(ACCUMULATOR BLOCK)                         
AROWTAB  DS    A                   A(ROW TABLE) - SEE ROWTABD                   
ACOLTAB  DS    A                   A(COLUMN TABLE) - SEE COLTABD                
ACOLSAV  DS    A                   A(SAVE COLUMN TABLE ENTRY)                   
ACOLNXT  DS    A                   A(NEXT COLUMN TABLE ENTRY)                   
AACCTAB  DS    A                   A(RAW DATA TABLE) - SEE ACCTABD              
LOUTTAB  DS    XL3                 L'OUTLINE TABLE                              
LACCUMS  DS    XL3                 L'ACCUMS                                     
         SPACE 1                                                                
OUTREC   DS    XL(OUTTABL)         BUILD OUTTAB RECORD HERE                     
ROWREC   DS    XL(ROWTABL2)        BUILD ROWTAB RECORD HERE                     
         SPACE 1                                                                
PLNSTD   DS    XL2                 PLAN START DATE                              
PLNEND   DS    XL2                 PLAN END DATE                                
PLNPTR   DS    AL4                 PLAN NDLVTAB ENTRY ADDRESS                   
PLNLEV   DS    X                   PLAN NODIO LEVEL NUMBER                      
         SPACE 1                                                                
ADDCOLRD DS    AL4                 SAVED RD VALUE AT FIRST CALL LEVEL           
ADDCOLLV DS    X                   ADDCOL ROUTINE FORMULA LEVEL                 
         SPACE 1                                                                
OPND     DS    PL(AW)              CONSTANT OPERAND FOR PUTFORM S/R             
OP       DS    X                   OPERATION VALUE FOR OPERATE S/R              
ADJ      DS    X                   SCALE ADJ VALUE FOR ADJUST S/R               
         SPACE 1                                                                
OUTLEVL  DS    X                   NUMBER OF OUTLINE PARENT LEVELS              
OUTSEQM  DS    XL2                 MAXIMUM OUTLINE SEQUENCE NUMBER              
OUTSEQL  DS    XL2                 CURRENT OUTLINE SEQUENCE NUMBER              
OUTSEQS  DS    (MAXLEVS)XL2        CURRENT SEQS FOR EACH OUTLINE LEVEL          
         SPACE 1                                                                
ACCWIDTH DS    H                   ACTUAL ACCUM LINE WIDTH                      
ACCOLUMN DS    H                   ACTUAL ACCUM LINE COLUMNS                    
ACREPCOL DS    X                   N'DATA COLUMNS REQUESTED                     
ACRAWCOL DS    X                   N'RAW ACCUM COLUMNS REQUIRED                 
         SPACE 1                                                                
FORMDAN  DS    XL2                 N'ENTRIES IN FORMDAS                         
FORMDAS  DS    (MAXROWF)XL4        ONE ENTRY PER OUTLINE FORMULA                
         ORG   FORMDAS                                                          
ACCLINE  DS    (MAXCOLS)PL(AW)     SAVED ACCUMULATOR LINE                       
         ORG                                                                    
ACCTAB   DS    (MAXCOLS+1)XL(ACCTABL)                                           
COLTAB   DS    8192C               MAKE LARGER IF REQUIRED                      
ROWTAB   DS    ((MAXLEVS*MAXROWF)+1)XL(ROWTABL)                                 
BUILDX   EQU   *                                                                
         EJECT                                                                  
* DDNODBLKD                                                                     
         PRINT OFF                                                              
       ++INCLUDE DDNODBLKD                                                      
         PRINT ON                                                               
         SPACE 1                                                                
* BUGENFILE                                                                     
         PRINT OFF                                                              
       ++INCLUDE BUGENFILE                                                      
         PRINT ON                                                               
         SPACE 1                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'006BUILDER   05/01/02'                                      
         END                                                                    
