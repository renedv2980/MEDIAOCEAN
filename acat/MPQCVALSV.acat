*          DATA SET MPQCVALSV  AT LEVEL 039 AS OF 05/01/02                      
*CATALP MPQCVAL                                                                 
         TITLE 'MPQCVAL- Q SYSTEM LANGUAGE TRANSLATOR'                          
QCVAL    CSECT                                                                  
         PRINT NOGEN                                                            
         NMOD1 WKDL,QCVAL                                                       
         SPACE 2                                                                
         USING WKD,RC                                                           
         XC    WKD(WKDL),WKD                                                    
         ST    R1,SAVR1                                                         
         L     RA,8(R1)            A(MPQBLK)                                    
         USING MPQBLKD,RA                                                       
*                                                                               
         LM    R2,R3,0(R1)         R2=A(INPUT), R3=A(OUTPUT)                    
         ZIC   RF,0(R1)            LENGTH OF INPUT                              
         LA    RF,0(R2,RF)                                                      
         ST    RF,EOINP            SET END OF INPUT STRING                      
*                                                                               
         LA    R4,OPSTK+((MAXOPS-1)*OPSTKL)                                     
         ST    R4,LOSPOS           SAVE END OF STACK                            
*                                                                               
EV10     DS    0H                                                               
         C     R2,EOINP       END OF INPUT                                      
         BNL   EV90                                                             
*                                                                               
         LA    R5,KWLST                                                         
         USING KWLSTD,R5                                                        
*                                                                               
EV12     DS    0H                                                               
         ZIC   R7,KWLLM1           LENGTH OF KEYWORK -1                         
         EX    R7,KWCOMP                                                        
         BNE   EV14                                                             
*                                                                               
         ZIC   RF,KWLPROC                                                       
         BCTR  RF,R0                                                            
         SLL   RF,2                                                             
         BAS   RE,BRTAB(RF)                                                     
*                                                                               
         CLI   MPQBERR,0                                                        
         BNE   EVERR                                                            
         B     EV10                                                             
*                                                                               
EV14     DS    0H                                                               
         LA    R5,KWLSTL(R5)                                                    
         CLI   0(R5),X'FF'                                                      
         BNE   EV12                                                             
*                                                                               
         MVI   MPQBERR,UNKNERR                                                  
         B     EVERR                                                            
*                                                                               
EV90     DS    0H                                                               
         CLI   PL,0                                                             
         BE    *+12                                                             
         MVI   MPQBERR,PARERR                                                   
         B     EVERR                                                            
*                                                                               
EV91     DS    0H                  FLUSH OPERATOR STACK                         
         CLI   0(R4),0                                                          
         BE    EV92                                                             
         MVC   0(1,R3),0(R4)                                                    
         LA    R3,1(R3)                                                         
         LA    R4,OPSTKL(R4)                                                    
         B     EV91                                                             
*                                                                               
EV92     DS    0H                                                               
         MVI   MPQBERR,AMISERR  OPERAND MISSING                                 
         CLI   LTYP,C'A'                                                        
         BNE   EVERR                                                            
*                                                                               
         L     R1,SAVR1                                                         
         MVI   0(R3),0                                                          
         MVI   4(R1),0                                                          
         S     R3,4(R1)                                                         
         STC   R3,4(R1)            SET OUTPUT LENGTH                            
         MVI   MPQBERR,0                                                        
         XC    MPQBEADD,MPQBEADD                                                
         MVI   MPQBEMSG,C' '                                                    
         MVC   MPQBEMSG+1(L'MPQBEMSG-1),MPQBEMSG                                
         B     EVEXT                                                            
*                                                                               
EVERR    DS    0H                                                               
         C     R2,EOINP            ERROR ADDRESS                                
         BL    *+6                                                              
         SR    R2,R2               SKIP IF AT END                               
         STCM  R2,15,MPQBEADD                                                   
         ZIC   R6,MPQBERR                                                       
         BCTR  R6,R0                                                            
         MH    R6,=Y(L'MPQBEMSG)                                                
         LA    R6,ERRMSGS(R6)                                                   
         MVC   MPQBEMSG,0(R6)                                                   
*                                                                               
EVEXT    DS    0H                                                               
         XIT1                                                                   
*                                                                               
KWCOMP   CLC   KWLCODE(0),0(R2)                                                 
*                                                                               
         EJECT                                                                  
*        PROCESSING ROUTINES                                                    
*        -------------------                                                    
         SPACE 2                                                                
BRTAB    DS    0F                                                               
         B     BLNK                                                             
         B     CDPNTR                                                           
         B     CLPNTR                                                           
         B     RPAR                                                             
         B     LPAR                                                             
         B     OPTR                                                             
         B     PNCH                                                             
         B     THRU                                                             
         B     COMP                                                             
         B     NFLEN                                                            
         DC    F'0'                                                             
*                                                                               
         SPACE 2                                                                
*        BLANK                                                                  
         SPACE 2                                                                
BLNK     DS    0H                                                               
         LA    R2,1(R2)            IGNORE BLANKS                                
         BR    RE                                                               
         SPACE 3                                                                
*        CARD POINTER                                                           
*        ------------                                                           
         SPACE 2                                                                
CDPNTR   DS    0H                                                               
         XC    MPQBCOLP,MPQBCOLP   CLEAR COLUMN POINTER                         
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,3                MAX 3 DIGITS                                 
         BAS   R9,SETNUM           GET VALUE OF FOLLOWING DIGITS                
*                                                                               
         LTR   R0,R0                                                            
         BNP   CDPNTRE                                                          
         CH    R0,MPQBNCRD         TEST VS HIGH CARD NO.                        
         BH    CDPNTRE                                                          
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         STCM  R0,3,MPQBCRDP       SET CARD POINTER                             
         MVC   LTYP,KWLTYP                                                      
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),CDP           SET OP CODE                                  
         STCM  R0,3,1(R3)          SET CARD CUMBER                              
         LA    R3,3(R3)            BUMP                                         
         BR    RE                                                               
*                                                                               
CDPNTRE  DS    0H                                                               
         MVI   MPQBERR,CDNERR                                                   
         BR    RE                                                               
         SPACE 3                                                                
*        COLUMN POINTER                                                         
*        --------------                                                         
         SPACE 2                                                                
CLPNTR   DS    0H                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,2                MAX 2 DIGITS                                 
         CLC   MPQBNCOL,=H'100'    UNLESS 100+ 'COLUMNS'                        
         BL    *+8                                                              
         LA    R1,3                                                             
         BAS   R9,SETNUM           GET VALUE OF FOLLOWING DIGITS                
*                                                                               
         LTR   R0,R0                                                            
         BNP   CLPNTRE                                                          
         CH    R0,MPQBNCOL         TEST VS HIGH COL NO.                         
         BH    CLPNTRE                                                          
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         STCM  R0,3,MPQBCOLP       SET COLUMN POINTER                           
         MVC   LTYP,KWLTYP                                                      
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),CLP           SET OP CODE                                  
         STCM  R0,3,1(R3)          SET COLUMN NUMBER                            
         LA    R3,3(R3)            BUMP                                         
         BR    RE                                                               
*                                                                               
CLPNTRE  DS    0H                                                               
         MVI   MPQBERR,CLNERR                                                   
         BR    RE                                                               
         SPACE 3                                                                
*        PUNCH                                                                  
*        -----                                                                  
         SPACE 2                                                                
PNCH     DS    0H                                                               
         OC    MPQBCRDP,MPQBCRDP   CARD POINTER MUST BE SET                     
         BZ    PNCHE                                                            
         OC    MPQBCOLP,MPQBCOLP   COLUMN POINTER MUST BE SET                   
         BZ    PNCHEB                                                           
*                                                                               
         CLI   LTYP,C'A'           CONSECUTIVE OPERANDS                         
         BE    PNCHEC                                                           
*                                                                               
         MVC   LTYP,KWLTYP                                                      
         L     RF,ACTR             BUMP OPERAND STACK COUNTER                   
         LA    RF,1(RF)                                                         
         ST    RF,ACTR                                                          
*                                                                               
         ZIC   R0,MPQBSTMX         TEST TOO MANY OPERANDS STACKED               
         CR    RF,R0                                                            
         BH    PNCHED                                                           
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),PCH                                                        
         MVC   1(1,R3),0(R2)       PUNCH CODE                                   
         LA    R3,2(R3)            BUMP                                         
*                                                                               
         MVC   LPNCH,0(R2)         SVE PUNCH CODE                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
*                                                                               
PNCHE    DS    0H                                                               
         MVI   MPQBERR,CDMISERR                                                 
         BR    RE                                                               
*                                                                               
PNCHEB   DS    0H                                                               
         MVI   MPQBERR,CLMISERR                                                 
         BR    RE                                                               
*                                                                               
PNCHEC   DS    0H                                                               
         MVI   MPQBERR,OPMISERR                                                 
         BR    RE                                                               
*                                                                               
PNCHED   DS    0H                                                               
         MVI   MPQBERR,OPMXERR                                                  
         BR    RE                                                               
*                                                                               
         SPACE 3                                                                
*        OPERATOR                                                               
*        --------                                                               
         SPACE 2                                                                
OPTR     DS    0H                                                               
         CLI   KWLOPCD,NOT         EXCEPT FOR 'NOT'                             
         BE    OPTR2                                                            
*                                                                               
         CLI   LTYP,C'A'           OPERATORS MUST FOLLOW OPERANDS               
         BNE   OPTRE                                                            
         B     OPTR4                                                            
*                                                                               
OPTR2    DS    0H                                                               
         CLI   LTYP,C'A'           'NOT' MUST NOT FOLLOW OPERAND                
         BE    OPTREB                                                           
*                                                                               
OPTR4    DS    0H                                                               
         CLI   0(R4),0             TEST HAVE OP IN STACK                        
         BE    OPTR6               NO - SET THIS OP                             
         CLC   PL,1(R4)            TEST OP IN STACK AT THIS PAREN LEV           
         BE    OPTR8               YES                                          
*                                                                               
OPTR5    DS    0H                                                               
         SH    R4,=Y(OPSTKL)       NO-LEAVE IT AND ADD THIS ON TOP              
         LA    R0,OPSTK                                                         
         CR    R4,R0               TEST BEFORE BEGINNING OF STACK               
         BL    OPTREC              TOO MANY OPERATORS                           
*                                                                               
OPTR6    DS    0H                                                               
         MVC   0(1,R4),KWLOPCD     SET CURRENT OP IN STACK                      
         MVC   1(1,R4),PL          ALONG WITH PAREN LEV                         
         MVC   2(1,R4),KWLOPHI     AND HIERARCHY                                
         B     OPTR10                                                           
*                                  OP IN STACK IS AT THIS PAREN LEV             
OPTR8    DS    0H                                                               
         CLC   KWLOPHI,2(R4)       TEST OPERATOR HIERARCHY                      
         BH    OPTR5               IF CURRENT OP HIGH SET IN STACK              
         CLI   KWLOPCD,NOT         OR IF A 'NOT' (HANDLES                       
         BE    OPTR5               DOUBLE NEGATIVES)                            
*                                  ELSE FLUSH STACK TO NEXT PAREN LEV           
         MVC   0(1,R3),0(R4)       SET OP IN OUTPUT FROM STACK                  
         XC    0(OPSTKL,R4),0(R4)                                               
         LA    R3,1(R3)                                                         
         LA    R4,OPSTKL(R4)       BUMP OPSTK POINTER                           
*                                  AND REPLACE WITH THIS OP                     
         C     R4,LOSPOS           TEST AT LAST                                 
         BH    OPTR5               AND REPLACE WITH THIS OP                     
         B     OPTR4                                                            
*                                                                               
OPTR10   DS    0H                                                               
         XC    ACTR,ACTR           CLEAR OPERAND COUNTER                        
         MVC   LTYP,KWLTYP                                                      
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
*                                                                               
OPTRE    DS    0H                                                               
         MVI   MPQBERR,AMISERR                                                  
         BR    RE                                                               
*                                                                               
OPTREB   DS    0H                                                               
         MVI   MPQBERR,OPMISERR                                                 
         BR    RE                                                               
*                                                                               
OPTREC   DS    0H                                                               
         MVI   MPQBERR,OPMXERR                                                  
         BR    RE                                                               
         SPACE 3                                                                
*        LEFT PAREN                                                             
*        ----------                                                             
         SPACE 2                                                                
LPAR     DS    0H                                                               
         CLI   LTYP,C'A'           MUST NOT FOLLOW OPERAND                      
         BE    LPARE                                                            
*                                                                               
         ZIC   RF,PL               BUMP PAREN LEVEL                             
         LA    RF,1(RF)                                                         
         STC   RF,PL                                                            
*                                                                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
*                                                                               
LPARE    DS    0H                                                               
         MVI   MPQBERR,OPMISERR                                                 
         BR    RE                                                               
         SPACE 3                                                                
*        RIGHT PAREN                                                            
*        -----------                                                            
         SPACE 2                                                                
RPAR     DS    0H                                                               
         CLI   LTYP,C'A'           MUST FOLLOW OPERAND                          
         BNE   RPARE                                                            
*                              FLUSH OPERATORS AT THIS PAREN LEV                
RPAR4    DS    0H                                                               
         CLC   PL,1(R4)            TEST AT THIS LEVEL                           
         BNE   RPAR6               NO - DONE                                    
         MVC   0(1,R3),0(R4)       YES - SET IN OUTPUT                          
         LA    R3,1(R3)                                                         
         XC    0(OPSTKL,R4),0(R4)   AND CLEAR OPERATOR                          
         C     R4,LOSPOS           TST AT END OF OPSTK                          
         BE    RPAR6                                                            
         LA    R4,OPSTKL(R4)       BUMP OPSTK POINTER                           
         B     RPAR4                                                            
*                                                                               
RPAR6    DS    0H                                                               
         ZIC   RF,PL               DECREMENT PAREN LEVEL                        
         BCTR  RF,R0                                                            
         STC   RF,PL                                                            
*                                                                               
         LTR   RF,RF                                                            
         BM    RPAREB              UNPAIRED PARENS                              
*                                                                               
         LA    R2,1(R2,R7)         BUMP INPUT STRING POINTER                    
         BR    RE                                                               
*                                                                               
RPARE    DS    0H                                                               
         MVI   MPQBERR,AMISERR                                                  
         BR    RE                                                               
*                                                                               
RPAREB   DS    0H                                                               
         MVI   MPQBERR,PARERR                                                   
         BR    RE                                                               
         SPACE 3                                                                
*        COMPARISONS                                                            
*        ----------                                                             
         SPACE 2                                                                
COMP     DS    0H                                                               
         CLI   MPQBNLEN,0          LENGTH OF FIELD MUST BE SET                  
         BE    COMPE                                                            
*                                                                               
         CLI   LTYP,C'A'           TEST CONSECUTIVE OPERANDS                    
         BE    COMPEB                                                           
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,10                                                            
         BAS   R9,SETNUM                                                        
*                                                                               
         LTR   R1,R1               TEST ANY COMPARAND                           
         BNP   COMPEC                                                           
*                                                                               
         AR    R2,R1               BUMP INPUT STRING POINTER                    
         MVC   LTYP,KWLTYP                                                      
*                                  SET OUTPUT STRING                            
         MVI   0(R3),NCOMP                                                      
         MVC   1(1,R3),KWLOPCD     TYPE OF COMPARISON                           
         STCM  R0,15,2(R3)         COMPARAND                                    
         LA    R3,6(R3)            BUMP                                         
         MVI   LPNCH,0             FOR 'THRU' RANGE LOGIC                       
         BR    RE                                                               
*                                                                               
COMPE    DS    0H                                                               
         MVI   MPQBERR,NFMISERR    LENGTH MISSING                               
         BR    RE                                                               
*                                                                               
COMPEB   DS    0H                                                               
         MVI   MPQBERR,OPMISERR                                                 
         BR    RE                                                               
*                                                                               
COMPEC   DS    0H                                                               
         MVI   MPQBERR,COMPERR                                                  
         BR    RE                                                               
         SPACE 3                                                                
*        SET FIELD LENGTH                                                       
*        ----------------                                                       
         SPACE 2                                                                
NFLEN    DS    0H                                                               
         OC    MPQBCRDP,MPQBCRDP     CARD NUMBER MUST BE GIVEN                  
         BNZ   *+10                                                             
         MVI   MPQBERR,CDMISERR                                                 
         BR    RE                                                               
*                                                                               
         OC    MPQBCOLP,MPQBCOLP     COL NUMBER MUST BE GIVEN                   
         BNZ   *+10                                                             
         MVI   MPQBERR,CLMISERR                                                 
         BR    RE                                                               
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         LA    R1,2                                                             
         BAS   R9,SETNUM                                                        
*                                                                               
         LTR   R1,R1               TEST ANY LENGTH GIVEN                        
         BNP   NFLENE                                                           
         LTR   R0,R0                                                            
         BNP   NFLENE                                                           
         CH    R0,=H'15'                                                        
         BH    NFLENE                                                           
*                                                                               
         STC   R0,MPQBNLEN         SET LENGTH                                   
         AR    R2,R1               BUMP INPUT STRING POINTER                    
*                                  SET OUTPUT STRING                            
         MVI   0(R3),NFLENC        CODE                                         
         STC   R0,1(R3)            LENGTH                                       
         LA    R3,2(R3)            BUMP                                         
         BR    RE                                                               
*                                                                               
NFLENE   DS    0H                                                               
         MVI   MPQBERR,NFLENERR                                                 
         BR    RE                                                               
*                                                                               
         SPACE 3                                                                
*        THRU - OR'ED RANGE SPEC                                                
*        -----------------------                                                
         SPACE 2                                                                
THRU     DS    0H                                                               
         CLI   LTYP,C'A'           MUST FOLLOW OPERAND                          
         BNE   THRUE                                                            
*                                                                               
         LA    R2,1(R2,R7)         POINT PAST KEYWORD                           
         CLI   0(R2),C' '          STRIP ANY BLANKS                             
         BH    *+12                                                             
         LA    R2,1(R2)                                                         
         B     *-12                                                             
*                                                                               
         LA    RF,PCHLST           NEXT CHAR MUST BE A PUNCH                    
*                                                                               
THRU4    DS    0H                                                               
         CLI   0(RF),X'FF'         EOL                                          
         BE    THRUEB              INVALID RANGE                                
         CLC   0(1,R2),0(RF)                                                    
         BE    THRU6                                                            
         LA    RF,1(RF)                                                         
         B     THRU4                                                            
*                                                                               
THRU6    DS    0H                                                               
         CLC   0(1,R2),LPNCH       TEST BOTH ENDS THE SAME                      
         BE    THRUEB                                                           
*                                                                               
         MVI   0(R3),COPTSW        SET ON CONDTION OPTIONAL SW                  
         MVI   1(R3),C'Y'                                                       
         LA    R3,2(R3)                                                         
*                                                                               
         LA    RF,PCHLST           LAST PUNCH IS START OF RANGE                 
*                                                                               
THRU8    DS    0H                                                               
         CLI   0(RF),X'FF'                                                      
         BNE   *+6                                                              
         DC    H'0'                LAST PUNCH NOT A PUNCH                       
*                                                                               
         CLC   LPNCH,0(RF)                                                      
         BE    THRU10                                                           
         LA    RF,1(RF)                                                         
         B     THRU8                                                            
*                                                                               
THRU10   DS    0H                                                               
         LA    RF,1(RF)            START WITH NEXT                              
         CLI   0(RF),X'FF'         AT EOL                                       
         BNE   *+8                                                              
         LA    RF,PCHLST           START OVER                                   
*                                  SET IN OUTPUT STRING                         
         MVI   0(R3),PCH           PUNCH TYPE                                   
         MVC   1(1,R3),0(RF)       ACTUAL PUNCH                                 
         MVI   2(R3),OR            OPERATOR                                     
         LA    R3,3(R3)            BUMP                                         
*                                                                               
         CLC   0(1,R2),0(RF)       TEST HAVE REACHED STARTING POINT             
         BNE   THRU10                                                           
*                                                                               
         MVI   0(R3),COPTSW        SET OFF CONDITION OPTIONAL SWITCH            
         MVI   1(R3),C'N'                                                       
         LA    R3,2(R3)                                                         
*                                                                               
         MVI   LPNCH,0          WILL DISALLOW CONSECUTIVE RANGE SPECS           
         MVC   LTYP,KWLTYP                                                      
         LA    R2,1(R2)            BUMP INPUT POINTER                           
         BR    RE                                                               
*                                                                               
THRUE    DS    0H                                                               
         MVI   MPQBERR,AMISERR                                                  
         BR    RE                                                               
*                                                                               
THRUEB   DS    0H                                                               
         MVI   MPQBERR,THRUERR                                                  
         BR    RE                                                               
         EJECT                                                                  
*        SETNUM - SET IN R0 NUMERIC VALUE OF UP TO N CONSECUTIVE                
*                 DIGITS AT R2 (N IN R1)                                        
*                 SET ACTUAL LENGTH IN R1                                       
*                 POINT R2 TO NEXT POSITION                                     
         SPACE 2                                                                
SETNUM   DS    0H                                                               
         CLI   0(R2),C' '          STRIP ANY INITIAL BLANKS                     
         BH    *+12                                                             
         LA    R2,1(R2)                                                         
         B     *-12                                                             
*                                                                               
         SR    R0,R0                                                            
         LR    RF,R2                                                            
*                                                                               
SETNUM4  DS    0H                                                               
         CLI   0(RF),C'0'                                                       
         BL    SETNUM6                                                          
         CLI   0(RF),C'9'                                                       
         BH    SETNUM6                                                          
*                                                                               
         LA    RF,1(RF)                                                         
         B     SETNUM4                                                          
*                                                                               
SETNUM6  DS    0H                  AT END ON NUMERICS                           
         SR    RF,R2                                                            
         CR    RF,R1               TEST VS MAX                                  
         BNL   *+10                                                             
         LTR   R1,RF               IF LOW USE ACTUAL LENGTH                     
         BNP   SETNUMX             NO DIGITS                                    
         BCTR  R1,R0                                                            
         EX    R1,SETNPACK                                                      
         CVB   R0,DUB                                                           
         LA    R1,1(R1)            LENGTH IN R1                                 
*                                                                               
SETNUMX  DS    0H                                                               
         BR    R9                                                               
*                                                                               
SETNPACK PACK  DUB,0(0,R2)                                                      
         EJECT                                                                  
*        KEY WORD LIST                                                          
         SPACE 3                                                                
*        DSECT TO COVER KEYWORD LIST                                            
         SPACE 2                                                                
KWLSTD   DSECT                                                                  
KWLCODE  DS    CL8                 KEYWORD                                      
KWLLM1   DS    XL1                 LENGTH OF KEYWORD -1                         
KWLOPCD  DS    XL1                 FOR OPERATORS - INTERNAL CODE                
*                                  FOR COMPARES - TYPE OF COMPARE               
KWLOPHI  DS    XL1                 FOR OPERATORS - HEIRARCHY                    
KWLTYP   DS    CL1                 TYPE - C'O' = OPERATOR                       
*                                         C'A' = OPERAND                        
*                                         C'X' = IGNORE                         
KWLPROC  DS    AL1                 CODE OF PROCESSING ROUTINE                   
*                                                                               
KWLSTL   EQU   *-KWLSTD                                                         
         SPACE 2                                                                
QCVAL    CSECT                                                                  
KWLST    DS    0C                                                               
         DC    CL8'        ',AL1(0),XL2'0000',CL1'X',AL1(BLNKP)  BLANK          
         DC    XL8'00000000',AL1(0),XL2'0000',CL1'X',AL1(BLNKP)  NULL           
*                                                                               
*        PUNCH CODES                                                            
*                                                                               
         DC    CL8'1       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'2       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'3       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'4       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'5       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'6       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'7       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'8       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'9       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'0       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'X       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
         DC    CL8'Y       ',AL1(0),XL2'0000',CL1'A',AL1(PNCHP)                 
*                                                                               
*        COMPARES                                                               
*                                                                               
         DC    CL8'EQ      ',AL1(1),XL2'0100',CL1'A',AL1(COMPP)                 
         DC    CL8'NE      ',AL1(1),XL2'0200',CL1'A',AL1(COMPP)                 
         DC    CL8'GT      ',AL1(1),XL2'0300',CL1'A',AL1(COMPP)                 
         DC    CL8'LT      ',AL1(1),XL2'0500',CL1'A',AL1(COMPP)                 
         DC    CL8'GE      ',AL1(1),XL2'0400',CL1'A',AL1(COMPP)                 
         DC    CL8'LE      ',AL1(1),XL2'0600',CL1'A',AL1(COMPP)                 
         DC    CL8'<>      ',AL1(1),XL2'0200',CL1'A',AL1(COMPP) LT-GT           
         DC    CL8'><      ',AL1(1),XL2'0200',CL1'A',AL1(COMPP) GT-LT           
         DC    CL8'<=      ',AL1(1),XL2'0600',CL1'A',AL1(COMPP) LT =            
         DC    CL8'>=      ',AL1(1),XL2'0400',CL1'A',AL1(COMPP) GT =            
         DC    CL8'=       ',AL1(0),XL2'0100',CL1'A',AL1(COMPP)                 
         DC    CL8'<       ',AL1(0),XL2'0500',CL1'A',AL1(COMPP) LT              
         DC    CL8'>       ',AL1(0),XL2'0300',CL1'A',AL1(COMPP) GT              
*                                                                               
*                                                                               
*        SPECIALS                                                               
*                                                                               
         DC    CL8'(       ',AL1(0),XL2'0000',CL1'X',AL1(LPARP)                 
         DC    CL8')       ',AL1(0),XL2'0000',CL1'X',AL1(RPARP)                 
         DC    CL8'NF      ',AL1(1),XL2'0000',CL1'X',AL1(NFLENP)                
         DC    CL8'V       ',AL1(0),XL2'0000',CL1'X',AL1(NFLENP)                
*                                                                               
*        OPERATORS                                                              
*                                                                               
         DC    CL8'AND     ',AL1(2),XL2'8206',CL1'O',AL1(OPTRP)                 
         DC    CL8'.       ',AL1(0),XL2'8206',CL1'O',AL1(OPTRP)                 
         DC    CL8'&&      ',AL1(0),XL2'8206',CL1'O',AL1(OPTRP)                 
         DC    CL8'@       ',AL1(0),XL2'8206',CL1'O',AL1(OPTRP) AT SGN          
         DC    CL8'OR      ',AL1(1),XL2'8104',CL1'O',AL1(OPTRP)                 
         DC    CL8',       ',AL1(0),XL2'8104',CL1'O',AL1(OPTRP)                 
         DC    CL8'|       ',AL1(0),XL2'8104',CL1'O',AL1(OPTRP) V BAR           
         DC    CL8'EOR     ',AL1(2),XL2'8308',CL1'O',AL1(OPTRP)                 
         DC    CL8'+       ',AL1(0),XL2'8308',CL1'O',AL1(OPTRP)                 
         DC    CL8'NOT     ',AL1(2),XL2'840A',CL1'O',AL1(OPTRP)                 
         DC    CL8'N       ',AL1(0),XL2'840A',CL1'O',AL1(OPTRP)                 
         DC    CL8'^       ',AL1(0),XL2'840A',CL1'O',AL1(OPTRP) L NOT           
*                                                                               
*        OR'ED RANGE SPEC                                                       
*                                                                               
         DC    CL8'-       ',AL1(0),XL2'0000',CL1'A',AL1(THRUP)                 
         DC    CL8'THRU    ',AL1(3),XL2'0000',CL1'A',AL1(THRUP)                 
*                                                                               
*        POINTER WORDS                                                          
*                                                                               
         DC    CL8'CARD    ',AL1(3),XL2'0000',CL1'X',AL1(CDPNTRP)               
         DC    CL8'CD      ',AL1(1),XL2'0000',CL1'X',AL1(CDPNTRP)               
         DC    CL8'COL     ',AL1(2),XL2'0000',CL1'X',AL1(CLPNTRP)               
         DC    CL8'*       ',AL1(0),XL2'0000',CL1'X',AL1(CLPNTRP)               
         DC    CL8'C       ',AL1(0),XL2'0000',CL1'X',AL1(CDPNTRP)               
*                                                                               
         DC    X'FF'               EOL                                          
         SPACE 3                                                                
*        ERROR MESSAGES                                                         
         SPACE 2                                                                
ERRMSGS  DS    0C                                                               
         DC    CL20'MISSING OPERAND     '                                       
         DC    CL20'MISSING OPERATOR    '                                       
         DC    CL20'INVALID CARD NUMBER '                                       
         DC    CL20'INVALID COL. NUMBER '                                       
         DC    CL20'UNPAIRED PARENTHESIS'                                       
         DC    CL20'UNRECOGNIZED INPUT  '                                       
         DC    CL20'TOO MANY OPERANDS   '                                       
         DC    CL20'TOO MANY OPERATORS  '                                       
         DC    CL20'INVALID COMPARAND   '                                       
         DC    CL20'INVALID FIELD LENGTH'                                       
         DC    CL20'CARD NOT SPECIFIED  '                                       
         DC    CL20'COLUMN NOT SPECIFIED'                                       
         DC    CL20'FIELD LENGTH NOT SET'                                       
         DC    CL20'INVALID ''THRU''  RANGE'                                    
         SPACE 3                                                                
*        ERROR EQUATES                                                          
AMISERR  EQU   1                   MISSING OPERAND                              
OPMISERR EQU   2                   MISSING OPERATOR                             
CDNERR   EQU   3                   INVALID CARD NUMBER                          
CLNERR   EQU   4                   INVALID COLUMN NUMBER                        
PARERR   EQU   5                   UNPAIRED PAREN                               
UNKNERR  EQU   6                   UNKNOWN INPUT                                
OPMXERR  EQU   7                   TOO MANY OPERATORS                           
ANDMXERR EQU   8                   TOO MANY OPERANDS                            
COMPERR  EQU   9                   INVALID COMPARAND                            
NFLENERR EQU   10                  INVALID FIELD LENGTH                         
CDMISERR EQU   11                  CARD NO. MISSING                             
CLMISERR EQU   12                  COL. NO. MISSING                             
NFMISERR EQU   13                  FIELD LENGTH NOT SET                         
THRUERR  EQU   14                  INVALID THRU RANGE                           
         SPACE 3                                                                
*        PUNCH CODE LIST FOR RANGE CHECKING                                     
         SPACE 2                                                                
PCHLST   DC    C'1234567890XY'                                                  
         DC    X'FF'               END                                          
         SPACE 3                                                                
*        PROCESSING ROUTINE CODE EQUATES                                        
         SPACE 2                                                                
BLNKP    EQU   1                                                                
CDPNTRP  EQU   2                                                                
CLPNTRP  EQU   3                                                                
RPARP    EQU   4                                                                
LPARP    EQU   5                                                                
OPTRP    EQU   6                                                                
PNCHP    EQU   7                                                                
THRUP    EQU   8                                                                
COMPP    EQU   9                                                                
NFLENP   EQU   10                                                               
*                                                                               
         SPACE 3                                                                
         LTORG                                                                  
         SPACE 2                                                                
MAXOPS   EQU   10                                                               
         SPACE 3                                                                
*        INTERNAL LANGUAGE CODE EQUATES                                         
         SPACE 2                                                                
PCH      EQU   X'01'               PUNCH CODE                                   
OR       EQU   X'81'               OR                                           
AND      EQU   X'82'               AND                                          
EOR      EQU   X'83'               EOR                                          
NOT      EQU   X'84'               NOT                                          
CDP      EQU   X'85'               CARD POINTER                                 
CLP      EQU   X'86'               COLUMN POINTER                               
NCOMP    EQU   X'03'               NUMERIC COMPARISON                           
NFLENC   EQU   X'90'               SET NUM FIELD LENGTH                         
COPTSW   EQU   X'8F'               SET CONDITION OPTIONAL SWITCH                
*                                                                               
         SPACE 3                                                                
WKD      DSECT                                                                  
SAVR1    DS    F                                                                
EOINP    DS    A                   END OF INPUT                                 
LOSPOS   DS    A                   LAST POS IN OPSTK                            
ACTR     DS    F                                                                
*                                                                               
OPSTKL   EQU   3                                                                
OPSTK    DS    0X                  OPERATOR STACK-BYTE 0 = OP                   
         ORG   *+(MAXOPS*OPSTKL)                -BYTE 1 = PAREN LEV             
*                                                -BYTE 2 = OP LEVEL             
*                                                                               
         DS    XL3'00'             ROOM AT END OF STACK                         
*                                                                               
PL       DS    X                   PAREN LEVEL                                  
LTYP     DS    C                   LAST TYPE  'O' = OPERATOR                    
*                                             'A' = OPERAND                     
*                                             'P' = POINTER                     
LPNCH    DS    C                   LAST PUNCH CODE                              
*                                                                               
DUB      DS    D                                                                
*                                                                               
WKDL     EQU   *-WKD                                                            
*                                                                               
       ++INCLUDE MPQBLKD                                                        
*                                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'039MPQCVALSV 05/01/02'                                      
         END                                                                    
