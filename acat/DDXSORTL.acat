*          DATA SET DDXSORTL   AT LEVEL 009 AS OF 03/16/15                      
*PROCESS USING(WARN(15))                                                        
*CATALP XSORTL                                                                  
         TITLE 'XSORTL - XSORT CLONE TO HANDLE LONG RECORD'                     
         SPACE 3                                                                
***********************************************************************         
*                                                                               
*        PARAMETER LIST                                                         
*                                                                               
*        PARAM1  BYTE  0      X'00' = ASCENDING,X'FF' = DESCENDING              
*                BYTES 1-3    A(LIST)                                           
*                BYTES 1-3    X'FFFFFF' - 31-BIT A(LIST) IN PARAM6              
*                                                                               
*        PARAM2  BYTES 0-3    NO. OF ENTRIES                                    
*                                                                               
*        PARAM3  BYTE    3    LENGTH OF ENTRY                                   
*                                                                               
*        PARAM4  BYTE    3    LENGTH OF KEY                                     
*                                                                               
*        PARAM5  BYTE    3    DISPLACEMENT OF KEY INTO ENTRY                    
*                                                                               
*        PARAM6  BYTE  0-3    31-BIT A(LIST)                                    
*                                                                               
***********************************************************************         
         SPACE 2                                                                
         PRINT NOGEN                                                            
XSORTL   RSECT                                                                  
         NMOD1 WORKX-WORKD,**XSRL**                                             
         USING WORKD,RC                                                         
         EJECT                                                                  
*                  PROCESS PARAMETER LIST                                       
*                                                                               
         MVC   EXECWRK,EXECBLK     COPY CODE BLOCK TO WS                        
*                                                                               
         L     R3,4(R1)            NO. OF ENTRIES                               
         BCTR  R3,0                                                             
         LTR   R3,R3                                                            
         JNP   XSORTEXT            FEWER THAN 2 ENTRIES                         
         L     R4,8(R1)            R4 = LENGTH OF ENTRY                         
         MR    R2,R4                                                            
         LR    R5,R3               LENGTH * (NO. OF ENTRIES-1)                  
         CLC   =X'FFFFFF',1(R1)    31-BIT ADDR?                                 
         JE    XSL10                                                            
         L     R3,0(R1)            R3 = A(FIRST ENTRY)                          
         LA    R3,0(R3)           CLEAR HOB                                     
         J     XSL20                                                            
*                                                                               
XSL10    L     R3,20(R1)           R3 = 31-BIT A(FIRST ENTRY)                   
*                                                                               
         SAM31                                                                  
*                                                                               
XSL20    AR    R5,R3                                                            
         BCTR  R5,0                R5 = A((LAST ENTRY) - 1)                     
         LCR   R2,R4               R2 = COMPLEMENT OF LENGTH                    
         MVI   XSORTBC+1,X'D0'     SET BRANCH TO BNH IF ACSENDING               
         CLI   0(R1),0                                                          
         JE    *+8                                                              
         MVI   XSORTBC+1,X'B0'     SET BRANCH TO BNL IF DESCENDING              
*                                                                               
         L     R7,12(R1)                                                        
         BCTR  R7,0                                                             
         STC   R7,XSORTCLC+1       KEY LENGTH IN CLC                            
*                                                                               
         L     R7,16(R1)                                                        
         AH    R7,=X'3000'         (R3 IS BASE REG)                             
         STH   R7,XSORTCLC+2       DISPLACEMENT(R3)                             
         AR    R7,R4               RECLEN                                       
         STH   R7,XSORTCLC+4                                                    
*                                                                               
         L     RF,4(RD)            ACQUIRE WORK AREA FOR MOVES                  
         LR    RA,RD               SAVE ADDRESS                                 
         AR    RD,R4               LENGTH OF RECORD                             
         LA    RD,7(RD)            REALIGN RD                                   
         SRL   RD,3                                                             
         SLL   RD,3                                                             
         ST    RD,8(RF)            SET NEW FORWARD LINK                         
         ST    RF,4(RD)            AND NEW BACK LINK                            
*                                                                               
         SR    R6,R6                                                            
         LR    R7,R3               SAVE START OF LIST                           
*                                                                               
         B     XSORTCLC                                                         
         SPACE 2                                                                
***********************************************************************         
*                                                                               
*        SORT LOGIC                                                             
*                                                                               
***********************************************************************         
         SPACE 3                                                                
*                                                                               
EXCHANGE DS    0H                                                               
         LR    R8,RA               MOVE TO TEMP AREA                            
         LR    R9,R4               LENGTH                                       
         LR    RE,R3               MOVE FROM LATER TABLE ENTRY                  
         AR    RE,R4                                                            
         LR    RF,R4               LENGTH                                       
         MVCL  R8,RE                                                            
         JO    *+2                 DIE ON OVERLAPPING MVCL                      
*                                                                               
         LR    R8,R3               MOVE TO LATER TABLE ENTRY                    
         AR    R8,R4                                                            
         LR    R9,R4               LENGTH                                       
         LR    RE,R3               MOVE FROM EARLIER TABLE ENTRY                
         LR    RF,R4               LENGTH                                       
         MVCL  R8,RE                                                            
         JO    *+2                 DIE ON OVERLAPPING MVCL                      
*                                                                               
         LR    R8,R3               MOVE TO EARLIER TABLE ENTRY                  
         LR    R9,R4               LENGTH                                       
         LR    RE,RA               MOVE FROM TEMP                               
         LR    RF,R4               LENGTH                                       
         MVCL  R8,RE                                                            
         JO    *+2                 DIE ON OVERLAPPING MVCL                      
*                                                                               
         LA    R6,1                RESET SWITCH                                 
XSORTNOX BXLE  R3,R4,XSORTCLC      NEXT COMPARE                                 
         BRCT  R6,XSORTEXT         EXIT IF NO EXCHANGES + RESET SW              
         LR    R3,R7               RESTORE TO START OF LIST                     
         BXH   R5,R2,XSORTCLC      SHORTEN LIST AND DO ANOTHER PASS             
*                                                                               
XSORTEXT DS    0H                                                               
         CLC   =X'FFFFFF',1(R1)    31-BIT ADDR?                                 
         JNE   *+6                                                              
         SAM24                                                                  
*                                                                               
         XMOD1 1                                                                
         SPACE 2                                                                
***********************************************************************         
* THIS BLOCK OF INSTRUCTIONS IS COPIED INTO WORKING STORAGE BELOW               
EXECBLK  DS    0H                                                               
         CLC   0(0,R3),0(R3)       COMPARE KEYS                                 
         BC    0,XSORTNOX          NO EXCHANGE                                  
         B     EXCHANGE            EXCHANGE THE ENTRIES                         
EXECBLKQ EQU   *-EXECBLK                                                        
***********************************************************************         
         SPACE 2                                                                
         LTORG                                                                  
         EJECT                                                                  
WORKD    DSECT                                                                  
* THE INSTRUCTIONS AT EXECBLK ARE COPIED INTO WORKING STORAGE BELOW             
* AND THEN MODIFIED. I.E., THE INSTRUCTIONS EXECUTE OUT OF WORKING              
* STORAGE, NOT OUT OF THE PROGRAM CSECT. THIS MAKES THE CODE REENTRANT.         
*                                                                               
         DS    0H                                                               
EXECWRK  DS    0XL(EXECBLKQ)                                                    
XSORTCLC CLC   0(0,R3),0(R3)       COMPARE KEYS                                 
XSORTBC  BC    0,XSORTNOX          NO EXCHANGE                                  
         B     EXCHANGE            EXCHANGE THE ENTRIES                         
*                                                                               
WORKX    EQU   *                                                                
         SPACE 3                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'009DDXSORTL  03/16/15'                                      
         END                                                                    
