         TITLE 'EDITR'                                                          
Macro handles the editing of most numeric fields into printable form.           
                                                                                
(Name)   EDITR input,output(,n)(,COMMAS=YES)(,CR=YES)(,ALIGN=LEFT)              
               (,FILL=c)(,FLOAT=c)(,WRK=mywork)(,DUB=mydub)(,MINUS=YES)         
               (,BRACKET=YES)(,TRAIL=c)(,ZERO=BLANK)(,ZERO=NOBLANK)             
               (,DROP=n)(,INLINE=N)(,IZERO=Y)                                   
                                                                                
The EDITR macro supports all of the features of the EDIT macro except           
for the TIME and TUS input parameters.  It differs from the EDIT macro          
in that 17 byte edit mask can be generated inline instead of as a               
literal and the code has been changed to use relative branch instructions.      
This means that the macro can be used where no base register is available       
for the code or the edit mask literal.  Unlike EDIT, R1 is used as a work       
register and so it cannot be used to point to the output area - it may          
however point to, or contain the input value.  The default is to create         
the mask literal inline - this can be overridden by specifying INLINE=N.        
                                                                                
 Input Expressions                                                              
 -----------------                                                              
                                                                                
(Rn)           Rn contains binary field to be edited.                           
Input          Input is binary of 1-4 byte self-defining length                 
               or input is self-defining packed field.                          
(n,input)      Input is binary length n (1-4)                                   
(Bn,input)     Input is binary length n (1-4)                                   
(Pn,input)     Input is packed length n                                         
(Cn,input)     Input is EBCDIC length n                                         
(X,input)      Input is 4-byte special (see CVBX)                               
                                                                                
 Output Expressions                                                             
 ------------------                                                             
                                                                                
Output field length, if provided, must be an absolute expression which          
evaluates between the range 1 and 17 bytes.                                     
                                                                                
Output         Length defaults to L'Output, Output is A(field)                  
(L,(Rn))       Length explicitly provided,  Rn contains A(field)                
(L,Output)     Length explicitly provided,  Output is A(field)                  
                                                                                
 Optional Expressions                                                           
 --------------------                                                           
                                                                                
(,n)            Up to six decimal places (must be third operand).               
(,COMMAS=YES)   Inserts significant commas (example 1,234,567).                 
(,CR=YES)       Will put a CR into last two bytes for minus fields.             
(,ALIGN=LEFT)   Will left-align output fields.                                  
(,FILL=c)       Non-significant characters filled with c not blank.             
(,FLOAT=c)      A character c will be floated in before significant data.       
                If the character is -, this will only occur if the input        
                field is minus.                                                 
(,WRK=mywork)   EDIT uses 17 bytes of field called WORK. If user does not have  
                WORK or is using WORK as parameter, another field can be sub-   
                stituted.                                                       
(,DUB=mydub)    Edit uses DUB. User can substitute his own double-word.         
(,MINUS=YES)    Will put a - into the last byte for minus input fields.         
(,BRACKET=YES)  Will wrap brackets round resultant fields.                      
(,TRAIL=c)      Adds trailing character C after last significant byte.          
(,ZERO=BLANK)   Forces zero fields to print blank.                              
(,ZERO=NOBLANK) Forces zero fields to print zero.  (This applies only to fields 
                whose actual value is zero.  It does not print leading zeroes.) 
(,DROP=n)       Clears up to n trailing zeros.                                  
(,INLINE=N)     Creates the edit mask as an entry in the literal pool           
                else the mask will be created in-line and jumped around         
(,IZERO=Y)      For output expressions including a decimal point will           
                create a leading zero integer before the decimal point          
                where the integer portion is all zeroes. For example            
                the value 50 to 2 decimal places will be edited as .50          
                if IZERO=Y is not specified and 0.50 if it is.                  
                                                                                
 Notes                                                                          
 -----                                                                          
                                                                                
R0 will contain the value of the input in binary except when (,ALIGN=LEFT) is   
specified when it will contain the number of significant characters. When input 
is packed or EBCDIC, R0 is unaffected.  R0 is clobbered when (,BRACKET=YES) is  
specified.                                                                      
                                                                                
When (,FLOAT=c) is specified R1 is set to the address of the instered           
float character within WORK (not in output).  If INLINE=Y (the default)         
is set R1 is used as a work register and may not point to the output            
area.                                                                           
                                                                                
Input and output may be expressed either as a field or as a base and            
displacement (example 24(R4)).                                                  
                                                                                
DUB or mydub will contain the packed value of the input after edit.             
                                                                                
2, 3 or 4 byte binary fields are considered to be negative when the top bit is  
on.                                                                             
                                                                                
 Sample code                                                                    
 -----------                                                                    
                                                                                
         USING *,RB                                                             
         L     R0,FULLWORD                                                      
         GOTOR EDIT2FM                                                          
         ....                                                                   
         DROP  RB                                                               
                                                                                
EDIT2FM  EDITR (R0),(12,P+20),2,FLOAT=-                                         
         BR    RE                                                               
                                                                                
 Which generates the following code:-                                           
                                                                                
+EDIT2FM  DS    0H                                                              
+         CVD   R0,DUB                                                          
+         BASR  R1,0                                                            
+         J     *+22                                                            
+         DC    X'40404040402020202020202020214B2020'                           
+         DC    X'00'                                                           
+         MVC   WORK(17),4(R1)                                                  
+         LA    R1,WORK+14                                                      
+         EDMK  WORK(17),DUB+2                                                  
+         BCTR  R1,0                                                            
+         LTR   R0,R0                                                           
+         JNM   *+8                                                             
+         MVI   0(R1),C'-'                                                      
+         MVC   P+20(12),WORK+17-(12)                                           
          BR    RE                                                              
