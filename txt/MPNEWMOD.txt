*          DATA SET MPNEWMOD   AT LEVEL 001 AS OF 05/05/87                      
C                                                                               
C  DONOVAN DATA MEDIA MODEL, by MARKETMATH, 2 April 1987 (Jerry Greene)         
C  -----------------------------------------------------                        
C                                                                               
C                                                                               
C                                                                               
C  MAIN SUBROUTINE CALLED WITH 26 VARIABLES, ALL INTEGER:                       
C    17 FOR INPUT ONLY; 3 FOR BOTH INPUT AND OUTPUT;                            
C     LAST 6 FOR OUTPUT ONLY. (SEE SEPARATE TYPED LIST.)                        
C                                                                               
C                                                                               
C                                                                               
      SUBROUTINE DDMOD(IPOPI,IPOPO,KNVEH,IC1,IC2,IC11,                          
     +  MODEL,MXFVEX,KNINS,NIDP,IADJSW,IRATC1,KPBASE,IRTC11,                    
     +  IPXSW,MXFPEX,IPEXM,IMPSW,MXFIMP,IMPP,                                   
     +  KFERC,KFER1,KFER2,IVXSFD,IPXSFD,IMPSFD)                                 
C     ----------------                                                          
C                                                                               
C                                                                               
      INTEGER KNINS(100),IC1(100),IC2(100),IC11(4950),                          
     +  IRATC1(100),KPBASE(100),IRTC11(100),IPEXM(100),IMPP(100),               
     +  IVXSFD(505),IPXSFD(505),IMPSFD(505)                                     
C                                                                               
C                                                                               
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),C2(100),                           
     +                C11(4950),SFDVEX(505)                                     
      COMMON /ADJPRO/ RATC1(100),IPBASE(100),RATC11(100)                        
      COMMON /PAGEXP/ PEXM(100),SFDPEX(505)                                     
      COMMON /IMPACT/ PIMP(100),SFDIMP(505)                                     
      COMMON /ERROR / IFERC,IFER1,IFER2                                         
      COMMON /MXDIM / MXNVEH,MXNTIS                                             
      COMMON /TEMP  / ITMP(100),TMP1(505),TMP2(505),TMP3(505),                  
     +                TMP4(505),TMP5(505),TMP6(505),TMP7(505)                   
C                                                                               
C                                                                               
C     *  *   EXECUTION STARTS  *  *                                             
C                                                                               
C                                                                               
C  MAX.NUMBER VEHICLES AND TOTAL SCHEDULE INSERTIONS,                           
C  AS NOW DIMENSIONED                                                           
      MXNVEH=100                                                                
C   5 LESS THAN SFD DIMENSIONS                                                  
      MXNTIS=500                                                                
C                                                                               
C  INPUT DEFAULTS                                                               
      IF(IPOPO.LE.0)IPOPO=IPOPI                                                 
      IF(MODEL.NE.1)MODEL=2                                                     
      IF(IADJSW.NE.1)IADJSW=0                                                   
      IF(IPXSW.NE.1)IPXSW=0                                                     
      IF(IMPSW.NE.1)IMPSW=0                                                     
C                                                                               
C                                                                               
C                                                                               
C  COPY 3 'K'-PREFIX VARIABLES (for convenience)                                
C                                                                               
      CALL COPY(KNVEH,KNINS,IADJSW,KPBASE)                                      
C     ---------                                                                 
C                                                                               
C                                                                               
C                                                                               
C  SCALE 7 INPUT VARIABLES AS REALS (with decimal-point):                       
C    C1-C2-C11 SCALED TO FRACTIONS OF INPUT POPULATION 'IPOPI'                  
C    OTHER 4 HAVE 'NIDP' NUMBER-IMPLIED-DECIMAL-PLACES ON INPUT                 
C                                                                               
      CALL SCALE(IPOPI,IC1,IC2,IC11,NIDP,IADJSW,IRATC1,IRTC11,                  
     +           IPXSW,IPEXM,IMPSW,IMPP)                                        
C     ----------                                                                
C                                                                               
C                                                                               
C                                                                               
C  CHECK THAT ALL INPUT IS TAB-LEGAL. QUIT AT FIRST                             
C  TAB-ILLEGAL ERROR FOUND AND RETURN ONLY ERROR-DATA                           
C                                                                               
      CALL TABCHK(IADJSW,IPXSW,IMPSW)                                           
C     -----------                                                               
C                                                                               
C                                                                               
C         SKIP TO 'COPYBK' IF FATAL ERROR FOUND IN 'TABCHK'                     
      IF(IFERC.NE.0)GOTO 1000                                                   
C                                                                               
C                                                                               
C                                                                               
C  CONVERT DERIVED VARIABLES TO FORM REQUIRED BY MATH.MODEL.                    
C  DO ADJUSTMENT/PROTOTYPING IF SPECIFIED BY SWITCH 'IADJSW'                    
C                                                                               
      CALL ADJUST(IADJSW)                                                       
C     -----------                                                               
C                                                                               
C                                                                               
C                                                                               
C  DO SCHEDULE SUMMARY-FREQUENCY-DISTRIBUTIONS OF VEHICLE-EXPOSURE              
C  ('MODEL' switch controls 'DD1' or 'DD2'), OF PAGE-EXPOSURE (if               
C  'IPXSW' switch on), AND OF VEHICLE-IMPACT (if 'IMPSW' switch on)             
C                                                                               
      CALL SCHED(MODEL,IPXSW,MXFPEX,IMPSW,MXFIMP,NTINS)                         
C     ----------                                                                
C                                                                               
C                                                                               
1000  CONTINUE                                                                  
C                                                                               
C                                                                               
C  COPY 3 ERROR VARIABLES AND 1-3 SUMMARY-FREQUENCY-DISTRIBUTIONS               
C  BACK TO EXTERNAL OUTPUT VARIABLES, INTEGER. SFD's PROJECTED                  
C  TO OUTPUT POPULATION 'IPOPO'                                                 
C                                                                               
      CALL COPYBK(KFERC,KFER1,KFER2,IPOPO,NTINS,MXFVEX,IVXSFD,                  
     +            IPXSW,MXFPEX,IPXSFD,IMPSW,MXFIMP,IMPSFD)                      
C     -----------                                                               
C                                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  COPY 3 INPUT VARIABLES WITH 'K'-PREFIX, FOR 'COMMON'                         
C                                                                               
C                                                                               
      SUBROUTINE COPY(KNVEH,KNINS,IADJSW,KPBASE)                                
C     ---------------                                                           
C                                                                               
      DIMENSION KNINS(*),KPBASE(*)                                              
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),C2(100),                           
     +                C11(4950),SFDVEX(505)                                     
      COMMON /ADJPRO/ RATC1(100),IPBASE(100),RATC11(100)                        
C                                                                               
C                                                                               
      NVEH=KNVEH                                                                
C                                                                               
      DO 100 I=1,NVEH                                                           
      NINS(I)=KNINS(I)                                                          
C  If Adjusting and/or Prototyping                                              
      IF(IADJSW.EQ.1)IPBASE(I)=KPBASE(I)                                        
 100  CONTINUE                                                                  
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  CONVERT 7 INPUT INTEGER VARIABLES TO FLOATING-POINT REALS:                   
C    SCALE C1-C2-C11 AS FRACTIONS OF POPULATION                                 
C    PUT DECIMAL-POINT IN: 2 ADJUST/PROTOTYPE RATIO-VARIABLES                   
C                          PAGE-EXPOSURE MEANS                                  
C                          VEHICLE-IMPACT PROBABILITIES                         
C                                                                               
C                                                                               
      SUBROUTINE SCALE(IPOPI,IC1,IC2,IC11,NIDP,IADJSW,IRATC1,IRTC11,            
     +                 IPXSW,IPEXM,IMPSW,IMPP)                                  
C     ----------------                                                          
C                                                                               
      DIMENSION IC1(*),IC2(*),IC11(*),IRATC1(*),IRTC11(*),                      
     +          IPEXM(*),IMPP(*)                                                
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),C2(100),                           
     +                C11(4950),SFDVEX(505)                                     
      COMMON /ADJPRO/ RATC1(100),IPBASE(100),RATC11(100)                        
      COMMON /PAGEXP/ PEXM(100),SFDPEX(505)                                     
      COMMON /IMPACT/ PIMP(100),SFDIMP(505)                                     
C                                                                               
C                                                                               
      POPIN=IPOPI                                                               
C  Convert input NIDP to scale-factor SFIN                                      
      SFIN=10**NIDP                                                             
C                                                                               
      DO 100 I=1,NVEH                                                           
      C1(I)=IC1(I)/POPIN                                                        
      C2(I)=IC2(I)/POPIN                                                        
C  If Adjusting and/or Prototyping                                              
      IF(IADJSW.EQ.1)THEN                                                       
        RATC1(I)=IRATC1(I)/SFIN                                                 
C   ..And if Prototype Vehicle                                                  
        IF(IPBASE(I).GT.0)RATC11(I)=IRTC11(I)/SFIN                              
      ENDIF                                                                     
C  If doing Page Exposure                                                       
      IF(IPXSW.EQ.1)PEXM(I)=IPEXM(I)/SFIN                                       
C  If doing Vehicle Impact                                                      
      IF(IMPSW.EQ.1)PIMP(I)=IMPP(I)/SFIN                                        
 100  CONTINUE                                                                  
C                                                                               
      DO 120 I=1,NVEH*(NVEH-1)/2                                                
 120  C11(I)=IC11(I)/POPIN                                                      
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  CHECK INPUT FOR TAB-LEGAL AND MISSING/WRONG VALUES.                          
C  QUIT AT FIRST FATAL ERROR AND RETURN:                                        
C    ERROR CODE 'IFERC' (0 if no fatal error found)                             
C    INDEX 'IFER1' OF FIRST VEHICLE INVOLVED (0 if none)                        
C    INDEX 'IFER2' OF SECOND VEHICLE INVOLVED (0 if none)                       
C                                                                               
C                                                                               
      SUBROUTINE TABCHK(IADJSW,IPXSW,IMPSW)                                     
C     -----------------                                                         
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),C2(100),                           
     +                C11(4950),SFDVEX(505)                                     
      COMMON /ADJPRO/ RATC1(100),IPBASE(100),RATC11(100)                        
      COMMON /PAGEXP/ PEXM(100),SFDPEX(505)                                     
      COMMON /IMPACT/ PIMP(100),SFDIMP(505)                                     
      COMMON /ERROR / IFERC,IFER1,IFER2                                         
      COMMON /MXDIM / MXNVEH,MXNTIS                                             
C                                                                               
      IFERC=0                                                                   
      IFER1=0                                                                   
      IFER2=0                                                                   
C                                                                               
      IF(NVEH.LE.0)THEN                                                         
C  FATAL ERROR: NO VEHICLES                                                     
        IFERC=1                                                                 
        RETURN                                                                  
      ELSEIF(NVEH.GT.MXNVEH)THEN                                                
C  FATAL ERROR: TOO MANY VEHICLES                                               
        IFERC=2                                                                 
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C                                                                               
      NTINS=0                                                                   
C                                                                               
      DO 100 I=1,NVEH                                                           
      IFER1=I                                                                   
      NTINS=NTINS+NINS(I)                                                       
C                                                                               
C                                                                               
      IF(IADJSW.EQ.0.OR.IPBASE(I).EQ.0)THEN                                     
C  REAL VEHICLE I (not prototype)                                               
C                                                                               
        IF(C1(I).LE.0.OR.C1(I).GE.1.0)THEN                                      
C    FATAL ERROR: REAL-VEHICLE INPUT C1 TAB-ILLEGAL                             
          IFERC=11                                                              
          RETURN                                                                
        ELSEIF(C2(I).LT.C1(I).OR.C2(I).GT.2.0*C1(I)                             
     +    .OR.C2(I).GE.1.0)THEN                                                 
C    FATAL ERROR: REAL-VEHICLE INPUT C2 TAB-ILLEGAL                             
          IFERC=12                                                              
          RETURN                                                                
        ENDIF                                                                   
C                                                                               
        IF(IADJSW.EQ.1)THEN                                                     
          W=RATC1(I)*C1(I)                                                      
          IF(W.LE.0.0.OR.W.GE.1.0)THEN                                          
C    FATAL ERROR: REAL-VEHICLE ADJUSTED C1 TAB-ILLEGAL                          
            IFERC=21                                                            
            RETURN                                                              
          ENDIF                                                                 
        ENDIF                                                                   
C                                                                               
          DO 110 J=I+1,NVEH                                                     
          IF(IADJSW.EQ.0.OR.IPBASE(J).EQ.0)THEN                                 
C     REAL VEHICLE J                                                            
            IJ=INDX(I,J,NVEH)                                                   
            W=C11LIM(C11(IJ),C1(I),C1(J))                                       
            IF(C11(IJ).NE.W)THEN                                                
C    FATAL ERROR: INPUT C11 TAB-ILLEGAL FOR PAIR OF REAL VEHICLES               
              IFERC=13                                                          
              IFER2=J                                                           
              RETURN                                                            
            ENDIF                                                               
          ENDIF                                                                 
 110      CONTINUE                                                              
C                                                                               
C                                                                               
      ELSE                                                                      
C  PROTOTYPE VEHICLE                                                            
C    Get its Base Vehicle IB                                                    
        IB=IPBASE(I)                                                            
        IFER2=IB                                                                
C                                                                               
        IF(IPBASE(IB).NE.0)THEN                                                 
C    FATAL ERROR: PROTOTYPE BASED ON PROTOTYPE                                  
          IFERC=23                                                              
          RETURN                                                                
        ELSEIF(IB.GT.NVEH)THEN                                                  
C    FATAL ERROR: PROTOTYPE BASE EXCEEDS TOTAL NUMBER OF VEHICLES               
          IFERC=24                                                              
          RETURN                                                                
        ENDIF                                                                   
C                                                                               
        P2=RATC1(IB)*C1(IB)                                                     
        P1=RATC1(I)*P2                                                          
C                                                                               
        IF(P1.LE.0.0.OR.P1.GE.1.0)THEN                                          
C    FATAL ERROR: PROTOTYPE-VEHICLE C1 TAB-ILLEGAL                              
          IFERC=25                                                              
          RETURN                                                                
        ENDIF                                                                   
C                                                                               
        P3=RATC11(I)*P2                                                         
        W=C11LIM(P3,P1,P2)                                                      
C                                                                               
        IF(W.NE.P3)THEN                                                         
C    FATAL ERROR: C11 TAB-ILLEGAL FOR PROTOTYPE VEHICLE AND ITS BASE            
          IFERC=26                                                              
          RETURN                                                                
        ENDIF                                                                   
C                                                                               
        IFER2=0                                                                 
      ENDIF                                                                     
C                                                                               
C                                                                               
C  REAL or PROTO VEHICLE (still in '100' loop)                                  
C                                                                               
      IF(IPXSW.EQ.1.AND.PEXM(I).LE.0.0)THEN                                     
C   FATAL ERROR: PAGE EXPOSURE MEAN = 0                                         
        IFERC=31                                                                
        RETURN                                                                  
      ELSEIF(IMPSW.EQ.1.AND.(PIMP(I).LE.0.0.OR.PIMP(I).GT.1.0))THEN             
C   FATAL ERROR: IMPACT PROBABILITY = 0 OR MORE THAN 1                          
        IFERC=41                                                                
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C  LOOP END: CHECK NEXT VEHICLE                                                 
 100  CONTINUE                                                                  
C                                                                               
C                                                                               
C                                                                               
      IFER1=0                                                                   
C                                                                               
      IF(NTINS.LE.0)THEN                                                        
C   FATAL ERROR: NO SCHEDULE INSERTIONS                                         
        IFERC=3                                                                 
      ELSEIF(NTINS.GT.MXNTIS)THEN                                               
C   FATAL ERROR: TOO MANY TOTAL SCHEDULE INSERTIONS                             
        IFERC=4                                                                 
      ENDIF                                                                     
C                                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  CONVERT C2 TO CORRESPONDING BETA PARAMETER-C (=A+B), GIVEN C1.               
C  CONVERT C11 TO CORRESPONDING COVARIANCE OF PROBABILITIES                     
C                                                                               
C  IF NECESSARY FOR MATH.MODEL, MAKE SMALL CHANGES IN C1,                       
C  PARAM-C, AND COVARIANCE, WITHOUT ERROR NOTIFICATION                          
C                                                                               
C  DO ADJUSTMENT/PROTOTYPING IF SWITCH 'IADJSW'=1                               
C                                                                               
C                                                                               
      SUBROUTINE ADJUST(IADJSW)                                                 
C     -----------------                                                         
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),C2(100),                           
     +                C11(4950),SFDVEX(505)                                     
C  STORE PARAMETER-C IN SAME MEMORY AS C2, AND COVARIANCE IN SAME               
C  MEMORY AS C11 (i.e., simply different names for same storage)                
        DIMENSION   PARMC(100),COVAR(4950)                                      
        EQUIVALENCE (PARMC,C2),(COVAR,C11)                                      
C                                                                               
      COMMON /ADJPRO/ RATC1(100),IPBASE(100),RATC11(100)                        
      COMMON /TEMP  / IORD(100),TMP1(505),TMP2(505),TMP3(505),                  
     +                TMP4(505),TMP5(505),TMP6(505),TMP7(505)                   
C  NOTE CHANGED NAME OF /TEMP/ VARIABLE 'IORD' USED HEREIN                      
C                                                                               
C                                                                               
C  FOR REAL (not prototype) VEHICLES ONLY, BEFORE ADJUSTMENT (if any):          
C    LIMIT C1                                                                   
C    LIMIT C2 & CHANGE TO PARAM-C                                               
C    COUNT NUMBER 'ADJUST' AND 'PROTOTYPE' VEHICLES                             
C                                                                               
      C1LO=0.0005                                                               
      C1HI=1.0-C1LO                                                             
      PCLO=0.0001                                                               
      PCHI=10000.0                                                              
      NADJ=0                                                                    
      NPROTO=0                                                                  
C                                                                               
C                                                                               
      DO 100 I=1,NVEH                                                           
      IF(IADJSW.EQ.0.OR.IPBASE(I).EQ.0)THEN                                     
C   VEHICLE I IS REAL                                                           
C                                                                               
C           If Adjusting & C1-Ratio not 1.0 for this Real Vehicle               
        IF(IADJSW.EQ.1.AND.RATC1(I).NE.1.0)NADJ=NADJ+1                          
C                                                                               
C    FUNCTION 'PLIM': KEEP C1 WITHIN NUMERICAL LIMITS                           
        C1(I)=PLIM(C1(I),C1LO,C1HI)                                             
C                                                                               
C    LIMIT C2 TO KEEP PARAM-C WITHIN NUMERICAL LIMITS                           
        P=C1(I)                                                                 
        W=2.0-P                                                                 
        C2LO=P*(PCLO*W+1.0)/(PCLO+1.0)                                          
        C2HI=P*(PCHI*W+1.0)/(PCHI+1.0)                                          
        C2(I)=PLIM(C2(I),C2LO,C2HI)                                             
C    CHANGE TO PARAM-C                                                          
C             (4.1 in Math.)                                                    
        PARMC(I)=(C2(I)-P)/(P*W-C2(I))                                          
C                                                                               
      ELSE                                                                      
C  VEHICLE I IS PROTOTYPE                                                       
C                                                                               
        NPROTO=NPROTO+1                                                         
C                                                                               
      ENDIF                                                                     
 100  CONTINUE                                                                  
C                                                                               
C                                                                               
C  FOR PAIRS OF REAL VEHICLES ONLY, BEFORE ADJUSTMENT (if any):                 
C    LIMIT C11 & CONVERT TO COVARIANCE                                          
C                                                                               
C                                                                               
      DO 120 I=1,NVEH-1                                                         
      IF(IADJSW.EQ.0.OR.IPBASE(I).EQ.0)THEN                                     
C  VEHICLE I IS REAL                                                            
C                                                                               
        DO 140 J=I+1,NVEH                                                       
        IF(IADJSW.EQ.0.OR.IPBASE(J).EQ.0)THEN                                   
C   ..AND VEHICLE J IS REAL                                                     
C                                                                               
C     FUNCTION 'INDX': GET C11 INDEX FOR VEHICLES I & J                         
          IJ=INDX(I,J,NVEH)                                                     
C     FUNCTION 'C11LIM': KEEP C11 WITHIN LOGICAL LIMITS                         
          C11(IJ)=C11LIM(C11(IJ),C1(I),C1(J))                                   
C     CONVERT TO COVAR                                                          
C             (1.5)                                                             
          COVAR(IJ)=C1(I)+C1(J)-C1(I)*C1(J)-C11(IJ)                             
C                                                                               
        ENDIF                                                                   
 140    CONTINUE                                                                
C                                                                               
      ENDIF                                                                     
 120  CONTINUE                                                                  
C                                                                               
C                                                                               
C  QUIT IF NO VEHICLE TO 'ADJUST' OR 'PROTOTYPE'                                
      IF(IADJSW.EQ.0.OR.(NADJ.EQ.0.AND.NPROTO.EQ.0))RETURN                      
C                                                                               
C  SKIP TO 'PROTOTYPING' IF NO VEHICLE TO 'ADJUST'                              
      IF(NADJ.EQ.0)GOTO 1000                                                    
C                                                                               
C                                                                               
C  NOW DO ADJUSTING (IADJSW=1): C1 AND COVAR FOR REAL VEHICLES                  
C       (Parameter C INVARIANT in Adjustment/Prototyping)                       
C                                                                               
C                                                                               
C  OUTER LOOP ADJUSTS C1 OF EVERY REAL VEHICLE I                                
C  FOR WHICH ADJUSTMENT SPECIFIED                                               
      DO 160 I=1,NVEH                                                           
      IF(IPBASE(I).EQ.0.AND.RATC1(I).NE.1.0)THEN                                
C  HAVE REAL VEHICLE I TO BE ADJUSTED                                           
C                                                                               
C    SAVE OLD C1, APPLY INPUT RATIO TO GET NEW C1, LIMIT IT                     
        C1IOLD=C1(I)                                                            
        C1(I)=RATC1(I)*C1IOLD                                                   
        C1(I)=PLIM(C1(I),C1LO,C1HI)                                             
C                                                                               
C    INNER LOOP ADJUSTS COVAR OF ADJUSTED-VEHICLE I WITH EVERY                  
C    OTHER REAL-VEHICLE J, WHETHER J ITSELF IS ADJUSTED OR NOT.                 
C    J GOES OVER ALL REAL VEHICLES EXCEPT I. Note that COVAR                    
C    for a pair of Real Vehicles is eventually Adjusted TWICE                   
C    if each separately is Adjusted on C1 (not order dependent)                 
        DO 180 J=1,NVEH                                                         
        IF(J.NE.I.AND.IPBASE(J).EQ.0)THEN                                       
C    HAVE REAL VEHICLE J NOT EQUAL I                                            
C                                                                               
C      GET OLD COVAR(I,J)                                                       
          IJ=INDX(I,J,NVEH)                                                     
          COVIJ=COVAR(IJ)                                                       
C      FUNCTION 'COVRT': GET COVARIANCE RATIO USING OLD C1                      
          CVR=COVRT(COVIJ,C1IOLD,C1(J))                                         
C      FUNCTION 'RTCOV': APPLY COVARIANCE-RATIO USING NEW C1,                   
C      TO GET NEW COVAR(I,J)                                                    
          COVAR(IJ)=RTCOV(CVR,C1(I),C1(J))                                      
C                                                                               
        ENDIF                                                                   
 180    CONTINUE                                                                
C                                                                               
      ENDIF                                                                     
 160  CONTINUE                                                                  
C                                                                               
C  QUIT IF NO VEHICLE TO 'PROTOTYPE'                                            
1000  IF(NPROTO.EQ.0)RETURN                                                     
C                                                                               
C                                                                               
C  NOW DO PROTOTYPING (IADJSW=1): C1 AND COVAR FOR PROTOTYPE VEHICLES           
C                                                                               
C                                                                               
C  FIRST, GET C1 FOR EACH PROTO-VEHICLE                                         
C                                                                               
      DO 190 I=1,NVEH                                                           
      IF(IPBASE(I).GT.0)THEN                                                    
C  HAVE PROTO I:                                                                
C    APPLY INPUT RATIO TO BASE C1, TO GET PROTO C1; LIMIT IT                    
        C1(I)=RATC1(I)*C1(IPBASE(I))                                            
        C1(I)=PLIM(C1(I),C1LO,C1HI)                                             
      ENDIF                                                                     
 190  CONTINUE                                                                  
C                                                                               
C                                                                               
C  SECOND, SORT ALL VEHICLES DESCENDING BY C1, USING POINTERS 'IORD'            
C                                                                               
      CALL SORT(IORD,C1,NVEH)                                                   
C                                                                               
C                                                                               
C  LAST, GET COVARIANCES OF EACH PROTO WITH EVERY OTHER VEHICLE.                
C  NOTE POINTERS 'IORD' USED TO DO VEHICLES IN DESCENDING-C1 ORDER.             
C  (Prototyping is order-dependent ONLY for Multiple Protos                     
C   on Same Base)                                                               
C                                                                               
C                                                                               
C  OUTER LOOP COPIES PARAM-C FROM BASE TO PROTO, AND GETS COVAR                 
C  JUST OF PROTO AND ITS BASE                                                   
      DO 200 II=1,NVEH                                                          
      I=IORD(II)                                                                
      IF(IPBASE(I).GT.0)THEN                                                    
        IB=IPBASE(I)                                                            
C  HAVE PROTO-VEHICLE I BASED ON REAL-VEHICLE 'IB'                              
C                                                                               
C    COPY PARAM-C FROM BASE TO PROTO                                            
        PARMC(I)=PARMC(IB)                                                      
C    APPLY INPUT RATIO TO BASE C1, TO GET C11 OF PROTO & BASE; LIMIT IT         
        C11IIB=RATC11(I)*C1(IB)                                                 
        C11IIB=C11LIM(C11IIB,C1(I),C1(IB))                                      
C    CONVERT C11 TO COVAR OF PROTO I AND ITS BASE IB                            
        COVIIB=C1(I)+C1(IB)-C1(I)*C1(IB)-C11IIB                                 
        IIB=INDX(I,IB,NVEH)                                                     
        COVAR(IIB)=COVIIB                                                       
C                                                                               
C    INNER LOOP GETS COVAR OF PROTO-VEHICLE I WITH EVERY OTHER                  
C    VEHICLE J, WHETHER J ITSELF IS PROTO OR REAL. J GOES OVER ALL              
C    VEHICLES LESS THAN I, AND ONLY REAL VEHICLES GREATER THAN I,               
C    BUT NOT I's BASE IB, SINCE COVAR(I,IB) ALREADY DONE                        
        DO 220 JJ=1,NVEH                                                        
        J=IORD(JJ)                                                              
        IF(J.NE.IB.AND.(J.LT.I.OR.(J.GT.I.AND.IPBASE(J).EQ.0)))THEN             
C    HAVE ELIGIBLE VEHICLE J                                                    
C                                                                               
C      GET COVAR OF I's BASE IB & J                                             
          IBJ=INDX(IB,J,NVEH)                                                   
          COVIBJ=COVAR(IBJ)                                                     
C      GET COVAR-RATIO, USING C1 OF BASE IB                                     
          CVR=COVRT(COVIBJ,C1(IB),C1(J))                                        
C      APPLY RATIO, USING C1 OF I ITSELF, TO GET COVAR(I,J)                     
          COVIJ=RTCOV(CVR,C1(I),C1(J))                                          
          IJ=INDX(I,J,NVEH)                                                     
          COVAR(IJ)=COVIJ                                                       
C                                                                               
        ENDIF                                                                   
 220    CONTINUE                                                                
C                                                                               
      ENDIF                                                                     
 200  CONTINUE                                                                  
C                                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  DO 1-3 SCHEDULE SFD's (SUMMARY-FREQUENCY-DISTRIBUTIONS):                     
C    VEHICLE EXPOSURE ('MODEL'=1 or 2)                                          
C    PAGE EXPOSURE (if 'IPXSW'=1: 'MXFPEX' used also)                           
C    VEHICLE IMPACT (if 'IMPSW'=1: 'MXFIMP' used also)                          
C                                                                               
C                                                                               
      SUBROUTINE SCHED(MODEL,IPXSW,MXFPEX,IMPSW,MXFIMP,NTINS)                   
C     ----------------                                                          
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),PARMC(100),                        
     +                COVAR(4950),SFDVEX(505)                                   
C  Note /VEHEXP/ now has 'PARMC' in place of 'C2', and                          
C  'COVAR' in place of 'C11'                                                    
      COMMON /PAGEXP/ PEXM(100),SFDPEX(505)                                     
      COMMON /IMPACT/ PIMP(100),SFDIMP(505)                                     
      COMMON /TEMP  / IORD(100),SPEX1(505),SPEX2(505),SIMP1(505),               
     +                SIMP2(505),CEP(505),CVARP(505),FD(505)                    
C  Note all 8 /TEMP/ variables used                                             
C                                                                               
      REAL*8 SUM                                                                
      BFAC=0.95                                                                 
      CVFAC=1.05                                                                
C                                                                               
      NTINS=0                                                                   
      DO 100 I=1,NVEH                                                           
 100  NTINS=NTINS+NINS(I)                                                       
C                                                                               
      DO 120 I=1,NTINS+5                                                        
C         For VEHICLE SFD                                                       
      SFDVEX(I)=0.0                                                             
C                                                                               
      IF(IPXSW.EQ.1)THEN                                                        
C         For PAGE SFD, and Sum & Sum-Squares                                   
        SFDPEX(I)=0.0                                                           
        SPEX1(I)=0.0                                                            
        SPEX2(I)=0.0                                                            
       ENDIF                                                                    
C                                                                               
      IF(IMPSW.EQ.1)THEN                                                        
C         For IMPACT SFD, and Sum & Sum-Squares                                 
        SFDIMP(I)=0.0                                                           
        SIMP1(I)=0.0                                                            
        SIMP2(I)=0.0                                                            
       ENDIF                                                                    
 120  CONTINUE                                                                  
C                                                                               
C                                                                               
C         Zero Schedule Insertions thus far                                     
      NTINS=0                                                                   
C         All People exposed to Zero Units of Zero Vehicles                     
      SFDVEX(1)=1.0                                                             
C         Mean & Variance of Old-Vehicle Frequencies 'm'                        
      EM=0.0                                                                    
      VARM=0.0                                                                  
C         Regression B-value for New-Vehicle Conditional Mean Probs.            
      B=0.0                                                                     
C                                                                               
C         Get Pointers 'IORD' to do Vehicles in Descending-C1 order             
      CALL SORT(IORD,C1,NVEH)                                                   
C                                                                               
C          *     *     *     *     *                                            
C                                                                               
C  GRAND OUTER LOOP OVER INPUT VEHICLES                                         
C                                                                               
      DO 200 II=1,NVEH                                                          
      IV=IORD(II)                                                               
C         Skip Vehicle altogether if Zero Insertions                            
        IF(NINS(IV).EQ.0)GOTO 200                                               
C                                                                               
C         Old-Vehicle insertions (Capital 'M' in Math.)                         
      MM=NTINS                                                                  
C         New-Vehicle insertions (Capital 'N' in Math.)                         
      NN=NINS(IV)                                                               
        MM1=MM+1                                                                
        NN1=NN+1                                                                
C         Mean of New-Vehicle Probabilities 'p'                                 
      EP=C1(IV)                                                                 
      EQ=1.0-EP                                                                 
      EPQ=EP*EQ                                                                 
C             (4.1: New-Vehicle Beta parameter C=A+B)                           
      C=PARMC(IV)                                                               
C             (4-1: Variance of New-Vehicle Probabilities 'p')                  
      VARP=EPQ/(C+1.0)                                                          
C             (2.1: Variance of New-Vehicle Frequencies 'n')                    
        AN1=NN-1                                                                
      VARN=NN*(AN1*VARP+EPQ)                                                    
C                                                                               
C                                                                               
C         Skip to '1000 CONTINUE', below, if this is first vehicle              
C          with 1+ insertions                                                   
      IF(MM.EQ.0)GOTO 1000                                                      
C                                                                               
C  Get Covariance of New-Vehicle Probabilities 'p'                              
C   and Old-Vehicle Frequencies 'm'                                             
C             (5.8)                                                             
      COVPM=0.0                                                                 
      DO 210 JJ=1,II-1                                                          
      JV=IORD(JJ)                                                               
      IF(NINS(JV).GT.0)THEN                                                     
        IJ=INDX(IV,JV,NVEH)                                                     
        COVPM=COVPM+NINS(JV)*COVAR(IJ)                                          
       ENDIF                                                                    
 210  CONTINUE                                                                  
C                                                                               
C  Get regression B-value to estimate 'Conditional' Means of                    
C   New-Vehicle Probabilities 'p', at each Old-Vehicle Frequency 'm'            
C             (5.2)                                                             
      B=COVPM/VARM                                                              
C             (5-15+: Limit B)                                                  
      IF(B.GT.0.0)THEN                                                          
        BLIM=AMIN1(EP/EM,EQ/(MM-EM),SQRT(VARP/VARM))                            
        B=AMIN1(B,BFAC*BLIM)                                                    
      ELSEIF(B.LT.0.0)THEN                                                      
        BLIM=AMAX1(-EQ/EM,-EP/(MM-EM),-SQRT(VARP/VARM))                         
        B=AMAX1(B,BFAC*BLIM)                                                    
      ENDIF                                                                     
C                                                                               
C  Re-entry point for first vehicle with 1+ insertions: B=VARM=0 (sic!)         
1000  CONTINUE                                                                  
C                                                                               
C  New-Vehicle Variance of Probabilities 'p' that is                            
C   Explained & Not-Explained by Old-Vehicle Frequencies 'm'                    
C             (6.2)                                                             
      VARPEX=B*B*VARM                                                           
      VARPNX=VARP-VARPEX                                                        
C             (6.5+: DD1 Proportion.-Constant for Condit'l Variances)           
      ALFA=VARPNX/(EPQ-VARPEX)                                                  
C                                                                               
C                                                                               
C  Get Conditional Means CEP & Variances CVARP of New-Vehicle                   
C   Probabilities 'p', at each Old-Vehicle Frequency 'm'. Grand                 
C   Mean of CEP is EP, and of CVARP is VARPNX                                   
C                                                                               
      IF(MODEL.EQ.1.OR.MM.LE.1.OR.NN.EQ.1)THEN                                  
C             (DD1, & 9-3)                                                      
        DO 220 IM=1,MM1                                                         
C         Small 'm' in Math.                                                    
        M=IM-1                                                                  
C             (5.1: Conditional Mean E(pºm), linear)                            
        P=EP+B*(M-EM)                                                           
        CEP(IM)=P                                                               
        PQ=P*(1.0-P)                                                            
C             (6.6: Conditional Variance Var(pºm), proport'l to 'PQ')           
 220    CVARP(IM)=ALFA*PQ                                                       
C                                                                               
      ELSE                                                                      
C             (DD2)                                                             
        SUM=0.0                                                                 
        DO 240 IM=1,MM1                                                         
        M=IM-1                                                                  
        P=EP+B*(M-EM)                                                           
        CEP(IM)=P                                                               
        PQ=P*(1.0-P)                                                            
C           Conditional Variance Adjustment                                     
        IF(M.EQ.0.OR.M.EQ.MM)PQ=CVFAC*PQ                                        
        CVARP(IM)=PQ                                                            
 240    SUM=SUM+SFDVEX(IM)*PQ                                                   
C             (9-5+: Make Mean of adjusted CVARP equal VARPNX)                  
        AK=(AN1+1.0/ALFA)*VARPNX/SUM                                            
        DO 260 IM=1,MM1                                                         
        P=CEP(IM)                                                               
        PQ=P*(1.0-P)                                                            
 260    CVARP(IM)=(AK*CVARP(IM)-PQ)/AN1                                         
      ENDIF                                                                     
C                                                                               
C                                                                               
C                                                                               
C  Update Vehicle-Exposure SFD, and Page-Exposure & Vehicle-Impact              
C  Sum & Sum-Squares (if/as specified by switchs):                              
C    Get Conditional Freq.Dist. 'P(nºm)' for New-Vehicle 'n=0...N',             
C      at each Old-Vehicle 'm', by Beta-Binomial (parameters from               
C      Conditional Mean & Variance of 'p')                                      
C    Collapse implied matrix to new Vehicle-Exposure SFD as                     
C      we go ('k=m+n')                                                          
C    Accumulate Page-Exposure & Vehicle-Impact Sum & Sum-Squares                
C      of Cell Means, at each level 'k' of new Vehicle-Exposure SFD             
C                                                                               
      IF(IPXSW.EQ.1)THEN                                                        
C         Pull out input PAGE-Mean & Square it                                  
        PEX1=PEXM(IV)                                                           
        PEX2=PEX1*PEX1                                                          
       ENDIF                                                                    
C                                                                               
      IF(IMPSW.EQ.1)THEN                                                        
C         Pull out input Mean IMPACT-Probability & Square it                    
        PMP1=PIMP(IV)                                                           
        PMP2=PMP1*PMP1                                                          
       ENDIF                                                                    
C                                                                               
C         Outer Loop DESCENDING over Old-Vehicle Frequencies 'm'                
      DO 300 IM=MM1,1,-1                                                        
C         Pull out old VEHICLE exposed at 'm'                                   
      POP=SFDVEX(IM)                                                            
C             (Conditional Probabilities P(nºm), Chapter 7 & 8.1)               
      CALL BBD(FD,NCLASS,1.0,CEP(IM),CVARP(IM),NN,NN)                           
C         Pull out Conditional Probability P(n=0ºm)                             
      PNM=FD(1)                                                                 
C         Init.new VEHICLE exposed at 'm'                                       
      SFDVEX(IM)=PNM*POP                                                        
C                                                                               
      IF(IPXSW.EQ.1)THEN                                                        
C         Pull out old PAGE Sum & Sum-Squares at 'm'                            
        SPX1=SPEX1(IM)                                                          
        SPX2=SPEX2(IM)                                                          
C         Init.new Sum & Sum-Squares at 'm'                                     
        SPEX1(IM)=PNM*SPX1                                                      
        SPEX2(IM)=PNM*SPX2                                                      
       ENDIF                                                                    
C                                                                               
      IF(IMPSW.EQ.1)THEN                                                        
C         Pull out old IMPACT Sum & Sum-Squares at 'm'                          
        SMP1=SIMP1(IM)                                                          
        SMP2=SIMP2(IM)                                                          
C         Init.new Sum & Sum-Squares at 'm'                                     
        SIMP1(IM)=PNM*SMP1                                                      
        SIMP2(IM)=PNM*SMP2                                                      
       ENDIF                                                                    
C         Init.'k'                                                              
      IK=IM                                                                     
C                                                                               
C         Inner Loop over New-Vehicle Frequencies 'n'>0, for given 'm'          
      DO 320 IN=2,NCLASS                                                        
      IK=IK+1                                                                   
C           Pull out Conditional Probability P(n>0ºm)                           
      PNM=FD(IN)                                                                
      IF(PNM.EQ.0.0)GOTO 320                                                    
C           Small 'n' in Math.                                                  
      N=IN-1                                                                    
      POPN=POP*N                                                                
C             (8-5+: accumulate new VEHICLE exposed at 'k=m+n')                 
      SFDVEX(IK)=SFDVEX(IK)+PNM*POP                                             
C                                                                               
      IF(IPXSW.EQ.1)THEN                                                        
C             (11.12+: accumulate new PAGE Sum & Sum-Squares at 'k')            
        SPEX1(IK)=SPEX1(IK)+PNM*(SPX1+POPN*PEX1)                                
        SPEX2(IK)=SPEX2(IK)+PNM*(SPX2+2.0*N*PEX1*SPX1+POPN*N*PEX2)              
       ENDIF                                                                    
C                                                                               
      IF(IMPSW.EQ.1)THEN                                                        
C             (10.12+: accumulate new IMPACT Sum & Sum-Squares at 'k')          
        SIMP1(IK)=SIMP1(IK)+PNM*(SMP1+POPN*PMP1)                                
        SIMP2(IK)=SIMP2(IK)+PNM*(SMP2+POPN*PMP2)                                
       ENDIF                                                                    
C                                                                               
C         Close loop over 'n'                                                   
 320  CONTINUE                                                                  
C         Close loop over 'm'                                                   
 300  CONTINUE                                                                  
C                                                                               
C                                                                               
C  'NEW' Vehicle is now completely 'FOLDED IN': Update Number                   
C   Insertions, and Mean & Variance of Vehicle Frequencies 'm'                  
      NTINS=NTINS+NN                                                            
      EM=EM+NN*EP                                                               
C             (5.11+: new formula saves loop over 'M')                          
      VARM=(1.0+2.0*NN*B)*VARM+VARN                                             
C                                                                               
C                                                                               
C  DO NEXT VEHICLE                                                              
 200  CONTINUE                                                                  
C                                                                               
C          *     *     *     *     *                                            
C                                                                               
C                                                                               
C    SCHEDULE VEHICLE EXPOSURE DONE                                             
C  Get SFD's of Page-Exposure and Vehicle-Impact, if/as specified:              
C    Compute Freq.Dist.of given 'Effect' measure at each level 'k' of           
C      Vehicle-Exposure SFD, from Mean & Variance at that level                 
C    Pool these distributions for final SFD of 'Effect', as we go               
C             (Chapters 11 & 10)                                                
C                                                                               
      IF(IPXSW.EQ.1)THEN                                                        
C         Do PAGE Freq.Dist.only as far as wanted                               
        MXF=NTINS+3                                                             
        IF(MXFPEX.GT.0.AND.MXFPEX.LT.MXF)MXF=MXFPEX                             
C         No Vehicle exposure no Page exposures                                 
        SFDPEX(1)=SFDVEX(1)                                                     
C                                                                               
        DO 400 IK=2,NTINS+1                                                     
C         Pull out VEHICLE exposed at 'k>0'                                     
        POP=SFDVEX(IK)                                                          
C             (11.4,11.6,11.7: Mean & Variance of PAGE exposures                
C              given 'k>0' VEHICLE exposures)                                   
        R=SPEX1(IK)/POP                                                         
        VAR=SPEX2(IK)/POP-R*R                                                   
C             (11-20,21: Joint Prob. P(k,j) of 'k' VEHICLE exposures            
C              AND 'j' PAGE exposures, by Gamma-Poisson)                        
        CALL GPD(FD,NCLASS,POP,R,VAR,MXF)                                       
C         Accumulate final PAGE SFD summed over 'k'                             
        DO 420 J=1,NCLASS                                                       
 420    SFDPEX(J)=SFDPEX(J)+FD(J)                                               
 400    CONTINUE                                                                
      ENDIF                                                                     
C                                                                               
      IF(IMPSW.EQ.1)THEN                                                        
C         Do IMPACT Freq.Dist.only as far as wanted                             
        MXF=NTINS                                                               
        IF(MXFIMP.GT.0.AND.MXFIMP.LT.MXF)MXF=MXFIMP                             
C         No Vehicle exposure no Impacts                                        
        SFDIMP(1)=SFDVEX(1)                                                     
C                                                                               
        DO 440 IK=2,NTINS+1                                                     
        K=IK-1                                                                  
C         Pull out VEHICLE exposed at 'k>0'                                     
        POP=SFDVEX(IK)                                                          
C             (10.4,10.6,10.7: Mean & Variance of IMPACT probs.                 
C              given 'k>0' VEHICLE exposures)                                   
        P=SIMP1(IK)/K/POP                                                       
        VAR=SIMP2(IK)/K/POP-P*P                                                 
C         Whichever is less: 'k' or max.freq.wanted                             
        MXK=MIN0(K,MXF)                                                         
C             (10-8: Joint Prob. P(k,j) of 'k' VEHICLE exposures                
C              AND 'j' IMPACTS, by Beta-Binomial)                               
        CALL BBD(FD,NCLASS,POP,P,VAR,K,MXK)                                     
C         Accumulate final IMPACT SFD summed over 'k'                           
        DO 460 J=1,NCLASS                                                       
 460    SFDIMP(J)=SFDIMP(J)+FD(J)                                               
 440    CONTINUE                                                                
      ENDIF                                                                     
C                                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  COPY 3 INTERNAL ERROR-VARIABLES AND 1-3 INTERNAL SFD-VARIABLES               
C  TO EXTERNAL CALLING-PROGRAM VARIABLES, INTEGER.                              
C  SCALE SFD's TO OUTPUT POPULATION 'IPOPO'                                     
C                                                                               
C                                                                               
      SUBROUTINE COPYBK(KFERC,KFER1,KFER2,IPOPO,NTINS,MXFVEX,IVXSFD,            
     +                  IPXSW,MXFPEX,IPXSFD,IMPSW,MXFIMP,IMPSFD)                
C     -----------------                                                         
C                                                                               
      DIMENSION IVXSFD(*),IPXSFD(*),IMPSFD(*)                                   
C                                                                               
      COMMON /VEHEXP/ NVEH,NINS(100),C1(100),PARMC(100),                        
     +                COVAR(4950),SFDVEX(505)                                   
      COMMON /PAGEXP/ PEXM(100),SFDPEX(505)                                     
      COMMON /IMPACT/ PIMP(100),SFDIMP(505)                                     
      COMMON /ERROR / IFERC,IFER1,IFER2                                         
C                                                                               
C  ERROR VARIABLES                                                              
      KFERC=IFERC                                                               
      KFER1=IFER1                                                               
      KFER2=IFER2                                                               
C   QUIT IF FATAL ERROR: NO SFD RETURNED                                        
      IF(IFERC.GT.0)RETURN                                                      
C                                                                               
C                                                                               
C  Project 1-3 final SFD's to output population IPOPO and                       
C   round INDEPENDENTLY to nearest integer.                                     
C                                                                               
C  Input values of 1-3 Max.Freq.Variables MXFVEX, MXFPEX and                    
C   MXFIMP are returned often with CHANGED values.                              
C                                                                               
C  User MUST examine first 'MXF...'+1 total NUMBER of freq.classes              
C   of each returned SFD: last class represents 'N+' for Page Exposure          
C   and may also for Vehicle Exposure and Vehicle Impact                        
C                                                                               
C  Number of GROSS EXPOSURES/IMPACTS computed separately/precisely,             
C   projected to IPOPO and returned in next freq.class 'MXF...'+2.              
C                                                                               
C  SFD classes beyond 'MXF...'+2 Cleared ONLY but EQUALLY thru                  
C   Number Schedule Insertions+5.                                               
C                                                                               
C                                                                               
      POPOUT=IPOPO                                                              
C                                                                               
C                                                                               
C  VEHICLE-EXPOSURE SFD                                                         
      MXF=NTINS                                                                 
      IF(MXFVEX.GT.0.AND.MXFVEX.LT.MXF)MXF=MXFVEX+1                             
      BAL=POPOUT                                                                
      DO 100 I=1,MXF                                                            
      F=POPOUT*SFDVEX(I)                                                        
C        'NINT' Rounds Real-Number to 'NEAREST INTEGER'                         
      IVXSFD(I)=NINT(F)                                                         
      IF(NINT(BAL).LE.0)GOTO 1000                                               
      MXFVEX=I                                                                  
 100  BAL=BAL-F                                                                 
      IVXSFD(MXFVEX+1)=NINT(BAL)                                                
1000  EXPS=0.0                                                                  
      DO 120 I=1,NVEH                                                           
 120  EXPS=EXPS+NINS(I)*C1(I)                                                   
      IVXSFD(MXFVEX+2)=NINT(POPOUT*EXPS)                                        
      DO 130 I=MXFVEX+3,NTINS+5                                                 
 130  IVXSFD(I)=0                                                               
      IF(IPXSW.EQ.0)GOTO 2000                                                   
C                                                                               
C  PAGE-EXPOSURE SFD (no upper limit, logically)                                
      MXF=NTINS+3                                                               
      IF(MXFPEX.GT.0.AND.MXFPEX.LT.MXF)MXF=MXFPEX+1                             
      BAL=POPOUT                                                                
      DO 140 I=1,MXF                                                            
      F=POPOUT*SFDPEX(I)                                                        
      IPXSFD(I)=NINT(F)                                                         
      IF(NINT(BAL).LE.0)GOTO 1400                                               
      MXFPEX=I                                                                  
 140  BAL=BAL-F                                                                 
      IPXSFD(MXFPEX+1)=NINT(BAL)                                                
1400  EXPS=0.0                                                                  
      DO 160 I=1,NVEH                                                           
 160  EXPS=EXPS+NINS(I)*C1(I)*PEXM(I)                                           
      IPXSFD(MXFPEX+2)=NINT(POPOUT*EXPS)                                        
      DO 170 I=MXFPEX+3,NTINS+5                                                 
 170  IPXSFD(I)=0                                                               
2000  IF(IMPSW.EQ.0)RETURN                                                      
C                                                                               
C                                                                               
C  VEHICLE-IMPACT SFD                                                           
      MXF=NTINS                                                                 
      IF(MXFIMP.GT.0.AND.MXFIMP.LT.MXF)MXF=MXFIMP+1                             
      BAL=POPOUT                                                                
      DO 180 I=1,MXF                                                            
      F=POPOUT*SFDIMP(I)                                                        
      IMPSFD(I)=NINT(F)                                                         
      IF(NINT(BAL).LE.0)GOTO 1800                                               
      MXFIMP=I                                                                  
 180  BAL=BAL-F                                                                 
      IMPSFD(MXFIMP+1)=NINT(BAL)                                                
1800  EXPS=0.0                                                                  
      DO 200 I=1,NVEH                                                           
 200  EXPS=EXPS+NINS(I)*C1(I)*PIMP(I)                                           
      IMPSFD(MXFIMP+2)=NINT(POPOUT*EXPS)                                        
      DO 210 I=MXFIMP+3,NTINS+5                                                 
 210  IMPSFD(I)=0                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C                                                                               
C  GET SINGLE INDEX OF (I,J) CELL IN LOGICAL N*N SYMMETRIC                      
C  MATRIX OF WHICH ONLY ABOVE-DIAGONAL CELLS ARE PHYSICALLY                     
C  STORED AS VECTOR. (I,J may be in reverse order)                              
C                                                                               
      FUNCTION INDX(I,J,N)                                                      
C     -------------                                                             
C                                                                               
      K=MIN0(I,J)                                                               
      INDX=I+J+N*(K-1)-K*(K+3)/2                                                
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  SORT POINTERS 'IP' TO PUT 'N' NUMBER OF CELLS OF VECTOR 'XV'                 
C  IN DESCENDING ORDER                                                          
C                                                                               
      SUBROUTINE SORT(IP,XV,N)                                                  
C     ---------------                                                           
C                                                                               
      DIMENSION IP(*),XV(*)                                                     
C                                                                               
      DO 1 I=1,N                                                                
   1  IP(I)=I                                                                   
C                                                                               
      DO 2 I=1,N-1                                                              
      DO 2 J=I+1,N                                                              
      II=IP(I)                                                                  
      JJ=IP(J)                                                                  
      IF(XV(II).LT.XV(JJ))THEN                                                  
        IP(I)=JJ                                                                
        IP(J)=II                                                                
       ENDIF                                                                    
   2  CONTINUE                                                                  
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  FORCE 'P' BETWEEN LIMITS 'PLO' & 'PHI'                                       
C                                                                               
      FUNCTION PLIM(P,PLO,PHI)                                                  
C     -------------                                                             
C                                                                               
      PLIM=AMAX1(P,PLO)                                                         
      PLIM=AMIN1(PLIM,PHI)                                                      
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  FORCE FRACTIONAL C11 WITHIN LOGICAL LIMITS                                   
C                                                                               
      FUNCTION C11LIM(C11,C1A,C1B)                                              
C     ---------------                                                           
C                                                                               
      C11LIM=AMAX1(C11,C1A,C1B)                                                 
      C11LIM=AMIN1(C11LIM,C1A+C1B,1.0)                                          
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  GET RATIO OF ACTUAL TO MAXIMUM COVARIANCE OF PROBABILITIES,                  
C  GIVEN ACTUAL COVARIANCE AND TWO MEAN PROBABILITIES                           
C                                                                               
      FUNCTION RTCOV(COV,P1,P2)                                                 
C     --------------                                                            
C                                                                               
      Q1=1.0-P1                                                                 
      Q2=1.0-P2                                                                 
C                                                                               
      IF(COV.GE.0.0)THEN                                                        
        RTCOV=AMIN1(P1*Q2,Q1*P2)                                                
      ELSE                                                                      
        RTCOV=AMIN1(P1*P2,Q1*Q2)                                                
      ENDIF                                                                     
C                                                                               
      RTCOV=COV/RTCOV                                                           
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  GET ACTUAL COVARIANCE OF PROBABILITIES, GIVEN RATIO OF ACTUAL                
C  TO MAXIMUM COVARIANCE AND TWO MEAN PROBABILITIES                             
C                                                                               
      FUNCTION COVRT(CVR,P1,P2)                                                 
C     --------------                                                            
C                                                                               
      Q1=1.0-P1                                                                 
      Q2=1.0-P2                                                                 
C                                                                               
      IF(CVR.GE.0.0)THEN                                                        
        COVRT=AMIN1(P1*Q2,Q1*P2)                                                
      ELSE                                                                      
        COVRT=AMIN1(P1*P2,Q1*Q2)                                                
      ENDIF                                                                     
C                                                                               
      COVRT=CVR*COVRT                                                           
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  BETA-BINOMIAL FREQ.DIST.'FD', PROJECTED TO POPULATION 'POP',                 
C  FROM 'P'=MEAN PROB., 'VAR'=VARIANCE OF PROBS., 'N'=NUMBER OF                 
C  OPPORTUNITIES, 'MXF'=MAX.FREQ. TO COMPUTE SEPARATELY. BALANCE                
C  (IF ANY) PUT IN NEXT CLASS. RETURNS 'NCLASS'=TOTAL NUMBER OF                 
C  CLASSES COMPUTED INCLUDING BALANCE (IF ANY)                                  
C                                                                               
      SUBROUTINE BBD(FD,NCLASS,POP,P,VAR,N,MXF)                                 
C     --------------                                                            
C                                                                               
C  Uses Log-Beta-Function 'BETAL'                                               
C                                                                               
      DIMENSION FD(*)                                                           
C                                                                               
      N1=N+1                                                                    
      MXCLAS=N1                                                                 
      IF(MXF.LT.N)MXCLAS=MXF+2                                                  
C                                                                               
      POPLO1=1.0E-8                                                             
      PLO=0.0001                                                                
      PHI=1.0-PLO                                                               
C                                                                               
C                                                                               
      IF(POP.LT.POPLO1.OR.P.LT.PLO.OR.P.GT.PHI)THEN                             
C         Put everyone in Mean Class                                            
        NCLASS=NINT(P*N+1.0)                                                    
        NCLASS=MIN0(NCLASS,MXCLAS)                                              
        FD(NCLASS)=POP                                                          
        DO 10 I=1,NCLASS-1                                                      
  10    FD(I)=0.0                                                               
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C                                                                               
      FD(MXCLAS)=0.0                                                            
      NCLASS=MXCLAS                                                             
      BAL=POP                                                                   
      POPLO2=1.0E-10                                                            
C         Log Base e of (Minimum Zero-Freq.Class size = 1.0E-20)                
      POPLOG= -46.05                                                            
C                                                                               
      Q=1.0-P                                                                   
      PQ=P*Q                                                                    
      CHI=10000.0                                                               
      VARLO=PQ/(CHI+1.0)                                                        
C                                                                               
C                                                                               
      IF(VAR.LT.VARLO)THEN                                                      
C         Binomial: everyone has about same P                                   
        PDQ=P/Q                                                                 
C           Log number subjects at Zero-Freq.                                   
        F0L=ALOG(POP)+N*ALOG(Q)                                                 
C           Get Modal-Freq.                                                     
        MODE=P*N1                                                               
C                                                                               
        IF(F0L.GT.POPLOG.OR.MODE.EQ.0)THEN                                      
C           Binomial starting at Zero-Freq.                                     
          F=EXP(F0L)                                                            
          DO 20 I=1,MXCLAS-1                                                    
          FD(I)=F                                                               
          NCLASS=I+1                                                            
          BAL=BAL-F                                                             
          IF(BAL.LT.POPLO1)GOTO 30                                              
  20      F=F*(N1-I)*PDQ/I                                                      
  30      FD(NCLASS)=BAL                                                        
C                                                                               
C                                                                               
        ELSE                                                                    
C           Binomial going both ways from Modal-Freq.                           
          FMD=MODE*ALOG(P)+(N-MODE)*ALOG(Q)                                     
          FMD=FMD-BETAL(REAL(MODE+1),REAL(N1-MODE))                             
C           Number subjects at Modal-Freq.                                      
          FMD=POP*EXP(FMD)/N1                                                   
          MDCLAS=MODE+1                                                         
          FD(MDCLAS)=FMD                                                        
          BAL=BAL-FMD                                                           
          F=FMD                                                                 
C           Loop up to MXCLAS if > MDCLAS                                       
          DO 40 I=MDCLAS+1,MXCLAS                                               
          I1=I-1                                                                
          F=F*(N1-I1)*PDQ/I1                                                    
          FD(I)=F                                                               
          NCLASS=I                                                              
          BAL=BAL-F                                                             
          IF(F.LT.POPLO2)GOTO 50                                                
  40      CONTINUE                                                              
  50      F=FMD                                                                 
C           Loop down to Zero-Freq.                                             
          DO 60 I=MDCLAS-1,1,-1                                                 
          F=F*I/(N1-I)/PDQ                                                      
          IF(I.GE.MXCLAS)THEN                                                   
            FD(MXCLAS)=FD(MXCLAS)+F                                             
          ELSE                                                                  
            FD(I)=F                                                             
          ENDIF                                                                 
          BAL=BAL-F                                                             
          IF(BAL.LT.POPLO1)THEN                                                 
            DO 70 J=1,MIN0(I-1,MXCLAS-1)                                        
  70        FD(J)=0.0                                                           
            GOTO 80                                                             
          ENDIF                                                                 
  60      CONTINUE                                                              
C           Put Balance in NCLASS                                               
  80      FD(NCLASS)=FD(NCLASS)+BAL                                             
        ENDIF                                                                   
C                                                                               
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C                                                                               
C  Beta-Binomial: Beta distribution of P's                                      
      CLO=1.0/CHI                                                               
      VARHI=PQ/(CLO+1.0)                                                        
      VAR=AMIN1(VAR,VARHI)                                                      
      C=PQ/VAR-1.0                                                              
      A=P*C                                                                     
      B=C-A                                                                     
      BN=B+N                                                                    
C         Log number subjects at Zero-Freq.                                     
      F0L=ALOG(POP)+BETAL(A,BN)-BETAL(A,B)                                      
C         Get Modal-Freq.                                                       
      IF((C-2.0).GT.POPLO2)THEN                                                 
        MODE=N1*(A-1.0)/(C-2.0)                                                 
        MODE=MIN0(MAX0(MODE,0),N)                                               
      ELSE                                                                      
        MODE=0                                                                  
        IF(A.GT.B)MODE=N                                                        
      ENDIF                                                                     
C                                                                               
      IF(F0L.GT.POPLOG.OR.MODE.EQ.0)THEN                                        
C         Beta-Binomial starting at Zero-Freq.                                  
        F=EXP(F0L)                                                              
        DO 100 I=1,MXCLAS-1                                                     
        FD(I)=F                                                                 
        NCLASS=I+1                                                              
        BAL=BAL-F                                                               
        IF(BAL.LT.POPLO1)GOTO 110                                               
 100    F=F*(N1-I)*(A+I-1.0)/(BN-I)/I                                           
 110    FD(NCLASS)=BAL                                                          
C                                                                               
C                                                                               
      ELSE                                                                      
C         Beta-Binomial going both ways from Modal-Freq.                        
        FMD=BETAL(A+MODE,BN-MODE)-BETAL(A,B)                                    
        FMD=FMD-BETAL(REAL(MODE+1),REAL(N1-MODE))                               
C           Number subjects at Modal-Freq.                                      
        FMD=POP*EXP(FMD)/N1                                                     
        MDCLAS=MODE+1                                                           
        FD(MDCLAS)=FMD                                                          
        BAL=BAL-FMD                                                             
        F=FMD                                                                   
C           Loop up to MXCLAS if > MDCLAS                                       
        DO 120 I=MDCLAS+1,MXCLAS                                                
        I1=I-1                                                                  
        F=F*(N1-I1)*(A+I1-1.0)/(BN-I1)/I1                                       
        FD(I)=F                                                                 
        NCLASS=I                                                                
        BAL=BAL-F                                                               
        IF(F.LT.POPLO2)GOTO 130                                                 
 120    CONTINUE                                                                
 130    F=FMD                                                                   
C           Loop down to Zero-Freq.                                             
        DO 140 I=MDCLAS-1,1,-1                                                  
        F=F*I*(BN-I)/(N1-I)/(A+I-1.0)                                           
        IF(I.GE.MXCLAS)THEN                                                     
          FD(MXCLAS)=FD(MXCLAS)+F                                               
        ELSE                                                                    
          FD(I)=F                                                               
        ENDIF                                                                   
        BAL=BAL-F                                                               
        IF(BAL.LT.POPLO1)THEN                                                   
          DO 150 J=1,MIN0(I-1,MXCLAS-1)                                         
 150      FD(J)=0.0                                                             
          GOTO 160                                                              
        ENDIF                                                                   
 140    CONTINUE                                                                
C           Put Balance in NCLASS                                               
 160    FD(NCLASS)=FD(NCLASS)+BAL                                               
      ENDIF                                                                     
C                                                                               
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
      FUNCTION BETAL(A,B)                                                       
C  LOG OF COMPLETE BETA FUNCTION OF A,B                                         
      BETAL=GAMAL(A)-GAMAL(A+B)+GAMAL(B)                                        
      RETURN                                                                    
      END                                                                       
C                                                                               
      FUNCTION GAMAL(A)                                                         
C  LOG OF COMPLETE GAMMA FUNCTION OF A > 0.                                     
      IF(A.GT.0.0)GOTO 1                                                        
      WRITE(*,100)A                                                             
 100  FORMAT(1X/'  ILLEGAL INPUT',E12.5,' TO LOG-GAMMA-FUNCTION')               
      STOP                                                                      
C  JERRY'S PET ALGORITHM                                                        
   1  A4=A+4.0                                                                  
      GAMAL=SQRT(6.2831854/A4)                                                  
      GAMAL=GAMAL/(A*(A+1.0)*(A+2.0)*(A+3.0))                                   
      GAMAL=ALOG(GAMAL)+A4*ALOG(A4)-A4                                          
      GAMAL=GAMAL+(1.0/(12.0*A4))*(1.0-1.0/(30.0*A4*A4))                        
      RETURN                                                                    
      END                                                                       
C                                                                               
C                                                                               
C                                                                               
C  GAMMA-POISSON FREQ.DIST.'FD', PROJECTED TO POPULATION 'POP',                 
C  FROM 'R'=MEAN RATE, 'VAR'=VARIANCE OF RATES, 'MXF'=MAX.FREQ.                 
C  TO COMPUTE SEPARATELY. BALANCE PUT IN NEXT CLASS. RETURNS                    
C  'NCLASS'=TOTAL NUMBER OF CLASSES COMPUTED INCLUDING BALANCE                  
C                                                                               
      SUBROUTINE GPD(FD,NCLASS,POP,R,VAR,MXF)                                   
C     --------------                                                            
C                                                                               
      DIMENSION FD(*)                                                           
C                                                                               
      POPLO=1.0E-8                                                              
      RLO=0.001                                                                 
C                                                                               
      IF(POP.LT.POPLO.OR.R.LT.RLO)THEN                                          
C         Put everyone in Mean-Freq.-Class                                      
        NCLASS=NINT(R+1.0)                                                      
        NCLASS=MIN0(NCLASS,MXF+2)                                               
        FD(NCLASS)=POP                                                          
        DO 1 I=1,NCLASS-1                                                       
   1    FD(I)=0.0                                                               
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
      AHI=1000.0                                                                
      VARLO=R*(R/AHI+1.0)                                                       
      BAL=POP                                                                   
C                                                                               
      IF(VAR.LT.VARLO.AND.R.LT.(ALOG(POP)+46.05))THEN                           
C         Poisson: everyone has about same R                                    
        F=POP*EXP(-R)                                                           
C                                                                               
        DO 2 I=1,MXF+1                                                          
        FD(I)=F                                                                 
        NCLASS=I+1                                                              
        BAL=BAL-F                                                               
        IF(BAL.LT.POPLO)GOTO 3                                                  
   2    F=F*R/I                                                                 
   3    FD(NCLASS)=BAL                                                          
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C                                                                               
C         Gamma-Poisson: Gamma distribution of R's                              
      ALO=1.0/AHI                                                               
      VARHI=R*(R/ALO+1.0)                                                       
      VAR=AMIN1(AMAX1(VAR,VARLO),VARHI)                                         
      A=R/(VAR/R-1.0)                                                           
      RA=R/(R+A)                                                                
      F=POP*(1.0-RA)**A                                                         
      A1=A-1.0                                                                  
C                                                                               
      DO 6 I=1,MXF+1                                                            
      FD(I)=F                                                                   
      NCLASS=I+1                                                                
      BAL=BAL-F                                                                 
      IF(BAL.LT.POPLO)GOTO 7                                                    
   6  F=F*(A1/I+1.0)*RA                                                         
   7  FD(NCLASS)=BAL                                                            
C                                                                               
      RETURN                                                                    
      END                                                                       
