                               A TSAROFF PRIMER           DATE:  11/05/93       
                                                                                
TSAROFF is an OFF-LINE facility (T00A7D) that manages a data buffer that lives  
in 31-bit storage.  TSAROFF gives access to huge amounts of storage.  TSAROFF   
manages all of this storage for you through a series of simple DATAMGR-like     
commands.                                                                       
                                                                                
TSAROFF processes RECORDS which must have keys.  You pass records to TSAROFF    
with ADD commands and get them back with READ commands.  The buffer area may be 
reinitialized at any time with an INIT command.                                 
                                                                                
SETTING UP FOR TSAROFF                                                          
                                                                                
    CONTROL BLOCK needed is 34 bytes long (as of 11/05/93).  Assign workspace   
    for CONTROL BLOCK, and cover it with Dsect TSARD.  (TSARD may be included in
    the module by ++INCLUDE DDTSARD.)                                           
                                                                                
        A few fields in the CONTROL BLOCK require initialization:               
                                                                                
          TSACOM:  set to ACOMFACS.  If this is not available, a local copy of  
          it may be built, into which is inserted, at location 0, ADATAMGR, and,
          at location +4, ACALLOFF (the off-line call overlay simulator).  No   
          other addresses are required (at this time).  Depending upon what is  
          available in your application, the DATAMGR and/or CALLOFF must be     
          *INCLUDE'd or added to your LINK.                                     
                                                                                
          TSKEYL:  length of the key field.  TSAROFF will maintain the buffer   
          in key sequence, permitting binary search and retrieval.              
                                                                                
          TSRECL:  length of the entire record.                                 
                                                                                
          TSAREC:  Address of a record buffer (called BUFFREC in example), from 
          which a record is added TO the TSAROFF buffer, and to which a record  
          is delivered FROM the TSAROFF buffer.  (NOTE:  the KEY portion of the 
          record buffer functions exactly as the KEY field during normal DATAMGR
          operations.)                                                          
                                                                                
          TSABUF:  Address of BUFFER, acquisition of which is described below.  
                                                                                
    BUFFER requirements will vary from program to program.  A buffer length may 
    be calculated by multiplying the RECORD LENGTH by the MAXIMUM NUMBER OF     
    RECORDS.  For VARIABLE RECORDS, the record length should be the LARGEST     
    record.  Following example is provided:                                     
                                                                                
                NUMENTRY EQU   10000                10,000 TABLE ENTRIES        
                RECSIZE  EQU   200                  RECORD SIZE IN BYTES        
                BUFFSIZE EQU   NUMENTRY*RECSIZE     CALCULATED BUFFER SIZE      
                                                                                
                BUFFREC  DS    CL(RECSIZE)          RECORD BUFFER               
                                                                                
     To acquire the above-the-line buffer, a call to GETMAIN is made    in this 
     manner:                                                                    
                                                                               
                        L    R0,=A(BUFFSIZE)          SET SIZE OF BUFFER        
                        GETMAIN RU,LV=(0),LOC=(ANY,ANY)                         
                        ST   R1,ABUFFER               SAVE ADDRESS OF BUFFER    
                                                                                
     NOTE:  the buffer is ACQUIRED with a GETMAIN.  NEVER ISSUE A FREEMAIN TO   
     RELEASE THE BUFFER.                                                        
                                                                                
LOADING TSAROFF                                                                 
                                                                                
        Following procedure will make TSAROFF available:                        
                                                                                
                        MVC   WORK,=CL8'T00A7D'            request TSAROFF      
                        GOTO1 LOADER,DMCB,WORK,0,0                              
                        OC    DMCB+4(4),DMCB+4             loaded okay?         
                        BNZ   *+6                          yes                  
                        DC    H'0'                         no                   
                        MVC   ATSAROFF,4(R1)               save A(TSAROFF)      
                                                                                
ACTIONS AVAILABLE WITHIN TSAROFF                                                
                                                                                
    The previous writeup of TSAR details the actions that are available within  
    the facilities of TSAR and TSAROFF.  Please refer to that for more.         
                                                                                
                TSAADD      -   Add a record.                                   
                TSARDH      -   Read high for a key.                            
                TSAWRT      -   Write a record (by key).                        
                TSADEL      -   Delete a record (by key or number).             
                TSAGET      -   Read this record number.                        
                TSAPUT      -   Write this record number.                       
                TSANXT      -   Get the next record number.                     
                TSAINI      -   Initialize the buffer                           
                                                                                
        Actions are inserted into TSOFFACT as:                                  
                                                                                
                        MVI    TSOFFACT,TSAINI       Initialize the buffer      
                                                                                
ADDRESSING THE CONTROL BLOCK                                                    
                                                                                
        TSAROFF expects R1 to point to the CONTROL BLOCK.  If R1 is set to the  
        address of the CONTROL BLOCK, call TSAROFF with:                        
                                                                                
                GOTO1    ATSAROFF                                               
                                                                                
        If the CONTROL BLOCK is referenced by another register, call TSAROFF    
        with:                                                                   
                                                                                
                GOTO1    ATSAROFF,(RX)                                          
                                                                                
CLEARING THE BUFFER                                                             
                                                                                
        To reinitialize the buffer at any time:                                 
                                                                                
                        MVI   TSOFFACT,TSAINI         set the ACTION to TSAINI  
                        MVC   TSAREC,=A(BUFFSIZE)     set A(BUFFREC) to BUFFER  
                                                          LENGTH                
                        GOTO1 ATSAROFF                branch to TSAROFF         
                                                                                
    The buffer may be cleared whenever the program requires it to be.  Clearing 
    does not reinitialize the buffer space, but rather resets the control block.
                                                                                
                                                                                
ADDING RECORDS TO BUFFER                                                        
                                                                                
        To add a record to the buffer:                                          
                                                                                
                MVI    TSOFFACT,TSAADD         set the ACTION to ADD            
                MVC    BUFFREC,INPUTREC        move record to buffer            
                LA     R0,BUFFREC              (if not previously set)          
                ST     R0,TSAREC               set address of buffer record     
                GOTO1  ATSAROFF                branch to TSAROFF                
                                                                                
        The record will be added in KEY sequence.                               
                                                                                
READING RECORDS FROM BUFFER                                                     
                                                                                
        To read the first record in the buffer:                                 
                                                                                
                 XC     BUFFREC,BUFFREC          clear key (same as DATAMGR)    
                 MVI    TSOFFACT,TSARDH          set the ACTION to READ HIGH    
                 LA     R0,BUFFREC               (if not previously set)        
                 ST     R0,TSAREC                set address of buffer record   
                 GOTO1  ATSAROFF                 branch to TSAROFF              
                                                                                
        First record in buffer will be returned to BUFFREC.  If no data is      
        present, TSERRS will indicate TSEEOF (end of file).                     
                                                                                
        To read a specific key from the buffer:                                 
                                                                                
                 MVC    BUFFREC(KEYLEN),INPUT    insert key to find             
                 MVI    TSOFFACT,TSARDH          set the ACTION to READ HIGH    
                 LA     R0,BUFFREC               (if not previously set)        
                 ST     R0,TSAREC                set address of buffer record   
                 GOTO1  ATSAROFF                 branch to TSAROFF              
                 TM     TSERRS,TSERNF            key found?                     
                 BNO    YESFOUND                 yes - process it               
                                                                                
        Other actions work in a similar fashion.                                
                                                                                
FANCIER APPLICATIONS:  MULTIPLE BUFFERS                                         
                                                                                
    More than one buffer may be controlled.  Each buffer may have its own       
    characteristics:  record length, keylength, record buffer area.  Each area  
    MUST have its own CONTROL BLOCK.   Establish the address of each CONTROL    
    BLOCK so the correct one may be referenced, as required by the program.     
                                                                                
    Calculate the TOTAL BUFFER SIZE required, and make a single GETMAIN call for
    all storage.                                                                
                                                                                
    The address of the storage acquired is returned in R1 from the GETMAIN call 
    This will serve as the address of the first buffer.  The storage space is   
    then partitioned off into the number and size of the required buffers:      
                                                                                
                ST     R1,ABUFF1                 save address 1st buffer        
                A      R1,=F'50000'              1st buffer = 50,000 bytes      
                ST     R1,ABUFF2                 save address 2nd buffer        
                A      R1,=F'100000'             2nd buffer = 100,000 bytes     
                ST     R1,ABUFF3                 save address 3rd buffer        
       *                                         3rd buffer = remainder         
                                                                                
    Each CONTROL BLOCK is initialized appropriately to its unique character-    
    istics as described above.                                                  
                                                                                
    By properl controlling which CONTROL BLOCK is being addressed by the call   
    to TSAROFF, various tables may be handled concurrently.                     
                                                                                
                                                                                
