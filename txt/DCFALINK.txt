FALINK - Up/Download data from Mainframe to PC and vice-versa                   
-------------------------------------------------------------                   
                                                                                
FALINK is a generalised mechanism for communication between Mainframe           
(Online) applications and PC applications. The design of FALINK is such         
that the client application, at both PC and Mainframe ends need not be          
concerned with the mechanics of interconnection, nor the format in which        
data is passed, merely having to react to a defined series of events, as        
detailed below.                                                                 
                                                                                
The main working storage DSECTS are covered in the book FALINKBLK. This         
book covers both the storage required from the client and the layouts           
for the element header and data tables stored within the mainframe              
application.                                                                    
                                                                                
For purposes of documentation, an FALINK transaction is defined as a            
complete cycle of events. It will usually cover more than 1 logical             
transaction on the oonline system (i.e. more than 1 <enter> press).             
*                                                                               
An FALINK transaction can be split into 2 portions. The first, from PC          
to Host is usually a request for a particular record set, initiated by          
uploading a formatted datastream, which is buffered. On completion, the         
application, with the assistance of FALINK to parse/convert the data            
will be able to translate into a comprehensible request.                        
                                                                                
The second is the response to the record set request, which is created          
by by the application, downloaded and then returned to the requesting           
PC as a series of screens.                                                      
                                                                                
Points to note                                                                  
--------------                                                                  
FALINK now runs in 31-bit mode. This is because the buffer it uses to           
read pages for I/O will not fit elsewhere. For maximum compatibility            
it always returns to the calling application in 24-bit mode. If you             
are in XA mode and call FALINK, you will be back in 24-bit addressing           
on return (i.e. you will have to switch back into XA yourself). FALINK          
assumes that you return to it in 24-bit mode also, so switching into            
XA before returning will not save any cycles.                                   
                                                                                
1) Downloading From Mainframe to PC                                             
-----------------------------------                                             
                                                                                
FALINK is called by the mainframe application. If it is the first time          
in, it will initialise itself by building the required screen, and then         
returning to the caller                                                         
                                                                                
application to build the download. In order to allow FALINK to compress         
the data and build the buffers required for this download, two calls            
(from mainframe to FALINK) are provided for, detailed below.                    
                                                                                
As soon as the download is built, it is then sent, a screen at a time           
to the PC application.                                                          
                                                                                
The 2 types of call to FALINK are a SETELEM and an ADDDATA call.                
                                                                                
SETELEM                                                                         
-------                                                                         
                                                                                
Called whenever a new element is to be added to the download. The               
parameters required are as follows:                                             
                                                                                
SETELEM routine input parameters.                                               
---------------------------------                                               
P1: B 0-3: A(FALINKBLK)                                                         
P2: B 0-3: A(Element header field)                                              
P3: B 0-3: 0  (gives default element code)                                      
      or                                                                        
P3: B 0  : Length of override string (must be <60 bytes)                        
    B 1-3: A(Override string)                                                   
                                                                                
ADDDATA                                                                         
-------                                                                         
                                                                                
Called to add an item of data for this element to the buffer. The               
parameters required are as follows:                                             
                                                                                
ADDDATA routine input parameters.                                               
---------------------------------                                               
P1: A(FALINKBLK)                                                                
P2: A(Element Data Entry)                                                       
P3: A(Data)                                                                     
P4: 0 for normal, nz holds override length of field (if required).              
                                                                                
The data has to be buffered so that duplicates and repeated MDCODEs can         
be handled. For this reason, it is necessary to make a final ADDDATA            
call with the A(Data) set to be zero to signify end of data stream.             
                                                                                
The following data types are supported by FALINK                                
Unless otherwise stated, the default input length must be set in MDDLEN,        
and can be overridden by passing the override length in P3 above.               
                                                                                
1. MDIBIQ - Binary Data.                                                        
------------------------                                                        
The data is a 1-4 byte field. The output is the numeric value of the            
binary data in unsigned decimal integer format.                                 
                                                                                
2. MDIPKQ - Packed decimal Data.                                                
--------------------------------                                                
The data is a 1-8 byte packed decimal field. The output is the numeric          
numeric value of the packed data in signed decimal integer format.              
                                                                                
3. MDICHQ - EBCDIC String Data.                                                 
-------------------------------                                                 
The data is a 1-256 byte string of characters. If length (MDDLEN) is set        
zero, then the string is assumed to be of variable length, otherwise it         
is fixed.                                                                       
                                                                                
4. MDIDTQ - Date Data.                                                          
----------------------                                                          
The data is a DATCON type 1 (PWOS) date. Input length is redundant.             
                                                                                
5. MDICDQ - Compressed Date Data.                                               
---------------------------------                                               
The data is a DATCON type 2 (compressed) date. Input length is                  
redundant.                                                                      
                                                                                
6. MDICAQ - Cash (Money) Data.                                                  
------------------------------                                                  
The data is a 1 - 8 byte signed packed decimal field. The output is the         
numeric value of the field, signed and formatted to 2 d.p.                      
                                                                                
2) Uploading from PC to Mainframe.                                              
----------------------------------                                              
                                                                                
The PC application calls FALINK to build a buffer of the incoming data.         
As soon as the upload is built, FALINK calls the mainframe application          
to process the buffer.                                                          
                                                                                
The mainframe is expected to call FALINK repeatedly for each item of            
data uploaded until FALINK returns no more data in buffer.                      
                                                                                
GETDATA                                                                         
-------                                                                         
                                                                                
Called whenever the next piece of data is required by the mainframe. The        
parameters required are as follows:                                             
                                                                                
P1: A(FALINKBLK)                                                                
P2: A(Return buffer - size 6F minimum)                                          
                                                                                
If the current piece of data is an element, the client application              
can choose to be called to translate the value of the element in the            
data stream. In order to do this, FALATRN must be defined.                      
The parameters passed to the FALATRN routine are as follows:                    
                                                                                
FALATRN element translation routine parameters.                                 
-----------------------------------------------                                 
P1: B0  : L'Untranslated element identifier                                     
    B1-3: A(Untranslated element identifier)                                    
P2:     : 0                                                                     
                                                                                
If the application wishes to translate the element code for FALINK, it          
must to set the address of the MHELD entry for this element in P2.              
This will then override the defualt translation, which is to HEXIN the          
(2 or 4 byte hexadecimal) value passed.                                         
                                                                                
GETDATA places a series of parameters into the return buffer, based on          
the actual piece of data to be returned. These are as follows                   
                                                                                
GETDATA routine return parameters.                                              
----------------------------------                                              
P1: B0  : 0 = Element DSECT passed, 1 = Data DSECT passed                       
    B1-3: A(MHCODE or MDCODE depending on B0 above)                             
P2:     : A(Translated data)                                                    
P3:     : Length of translated data                                             
P4:     : A(Untranslated data)                                                  
P5:     : Length of untranslated data                                           
                                                                                
                                                                                
