         TITLE 'Physical File Maintenance'                                      
                General Description                                             
                -------------------                                             
The Physical File Maintenance program (PFM) is a generalized facility used to   
display records for any DDS file and to handle changes to these records.  The   
screen is shown in appendix 1 and consists of input fields to define the file,  
record, and action and a record display area.                                   
The display area can be varied between decimal and hex display, where decimal   
display is 14 lines x 20 chars and hex display is 16 lines x 16 chars.          
In decimal display mode, the default input type is base-10 (Decimal) numeric,   
but the facility to enter base-16 (Hex) exists by surrounding the number        
by X'...' where ... is the Hex number in question.                              
The default input type in hexadecimal display mode is base-16. No other         
input types are catered for in this mode.                                       
                                                                                
PFM attempts to tell the user whether the system connected to is uppercase only 
or if lowercase EBCDIC is supported. Uppercase systems have the start           
displacement header in UPPERCASE and surrounded by **  ** whereas lowercase     
systems have this header in lowercase and surrounded by -- --. There are        
different translation tables for the two system formats.                        
                                                                                
The basic mode of record display is a sequential byte display of up to 280      
bytes starting from a nominated input start byte. If a file has records con-    
sisting of variable length elements an element code of record display is        
provided. The element mode will display the fixed part of the record followed   
by as many elements that can be fitted on the screen starting from a nominated  
input element.                                                                  
                                                                                
PFM also contains a multi record display function which is available for all    
files that can be read sequentially. The browse function will display whole or  
part records starting from an input record ID and continuing sequentially until 
the screen is full.                                                             
The option exists to filter these records, by searching for a keyword, either at
a specific position in the record (if known) or by searching the whole record if
necessary.                                                                      
                                                                                
The layout of the PFM Screen                                                    
----------------------------                                                    
                                                                                
The basic layout is the same for both hex and decimal displays (the default is  
decimal). The fields at the top of the screen define the actions which one      
desires PFM to perform, and the result is displayed in the output fields below. 
                                                                                
********************************************************************************
* PFM - ENTER RECORD DATA PARAMETERS                  (                      ) *
*                                                                              *
*                                                                              *
* FILE NAME     (       )                                                      *
* RECORD ID     (                                                            ) *
* RECORD ACTION (                        )                                     *
* ELEMENT ID    (                        )                                     *
* ELEMENT ACTION(                        )                                     *
*                                                                              *
* --BYTE#--  --------------HEXADECIMAL---------------  -----CHARACTERS-----    *
*           (                                        )(                    )   *
*           (                                        )(                    )   *
*           (                                        )(                    )   *
*           (                                        )(                    )   *
*           (                                        )(                    )   *
********************************************************************************
                                                                                
Input Fields                                                                    
============                                                                    
                                                                                
1. File Name                                                                    
------------                                                                    
                                                                                
A required field containing a minimum of the first four characters of the file  
name.                                                                           
                                                                                
This field can also be used to change the display mode from HEX to DEC and      
back again by the simple expedient of entering the 3 characters which correspond
to the display type required.                                                   
--------------------------------------------------------------------------------
                                                                                
2. Record ID                                                                    
------------                                                                    
                                                                                
A required field containing a minimum of two characters to identify the record  
in the file. The formats are as follows:-                                       
                                                                                
K,....   Used for index sequential files (I/S) to specify a key. The key is     
         specified as a variable length string following the K, identifier.     
         The string syntax is defined by the decoder routine which supports     
         left and right justification of assembler type constants, or hex       
         and alpha strings. This record id format is also used to add records   
         to direct access files linked to I/S pointer files.                    
                                                                                
K,*      Used after an initial K, search. This command will pull out and        
         display a full key. It is necessary to position the cursor on the      
         first line of the key which one wishes to extract. This should         
         facilitate the easy addition or amendment of records.                  
                                                                                
G,....   Used in directory files, when a key or partial key is entered, this    
         command will pull out and display the record from the associated file. 
         The input syntax supported is identical to that for K,...              
                                                                                
G,*      Bears the same relationship to G,.... as K,* does to K,....            
                                                                                
A,....   Used for all files except I/S to specify an eight character hex disk   
         address with the format ttttbbrr where tttt is the relative track,     
         bb is the block, and rr is the record. For request files a special     
         version of the disk address is available. This format is A,nn or       
         A,nn0000ff where nn is the hex request number and identifies the first 
         record in request chain for request number nn.                         
                                                                                
A,*      Used in a directory file, this command will pull out the correct disk  
         address for the record to which the cursor is pointed. Note, as with   
         the K,* format above, it is necessary to position the cursor on the    
         FIRST line of the record                                               
                                                                                
FI....   Used for all files where a first record is meaningful. If the first    
         two characters of the record id are FI then the first sequential       
         record of the file will be referenced.                                 
                                                                                
NE....   Used for all files that can be read sequentially. If the first two     
         characters of the record are NE then the next sequential record of     
         the file will be referenced. The next id can only be used if the       
         preceeding I/O action on the file defines a valid record i.e., that    
         next is meaningful.                                                    
         Note. Pressing PF09 will perform this action on all files for which    
         it is valid.                                                           
                                                                                
LA....   Used for index sequential files to identify the last record that was   
         displayed for action change.  Note- the full key does not have to be   
         be specified by K,...                                                  
                                                                                
F=....   Used for all files that can be read sequentially. Input string is      
         decoded and compared against the contents of each record. The string is
         also converted to uppercase regardless of the format of entry.         
         Any string which would be valid for K, is valid for this command. A    
         A match will cause the record to be displayed, the amount of such      
         displacement being dependant upon the input displacements (as with all 
         other PFM features.).  PFM will stop either when the screen has been   
         filled with data, or when it has read 1000 records, (in which case it  
         will prompt the user to press enter to continue).                      
         Note: This feature may only be used in BROWSE mode.                    
                                                                                
F=xx,..  Identical to F= except that the input string once decoded is compared  
         only to the record at the displacement given in xx. xx can take any    
         valid number.                                                          
                                                                                
G=....   When used from the directory, G= will cause the input string to be     
         matched against the records in the file. A match will cause the record 
         to be displayed in exactly the same way as for F= above.               
                                                                                
G=xx,..  Bears the same relationship to G=.... as F=xx,.. does to F=....        
                                                                                
ON       Used to turn on the second line of the record id field.                
                                                                                
OFF      Used to turn off the second line of the record id field.               
                                                                                
=        Used to enter the PFM Key building utility. (See Below)                
--------------------------------------------------------------------------------
                                                                                
3. Record action                                                                
----------------                                                                
                                                                                
An optional input field that defines the record action and the part of the      
record to be referenced. A record of length n bytes is defined to start at      
byte zero and end at byte n-1. The format of the record action field is :-      
                                                                                
Action,Start,End                                                                
                                                                                
Action   ADD / BROWSE / CHANGE / DISPLAY                                        
         This field is variable length and a minimum of the first character     
         is sufficient to identify the action. If this field is omitted the     
         action defaults to BROWSE for I/S files and to DISPLAY for all other   
         files. The updative actions are not available for certain files.       
                                                                                
Start    A variable length integer specifying the start byte in the record.     
         Start defaults to zero if not input. If the action is ADD then start   
         must be zero. Start can not be greater than the last byte in the       
         record.                                                                
                                                                                
End      A variable length integer specifying the end byte in the record.       
         End defaults to (RECLEN-1) if not input. End should not be less than   
                                                                                
         start and should be less than the record length. A special format      
         for end if available for V/L files when the desired action is to       
         change the length of a record. This format requires a keyword and      
         is :-                                                                  
         END=nnnn where nnnn is a V/L integer specifying the new end byte.      
         LEN=xxxx where xxxx is the new record length in hex.                   
--------------------------------------------------------------------------------
                                                                                
4. Element ID                                                                   
-------------                                                                   
                                                                                
An optional input field that indicates that element mode display format is      
required. This field can only be input if the file has elements and it defines  
an element in the record given by file name and record id. An element can       
be identified by a minimum input of two characters from one of the formats:-    
                                                                                
FI....   Used to identify the first element in the record.                      
                                                                                
LA...    Used to identify the end of the last element in the record i.e.,       
         to identify the zero element.                                          
                                                                                
I,...    Used to identify an element by its hex value. The identity of an       
         element is specified by a variable length string of hex chrs. If       
         the identify is n bytes long the first element whose length is greater 
         than or equal to n and whose first n bytes match the input value       
         is located.                                                            
                                                                                
S,...    Used to identify an element by its start byte number in the record.    
         The start byte number is a variable length integer which must follow   
         the S, identifier.                                                     
                                                                                
F=...    Used to filter out unwanted elements. Similar to I,.. except that only 
         those elements which match the input value will be displayed           
                                                                                
If the first element in a record starts at byte location 27 and has the hex     
value 0105C1C2C3 then any of the following element id fields can be used to     
locate its position :-                                                          
                                                                                
FI FIRST S,27 S,027 I,01 I,0105 I,0105C1                                        
--------------------------------------------------------------------------------
                                                                                
5. Element action                                                               
-----------------                                                               
                                                                                
An optional input field that defines the element action on the element defined  
by the element id field. This field can only be input if the element id field   
is present. An element of length n bytes is defined to start at byte zero and   
end at byte n-1. The format of the element action field is:-                    
                                                                                
Action,start,end                                                                
                                                                                
Action   ADD / CHANGE / DISPLAY / COPY                                          
                                                                                
         This field is variable length and a minimum of the first character     
         is sufficient to identify the action, except in the case of COPY,      
         which requires at least 2 characters. If this field is omitted the     
         action defaults to DISPLAY. The element action must be compatible      
         with the record action. If the record action is DISPLAY the element    
         action must also be DISPLAY. If the record action is CHANGE the element
         action must be ADD,CHANGE, or COPY. Other permutations are invalid.    
                                                                                
Start    A variable length integer specifying the start byte in the element.    
         Start defaults to zero if not input. If the element action is ADD      
         then start must be zero. If the element action is copy, this value     
         defines the element that is to be copied, using the same formula as    
         S,... in the element id field.                                         
         Note: In the case of copy, the element id field defines the location   
         to which the element will be copied.                                   
                                                                                
End      A variable length integer specifying the end byte in the element.      
         End defaults to (ELLEN-1) if not input. End should be not less than    
         start and not greater than 255. A special format for end is available  
         when the desired action is to change the length of an element or       
         to define the length of an element to be added. This format requires   
         a keyword and is one of the following :-                               
         END=nn where nn is a V/l integer specifying the new end byte.          
         LEN=xx where xx is the new element length in hex.                      
                                                                                
If it is desired to add an element of length 12 bytes at the location specified 
by the element id field then any of the following element action fields can     
be used:-                                                                       
                                                                                
ADD,0,11                                                                        
A,0,END=11                                                                      
A,0,LEN=0C                                                                      
--------------------------------------------------------------------------------
                                                                                
PFM - DISPLAY Functions                                                         
=======================                                                         
                                                                                
PFM validates each input field individually and outputs an error message for    
the first field found to be in error. If there are no errors a check is made to 
see if the combination of the input fields defines a valid function on the file 
(e.g., the addition of records to certain files may not be allowed).  If the    
file function is defined an attempt to read the record is made.                 
                                                                                
If a record is found PFM will always display the record length with the format  
RL=nnnn , and if a disk address is relevant PFM will display the address with   
the format RA=ttttbbrr. When a record has been read further checks are then     
made on the validity of the input fields.                                       
                                                                                
Basic Display                                                                   
-------------                                                                   
                                                                                
The basic display of a record starts and ends with the byte values input in the 
record action field. If these values are not input the start byte defaults to   
zero and the end byte to RECLEN-1. If the data length exceeds the size of the   
display area only the first 280 bytes are displayed starting with the start     
byte value. The record will not be displayed and an error message will be       
output if the input start or end values are out of range for the record.        
                                                                                
The display area consists of either 14 or 16 lines, depending upon which display
mode one is in. The display format is the same for both modes.                  
Each line has three fields. The first field gives the start and end byte numbers
of the data on that line in either decimal or hex (depends on mode). The next   
field is the data in hexadecimal format. The last field is the data in          
character format with unprintable bytes translated to question marks.           
                                                                                
BROWSE Display                                                                  
--------------                                                                  
                                                                                
The BROWSE function will display multiple records on the screen in the basic    
display format. Each record starts on a new display line and to signify the     
start of a new record a hyphen is inserted between the start and end byte       
values displayed on the left of the display area.                               
                                                                                
If a start byte is specified each record will be displayed from this value.     
If the file has V/L records and a record is read with a length less than the    
input start byte a special one-line display is formatted to indicate that       
the record can not be displayed because it is too short.                        
                                                                                
If an end byte is specified the display of each record will be terminated       
by the smaller of the end byte value and the RECLEN-1. If no end byte is        
specified the display of each record is terminated by the end of the record.    
The BROWSE action terminates when the current record read by PFM will not       
fit on the end of the screen . The BROWSE action will terminate abnormally if   
EOF or a disk error occurs. The record length and disk address display field    
for BROWSE applies to the last record on the screen.                            
                                                                                
Example:- The control file error message records have a 25 byte key starting    
with the character 'E'. The first element starts at byte 28 and is an 02 element
containing the error message. The following input fields will display a maximum 
of 40 characters of the error message for each error record in sequence.        
                                                                                
CTFILE                                                                          
K,C'I'                                                                          
BROWSE,30,49                                                                    
                                                                                
The remainder of the error messages can be displayed by changing the record     
ID field to 'NEXT' and repeating as many times as is required.                  
                                                                                
It is possible in addition to this to search for a particular error message by  
setting the action to F= and entering a string to search on, as described above.
                                                                                
Element display                                                                 
---------------                                                                 
                                                                                
Each record of a file which contains elements typically consists of a fixed     
length header (eg. Key/reclen/status) followed by a variable number of variable 
length elements and is terminated by a zero byte. The element mode of display   
will display the fixed length header, and each element will be displayed        
starting on a new display line. A hyphen in the byte number field indicates     
the start of an element. The display is terminated by end of record (i.e., by   
the zero element) or when the next element won't fit on the end of the screen.  
The first element to be displayed is that nominated by the element ID field.    
The other elements displayed are those that follow the first sequentially       
in the record.                                                                  
                                                                                
Use of PF08 will scroll through the elements, similar to the browse action.     
to return to the first displayed element, hit enter. (Note this is useful only  
for records which are larger than 1 screen's worth)                             
                                                                                
If an element start byte is specified each element will be displayed from       
this value. If an element is encountered whose length is less than the input    
start byte it is not displayed. If an end byte is specified for the elements    
the display of each element will be terminated by the smaller of the end byte   
value and the ELLEN-1. If no end byte is specified the display of each element  
is terminated by the end of the element.                                        
                                                                                
When a record is searched for elements, PFM performs a record consistancy       
check, and a warning message is given if an abnormal record is discovered. If a 
record is consistant and the nominated element is not found then an element not 
found error message is displayed. If the record is abnormal the record is       
displayed as specified (but starting at the first element if the nominated      
element is not found) with one of the following warning messages:-              
                                                                                
ELEMENT INVALID - An element with a length field of zero or one has been found. 
                  The record scan is terminated. The first two bytes of the     
                  element will be displayed if within the scope of the display. 
SUM ELS GT MAX  - The record scan has exceeded the maximum record length for    
                  the file without finding the end of the element chain.        
RL NEW EL=nnnn  - The record length does not equal the length given by the sum  
                  of the element lengths (with a tolerance of one byte). The    
                  element length is displayed in decimal.                       
--------------------------------------------------------------------------------
                                                                                
PFM - Adding Records                                                            
====================                                                            
                                                                                
The record action ADD is used to add a new record to a file. This action is not 
defined for all files. The record ID is used to identify the record. For I/S    
files the record ID is the key of record and it must be unique i.e., duplicate  
keys are not allowed. For request files the record is specified as A,nn or      
A,nn0000FF where nn is the hex request number; the record will be added at the  
end of the nn request chain.                                                    
                                                                                
If the file is fixed length the record start, end need not be specified, but if 
input, must be zero and (RECLEN-1) respectively. If the file is variable length 
the record length must be specified by the input of an end byte value (start    
must be zero if specified). The end byte value can not exceed 279; i.e., the    
max length record that can be added is 280 bytes. A record can only be added in 
basic mode; i.e., no element field can be specified for the record action ADD.  
                                                                                
If the record ID and length is valid for the file the record display area is    
set to a suitable format for the record, and the message 'ENTER NEW RECORD      
DATA' is displayed. The new record data can then be filled in. Data can be      
entered in the hex or alpha input fields but not on the same line. It is        
invalid to alter some of the pre-formatted data values, i.e., the key of an I/S 
record or the length embedded in a V/L record.                                  
                                                                                
If the record data is valid the record is added to the file. The record display 
area is updated to reflect the new hexadecimal and character values and if a    
disk address is relevent for the record it is also displayed.                   
--------------------------------------------------------------------------------
                                                                                
PFM - Changing Records                                                          
======================                                                          
                                                                                
The record action change allows the data in records of certain files to be      
displayed for amendment. The record specified by record ID must exist, i.e.,    
the disk address specified by A, must be valid and the key specified by K, must 
exist. The portion of the record to be displayed for amendment is specified by  
the record start and end values for basic mode amendment, or by the element ID  
and element action values for element mode amendment.                           
                                                                                
Basic change                                                                    
------------                                                                    
                                                                                
The basic change to a record is made by changing hexadecimal and/or character   
values (but not on the same display line at the same input) in the basic linear 
display of a record when the header message 'ENTER RECORD DATA CHANGES' is      
displayed. The basic mode can be used to change the length of a V/L record by   
specifying a new record length in the record action field.                      
                                                                                
A V/L record can be extended by a maximum of 280 bytes by specifying the new    
increased end byte value and the display start byte value. The record expansion 
area is preset to blanks with a hex zero in the last byte, and can then be      
filled in to the new value.                                                     
                                                                                
The updated data is checked for valid hexadecimal and that changes have not     
been made to prohibited fields (eg. I/S key fields). The record is then updated 
and the display area is reset to reflect the new hex and chr values.            
                                                                                
Element change                                                                  
--------------                                                                  
                                                                                
A single element can be added or displayed for CHANGE by identifying the        
element by input in the element ID field. The record action must be CHANGE.     
The element action can be CHANGE or ADD. If the element action is ADD then the  
element ID field identifies the location in the record where the element is to  
be added.                                                                       
                                                                                
An element can be changed by specifying its ID and an element action 'CHANGE'.  
The element will be displayed from element start thru element end byte input    
values (or the whole element ID displayed if no input values are specified),    
and the header message 'ENTER ELEMENT DATA' is displayed. The element data can  
be changed by input in the hexadecimal and/or character areas, but not on the   
same line in one input. The element length byte must not be changed. If it is   
desired to change the length of an element, the new length must be specified in 
the element action field using the END= or LEN= keyword. If the element is to   
be increased in length the display of the element will reflect this by the      
insertion of the new length and the extension of the element data with spaces.  
                                                                                
An element can be deleted from a record with the element action CHANGE. When    
the element is displayed for amendment, the input of hex FF in the first byte   
of the element will cause PFM to delete the element.                            
                                                                                
An element can be added to a record by specifying an element action of 'ADD'    
and an end value to give the length. The display area will be pre-formatted     
to spaces with the first byte of the element set to hex FF and the second byte  
set to the defined length. The element data can then be input as in element     
CHANGE described above.                                                         
                                                                                
If an attempt to change or add an element in an inconsistent record is made,    
PFM will change element action to DISPLAY and issue an error message similar to 
the warnings described in element DISPLAY above. Changes to element data in bad 
records must be made in basic mode.                                             
                                                                                
Element copy                                                                    
------------                                                                    
                                                                                
A single element can be copied by identifying the location to which it should   
be copied in the element ID field. The record action must be CHANGE, and the    
element action must be COPY.                                                    
                                                                                
The element to copy must be identified by giving it's displacement after the    
COPY command.                                                                   
For example, the command COPY,31 will cause the first element after byte 31 to  
be copied to the position specified in the element id field.                    
The element chosen will be displayed in the same manner as for adds or changes  
changes above, and in common with both of these actions, it is possible to amend
the data contained in the element. (It is not possible to change the length of  
the element whilst it is displayed in this manner.)                             
--------------------------------------------------------------------------------
                                                                                
PFM Key Building Interface.                                                     
===========================                                                     
                                                                                
Entered by using the = command in the Record ID input field. This has been      
designed to build some of the most common keys for whichever system you are in. 
Upon entering the application for the first time, a ? entered at the command    
prompt will list the Key types which the interface can build.                   
Entering one of these will display a list of mnemonics which should allow a     
user with knowledge of the key structure to build a key with the minimum of     
effort.                                                                         
The Interface also supports the A@ convention. This will pull out the disk      
address which corresponds to the key requested, BUT ONLY IF THERE IS AN EXACT   
MATCH. The command syntax for this format is A@..... where ..... is a supported 
key.                                                                            
