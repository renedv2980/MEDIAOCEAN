         TITLE 'WRKF'                                                           
Module provides an interface between application and WRKF work files.           
                                                                                
Parameter 1  A(=C'COMMAND')                                                     
                                                                                
Parameter 2  WRKF file name (=C'WRKFI' generic or =C'WRKFn' specific)           
                                                                                
Parameter 3  Index entry    (see DMWRKFK)                                       
                                                                                
Parameter 4  A(I/O area)    (Record area - up to 4K)                            
                                                                                
Parameter 5  A(14k buffer)  (see DMWRKFB)                                       
                                                                                
The file header DMWRKFL                                                         
-----------------------                                                         
This contains all the details needed to open a new file or restore an old file  
from tape. If you are opening a new file then it is not necessary to include    
all the fields as defaults will be used.                                        
                                                                                
The minimum required is the KEY:-                                               
                                                                                
WLKEY    DS    0CL8                                                             
WLUSRID  DS    XL2                 SOURCE ID NUMBER                             
WLSYSPRG DS    CL3                 SYSTEM PROG                                  
WLSUBPRG DS    CL1                 SUB PROG                                     
WLDAY    DS    CL1                 DAY NUMBER (PWOS)                            
WLCLASS  DS    CL1                 FILE CLASS                                   
                                                                                
WKFILE Actions - File creation/reading/writing.                                 
-----------------------------------------------                                 
OPEN     Open a new file                                                        
ADD      Add a record to file                                                   
CLOSE    Close the file                                                         
INDEX    Read index records into parameter 3                                    
READ     Read file data record                                                  
SEQ      Read next index record/data                                            
WRITE    Write back last file data record read                                  
RANDOM   Read specific file data record                                         
                                                                                
WKFILE Actions - Status change commands.                                        
----------------------------------------                                        
ACTV     Set file status to ACTIVE                                              
HOLD     Set file status to HOLD                                                
SENT     Set file status to SENT                                                
SENRET   Set file status to SENT and recalc retain                              
KEEP     Set file status to KEEP                                                
UNKEEP   Turn off KEEP status                                                   
PURGE    Purge the file                                                         
RETAIN   Set new retain time from UKINFO                                        
                                                                                
WKFILE Actions - Special actions for multi online transactions.                 
---------------------------------------------------------------                 
GFILE    Find which WRKF file for this user                                     
BUFFER   Initialise a WRKF buffer and return WRKF file data                     
BUFSAV   Save info from buffer save area in callers 30 byte area                
BUFRES   Restore buffer save rae date from callers 30 byte area                 
                                                                                
Working out what WRKF file                                                      
--------------------------                                                      
The first two bytes of each worker file key must be the userid number.          
This is the only value that is used to decide which WRKF file (WRKF1            
thru WRKF8) where the file will be stored. Set the userid as the first          
two bytes of the INDEX entry (Key is first thing in INDEX) and issue            
GFILE command. The CL* WRKF file name is returned in UKUSRINF field.            
                                                                                
WHATWK   MVC   UKUSRID,USERID                                                   
         GOTO1 VDATAMGR,WKDMCB,=C'GFILE',WRKFIL,INDEX,REC,ATIA                  
         MVC   WRKFID,UKUSRINF                                                  
*                                                                               
WRKFIL   DC    CL8'WRKFILE'  Generic File name                                  
WRKFID   DS    CL8           Specific WRKF file name returned by GFILE          
INDEX    DS    XL24          Index Area covered by UKRRECD (DMWRKFK)            
REC      DS    4096C         4k area for records                                
ATIA     DS    A(TIA)        14k buffer for wrkf files (assume TIA)             
                                                                                
Wrkf will work out which file to use (on any call) itself if you                
specify a filenamne of WRKFILE and pass the userid in the index.                
                                                                                
Creating files with DMPRINT                                                     
---------------------------                                                     
         GOTO1 DATAMGR,DMCB,(X'00',=C'DMPRINT'),WRKFIL,0,REC,ATIA               
*                                                                               
With DMPRINT you can OPEN/CLOSE and write a file using only one command.        
                                                                                
To open a new file the record must contain *SOFSOF* and a full header record    
created. (See DMWRKFL for header)                                               
                                                                                
Write records with V/L record len header LLLL0000 as with IBM files.            
                                                                                
To close a file the record must contain *EOFEOF*                                
                                                                                
Writing files with OPEN/ADD/CLOSE                                               
---------------------------------                                               
To open build header details in a record at P4 (See DMWRKFL) then call with     
an OPEN command as below.                                                       
                                                                                
         GOTO1 DATAMGR,DMCB,(X'00',=C'OPEN'),WRKFIL,0,REC,ATIA                  
*                                                                               
Write records same as in DMPRINT with H'LENGTH',H'0000',data........ then call  
with the ADD command.                                                           
                                                                                
         GOTO1 DATAMGR,DMCB,(X'00',=C'ADD'),WRKFIL,0,REC,ATIA                   
*                                                                               
After last ADD close file with a CLOSE call.                                    
                                                                                
         GOTO1 DATAMGR,DMCB,(X'00',=C'CLOSE'),WRKFIL,0,REC,ATIA                 
                                                                                
Reading WRKF files                                                              
-------------------                                                             
To locate a particular WRKF file. The INDEX call will scan the WRKF             
file for a particular set of files. In the example below all files              
with the name SBUY---. Each index call will return the next file                
with a matching name. EOF X'90' is returned when no more files can              
be found.                                                                       
                                                                                
         XC    INDEX,INDEX                                                      
         LA    R2,INDEX                                                         
         USING UKRECD,R2                                                        
         MVC   UKUSRID,USERID                                                   
         MVC   UKSYSPRG(4),=C'SBUY'                                             
RDWKNXT  GOTO1 DATAMGR,DMCB,(X'00',=C'INDEX'),WRKFIL,INDEX,REC,ATIA             
         CLI   8(R1),0                                                          
         BE    RDWK001                                                          
         CLI   8(R1),X'90'         TEST FOR EOF                                 
         BE    RDWKX                                                            
         DC    H'0'                FATAL ERROR                                  
                                                                                
If the REF# is known then the index need not be scanned and the file            
can be found with one physical i/o. To take advantage of this use the           
same index call as above but put the file number in UKFILENO and set            
UKFLAG to X'80'.                                                                
                                                                                
Setting zeros in the key will return all files for that physical WRKF           
file but in this case the specific file WRKF1/WRKF2 ect must be passed          
as no user information is available.                                            
                                                                                
Reading data records sequentially                                               
---------------------------------                                               
The READ command will fetch individual records from the file.                   
In the example below each record will be returned at REC or X'90'               
if end of file.                                                                 
                                                                                
RDWK1    GOTO1 DATAMGR,DMCB,(X'00',=C'READ'),WRKFIL,INDEX,REC,ATIA              
         CLI   8(R1),0                                                          
         BE    RDWK2                                                            
         CLI   8(R1),X'90'         TEST FOR EOF                                 
         BE    RDWKNXT             GET NEXT INDEX                               
         DC    H'0'                                                             
                                                                                
Reading data records randomly                                                   
-----------------------------                                                   
The RANDOM command will locate a particular record in the file.                 
In the example below record number 212 will be returned or X'90'                
if not found.                                                                   
                                                                                
NB Record number 1 is the first record on the file. Reading random for          
record 0 will return the header record as defined in DMWRKFD.                   
                                                                                
RDWK1    L     R1,REC              READ RANDOM FOR REC 212                      
         XC    0(12,R1),0(R1)                                                   
         MVC   0(4,R1),=F'212'     Record number in first 4 bytes               
         MVC   4(4,R1),=C'REC '                                                 
         GOTO1 DATAMGR,DMCB,(X'00',=C'RANDOM'),WRKFIL,INDEX,REC,ATIA            
         CLI   8(R1),0                                                          
         BE    RDWK2               Found OK                                     
         CLI   8(R1),X'90'                                                      
         BE    NOTFOUND                                                         
         DC    H'0'                                                             
                                                                                
This can now be followed by sequential reads if required                        
                                                                                
Changing File Attributes                                                        
------------------------                                                        
To change the status of a file use the following call.                          
                                                                                
The action can be ACTV SENT HOLD KEEP SENRET RETAIN UNKEEP                      
                                                                                
RDWK1    GOTO1 DATAMGR,DMCB,(X'00',=C'SENT'),WRKFIL,INDEX,REC,ATIA              
         CLI   8(R1),0                                                          
         BE    *+6                                                              
         DC    H'0'                                                             
                                                                                
Saving and restoring of WRKF Buffers                                            
------------------------------------                                            
As mentioned earlier when processing a file,either adding or reading,           
the same 14k buffer must be used, as the end of the buffer contains a           
save area in which are stored details of the last file record read or           
added into the buffer. The Pan book DMWRKFS gives the SKBUFFD DSECT that        
defines this save area. This is shown below. If a WRKF file is                  
read over several transactions the contents of the WRKF buffer must be          
saved at the end of a trasaction,and restored at the start of the next          
transaction,so that processing can continue on the file.                        
                                                                                
There are three special WK actions that can be used to initialise, save,        
and restore a WK buffer. There is also a special action that returns the        
WK id of the file where files for a given userid reside.                        
                                                                                
If during the first transaction a file was located (via an INDEX call)          
and the next transaction needs to refer to the file (say to READ it).           
The user provides a 30 byte save area in TEMPSTR (TWASAVI in the example        
below) and codes a BUSAVE command to save the relevent fields and then          
in the subsequent transaction uses a BURSTR command to restore.                 
                                                                                
*End of transaction n - save basic index info using BUSAVE                      
         ...                                                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'BUSAVE'),=C'WRKFI',INDEX,REC,ATIA         
         MVC   TWASAVI(30),REC                                                  
                                                                                
*Start of transaction n+1- restore basic index info usin BURSTR                 
         ...                                                                    
         MVC   REC(30),TWASAVI                                                  
         GOTO1 DATAMRR,DMCB,(X'00',=C'BURSTR'),=C'WRKFI',INDEX,REC,ATIA         
                                                                                
Saving and restoring of WK Buffers for full Optimisation                        
--------------------------------------------------------                        
For true optimisation where a transaction can terminate in the middle of        
a WRKF file read loop, and restart with the next record, more work has          
to be done as the WRKF file buffer has to be fully restored, including          
the WRKF file record. In this case we need a 100 byte TWA save area to          
save the whole of the WRKF file buffer area. Sample code showning what          
to do to at end of transaction n and at the start of transaction n+1 is         
shown below.                                                                    
                                                                                
*Start of first transaction - Initialise buffer and save disp to buffer         
*save area. Also save the WRKF name where the file will be stored.              
*Locate the required file with an INDEX call.                                   
         ...                                                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'BUFFER'),=C'WRKFI',INDEX,REC,ATIA         
         L     RE,ATIA                                                          
         MVC   SAVEBDSP(4),8(RE)   Save disp to start of buffer save            
*                                                                               
         LA    RE,INDEX                                                         
         XC    INDEX,INDEX         set userid num in index                      
         MVC   UKSRCID-UKRECD(2,RE),USERID                                      
         GOTO1 DATAMGR,DMCB,(X'00',=C'GFILE'),=C'WRKFI',INDEX,REC,ATIA          
         LA    RE,INDEX                                                         
         MVC   SAVEWKID(8),UKUSRINF-UKRECD(RE) Save WRKF id for userid          
*                                                                               
         LA    RE,INDEX            Set file id and File num in index            
         MVC   UKKEY-UKRECD(8,RE),FILEID                                        
         MVC   UKFILENO-UKRECD(2,RE),FILENUM                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'INDEX'),=C'WRKFI',INDEX,REC,ATIA          
         ....                                                                   
*During transaction file located by INDEX can be read with READ command         
         ...                                                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'READ'),=C'WRKFI',INDEX,REC,ATIA           
         ...                                                                    
*End of transaction n. Save Index data and Buffer save area.                    
         ...                                                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'BUSAVE'),=C'WRKFI',INDEX,REC,ATIA         
         MVC   TWASAVA(30),REC     Save index data                              
         L     RE,ATIA                                                          
         A     RE,SAVEBDSP                                                      
         MVC   TWASAVB(100),0(RE)  Save buffer data                             
                                                                                
*Start of transaction n+1. Restore index data and buffer save area.             
*Read into buffer the block that was last there in transaction n.               
*We must use DMREAD and the WRKF file id saved from GFILE command.              
         ...                                                                    
         MVC   REC(30),TWASAVA                                                  
         GOTO1 DATAMGR,DMCB,(X'00',=C'BURSTR'),=C'WRKFI',INDEX,REC,ATIA         
         L     RE,ATIA                                                          
         A     RE,SAVEBDSP                                                      
         MVC   8(92,RE),TWASAVB+8  Restore save area less first 8 bytes         
         MVC   FULL(4),SKADDR-SKBUFFD(RE)                                       
         GOTO1 DATAMGR,DMCB,(X'00',=C'DMREAD'),SAVEWKID,FULL,ATIA               
         ....                                                                   
*During transaction n+1 can continue with READ commands as before.              
         ...                                                                    
         GOTO1 DATAMGR,DMCB,(X'00',=C'READ'),=C'WRKFI',INDEX,REC,ATIA           
         ...                                                                    
                                                                                
DMWRKFK Pan Book - DSECT UKRECD for user key/index in DMCBW3                    
------------------------------------------------------------                    
UKRECD   DSECT                                                          00001   
*                                                                       00002   
UKINDEX  DS    0CL24               WRKF INDEX ENTRY                     00003   
*                                                                       00004   
UKKEY    DS    0CL8                                                     00005   
UKUSRID  DS    XL2                 USER ID NUMBER                       00006   
UKSYSPRG DS    CL3                 SYSTEM PROGRAM                       00007   
UKSUBPRG DS    CL1                 SUB PROGRAM                          00008   
UKDAY    DS    CL1                 DAY NUMBER                           00009   
UKCLASS  DS    CL1                 CLASS                                00010   
*                                                                       00011   
UKFILENO DS    XL2                 FILE REF NUMBER                      00012   
*                                                                       00013   
UKTYPE   DS    XL1                 TYPE                                 00014   
UKATTB   DS    XL1                 ATTRIBUTES                           00015   
UKSTAT   DS    XL1                 FILE STATUS                          00016   
UKSEQ    DS    XL1                 CI SEQ NUM                           00017   
UKAGES   DS    XL1                 NUMBER OF CONTROL INTERVALS          00018   
UKAGELD  DS    XL2                 LIVE DATE                            00019   
UKAGEDD  DS    XL2                 DEAD DATE                            00020   
UKAGERD  DS    XL2                 RETN DATE                            00021   
         DS    XL1                                                      00022   
UKAGELT  DS    XL2                 LIVE TIME (SECS*3)/4                 00023   
         DS    XL2                                                      00024   
*                                                                       00025   
UKINFO   DS    XL2                 INFO PASSING FIELD                   00026   
UKFILENX DS    XL2                 UPPER LIMIT                          00027   
UKCIADDR DS    XL2                 TTTT OF FIRST CI                     00028   
UKFLAG   DS    XL1                 FLAG VALUES                          00029   
UKFLDAT  EQU   X'80'               PASS BACK DATA                       00030   
UKFLDSW  EQU   X'40'               SWITCH FROM INDEX TO DATA            00031   
UKFLUSR  EQU   X'20'               USER INFO SUPPLIED IN UKUSRINF       00032   
UKFLHRS  EQU   X'10'               HOURS PASSED IN UKINFO               00033   
UKFLTMP  EQU   X'08'               PASS BACK TEMPORARY ENTRIES          00034   
         DS    XL1                 N/D                                  00035   
*                                                                       00036   
UKUSRINF DS    XL8                 USER INFO                            00037   
                                                                                
DMWRKFS Pan Book - DSECT covering the end-of-buffer save area                   
-------------------------------------------------------------                   
SKBUFFD  DSECT                                                          00001   
*                                                                       00002   
SKBCTRL  DS    0CL16 ============= CONTROL OF BUFFER                    00003   
SKLABEL  DS    CL8                 BUFF LABEL SET TO *WKSAVE*           00004   
SKINTNO  DS    XL1                 FILE INTERNAL ID NUM                 00005   
SKACTN   DS    XL1                 THIS ACTION VALUE                    00006   
SKLACTN  DS    XL1                 LAST ACTION VALUE                    00007   
SKSCTRL  DS    XL1                 SEQ FUNCTION CONTROL FLAGS           00008   
SKACTRL  DS    XL1                 ADD FUNCTION CONTROL FLAGS           00009   
SKEXTNO  DS    XL1                 FILE EXTERNAL ID NUM                 00010   
         DS    XL2                                                      00011   
SKFCTRL  DS    0CL32 ============= CONTROL OF DATA                      00012   
SKADDR   DS    F                   DISK ADDR OF CURRENT FILE BLOCK      00013   
SKFSTCI  DS    F                   DISK ADDR OF FIRST FILE BLOCK        00014   
SKSTRCI  DS    F                   DISK ADDR OF START OF THIS CI        00015   
SKENDCI  DS    F                   DISK ADDR OF END OF THIS CI          00016   
SKNXTCI  DS    F                   DISK ADDR OF START OF NEXT CI        00017   
SKDISP   DS    H                   DISP OF NEXT RECORD IN BLOCK         00018   
SKLEN    DS    H                   LENGTH OF THIS RECORD                00019   
SKRECS   DS    F                   COUNT OF RECORDS                     00020   
SKBYTES  DS    F                   TOTAL BYTES                          00021   
SKBYTEMX DS    H                   MAX BYTES IN ANY RECORD              00022   
SKXCTRL  DS    0CL36 ============= CONTROL OF INDEX                     00023   
SKXADDR  DS    F                   CURRENT INDEX DISK ADDR              00024   
SKPAGE   DS    XL2                 CURRENT INDEX PAGE                   00025   
SKENTRY  DS    XL2                 CURRENT INDEX ENTRY                  00026   
*                                                                       00027   
SKINDEX  DS    0CL24               USER INDEX ENTRY FOR WKFILE          00028   
*                                                                       00029   
SKKEY    DS    0CL8                                                     00030   
SKUSRID  DS    XL2                 USER ID NUMBER                       00031   
SKSYSPRG DS    CL3                 SYSTEM PROGRAM                       00032   
SKSUBPRG DS    CL1                 SUB PROG                             00033   
SKDAY    DS    CL1                 DAY NUMBER                           00034   
SKCLASS  DS    CL1                 CLASS                                00035   
*                                                                       00036   
SKFILENO DS    XL2                 FILE REPORT NUMBER                   00037   
*                                                                       00038   
SKTYPE   DS    XL1                 TYPE                                 00039   
SKATTB   DS    XL1                 ATTRIBUTES                           00040   
SKSTAT   DS    XL1                 FILE STATUS                          00041   
SKSEQ    DS    XL1                 CI SEQ NUM                           00042   
SKAGES   DS    XL1                 NUMBER OF CONTROL INTERVALS          00043   
SKAGELD  DS    XL2                 LIVE DATE                            00044   
SKAGEDD  DS    XL2                 DEAD DATE                            00045   
SKAGERD  DS    XL2                                                      00046   
         DS    XL1                                                      00047   
SKAGELT  DS    XL2                 LIVE TIME                            00048   
*                                                                       00049   
SKCIADDR DS    XL2                 TTTT OF FIRST CI                     00050   
         DS    XL2                                                      00051   
*                                                                       00052   
         DS    XL12                SPARE                                00053   
SKBUFFL  EQU   *-SKBUFFD           LEN OF BUFFER SAVE AREA (100 BYTES)  00054   
SKEND    DS    0C                                                         00055 
