#include <standard.h>                                                           
#include <stdio.h>                                                              
#include <ctype.h>                                                              
#include <dds.h>                                                                
#include <help.h>                                                               
#include <printd.h>                                                             
                                                                                
#define movchr(src,des) memcpy(des,src,strlen(src))                             
                                                                                
FILE *infile;                                                                   
                                                                                
struct dmblock *bptr;                                                           
struct vald *val;                                                               
struct helpkeyd *helpkey;                                                       
struct stringsd *strings;                                                       
struct jcld *jcl;                                                               
struct printd *print;                                                           
struct replined *repline;                                                       
struct syslined *sysline;                                                       
struct proglined *progline;                                                     
struct restlined *restline;                                                     
struct writelined *writeline;                                                   
                                                                                
char dataline(:100:);                                                           
char keydata(:100:);                                                            
char heading(:100:);                                                            
char firstheading(:100:);                                                       
char fieldname(:100:);                                                          
char program(:100:);                                                            
                                                                                
extern char cprint(::);                                                         
extern char helphead(::);                                                       
extern char ovspace(::);                                                        
                                                                                
int pagesprocessed;                                                             
int datatype;                                                                   
                                                                                
main()                                                                          
{                                                                               
    FILE *fopen();                                                              
    struct dmblock *dmopen();                                                   
                                                                                
    infile = fopen("INFILE","R");                                               
                                                                                
    bptr = dmopen("CON","GEN",'U');                                             
                                                                                
    val = malloc(sizeof(struct vald));                                          
    helpkey = malloc(sizeof(struct helpkeyd));                                  
    strings = malloc(sizeof(struct stringsd));                                  
    jcl = malloc(sizeof(struct jcld));                                          
    print = (struct printd *)cprint;                                            
    repline = (struct replined *)print->p;                                      
    sysline = (struct syslined *)print->mid1;                                   
    progline = (struct proglined *)print->mid2;                                 
    restline = (struct restlined *)print->mid3;                                 
    writeline = (struct writelined *)print->mid4;                               
    helpkey->keysys = keysysq;                                                  
    helpkey->type = typeq;                                                      
                                                                                
    filedump("X'0002'20X'00'X'0B16FF'","fred");                                 
    exit();                                                                     
                                                                                
    startreport();                                                              
                                                                                
    dofile();                                                                   
    helpdump();                                                                 
}                                                                               
                                                                                
helpdump()                                                                      
{                                                                               
    helpkey->system = 0xb;                                                      
    helpkey->program = 0x16;                                                    
    memset(bptr->key,0,42);                                                     
    memcpy(bptr->key,helpkey,pagedisp-2);                                       
    readhi(bptr);                                                               
    while(1){                                                                   
        getrec(bptr);                                                           
        breakelems(bptr,0);                                                     
        readseq(bptr);                                                          
        if(memcmp(bptr->key,bptr->keysave,pagedisp-2))                          
            exit();                                                             
    }                                                                           
}                                                                               
                                                                                
startreport()                                                                   
{                                                                               
    movchr("HELP SCREEN UPDATE REPORT",print->title);                           
                                                                                
    memcpy(print->mid1,helphead,7*132);                                         
    print->sub1(:0:) = 0;                                                       
                                                                                
    if(badjcl()){                                                               
        cprinter();                                                             
        movchr("* UNABLE TO DO UPDATE DUE TO JCL ERROR *",print->p);            
        cprinter();                                                             
        movchr(val->message,print->p+5);                                        
        cprinter();                                                             
        exit();                                                                 
    }                                                                           
}                                                                               
                                                                                
#define KEYFOUND   1                                                            
#define TEXTFOUND  2                                                            
                                                                                
dofile()                                                                        
{                                                                               
    for(readdata() ; datatype != KEYFOUND ; readdata())                         
        if(datatype == EOF)                                                     
            return;                                                             
                                                                                
    while(datatype != EOF)                                                      
        if(notbadkey()){                                                        
            strcpy(firstheading,heading);                                       
            processkey();                                                       
            strcpy(heading,firstheading);                                       
            report();                                                           
        }                                                                       
        else{                                                                   
            report();                                                           
            scanforkey();                                                       
        }                                                                       
}                                                                               
                                                                                
processkey()                                                                    
{                                                                               
    int pagesremain,textremains;                                                
                                                                                
    pagesprocessed = 0;                                                         
    memset(bptr->key,0,bptr->keylen);                                           
    memcpy(bptr->key,helpkey,pagedisp);                                         
    readhi(bptr);                                                               
    pagesremain = !memcmp(bptr->key,bptr->keysave,pagedisp);                    
    readdata();                                                                 
    textremains = datatype == TEXTFOUND;                                        
                                                                                
    while(textremains){                                                         
        pagesprocessed++;                                                       
        if(pagesremain)                                                         
            getoldpage();                                                       
        else                                                                    
            makenewpage();                                                      
        processpage();                                                          
        if(jcl->write == 'Y')                                                   
            addrec(bptr);                                                       
        if(pagesremain){                                                        
            readseq(bptr);                                                      
            pagesremain = !memcmp(bptr->key,bptr->keysave,pagedisp);            
        }                                                                       
        textremains = datatype == TEXTFOUND;                                    
    }                                                                           
                                                                                
    while(pagesremain){                                                         
        if(jcl->write == 'Y')                                                   
            delrec(bptr);                                                       
        readseq(bptr);                                                          
        pagesremain = !memcmp(bptr->key,bptr->keysave,pagedisp);                
        }                                                                       
}                                                                               
                                                                                
getoldpage()                                                                    
{                                                                               
    struct stateld *statel;                                                     
    struct activeld *activel;                                                   
    char *firstel();                                                            
                                                                                
    getrec(bptr);                                                               
    remelem(bptr,textelq);                                                      
    remelem(bptr,headelq);                                                      
    statel = (struct stateld *)firstel(bptr,statelq);                           
    statel->flags &= 0x7f;                                                      
    activel = (struct activeld *)firstel(bptr,activelq);                        
    binarydate(activel->datechanged);                                           
}                                                                               
                                                                                
makenewpage()                                                                   
{                                                                               
    struct stateld *statel;                                                     
    struct activeld *activel;                                                   
                                                                                
    memset(bptr->ioarea,0,bptr->firsteldisp+1);                                 
    helpkey->page = pagesprocessed;                                             
    memcpy(bptr->ioarea,helpkey,pagedisp+1);                                    
    bptr->ioarea(:bptr->keylen+1:)= bptr->firsteldisp+1;                        
                                                                                
    statel = calloc(sizeof(struct stateld),1);                                  
    statel->elcode = statelq;                                                   
    statel->ellen = statlenq;                                                   
    addelem(bptr,statel);                                                       
    free(statel);                                                               
                                                                                
    activel = calloc(sizeof(struct activeld),1);                                
    activel->elcode = activelq;                                                 
    activel->ellen = activlenq;                                                 
    binarydate(activel->dateadded);                                             
    binarydate(activel->datechanged);                                           
    addelem(bptr,activel);                                                      
    free(activel);                                                              
}                                                                               
                                                                                
#define LASTLINE   16                                                           
                                                                                
processpage()                                                                   
{                                                                               
    struct headeld *headel;                                                     
    struct texteld *textel;                                                     
    char *text,pageheading(:100:);                                              
    int linenum,textlen,highintensity;                                          
                                                                                
    headel = calloc(sizeof(struct headeld),1);                                  
    headel->elcode = headelq;                                                   
    headel->ellen = headlenq;                                                   
    headel->headlen = strlen(heading);                                          
    movchr(heading,headel->heading);                                            
    addelem(bptr,headel);                                                       
    free(headel);                                                               
                                                                                
    textel = calloc(sizeof(struct texteld),1);                                  
    textel->elcode = textelq;                                                   
    chexin("FFFF",textel->valbits,4);                                           
                                                                                
    for(linenum = 1 ; linenum <= LASTLINE ; linenum++)                          
        if(datatype != TEXTFOUND)                                               
            break;                                                              
        else if(memcmp(dataline,"<PA>",4) == 0 ºº                               
                memcmp(dataline,"<pa>",4) == 0  ){                              
            strcpy(pageheading,dataline+4);                                     
            if(*pageheading != NULL)                                            
                strcpy(heading,pageheading);                                    
            heading(:26:) = NULL;                                               
            readdata();                                                         
            break;                                                              
        }                                                                       
        else{                                                                   
            highintensity = dataline(:0:) == 'º';                               
            if(highintensity)                                                   
                text = dataline + 1;                                            
            else                                                                
                text = dataline;                                                
            text(:75:) = NULL;                                                  
            textlen = strlen(text);                                             
            textel->ellen = textlen + overlen;                                  
            textel->seqnum = linenum;                                           
            if(highintensity)                                                   
                textel->opbytes(:0:) º= 0x80;                                   
            movchr(text,textel->text);                                          
            addelem(bptr,textel);                                               
            readdata();                                                         
        }                                                                       
                                                                                
    free(textel);                                                               
}                                                                               
                                                                                
binarydate(s)                                                                   
char *s;                                                                        
{                                                                               
    cdatcon(0,5,s,3);                                                           
}                                                                               
                                                                                
report()                                                                        
{                                                                               
    char temp(:100:);                                                           
    int i;                                                                      
                                                                                
    if(val->parsebad){                                                          
        movchr(dataline,print->p);                                              
        cprinter();                                                             
        movchr(val->message,print->p+5);                                        
        cprinter();                                                             
        cprinter();                                                             
        return;                                                                 
    }                                                                           
                                                                                
    if(!val->jclmatching)                                                       
        return;                                                                 
                                                                                
    if(strcmp(strings->program,program)){                                       
        strcpy(program,strings->program);                                       
        movchr("          ",progline->program);                                 
        movchr(program,progline->program);                                      
        chexin("999C",print->line,4);                                           
        cprinter();                                                             
    }                                                                           
                                                                                
    sprintf(temp,"%3s",strings->screen);                                        
    movchr(temp,repline->screen);                                               
    sprintf(temp,"%3s",strings->field);                                         
    movchr(temp,repline->field);                                                
                                                                                
    if(strlen(heading) > 16)                                                    
        memcpy(repline->heading,heading,16);                                    
    else                                                                        
        movchr(heading,repline->heading);                                       
                                                                                
    if(val->specificfield){                                                     
        if(!val->screenfound)                                                   
            movchr("* SCREEN DOES NOT EXIST *",repline->message);               
        else if(!val->fieldfound)                                               
            movchr("* FIELD DOES NOT EXIST *",repline->message);                
                                                                                
        if(!val->screenfound ºº !val->fieldfound)                               
            movchr("* NOT FOUND *",repline->fieldname);                         
        else if(strlen(fieldname) > 19)                                         
            memcpy(repline->fieldname,fieldname,19);                            
        else                                                                    
            movchr(fieldname,repline->fieldname);                               
                                                                                
        if(val->restricted){                                                    
            movchr("REJECTED",repline->result);                                 
            cprinter();                                                         
            cprinter();                                                         
            return;                                                             
        }                                                                       
    }                                                                           
                                                                                
    if(val->recordfound){                                                       
        sprintf(temp,"%3d",val->onlinepages(:0:));                              
        movchr(temp,repline->oldpages);                                         
        if(val->protected){                                                     
            movchr("* THIS FIELD PROTECTED *",repline->message);                
            movchr("REJECTED",repline->result);                                 
            cprinter();                                                         
            for(i = 1 ; i <= val->onlinepages(:0:) ; i++)                       
                if(val->onlinepages(:i:)){                                      
                    sprintf(temp,"PAGE %d ADDED ON-LINE",i);                    
                    movchr(temp,repline->message);                              
                    cprinter();                                                 
                }                                                               
            cprinter();                                                         
            return;                                                             
        }                                                                       
        else                                                                    
            movchr("CHANGED",repline->result);                                  
    }                                                                           
    else                                                                        
        movchr("ADDED",repline->result);                                        
                                                                                
    sprintf(temp,"%3d",pagesprocessed);                                         
    movchr(temp,repline->newpages);                                             
    cprinter();                                                                 
    cprinter();                                                                 
}                                                                               
                                                                                
scanforkey()                                                                    
{                                                                               
    for(readdata() ; datatype == TEXTFOUND ; readdata())                        
        ;                                                                       
}                                                                               
                                                                                
readdata()                                                                      
{                                                                               
    char *strip(),*fgets();                                                     
    if(strip(fgets(dataline,100,infile)) == NULL)                               
        datatype = EOF;                                                         
    else if(memcmp(dataline,"<KEY>",5) == 0    ºº                               
            memcmp(dataline,"<key>",5) == 0     )                               
        datatype = KEYFOUND;                                                    
    else                                                                        
        datatype = TEXTFOUND;                                                   
}                                                                               
                                                                                
char *strip(s)                                                                  
char *s;                                                                        
{                                                                               
    int tag,i;                                                                  
    if(s == NULL)                                                               
        return(NULL);                                                           
    for( tag = -1,i = 0 ; (s(:i:) != '\n') && (s(:i:) != NULL) ; i++)           
        if(s(:i:) != ' ')                                                       
            tag = i;                                                            
    s(:tag+1:) = NULL;                                                          
    return(s);                                                                  
}                                                                               
                                                                                
#include <casm.h>                                                               
#include <cdump.h>                                                              
#include <filedump.h>                                                           
#include <validate.h>                                                           
#include <fatab.h>                                                              
#include <dmgr.h>                                                               
#include <dmopen.h>                                                             
#include <addelem.h>                                                            
