         TITLE 'DYNALLOC'                                                       
 Whenever JES3 starts a job, it  allocates a tape drive for every DD            
statement in the first step that specifies a tape unit.  Similarly,             
whenever there is a DD statement for a 'new' disk file in your job (and         
this includes all non-VIO work files), JES3 will allocate the primary           
space requirement for your file at job initiation, and the space remains        
allocated until your job ends -- even if you never open the file. In            
programs that use MERGER, for example, which supports 36 temporary work         
files, 36 allocations must take place for every execution, regardless of        
how many work files are actually used.                                          
                                                                                
Dynamic allocation solves this problem by deferring the DD statement            
processing till OPEN time. What you must do is provide a call to                
DYNALLOC just before you open a data set. If there is a DD statement            
present in the JCL, it will override. But if there is not, then dynamic         
allocation will take place.                                                     
                                                                                
To dynamically allocate output tapes, the parameter list is                     
------------------------------------                                            
  p1     x'00'           al3(cl8'ddname  ') <--- all other tapes                
         x'02'           al3(cl8'ddname  ') <--- for VTS only                   
         x'08'           al3(cl8'ddname  ') <--- for spool tapes only           
         x'04'           non-compaction mode-used with one of above(opt)        
  p2     xl1(n)          al3(cl20'data-set-name   ')                            
                                                                                
This generates the following                                                    
                                                                                
//ddname  DD  UNIT=TAPE,DISP=(NEW,CATLG,DELETE),                                
//            DSN=dsname(+n),DCB=PATTERN.sysTAPE.DCB,FREE=CLOSE,                
//            DCB=TRTCH=NOCOMP  (optional - only if x'04' bit set in p1)        
                                                                                
Note that 'sys' is taken from the first three characters of the dsname          
and that for spool tapes the DCB parameter is PATTERN.sysSPOOL.DCB.             
                                                                                
Also note that if 'n' is left as x'00', a default relative generation of        
'+1' is generated. If 'n'=x'ff' tape is assumed to be input (see below).        
                                                                                
To dynamically allocate input tapes, the parameter list is                      
-----------------------------------                                             
  p1     x'00'           al3(cl8'ddname  ')                                     
  p2     x'ff'           al3(cl20'data-set-name   ',cl6'volser')                
                                                                                
This generates the following                                                    
                                                                                
//ddname  DD  UNIT=TAPE,DISP=OLD,DSN=dsname,                                    
//            VOL=SER=volser                                                    
                                                                                
Important safety tip - if no tape drive is available at dynamic                 
allocation time the program will attempt all possible prompts to the            
operator to get a tape drive (any tape drive) assigned.                         
                                                                                
To dynamically allocate disk work files (temporary data sets only),             
---------------------------------------                                         
  p1    x'80' = sysda     al3(cl8'ddname  ')                                    
        x'40' = vio                                                             
        x'20' = 3350                                                            
        x'10' = 3380                                                            
                                                                                
  p2    x'80' = tracks    a(xl3'primary alloc  '                                
        x'40' = cyls          xl3'secondary alloc')                             
                                                                                
                           e.g. xl6'000003000003' gives p=3/s=3                 
                                                                                
This generates something that looks like this -                                 
                                                                                
//ddname  DD  UNIT=unit,SPACE=(TRACKS,(3,3)),DCB=(BUFNO=2)                      
                                                                                
To dynamically allocate a disk file for reading only ( i.e. DISP=SHR),          
-----------------------------------                                             
  p1    x'ff'             al3(cl8'ddname  ')                                    
                                                                                
  p2                      a(cl30'data-set-name')                                
                                                                                
This generates the following                                                    
                                                                                
//ddname  DD  DSN='data-set-name',DISP=SHR                                      
                                                                                
To dynamically allocate an output file to SYSOUT for a special dest             
-------------------------------------------------------------------             
  p1     x'fe'           al3(cl8'ddname  ')                                     
  p2     xl1(0)          al3(cl1'c',cl8'nodeid  'cl8'userid  ')                 
                                                                                
The program must define a simple output DCB with just DSORG=PS,MACRF=PM         
defined. The generated statement is                                             
                                                                                
//ddname  DD  SYSOUT=c,DCB=(RECFM=F,LRECL=80),                                  
//            DEST=(nodeid,userid)                                              
                                                                                
To dynamically allocate an output file to SYSOUT including form code            
--------------------------------------------------------------------            
  p1     x'fd'           al3(cl8'ddname  ')                                     
  p2     xl1(0)          al3(cl1'c',cl8'nodeid  'cl8'userid  'cl4'fcde')        
                                                                                
The program must define a simple output DCB with just DSORG=PS,MACRF=PM         
defined. The generated statement is                                             
                                                                                
//ddname  DD  SYSOUT=c,DCB=(RECFM=F,LRECL=80),                                  
//            DEST=(nodeid,userid),FORM=fcde,FREE=CLOSE                         
                                                                                
                                                                                
Do NOT link DYNALLOC in your program. It is an entry point in DDSIO             
called =V(DYNALLOC).                                                            
