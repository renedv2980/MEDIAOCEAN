*          DATA SET DCNODIO    AT LEVEL 042 AS OF 06/24/87                      
<T>NODIO                                                                        
 PURPOSE                                                                        
 -------                                                                        
                                                                                
  The NODIO file structure was developed to address two main needs-             
                                                                                
    1. The need for a flexible, multi-level hierarchical structure which        
       can handle sizable codes at each level.                                  
                                                                                
       For instance, with a standard key structure, an 8 character code         
       at each of 4 levels, would take up 32 bytes of key. Such key             
       size limits are often a severe constraint in system design.              
                                                                                
    2. The need to be able to maintain sets of records in a user-               
       specified sequence different from the standard collating                 
       sequence of their codes.                                                 
                                                                                
  NODIO provides a solution to these two problems and offers a number of        
other powerful features as well. As with everything else in this life,          
however, there is a price to be paid. In this case the cost is a certain        
amount of IO overhead, particularly in file maintenance and user-               
sequential processing, and in the inability to access the records in            
any other way than as defined by the hierarchy.                                 
                                                                                
 WHAT IS A NODIO FILE?                                                          
 ---------------------                                                          
                                                                                
  A NODIO 'file' is a set of records on a standard DDS indexed-                 
sequential/direct access pair of files. NODIO records and normal                
records can share the same file, and any number of completely                   
independent NODIO 'files' can share the same physical file.                     
                                                                                
  A NODIO file hierarchy is probably best thought of as a family tree-          
except that there are no 'marriages' and each 'child' has only one              
'parent'. Each record that is a parent establishes a 'node' which is            
the connecting link between the parent and its children.  Records that          
are not parents do not establish nodes.  The only restriction on codes,         
other than length, is that no two records with the same immediate               
parent (siblings) can have the same code.                                       
         EJECT                                                                  
                                                                                
         <   > AN EXAMPLE OF A NODIO FAMILY TREE                                
                                                                                
                                                                                
     LEVEL                                                                      
 (GENERATION)                                                                   
 ------------                                                                   
                                                                                
                                                                                
     0                                    MASTER RECORD                         
                                                |                               
     1                       ___________________|________________               
                             |A                                 |B              
                             |                                  |               
     2          _____________|______________               _____|_____          
                |C     |D          |E      |F              |G        |H         
                |      |           |                                            
     3          |   ___|___      __|___                                         
                |   |  |  |      |    |                                         
                I   J  K  L      M    |N                                        
     4                             ___|___                                      
                                   |  |  |                                      
                                   |  |  |                                      
     5                             O  P  Q                                      
                                                                                
                                                                                
                                                                                
    - The master record at level zero establishes the node for all              
      level one records.                                                        
                                                                                
    - A,B,C,D,E, and N are parents and establish nodes.                         
                                                                                
    - F,G,H,I,J,K,L,M,O,P, and Q have no children and do not establish          
      nodes.                                                                    
                                                                                
    - C,D,E, and F are siblings and thus share the same node which is           
      established at A.                                                         
                                                                                
    - G and H share the node established at B.                                  
                                                                                
    - I is the only record having the node established at C.                    
                                                                                
    - J,K, and L share the node established at D.                               
                                                                                
    - M and N share the node established at E.                                  
                                                                                
    - O,P, and Q share the node established at N.                               
         EJECT                                                                  
                                                                                
                                                                                
                                                                                
  All records in a given NODIO set have the same key structure. The             
length and position of all key fields are determined when the NODIO             
file is set up.                                                                 
                                                                                
    Key Field          Description                                              
    ---------          -----------                                              
                                                                                
    Identification     All records in the set must have the same data           
                       in the identification field. A typical example           
                       might be something like agency code and record           
                       type. It should contain enough spare to position         
                       the node and code near the end of the key.               
                                                                                
    Node               Node to which this record belongs- established           
                       by its parent. Nodes are up to 4 bytes long.             
                                                                                
    Code               Code of the record. Maximum length is 12.                
                                                                                
    Sub-key            The space in the key (if any) after the code             
                       is the 'sub-key'. It must contain nulls for the          
                       base NODIO record. Associated with the base              
                       record may be any number of other 'sub-records'          
                       with sub-keys defined by the user.                       
                                                                                
   Each NODIO file has a master record with a complete identification           
field followed by nulls. This record is read by NODIO when it is first          
called and provides it with information it requires, such as the length         
and position of the nodes and codes, the maximum number of levels, the          
highest node used so far, the title of each level, etc.                         
                                                                                
  All NODIO records contain specialized control elements in the range           
X'B0' to X'BF'. With one exception, to be discussed later, these                
elements must not be amended by the user. They contain things like              
node links (upward and downward) and sequence links (forward and                
backward) and if they are destroyed the file becomes unreadable                 
and possibly unreconstructable. The PAN book NODIOELS has the full              
set of element dsects.                                                          
         EJECT                                                                  
  The family tree depicted earlier might look like this on the file.            
The actual node numbers used at various points would depend on the              
exact sequence in which the records were added.                                 
                                                                                
                                                                                
        ------------KEY---------------   --------DATA--------                   
          IDENT-               REST OF      NODE                                
RECORD  IFICATION  NODE  CODE    KEY     ESTABLISHED    PARENT                  
------  ---------  ----  ----  -------   -----------    ------                  
Master  Constant   nulls nulls  nulls         01         none                   
                                                                                
  A        ''       01     A    user          02         master                 
  B        ''       01     B     ''           03         master                 
                                                                                
  C        ''       02     C     ''           04           A                    
  D        ''       02     D     ''           05           A                    
  E        ''       02     E     ''           06           A                    
  F        ''       02     F     ''                        A                    
                                                                                
  G        ''       03     G     ''                        B                    
  H        ''       03     H     ''                        B                    
                                                                                
  I        ''       04     I     ''                        C                    
                                                                                
  J        ''       05     J     ''                        D                    
  K        ''       05     K     ''                        D                    
  L        ''       05     L     ''                        D                    
                                                                                
  M        ''       06     M     ''                        E                    
  N        ''       06     N     ''           07           E                    
                                                                                
  O        ''       07     O     ''                        N                    
  P        ''       07     P     ''                        N                    
  Q        ''       07     Q     ''                        N                    
                                                                                
                                                                                
   Observe how the structure can handle an indefinite number of                 
hierarchy levels within a fixed key.                                            
                                                                                
  A NODIO 'sequential' reading of this file would return the                    
records in this order.                                                          
                                                                                
   A                A.E.N                                                       
   A.C              A.E.N.O                                                     
   A.C.I            A.E.N.P                                                     
   A.D              A.E.N.Q                                                     
   A.D.J            A.F                                                         
   A.D.K            B                                                           
   A.D.L            B.G                                                         
   A.E              B.H                                                         
   A.E.M                                                                        
         EJECT                                                                  
USER-SEQUENCING                                                                 
---------------                                                                 
                                                                                
  Nodes provide the vertical links between generations. There are               
also horizontal links connecting a set of siblings. These are used              
to maintain the user-sequence of the records.                                   
                                                                                
  Suppose we had a parent A with children 1,2,3,4 and 5 which we wanted         
to print in the order 3,4,1,5,2. If in record A we could find out which         
one to start with and if each sibling had a pointer to the next one in          
the user-sequence, we would have all the information we need to list            
them in the desired order. In order to allow the user to re-arrange his         
sequence, however, we also need a set of backward pointers. These give          
us the added ability to list the records in reverse sequence.                   
                                                                                
                                                                                
  The following chart illustrates how the links work. The parent A, of          
course, might have siblings of its own, in which case it would have             
forward and backward pointers in addition to the first and last                 
pointers for its children. Likewise, 1,2,3,4 and 5 might be parents             
themselves.                                                                     
                                                                                
                                                                                
   Record A    First=3   Last=2                                                 
   (parent)                                                                     
                                                                                
               Forward   Backward                                               
   Record       Link       Link                                                 
   ------      -------   --------                                               
                                                                                
     1            5          4                                                  
                                                                                
     2            -          5                                                  
                                                                                
     3            4          -                                                  
                                                                                
     4            1          3                                                  
                                                                                
     5            2          1                                                  
                                                                                
                                                                                
  User sequence is 3,4,1,5,2                                                    
         EJECT                                                                  
LIBRARY GROUPS                                                                  
--------------                                                                  
                                                                                
  NODIO provides the capability of maintaining special sets of records          
called library groups which can be 'attached' at any number of points           
within the NODIO heirarchy. The code of the first record of such a set          
must start with a special code determined when the file is set up               
(such as a $). This record is called the library header. All other              
records within the group are added normally. The header establishes             
a node just like any other parent.                                              
                                                                                
  When you add or change a NODIO record you can indicate that a                 
library group attachment is to take place. Your record then, in                 
effect, establishes the same node as the library header, so all                 
of the library members become 'children' of your record as well.                
The library header is squeezed out- it no longer occupies a level.              
                                                                                
   For example, if there were a library group $ABC-                             
                                                                                
      $ABC     (header)                                                         
      $ABC.1                                                                    
      $ABC.2                                                                    
      $ABC.2.A                                                                  
                                                                                
    and you attached it to some record XYZ, you would end up with-              
                                                                                
      XYZ                                                                       
      XYZ.1                                                                     
      XYZ.2                                                                     
      XYZ.2.A                                                                   
                                                                                
   Notice that the library header itself does not appear in the result.         
                                                                                
                                                                                
   There are some restrictions about using library groups-                      
                                                                                
   1. No nesting of library groups is allowed, i.e. no group                    
      can be attached to a record within another group.                         
                                                                                
   2. No 'natural' children may exist for the record receiving the              
      attachment. Nor can you add any natural children to a record that         
      currently triggers an attachment. Also only one attachment can be         
      made to a given record.                                                   
                                                                                
      There are a number of reasons for this, primarily involving               
      difficulties in searching, sequencing, and guaranteeing                   
      uniqueness of sibling codes.                                              
                                                                                
   3. Library members can be amended only if accessed directly through          
      the library header, not through any of the adoptive parents.              
                                                                                
   An attachment may result in a heirarchy with more levels than the            
maximum allowed for the NODIO file. This situation is not diagnosed             
at the time. It can be revealed by doing a sequential read of the               
records below the attachment. An error of 'too many levels' is returned         
and the records at too low a level are not processed.                           
                                                                                
                                                                                
                                                                                
LIBRARY PARAMETER SUBSTITUTION                                                  
------------------------------                                                  
                                                                                
  The record which triggers the library call can also contain controls          
which allow for dynamic modification of the library group records.              
                                                                                
  Parameter substitution is controlled by pairs of elements in the              
attaching record. The first contains the parameter and the second the           
replacement value (see NODIOELS). There can be any number of pairs. The         
library members are scanned, element by element, for the parameter and          
the replacement value is substituted. If the replacement value is               
'DELETE', the element is deleted.  Parameters in the library member             
elements are preceded by &&.                                                    
                                                                                
  NODIO will check that the resulting element does not exceed 255 bytes         
and that record overflow does not occur, but it is the users                    
responsibility to make sure that the replacement does not exceed a              
appropriate size for the application.                                           
                                                                                
  It is also the users responsibility to set the parameter subsitiution         
element pairs in the attaching record. These are the only NODIO                 
control elements the user is allowed to alter. As the attachment is             
made the file maintenance program must read the entire library group,           
build a list of parameters, and ask for substitution values. From these         
it can build the element pairs.                                                 
                                                                                
  In addition, particular members of the library can be bypassed in the         
call through the use of library omit elements in the attaching record           
which contain the specific code to be omitted.                                  
         EJECT                                                                  
PARAMETER LIST                                                                  
--------------                                                                  
                                                                                
PARAM 1      BYTE  0     Not used.                                              
             BYTES 1-3   A(NODBLKD) Control Dsect.                              
                                                                                
PARAM 2      BYTE 0      For ADD,MOVE,COPY,REPO, AND RES commands               
                         A=add after, B=add before.                             
             BYTES 1-3   A(COMMAND)                                             
                                                                                
PARAM 3      BYTE  0     Not used.                                              
             BYTES 1-3   A('KEY')- Codes separated by delimiters.               
                                   (NEDELIM) eg- ABC.DEF.123 +blank.            
                         -or-                                                   
                                                                                
                         A(0)    - User must set codes in NDLVRCOD              
                                   in the NDLVTAB entries.                      
                                                                                
PARAM 4      BYTE 0      Length of positioning code for ADD,                    
                           MOVE,COPY,REPO, AND RES commands                     
             BYTES 1-3   A(Positioning Code)                                    
                         CODE X'00' = add at start.                             
                         CODE X'FF' = add at end.                               
                         A(0)       = add at end.                               
                                                                                
                         For REN (rename)                                       
             BYTE 0      Length of new code.                                    
             BYTES 1-3   A(NEW CODE)                                            
                                                                                
PARAM 5      BYTE 0      not used                                               
             BYTES 1-3   A(New parent 'key') for REPO                           
                         A(New 'key')        for COPY                           
                                                                                
NODIO COMMANDS                                                                  
--------------                                                                  
                                                                                
    **NOTE - Before your first call to NODIO you must set several               
             control values and addresses (see NODBLKD).                        
                                                                                
           - Your first call will cause it to 'open' the NODIO 'file'.          
             This means reading the master record, setting various              
             fields in NODBLKD, and creating the level table.                   
                                                                                
           - The access commands return the record in NDIOA and                 
             complete the level table entries.                                  
                                                                                
           - Whether sub-records are processed or not is controlled             
             by the fields NDSUBRSW, NDSUBRLO, and NDSUBRHI. Sub-               
             records are passed to the user after the associated                
             base record with mode NDPROCSR.                                    
                                                                                
           - Sub-records must be added and changed by the user                  
             directly, but all other NODIO functions (DELETE, COPY,             
             etc) handle them appropriately.                                    
                                                                                
           - The 'key' may be specified in two ways.                            
                                                                                
               1. PARAM3 pointing to the key expressed as a series              
                  of codes separated by delimiters (NDDELIM),                   
                  e.g. ABC.DEF.12                                               
                                                                                
               2. PARAM3 zero and each code set in NDLVRCOD in the              
                  appropriate NDLVTAB entry. NDLEV must be set to the           
                  number of levels.                                             
                                                                                
                  Codes that are not 'printable' characters strings             
                  must be entered in this mode.                                 
                                                                                
            NODIO passes control to the caller's routine at NDHOOK              
            with modes set for each command as described below. On              
            an error or when it is finished NODIO returns to the                
            caller in line.                                                     
                                                                                
MAST       - Establish a NODIO master record.                                   
----         NODIO will use the following fields-                               
                                                                                
              NDKEY-    Master key.                                             
              NDNODLN-  Node length                 (default=4).                
              NDCODLN-  Code length                 (default=8).                
              NDCDALIN- Code alignment (R,L)        (default=L).                
              NDNDPOS-  Position of node in key.                                
              NDLIBNOD- Node for Library members    (default=2).                
              NDLIBPRE- Prefix for Library members  (default=$).                
              NDUSEQ-   User seq supported?         (default=y).                
                                                                                
READ       - Returns the exact record requested with mode NDPROC.               
----         Higher level records are passed to the caller with mode            
             NDVAL. Any requested sub-records are returned after the            
             base record with a mode of NDPROCSR.                               
                                                                                
             A key of X'00' can be used to initiate for a sequential            
             read from the start of the file.                                   
                                                                                
HIGH       - Returns the record at the given level with a code equal to         
----         or higher than that requested (mode NDPROC).  If no such           
             record exists a record not found error is returned.                
             Higher level records are passed to the caller with mode            
             NDVAL. Any requested sub-records are returned after the            
             base record with mode NDPROCSR.                                    
                                                                                
             A key of X'00' can be used to initiate for a sequential            
             read from the start of the file.                                   
                                                                                
                                                                                
SEQ        - Must be preceded by a READ or HIGH.                                
---                                                                             
             Normally, SEQ returns in code sequential order all lower           
             level records 'belonging' to the record established by the         
             READ or HIGH. You are passed each record with a mode of            
             NDPROC. If lower level records exist for a given record            
             you are also passed a mode of NDFRST, followed by the              
             lower level records, followed by NDLAST.  At all levels,           
             requested sub-records are returned after the associated            
             base record with mode NDPROCSR.                                    
                                                                                
             If too many levels are found an error is returned (to the          
             caller's NDHOOK) but processing continues.                         
                                                                                
                                                                                
             Two controls can be used to alter this function.                   
                                                                                
             1- If at mode NDFRST for a record you set NDSKIP to Y              
                the lower level records belonging to it will be                 
                skipped.                                                        
                                                                                
             2- You can cause the reading to continue back up to higher         
                levels by setting NDSQBACK to a value lower than the            
                level implied by the READ or HIGH. Setting it to zero           
                will cause a read to the end of the file.                       
                                                                                
LSEQ       - As for SEQ except the records at each level are processed          
----         in logical (user defined) sequence.                                
                                                                                
BSEQ       - As for SEQ except the records at each level are processed          
----         in backwards logical (user defined) sequence.                      
                                                                                
ADD          The record in NDIOA will be added to the file with the             
---          specified 'key'. The actual record key cannot be set by            
             the user himself, because NODIO has to assign the node.            
                                                                                
             NDSETAND and NDSETACD can be set to 'attach' a library             
             group to the record being added.                                   
                                                                                
COPY       - A new record or set of records is created be copying               
----         existing data. The caller provides the 'key' of the record         
             being copied in PARAM3 and the new 'key' in PARAM5.                
             PARAM4 can be used to position the record in its new               
             family before or after a specific existing record.                 
                                                                                
             If the record being copied is a parent all its children            
             are copied along with it (with new nodes).  The newly              
             created records are completely independent of the original         
             records.                                                           
                                                                                
             Requested sub-records are also copied.                             
                                                                                
PUT        - The record just READ can be amended. NDSETAND and                  
---          NDSETACD can be used on a PUT just as on an ADD. To detach         
             set NDSETACD to X'FF'.                                             
                                                                                
MOVE       - The record specified is removed from its current position          
----         within its 'family' and added at the place described               
             in PARAM4 and the first byte of PARAM2.                            
                                                                                
             MOVES can only take place within the same 'family'.                
                                                                                
DEL        - The specified record is marked deleted.                            
---          Lower level records belonging to this record are not               
             marked deleted now but will be purged the next time                
             the file is loaded.                                                
                                                                                
             All sub-records for the base record are marked                     
             deleted now regardless of the sub-record control fields.           
                                                                                
RES        - The specified record, which must currently be deleted,             
---          is restored. No attempt is made to restore the record              
             to its original sequence position within its 'family',             
             but PARAM4 can be used to specify a new position.                  
                                                                                
             All sub-records for the base record are restored.                  
                                                                                
REN        - The specified record is 'renamed'. The new code is                 
---          given in PARAM4.                                                   
                                                                                
             All sub-records for the base record are renamed.                   
                                                                                
REPO       - The 'key' of the record to be repositioned is given in             
----         PARAM3 and the 'key' of the new parent in PARAM5.                  
             The record is removed from its current place and                   
             re-added to the new parent. PARAM4 can be used to                  
             position the record before or after a specific                     
             existing record in the new 'family'. If the new                    
             family is the same as the old, REPO functions                      
             exactly like a MOVE.                                               
                                                                                
             All sub-records for the base record are processd.                  
                                                                                
TRACE      - The 'genealogy' of the record in NDIOA is traced. Its              
-----        full 'key' is returned at PARAM3.                                  
                                                                                
NODIO MODES                                                                     
-----------                                                                     
                                                                                
NDVAL        - Validate a higher level record.                                  
NDFRST       - First for a code (lower level records to follow).                
NDPROC       - Process record at given level.                                   
NDPROCSR     - Process 'sub-record'.                                            
NDLAST       - Last for a code  (at end of lower level records).                
NDEND        - Can be set by user in his NODIO hook routine to                  
               terminate the NODIO call.                                        
                                                                                
         EJECT                                                                  
NODBLKD  DSECT           DESCRIPTION                                            
                         -----------                                            
                                                                                
                         SET BY USER AT START                                   
                         --------------------                                   
                                                                                
NDKEY    DS    XL64      MASTER KEY                                             
NDKLEN   DS    H         KEY LENGTH                                             
NDCNTL   DS    H         CONTROL BYTE DISPLACEMENT                              
NDDISK   DS    H         DISK ADDR DISP                                         
NDELSTRT DS    H         START OF FIRST ELEM                                    
NDRLEN   DS    H         POSITION OF RECORD LENGTH                              
NDRMAX   DS    H         MAXIMUM RECORD SIZE                                    
                                                                                
NDDIRNAM DS    CL8       NAME OF DIRECTORY                                      
NDFILNAM DS    CL8       NAME OF DA FILE                                        
NDOPENSW DS    CL1       Y=NODIO FILE IS 'OPENED'                               
NDMXLEVS DS    X         MAXIMUM LEVELS                                         
NDDELIM  DS    X         DELIMITER FOR CONCATENATED KEYS                        
         DS    CL10      SPARE                                                  
                                                                                
NDHOOK   DS    A         A(USER PROCESSING ROUTINE)                             
NDDMGR   DS    A         A(DATAMGR)                                             
NDHEXOUT DS    A         A(HEXOUT)  -FOR TRACE                                  
NDPRINT  DS    A         A(PRINT)   -FOR TRACE                                  
NDRECUP  DS    A         A(RECUP)                                               
NDTSCAN  DS    A         A(TSCAN)                                               
NDIOA    DS    A         A(IO AREA)                                             
NDIOA2   DS    A         A(2ND IO AREA)                                         
         DS    6A        SPARE                                                  
                                                                                
                         RUN CONTROLS SET DYNAMICALLY BY USER                   
                         ------------------------------------                   
                                                                                
NDTRACE  DS    C         Y = TRACE                                              
NDWRITE  DS    C         N = DO NOT MARK FILE                                   
NDDUMP   DS    C         DUMP CONTROL F=FORCE,E=ON ERROR                        
NDUPDTSW DS    C         N=DO NOT READ FOR UPDATE                               
NDSKIP   DS    C         Y=SKIP LOWER RECORDS ON SEQUENTIALS                    
                         (SET BY CALLER WHEN MODE=FRST)                         
NDSQBACK DS    X         HIGHEST LEVEL FOR SEQUENTIALS TO                       
                         BACK UP TO- SET BY NODIO AT READ OR HIGH               
                         CAN BE ADJUSTED BY USER BEFORE SEQUENTIAL              
NDREREAD DS    C         Y=FORCE A RE-READ OF HIGHER LEVELS                     
NDDELRSW DS    C         Y=PASS DELETED RECORDS                                 
NDSUBRSW DS    C         Y=PROCESS 'SUB-RECORDS'                                
NDSUBRLO DS    C12       LOW FILTER LIMIT FOR SUB-REC 'SUB-KEYS'                
NDSUBRHI DS    C12       HIGH LIMIT                                             
         DS    CL3       SPARE                                                  
                                                                                
                         OPTIONALLY SET BY USER ON ADD OR CHANGE                
                         ----------------------------------------               
                                                                                
NDSETAND DS    XL4       NODE TO BE ATTACHED AT THIS LEVEL                      
NDSETATT DS    CL12      CODE TO BE ATTACHED AT THIS LEVEL,X'FF'=DETACH         
                                                                                
                         SET BY NODIO INITITIAL ROUTINE                         
                         ------------------------------                         
                                                                                
NDUSEQ   DS    CL1       USER SEQUENCE SUPPORTED (Y,N)                          
NDNDPOS  DS    X         POSITION OF NODE IN KEY                                
NDNODLN  DS    X         NODE LENGTH (MAX 3)                                    
NDCODLN  DS    X         CODE LENGTH (MAX 12)                                   
NDCDALIN DS    X         CODE ALIGNMENT (R,L)                                   
NDL1NOD  DS    XL4       LEVEL ONE NODE                                         
NDLIBNOD DS    XL4       NODE FOR LIBRARY MEMBERS                               
NDLIBPRE DS    CL1       PREFIX FOR LIBRARY MEMBERS                             
NDSUBKLN DS    X         LENGTH OF SUB-RECORD 'SUB-KEYS'                        
NDSKPOS  DS    X         START POSITION OF SUB-RECORD 'SUB-KEYS'                
NDCDPOS  DS    X         START POSITION OF CODE                                 
         DS    CL3       SPARE                                                  
                                                                                
                         FIELDS SET DYNAMICALLY BY NODIO                        
                         -------------------------------                        
                                                                                
NDLEVPTR DS    A         POINTER TO LEVEL TABLE ENTRY                           
NDHINOD  DS    XL4       HIGHEST USED NODE                                      
NDLIBLEV DS    X         LEVEL OF LIBRARY CALL                                  
NDATTLEV DS    X         LEVEL OF LOWEST ATTACHMENT                             
NDATTNOD DS    XL4       NODE OF LOWEST ATTACHMENT                              
NDATTCOD DS    CL12      CODE OF LOWEST ATTACHMENT                              
NDCKEYL  DS    X         LENGTH OF RETURNED CONCATENATED KEY                    
NDLEV    DS    X         LEVEL OF RECORD RETURNED                               
NDMODE   DS    X         MODE - FIRST,PROC,LAST                                 
NDERR    DS    X         ERROR CODE                                             
NDERRMSG DS    CL40      ERROR MESSAGE                                          
NDDMWORK DS    A         A(NODIO'S DMOWRK)                                      
         DS    XL16      SPARE                                                  
                                                                                
NDWORK   DS    XL20      NODIO USE                                              
         DS    XL20      SPARE                                                  
                                                                                
NODBLKL  EQU   *-NODBLKD                                                        
                                                                                
NDLVTAB  DS    0D        START OF LEVEL TABLE                                   
         SPACE 2                                                                
                         DSECT FOR LEVEL ENTRIES                                
                         -----------------------                                
         SPACE 2                                                                
NDLVTABD DSECT                                                                  
NDLVLOC  DS    CL4       L=NN - FOR DUMP READABILITY                            
                                                                                
NDLVNOD  DS    XL4       NODE                                                   
NDLVCOD  DS    CL12      CODE                                                   
NDLVKEY  DS    XL32      KEY                                                    
NDLVDA   DS    XL4       DISK ADDRESS OF RECORD                                 
NDLVRCOD DS    CL12      SET BY USER IN LIEU OF CONCATENATED 'KEY'              
                         **ONLY LVTAB FIELD NORMALLY SET BY USER**              
NDLVFRST DS    CL12      FIRST CODE AT THIS LEVEL                               
NDLVLAST DS    CL12      LAST CODE AT THIS LEVEL                                
NDLVFWRD DS    CL12      FORWARD CODE AT THIS LEVEL                             
NDLVBACK DS    CL12      BACKWARD CODE AT THIS LEVEL                            
         DS    CL48      SPARE                                                  
NDLVWORK DS    CL60      FOR NODIO USE                                          
                                                                                
NDLVTABL EQU   *-NDLVTABD                                                       
                                                                                
                                   NODIO ERROR CODES (201-220)                  
                                   ---------------------------                  
                                                                                
NDLEVERR EQU   201                 TOO MANY LEVELS                              
NDCDLERR EQU   202                 CODE LENGTH ERROR                            
NDRNFERR EQU   203                 RECORD NOT FOUND                             
NDADDERR EQU   204                 ADD OF RECORD ALREADY ON FILE                
NDRENERR EQU   205                 RENAME ALREADY ON FILE                       
NDPMDERR EQU   206                 POSITIONING MODE INVALID                     
NDOVFERR EQU   207                 RECORD/ELEM OVERFLOW                         
NDRESERR EQU   208                 RESTORE OF NON-DELETED RECORD                
NDLIBERR EQU   210                 LIBRARY CALL INVALID                         
NDANFERR EQU   211                 ATTACHMENT NOT FOUND                         
NDAMXERR EQU   212                 ATTACHMENT MIX                               
                                                                                
                                   NODIO MODE SETTINGS                          
                                   -------------------                          
                                                                                
NDFRST   EQU   X'11'               FIRST FOR LEVEL                              
NDPROC   EQU   X'12'               PROCESS RECORD AT CURRENT LEVEL              
NDPROCSR EQU   X'14'               PROCESS SUB-RECORD                           
NDLAST   EQU   X'13'               LAST FOR LEVEL                               
NDVAL    EQU   X'21'               VALIDATE A HIGHER LEVEL RECORD               
                                                                                
