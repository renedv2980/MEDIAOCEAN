Document desribing HOSTESS, the mainframe ESS interface controller              
------------------------------------------------------------------              
By JOMUDDLO 31/10/94.            See PAN.SYSTEMS.LIBRARY(DCHOSTESS)             
---------------------            ----------------------------------             
                                                                                
Introduction                                                                    
------------                                                                    
    The following is a description of the program which manages the             
interface between the mainframe HOST MVS system and a set of remote PC          
network based ESS systems. The program is known as 'HOSTESS'. This              
program manages APPC LU6.2 type communication interfaces with each ESS          
partner system and provides all associated mainframe based system file          
services and any associated facilities such as recovery and logging.            
The APPC interface with each ESS remote system comprises one                    
'Receiver' process for incoming messages and one 'Sender' process               
for outgoing messages.                                                          
                                                                                
    In effect HOSTESS acts both as a 'Server' style interface                   
handling requests from a group of ESS systems and as a set of                   
'Client' style interfaces to that same group of ESS partners,                   
sending out requests based on events originating on the mainframe.              
Having both sender and receiver processes within the same program               
allows message flows to be coordinated through local memory                     
structures.                                                                     
                                                                                
    The program is run as a started task in an MVS address space.               
There is a limit to the number of partner ESS systems that can                  
be managed. New copies of the HOSTESS program can be started to                 
handle additional sets of ESS partners.                                         
                                                                                
    Historically HOSTESS was developed from the US product 'EDICT'              
which manages transfer of class 'G' Fax style Print Queue reports to            
remote sites. A facility written by Fred Roe providing a set                    
of APPC LU6.2 communications services based on APPC API into native             
VTAM was developed for 'EDICT' and has been similarly used in HOSTESS.          
                                                                                
    The design of HOSTESS is structured around the APPC messages                
it exchanges with ESS. In turn these messages are structured                    
around their content which can include both general control information         
and information specific to the type of data exchanged, represented by          
a series of sub systems. Sub systems currently under developement               
include:                                                                        
                                                                                
1) 'SQL EXTRACT' sub system. Extract file transfer for SQL database and         
   flexible reporting applications on the PC network.                           
2) 'PIANO' sub system. Print Queue report transfer similar to the               
   existing DDS products ALINK and SHUTTLE as well as providing a               
   'SOON' job request interface.                                                
3) 'SCRIPT' sub system. Transfer of scripts to run FACPAK processes             
                                                                                
         EJECT                                                                  
Configuration                                                                   
-------------                                                                   
    The remote ESS systems are defined to HOSTESS in 'EDICT' records            
on the FACPAK CONTROL system file. These can be maintained with                 
online program CONTROL/SFM.                                                     
    The key of the 'EDICT' records is ESSNNNNN where NNNNN is a 5 digit         
ESS id number. The configuration parameters include those for APPC              
which must match the values set up on the associated remote ESS system.         
                                                                                
The following fields need to be defined.                                        
HOST Send LU       - Sender LU id for APPC, (was 'Edict:  MF LUID')             
HOST Receive LU    - Receiver LU id for APPC, (was 'Verdict: MF LUID')          
ESS Password       - 8 character password for APPC with ESS.                    
                                                                                
The following fields are under developement.                                    
HOSTESS code       - 1 character alpha numeric code associating                 
                     this ESS id with a given copy of HOSTESS.                  
                     See HOSTESS JCL parameter card, 'HOSTESS='.                
ESS Level number   - 1 to 255 set to match level of ESS partner                 
ESS Version number - 1 to 255                                                   
Encryption key     - to be defined.                                             
                                                                                
         EJECT                                                                  
Operations.                                                                     
-----------                                                                     
                                                                                
Operator console commands and messages                                          
-------------------------------------                                           
                                                                                
Start command                                                                   
-------------                                                                   
   'S HOSTESS1' - I.e. use appropriate PROC name as below.                      
                                                                                
Stop command                                                                    
------------                                                                    
Input:                                                                          
   'P HOSTESS1'                                                                 
Output:                                                                         
   'JOBNAME.STEPNAME.  - STOP COMMAND ACCEPTED'                                 
                                                                                
If this fails then cancel with 'C HOSTESS1'                                     
                                                                                
Modify commands.                                                                
----------------                                                                
1) Toggle ESSIO sub task                                                        
------------------------                                                        
Input:                                                                          
   'F HOSTESS1,ESSNNNNN,TOGGLE' where 'NNNNN' is ESS id # e.g. ESS00001         
   This toggles attach state of HOSTESS ESS sender sub task.                    
   Or:                                                                          
   'F HOSTESS1,ESRNNNNN,TOGGLE' where 'NNNNN' is ESS id # e.g. ESR00001         
   This toggles attach state of HOSTESS ESS receiver sub task.                  
                                                                                
Output:                                                                         
   'JOBNAME.STEPNAME.  - REATTACHED ESS SUB TASK'                               
   If sub task currently detached then command re-attaches sub task.            
   'JOBNAME.STEPNAME.  - SUBTASK DETACH ABEND CODE: HHHHHHHH'                   
   If sub task currently attached then command detaches sub task.               
                       - APPC sub task has been detached with ABEND             
                         Last ABEND code 8 char hex 'HHHHHHHH'                  
                                                                                
2) Report on Status of HOSTESS                                                  
------------------------------                                                  
Input:                                                                          
   'F HOSTESS1,STATUS' - Report general sraus of HOSTESS                        
Output:                                                                         
   'JOBNAME.STEPNAME.  - HOSTESS1 OK*' If HOSTESS1 OK.                          
                                                                                
3) Report on Status of HOSTESS ESS APPC sub task                                
------------------------------------------------                                
                                                                                
Input:                                                                          
   'F HOSTESS1,ESSNNNNN' where 'NNNNN' is ESS id # e.g. ESS00001                
                       - Report status of specific ESS send sub task            
   'F HOSTESS1,ESRNNNNN' where 'NNNNN' is ESS id # e.g. ESR00001                
                       - Report status of specific ESS receive sub task         
Output:                                                                         
   'JOBNAME.STEPNAME.  - ESSNNNNN PROCESS READY FOR REQUEST'                    
                       - APPC conversation is open and ready                    
                         to process message.                                    
   'JOBNAME.STEPNAME.  - ESSNNNNN PROCESS BUSY WITH REQUEST'                    
                       - APPC conversation is open and sub task                 
                         is processing messages.                                
   'JOBNAME.STEPNAME.  - ESSNNNNN WAITING LU6.2 ALLOCATION'                     
                       - APPC conversation is waiting LU6.2 allocation          
   'JOBNAME.STEPNAME.  - ESSNNNNN PROCESS IDLE - ABEND CODE: HHHHHHHH'          
                       - APPC sub task has been detached with ABEND             
                         Last ABEND code 8 char hex 'HHHHHHHH'                  
                                                                                
4) Commands for 'SQL EXTRACT' sub system                                        
----------------------------------------                                        
   'F HOSTESS1,EXTRACT,COMMAND,ESSNNNNN,AGENCY,SYSTEM,SUBSYSTEM,FILE#'          
    e.g.:                                                                       
   'F HOSTESS1,EXTRACT,STATUS,ESS00001,MQ,MEDIA,SQL,00034'                      
    where command line parameters are:                                          
    COMMAND - See output below.                                                 
    ESSNNNNN - ESS id e.g. ESS00001                                             
    AGENCY - 2 character agency alpha id for SQL EXTRACT file, e.g. D1          
    SYSTEM - FACPAK file system name for SQL EXTRACT file, e.g. MEDIA           
    SUBSYSTEM - Sub system name SQL EXTRACT file, e.g. SQL.                     
    FILE# - 5 digit file number for SQL EXTRACT file.                           
                                                                                
Output:                                                                         
    COMMAND - STATUS - Without file# parameter - Report on current              
                       Extract sub system transfer status.                      
   'JOBNAME.STEPNAME.  -  CR: NNNNN, NO: NNNNN, RC: NNNNN, CO: NNNNN,           
                          FC(X)'                                                
    Where 'NNNNN' is Extract file transfer number, CR - created,                
    NO - Notified, RC - received, CO - Committed and FC - transfer              
    frequency control, value 'X'. I.e. display data from XTRANS record          
                                                                                
    COMMAND - STATUS - With file# parameter - Report on current                 
                       Extract file transfer status.                            
   'JOBNAME.STEPNAME.  - RETURN CODES -NO: CCCCCC, RC: CCCCCC,                  
                         CO: CCCCCC'                                            
    Where 'CCCCCC' is Extract file transfer 6 character return codes.           
    NO - Notification, RC - receive, CO - Commit                                
    I.e. display data from XFILE record ESS transfer information.               
                                                                                
    COMMAND - SEND - Force send of EXTRACT file.                                
                                                                                
    COMMAND - COMMIT - Force commit of EXTRACT file                             
                                                                                
    COMMAND - STOP - Stop transfer of EXTRACT files to given ESS.               
                                                                                
    COMMAND - START - Restart transfer of EXTRACT files to given ESS.           
                                                                                
    COMMAND - DELETE - Delete EXTRACT file MVS data sets and CONTROL            
                       records from the HOST system.                            
                       Not yet implemented.                                     
                                                                                
                                                                                
4) Commands for 'PIANO' PQ report sub system                                    
--------------------------------------------                                    
   'F HOSTESS1,PIANO,COMMAND,ESSNNNNNN,.....'                                   
   None yet implemeted.                                                         
                                                                                
JCL, PROCS and PARMS.                                                           
---------------------                                                           
                                                                                
   PROCS                                                                        
   -----                                                                        
   DDS.PROCLIB(HOSTESS1) - Live configuration for UK                            
   DDS.PROCLIB(HOSTESST) - Test configuration for UK                            
                                                                                
E.g.:                                                                           
//HOSTESS1  PROC PROG=HOSTESS,PARMS=HOSTESS1                                    
//HOSTESS1  EXEC PGM=&PROG,REGION=4096K,TIME=1440,PARM=ADV                      
//STEPLIB   DD DSN=FROE.TEST3.LOADLIB,DISP=SHR                                  
//          DD DSN=DDS.LOADLIB,DISP=SHR                                         
//LOADLIB   DD DSN=DDS.LOADLIB,DISP=SHR                                         
//ESSTRACE  DD SYSOUT=X                                                         
//SYSABEND  DD SYSOUT=X                                                         
//SYSUDUMP  DD SYSOUT=X                                                         
//*YSMDUMP  DD DSN=SYS.EDICT.SYSMDUMP,DISP=OLD                                  
//SYSLST    DD SYSOUT=X                                                         
//LOGSNAP   DD SYSOUT=X                                                         
//*                                                                             
//SYSIN     DD DSN=DDS.CNTL.CARDS(&PARMS),DISP=SHR                              
//                                                                              
                                                                                
   PARMS                                                                        
   -----                                                                        
   DDS.CNTL.CARDS(HOSTESS1) - Live configuration for UK                         
   DDS.CNTL.CARDS(HOSTESST) - Test configuration for UK                         
                                                                                
E.g.:                                                                           
++ESS                                                                           
WAITSECS=30                                                                     
FTP=NO                                                                          
TRACE=01                                                                        
RECOMMIT=NO                                                                     
++ESSEND                                                                        
                                                                                
   JCL                                                                          
   ---                                                                          
   JOMU.DDS.JCL(HOSTESS1) - Live configuration for UK                           
   JOMU.DDS.JCL(HOSTESST) - Test configuration for UK                           
                                                                                
E.g.:                                                                           
//JOMUH1   JOB APPL,JOMU,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=JOMU                  
//*MAIN  CLASS=SYSTEMS                                                          
//        EXEC HOSTESS1,PROG=HOSTESS,PARMS=HOSTESS1                             
                                                                                
Job Control parameter cards                                                     
---------------------------                                                     
                                                                                
Job control parameter cards should be included between a header card:           
++ESS                                                                           
and a trailer card:                                                             
++ESSEND                                                                        
Any parameter cards outside these will be ignored.                              
                                                                                
A comment card can be included starting with '*' character.                     
                                                                                
Otherwise parameter cards include the foillowing:                               
                                                                                
WAITSECS=<Numeric value in 100ths of seconds> E.g. WAITSECS=3000                
         Polling time for main HOSTESS logic loop. Represents                   
         the maximum time the process waits between reads of                    
         of operator console command line and other polled functions.           
         Optional, default=30 seconds.                                          
FTP=<'YES' or 'NO'>                                                             
         FTP=YES -  Use IBM FTP program for file transfer to ESS                
         FTP=NO  -  Do not use IBM FTP program for file transfer                
                    to ESS. Use HOSTESS 'Bulk download' direct file             
                    transfer facility instead.                                  
                    Optional, default FTP=YES.                                  
TEST=<'A' or 'B' or 'C'> E.g. TEST=A.  Used to append to phase name             
                    of ESSIO to attach test verion.                             
                    Default to nothing.                                         
                    Optional, default not used.                                 
RECOMMIT=<'YES' or 'NO'>                                                        
         RECOMMIT=YES - Broadcast 'Recommit' message on restart for SQL         
                    EXTRACT sub system ESS databases.                           
         RECOMMIT=NO  - Do not broadcast recommit message as above.             
                    Optional, default RECOMMIT=NO.                              
TRACE=<Hex byte value to set systout TRACE mesage level.)                       
         TRACE=00 Lowest trace level.                                           
         TRACE=01 Medium level trace. Partial APPC message dump.                
         TRACE=03 Highest level trace. Full APPC message hex dump.              
         Optional, default TRACE=00                                             
HOSTESS=<1 character alphanumeric code>  Code associated with this              
         excuting copy of HOSTESS. Associated with HOSTESS code on              
         'EDICT' ESS id definition records to define which set of               
         ESS ids are under the control of this copy of HOSTESS.                 
         E.g.  HOSTESS=1 controls ESS id with 'HOSTESS code 1'.                 
         To be developed.                                                       
                                                                                
         EJECT                                                                  
Output                                                                          
------                                                                          
                                                                                
SYSOUT                                                                          
------                                                                          
In addition to the standard output the following SYSOUT data sets are           
produced.                                                                       
DDNAME - ESSTRACE - Main HOSTESS log file.                                      
One pair of SYSOUT data sets is produced for each ESS as follows:               
DDNAME - ESSNNNNN - Where NNNNN is ESS id #. Log for APPC LU6.2                 
         service routine events asociated with ESSIO Sender sub task.           
DDNAME - ESRNNNNN - Where NNNNN is ESS id #. Log for APPC LU6.2                 
         service routine events asociated with ESSIO Receiver sub task.         
                                                                                
Operator console messages                                                       
-------------------------                                                       
Messages that log significant events are sent by HOSTESS to the                 
Operator console using DDS FACPAK facility, LOGIO.                              
These include:                                                                  
   'JOBNAME.STEPNAME.  - HOSTESS SENDER INVALID MESSAGE CODE: CCCCCC'           
       Error code returned in APPC send controller message.                     
   'JOBNAME.STEPNAME.  - HOSTESS SENDER EIOPQR ERROR RETURN: HH'                
       Error code returned by PIANO PQ report sub system processing             
   'JOBNAME.STEPNAME.  - HOSTESS SENDER EIOSQL ERROR RETURN: HH'                
       Error code returned by EXTRACT sub system processing                     
   'JOBNAME.STEPNAME.  - REQUEST PROCESSED'                                     
       Valid request processed by APPC receive controller                       
   'JOBNAME.STEPNAME.  - HOSTESS RECEIVER INVALID MESSAGE CODE: CCCCCC'         
       Error code returned in APPC receive controller message.                  
   'JOBNAME.STEPNAME.  - REQUEST FAILED WITH ERROR CODE: HH'                    
       Error code returned by APPC receive controller sub system process        
   'JOBNAME.STEPNAME.  - SUBTASK DETACH ABEND CODE: HHHHHHHH'                   
       APPC controller sub task detach detected with ABEND code.                
   'JOBNAME.STEPNAME.  - INVALID HOSTESS COMMAND*'                              
       Invalid operator console command.                                        
   'JOBNAME.STEPNAME.  - INVALID ESS ID NUMBER*'                                
       Invalid operator console command.                                        
   'JOBNAME.STEPNAME.  - INVALID ESS SUB PARAMETER*'                            
       Invalid operator console command.                                        
   'JOBNAME.STEPNAME.  - INVALID ESS SUB TASK ID NOT FOUND'                     
       Invalid operator console command.                                        
   'JOBNAME.STEPNAME.  - INVALID ESS SUB TASK ID BUSY'                          
       Invalid operator console command.                                        
   'JOBNAME.STEPNAME.  - SQL FILE NOTIFICATION: ESSNNNNN,AASU,GGGGGG,           
                         TTTTTT,RC = CCCCCC '                                   
       SQL EXTRACT file ready to send notification message sent                 
       to destination ESSid.                                                    
       Where 'NNNNN' is ESS id # e.g. ESS00001, 'AA' is aganecy alpha,          
       'S' is FAPAK system file code, 'U' is extract sub system code,           
       'GGGGGG' is 'G' + 5 digit file generation #, 'TTTTTT' is 'T' +           
       5 digit file transfer # and 'CCCCCC' is 6 character return code.         
   'JOBNAME.STEPNAME.  - SQL FILE RECEIVED: ESSNNNNN,AASU,GGGGGG,               
                         TTTTTT,RC = CCCCCC '                                   
       SQL EXTRACT file receive acknowledgement received from                   
       destination ESSid.                                                       
   'JOBNAME.STEPNAME.  - SQL FILE COMMITTED: ESSNNNNN,AASU,GGGGGG,              
                         TTTTTT,APPLICID,RC = CCCCCC '                          
       SQL EXTRACT file commit acknowledgement received from                    
       destination ESSid.                                                       
       Where 'APPLICID' is 8 character XAPPLIC PC application id key.           
                                                                                
FACPAK CONTROL system file                                                      
--------------------------                                                      
EXTRACT subsystem events are records on Control file records.                   
These include Notification of file ready to send, Acknowledgement from          
ESS of file received and acknowledgement from ESS of file committed.            
CONTROL system records updated include XFILE and XTRANSFER records.             
                                                                                
FACPAK Print Queue files                                                        
------------------------                                                        
PIANO PQ report sub system events are recorded in the PQ files.                 
                                                                                
         EJECT                                                                  
Program structures.                                                             
-------------------                                                             
                                                                                
    The program is comprised of a main task which attaches pairs                
of subtasks for each ESS APPC interface under its control.                      
                                                                                
Main task.                                                                      
----------                                                                      
    The main task has phase name 'HOSTESS'. This initialises data               
areas and control blocks and manages general system functions                   
such as operator command and reporting, error monitoring and                    
the management of the ESS APPC interface control sub tasks.                     
                                                                                
Program functions:                                                              
------------------                                                              
Read JCL control parameter card input                                           
Initialise data areas and control blocks                                        
Attach a send and receive pair of sub tasks for each associated ESS id.         
Start timer pop loop:                                                           
Process operator command line - Exit to shutdown if request to stop.            
Poll SQL EXTRACT sub system transfer control records for pending files.         
Poll PQ report request control block for pending requests.                      
Monitor ESS APPC sub task events.                                               
Process sub task ABEND event.                                                   
Process sub task request for single thread facility.                            
Return to loop.                                                                 
Shutdown all attached sub tasks.                                                
EXIT.                                                                           
                                                                                
Data structures:                                                                
----------------                                                                
                                                                                
ESSBD -  HOSTESS system status control block                                    
--------------------------------------------                                    
ESSBD    DSECT                     HOSTESS SYSTEM STATUS CONTROL BLOCK          
ESSBSTA1 DS    XL1                 STATUS FLAGS 1                               
ESSBSFTP EQU   X'01'               FTP PROGRAM IN USE FOR BULK DOWNLOAD         
ESSBSRCO EQU   X'02'               RECOMMIT=YES FOR EXTRACT FILES               
ESSBTRAC DS    XL1                 TRACE=XX HEX CODE FOR TRACE LEVEL            
ESSBTR01 EQU   X'01'               APPC MESSAGE DATA TRACE                      
ESSBTR02 EQU   X'02'               APPC MESSAGE DATA HEX DUMPS ON               
         DS    XL100               N/D                                          
*                                                                               
ESSBLQ   EQU   ((*-ESSBD+7)/8)*8   FORCE BLOCK LENGTH TO WORD BOUNDRY           
                                                                                
ESSATC - Status control block for ESSIO attached sub tasks                      
---------------------------------------------------------                       
ESSATCD  DSECT                     ESS IO ATTACHED TASK CONTROL BLOCK           
EATOSECB DS    F                   OPERATING SYSTEM ECB OF ATTACH TASK          
EATOSTCB DS    F                   OPERATING SYSTEM TCB OF ATTACH TASK          
EATMTECB DS    F                   ECB OF MAIN CONTROLLER TASK                  
EATSTECB DS    F                   ECB OF SUBTASK                               
EATSPECB DS    F                   ECB TO STOP SUBTASK                          
*                                                                               
EATESSB  DS    A                   A(SYSTEM STATUS CONTROL BLOCK)               
EATFACS  DS    A                   A(COMMON FACILITIES)                         
EATPRINT DS    A                   A(ESSIO LOCAL PRINTER)                       
EATPRINC DS    A                   A(ESSIO LOCAL PRINTER CONTROL BLOCK)         
EATDATA  DS    A                   A(ESSIO MESSAGE DATA)                        
EATWORK  DS    A                   A(ESSIO MESSAGE WORK AREA)                   
EATPQHDR DS    A                   A(ESSIO PQ HEADER RECORD)                    
EATEDHDR DS    A                   A(ESSIO PQ REPORT HEADER)                    
EATPQBUF DS    A                   A(ESSIO PQ IO BUFFER)                        
EATBLDCB DS    A                   A(BULK DOWNLOAD MVS DATA SET DCB)            
*                                                                               
EATENUM  DS    XL2                 ESS ID NUMBER                                
EATNAME  DS    CL8                 ESS ID NAME                                  
EATELUID DS    CL8                 MAINFRAME-ESS LUID FOR APPC OPEN             
EATEPWD  DS    CL8                 ESS PASSWORD                                 
*                                                                               
EATSTATE DS    XL4                 ESSIO STATE CODE                             
EATSOFFQ EQU   0                   TERMINATED                                   
EATSRUNQ EQU   1                   RUNNING                                      
EATSRDYQ EQU   2                   ESSIO READY AND WAITING FOR REQUEST          
EATSBSYQ EQU   3                   ESSIO BUSY WITH REQUEST                      
*                                                                               
EATMODE  DS    XL4                 ESSIO SYSTEM MODE CODE                       
EATMRCVQ EQU   1                   hostess RECEIVE REQUESTS                     
EATMSNDQ EQU   2                   hostess SEND REQUESTS                        
*                                                                               
EATABEND DS    XL4                 ESS ABEND CODE                               
*                                                                               
EATLQ    EQU   ((*-ESSATCD+7)/8)*8   FORCE BLOCK LENGTH TO WORD BOUNDRY         
                                                                                
ESSFACS - List of common facilities                                             
-----------------------------------                                             
Defined in DSECT ESSFACSD, see DDESSFACS and CSECT in DDESSFACSC                
                                                                                
         EJECT                                                                  
ESS APPC sub task.                                                              
------------------                                                              
    The main task attaches a send and receive pair of sub tasks for each        
ESS id under its control. The phase ESSIO is attached and passed the            
address of a control block as defined in DSECT 'ESSATCD'. This contains         
status information used to configure and drive the logic of ESSIO.              
See 'HOSTESS APPC protocols' below for more detailed description of             
APPC message structures.                                                        
                                                                                
Program functions:                                                              
------------------                                                              
Get address of ESSATC, the status control block passed in the ATTACH.           
Initialise data areas and control blocks                                        
Wait on APPC LU to accept input allocate from ESS. (OPEN FOR INPUT.)            
Do HANDSHAKE APPC logic.                                                        
Test if ESSIO in sender or receiver mode.                                       
Start Sender loop:                                                              
Wait on event from main task to signal message waiting or shutdown.             
Do SEND APPC message logic.                                                     
Return to loop - Exit if APPC error or operator shutdown.                       
Deallocate APPC                                                                 
Close APPC                                                                      
EXIT.                                                                           
Start Receiver loop:                                                            
Wait to receive messaage from ESS sender or main task shutdown signal.          
So RECEIVE APPC message logic.                                                  
Return to loop - Exit if APPC deallocate, error or operator shutdown.           
Close APPC                                                                      
EXIT.                                                                           
                                                                                
Data structures:                                                                
----------------                                                                
                                                                                
ESSHDR - ESS APPC message header structure                                      
------------------------------------------                                      
ESSHDR   DS    0CL16               MESSAGE HEADER                               
ESSHDDS  DS    CL2                 DDS TEXT FIELD C'DD'                         
*                                                                               
ESSHMTY  DS    CL1                 MESSAGE TYPE C=CTL,E=ERR,I=INF,R=REQ         
ESSHCTLQ EQU   C'C'                CONTROL MSG                                  
ESSHERRQ EQU   C'E'                ERROR MESSAGE                                
ESSHINFQ EQU   C'I'                INFORMATION MSG                              
ESSHREQQ EQU   C'R'                REQUEST MSG                                  
*                                                                               
ESSHMID  DS    CL3                 MESSAGE ID                                   
ESSHSQLQ EQU   C'010',3,C'C'       SQL EXTRACT SUB SYSTEM                       
ESSHPQRQ EQU   C'PQR',3,C'C'       PQ REPORT SUB SYSTEM                         
*                                                                               
ESSHSID  DS    XL2                 SENDER ID                                    
ESSHDTTM DS    XL4                 MESSAGE DATE/TIME (SECS SINCE 1992)          
*                                                                               
ESSHPCF  DS    XL1                 HEADER PC FLAGS (ESS)                        
ESSHMFF  DS    XL1                 HEADER MF FLAGS (HOSTESS)                    
ESSHLSTQ EQU   X'80'               LAST FRAM (NO MORE DATA TO COME)             
ESSHBDLQ EQU   X'40'               BULK DOWNLOAD FLAG                           
*                                                                               
         DS    XL1                 SPARE                                        
*                                                                               
ESSHHTY  DS    XL1                 HEADER TYPE FLAGS                            
ESSHXTNQ EQU   X'80'               EXTENDED FILE HEADER                         
ESSHDATQ EQU   X'40'               DATA FOLLOWS HEADER                          
ESSHDRX  EQU   *                   END OF MESSAGE HEADER                        
*                                                                               
*                                                                               
ESSHDR1  DS    0CL32               MESSAGE HEADER ONE                           
ESSHREF  DS    XL4                 REQUEST REFERENCE                            
ESSHPRI  DS    CL1                 REQUEST PRIORITY                             
ESSHSYS  DS    CL3                 REQUEST SYSTEM                               
ESSHPRG  DS    CL3                 REQUEST PROGRAM                              
ESSHUID  DS    CL8                 REQUEST USERID                               
ESSHPWD  DS    CL8                 REQUEST PASSWORD                             
*                                                                               
ESSH1FL  DS    XL1                 HEADER ONE FLAGS                             
ESSHNOTQ EQU   X'80'               DO NOT TRANSLATE DATA                        
*                                                                               
         DS    CL4                 SPARE                                        
ESSHDR1X EQU   *                   END OF MESSAGE HEADER ONE                    
                                                                                
ESSDATAD - ESS APPC message common data save block                              
--------------------------------------------------                              
ESSDATAD DSECT                     ESS MESSAGE COMMON DATA SAVE BLOCK           
*                                                                               
*                                  GENERAL MESSAGE VALUES                       
ESSDMLN  DS    XL2                 MESSAGE LENGTH                               
ESSDDLN  DS    XL2                 DATA BUFFER LENGTH                           
ESSDMODE DS    XL1                 ESS MESSAGE PROCESS MODE CODE                
ESSDMRCQ EQU   X'01'               RECEIVE MODE                                 
ESSDMSNQ EQU   X'03'               SEND MODE                                    
ESSDSEQN DS    XL1                 ESS MESSAGE SEQUENCE CODE                    
ESSDSFSQ EQU   X'00'               FIRST IN SEQUENCE                            
ESSDSNXQ EQU   X'01'               NEXT IN SEQUENCE                             
ESSDSLSQ EQU   X'02'               LAST IN SEQUENCE                             
ESSDRETC DS    XL1                 ESS MESSAGE PROCESS RETURN CODE              
ESSDROKQ EQU   X'00'               NO ERROR/TRANSFER TABLE ENTRY FOUND          
ESSDRNFQ EQU   X'01'               TRANSFER TABLE ENTRY NOT FOUND               
ESSDRE1Q EQU   X'F1'               ERROR CODE 1                                 
ESSDRE2Q EQU   X'F2'               ERROR CODE 2                                 
ESSDRFFQ EQU   X'FF'               OTHER GENERAL ERROR CODE                     
ESSDRCNT DS    PL8                 FILE RECORD COUNT                            
ESSDRNUM DS    PL8                 FILE RECORD NUMBER                           
ESSDBLKD DS    CL1                 BULK DATA DOWNLOAD MODE FLAG                 
ESSDBLKO DS    CL1                 BULK DATA DOWNLOAD FILE OPEN FLAG            
*                                                                               
*                                  MESSAGE HEADER FIELD VALUES                  
ESSDMTYP DS    CL1                 MESSAGE TYPE                                 
ESSDMID  DS    CL3                 MESSAGE ID                                   
ESSDCON  DS    CL6                 CONDITION CODE                               
*                                                                               
ESSDSID  DS    XL2                 SENDER ID NUMBER                             
ESSDSNAM DS    CL8                 SENDER ID NAME (ESSNNNNN)                    
ESSDMDTM DS    XL4                 MESSAGE DATE/TIME                            
ESSDPCF  DS    XL1                 PC FLAGS                                     
ESSDMFF  DS    XL1                 MAINFRAME FLAGS                              
ESSDHTYP DS    XL1                 HEADER TYPE                                  
*                                                                               
*                                  MESSAGE EXTENDED HEADER 1 VALUES             
ESSDREF  DS    CL11                REQUEST REFERENCE                            
ESSDREFB DS    XL4                 REQUEST REFERENCE BINARY                     
ESSDPRI  DS    CL1                 REQUEST PRIORITY                             
ESSDSYS  DS    CL3                 REQUEST SYSTEM                               
ESSDPRG  DS    CL3                 REQUEST PROGRAM                              
ESSDUID  DS    CL8                 REQUEST USERID                               
ESSDPWD  DS    CL8                 REQUEST PASSWORD                             
ESSDH1FL DS    CL1                 EXTENDED HEADER 1 FLAGS                      
*                                                                               
*                                  EXCHANGE MESSAGE FIELD VALUES                
ESSDXTXT DS    CL8                 EXCHANGE TEXT                                
ESSDXID  DS    CL6                 EXCHANGE INTEGER ID                          
ESSDXPWD DS    CL8                 EXCHANGE PASSWORD                            
ESSDXNID DS    CL8                 EXCHANGE NETWORK ID                          
ESSDXLU  DS    CL8                 LOGICAL UNIT ID                              
ESSDXTPN DS    CL8                 TRANSACTION PROGRAM NAME                     
ESSDXVER DS    CL2                 VERSION                                      
ESSDXLEV DS    CL2                 LEVEL                                        
ESSDXDAT DS    CL8                 DATE                                         
ESSDXTIM DS    CL6                 TIME                                         
*                                                                               
ESSDHDRL EQU   *-ESSDATAD          LENGTH OF HEADER PART OF DSECT               
*                                                                               
ESSDBUFF DS    CL10000             MESSAGE DATA BUFFER                          
*                                                                               
ESSDATAL EQU   *-ESSDATAD          LENGTH OF DSECT                              
                                                                                
         EJECT                                                                  
Sub system APPC modules.                                                        
------------------------                                                        
    Routines required to process APPC messages for specific sub systems         
of data managed by HOSTESS are contained in separate modules called by          
the main processes described above. These routines are passed the               
address of the callers ESSATC which in turn contains status                     
information, control blocks and work areas used to build and                    
validate the message data, including:                                           
Address of general message data save area.                                      
Address of sub system module message data save area.                            
Address of sub system specific message area.                                    
Address of list of common system facilities                                     
Address of system status control block.                                         
                                                                                
SQL EXTRACT sub system APPC module - EIOSQL                                     
-------------------------------------------                                     
Program functions:                                                              
------------------                                                              
Build EXTRACT file ready to send notification message to send to ESS.           
Build BULK DOWNLOAD records from EXTRACT file to send to ESS.                   
Validate EXTRACT file Receive acknowledgement message from ESS.                 
Validate EXTRACT file Commit acknowledgement message from ESS.                  
Update EXTRACT sub system trasfer Control records.                              
Allocate and write out EXTRACT Commit LOG data to MVS data set.                 
Handle error conditions.                                                        
Report to SYSOUT ESSLOG and LOGIO to Operator command line.                     
                                                                                
Data structures:                                                                
----------------                                                                
ESSSQL - SQL EXTRACT sub system APPC message structure.                         
--------------------------------------------------------                        
ESQLDAT  DS    0CL64               SQL EXTRACT SUB-SYSTEM MESSAGE DATA          
*                                                                               
ESQLMID  DS    CL4                 sql extract sub system MESSAGE ID            
*                                                                               
ESQLCOMQ EQU   C'0010',4,C'C'      FILE COMMITTED BY ESS                        
ESQLRCVQ EQU   C'0020',4,C'C'      FILE RECEIVED BY ESS                         
ESQLNOTQ EQU   C'0030',4,C'C'      FILE READY TO SEND NOTIFY ESS                
ESQLRESQ EQU   C'0040',4,C'C'      RETRY SEND OF FILE TO ESS                    
ESQLRCOQ EQU   C'0050',4,C'C'      RETRY COMMIT OF FILE                         
*                                                                               
ESQLCON  DS    CL6                 CONDITION CODE                               
*                                                                               
ESQLAID  DS    CL2                 AGENCY ALPHA ID                              
ESQLSYS  DS    CL1                 SYSTEM CHARACTER CODE                        
ESQLSUB  DS    CL1                 SUB SYSTEM CHARACTER CODE                    
ESQLFNUM DS    CL8                 FILE SEQUENCE NUMBER                         
         ORG   ESQLFNUM                                                         
ESQLLOAD DS    CL1                 LOAD CONTROL CHARACTER                       
         ORG   ESQLFNUM+L'ESQLFNUM                                              
ESQLDSN  DS    CL44                FILE MVS DATA SET NAME                       
ESQLRNM  DS    CL8                 NUMBER OF RECORDS IN FILE                    
ESQLBNM  DS    CL10                NUMBER OF BYTES IN FILE                      
ESQLMTO  DS    CL12                TOTAL AMOUNT OF MONEY CHECKSUM               
ESQLSKEY DS    CL8                 SERVER KEY                                   
ESQLDATX EQU   *                   END OF FIXED PART OF MESSAGE                 
*                                                                               
ESQLLOG  DS    0CL4000             TRANSFER LOG DATA                            
                                                                                
EIOSQLD - SQL EXTRACT sub system APPC message data save area                    
------------------------------------------------------------                    
EIOSQLD  DSECT                     ESS MESSAGE DATA EXTRACT BLOCK               
*                                    FOR SQL EXTRACT SUB SYSTEM                 
EIOSMID  DS    CL4                                                              
EIOSCON  DS    CL6                                                              
EIOSMAID DS    CL2                                                              
EIOSMSYS DS    XL1                                                              
EIOSMSUB DS    XL1                                                              
EIOSMFNM DS    XL2                                                              
EIOSLOAD DS    CL1                                                              
EIOSMDSN DS    CL44                                                             
EIOSMVER DS    CL1                                                              
EIOSMLEV DS    CL1                                                              
EIOSMRNM DS    PL8                                                              
EIOSMBNM DS    PL8                                                              
EIOSMMTO DS    PL8                                                              
EIOSMSKY DS    CL8                                                              
EIOSMSER DS    CL16                                                             
EIOSMDBS DS    CL16                                                             
EIOSMGNM DS    XL2                                                              
*                                                                               
EIOSQLDL EQU   *-EIOSQLD           LENGTH OF DSECT                              
*                                                                               
EIOSMLOG DS    0CL4000                                                          
                                                                                
         EJECT                                                                  
PIANO PQ report sub system APPC module - EIOPQR                                 
-----------------------------------------------                                 
Program functions:                                                              
------------------                                                              
Build PQ report ready to send notification message to send to ESS.              
Validate status of PQ report.                                                   
Process PQ report header fields and extract information for ESS.                
Build BULK DOWNLOAD records from PQ report to send to ESS.                      
Validate PQ report Receive acknowledgement message from ESS.                    
Validate SOON job request message from ESS and write request                    
Write SOON job request to PQ for MONSOON processing.                            
Update PQ report header status information.                                     
Handle error conditions.                                                        
Report to SYSOUT ESSLOG and LOGIO to Operator command line.                     
                                                                                
Data structures:                                                                
----------------                                                                
EIOPQRD - PIANO PQ report sub system APPC message data save area                
----------------------------------------------------------------                
EIOPQRD  DSECT                     ESS MESSAGE DATA EXTRACT BLOCK               
*                                    FOR PQ REPORT SUB SYSTEM                   
EIOPMID  DS    CL4                 ESSIO MESSAGE ID                             
EIOPCON  DS    CL6                 CONDITION CODE                               
EIOPUID  DS    CL10                USERID ALPHA                                 
EIOPUIDN DS    XL2                 USERID NUMBER                                
EIOPSYS  DS    CL3                 SHORT SYSTEM NAME                            
EIOPPGM  DS    CL2                 PROGRAM                                      
EIOPPRY  DS    CL1                 PRIORITY                                     
EIOPJID  DS    CL11                ESS REFERENCE JOB ID                         
EIOPLOGN DS    XL2                 REPORT LOGICAL NUMBER                        
EIOPSPAG DS    CL6                 REPORT START PAGE                            
EIOPEPAG DS    CL6                 REPORT END PAGE                              
EIOPSID  DS    CL3                 REPORT SUB ID                                
EIOPNUMB DS    XL2                 REPORT REFERENCE NUMBER BINARY               
EIOPNUM  DS    CL5                 REPORT REFERENCE NUMBER                      
EIOPPQN  DS    XL1                 REPORT PQ NUMBER                             
EIOPCLAS DS    CL1                 REPORT CLASS                                 
EIOPDESC DS    CL11                REPORT DESCRIPTION                           
EIOPNLIN DS    CL6                 REPORT NUMBER OF LINES                       
EIOPNPAG DS    CL6                 REPORT NUMBER OF PAGES                       
EIOPCPL  DS    CL3                 REPORT AVERAGE CHRS PER LINE                 
EIOPLPP  DS    CL3                 REPORT LINES PER PAGE                        
EIOPDATC DS    XL6                 REPORT CREATE DAY                            
EIOPTIMC DS    XL4                 REPORT CREATE TIME                           
EIOPRPWD DS    CL8                 REPORT PASSWORD                              
EIOPFRMS DS    CL4                 REPORT FORMS CODE                            
EIOPCHRS DS    CL4                 REPORT CHARACTER SET                         
EIOPCPYS DS    CL3                 REPORT NUMBER OF COPIES                      
EIOPATTR DS    CL2                 REPORT ATTRIBUTE BYTE                        
EIOPSTAT DS    CL2                 REPORT STATUS BYTE                           
EIOPEXPR DS    CL8                 REPORT EXPIRY DATETIME                       
EIOPFMAT DS    CL1                 REPORT FORMAT                                
EIOPTYPE DS    CL2                 REPORT TYPE                                  
EIOPCUNT DS    CL2                 REPORT SENT COUNT                            
EIOPSLUI DS    CL8                 REPORT SENT LUID                             
EIOPSENT DS    CL8                 REPORT DATE/TIME SENT (MMDDHHMM)             
EIOPMAKE DS    CL5                 REPORT SOURCE PROG SPPSS                     
EIOPSIZE DS    CL2                 REPORT SIZE 1-FF                             
*                                                                               
EIOPRCF  DS    CL1                 REQUEST JOB DATA CARD TYPE                   
EIOPCRDS DS    20CL80              ROOM FOR 20 REQUEST CARDS                    
EIOPCCNT DS    X                   NUMBER OF REQUEST CARDS                      
EIOPCPOS DS    A                   A(CURRENT CARD POSN)                         
EIOPCLFT DS    X                   COLS REMAINING ON CARD                       
*                                                                               
EIOPXTE  DS    XL(XMTTBLQ)         SAVED EDICT TRANSMIT TABLE ENTRY             
*                                                                               
EIOPREQC DS    X                   BITS FOR REQUIRED DATA FROM ESS              
*                                                                               
*                                  PQ SEQUENTIAL READ SAVE AREAS                
EIOPFID  DS    CL8                 PQ FILE ID                                   
EIOPPAGE DS    XL2                 PQ READ PAGE COUNT                           
EIOPLNUM DS    XL2                 PQ READ LINE NUMBER                          
EIOPEOF  DS    CL1                 PQ READ EOF FLAG                             
EIOPEJCT DS    CL1                 PQ READ EJECT FLAG                           
EIOPLAB  DS    CL8                 PQ BUFFER LABEL                              
EIOPSKSV DS    XL4                 PQ SK BUFFER SAVE DISPLACEMENT               
EIOPSVPB DS    XL96                PQ SAVE END OF BUFFER                        
*                                                                               
EIOPVAL  DS    XL500               GENERAL DATA AREA                            
*                                                                               
EIOPQRDL EQU   *-EIOPQRD           LENGTH OF DSECT                              
                                                                                
ESSPQR - PIANO PQ report sub system APPC message structures                     
-----------------------------------------------------------                     
EPQRDAT  DS    0CL64               PQ REPORT SUB-SYSTEM MESSAGE DATA            
*                                                                               
EPQRMID  DS    CL4                 pq report sub system MESSAGE ID              
EPQRRCVQ EQU   C'0020',4,C'C'      REPORT RECEIVED BY ESS                       
EPQRRESQ EQU   C'0040',4,C'C'      RETRY SENDING OF REPORT TO ESS               
EPQRNRQQ EQU   C'0031',4,C'C'      NOTIFY DOWNLOAD OF REQUESTED REPORT          
EPQRNSOQ EQU   C'0032',4,C'C'      NOTIFY DOWNLOAD OF SOON JOB REPORT           
EPQRNSHQ EQU   C'0033',4,C'C'      NOTIFY DOWNLOAD OF SHUTTLE REPORT            
EPQRINQQ EQU   C'0110',4,C'C'      INQUIRE ABOUT PQ REPORT ID                   
EPQRREQQ EQU   C'0120',4,C'C'      REQUEST TO SEND PQ REPORT ID                 
EPQRSONQ EQU   C'0130',4,C'C'      SOON REQUEST                                 
*                                                                               
EPQRUIDQ EQU   C'UID*',4,C'C'      USERID                                       
EPQRSYSQ EQU   C'SYS*',4,C'C'      SYSTEM                                       
EPQRPGMQ EQU   C'PGM*',4,C'C'      PROGRAM                                      
EPQRPRYQ EQU   C'PRY*',4,C'C'      PRIORITY                                     
EPQREIDQ EQU   C'EID*',4,C'C'      ESS REFERENCE JOB ID                         
EPQRRQTQ EQU   C'RQT*',4,C'C'      REQUEST CARDS                                
EPQRFLDQ EQU   C'FLD*',4,C'C'      FIELD FORMAT REQUEST                         
*                                                                               
EPQRDATA DS    0X                  PQ REPORT MESSAGE DATA                       
*                                                                               
         ORG   EPQRDATA            PQR MESSAGE STRUCTURE 1                      
*                                                                               
EPQRRCF  DS    CL1                 SOON JOB DATA CARD FORMAT                    
EPQRRCFR EQU   C'R'                REQUEST CARD FORMAT                          
EPQRRCFF EQU   C'F'                FIELD FORMAT                                 
EPQRVAL  DS    20CL80              AREA FOR JOB DATA VALUES                     
*                                    (MAXIMUM 20 REQUEST CARDS)                 
*                                                                               
         ORG   EPQRDATA            PQR MESSAGE STRUCTURE 2                      
*                                                                               
EPQRCON  DS    CL6                 CONDITION CODE                               
EPQRSID  DS    CL3                 REPORT SUB ID                                
EPQRNUM  DS    CL5                 REPORT REFERENCE NUMBER                      
EPQRSPAG DS    CL6                 START PAGE                                   
EPQREPAG DS    CL6                 END PAGE                                     
EPQRCLAS DS    CL1                 REPORT CLASS                                 
EPQRDESC DS    CL11                REPORT DESCRIPTION                           
EPQRNLIN DS    CL6                 NUMBER OF LINES                              
EPQRNPAG DS    CL6                 NUMBER OF PAGES                              
EPQRCPL  DS    CL3                 AVERAGE CHRS PER LINE                        
EPQRLPP  DS    CL3                 LINES PER PAGE                               
EPQRDATC DS    CL6                 DATE CREATED C'YYMMDD'                       
EPQRTIMC DS    CL4                 TIME CREATED C'HHMM'                         
EPQRRPWD DS    CL8                 REPORT PASSWORD                              
EPQRFRMS DS    CL4                 REPORT FORMS CODE                            
EPQRCHRS DS    CL4                 REPORT CHARACTER SET                         
EPQRCPYS DS    CL3                 NUMBER OF COPIES                             
         DS    CL80                N/D                                          
*                                                                               
EPQRDSN  DS    CL44                MVS DATA SET NAME FOR FTP DOWNLOAD           
*                                                                               
*                                  MULTIPLE REPORT BLOCK                        
*                                                                               
EPQRBREP DS    CL5                 NUMBER OF REPORTS IN BLOCK                   
EPQRBSID DS    CL3                 BLOCK REPORT SUB ID                          
EPQRBNUM DS    CL5                 BLOCK REPORT REFERENCE NUMBER                
EPQRBLEN EQU   *-EPQRBSID                                                       
EPQRBMAX EQU   30                                                               
         ORG   EPQRBSID                                                         
EPQBBLCK DS    XL(EPQRBLEN*EPQRBMAX)                                            
*                                                                               
EPQRDATX EQU   *                   END OF PQ REPORT SUB-SYSTEM MESSAGE          
                                                                                
         EJECT                                                                  
HOSTESS Common routines                                                         
-----------------------                                                         
                                                                                
EXSERV - SQL EXTRACT sub system control file services.                          
------------------------------------------------------                          
    This module is a set of services which provide an interface                 
to the SQL EXTRACT sub system control records in the FACPAK CONTROL             
system file. This maintains a table, EXTTAB, which holds the                    
EXTRACT data transfer status for each ESS id and associated set of              
extract data files.                                                             
Services include:                                                               
Initialise entries in EXTTAB.                                                   
Recover status on restart.                                                      
Update entries in EXTTAB with current staus information.                        
Return next Extract file ready to send to ESSid.                                
Set Extract file recommit status.                                               
Return recommit data.                                                           
Recommit Extract file acknowledge                                               
Record Extract file ready toor send notification.                               
Record Extract file receive acknowledgement.                                    
Record Extract file commit acknowledgement.                                     
Resend Extract file.                                                            
Process Operator command line message.                                          
Process Operator command line message.                                          
                                                                                
    The module is passed the address of a control block:                        
EXSERVD - EXSERV control block                                                  
------------------------------                                                  
EXSERVD  DSECT                                                                  
*                                                                               
EXSACTN  DS    CL4                 ACTION CODE                                  
*                                                                               
EXSAINXQ EQU   C'INX ',4,C'C'      INITIALISE EXTTAB FOR GIVEN ESSID            
EXSARECQ EQU   C'REC ',4,C'C'      RECOVER EXTTAB VALUES ON RESTART             
EXSAUPXQ EQU   C'UPX ',4,C'C'      UPDATE EXTTAB/RETURN XTRANSFER FLAG          
EXSARTSQ EQU   C'RTS ',4,C'C'      RETURN DATA FOR FILES READY TO SEND          
EXSASRCQ EQU   C'SRC ',4,C'C'      SET FILE RECOMMIT STATUS                     
EXSARCOQ EQU   C'RCO ',4,C'C'      RETURN FILE RECOMMIT DATA                    
EXSARCAQ EQU   C'RCA ',4,C'C'      FILE RECOMMIT MESSAGE ACKNOWLEDGE            
EXSANOTQ EQU   C'NOT ',4,C'C'      NOTIFIED OF FILE READY TO SEND               
EXSARCVQ EQU   C'RCV ',4,C'C'      RECEIVED FILE                                
EXSACOMQ EQU   C'COM ',4,C'C'      COMMITTED FILE                               
EXSARESQ EQU   C'RES ',4,C'C'      RESEND FILE                                  
EXSACMDQ EQU   C'CMD ',4,C'C'      COMMAND LINE CONTROL                         
*                                                                               
*                                  RETURN CODES                                 
EXSROKQ  EQU   X'00'               OK                                           
EXSRNOQ  EQU   X'01'               NO ENTRY FOUND                               
EXSEIN1Q EQU   X'10'               PROCINX ERROR 1                              
EXSEIN2Q EQU   X'11'               PROCINX ERROR 2                              
EXSERE1Q EQU   X'12'               PROCREC ERROR 1                              
EXSERE2Q EQU   X'13'               PROCREC ERROR 2                              
EXSEUP1Q EQU   X'14'               PROCUPX ERROR 1                              
EXSERT1Q EQU   X'15'               PROCRTS ERROR 1                              
EXSESR1Q EQU   X'16'               PROCSRC ERROR 1                              
EXSERO1Q EQU   X'17'               PROCRCO ERROR 1                              
EXSERA1Q EQU   X'18'               PROCRCA ERROR 1                              
EXSENO1Q EQU   X'19'               PROCNOT ERROR 1                              
EXSERC1Q EQU   X'1A'               PROCRCV ERROR 1                              
EXSECO1Q EQU   X'1B'               PROCCOM ERROR 1                              
EXSERS1Q EQU   X'1C'               PROCRET ERROR 1                              
EXSECM1Q EQU   X'1D'               PROCCMD ERROR 1                              
EXSEUPXQ EQU   X'80'               UPXCREC ERROR + SUB CODE OFFSET              
EXSRER1Q EQU   X'FF'               ERROR 1                                      
*                                                                               
EXSCON   DS    CL6                 CONDITION CODE                               
EXSCOKQ  EQU   C'0'                FIRST DIGIT = 0 FOR WARNING ELSE             
*                                     ERROR CODE IN NEXT 5 DIGITS               
EXSDATA  DS    AL4                 A(GENERAL DATA AREA)                         
EXSENUM  DS    XL2                 ESS ID NUMBER                                
EXSEID   DS    CL8                 ESS SERVER LUID                              
EXSAGY   DS    CL2                 AGENCY ALPHA CODE                            
EXSSYS   DS    XL1                 SYSTEM                                       
EXSSUB   DS    XL1                 SUB SYSTEM                                   
EXSDAC   DS    XL2                 DATE FILE CREATED                            
EXSTIC   DS    XL4                 TIME FILE CREATED                            
EXSGNUM  DS    XL2                 FILE GENERATION NUMBER                       
EXSLOAD  DS    CL1                 LOAD CONTROL                                 
EXSMOD   DS    CL1                 EXTRACT PROCESS MODE (L/U)                   
EXSFNUM  DS    XL2                 SERVER FILE GENERATION NUMBER                
EXSDSN   DS    CL44                FILE DSN                                     
EXSLEV   DS    XL1                 EXTRACT PROCESS LEVEL NUMBER                 
EXSVER   DS    XL1                 EXTRACT PROCESS VERSION NUMBER               
EXSRNM   DS    PL8                 NUMBER OF RECORDS IN FILE                    
EXSBNM   DS    PL8                 NUMBER OF BYTES IN FILE                      
EXSMTO   DS    PL8                 MONEY TOTAL CHECKSUM                         
EXSSKEY  DS    CL8                 SERVER APPLICATION KEY                       
EXSSER   DS    CL16                SERVER NAME                                  
EXSDBS   DS    CL16                DATABASE NAME                                
EXSAGB   DS    XL1                 AGENCY BINARY CODE                           
EXSFAC   DS    XL1                 FACPAK ID                                    
EXSTYP   DS    CL3                 RECORD TYPE CODE                             
EXSDCR   DS    XL2                 DATE CREATED                                 
EXSTCR   DS    XL4                 TIME CREATED                                 
EXSDNO   DS    XL2                 DATE NOTIFIED DATE                           
EXSTNO   DS    XL4                 TIME NOTIFIED TIME                           
EXSRNO   DS    CL6                 RETURN CODE NOTIFICATION                     
EXSDRE   DS    XL2                 DATE RECEIVE ACKNOWLEDGE                     
EXSTRE   DS    XL4                 DATE RECEIVE ACKNOWLEDGE                     
EXSRRE   DS    CL6                 STATUS CODE RECEIVE ACKNOWLEDGE              
EXSDCO   DS    XL2                 CONFIRM DATE                                 
EXSTCO   DS    XL4                 COMFIRM TIME                                 
EXSRCO   DS    CL6                 STATUS CODE CONFIRMED                        
EXSCLINE DS    CL80                COMMAND LINE PARAMETERS                      
         SPACE 1                                                                
*                                                                               
EXSLENQ  EQU   *-EXSERVD           LENGTH EXSERV CONTROL BLOCK                  
*                                                                               
EXTCTBLD DSECT                     EXTRACT TRANSFER CONTROL TABLE               
*                                  EXTRACT DESTINATION KEY VALUES               
EXTCEID  DS    CL8                 REMOTE ESS SERVER ID NAME (ESSNNNNN)         
EXTCAGY  DS    CL2                 AGENCY ALPHA CODE                            
EXTCSYS  DS    XL1                 SYSTEM                                       
EXTCSUB  DS    XL1                 SUB SYSTEM                                   
EXTCKEYQ EQU   *-EXTCTBLD                                                       
*                                                                               
EXTCCRFN DS    XL2                 LAST FILE NUMBER - CREATED                   
EXTCNOFN DS    XL2                 LAST FILE NUMBER - NOTIFIED                  
EXTCREFN DS    XL2                 LAST FILE NUMBER - RECEIVED                  
EXTCCOFN DS    XL2                 LAST FILE NUMBER - COMMITTED                 
EXTCFCOD DS    CL1                 TRANSFER FREQUENCY CODE                      
EXTCFTIM DS    XL2                 TRANSFER FREQUENCY TIME                      
EXTCMODE DS    CL1                 TRANSFER MODE CODE                           
EXTCFLG1 DS    XL1                 FLAGS                                        
EXTCFCOQ EQU   X'01'               RECOMMIT FLAG                                
         DS    XL1                 N/D                                          
EXTCTBLQ EQU   *-EXTCTBLD                                                       
                                                                                
CMAPPC - APPC management services.                                              
----------------------------------                                              
Program fucntions                                                               
-----------------                                                               
    These are a set of routines that provide a CPIC style interface to          
the basic DDS APPC LU6.2 services.                                              
Services include:                                                               
Initialise Control blocks to open conversation.                                 
Accept conversation - Open conversation for input.                              
Receive data.                                                                   
Send data.                                                                      
Send and Flush data.                                                            
Send data and Confirm.                                                          
Send data and switch to receive mode.                                           
Deallocate conversation.                                                        
Close conversation.                                                             
Receive with confirmation.                                                      
General interface, pass parameter to specify service required.                  
                                                                                
Data structures                                                                 
---------------                                                                 
SYMDESTD DSECT                     SYMBOLIC DESTINATION BLOCK                   
*                                                                               
SYMDLUM  DS    CL8                 MY LUID                                      
SYMDLUP  DS    CL8                 PARTNER LUID                                 
SYMDMODE DS    CL8                 VTAM MODE                                    
SYMDTPNM DS    CL8                 TRANSACTION PROGRAM NAME                     
*                                                                               
SYMDLENQ EQU   *-SYMDESTD          LENGTH SYMDEST CONTROL BLOCK                 
*                                                                               
CMIDD    DSECT                     CONVERSATION MANAGER ID BLOCK                
*                                                                               
CMIDAPPC DS    AL4                 A(APPC CONTROL BLOCK)                        
CMIDSYMD DS    AL4                 A(SYMBOLIC DESTINATION BLOCK)                
CMIDLOG  DS    AL4                 A(DMCB FOR APPC CALL LOG)                    
CMIDECB  DS    AL4                 ECB FOR APPC CALL                            
*                                                                               
CMIDACTN DS    CL4                 ACTION CODE                                  
*                                                                               
CMIDINIQ EQU   C'INIT',4,C'C'      ACTION INITIALISE                            
CMIDACPQ EQU   C'ALLC',4,C'C'      ACTION ACCEPT                                
CMIDRCVQ EQU   C'RCV ',4,C'C'      ACTION RECEIVE                               
CMIDSNDQ EQU   C'SEND',4,C'C'      ACTION SEND DATA                             
CMIDSNFQ EQU   C'SNF ',4,C'C'      ACTION SEND AND FLUSH                        
CMIDSNCQ EQU   C'SNC ',4,C'C'      ACTION SEND AND CONFIRM                      
CMIDSNRQ EQU   C'SNR ',4,C'C'      ACTION SEND AND RECEIVE                      
CMIDDEAQ EQU   C'DEAL',4,C'C'      ACTION DEALLOCATE                            
CMIDCFMQ EQU   C'CFMD',4,C'C'      ACTION SEND CONFIRMED                        
CMIDCLOQ EQU   C'CLOS',4,C'C'      ACTION CLOSE                                 
*                                                                               
CMIDATCB DS    AL4                 A(ESSIO ATTACHED TASK CONTROL BLOCK)         
*                                                                               
CMIDLENQ EQU   *-CMIDD             LENGTH CMID CONTROL BLOCK                    
*                                                                               
*                                  CM CALL RETURN STATUS CODES                  
*                                                                               
CMRCOKQ  EQU   X'00'               RETURN CODE OK                               
CMRCER1Q EQU   X'01'               RETURN CODE ERROR 1                          
CMRCER2Q EQU   X'02'               RETURN CODE ERROR 2                          
CMRCER3Q EQU   X'04'               RETURN CODE ERROR 4                          
CMRCECBQ EQU   X'08'               RETURN CODE ECB POSTED                       
CMRCRTSQ EQU   X'80'               REQUEST TO SEND RECEIVED                     
CMRCCONQ EQU   X'40'               REQUEST TO CONFIRM RECEIVED                  
CMRCDEAQ EQU   X'0C'               DEALOCATE STATUS RECEIVED                    
*                                                                               
APPCD    DSECT                     APPC CALL CONTROL BLOCK DSECT                
*                                                                               
APPCPLST DS    0D                  APPC CALL PARAMETER LIST                     
         DS    AL4                 (APPCACTN)                                   
         DS    AL4                 (APPCTOKN)                                   
         DS    AL4                 (APPCDATA)                                   
         DS    AL4                 (APPCEPLC)                                   
         DS    AL4                 (APPCLOG)                                    
         DS    AL4                 (APPCMAXC)                                   
         DS    XL4                 '80000000'+ECB                               
*                                                                               
APPCMAXC DS    H                   MAXIMUM NUMBER OF CONVERSATIONS              
*                                                                               
APPCACTN DS    CL4                 ACTION CODE                                  
APPCACOS EQU   C'OS  ',4,C'C'      ACTION OPEN SEND                             
APPCACOR EQU   C'OR  ',4,C'C'      ACTION OPEN RECEIVE                          
APPCACOI EQU   C'OI  ',4,C'C'      ACTION OPEN FOR INPUT                        
APPCACSD EQU   C'SD  ',4,C'C'      ACTION SEND DATA                             
APPCACSF EQU   C'SF  ',4,C'C'      ACTION SEND FLUSH                            
APPCACSC EQU   C'SC  ',4,C'C'      ACTION SEND CONFIRMATION                     
APPCACSR EQU   C'SR  ',4,C'C'      ACTION SEND/RECEIVE                          
APPCACR  EQU   C'R   ',4,C'C'      ACTION RECEIVE                               
APPCACRC EQU   C'RC  ',4,C'C'      ACTION RECEIVER SEND CONFIRM                 
APPCACCP EQU   C'CP  ',4,C'C'      ACTION CLOSE/PREPARE                         
APPCACDC EQU   C'DC  ',4,C'C'      ACTION DEALLOCATE/CONFIRM                    
APPCACD  EQU   C'D   ',4,C'C'      ACTION DEALLOCATE                            
APPCACC  EQU   C'C   ',4,C'C'      ACTION CLOSE                                 
*                                                                               
APPCTOKN DS    F                                                                
APPCEPLC DS    CL8                 PROVIDED BY APPC OPEN CALL                   
*                                                                               
APPCRETN DS    XL1                 APPC RETURN CODE IN RF                       
         DS    XL3                 N/D                                          
*                                                                               
APPCDATA DS    0X                  DATA AREA                                    
APPCHDR  DS    XL6                 HEADER INFO                                  
APPCMXLN DS    XL2                 MAXIMUM LENGTH OF DATA                       
APPCCNUM DS    XL2                 CONVERSATION NUMBER                          
APPCLEN  DS    XL2                 LENGTH OF DATA                               
APPCDTA  DS    XL5000              ACTUAL DATA                                  
APPCDLQ  EQU   *-APPCDTA           LENGTH OF DATA BUFFER                        
APPCMAXL EQU   *-APPCLEN           MAXIMUM LENGTH OF DATA                       
APPCMXLQ EQU   *-APPCMXLN          MAXIMUM LENGTH OF DATA FOR RECEIVE           
*                                                                               
APPCLENQ EQU   *-APPCD             LENGTH APPC CONTROL BLOCK                    
                                                                                
ESSLOG - SYSOUT Message log routine                                             
-----------------------------------                                             
    Write log message to commonSYSOUT data set. Single thread                   
for multi task access. Passed parameters:                                       
1) Address of ESSATC                                                            
2) Address of message data - Maximum 80 bytes.                                  
                                                                                
ESSRQS - ESS request data control table services                                
------------------------------------------------                                
    Set of routines to provide interface to ESSREQD the ESS request             
queue control block. the request queue is maintained in an area of              
memory allocated above the 16mb 31 bit line. The FACPAK facility                
TSAROFF is used to do this.                                                     
Services include:                                                               
Intialise and allocate request queue services.                                  
Read entry from request queue                                                   
Read high entry from queue.                                                     
read sequential entry from queue.                                               
Add entry to queue.                                                             
Write over entry in queue.                                                      
delete entry from queue.                                                        
Close down or deallocate request queue services.                                
                                                                                
ESSRQSD - ESS Request queue services                                            
------------------------------------                                            
    Note that these data structures are under developement and liable           
to change significantly.                                                        
*                                                                               
ERQKEYQ  EQU   9                   KEY LENGTH OF REQUEST QUEUE ENTRY            
ERQLENQ  EQU   1000                MAXIMUM LENGTH OF REQUEST Q. ENTRY           
*                                  ESS REQUEST QUEUE SERVICE ACTIONS            
ERQAINIQ EQU   C'INIT',4,C'C'      INITIALISE REQUEST QUEUE                     
ERQAREAQ EQU   C'READ',4,C'C'      READ                                         
ERQARHIQ EQU   C'RHI ',4,C'C'      READ HIGH                                    
ERQARSQQ EQU   C'RSQ ',4,C'C'      READ SEQUENTIAL                              
ERQAADDQ EQU   C'ADD ',4,C'C'      ADD                                          
ERQAWRTQ EQU   C'WRT ',4,C'C'      WRITE                                        
ERQADELQ EQU   C'DEL ',4,C'C'      DELETE                                       
ERQACLOQ EQU   C'CLOS',4,C'C'      CLOSE DOWN                                   
*                                                                               
*                                  RETURN CODES                                 
ERQROKQ  EQU   X'00'               OK                                           
ERQREOFQ EQU   X'80'               END OF FILE                                  
ERQRDUPQ EQU   X'20'               DUPLICATE KEY ON ADD                         
ERQRRNFQ EQU   X'10'               RECORD NOT FOUND                             
ERQRERRQ EQU   X'FF'               GENERAL ERROR                                
*                                                                               
ESSREQD  DSECT                     ESS REQUEST QUEUE ENTRY STRUCTURE            
ESSRKEY  DS    0XL15               KEY                                          
ESSRTYP  DS    CL3                 ESS REQUEST TYPE ID                          
ESSRTSQL EQU   C'SQL',3,C'C'       SQL EXTRACT SUB SYSTEM                       
ESSRTPQR EQU   C'PQR',3,C'C'       PQ REPORT SUB SYSTEM                         
ESSRTWRK EQU   C'WRK',3,C'C'       WORKER FILE REQUEST SUB SYSTEM               
ESSRIDN  DS    XL2                 ESS ID NUMBER                                
ESSRREF  DS    XL4                 ESS REFERENCE NUMBER                         
ESSRDATE DS    XL2                 DATE (YMD COMPRESSED)                        
ESSRTIME DS    XL3                 TIME (HMS BINARY)                            
ESSRSEQN DS    XL1                 SEQUENCE NUMBER FOR DUPLICATES               
*                                                                               
ESSRRSTA DS    XL1                 RECORD STATUS BYTE                           
ESSRRLNK DS    XL4                 RECORD LINKAGE AREA                          
ESSRRLEN DS    XL2                 RECORD LENGTH                                
*                                                                               
ESSRFEL  DS    XL1                 FIRST ELEMENT CODE                           
ESSRFELL DS    XL1                 FIRST ELEMENT LENGTH                         
*                                                                               
ESSRRLQ  EQU   *-ESSRKEY           RECORD LENGTH EQUATE                         
*                                                                               
ESSRREQQ EQU   X'10'               RECORD TYPE ESS REQUEST                      
*                                                                               
ESSRDELQ EQU   X'80'               STATUS RECORD DELETED                        
         SPACE 1                                                                
ERDATD   DSECT                     ESS REQUEST DATA ELEMENT X'10'               
ERDATEL  DS    XL1                 ------------------------------               
ERDATELL DS    XL1                 EL LEN                                       
ERDATELX DS    0X                                                               
ERDATELQ EQU   X'10'               REQUEST DATA ELEMENT CODE                    
ERDATLNQ EQU   *-ERDATEL           REQUEST DATA ELEMENT LENGTH                  
         SPACE 1                                                                
ERPQRD   DSECT                     ESS REQUEST PQ REPORT ELEMENT X'20'          
ERPQREL  DS    XL1                 -----------------------------------          
ERPQRELL DS    XL1                 EL LEN                                       
ERPQRELX DS    0X                                                               
ERPQRELQ EQU   X'20'               PQ REPORT ELEMENT CODE                       
*                                                                               
ERPQRMID DS    CL4                 REQUEST MESSAGE ID                           
ERPQRNUM DS    XL1                 PQ NUMBER                                    
ERPQRSID DS    XL2                 PQ REPORT SENDING USERID                     
ERPQRSUB DS    CL3                 PQ REPORT SUB-ID                             
ERPQRRNM DS    XL2                 PQ REPORT REFERENCE NUMBER                   
ERPQRLNM DS    XL2                 PQ REPORT LOGICAL REPORT NUMBER              
ERPQRSPG DS    CL6                 PQ REPORT REQUESTED START PAGE               
ERPQREPG DS    CL6                 PQ REPORT REQUESTED END PAGE                 
ERPQRSTA DS    XL1                 PQ REPORT TRANSFER PROCESS STATUS            
ERPQRWTQ EQU   X'02'               REPORT WAITING FOR TRANSFER                  
ERPQRNOQ EQU   X'FF'               NO-OP RECORD -- IGNORE IT                    
ERPQRSNQ EQU   X'80'               SENT SUCCESSFULLY BY DDS                     
ERPQRRCQ EQU   X'40'               DDS RECEIVED DELIVERY NOTIFICATION           
ERPQRPRQ EQU   X'04'               MARKED PRINTED IN PRINT QUEUE                
*                                                                               
ERPQRLNQ EQU   *-ERPQRD            PQ REPORT ELEMENT LENGTH EQUATE              
                                                                                
VSAMIO - General VSAM file IO services                                          
--------------------------------------                                          
Maintain VSAM file for logging and recovery of ESS requests.                    
To be developed.                                                                
                                                                                
FACPAK facilities                                                               
-----------------                                                               
DMUTLCT                                                                         
DMDMGRL                                                                         
LOGIO                                                                           
BINSRCH2                                                                        
BINSRCH                                                                         
HEXOUT                                                                          
REPLACE                                                                         
PQPROF                                                                          
DATCON                                                                          
GETDAY                                                                          
PDUMPER                                                                         
PRINT                                                                           
PRINTERL                                                                        
PRNTBL                                                                          
STXITER                                                                         
FATABOFF                                                                        
HELLO                                                                           
HELEN                                                                           
HEXIN                                                                           
GETFACT                                                                         
CARDS                                                                           
NUMVAL                                                                          
SCANNER                                                                         
TIMBER                                                                          
DATVAL                                                                          
PERVAL                                                                          
XSORT                                                                           
GETDAY                                                                          
GETRET                                                                          
DATTIM                                                                          
LOADER                                                                          
EDICTSUB                                                                        
                                                                                
                                                                                
         EJECT                                                                  
Software reference.                                                             
-------------------                                                             
                                                                                
Source code                                                                     
-----------                                                                     
Source code maintained in PAN LIBRARY PAN.SYSTEMS.LIBRARY, (in the UK,)         
includes the following Books.                                                   
DDHOSTESS                                                                       
    Main task for HOSTESS. Phase name HOSTESS.                                  
DDESSIO                                                                         
    General Lu6.2 APPC interface driver attached as subtask                     
    by HOSTESS. Manages conversation flows with a specific                      
    remote ESS partner. Phase name ESSIO.                                       
DDCMAPPC + DDCMAPPCD                                                            
    General CPIC style interface to FROE'S VTAM LU6.2 APPC calls.               
    Relocatable module name CMAPPC.                                             
DDEXSERV + DDEXSERVD                                                            
    General interface to SQL EXTRACT file transfer control system.              
    Relocatable module name EXSERV.                                             
DDEIOSQL + DDEIOSQLD                                                            
    General interface to process SQL EXTRACT file data for                      
    ESSIO messages.                                                             
    Relocatable module name EIOSQL.                                             
DDEIOPQR + DDEIOPQRD                                                            
    General interface to process PIANO PQ report data for ESSIO                 
    messages.                                                                   
    Relocatable module name EIOPQR.                                             
DDESSRQS + DDESSRQSD                                                            
    ESS request queue services.                                                 
    Relocatable module name EIORQS.                                             
DDESSLOG                                                                        
    Common system log output service.                                           
    Relocatable module name EIOLOG.                                             
DDESSD                                                                          
    General ESSIO included DSECTS                                               
DDESSFACSC + DDESSFACS                                                          
    Common system facilities lists for ESSIO                                    
DDESSATC                                                                        
    Status control block DSECT for attached ESSIO task.                         
DDESSDATA                                                                       
    ESSIO message data work area DSECTS.                                        
DDESSMSG + DDESSHDR + DDESSEXC + DDESSSQL + DDESSPQR                            
    DSECTS defining message structures for ESSIO LU6.2 APPC.                    
                                                                                
                                                                                
Compilations                                                                    
-----------                                                                     
                                                                                
PANALNK JCL                                                                     
-----------                                                                     
    JOMU.DDS.JCL(PLNKESS)                                                       
Phases                                                                          
------                                                                          
    HOSTESS, ESSIO                                                              
                                                                                
PANACAT JCL                                                                     
-----------                                                                     
    JOMU.DDS.JCL(PCATESS)                                                       
Relocatables                                                                    
------------                                                                    
    RMCMAPPC, RMEXSERV, RMEIOSQL, RMEIOPQR.                                     
                                                                                
         EJECT                                                                  
HOSTESS APPC protocols                                                          
----------------------                                                          
                                                                                
    The text in the following section was orignally written by RCRIDDLO         
in the document DCESSDOC and has been adapted for inclusion here.               
                                                                                
HOSTESS and ESS send/receive pass messages to each other. A message is          
either a control message (eg Are you still there), an information msg           
(eg File now ready for sending), or a request (eg Send me the next              
file). Requests can be created by workstations. A message will consist          
of a fixed length,fixed format header followed by a variable length,            
variable format data area. The contents of this data is a function of           
the message type .                                                              
                                                                                
ESS                                                                             
---                                                                             
ESS (External System Server) is a PC program that runs on an OS/2 box           
that receives requests from workstations on the LAN on which it resides.        
Its main function is to act as a multi-tasking server which takes               
requests from DDS written client programs running on the LAN and to pass        
on those requests to the mainframe when the data requested is not               
available locally.                                                              
                                                                                
Communication to the mainframe will be via APPC/APPN functions provided         
by the OS/2 Communication Manager and bulk file tranfers will use the           
new IBM Netview file tranfer programs for workstations. ESS routines            
that communicate with the mainframe will use CPI-C (Common Program              
Interface - Communications) as the API to the APPC (Advanced  Program           
to Program Communication) functions that enable LU6.2 protocol in the           
OS/2 Communication Manager environment.                                         
                                                                                
ESS will maintain conversations with two MVS partner programs. When ESS         
wants to send a request to MVS, or to send status data or information           
messages, it will do so via its conversation with HOSTESS, which is             
the MVS program whose principal function is to listen receive) for              
requests from the ESS servers. When the data from a previoulsy ESS              
submitted request becomes available the MVS program HOSTESS will spot           
that the data is ready and will send a message to ESS that the data             
is available. ESS maintains a convestation with HOSTESS in which ESS            
is the listening partner in this conversation.                                  
                                                                                
ESS to MVS Conversations                                                        
------------------------                                                        
ESS acts as the server to its client workstations on the LAN. However           
when it is talking to MVS its role is reversed - it becomes a client            
to the MVS server. In client/server conversations it is conventional            
for the client to initiate a conversation to its server. The main               
reason for this is that the server is considered to be permanent and            
the client transient . Thus there is much more probabilty of the                
server being around to respond when first contact is required. The              
other main reason is that it is the server's responsibility to check            
and maintain security and thus can refuse access at the client's first          
attempt to communicate.                                                         
                                                                                
When ESS is initialised on the OS/2 workstation it will initiate two            
conversations to its MVS server partner program HOSTESS. It is assumed          
that the two MVS programs will be permanently running so that the               
conversations can be initialised.                                               
                                                                                
As CPI-C is the SAA programming interface for APPC, the conversations           
between partner programs will be described using the basic CPI-C verbs          
and function calls as these are well understood and documented. Also            
referred to will be a set of standard DDS messages for passing requests,        
information, and errors. These will be defined in detail in Appendices          
to this document.                                                               
                                                                                
         EJECT                                                                  
Message Header Format                                                           
---------------------                                                           
Information in a message header is needed to define the message,identify        
the sender, and to contain enough information so that message logs can          
be created for audit trails and debugging. LU6.2 is transparent to user         
data, allowing binary information to be sent. We need to take advantage         
of the conciseness of binary data, but also bear in mind the readability        
of the data, and the fact that binary representations of numbers differ         
by platform.                                                                    
We also recognise that different sorts of messages require more data in         
the header than simple control messages. It is important that the basic         
header does not contain fields that are only required by more complex           
messages. We thus have the structure of a 16 byte basic header that all         
messages will contain. This header will contain flags that identify if          
an extended header is used and if any data follows the header.                  
                                                                                
Len Typ  Basic header field                                                     
--- ---  ------------------                                                     
 2   C   DD character string at start of every message.                         
 1   C   Message type C=Control,I=Info,E=Error,R=request,                       
 3   C   Message Id within Type.                                                
 2   B   Sender Id. Each application has unique Id.                             
 4   B   Date/Time of message                                                   
 1   B   Header Send Flags - set be sender/originator                           
 1   B   Header Recv Flags - set by receivor/replyer                            
 1   B   Header Type Extended,Withdata                                          
 1   B   Spare                                                                  
                                                                                
Len Typ  Extended Header Field                                                  
--- ---  ---------------------                                                  
 4   B   Request Reference (Originator)                                         
 1   C   Request Priority  (Originator)                                         
 3   C   Request Application System                                             
 3   C   Request Application Program                                            
 8   C   Request User Id                                                        
 8   C   Request Password                                                       
 5   C   Spare                                                                  
                                                                                
Len Typ  Exchange data at Handshake                                             
--- ---  --------------------------                                             
 8   C   Exchange text field c'MYNAMEIS'                                        
 6   C   Unique integer ID                                                      
 8   C   Password                                                               
 8   C   Network Id                                                             
 8   C   Logical Unit Id                                                        
 8   C   Transaction Program Name                                               
 2   C   Version                                                                
 2   C   Level                                                                  
 8   C   Date YYYYMMDD                                                          
 6   C   Time HHMMSS                                                            
                                                                                
         EJECT                                                                  
ESS/HOSTESS RECEIVE message flow                                                
--------------------------------                                                
The details of the ESS/HOSTESS Receive message flow is shown below.             
The numbers represent important points in the conversation flow which           
are explained in the notes following the flows. The >>> symbol means            
that data flows accoss the session.                                             
                                                                                
n# ESS-----------------------       HOSTESS RECEIVE-----------------            
01 Initialise_Conv(Id)                                                          
02 Set_Conv_Type(Id,Basic)                                                      
   Set_Synch_level(Id,Confirm)                                                  
   Set_Return_Control(Id,Alloc)                                                 
03 Allocate_Conv(Id)                                                            
04 Flush(id)                  >>>   Accept_Conv(Id)                             
                                    Set_Recv_Type(Id,R&Wait)                    
05                                  Receive(Id)                                 
   ..                               ..                                          
   ..                               ..                                          
06 ESS HAS A SIMPLE REQUEST         ..                                          
07 Set_Send_Type(Id,S&PtR)          ..                                          
   Send(Id,DDS#R001)          >>>   ..                                          
   Set_Recv_Type(Id,R&Wait)         Set_Send_Type(Id,S&PtR))                    
08 Receive(Id)                <<<   Send(ID,DDSREQ#+Answer)                     
                                    Set_Recv_Type(Id,R&Wait)                    
                              >>>   Receive(Id)                                 
   ..                               ..                                          
   ..                               ..                                          
   ..                               ..                                          
09 ESS HAS A COMPLEX REQUEST        ..                                          
10 Set_Send_Type(Id,S&PtR)          ..                                          
   Send(Id,DDS#R002)          >>>   ..                                          
   Set_Recv_Type(Id,R&Wait)         Set_Send_Type(Id,S&PtR))                    
11 Receive(Id)                <<<   Send(ID,DDSREQ#+Sendmemore)                 
                                    Set_Recv_Type(Id,R&Wait)                    
12 Set_Send_Type(Id,Sdata)           ..                                         
13 Send(Id,Req Data)                ..                                          
   Send(id,Req Data)                Receive(Id)                                 
   ..                               Receive(Id)                                 
   Set_Send_Type(Id,S&PtR)          ..                                          
14 Send(Id,DDSREQEND)         >>>   ..                                          
   Set_Recv_Type(Id,R&Wait)         Set_Send_Type(Id,S&PtR))                    
15 Receive(Id)                <<<   Send(ID,DDSREQ#+MVSreference)               
                                    Set_Recv_Type(Id,R&Wait)                    
                              >>>   Receive(Id)                                 
   ..                               ..                                          
   ..                               ..                                          
                                                                                
17 ESS CLOSING DOWN NORMAL          ..                                          
18 Set_Deal_Type(Id,Flush)          ..                                          
   Deallocate(Id)              >>>  Task exits normally                         
   ..                               ..                                          
                                                                                
19 ESS CLOSING DOWN ABEND           ..                                          
20 Set_Deal_Type(Id,Abend)          ..                                          
   Deallocate(Id)              >>>  Task sets flag for ESS down                 
   ..                               ..                                          
   ..                               ..                                          
                                                                                
                                                                                
01,02,03,04 - Conversation is initialised by ESS. The conversation mode         
is Set to Basic mode conversation, with synch level of confirm, and with        
a request to return when the session is allocated. The Allocate command         
at #03 causes the LU-LU session to be set up ,and the Flush command at          
#04 causes a conversation startup request to be sent.                           
                                                                                
04,05 - HOSTESS has been started on the MVS system and has ititialised          
a task that is going to be the partner for this conversation. An Accept         
conversation has been issued followed by a receive. ESS is now in its           
normal state of Send and HOSTESS is it its normal state of receive.             
                                                                                
06,07,08 - ESS has a simple request. This is a request that is defined          
entirely by the data in the request record and can be answered by               
HOSTESS. The first simple request that ESS sends to HOSTESS is the              
"handshake" request where the request contains LUID data, date/time             
and some simlpe text. Another example is where ESS has timed out                
and sends an "Are-you-still-there" request to HOSTESS. If a simple              
request is valid, HOSTESS adds the requested data to the request and            
sends the data back. Each partner resorts back to their normal state.           
                                                                                
09,10,11 - ESS has a complex request. This is a request that needs              
extra data to define the request or requires data outside of the                
scope of HOSTESS. In this case the dialogue starts in the same way as           
a simple request at 05,06,07 above but the reply does not contain an            
answer but will return a request for more data if any .                         
                                                                                
12,13,14 - ESS will send as many request records as are required to             
define the details of the request and HOSTESS will receive these records        
and process them eg validate and write to the PQ. ESS will then send a          
special end-of-request record .                                                 
                                                                                
15 - When HOSTESS receive the end-or-request record it processes the            
request and either returns an error message or an OK message with the           
MVS request reference (eg PQ ID). ESS receives the reply and returns to         
send state and HOSTESS reverts back to receive state.                           
                                                                                
17,18 - If ESS is coming down for a normal reason (eg at its end-or-day)        
then it will inform HOSTESS of this fact.                                       
                                                                                
19,20 - If ESS has a problem that requires it to abend it will try to           
inform HOSTESS of this fact.                                                    
                                                                                
         EJECT                                                                  
ESS/HOSTESS SEND message flow                                                   
-----------------------------                                                   
The details of the ESS/HOSTESS Send message flow is shown below.                
The numbers represent important points in the conversation flow which           
are explained in the nores following the flows. The >>> symbol means            
that data flows accoss the session.                                             
                                                                                
n# ESS-----------------------       HOSTESS SEND--------------------            
01 Initialise_Conv(Id)                                                          
02 Set_Conv_Type(Id,Basic)                                                      
   Set_Synch_level(Id,Confirm)                                                  
   Set_Return_Control(Id,Alloc)                                                 
03 Allocate_Conv(Id)                                                            
04 Flush(id)                  >>>   Accept_Conv(Id)                             
                                    Set_Recv_Type(Id,R&Wait)                    
05                                  Receive(Id)                                 
   ..                               ..                                          
   ..                               ..                                          
06 ESS DOES HANDSHAKE REQUEST       ..                                          
07 Set_Send_Type(Id,S&PtR)          ..                                          
   Send(Id,DDS#R001)          >>>   ..                                          
   Set_Recv_Type(Id,R&Wait)         Set_Send_Type(Id,S&PtR))                    
08 Receive(Id)                <<<   Send(ID,DDSREQ#+Answer)                     
                                    Set_Recv_Type(Id,R&Wait)                    
                              >>>   Receive(Id)                                 
   ..                               ..                                          
09 ESS REVERSE STATE REQUEST        ..                                          
   Set_Send_Type(Id,S&ptR)          ..                                          
   Send(Id,DDS#C001)          >>>   HOSTESS now in send state                   
   Set_Recv_Type(id,R&Wait)                                                     
   Receive(Id)                                                                  
   ..                               ..                                          
   ..                               ..                                          
10 ..                               HOSTESS SENDS A FILE READY MESSAGE          
   ..                               Set_Send_Type(Id,S&PtR)                     
11 ..                         <<<   Send(Id,DDSINF#)                            
   Set_Send_Type(Id,S&ptR)          Set _Recv_Type(Id,R&Wait)                   
12 Send(Id,DDS#C001)          >>>   Receive(id)                                 
   Set_Recv_Type(id,R&Wait)                                                     
   Receive(Id)                      HOSTESS now in send state                   
   ..                               ..                                          
   ..                               ..                                          
                                                                                
13                                  HOSTESS DOES A FILE TRANSFER                
   ..                               Set_Send_Type(Id,S&PtR)                     
14 ..                         <<<   Send(Id,DDSINF#)                            
   Set_Send_Type(Id,S&ptR)          Set _Recv_Type(Id,R&Wait)                   
15 Send(Id,DDS#C002)          >>>   Receive(id)                                 
   Set_Recv_Type(id,R&Wait)                                                     
16 Receive(Id)                                                                  
   ..                               Set_Send_Type(Id,Sdata)                     
   ..                               Send(Id,Req Data)                           
   Receive(Id)                <<<   Send(id,Req Data)                           
   ..                               ..                                          
   ..                               Set_Send_Type(Id,S&PtR)                     
17 Set_Send_Type(Id,S&PtR)    <<<   Send(Id,DDSREQEND)                          
   Send(Id,ESSreference)      >>>   Receive(Id)                                 
   Receive(iD)                                                                  
   ..                               ..                                          
   ..                               ..                                          
                                                                                
18 ..                               HOSTESS CLOSING DOWN NORMALLY               
   ..                               Set_Deal_Type(Id,Flush)                     
   ESS task takes normal exit  <<<  Deallocate(Id)                              
   ..                               ..                                          
                                                                                
19 ..                               HOSTESS CLOSING DOWN ABEND                  
   ..                               Set_Deal_Type(Id,Abend)                     
   ESS sets HOSTESS down flag  <<<  Deallocate(id)                              
                                                                                
                                                                                
01,02,03,04 - Conversation is initialised by ESS. The conversation mode         
is Set to Basic mode conversation, with synch level of confirm, and with        
a request to return when the session is allocated. The Allocate command         
at #03 causes the LU-LU session to be set up ,and the Flush command at          
#04 causes a conversation startup request to be sent.                           
                                                                                
04,05 - HOSTESS has been started on the MVS system and has ititialised          
a task that is going to be the partner for this conversation. An Accept         
conversation has been issued followed by a receive. ESS is now in send          
state of and HOSTESS is in receive state.                                       
                                                                                
06,07,08 - ESS and HOSTESS do a "handshake" request where ESS passes    e       
some data to HOSTESS and HOSTESS replys with its own versionof the      s       
data. The dialogue ensures that the two partners can exchange data              
mormally and that it is valid for these two LUID's to communicate.              
                                                                                
09 - HOSTESS is still in receive state after the handshake . The normal         
state of a conversation is that ESS is in receive state and HOSTESS             
is in the send state. This sequence issued by ESS puts the programs in          
the normal states for ESS/HOSTESS conversation.                                 
                                                                                
10,11,12 - HOSTESS has spotted that a file has become ready which is            
desined for ESS. HOSTESS sends an information message to ESS that defines       
details of the file. ESS decides that it will use Netview FTP to down           
load the file so it replies to the HOSTESS message with a confirmation of       
this fact. HOSTESS receives the reply, marks the file with an ESS has been      
informed flag, and resorts back to send state.                                  
                                                                                
13,14,15 - HOSTESS has spotted that a file has become ready which is            
desined for ESS. HOSTESS sends an information message to ESS that defines       
details of the file. ESS decides that the file is small enough for it           
to be sent by HOSTESS. So it requests that HOSTESS sends the file.              
                                                                                
16,17 - HOSTESS sends the file with as many sends that are required and         
ESS receives the data. HOSTESS then sends an end-of-file message and asks       
ESS to confirm receipt. HOSTESS receives the reply,and marks the file with      
an ESS informed plus File sent flags, and resorts back to send state.           
                                                                                
18,19 - HOSTESS is coming down normally or abnormally and will deallocate       
the conversation with the appropriate type. This will be picked up by           
the ESS receive and ESS will know that the conversation with HOSTESS will       
have to be re-established.                                                      
                                                                                
