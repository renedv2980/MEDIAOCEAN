         TITLE 'NTR1'                                                           
Macro is used at the beginning of a subroutine to save the present values of    
the caller's registers.                                                         
(NAME)   NTR1  (BASE=expression)(,WORK=(RM,n))(,LABEL={*,N})                    
                                                                                
Users registers (RE-RC) are saved at 12(RD).                                    
0(4,RD) is set to *XXX where XXX is the first 3 bytes of NAME.                  
RD is updated to point to next location in pool.                                
If WORK= parameter is specified macro sets RM to address of n double words of   
working storage.                                                                
                                                                                
Optionally the base register may be set which allows sub-routines to be called  
from external modules -                                                         
BASE=*       Points RB to STM instruction, followed by USING NAME,RB            
BASE=(*,end) Like BASE=*, but where "end" is the end address of the subroutine, 
              so that the macro generates:  USING (NAME,end),RB                 
              This limits the USING's range to that of the subroutine alone.    
BASE=label   Generates  L   RB,label                                            
BASE=(Rn)    Generates  LR  RB,Rn                                               
                                                                                
>>Label=* generates a dc cl8'label' within the ntr1 macro, to guarantee         
>>that the label is addressable. Label=N should no longer be specified.         
>> MH 18Mar97                                                                   
                                                                                
If LABEL=N parameter is specified, the MVC instruction that moves the label     
(+LLL) into the working storage pool is not generated. This is useful where the 
literal (=C'+LLL') would be covered by a 2nd base register which is not         
established until after the NTR1 macro.                                         
                                                                                
Note that once in an NTR1 sub-routine you are free to BAS to other routines as  
long as you ultimately return via an XIT1 macro.                                
                                                                                
