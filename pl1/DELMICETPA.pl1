        /* DATA SET DELMICETPA AT LEVEL 036 AS OF 02/20/20    */                
       ++INCLUDE IEBUPDTHDR                                                     
***********************************************************************         
***  LOCAL MONTHLIES: ICETOOL/DFSORT CONTROL CARDS.                             
***  THESE CONTROL CARDS ARE INVOKED BY DELMCALC.                               
***********************************************************************         
                                                                                
**** DB = DEBUG, PR = PRODUCTION                                                
*                                                                               
* SET DEFAULT TO DB=N. CAN BE OVERRIDDEN IN THE JCL TO DB=Y. DO NOT             
* OVERRIDE PR VIA JCL (PR IS SET HERE, PROGRAMMATICALLY, WHEN DB IS             
* SET).                                                                         
* NOTE: THE DB/PR FLAGS CAN BE USED FOR ANY PURPOSE. AS OF MAY/2017,            
*       THEY ARE USED TO BREAK UP "DISP=MOD" DATASETS INTO INDIVIDUAL           
*       COMPONENT DATASETS. THIS CAN HELP WITH DEBUGGING.                       
*                                                                               
*&&      SET   DB=N                                                             
* SET THE MUTUALLY EXCLUSIVE PARAMETER PR ACCORDINGLY                           
*&&DB                                                                           
*&&PR    SET   N                                                                
*&&                                                                             
*&!DB                                                                           
*&&PR    SET   Y                                                                
*&!                                                                             
                                                                                
**** PU = PROGRAM NAME UPDATE MODE                                              
* SET DEFAULT TO PU=N. CAN BE OVERRIDDEN IN THE JCL TO PU=Y.                    
*&&      SET   PU=N                                                             
                                                                                
**** 3A = 3A START TIME MODE                                                    
* SET DEFAULT TO 3A=Y. CAN BE OVERRIDDEN IN THE JCL TO 3A=N.                    
*&&      SET   3A=Y                                                             
                                                                                
THIS MEMBER CONTAINS ICETOOL/DFSORT CONTROL CARDS. IT IS A PREPROCESSOR         
FOR THE LOCAL MONTHLY ELECTRONIC VIP FILES.                                     
                                                                                
INPUT:  VIA LOCAL MONTHLY DRIVER (DELMCALC)                                     
------                                                                          
     -  TPQHIN                                                                  
     -  PNQHIN                                                                  
                                                                                
OUTPUT:                                                                         
-------                                                                         
     -  TPSRTAV1                                                                
     -  PASRTAV1                                                                
     -  INTBOUT1                                                                
                                                                                
STEPS:                                                                          
------                                                                          
***********************************************************************         
./ ADD NAME=TOOLIN   ** CONTROL CARDS FOR ICETOOL                               
***********************************************************************         
*    QHR PARSE SECTION                                                          
COPY FROM(TPQHIN) USING(SEQ1)                                                   
COPY FROM(MKTFILE) TO(MRKTPARS) USING(PR01)                                     
COPY FROM(STAFILE) TO(STAPARS) USING(PR02)                                      
COPY FROM(UERFILE) TO(UERPARS) USING(PR04)                                      
COPY FROM(ITBFILE) TO(ITBPARS) USING(PR05)                                      
COPY FROM(HPTFILE) TO(HPTPARS) USING(PR07)                                      
COPY FROM(QHRFILE) TO(QHRPARS) USING(PR08)                                      
COPY FROM(TSAFILE) TO(TSAPARS) USING(PR09)                                      
*    PAV PARSE SECTION                                                          
COPY FROM(PNQHIN) USING(SEQ2)                                                   
COPY FROM(PMKFILE) TO(PMKPARS) USING(PR11)                                      
COPY FROM(PNRFILE) TO(PNRPARS) USING(PR12)                                      
***********************************************************************         
*    QHR WORKREC SECTION                                                        
COPY JKFROM TO(INTBOUT1) USING(ITB1)                                            
COPY JKFROM TO(UEROUT) USING(UER1)                                              
COPY JKFROM TO(HPTOUT) USING(HPT1)                                              
COPY JKFROM TO(PRSWRK1) USING(MKST)                                             
SORT JKFROM TO(PRSWRK2) USING(QTHP)                                             
COPY JKFROM TO(PRSWRK3) USING(WRK3)                                             
COPY JKFROM TO(PRSWRK4) USING(WRK4)                                             
COPY JKFROM TO(QHROUT) USING(QHR1)                                              
COPY JKFROM USING(PAV1)                                                         
*                                                                               
***********************************************************************         
*    APPLY PROGRAM NAME UPDATES (IF &&PU IS &&SET)                              
***********************************************************************         
* THIS STEP APPLIES THE PROGRAM LINEUP UPDATES IN 'PGNAMUP' MODE.     *         
*                                                                     *         
* IT TAKES AS INPUT A FILE OF ORIGINAL PROGRAM LINEUP DATA, AND A     *         
* FILE OF PROGRAM LINEUP UPDATE DATA, AND WILL RETURN A FILE WITH THE *         
* MOST CURRENT DATA FOR THE MARKETS/STATIONS AFFECTED BY THE UPDATE.  *         
*                                                                     *         
* INPUT: PAVOUT: ORIGINAL PROGRAM LINEUP FILE.                        *         
*        PUPOUT: PROGRAM LINEUP UPDATE FILE.                          *         
*        BOTH FILES ARE BROKEN AT THE QUARTER HOUR LEVEL.             *         
*                                                                     *         
* OUTPUT: PLNEW: A FILE WITH THE COMPLETE MONTH DATA FOR THE STATIONS *         
*         AFFECTED BY THE UPDATES.                                    *         
*                                                                     *         
* RULES:                                                              *         
* -----                                                               *         
* 1. NIELSEN PROVIDES COMPLETE REPLACEMENT PROGRAM LINEUP UPDATE      *         
*    DATA FOR A DAY. WE HAVE TO REPLACE THE ORIGINAL DATA FOR THE DAY *         
*    WITH THE PROGRAM LINEUP UPDATES FOR THAT DAY.                    *         
* 2. THE OUTPUT FILE SHOULD INCLUDE COMPLETE PROGRAM LINEUP FOR THE   *         
*    FULL MONTH, FOR THE MARKETS AND STATIONS THAT ARE AFFECTED BY    *         
*    THE UPDATE. USE THE DATA FOR THE DAYS BEING CORRECTED FROM THE   *         
*    UPDATE FILE, AND ALL OTHER DAYS FROM THE ORIGINAL FILE.          *         
* 3. ONLY ONE PROGRAM LINEUP FILE WILL BE PROCESSED AT ANY GIVEN TIME *         
*    FOR THE SAME MARKET/BOOK. IF NIELSEN RELEASES MULTIPLE PROGRAM   *         
*    LINEUP UPDATE FILES, THE LATEST FILE ALWAYS INCLUDES ALL         *         
*    RELEVANT UPDATES.                                                *         
***********************************************************************         
*                                                                               
* APPLY PROGRAM LINEUP UPDATES.                                                 
*&&PU                                                                           
*---------------------------------------------------------------------*         
* SORT ORIGINAL AND UPDATE FILES IN PREPARATION FOR SEVERAL JOINKEYS. *         
*---------------------------------------------------------------------*         
SORT FROM(PAVOUT) TO(PLORGSRT) USING(PLSR)                                      
SORT FROM(PUPOUT) USING(PLSR) -                                                 
*&&PR*&& TO(PLNEW)                                                              
*&&DB*&& TO(PLNEWA)                                                             
*                                                                               
*---------------------------------------------------------------------*         
* REMOVE STATIONS THAT ARE PRESENT ON THE ORIGINAL FILE, BUT NOT ON   *         
* THE UPDATE FILE.                                                    *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1:                                                                        
* GET RECORDS FROM THE ORIGINAL FILE FOR STATIONS THAT HAVE DATA ON             
* THE ORIGINAL FILE, BUT NOT THE UPDATE FILE.                                   
*                                                                               
COPY JKFROM TO(PLWORK1) USING(PLW1)                                             
*                                                                               
* STEP2:                                                                        
* GET RECORDS FROM THE ORIGINAL FILE ONLY FOR STATIONS THAT OCCUR               
* ON THE UPDATE FILE BY JOINING BACK WITH THE ORIGINAL FILE.                    
*                                                                               
COPY JKFROM TO(PLWORK2) USING(PLW2)                                             
*                                                                               
*---------------------------------------------------------------------*         
* REMOVE ORIGINAL DATA FOR DAYS THAT ARE PRESENT IN THE UPDATE FILE   *         
* FOR THAT STATION. WRITE THE OUTPUT TO THE FILE THAT HAS THE UPDATES,*         
* SO THAT THE END RESULT IS A FILE THAT HAS THE UPDATED DATA FOR THE  *         
* DAYS THAT WERE UPDATED, AND THE ORIGINAL DATA FOR THE REMAINING DAYS*         
*---------------------------------------------------------------------*         
COPY JKFROM USING(PLW3) -                                                       
*&&PR*&& TO(PLNEW)                                                              
*&&DB*&& TO(PLNEWB)                                                             
*                                                                               
*&&DB                                                                           
COPY FROM(PLNEWA) TO(PLNEW)                                                     
COPY FROM(PLNEWB) TO(PLNEW)                                                     
*&&                                                                             
*&&                                                                             
*                                                                               
***********************************************************************         
* THIS STEP COMPUTES THE LOCAL MONTHLY TIME PERIOD AVERAGES.          *         
*                                                                     *         
* INPUT:  QHROUT: TIME PERIOD QUARTER HOUR FILE.                      *         
* -----   PAVOUT: IN "NORMAL" MODE, FILE HAS PROGRAM LINEUP BROKEN    *         
*                 AT THE QH LEVEL.                                    *         
*         PLNEW: IN "PGNAMUP" MODE, FILE HAS UPDATED PROGRAM LINEUP   *         
*                BROKEN AT THE QH LEVEL.                              *         
*         HPTOUT: HUT/PUT FILE AT THE QH LEVEL.                       *         
*         UEROUT: FILE OF UNIVERSE RECORDS FOR MARKETS AFFECTED.      *         
*                                                                     *         
* OUTPUT: TPSRTAV1: FILE WITH ALL TIME PERIOD AVERAGES FOR 1 MARKET.  *         
* ------  TYPES OF TIME PERIOD AVERAGES:                              *         
*           1. INDIVIDUAL DAY AVERAGES BY QUARTER HOUR,               *         
*              BROKEN BY PROGRAM NAME.                                *         
*           2. INDIVIDUAL DAY ALL WEEK AVERAGES BY QUARTER HOUR,      *         
*              WHEN MORE THAN ONE PROGRAM RAN IN THE MONTH/WEEKDAY/QH.*         
*           3. M-F AVERAGES BY QUARTER HOUR,                          *         
*              BROKEN BY PROGRAM NAME.                                *         
*           4. M-F ALL WEEK AVERAGE BY QUARTER HOUR,                  *         
*              WHEN MORE THAN ONE PREDOMINANT PROGRAM RAN IN THE      *         
*              MONTH/M-F/QH.                                          *         
*           5. HUT/PUT AVERAGES BY WEEKDAY AND QUARTER HOUR.          *         
*           6. HUT/PUT AVERAGES FOR M-F BY QUARTER HOUR.              *         
*                                                                     *         
* NOTE: WHEN PERFORMING AVERAGES, THE RESULTS ARE TRUNCATED, NOT      *         
* ROUNDED. WE HAVE CONFIRMED THAT NIELSEN ALSO TRUNCATES THE RESULTS  *         
* ON THE MONTHLY E-VIP.                                               *         
***********************************************************************         
*                                                                               
*---------------------------------------------------------------------*         
* COMBINE TIME PERIOD WITH PROGRAM LINEUP DATA AND CREATE WORK        *         
* RECORDS WITH PROGRAM AND TIME PERIOD INFORMATION.                   *         
* SORT FINAL RECORDS BY WEEKDAY/QH/PROGRAM (WITHIN MKT,STATN,ETC..).  *         
*                                                                     *         
* RULES:                                                              *         
* -ONE PROGRAM LINEUP RECORD CAN APPLY TO MULTIPLE TP RECORDS         *         
*  (FOR DIFFERENT VIEWING STREAMS, FOR EXAMPLE).                      *         
* -THERE ARE TP RECORDS WITHOUT ANY PROGRAM LINEUP DATA.              *         
*---------------------------------------------------------------------*         
* PROCESSING WHEN NOT PROGRAM LINEUP UPDATES                                    
*&!PU                                                                           
SORT JKFROM TO(TPPLCOMB) USING(COMB)                                            
*&!                                                                             
*                                                                               
* PROCESSING FOR PROGRAM LINEUP UPDATES                                         
*&&PU                                                                           
SORT JKFROM TO(TPPLCOMB) USING(CMBU)                                            
*&&                                                                             
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR INDIVIDUAL DAY AVERAGES.                         *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1: COMPUTE AN AVERAGE LINE FROM ALL THE RECORDS THAT FORM AN              
*        INDIVIDUAL DAY AVERAGE. KEEP AROUND ALL THE RECORDS THAT               
*        GO INTO THE AVERAGE. THE AVERAGE LINE HAS TO COME AFTER THE            
*        RECORDS THAT GO INTO THE AVERAGE.                                      
*                                                                               
COPY FROM(TPPLCOMB) TO(TPWORK1) USING(DWK1)                                     
*                                                                               
* STEP2: CREATE A SINGLE RECORD BY SPLICING ALL RECORDS THAT GO INTO            
*        THE AVERAGE WITH THE AVERAGE LINE.                                     
*        THE OUTCOME IS A RECORD THAT HAS INDICATORS FOR ALL WEEKS,             
*        THE DAY MAP, AS WELL AS THE AVERAGE DEMOS.                             
*                                                                               
SPLICE FROM(TPWORK1) USING(NSRT) -                                              
*&&PR*&& TO(TPALLAVG) -                                                         
*&&DB*&& TO(TPAVGWK1) -                                                         
   WITHANY -                                                                    
   ON(W_KDTYPE) -                                                               
   ON(W_KDAY) -                                                                 
   ON(W_KQHR) -                                                                 
   ON(W_PNRPNAME) -                                                             
   WITH(W_RECTYPE) -                                                            
   WITH(W_PNRAREA) -                                                            
   WITH(W_KAWK1) -                                                              
   WITH(W_KAWK2) -                                                              
   WITH(W_KAWK3) -                                                              
   WITH(W_KAWK4) -                                                              
   WITH(W_KDAY1) -                                                              
   WITH(W_KDAY2) -                                                              
   WITH(W_KDAY3) -                                                              
   WITH(W_KDAY4) -                                                              
   WITH(W_KDAY5) -                                                              
   WITH(W_KDAY6) -                                                              
   WITH(W_KDAY7) -                                                              
   WITH(W_KDAY8) -                                                              
   WITH(W_KDAY9) -                                                              
   WITH(W_KDAY10) -                                                             
   WITH(W_KDAY11) -                                                             
   WITH(W_KDAY12) -                                                             
   WITH(W_KDAY13) -                                                             
   WITH(W_KDAY14) -                                                             
   WITH(W_KDAY15) -                                                             
   WITH(W_KDAY16) -                                                             
   WITH(W_KDAY17) -                                                             
   WITH(W_KDAY18) -                                                             
   WITH(W_KDAY19) -                                                             
   WITH(W_KDAY20) -                                                             
   WITH(W_KDAY21) -                                                             
   WITH(W_KDAY22) -                                                             
   WITH(W_KDAY23) -                                                             
   WITH(W_KDAY24) -                                                             
   WITH(W_KDAY25) -                                                             
   WITH(W_KDAY26) -                                                             
   WITH(W_KDAY27) -                                                             
   WITH(W_KDAY28) -                                                             
   WITH(W_QDRDEMOS) -                                                           
   WITH(W_STRDEMOS)                                                             
*                                                                               
*---------------------------------------------------------------------*         
* CREATE INDIVIDUAL DAY 4-WEEK AVERAGE RECORDS WHERE NEEDED.          *         
*                                                                     *         
* RULE:                                                               *         
* A 4-WEEK AVERAGE IS TO BE CREATED FOR A QUARTER HOUR WHEN MORE THAN *         
* ONE PROGRAM RAN IN THAT QUARTER HOUR.                               *         
*---------------------------------------------------------------------*         
*                                                                               
COPY FROM(TPPLCOMB) USING(DWK2) -                                               
*&&PR*&& TO(TPALLAVG)                                                           
*&&DB*&& TO(TPAVGWK2)                                                           
*                                                                               
*---------------------------------------------------------------------*         
* CREATE M-F AVERAGES.                                                *         
*                                                                     *         
* RULES:                                                              *         
* -CREATE M-F AVERAGES BY WEEK AND QH, AND THEN AVERAGE THE WEEKLY    *         
*  AVERAGES INTO A MONTHLY AVERAGE FOR THE QH.                        *         
* -ALWAYS INCLUDE ALL 5 DAYS IN THE AVERAGE FOR A QH, INDEPENDENT OF  *         
*  THE PROGRAM(S) THAT RAN IN THE INDIVIDUAL DAYS. DETERMINE THE BEST *         
*  PROGRAM NAME TO ASSOCIATE WITH THAT QH BY CHOOSING THE PROGRAM THAT*         
*  RAN AT LEAST 3 TIMES IN THE WEEK. IF NONE DID, USE 'VARIOUS' AS    *         
*  PROGRAM NAME.                                                      *         
* -IDENTIFY PROGRAMS THAT RAN BY THEMSELVES DIFFERENTLY THAN PROGRAMS *         
*  THAN RAN AT THE SAME TIME AS ANOTHER PROGRAM. THAT IS BECAUSE      *         
*  WE NEED TO CREATE SEPARATE MONTHLY AVERAGE LINES FOR EACH CASE.    *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1: AVERAGE THE 5 RECORDS FOR MON THRU FRI FOR A QH, FOR A WEEK.           
*        CREATE THIS M-F AVERAGE LINE, AND FOR NOW KEEP AROUND THE              
*        INDIVIDUAL DAY RECORDS THAT GO INTO THE AVERAGE.                       
*                                                                               
SORT FROM(TPPLCOMB) TO(TPWORK5) USING(MWK1)                                     
*                                                                               
* STEP2: DETERMINE THE PROGRAM NAME FOR THE M-F WEEKLY AVERAGES CREATED         
*        ABOVE, AND THEN THROW AWAY THE INDIVIDUAL DAY RECORDS.                 
*        THIS WILL YIELD 4 WEEKLY AVERAGES FOR THE MONTH.                       
*                                                                               
*        RULES FOR DETERMINING THE PROGRAM NAME:                                
*        - IF THE SAME PROGRAM RAN ALL TIMES, USE THAT PROG NAME.               
*        - IF THERE IS A PROGRAM THAT RAN AT LEAST 3 TIMES, BUT NOT ALL         
*          TIMES, USE THAT PROGRAM NAME AND FILL THE PROGRAM NAME               
*          BREAKOUT FLAG WITH THE '#' SIGN.                                     
*        - USE 'VARIOUS' IN ALL OTHER CASES.                                    
*                                                                               
COPY FROM(TPWORK5) TO(TPWORK2) USING(MWK2)                                      
*                                                                               
* STEP3: SORT THE WEEKLY AVERAGES BY PROGRAM NAME AND PROGRAM NAME              
*        BREAKOUT FLAG (IN ADDITION TO DATA TYPE AND QH).                       
*        THIS COULD HAVE BEEN DONE AS PART OF STEP 4, BUT I DECIDED             
*        TO MAKE IT A SEPARATE STEP BECAUSE THE OUTPUT OF THIS SORT             
*        CAN BE USED WHEN CREATING THE M-F 4-WEEK AVERAGE.                      
*                                                                               
SORT FROM(TPWORK2) TO(TPWORK3) USING(MWK3)                                      
*                                                                               
* STEP4: AVERAGE TOGETHER THE M-F WEEKLY AVERAGES THAT HAVE THE SAME            
*        PROGRAM NAME AND PROGRAM NAME BREAKOUT FLAG.                           
*        CREATE AN AVERAGE LINE, AND FOR NOW KEEP AROUND THE RECORDS            
*        THAT GO INTO THE AVERAGE.                                              
*                                                                               
COPY FROM(TPWORK3) TO(TPWORK4) USING(MWK4)                                      
*                                                                               
* STEP5: CREATE A SINGLE AVERAGE LINE FOR EACH PROGRAM NAME AND                 
*        PROGRAM NAME BREAKOUT FLAG. DO THAT BY SPLICING ALL RECORDS            
*        THAT GO INTO THE AVERAGE WITH THE AVERAGE LINE CREATED ABOVE.          
*        THE OUTCOME IS A RECORD THAT HAS INDICATORS FOR ALL WEEKS,             
*        THE DAY MAP, AS WELL AS THE AVERAGE DEMOS.                             
*                                                                               
SPLICE FROM(TPWORK4) USING(NSRT) -                                              
*&&PR*&& TO(TPALLAVG) -                                                         
*&&DB*&& TO(TPAVGWK3) -                                                         
   WITHANY -                                                                    
   ON(W_KDTYPE) -                                                               
   ON(W_KQHR) -                                                                 
   ON(W_PNRPNAME) -                                                             
   ON(W_PNAMEBK) -                                                              
   WITH(W_RECTYPE) -                                                            
   WITH(W_PNRAREA) -                                                            
   WITH(W_KAWK1) -                                                              
   WITH(W_KAWK2) -                                                              
   WITH(W_KAWK3) -                                                              
   WITH(W_KAWK4) -                                                              
   WITH(W_KDAY1) -                                                              
   WITH(W_KDAY2) -                                                              
   WITH(W_KDAY3) -                                                              
   WITH(W_KDAY4) -                                                              
   WITH(W_KDAY5) -                                                              
   WITH(W_KDAY6) -                                                              
   WITH(W_KDAY7) -                                                              
   WITH(W_KDAY8) -                                                              
   WITH(W_KDAY9) -                                                              
   WITH(W_KDAY10) -                                                             
   WITH(W_KDAY11) -                                                             
   WITH(W_KDAY12) -                                                             
   WITH(W_KDAY13) -                                                             
   WITH(W_KDAY14) -                                                             
   WITH(W_KDAY15) -                                                             
   WITH(W_KDAY16) -                                                             
   WITH(W_KDAY17) -                                                             
   WITH(W_KDAY18) -                                                             
   WITH(W_KDAY19) -                                                             
   WITH(W_KDAY20) -                                                             
   WITH(W_KDAY21) -                                                             
   WITH(W_KDAY22) -                                                             
   WITH(W_KDAY23) -                                                             
   WITH(W_KDAY24) -                                                             
   WITH(W_KDAY25) -                                                             
   WITH(W_KDAY26) -                                                             
   WITH(W_KDAY27) -                                                             
   WITH(W_KDAY28) -                                                             
   WITH(W_QDRDEMOS) -                                                           
   WITH(W_STRDEMOS)                                                             
*                                                                               
*---------------------------------------------------------------------*         
* CREATE M-F 4-WEEK AVERAGE RECORDS WHERE NEEDED.                     *         
*                                                                     *         
* RULE:                                                               *         
* -A 4-WEEK AVERAGE IS TO BE CREATED FOR A QUARTER HOUR WHEN MORE THAN*         
*  ONE PROGRAM RAN IN THAT QUARTER HOUR.                              *         
*  NOTE: A PROGRAM WITH THE PROGRAM NAME BREAKOUT FLAG ('#') IS       *         
*  CONSIDERED TO BE DIFFERENT THAN THE SAME PROGRAM WITHOUT THE       *         
*  BREAKOUT FLAG.                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
COPY FROM(TPWORK3) USING(MWK5) -                                                
*&&PR*&& TO(TPALLAVG)                                                           
*&&DB*&& TO(TPAVGWK4)                                                           
*                                                                               
*---------------------------------------------------------------------*         
* CREATE HUT/PUT INDVIDUAL DAY AVERAGES.                              *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1: COMPUTE AN AVERAGE LINE FROM ALL THE RECORDS THAT FORM A               
*        HUT/PUT AVERAGE. KEEP AROUND ALL THE RECORDS THAT GO INTO              
*        THE AVERAGE. THE AVERAGE LINE HAS TO COME AFTER THE RECORDS            
*        THAT GO INTO THE AVERAGE.                                              
*                                                                               
SORT FROM(HPTOUT) TO(TPWORK6) USING(HWK1)                                       
*                                                                               
* STEP2: CREATE A SINGLE RECORD BY SPLICING ALL RECORDS THAT GO INTO            
*        THE AVERAGE WITH THE AVERAGE LINE.                                     
*        THE OUTCOME IS A RECORD THAT HAS INDICATORS FOR ALL WEEKS,             
*        THE DAY MAP, AS WELL AS THE AVERAGE DEMOS.                             
*                                                                               
SPLICE FROM(TPWORK6) USING(NSRT) -                                              
*&&PR*&& TO(TPHUTPUT) -                                                         
*&&DB*&& TO(TPHUTPTA) -                                                         
   WITHANY -                                                                    
   ON(W_KDTYPE) -                                                               
   ON(W_KDAY) -                                                                 
   ON(W_KQHR) -                                                                 
   WITH(W_RECTYPE) -                                                            
   WITH(W_KAWK1) -                                                              
   WITH(W_KAWK2) -                                                              
   WITH(W_KAWK3) -                                                              
   WITH(W_KAWK4) -                                                              
   WITH(W_KDAY1) -                                                              
   WITH(W_KDAY2) -                                                              
   WITH(W_KDAY3) -                                                              
   WITH(W_KDAY4) -                                                              
   WITH(W_KDAY5) -                                                              
   WITH(W_KDAY6) -                                                              
   WITH(W_KDAY7) -                                                              
   WITH(W_KDAY8) -                                                              
   WITH(W_KDAY9) -                                                              
   WITH(W_KDAY10) -                                                             
   WITH(W_KDAY11) -                                                             
   WITH(W_KDAY12) -                                                             
   WITH(W_KDAY13) -                                                             
   WITH(W_KDAY14) -                                                             
   WITH(W_KDAY15) -                                                             
   WITH(W_KDAY16) -                                                             
   WITH(W_KDAY17) -                                                             
   WITH(W_KDAY18) -                                                             
   WITH(W_KDAY19) -                                                             
   WITH(W_KDAY20) -                                                             
   WITH(W_KDAY21) -                                                             
   WITH(W_KDAY22) -                                                             
   WITH(W_KDAY23) -                                                             
   WITH(W_KDAY24) -                                                             
   WITH(W_KDAY25) -                                                             
   WITH(W_KDAY26) -                                                             
   WITH(W_KDAY27) -                                                             
   WITH(W_KDAY28) -                                                             
   WITH(W_HPTDEMOS)                                                             
*                                                                               
*---------------------------------------------------------------------*         
* CREATE HUT/PUT M-F AVERAGES.                                        *         
*                                                                     *         
* RULE:                                                               *         
* -FIRST PERFORM WEEKLY AVERAGES BY QUARTER HOUR, AND THEN AVERAGE THE*         
*  WEEKLY AVERAGES.                                                   *         
*  NOTE: THIS RULE WAS NOT CONFIRMED BY NIELSEN. WE DECIDED TO        *         
*  REPLICATE THIS RULE FROM THE M-F TIME PERIOD AVERAGE AND WE        *         
*  MATCHED THE VALUES ON THE VIP.                                     *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1: AVERAGE THE 5 HUT/PUT RECORDS FOR MON THRU FRI FOR A QH, FOR           
*        A WEEK. CREATE THIS M-F AVERAGE LINE, AND KEEP AROUND THE              
*        INDIVIDUAL DAY RECORDS THAT GO INTO THE AVERAGE.                       
*                                                                               
SORT FROM(HPTOUT) TO(TPWORK7) USING(HWK2)                                       
*                                                                               
* STEP2: SPLICE THE INDIVIDUAL DAYS WITH THE AVERAGE LINE TO GET THE            
*        COMPLETE DAY MAP. THE RESULT IS 4 M-F WEEKLY AVERAGES.                 
*                                                                               
SPLICE FROM(TPWORK7) TO(TPWORK8) USING(NSRT) -                                  
   WITHANY -                                                                    
   ON(W_KDTYPE) -                                                               
   ON(W_KWEEK) -                                                                
   ON(W_KQHR) -                                                                 
   WITH(W_RECTYPE) -                                                            
   WITH(W_PNRAREA) -                                                            
   WITH(W_KAWK1) -                                                              
   WITH(W_KAWK2) -                                                              
   WITH(W_KAWK3) -                                                              
   WITH(W_KAWK4) -                                                              
   WITH(W_KDAY1) -                                                              
   WITH(W_KDAY2) -                                                              
   WITH(W_KDAY3) -                                                              
   WITH(W_KDAY4) -                                                              
   WITH(W_KDAY5) -                                                              
   WITH(W_KDAY6) -                                                              
   WITH(W_KDAY7) -                                                              
   WITH(W_KDAY8) -                                                              
   WITH(W_KDAY9) -                                                              
   WITH(W_KDAY10) -                                                             
   WITH(W_KDAY11) -                                                             
   WITH(W_KDAY12) -                                                             
   WITH(W_KDAY13) -                                                             
   WITH(W_KDAY14) -                                                             
   WITH(W_KDAY15) -                                                             
   WITH(W_KDAY16) -                                                             
   WITH(W_KDAY17) -                                                             
   WITH(W_KDAY18) -                                                             
   WITH(W_KDAY19) -                                                             
   WITH(W_KDAY20) -                                                             
   WITH(W_KDAY21) -                                                             
   WITH(W_KDAY22) -                                                             
   WITH(W_KDAY23) -                                                             
   WITH(W_KDAY24) -                                                             
   WITH(W_KDAY25) -                                                             
   WITH(W_KDAY26) -                                                             
   WITH(W_KDAY27) -                                                             
   WITH(W_KDAY28) -                                                             
   WITH(W_HPTDEMOS)                                                             
*                                                                               
* STEP3: AVERAGE TOGETHER THE M-F WEEKLY AVERAGES FOR A QUARTER HOUR.           
*        CREATE AN AVERAGE LINE, AND FOR NOW KEEP AROUND THE RECORDS            
*        THAT GO INTO THE AVERAGE. RECORDS ARE ALREADY SORTED.                  
*                                                                               
COPY FROM(TPWORK8) TO(TPWORK9) USING(HWK3)                                      
*                                                                               
* STEP4: CREATE A SINGLE AVERAGE LINE FOR EACH M-F HUT/PUT.                     
*        DO THAT BY SPLICING ALL RECORDS THAT GO INTO THE AVERAGE WITH          
*        THE AVERAGE LINE CREATED ABOVE. THE OUTCOME IS A RECORD THAT           
*        HAS INDICATORS FOR ALL WEEKS, THE DAY MAP, AS WELL AS THE              
*        AVERAGE DEMOS.                                                         
*                                                                               
SPLICE FROM(TPWORK9) USING(NSRT) -                                              
*&&PR*&& TO(TPHUTPUT) -                                                         
*&&DB*&& TO(TPHUTPTB) -                                                         
   WITHANY -                                                                    
   ON(W_KDTYPE) -                                                               
   ON(W_KQHR) -                                                                 
   WITH(W_RECTYPE) -                                                            
   WITH(W_PNRAREA) -                                                            
   WITH(W_KAWK1) -                                                              
   WITH(W_KAWK2) -                                                              
   WITH(W_KAWK3) -                                                              
   WITH(W_KAWK4) -                                                              
   WITH(W_KDAY1) -                                                              
   WITH(W_KDAY2) -                                                              
   WITH(W_KDAY3) -                                                              
   WITH(W_KDAY4) -                                                              
   WITH(W_KDAY5) -                                                              
   WITH(W_KDAY6) -                                                              
   WITH(W_KDAY7) -                                                              
   WITH(W_KDAY8) -                                                              
   WITH(W_KDAY9) -                                                              
   WITH(W_KDAY10) -                                                             
   WITH(W_KDAY11) -                                                             
   WITH(W_KDAY12) -                                                             
   WITH(W_KDAY13) -                                                             
   WITH(W_KDAY14) -                                                             
   WITH(W_KDAY15) -                                                             
   WITH(W_KDAY16) -                                                             
   WITH(W_KDAY17) -                                                             
   WITH(W_KDAY18) -                                                             
   WITH(W_KDAY19) -                                                             
   WITH(W_KDAY20) -                                                             
   WITH(W_KDAY21) -                                                             
   WITH(W_KDAY22) -                                                             
   WITH(W_KDAY23) -                                                             
   WITH(W_KDAY24) -                                                             
   WITH(W_KDAY25) -                                                             
   WITH(W_KDAY26) -                                                             
   WITH(W_KDAY27) -                                                             
   WITH(W_KDAY28) -                                                             
   WITH(W_HPTDEMOS)                                                             
*                                                                               
*&&DB                                                                           
COPY FROM(TPHUTPTA) TO(TPHUTPUT)                                                
COPY FROM(TPHUTPTB) TO(TPHUTPUT)                                                
*&&                                                                             
*                                                                               
*---------------------------------------------------------------------*         
* CREATE TSA HUT/PUT AVERAGES.                                        *         
* NIELSEN DOES NOT PROVIDE TSA HUT/PUTS. WE HAVE TO COMPUTE THEM BY   *         
* AVERAGING THE TSA IMPRESSIONS BY DAY/QH/STATION, AND THEN ADD THEM  *         
* ACROSS ALL STATIONS BY DAY/QH.                                      *         
* ADD THE TSA HUT/PUT AVERAGES TO THE HUT/PUT RECORDS CREATED ABOVE.  *         
*---------------------------------------------------------------------*         
*                                                                               
* STEP1: COMPUTE INDIVIDUAL DAY AVERAGE LINES FOR EACH STATION/DAY/QH.          
*        THROW AWAY THE RECORDS THAT GO INTO THE AVERAGE.                       
*                                                                               
SORT FROM(QHROUT) USING(THW1) -                                                 
*&&PR*&& TO(TPWORK10)                                                           
*&&DB*&& TO(TPWRK10A)                                                           
*                                                                               
* STEP2: COMPUTE M-F AVERAGE LINES FOR EACH QH/STATION.                         
*                                                                               
*        FIRST, AVERAGE MON THRU FRI FOR EACH QH/WEEK/STATION.                  
SORT FROM(QHROUT) TO(TPWORK11) USING(THW2)                                      
*                                                                               
*        NEXT, AVERAGE ALL THE WEEKS FOR A QH/STATION.                          
COPY FROM(TPWORK11) USING(THW3) -                                               
*&&PR*&& TO(TPWORK10)                                                           
*&&DB*&& TO(TPWRK10B)                                                           
*                                                                               
* STEP3: SUM THE AVERAGE TSA IMPRESSIONS FOR EACH QH ACROSS STATIONS,           
*        FOR EVERY INDIVIDUAL DAY AND M-F.                                      
*                                                                               
*&&DB                                                                           
COPY FROM(TPWRK10A) TO(TPWORK10)                                                
COPY FROM(TPWRK10B) TO(TPWORK10)                                                
*&&                                                                             
*                                                                               
COPY FROM(TPWORK10) TO(TPWORK12) USING(THW4)                                    
*                                                                               
* STEP4: ADD THE TSA HUTS/PUTS TO THE HUT/PUT RECORDS. WRITE THE                
*        NOW COMPLETE HUT/PUT RECORDS TO THE OUTPUT FILE.                       
*                                                                               
COPY JKFROM TO(TPHUTAVG) USING(THW5)                                            
*                                                                               
*---------------------------------------------------------------------*         
* FINISHED CREATING ALL TIME PERIOD AVERAGES IN TPALLAVG.                       
* ADD UNIVERSES AND HUTS/PUTS TO TIME PERIOD RECORDS.                           
* ADD UNIVERSES AND HUTS/PUTS AS SEPARATE RECORDS TO THE OUTPUT FILE.           
*---------------------------------------------------------------------*         
* COPY WIRED HUT/PUT RECORDS TO OUTPUT FILE. THEY WILL BE TREATED LIKE          
* A REGULAR STATION: I.E. WILL ADD UNIVERSES AND DMA HUTS/PUTS TO THESE         
* RECORDS.                                                                      
COPY FROM(TPHUTAVG) USING(HWIR) -                                               
*&&PR*&& TO(TPALLAVG)                                                           
*&&DB*&& TO(TPAVGWK5)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TPAVGWK1) TO(TPALLAVG)                                                
COPY FROM(TPAVGWK2) TO(TPALLAVG)                                                
COPY FROM(TPAVGWK3) TO(TPALLAVG)                                                
COPY FROM(TPAVGWK4) TO(TPALLAVG)                                                
COPY FROM(TPAVGWK5) TO(TPALLAVG)                                                
*&&                                                                             
*                                                                               
* ADD DMA HUTS/PUTS TO TIME PERIOD AND WIRED HUT/PUT RECORDS.                   
COPY JKFROM USING(THUT) -                                                       
*&&PR*&& TO(TPALLAV1)                                                           
*&&DB*&& TO(TPALAV1A)                                                           
*                                                                               
* CONCATENATE THE DMA HUT/PUT RECORDS TO THE ABOVE OUTPUT FILE. WE DO           
* THIS NOW BECAUSE WE NEED TO COPY THE UNIVERSES ONTO THESE RECORDS AS          
* WELL.                                                                         
COPY FROM(TPHUTAVG) USING(HDMA) -                                               
*&&PR*&& TO(TPALLAV1)                                                           
*&&DB*&& TO(TPALAV1B)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TPALAV1A) TO(TPALLAV1)                                                
COPY FROM(TPALAV1B) TO(TPALLAV1)                                                
*&&                                                                             
*                                                                               
* COPY UNIVERSES TO ALL RECORDS ON THE OUTPUT FILE.                             
COPY JKFROM USING(TUNV) -                                                       
*&&PR*&& TO(TPALLAV2)                                                           
*&&DB*&& TO(TPALAV2A)                                                           
*                                                                               
* ADD UNIVERSES AS SEPARATE RECORDS TO THE OUTPUT FILE.                         
COPY FROM(UEROUT) USING(UDEM) -                                                 
*&&PR*&& TO(TPALLAV2)                                                           
*&&DB*&& TO(TPALAV2B)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TPALAV2A) TO(TPALLAV2)                                                
COPY FROM(TPALAV2B) TO(TPALLAV2)                                                
*&&                                                                             
*                                                                               
* PROCESSING WEEKLY SHR MODE (STARTING WITH APR/2012 SURVEYS)                   
*                                                                               
***********************************************************************         
*** JOIN INDIVIDUAL WEEK PROGRAM WITH INDIVIDUAL WEEK HUT/PUT                   
***********************************************************************         
*                                                                               
COPY JKFROM USING(JON9) -                                                       
*&&PR*&& TO(TPALLAV3)                                                           
*&&DB*&& TO(TPALAV3A)                                                           
*                                                                               
***********************************************************************         
*** COPY ALL MULTIWEEK AVERAGES INTO TPALLAV3                                   
***********************************************************************         
*                                                                               
COPY FROM(TPALLAV2) USING(COP1) -                                               
*&&PR*&& TO(TPALLAV3)                                                           
*&&DB*&& TO(TPALAV3B)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TPALAV3A) TO(TPALLAV3)                                                
COPY FROM(TPALAV3B) TO(TPALLAV3)                                                
*&&                                                                             
*                                                                               
*                                                                               
*======================================================================         
*                                                                               
*                       TRUE WEEKLY PROCESSING                                  
*                                                                               
* AT THIS POINT, TPALLAV3 CONTAINS ALL MONTHLY AVERAGES. WE WILL NOW            
* CALCULATE TRUE WEEKLY AVERAGES.                                               
*                                                                               
* NOTE: A DELIBERATE DECISION WAS MADE TO CALCULATE THE TRUE WEEKLY             
*       AVERAGES VIA THE FOLLOWING SEQUENCE OF ICETOOL OPERATORS,               
*       *AFTER* THE CALCULATION OF THE MONTHLY AVERAGES. BY DOING IT            
*       THIS WAY, WE ELIMINATE ANY CHANCE OF BREAKING THE MONTHLY               
*       CALCULATIONS. IT IS POSSIBLE THAT THIS PROCESS COULD BE MADE            
*       SOMEWHAT MORE EFFICIENT, BY FOLDING THE TRUE WEEKLY LOGIC INTO          
*       THE MONTHLY LOGIC. BUT AT LEAST FOR NOW (AND POSSIBLY FOREVER),         
*       WE ARE TAKING THIS SAFER (ALBEIT A LITTLE SLOWER) APPROACH.             
*                                                                               
*======================================================================         
*                                                                               
*                                                                               
* COPY THE INDIVIDUAL DAY HUT/PUTS AND THE M-F AVERAGE HUT/PUTS INTO A          
* CONCATENATED FILE.                                                            
COPY FROM(HPTOUT) -                                                             
*&&PR*&& TO(TWWORK9)                                                            
*&&DB*&& TO(TWWORK9A)                                                           
COPY FROM(TPWORK8) USING(HWK4) -                                                
*&&PR*&& TO(TWWORK9)                                                            
*&&DB*&& TO(TWWORK9B)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TWWORK9A) TO(TWWORK9)                                                 
COPY FROM(TWWORK9B) TO(TWWORK9)                                                 
*&&                                                                             
*                                                                               
* JOIN THE INDIVIDUAL TRUE WEEKLY HUT/PUT VALUES WITH THE TSA HUT/PUT           
* AVERAGES.                                                                     
COPY JKFROM TO(TWHUTAVG) USING(THW6)                                            
*                                                                               
* CREATE A CONCATENATED FILE OF:                                                
*   1. INDIVIDUAL QH TIME PERIOD RECORDS                                        
*   2. M-F WEEKLY AVERAGE RECORDS                                               
*   3. WIRED HUT/PUT RECORDS                                                    
COPY FROM(TPPLCOMB) -                                                           
*&&PR*&& TO(TWPLCOMB)                                                           
*&&DB*&& TO(TWPLCMBA)                                                           
COPY FROM(TPWORK2) -                                                            
*&&PR*&& TO(TWPLCOMB)                                                           
*&&DB*&& TO(TWPLCMBB)                                                           
COPY FROM(TWHUTAVG) USING(HWIR) -                                               
*&&PR*&& TO(TWPLCOMB)                                                           
*&&DB*&& TO(TWPLCMBC)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TWPLCMBA) TO(TWPLCOMB)                                                
COPY FROM(TWPLCMBB) TO(TWPLCOMB)                                                
COPY FROM(TWPLCMBC) TO(TWPLCOMB)                                                
*&&                                                                             
*                                                                               
* ADD DMA HUTS/PUTS TO TIME PERIOD AND WIRED HUT/PUT RECORDS, BROKEN            
* DOWN TO THE WEEK LEVEL.                                                       
COPY JKFROM USING(WHUT) -                                                       
*&&PR*&& TO(TWALLAV1)                                                           
*&&DB*&& TO(TWALAV1A)                                                           
*                                                                               
* CONCATENATE THE DMA HUT/PUT RECORDS TO THE ABOVE OUTPUT FILE. WE DO           
* THIS NOW BECAUSE WE NEED TO COPY THE UNIVERSES ONTO THESE RECORDS AS          
* WELL.                                                                         
COPY FROM(TWHUTAVG) USING(HDMA) -                                               
*&&PR*&& TO(TWALLAV1)                                                           
*&&DB*&& TO(TWALAV1B)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TWALAV1A) TO(TWALLAV1)                                                
COPY FROM(TWALAV1B) TO(TWALLAV1)                                                
*&&                                                                             
*                                                                               
* COPY UNIVERSES TO ALL RECORDS ON THE OUTPUT FILE.                             
COPY JKFROM TO(TWALLAV2) USING(WUNV)                                            
*                                                                               
* JOIN INDIVIDUAL WEEK PROGRAM WITH INDIVIDUAL WEEK HUT/PUT.                    
COPY JKFROM USING(JONW) -                                                       
*&&PR*&& TO(TWALLAV3)                                                           
*&&DB*&& TO(TWALAV3A)                                                           
*                                                                               
* COPY M-F AVERAGES                                                             
COPY FROM(TWALLAV2) USING(COP1) -                                               
*&&PR*&& TO(TWALLAV3)                                                           
*&&DB*&& TO(TWALAV3B)                                                           
*                                                                               
* PREPARE THE MONTHLY AVERAGE FILE TO BE SORTED TOGETHER WITH THE TRUE          
* WEEKLY AVERAGE FILE.                                                          
COPY JKFROM USING(JONA) -                                                       
*&&PR*&& TO(TWALLAV3)                                                           
*&&DB*&& TO(TWALAV3C)                                                           
*                                                                               
*&&DB                                                                           
COPY FROM(TWALAV3A) TO(TWALLAV3)                                                
COPY FROM(TWALAV3B) TO(TWALLAV3)                                                
COPY FROM(TWALAV3C) TO(TWALLAV3)                                                
*&&                                                                             
*                                                                               
***********************************************************************         
* FINAL SORT: SORT THE TIME PERIOD AVERAGES IN A SEQUENCE THAT MATCHES*         
* THE MONTHLY VIP ORDER WITHIN A STATION. (POST-APRIL 2012)           *         
***********************************************************************         
*                                                                               
SORT FROM(TWALLAV3) TO(TPSRTAV1) USING(FTSR)                                    
*                                                                               
*                                                                               
*                                                                               
***********************************************************************         
* THIS STEP COMPUTES THE LOCAL MONTHLY PROGRAM AVERAGES.              *         
*                                                                     *         
* INPUT:  TPPLCOMB: FILE WITH RECORDS BROKEN AT THE INDIVIDUAL QH     *         
* -----   LEVEL THAT INCLUDES BOTH THE TIME PERIOD AND PROGRAM        *         
*         LINEUP INFORMATION. THIS FILE WAS CREATED IN THE STEP       *         
*         THAT COMPUTES THE TIME PERIOD AVERAGES.                     *         
*                                                                     *         
* OUTPUT: PASRTAV1: FILE WITH ALL PROGRAM AVERAGES FOR ONE MARKET.    *         
* -----   TYPES OF PROGRAM AVERAGES:                                  *         
*           1. INDIVIDUAL DAY "AS TELECAST" AVERAGE.                  *         
*           2. INDIVIDUAL DAY "NORMAL" AVERAGE.                       *         
*           3. MULTI-DAY EXCLUDING WEEKENDS "AS TELECAST" AVERAGE.    *         
*           4. MULTI-DAY INCLUDING WEEKENDS "AS TELECAST" AVERAGE.    *         
*           5. MULTI-DAY EXCLUDING WEEKENDS "NORMAL" AVERAGE.         *         
*           6. MULTI-DAY INCLUDING WEEKENDS "NORMAL" AVERAGE.         *         
*                                                                     *         
* NOTE: WHEN PERFORMING AVERAGES, THE RESULTS ARE TRUNCATED, NOT      *         
* ROUNDED. WE HAVE CONFIRMED THAT NIELSEN ALSO TRUNCATES THE RESULTS  *         
* ON THE MONTHLY E-VIP.                                               *         
***********************************************************************         
*                                                                               
*---------------------------------------------------------------------*         
* PRELIMINARY STEP                                                    *         
*                                                                     *         
* EXCLUDE FROM THE INPUT FILE PROGRAM NAMES THAT ARE NOT FOR TRUE     *         
* PROGRAMS. FOR EXAMPLE, "OFF AIR", "NOT AVAILABLE"... ETC.           *         
* ALSO EXCLUDE ANYTHING OTHER THAN TOTAL DMA (I.E. WIRED) AND ALL THE *         
* STATIONS THAT ARE NOT REPORTABLE ON THE VIP (EX: CABLE STATIONS).   *         
*                                                                     *         
* ASSIGN A PROGRAM ID TO EACH SECTION OF A PROGRAM THAT HAS CONTIGUOUS*         
* OR OVERLAPPING QUARTER HOURS ACROSS ALL DAYS AND WEEKS. EACH PROGRAM*         
* ID NEEDS TO BE TREATED AS A SEPARATE PROGRAM FOR PAV AVERAGING.     *         
* IN THE PROCESS, DETERMINE THE "NORMAL" START AND END TIMES, WHERE   *         
* THEY EXIST.                                                         *         
*                                                                     *         
* SORT THE OUTPUT FILE IN A SEQUENCE THAT WILL BE USEFUL TO ALL       *         
* SUBSEQUENT STEPS. IN THE PROCESS, CREATE A FILE OF RECORDS THAT     *         
* HOLD THE "REPORT" START AND END TIME FOR EACH PROGRAM.              *         
*---------------------------------------------------------------------*         
*                                                                               
* ASSIGN PROGRAM IDS.                                                           
* A PROGRAM ID IDENTIFIES TELECASTS WITH THE SAME PROGRAM NAME                  
* AND CONTIGUOUS OR OVERLAPPING QUARTER HOURS.                                  
*                                                                               
SORT FROM(TPPLCOMB) TO(TPPLCMBT) USING(PROG)                                    
*                                                                               
* IF THERE ARE NO "VIP REPORTABLE" STATIONS PRESENT FOR THE MARKET,             
* THEN TPPLCMBT WILL BE EMPTY. IN THAT CASE, WE NEED TO STOP HERE, AND          
* RETURN TO DELMCALC. THE TP AVERAGES WILL BE SAVED AT THAT POINT.              
*                                                                               
COUNT FROM(TPPLCMBT) EMPTY RC8                                                  
*                                                                               
* ASSIGN SUB-PROGRAM IDS FOR WEEKEND ONLY PROGRAMS.                             
* IN THE PROCESS,CREATE A SEPARATE FILE OF "NORMAL" RECORDS (NORPROGS).         
*                                                                               
SORT FROM(TPPLCMBT) TO(TPPLCMBW) USING(WKND)                                    
*                                                                               
*    ==========================================================                 
*  || DEFINITION:                                              ||               
*  || FROM THIS POINT ON, THE WORD "PROGRAM" REFERS TO THE     ||               
*  || COMBINATION OF PROGRAM NAME/ PROGRAM ID/ SUB-PROGRAM ID. ||               
*    ==========================================================                 
*                                                                               
* SORT TPPLCMBT IN AN ORDER THAT WILL BE USEFUL TO SUBSEQUENT STEPS.            
* IN THE PROCESS, CREATE A SEPARATE FILE OF OVERALL "REPORT" START              
* AND END TIMES FOR EACH PROGRAM (REPTIMES).                                    
*                                                                               
SORT FROM(TPPLCMBW) TO(TPPLCMBS) USING(SREP)                                    
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR INDIVIDUAL DAY "AS TELECAST" AVERAGES.           *         
*                                                                     *         
* RULES: -AVERAGE ALL QUARTER HOURS OF A PROGRAM FOR A DAY OF THE     *         
*         WEEK (MON THROUGH SUN)                                      *         
*        -DO NOT CREATE INIDIVIDUAL DAY AVERAGES FOR PROGRAMS THAT    *         
*         QUALIFY FOR A "M-F" AVERAGE.                                *         
*---------------------------------------------------------------------*         
*                                                                               
* NOTE: FOR NOW, CREATE INDIVIDUAL DAY AS TELECAST AVERAGES FOR ALL             
* DAYS AND PROGRAMS, INCLUDING THE ONES THAT QUALIFY FOR A "M-F"                
* AVERAGE. THOSE WILL BE EXCLUDED LATER.                                        
*                                                                               
COPY FROM(TPPLCMBS) TO(PAVDYTEL) USING(PDT1)                                    
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR INDIVIDUAL DAY "NORMAL" AVERAGES.                *         
*                                                                     *         
* RULES: -FOR EVERY DAY OF THE WEEK (MON THROUGH SUN), AVERAGE THE    *         
*         QUARTER HOURS OF THE PROGRAM THAT FALL WITHIN THE PROGRAMS  *         
*         "NORMAL" START AND END TIMES.                               *         
*        -AN AVERAGE IS CREATED UNDER THE FOLLOWING CONDITIONS:       *         
*         1. "NORMAL" START AND END TIME MUST BE CREATED.             *         
*                 AND                                                 *         
*            FOR THAT DAY,                                            *         
*         2. THERE MUST BE AT LEAST ONE QUARTER HOUR FOR AT LEAST ONE *         
*            WEEK THAT IS WITHIN THE "NORMAL" START TIME - END TIME.  *         
*                 AND                                                 *         
*         3. THERE MUST BE AT LEAST ONE QUARTER HOUR FOR AT LEAST ONE *         
*            WEEK THAT IS OUTSIDE THE "NORMAL" START TIME - END TIME. *         
*        -DO NOT CREATE INIDIVIDUAL DAY "NORMAL" RECORDS FOR PROGRAMS *         
*         THAT QUALIFY FOR A "M-F" AVERAGE.                           *         
*---------------------------------------------------------------------*         
*                                                                               
* NOTE: FOR NOW, CREATE INDIVIDUAL DAY "NORMAL" AVERAGES FOR ALL DAYS           
* AND PROGRAMS, INCLUDING THE ONES THAT QUALIFY FOR A "M-F" AVERAGE.            
* THOSE WILL BE EXCLUDED LATER.                                                 
*                                                                               
* USE THE FILE OF "NORMAL" RECORDS THAT WAS PREVIOUSLY CREATED.                 
*                                                                               
* GET ALL THE QHS FOR THE PROGRAMS THAT HAVE A "NORMAL" START AND END           
* TIME, AND SET A FLAG ON EACH QH LINE TO INDICATE IF IT FITS BETWEEN           
* THE "NORMAL" BOUNDARIES.                                                      
*                                                                               
COPY JKFROM TO(PAVWRK1) USING(PDN1)                                             
*                                                                               
* KEEP ONLY THE PROGRAMS/DAYS THAT HAVE QUARTER HOURS BOTH INSIDE AND           
* OUTSIDE THE NORMAL BOUNDARIES. AVERAGE THEM TO CREATE THE INDIVIDUAL          
* DAY NORMAL AVERAGES.                                                          
*                                                                               
SORT FROM(PAVWRK1) TO(PAVDYNOR) USING(PDN2)                                     
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR MULTI-DAY "AS TELECAST" AVERAGES, EXCLUDING      *         
* WEEKENDS.                                                           *         
*                                                                     *         
* RULES: -SAME AS FOR INDIVIDUAL DAY "AS TELECAST", PLUS:             *         
*        -INCLUDE ALL WEEKDAYS IN THE AVERAGE (MON THROUGH FRI)       *         
*        -THE PROGRAM NEEDS TO HAVE RUN AT LEAST 2 WEEKDAYS IN ORDER  *         
*         TO HAVE AN AVERAGE                                          *         
*        -CREATE AV2 IF THE PROGRAM RAN 2 OUT OF 5 WEEKDAYS           *         
*        -CREATE AV3 IF THE PROGRAM RAN 3 OUT OF 5 WEEKDAYS           *         
*        -CREATE AV4 IF THE PROGRAM RAN 4 OUT OF 5 WEEKDAYS           *         
*        -CREATE AV5 IF THE PROGRAM RAN ALL 5 WEEKDAYS, AND THERE IS  *         
*         AT LEAST ONE TELECAST THAT ENDED AFTER THE M-F BOUNDARY     *         
*        -CREATE M-F IF THE PROGRAM RAN ALL 5 WEEKDAYS, AND           *         
*         ALL TELECASTS ENDED BEFORE THE M-F BOUNDARY                 *         
*                                                                     *         
*        THE M-F BOUNDARY IS 4 PM IN THE EASTERN TIME ZONE, AND 3 PM  *         
*        EVERYWHERE ELSE.                                             *         
*---------------------------------------------------------------------*         
*                                                                               
COPY FROM(TPPLCMBS) TO(PAVMDTL1) USING(PMT1)                                    
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR MULTI-DAY "AS TELECAST" AVERAGES, INCLUDING      *         
* WEEKENDS.                                                           *         
*                                                                     *         
* RULES: -SAME AS FOR INDIVIDUAL DAY "AS TELECAST", PLUS:             *         
*        -THE PROGRAM NEEDS TO HAVE RUN AT LEAST 2 WEEKDAYS AND 1     *         
*         WEEKEND DAY.                                                *         
*        -CREATE AV2 THROUGH AV7 AVERAGES.                            *         
*---------------------------------------------------------------------*         
*                                                                               
COPY FROM(TPPLCMBS) TO(PAVMDTL2) USING(PMT2)                                    
*                                                                               
*---------------------------------------------------------------------*         
* EXCLUDE INDIVIDUAL DAY "AS TELECAST" AND "NORMAL" AVERAGES FOR      *         
* PROGRAMS THAT HAVE A "M-F" MULTI-DAY AVERAGE.                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE "M-F" PROGRAMS FROM THE INDIVIDUAL DAY AS "TELECAST" AVERAGES         
COPY JKFROM USING(PDT2) -                                                       
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLA)                                                            
*                                                                               
* EXCLUDE "M-F" PROGRAMS FROM THE INDIVIDUAL DAY "NORMAL" AVERAGES              
COPY JKFROM USING(PDN3) -                                                       
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLB)                                                            
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR MULTI-DAY "NORMAL" AVERAGES, EXCLUDING WEEKENDS. *         
*                                                                     *         
* RULES: -AVERAGE THE QUARTER HOURS OF THE PROGRAM THAT FALL WITHIN   *         
*         THE PROGRAMS  "NORMAL" START AND END TIMES.                 *         
*        -AN AVERAGE IS CREATED UNDER THE FOLLOWING CONDITIONS:       *         
*         1. NORMAL START AND END TIME MUST BE CREATED FOR THE        *         
*            WEEKDAYS OF PROGRAM.                                     *         
*                 AND                                                 *         
*         2. THERE MUST BE AT LEAST ONE QUARTER HOUR ACROSS ALL       *         
*            WEEKDAYS THAT IS OUTSIDE THE "NORMAL" START-END TIME.    *         
*                 AND                                                 *         
*         3. THERE MUST BE AT LEAST TWO DIFFERENT WEEKDAYS THAT       *         
*            CONTRIBUTE QUARTER HOURS TO THE "NORMAL" AVERAGE.        *         
*---------------------------------------------------------------------*         
*                                                                               
* USE THE FILE OF MULTI-DAY "AS TELECAST" AVERGES EXCLUDING WEEKENDS,           
* IN COMBINATION WITH THE FILE OF "NORMAL" START AND END TIMES,                 
* TO DETERMINE WHICH PROGRAMS HAVE MULTI-DAY AVERAGES AS WELL AS                
* "NORMALS".                                                                    
*                                                                               
COPY JKFROM TO(PAVWRK2) USING(PMN1)                                             
*                                                                               
* GET ALL THE QHS  FOR THE PROGRAMS THAT HAVE BOTH MULTI-DAY AVERAGES           
* AND "NORMALS", AND SET A FLAG ON EACH QH LINE TO INDICATE IF IT               
* FITS BETWEEN THE NORMAL BOUNDARIES (THE FLAG IS W_NORINCL).                   
*                                                                               
COPY JKFROM TO(PAVWRK3) USING(PMN2)                                             
*                                                                               
* KEEP ONLY THE PROGRAMS THAT HAVE AT LEAST ONE QH OUTSIDE THE                  
* "NORMAL" BOUNDARIES, AND AT LEAST TWO DIFFERENT WEEKDAYS WITH QHS             
* INSIDE THE BOUNDARIES.                                                        
* AVERAGE THE QHS INSIDE THE BOUNDARIES TO CREATE THE MULTI-DAY                 
* "NORMAL" AVERAGES EXCLUDING WEEKENDS.                                         
*                                                                               
SORT FROM(PAVWRK3) USING(PMN3) -                                                
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLC)                                                            
*                                                                               
*---------------------------------------------------------------------*         
* CREATE RECORDS FOR MULTI-DAY "NORMAL" AVERAGES, INCLUDING WEEKENDS. *         
*                                                                     *         
* RULES: -AVERAGE THE QUARTER HOURS OF THE PROGRAM THAT FALL WITHIN   *         
*         THE PROGRAM'S'"NORMAL" START AND END TIMES.                 *         
*        -AN AVERAGE IS CREATED UNDER THE FOLLOWING CONDITIONS:       *         
*         1. "NORMAL" START AND END TIME MUST BE CREATED FOR THE      *         
*            WEEKDAYS OF PROGRAM.                                     *         
*                 AND                                                 *         
*         2. THERE MUST BE AT LEAST ONE QUARTER HOUR ACROSS ALL       *         
*            DAYS THAT IS OUTSIDE THE "NORMAL" START TIME-END TIME.   *         
*                 AND                                                 *         
*         3. THERE MUST BE AT LEAST TWO DIFFERENT WEEKDAYS AND AT     *         
*            LEAST ONE WEEKEND DAY THAT CONTRIBUTE QUARTER HOURS TO   *         
*            THE "NORMAL" AVERAGE.                                    *         
*---------------------------------------------------------------------*         
*                                                                               
* USE THE FILE OF MULTI-DAY "AS TELECAST" AVERAGES INCLUDING WEEKENDS,          
* IN COMBINATION WITH THE FILE OF "NORMAL" START AND END TIMES, TO              
* DETERMINE WHICH PROGRAMS HAVE MULTI-DAY AVERAGES AS WELL AS "NORMAL".         
*                                                                               
COPY JKFROM TO(PAVWRK4) USING(PMN4)                                             
*                                                                               
* GET ALL THE QHS  FOR THE PROGRAMS THAT HAVE BOTH MULTI-DAY AVERAGES           
* AND NORMALS, AND SET A FLAG ON EACH QH LINE TO INDICATE IF IT                 
* FITS BETWEEN THE NORMAL BOUNDARIES (THE FLAG IS W_NORINCL)                    
*                                                                               
COPY JKFROM TO(PAVWRK5) USING(PMN5)                                             
*                                                                               
* KEEP ONLY THE PROGRAMS THAT HAVE AT LEAST ONE QH OUTSIDE THE                  
* NORMAL BOUNDARY, AND AT LEAST TWO DIFFERENT WEEKDAYS AND ONE WEEKEND          
* DAY WITH QHS INSIDE THE BOUNDARIES.                                           
* AVERAGE THE QHS INSIDE THE BOUNDARY TO CREATE THE MULTI-DAY NORMAL            
* AVERAGES INCLUDING WEEKENDS.                                                  
*                                                                               
SORT FROM(PAVWRK5) USING(PMN6) -                                                
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLD)                                                            
*                                                                               
*---------------------------------------------------------------------*         
* CREATE THE FINAL OUTPUT FILE                                        *         
*---------------------------------------------------------------------*         
* COPY MULTI-DAY AS TELECAST AVERAGES TO THE OUTPUT FILE                        
COPY FROM(PAVMDTL1) -                                                           
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLE)                                                            
COPY FROM(PAVMDTL2) -                                                           
*&&PR*&& TO(PAVALL)                                                             
*&&DB*&& TO(PAVALLF)                                                            
*                                                                               
*&&DB                                                                           
COPY FROM(PAVALLA) TO(PAVALL)                                                   
COPY FROM(PAVALLB) TO(PAVALL)                                                   
COPY FROM(PAVALLC) TO(PAVALL)                                                   
COPY FROM(PAVALLD) TO(PAVALL)                                                   
COPY FROM(PAVALLE) TO(PAVALL)                                                   
COPY FROM(PAVALLF) TO(PAVALL)                                                   
*&&                                                                             
*                                                                               
* JOIN THE PAV AVERAGES WITH THE FILE OF OVERALL "REPORT" START AND             
* END TIMES TO SLOT THESE FIELDS ONTO ALL THE AVERAGE RECORDS.                  
COPY JKFROM TO(PAVAVG) USING(REPT)                                              
*                                                                               
* JOIN THE PAV AVERAGES WITH THE UNIVERSE FILE TO GET THE UNIVERSES             
* ON THE AVERAGE RECORDS.                                                       
COPY JKFROM TO(PAVAV1) USING(PUNV)                                              
*                                                                               
* FINAL SORT OF THE OUTPUT FILE                                                 
SORT FROM(PAVAV1) TO(PASRTAV1) USING(FPSR)                                      
*                                                                               
*                                                                               
./ ADD NAME=SEQ1CNTL   ** CONTROL CARDS FOR USING(SEQ1)                         
***********************************************************************         
* .   COPY THE NIELSEN RECORDS                                                  
* ..  ASSIGN UNIQUE FILE SEQUENCE NUMBER TO EACH FILE SEGMENT                   
***********************************************************************         
  OMIT COND=(REC_CODE,EQ,C'99',OR,                                              
              REC_CODE,EQ,C'03')                                                
*                                                                               
  INREC IFTHEN=(WHEN=(REC_CODE,EQ,C'01'),                                       
           BUILD=(W_KSEQ:SEQNUM,LEN_W_KSEQ,BI,                                  
                  W_REC)),                                                      
        IFTHEN=(WHEN=NONE,                                                      
           BUILD=(W_KSEQ:X,                                                     
                  W_REC))                                                       
*                                                                               
  OUTREC IFTHEN=(WHEN=GROUP,BEGIN=(PARSE_REC_CODE,EQ,C'01'),                    
                 PUSH=(REC_CODE))                                               
*                                                                               
  OUTFIL FNAMES=(MKTFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'01')                     
  OUTFIL FNAMES=(STAFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'02')                     
  OUTFIL FNAMES=(UERFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'04')                     
  OUTFIL FNAMES=(ITBFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'05')                     
  OUTFIL FNAMES=(HPTFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'07')                     
  OUTFIL FNAMES=(QHRFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'08')                     
  OUTFIL FNAMES=(TSAFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'09')                     
*                                                                               
*                                                                               
./ ADD NAME=SEQ2CNTL   ** CONTROL CARDS FOR USING(SEQ2)                         
***********************************************************************         
* .   COPY THE NIELSEN RECORDS                                                  
* ..  ASSIGN UNIQUE FILE SEQUENCE NUMBER TO EACH FILE SEGMENT                   
***********************************************************************         
  OMIT COND=(REC_CODE,EQ,C'99')                                                 
*                                                                               
  INREC IFTHEN=(WHEN=(REC_CODE,EQ,C'11',OR,                                     
                      REC_CODE,EQ,C'21'),                                       
           BUILD=(W_KSEQ:SEQNUM,LEN_W_KSEQ,BI,                                  
                  W_REC)),                                                      
        IFTHEN=(WHEN=NONE,                                                      
           BUILD=(W_KSEQ:X,                                                     
                  W_REC))                                                       
*                                                                               
  OUTREC IFTHEN=(WHEN=GROUP,BEGIN=(PARSE_REC_CODE,EQ,C'11',OR,                  
                                   PARSE_REC_CODE,EQ,C'21'),                    
                 PUSH=(REC_CODE))                                               
*                                                                               
  OUTFIL FNAMES=(PMKFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'11',OR,                  
                                   PARSE_REC_CODE,EQ,C'21')                     
  OUTFIL FNAMES=(PNRFILE),INCLUDE=(PARSE_REC_CODE,EQ,C'12',OR,                  
                                   PARSE_REC_CODE,EQ,C'22')                     
*                                                                               
*                                                                               
./ ADD NAME=PR01CNTL   ** CONTROL CARDS FOR USING(PR01)                         
***********************************************************************         
* .   PARSE THE NIELSEN RECORDS                                                 
* ..  ASSIGN UNIQUE FILE NUMBER TO EACH FILE                                    
***********************************************************************         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'01'),                                 
   PARSE=(P_MHQCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_MHQFMTV=(ENDBEFR=X'05',FIXLEN=4),                                   
          P_MHQMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHQDMAC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHQMRNK=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHQGEOI=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHQGEONM=(ENDBEFR=X'05',FIXLEN=26),                                 
          P_MHQSDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHQEDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHQNDAYS=(ENDBEFR=X'05',FIXLEN=3),                                  
          P_MHQNWKS=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHQRDST=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHQRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQSPEXC=(ENDBEFR=X'05',FIXLEN=2),                                  
          P_MHQSUBSI=(ENDBEFR=X'05',FIXLEN=5),                                  
          P_MHQHEASI=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQREPRO=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQDACCR=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQPBACK=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQINTRV=(ENDBEFR=X'05',FIXLEN=2),                                  
          P_MHQCMETH=(ENDBEFR=X'05',FIXLEN=2),                                  
          P_MHQCTIND=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQRPRD=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHQRYEAR=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_MHQMKTZ=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHQMKCLS=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQDMEXC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHQDSAVE=(ENDBEFR=X'05',FIXLEN=1)),                                 
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:P_MHQCODE,                                                    
          W_KRSRVC:P_MHQRSRVC,                                                  
          W_KMKTC:P_MHQMKTC,                                                    
          W_KRPRD:P_MHQRPRD,                                                    
          W_KRPYR:P_MHQRYEAR,                                                   
          W_KSPEXC:P_MHQSPEXC,                                                  
          W_KPBACK:P_MHQPBACK,                                                  
          W_KSUBSI:P_MHQSUBSI,                                                  
          W_KCALDT:P_MHQSDT,                                                    
          W_MHQCODE:P_MHQCODE,                                                  
          W_MHQFMTV:P_MHQFMTV,                                                  
          W_MHQMKTC:P_MHQMKTC,UFF,M11,LENGTH=LEN_W_MHQMKTC,                     
          W_MHQDMAC:P_MHQDMAC,UFF,M11,LENGTH=LEN_W_MHQDMAC,                     
          W_MHQMRNK:P_MHQMRNK,UFF,M11,LENGTH=LEN_W_MHQMRNK,                     
          W_MHQGEOI:P_MHQGEOI,                                                  
          W_MHQGEONM:P_MHQGEONM,                                                
          W_MHQSDT:P_MHQSDT,                                                    
          W_MHQEDT:P_MHQEDT,                                                    
          W_MHQNDAYS:P_MHQNDAYS,UFF,M11,LENGTH=LEN_W_MHQNDAYS,                  
          W_MHQNWKS:P_MHQNWKS,UFF,M11,LENGTH=LEN_W_MHQNWKS,                     
          W_MHQRDST:P_MHQRDST,                                                  
          W_MHQRSRVC:P_MHQRSRVC,                                                
          W_MHQSPEXC:P_MHQSPEXC,                                                
          W_MHQSUBSI:P_MHQSUBSI,                                                
          W_MHQHEASI:P_MHQHEASI,                                                
          W_MHQREPRO:P_MHQREPRO,                                                
          W_MHQDACCR:P_MHQDACCR,                                                
          W_MHQPBACK:P_MHQPBACK,                                                
          W_MHQINTRV:P_MHQINTRV,UFF,M11,LENGTH=LEN_W_MHQINTRV,                  
          W_MHQCMETH:P_MHQCMETH,                                                
            CHANGE=(LEN_W_MHQCMETH,  ** 2-CHAR. INPUT, STORE IN 1 BYTE          
              C'1 ',W_COLLECTION_METHOD_SET_METER,                              
              C'2 ',W_COLLECTION_METHOD_LPM,                                    
              C'3 ',W_COLLECTION_METHOD_LPM_PRELIM,                             
              C'4 ',W_COLLECTION_METHOD_DIARY_ONLY,                             
              C'5 ',W_COLLECTION_METHOD_SET_METER_IMPACT,                       
              C'6 ',W_COLLECTION_METHOD_CODE_READER,                            
              C'7 ',W_COLLECTION_METHOD_CODE_READER_IMPACT,                     
              C'8 ',W_COLLECTION_METHOD_LPM_PPM_IMPACT,                         
              C'9 ',W_COLLECTION_METHOD_SET_METER_PPM_IMPACT,                   
              C'10',W_COLLECTION_METHOD_SET_METER_RPD_IMPACT,                   
              C'11',W_COLLECTION_METHOD_CODE_READER_RPD_IMPACT,                 
              C'12',W_COLLECTION_METHOD_RPD_PLUS_IMPACT,                        
              C'13',W_COLLECTION_METHOD_SET_METER_PPM_RPD_IMPACT,               
              C'20',W_COLLECTION_METHOD_LPM_PPM,                                
              C'30',W_COLLECTION_METHOD_SET_METER_PPM,                          
              C'40',W_COLLECTION_METHOD_SET_METER_RPD,                          
              C'50',W_COLLECTION_METHOD_CODE_READER_RPD,                        
              C'60',W_COLLECTION_METHOD_RPD_PLUS),                              
              NOMATCH=(W_COLLECTION_METHOD_INVALID),                            
          W_MHQCTIND:P_MHQCTIND,                                                
          W_MHQRPRD:P_MHQRPRD,UFF,M11,LENGTH=LEN_W_MHQRPRD,                     
          W_MHQRYEAR:P_MHQRYEAR,UFF,M11,LENGTH=LEN_W_MHQRYEAR,                  
          W_MHQMKTZ:P_MHQMKTZ,UFF,M11,LENGTH=LEN_W_MHQMKTZ,                     
          W_MHQMKCLS:P_MHQMKCLS,                                                
          W_MHQDMEXC:P_MHQDMEXC,                                                
          W_MHQDSAVE:P_MHQDSAVE))                                               
  OUTREC IFTHEN=(WHEN=(W_MHQRSRVC,EQ,RSRVC_NSIP),                               
                OVERLAY=(W_PREVIEW:PREVW))                                      
                                                                                
* NOTE: ANY COLLECTION METHOD WE EXPECT TO RECEIVE MUST BE ENUMERATED           
*       ABOVE. AS A PRECAUTION, WE USE THE "NOMATCH" FEATURE TO PREVENT         
*       ANY ICE212A FAILURES. IF WE RECEIVE AN UNEXPECTED COLLECTION            
*       METHOD FOR A MARKET, THEN THE MARKET RECORD WILL BE DISCARDED,          
*       WHICH WILL CAUSE THE ENTIRE MARKET TO BE IGNORED. BUT WE DO NOT         
*       EXPECT THIS TO HAPPEN!                                                  
                                                                                
 OUTFIL OMIT=(W_MHQCMETH,EQ,W_COLLECTION_METHOD_INVALID)                        
                                                                                
***********************************************************************         
./ ADD NAME=PR02CNTL   ** CONTROL CARDS FOR USING(PR02)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'02'),                                 
   PARSE=(P_DHRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_DHRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_DHRRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_DHRSDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_DHREDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_DHRMOOC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_DHRDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_DHRCALL=(ENDBEFR=X'05',FIXLEN=12),                                  
          P_DHROCALL=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_DHRPPLUS=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_DHRCLONG=(ENDBEFR=X'05',FIXLEN=25),                                 
          P_DHRBCHAN=(ENDBEFR=X'05',FIXLEN=7),                                  
          P_DHRDSRC=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_DHRAFFL1=(ENDBEFR=X'05',FIXLEN=7),                                  
          P_DHRAFFL2=(ENDBEFR=X'05',FIXLEN=7),                                  
          P_DHRAFFL3=(ENDBEFR=X'05',FIXLEN=7),                                  
          P_DHRDGRP=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_DHRPRNT=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_DHRSATL=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_DHRSTOT=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_DHRSTYPE=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_DHRAEIND=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_DHRREPST=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_DHRPNIND=(ENDBEFR=X'05',FIXLEN=1)),                                 
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          DHRCODE:P_DHRCODE,                                                    
          DHRMKTC:P_DHRMKTC,UFF,M11,LENGTH=03,                                  
          DHRRSRVC:P_DHRRSRVC,                                                  
          DHRSDT:P_DHRSDT,                                                      
          DHREDT:P_DHREDT,                                                      
          DHRMOOC:P_DHRMOOC,UFF,M11,LENGTH=03,                                  
          DHRDISC:P_DHRDISC,UFF,TO=BI,LENGTH=04,                                
          DHRCALL:P_DHRCALL,                                                    
          DHROCALL:P_DHROCALL,                                                  
          DHRPPLUS:P_DHRPPLUS,                                                  
          DHRCLONG:P_DHRCLONG,                                                  
          DHRBCHAN:P_DHRBCHAN,                                                  
          DHRDSRC:P_DHRDSRC,                                                    
          DHRAFFL1:P_DHRAFFL1,                                                  
          DHRAFFL2:P_DHRAFFL2,                                                  
          DHRAFFL3:P_DHRAFFL3,                                                  
          DHRDGRP:P_DHRDGRP,UFF,M11,LENGTH=05,                                  
          DHRPRNT:P_DHRPRNT,                                                    
          DHRSATL:P_DHRSATL,                                                    
          DHRSTOT:P_DHRSTOT,                                                    
          DHRSTYPE:P_DHRSTYPE,UFF,M11,LENGTH=01,                                
          DHRAEIND:P_DHRAEIND,                                                  
          DHRREPST:P_DHRREPST,                                                  
          DHRPNIND:P_DHRPNIND))                                                 
  OUTREC IFTHEN=(WHEN=(DHRCODE,EQ,C'02'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:DHRCODE,                                                      
          W_KMKTC:DHRMKTC,                                                      
          W_KDISC:DHRDISC,                                                      
          W_KOCALL:DHROCALL,                                                    
          W_KCALDT:DHRSDT,                                                      
          W_DHRREC:DHRREC))                                                     
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR04CNTL   ** CONTROL CARDS FOR USING(PR04)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'04'),                                 
   PARSE=(P_UERCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_UERMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_UERGEOI=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_UERRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_UERSAMTY=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_UERMTROA=(ENDBEFR=X'05',FIXLEN=10,REPEAT=24)),                      
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          UERCODE:P_UERCODE,                                                    
          UERMKTC:P_UERMKTC,UFF,M11,LENGTH=03,                                  
          UERGEOI:P_UERGEOI,                                                    
          UERRSRVC:P_UERRSRVC,                                                  
          UERSAMTY:P_UERSAMTY,                                                  
          UERMTROA:P_UERMTROA,UFF,M11,LENGTH=10,                                
          UERMTROB:P_UERMTROB,UFF,M11,LENGTH=10,                                
          UERHHLDS:P_UERHHLDS,UFF,M11,LENGTH=10,                                
          UERCH25:P_UERCH25,UFF,M11,LENGTH=10,                                  
          UERCH611:P_UERCH611,UFF,M11,LENGTH=10,                                
          UERM1214:P_UERM1214,UFF,M11,LENGTH=10,                                
          UERM1517:P_UERM1517,UFF,M11,LENGTH=10,                                
          UERM1820:P_UERM1820,UFF,M11,LENGTH=10,                                
          UERM2124:P_UERM2124,UFF,M11,LENGTH=10,                                
          UERM2534:P_UERM2534,UFF,M11,LENGTH=10,                                
          UERM3549:P_UERM3549,UFF,M11,LENGTH=10,                                
          UERM5054:P_UERM5054,UFF,M11,LENGTH=10,                                
          UERM5564:P_UERM5564,UFF,M11,LENGTH=10,                                
          UERM65P:P_UERM65P,UFF,M11,LENGTH=10,                                  
          UERF1214:P_UERF1214,UFF,M11,LENGTH=10,                                
          UERF1517:P_UERF1517,UFF,M11,LENGTH=10,                                
          UERF1820:P_UERF1820,UFF,M11,LENGTH=10,                                
          UERF2124:P_UERF2124,UFF,M11,LENGTH=10,                                
          UERF2534:P_UERF2534,UFF,M11,LENGTH=10,                                
          UERF3549:P_UERF3549,UFF,M11,LENGTH=10,                                
          UERF5054:P_UERF5054,UFF,M11,LENGTH=10,                                
          UERF5564:P_UERF5564,UFF,M11,LENGTH=10,                                
          UERF65P:P_UERF65P,UFF,M11,LENGTH=10,                                  
          UERWW:P_UERWW,UFF,M11,LENGTH=10))                                     
  OUTREC IFTHEN=(WHEN=(UERCODE,EQ,C'04'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:UERCODE,                                                      
          W_KMKTC:UERMKTC,                                                      
          W_KDISC:4X'00',                                                       
          W_KSAMTY:UERSAMTY,                                                    
          W_UERCODE:UERCODE,                                                    
          W_UERMKTC:UERMKTC,                                                    
          W_UERRSRVC:UERRSRVC,                                                  
          W_UERSAMTY:UERSAMTY,                                                  
          W_UERMTROA:UERMTROA,TO=BI,LENGTH=LEN_W_UERMTROA,                      
          W_UERMTROB:UERMTROB,TO=BI,LENGTH=LEN_W_UERMTROB,                      
          W_UERHHLDS:UERHHLDS,TO=BI,LENGTH=LEN_W_UERHHLDS,                      
          W_UERCH25:UERCH25,TO=BI,LENGTH=LEN_W_UERCH25,                         
          W_UERCH611:UERCH611,TO=BI,LENGTH=LEN_W_UERCH611,                      
          W_UERM1214:UERM1214,TO=BI,LENGTH=LEN_W_UERM1214,                      
          W_UERM1517:UERM1517,TO=BI,LENGTH=LEN_W_UERM1517,                      
          W_UERM1820:UERM1820,TO=BI,LENGTH=LEN_W_UERM1820,                      
          W_UERM2124:UERM2124,TO=BI,LENGTH=LEN_W_UERM2124,                      
          W_UERM2534:UERM2534,TO=BI,LENGTH=LEN_W_UERM2534,                      
          W_UERM3549:UERM3549,TO=BI,LENGTH=LEN_W_UERM3549,                      
          W_UERM5054:UERM5054,TO=BI,LENGTH=LEN_W_UERM5054,                      
          W_UERM5564:UERM5564,TO=BI,LENGTH=LEN_W_UERM5564,                      
          W_UERM65P:UERM65P,TO=BI,LENGTH=LEN_W_UERM65P,                         
          W_UERF1214:UERF1214,TO=BI,LENGTH=LEN_W_UERF1214,                      
          W_UERF1517:UERF1517,TO=BI,LENGTH=LEN_W_UERF1517,                      
          W_UERF1820:UERF1820,TO=BI,LENGTH=LEN_W_UERF1820,                      
          W_UERF2124:UERF2124,TO=BI,LENGTH=LEN_W_UERF2124,                      
          W_UERF2534:UERF2534,TO=BI,LENGTH=LEN_W_UERF2534,                      
          W_UERF3549:UERF3549,TO=BI,LENGTH=LEN_W_UERF3549,                      
          W_UERF5054:UERF5054,TO=BI,LENGTH=LEN_W_UERF5054,                      
          W_UERF5564:UERF5564,TO=BI,LENGTH=LEN_W_UERF5564,                      
          W_UERF65P:UERF65P,TO=BI,LENGTH=LEN_W_UERF65P,                         
          W_UERWW:UERWW,TO=BI,LENGTH=LEN_W_UERWW,                               
          W_RECTYPE:RECTYPE_UER))                                               
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR05CNTL   ** CONTROL CARDS FOR USING(PR05)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'05'),                                 
   PARSE=(P_MIRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_MIRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MIRGEOI=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MIRRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MIRSAMTY=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MIRIDATE=(ENDBEFR=X'05',FIXLEN=10),                                 
          P_MIRMTROA=(ENDBEFR=X'05',FIXLEN=10,REPEAT=24)),                      
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          MIRCODE:P_MIRCODE,                                                    
          MIRMKTC:P_MIRMKTC,UFF,M11,LENGTH=03,                                  
          MIRGEOI:P_MIRGEOI,                                                    
          MIRRSRVC:P_MIRRSRVC,                                                  
          MIRSAMTY:P_MIRSAMTY,                                                  
          MIRIDATE:P_MIRIDATE,                                                  
          MIRMTROA:P_MIRMTROA,UFF,M11,LENGTH=10,                                
          MIRMTROB:P_MIRMTROB,UFF,M11,LENGTH=10,                                
          MIRHHLDS:P_MIRHHLDS,UFF,M11,LENGTH=10,                                
          MIRCH25:P_MIRCH25,UFF,M11,LENGTH=10,                                  
          MIRCH611:P_MIRCH611,UFF,M11,LENGTH=10,                                
          MIRM1214:P_MIRM1214,UFF,M11,LENGTH=10,                                
          MIRM1517:P_MIRM1517,UFF,M11,LENGTH=10,                                
          MIRM1820:P_MIRM1820,UFF,M11,LENGTH=10,                                
          MIRM2124:P_MIRM2124,UFF,M11,LENGTH=10,                                
          MIRM2534:P_MIRM2534,UFF,M11,LENGTH=10,                                
          MIRM3549:P_MIRM3549,UFF,M11,LENGTH=10,                                
          MIRM5054:P_MIRM5054,UFF,M11,LENGTH=10,                                
          MIRM5564:P_MIRM5564,UFF,M11,LENGTH=10,                                
          MIRM65P:P_MIRM65P,UFF,M11,LENGTH=10,                                  
          MIRF1214:P_MIRF1214,UFF,M11,LENGTH=10,                                
          MIRF1517:P_MIRF1517,UFF,M11,LENGTH=10,                                
          MIRF1820:P_MIRF1820,UFF,M11,LENGTH=10,                                
          MIRF2124:P_MIRF2124,UFF,M11,LENGTH=10,                                
          MIRF2534:P_MIRF2534,UFF,M11,LENGTH=10,                                
          MIRF3549:P_MIRF3549,UFF,M11,LENGTH=10,                                
          MIRF5054:P_MIRF5054,UFF,M11,LENGTH=10,                                
          MIRF5564:P_MIRF5564,UFF,M11,LENGTH=10,                                
          MIRF65P:P_MIRF65P,UFF,M11,LENGTH=10,                                  
          MIRWW:P_MIRWW,UFF,M11,LENGTH=10))                                     
  OUTREC IFTHEN=(WHEN=(MIRCODE,EQ,C'05'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:MIRCODE,                                                      
          W_KMKTC:MIRMKTC,                                                      
          W_KDISC:4X'00',                                                       
          W_KSAMTY:MIRSAMTY,                                                    
          W_KCALDT:MIRIDATE,                                                    
          W_QDRCODE:MIRCODE,                                                    
          W_QDRDISC:4X'00',                                                     
          W_QDRMKTC:MIRMKTC,                                                    
          W_QDRRSRVC:MIRRSRVC,                                                  
          W_QDRSAMTY:MIRSAMTY,                                                  
          W_QDRPBACK:C' ',                                                      
          W_QDREXCI:C' ',                                                       
          W_QDRMTROA:MIRMTROA,TO=BI,LENGTH=LEN_W_QDRMTROA,                      
          W_QDRMTROB:MIRMTROB,TO=BI,LENGTH=LEN_W_QDRMTROB,                      
          W_QDRHHLDS:MIRHHLDS,TO=BI,LENGTH=LEN_W_QDRHHLDS,                      
          W_QDRCH25:MIRCH25,TO=BI,LENGTH=LEN_W_QDRCH25,                         
          W_QDRCH611:MIRCH611,TO=BI,LENGTH=LEN_W_QDRCH611,                      
          W_QDRM1214:MIRM1214,TO=BI,LENGTH=LEN_W_QDRM1214,                      
          W_QDRM1517:MIRM1517,TO=BI,LENGTH=LEN_W_QDRM1517,                      
          W_QDRM1820:MIRM1820,TO=BI,LENGTH=LEN_W_QDRM1820,                      
          W_QDRM2124:MIRM2124,TO=BI,LENGTH=LEN_W_QDRM2124,                      
          W_QDRM2534:MIRM2534,TO=BI,LENGTH=LEN_W_QDRM2534,                      
          W_QDRM3549:MIRM3549,TO=BI,LENGTH=LEN_W_QDRM3549,                      
          W_QDRM5054:MIRM5054,TO=BI,LENGTH=LEN_W_QDRM5054,                      
          W_QDRM5564:MIRM5564,TO=BI,LENGTH=LEN_W_QDRM5564,                      
          W_QDRM65P:MIRM65P,TO=BI,LENGTH=LEN_W_QDRM65P,                         
          W_QDRF1214:MIRF1214,TO=BI,LENGTH=LEN_W_QDRF1214,                      
          W_QDRF1517:MIRF1517,TO=BI,LENGTH=LEN_W_QDRF1517,                      
          W_QDRF1820:MIRF1820,TO=BI,LENGTH=LEN_W_QDRF1820,                      
          W_QDRF2124:MIRF2124,TO=BI,LENGTH=LEN_W_QDRF2124,                      
          W_QDRF2534:MIRF2534,TO=BI,LENGTH=LEN_W_QDRF2534,                      
          W_QDRF3549:MIRF3549,TO=BI,LENGTH=LEN_W_QDRF3549,                      
          W_QDRF5054:MIRF5054,TO=BI,LENGTH=LEN_W_QDRF5054,                      
          W_QDRF5564:MIRF5564,TO=BI,LENGTH=LEN_W_QDRF5564,                      
          W_QDRF65P:MIRF65P,TO=BI,LENGTH=LEN_W_QDRF65P,                         
          W_QDRWW:MIRWW,TO=BI,LENGTH=LEN_W_QDRWW,                               
          W_RECTYPE:RECTYPE_ITB))                                               
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR07CNTL   ** CONTROL CARDS FOR USING(PR07)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'07'),                                 
   PARSE=(P_HPRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_HPRDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_HPRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_HPRRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_HPRSAMTY=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_HPRPBACK=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_HPRCALDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_HPREXCI=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_HPRMTROA=(ENDBEFR=X'05',FIXLEN=10,REPEAT=24)),                      
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          HPRCODE:P_HPRCODE,                                                    
          HPRDISC:P_HPRDISC,UFF,TO=BI,LENGTH=04,                                
          HPRMKTC:P_HPRMKTC,UFF,M11,LENGTH=03,                                  
          HPRRSRVC:P_HPRRSRVC,                                                  
          HPRSAMTY:P_HPRSAMTY,                                                  
          HPRPBACK:P_HPRPBACK,                                                  
          HPRCALDT:P_HPRCALDT,                                                  
          HPREXCI:P_HPREXCI,                                                    
          HPRMTROA:P_HPRMTROA,UFF,M11,LENGTH=10,                                
          HPRMTROB:P_HPRMTROB,UFF,M11,LENGTH=10,                                
          HPRHHLDS:P_HPRHHLDS,UFF,M11,LENGTH=10,                                
          HPRCH25:P_HPRCH25,UFF,M11,LENGTH=10,                                  
          HPRCH611:P_HPRCH611,UFF,M11,LENGTH=10,                                
          HPRM1214:P_HPRM1214,UFF,M11,LENGTH=10,                                
          HPRM1517:P_HPRM1517,UFF,M11,LENGTH=10,                                
          HPRM1820:P_HPRM1820,UFF,M11,LENGTH=10,                                
          HPRM2124:P_HPRM2124,UFF,M11,LENGTH=10,                                
          HPRM2534:P_HPRM2534,UFF,M11,LENGTH=10,                                
          HPRM3549:P_HPRM3549,UFF,M11,LENGTH=10,                                
          HPRM5054:P_HPRM5054,UFF,M11,LENGTH=10,                                
          HPRM5564:P_HPRM5564,UFF,M11,LENGTH=10,                                
          HPRM65P:P_HPRM65P,UFF,M11,LENGTH=10,                                  
          HPRF1214:P_HPRF1214,UFF,M11,LENGTH=10,                                
          HPRF1517:P_HPRF1517,UFF,M11,LENGTH=10,                                
          HPRF1820:P_HPRF1820,UFF,M11,LENGTH=10,                                
          HPRF2124:P_HPRF2124,UFF,M11,LENGTH=10,                                
          HPRF2534:P_HPRF2534,UFF,M11,LENGTH=10,                                
          HPRF3549:P_HPRF3549,UFF,M11,LENGTH=10,                                
          HPRF5054:P_HPRF5054,UFF,M11,LENGTH=10,                                
          HPRF5564:P_HPRF5564,UFF,M11,LENGTH=10,                                
          HPRF65P:P_HPRF65P,UFF,M11,LENGTH=10,                                  
          HPRWW:P_HPRWW,UFF,M11,LENGTH=10))                                     
  OUTREC IFTHEN=(WHEN=(HPRCODE,EQ,C'07'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:HPRCODE,                                                      
          W_KMKTC:HPRMKTC,                                                      
          W_KDISC:4X'00',                                                       
          W_KSAMTY:HPRSAMTY,                                                    
          W_KCALDT:HPRCALDT,                                                    
          W_HPTCODE:HPRCODE,                                                    
          W_HPTDISC:HPRDISC,                                                    
          W_HPTMKTC:HPRMKTC,                                                    
          W_HPTRSRVC:HPRRSRVC,                                                  
          W_HPTSAMTY:HPRSAMTY,                                                  
          W_HPTPBACK:HPRPBACK,                                                  
          W_HPTEXCI:HPREXCI,                                                    
          W_HPTMTROA:HPRMTROA,TO=BI,LENGTH=LEN_W_HPTMTROA,                      
          W_HPTMTROB:HPRMTROB,TO=BI,LENGTH=LEN_W_HPTMTROB,                      
          W_HPTHHLDS:HPRHHLDS,TO=BI,LENGTH=LEN_W_HPTHHLDS,                      
          W_HPTCH25:HPRCH25,TO=BI,LENGTH=LEN_W_HPTCH25,                         
          W_HPTCH611:HPRCH611,TO=BI,LENGTH=LEN_W_HPTCH611,                      
          W_HPTM1214:HPRM1214,TO=BI,LENGTH=LEN_W_HPTM1214,                      
          W_HPTM1517:HPRM1517,TO=BI,LENGTH=LEN_W_HPTM1517,                      
          W_HPTM1820:HPRM1820,TO=BI,LENGTH=LEN_W_HPTM1820,                      
          W_HPTM2124:HPRM2124,TO=BI,LENGTH=LEN_W_HPTM2124,                      
          W_HPTM2534:HPRM2534,TO=BI,LENGTH=LEN_W_HPTM2534,                      
          W_HPTM3549:HPRM3549,TO=BI,LENGTH=LEN_W_HPTM3549,                      
          W_HPTM5054:HPRM5054,TO=BI,LENGTH=LEN_W_HPTM5054,                      
          W_HPTM5564:HPRM5564,TO=BI,LENGTH=LEN_W_HPTM5564,                      
          W_HPTM65P:HPRM65P,TO=BI,LENGTH=LEN_W_HPTM65P,                         
          W_HPTF1214:HPRF1214,TO=BI,LENGTH=LEN_W_HPTF1214,                      
          W_HPTF1517:HPRF1517,TO=BI,LENGTH=LEN_W_HPTF1517,                      
          W_HPTF1820:HPRF1820,TO=BI,LENGTH=LEN_W_HPTF1820,                      
          W_HPTF2124:HPRF2124,TO=BI,LENGTH=LEN_W_HPTF2124,                      
          W_HPTF2534:HPRF2534,TO=BI,LENGTH=LEN_W_HPTF2534,                      
          W_HPTF3549:HPRF3549,TO=BI,LENGTH=LEN_W_HPTF3549,                      
          W_HPTF5054:HPRF5054,TO=BI,LENGTH=LEN_W_HPTF5054,                      
          W_HPTF5564:HPRF5564,TO=BI,LENGTH=LEN_W_HPTF5564,                      
          W_HPTF65P:HPRF65P,TO=BI,LENGTH=LEN_W_HPTF65P,                         
          W_HPTWW:HPRWW,TO=BI,LENGTH=LEN_W_HPTWW,                               
          W_RECTYPE:RECTYPE_HPT))                                               
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR08CNTL   ** CONTROL CARDS FOR USING(PR08)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'08'),                                 
   PARSE=(P_QDRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_QDRDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_QDRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_QDRRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_QDRSAMTY=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_QDRPBACK=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_QDRCALDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_QDREXCI=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_QDRMTROA=(ENDBEFR=X'05',FIXLEN=10,REPEAT=24)),                      
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          QDRCODE:P_QDRCODE,                                                    
          QDRDISC:P_QDRDISC,UFF,TO=BI,LENGTH=04,                                
          QDRMKTC:P_QDRMKTC,UFF,M11,LENGTH=03,                                  
          QDRRSRVC:P_QDRRSRVC,                                                  
          QDRSAMTY:P_QDRSAMTY,                                                  
          QDRPBACK:P_QDRPBACK,                                                  
          QDRCALDT:P_QDRCALDT,                                                  
          QDREXCI:P_QDREXCI,                                                    
          QDRMTROA:P_QDRMTROA,UFF,M11,LENGTH=10,                                
          QDRMTROB:P_QDRMTROB,UFF,M11,LENGTH=10,                                
          QDRHHLDS:P_QDRHHLDS,UFF,M11,LENGTH=10,                                
          QDRCH25:P_QDRCH25,UFF,M11,LENGTH=10,                                  
          QDRCH611:P_QDRCH611,UFF,M11,LENGTH=10,                                
          QDRM1214:P_QDRM1214,UFF,M11,LENGTH=10,                                
          QDRM1517:P_QDRM1517,UFF,M11,LENGTH=10,                                
          QDRM1820:P_QDRM1820,UFF,M11,LENGTH=10,                                
          QDRM2124:P_QDRM2124,UFF,M11,LENGTH=10,                                
          QDRM2534:P_QDRM2534,UFF,M11,LENGTH=10,                                
          QDRM3549:P_QDRM3549,UFF,M11,LENGTH=10,                                
          QDRM5054:P_QDRM5054,UFF,M11,LENGTH=10,                                
          QDRM5564:P_QDRM5564,UFF,M11,LENGTH=10,                                
          QDRM65P:P_QDRM65P,UFF,M11,LENGTH=10,                                  
          QDRF1214:P_QDRF1214,UFF,M11,LENGTH=10,                                
          QDRF1517:P_QDRF1517,UFF,M11,LENGTH=10,                                
          QDRF1820:P_QDRF1820,UFF,M11,LENGTH=10,                                
          QDRF2124:P_QDRF2124,UFF,M11,LENGTH=10,                                
          QDRF2534:P_QDRF2534,UFF,M11,LENGTH=10,                                
          QDRF3549:P_QDRF3549,UFF,M11,LENGTH=10,                                
          QDRF5054:P_QDRF5054,UFF,M11,LENGTH=10,                                
          QDRF5564:P_QDRF5564,UFF,M11,LENGTH=10,                                
          QDRF65P:P_QDRF65P,UFF,M11,LENGTH=10,                                  
          QDRWW:P_QDRWW,UFF,M11,LENGTH=10))                                     
  OUTREC IFTHEN=(WHEN=(QDRCODE,EQ,C'08'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:QDRCODE,                                                      
          W_KMKTC:QDRMKTC,                                                      
          W_KDISC:QDRDISC,                                                      
          W_KSAMTY:QDRSAMTY,                                                    
          W_KCALDT:QDRCALDT,                                                    
          W_QDRCODE:QDRCODE,                                                    
          W_QDRDISC:QDRDISC,                                                    
          W_QDRMKTC:QDRMKTC,                                                    
          W_QDRRSRVC:QDRRSRVC,                                                  
          W_QDRSAMTY:QDRSAMTY,                                                  
          W_QDRPBACK:QDRPBACK,                                                  
          W_QDREXCI:QDREXCI,                                                    
          W_QDRMTROA:QDRMTROA,TO=BI,LENGTH=LEN_W_QDRMTROA,                      
          W_QDRMTROB:QDRMTROB,TO=BI,LENGTH=LEN_W_QDRMTROB,                      
          W_QDRHHLDS:QDRHHLDS,TO=BI,LENGTH=LEN_W_QDRHHLDS,                      
          W_QDRCH25:QDRCH25,TO=BI,LENGTH=LEN_W_QDRCH25,                         
          W_QDRCH611:QDRCH611,TO=BI,LENGTH=LEN_W_QDRCH611,                      
          W_QDRM1214:QDRM1214,TO=BI,LENGTH=LEN_W_QDRM1214,                      
          W_QDRM1517:QDRM1517,TO=BI,LENGTH=LEN_W_QDRM1517,                      
          W_QDRM1820:QDRM1820,TO=BI,LENGTH=LEN_W_QDRM1820,                      
          W_QDRM2124:QDRM2124,TO=BI,LENGTH=LEN_W_QDRM2124,                      
          W_QDRM2534:QDRM2534,TO=BI,LENGTH=LEN_W_QDRM2534,                      
          W_QDRM3549:QDRM3549,TO=BI,LENGTH=LEN_W_QDRM3549,                      
          W_QDRM5054:QDRM5054,TO=BI,LENGTH=LEN_W_QDRM5054,                      
          W_QDRM5564:QDRM5564,TO=BI,LENGTH=LEN_W_QDRM5564,                      
          W_QDRM65P:QDRM65P,TO=BI,LENGTH=LEN_W_QDRM65P,                         
          W_QDRF1214:QDRF1214,TO=BI,LENGTH=LEN_W_QDRF1214,                      
          W_QDRF1517:QDRF1517,TO=BI,LENGTH=LEN_W_QDRF1517,                      
          W_QDRF1820:QDRF1820,TO=BI,LENGTH=LEN_W_QDRF1820,                      
          W_QDRF2124:QDRF2124,TO=BI,LENGTH=LEN_W_QDRF2124,                      
          W_QDRF2534:QDRF2534,TO=BI,LENGTH=LEN_W_QDRF2534,                      
          W_QDRF3549:QDRF3549,TO=BI,LENGTH=LEN_W_QDRF3549,                      
          W_QDRF5054:QDRF5054,TO=BI,LENGTH=LEN_W_QDRF5054,                      
          W_QDRF5564:QDRF5564,TO=BI,LENGTH=LEN_W_QDRF5564,                      
          W_QDRF65P:QDRF65P,TO=BI,LENGTH=LEN_W_QDRF65P,                         
          W_QDRWW:QDRWW,TO=BI,LENGTH=LEN_W_QDRWW))                              
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR09CNTL   ** CONTROL CARDS FOR USING(PR09)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'09'),                                 
   PARSE=(P_STRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_STRDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_STRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_STRRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_STRSAMTY=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_STRPBACK=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_STRCALDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_STREXCI=(ENDBEFR=X'05',FIXLEN=1),                                   
          P_STRHHLDS=(ENDBEFR=X'05',FIXLEN=10,REPEAT=22)),                      
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          STRCODE:P_STRCODE,                                                    
          STRDISC:P_STRDISC,UFF,TO=BI,LENGTH=04,                                
          STRMKTC:P_STRMKTC,UFF,M11,LENGTH=03,                                  
          STRRSRVC:P_STRRSRVC,                                                  
          STRSAMTY:P_STRSAMTY,                                                  
          STRPBACK:P_STRPBACK,                                                  
          STRCALDT:P_STRCALDT,                                                  
          STREXCI:P_STREXCI,                                                    
          STRHHLDS:P_STRHHLDS,UFF,M11,LENGTH=10,                                
          STRCH25:P_STRCH25,UFF,M11,LENGTH=10,                                  
          STRCH611:P_STRCH611,UFF,M11,LENGTH=10,                                
          STRM1214:P_STRM1214,UFF,M11,LENGTH=10,                                
          STRM1517:P_STRM1517,UFF,M11,LENGTH=10,                                
          STRM1820:P_STRM1820,UFF,M11,LENGTH=10,                                
          STRM2124:P_STRM2124,UFF,M11,LENGTH=10,                                
          STRM2534:P_STRM2534,UFF,M11,LENGTH=10,                                
          STRM3549:P_STRM3549,UFF,M11,LENGTH=10,                                
          STRM5054:P_STRM5054,UFF,M11,LENGTH=10,                                
          STRM5564:P_STRM5564,UFF,M11,LENGTH=10,                                
          STRM65P:P_STRM65P,UFF,M11,LENGTH=10,                                  
          STRF1214:P_STRF1214,UFF,M11,LENGTH=10,                                
          STRF1517:P_STRF1517,UFF,M11,LENGTH=10,                                
          STRF1820:P_STRF1820,UFF,M11,LENGTH=10,                                
          STRF2124:P_STRF2124,UFF,M11,LENGTH=10,                                
          STRF2534:P_STRF2534,UFF,M11,LENGTH=10,                                
          STRF3549:P_STRF3549,UFF,M11,LENGTH=10,                                
          STRF5054:P_STRF5054,UFF,M11,LENGTH=10,                                
          STRF5564:P_STRF5564,UFF,M11,LENGTH=10,                                
          STRF65P:P_STRF65P,UFF,M11,LENGTH=10,                                  
          STRWW:P_STRWW,UFF,M11,LENGTH=10))                                     
  OUTREC IFTHEN=(WHEN=(STRCODE,EQ,C'09'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:STRCODE,                                                      
          W_KMKTC:STRMKTC,                                                      
          W_KDISC:STRDISC,                                                      
          W_KSAMTY:STRSAMTY,                                                    
          W_KCALDT:STRCALDT,                                                    
          W_STRCODE:STRCODE,                                                    
          W_STRDISC:STRDISC,                                                    
          W_STRMKTC:STRMKTC,                                                    
          W_STRRSRVC:STRRSRVC,                                                  
          W_STRSAMTY:STRSAMTY,                                                  
          W_STRPBACK:STRPBACK,                                                  
          W_STREXCI:STREXCI,                                                    
          W_STRHHLDS:STRHHLDS,TO=BI,LENGTH=LEN_W_STRHHLDS,                      
          W_STRCH25:STRCH25,TO=BI,LENGTH=LEN_W_STRCH25,                         
          W_STRCH611:STRCH611,TO=BI,LENGTH=LEN_W_STRCH611,                      
          W_STRM1214:STRM1214,TO=BI,LENGTH=LEN_W_STRM1214,                      
          W_STRM1517:STRM1517,TO=BI,LENGTH=LEN_W_STRM1517,                      
          W_STRM1820:STRM1820,TO=BI,LENGTH=LEN_W_STRM1820,                      
          W_STRM2124:STRM2124,TO=BI,LENGTH=LEN_W_STRM2124,                      
          W_STRM2534:STRM2534,TO=BI,LENGTH=LEN_W_STRM2534,                      
          W_STRM3549:STRM3549,TO=BI,LENGTH=LEN_W_STRM3549,                      
          W_STRM5054:STRM5054,TO=BI,LENGTH=LEN_W_STRM5054,                      
          W_STRM5564:STRM5564,TO=BI,LENGTH=LEN_W_STRM5564,                      
          W_STRM65P:STRM65P,TO=BI,LENGTH=LEN_W_STRM65P,                         
          W_STRF1214:STRF1214,TO=BI,LENGTH=LEN_W_STRF1214,                      
          W_STRF1517:STRF1517,TO=BI,LENGTH=LEN_W_STRF1517,                      
          W_STRF1820:STRF1820,TO=BI,LENGTH=LEN_W_STRF1820,                      
          W_STRF2124:STRF2124,TO=BI,LENGTH=LEN_W_STRF2124,                      
          W_STRF2534:STRF2534,TO=BI,LENGTH=LEN_W_STRF2534,                      
          W_STRF3549:STRF3549,TO=BI,LENGTH=LEN_W_STRF3549,                      
          W_STRF5054:STRF5054,TO=BI,LENGTH=LEN_W_STRF5054,                      
          W_STRF5564:STRF5564,TO=BI,LENGTH=LEN_W_STRF5564,                      
          W_STRF65P:STRF65P,TO=BI,LENGTH=LEN_W_STRF65P,                         
          W_STRWW:STRWW,TO=BI,LENGTH=LEN_W_STRWW))                              
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR11CNTL   ** CONTROL CARDS FOR USING(PR11)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'11'),                                 
   PARSE=(P_MHPCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_MHPFMTV=(ENDBEFR=X'05',FIXLEN=4),                                   
          P_MHPMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHPDMAC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHPMRNK=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHPGEOI=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHPGEONM=(ENDBEFR=X'05',FIXLEN=26),                                 
          P_MHPSDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHPEDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHPNDAYS=(ENDBEFR=X'05',FIXLEN=3),                                  
          P_MHPNWKS=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHPRDST=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHPRSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHPRPRD=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHPRYEAR=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_MHPMKTZ=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHPDSAVE=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHPSUBSI=(ENDBEFR=X'05',FIXLEN=5)),                                 
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          MHPCODE:P_MHPCODE,                                                    
          MHPFMTV:P_MHPFMTV,                                                    
          MHPMKTC:P_MHPMKTC,UFF,M11,LENGTH=03,                                  
          MHPDMAC:P_MHPDMAC,UFF,M11,LENGTH=03,                                  
          MHPMRNK:P_MHPMRNK,UFF,M11,LENGTH=03,                                  
          MHPGEOI:P_MHPGEOI,                                                    
          MHPGEONM:P_MHPGEONM,                                                  
          MHPSDT:P_MHPSDT,                                                      
          MHPEDT:P_MHPEDT,                                                      
          MHPNDAYS:P_MHPNDAYS,UFF,M11,LENGTH=03,                                
          MHPNWKS:P_MHPNWKS,UFF,M11,LENGTH=02,                                  
          MHPRDST:P_MHPRDST,                                                    
          MHPRSRVC:P_MHPRSRVC,                                                  
          MHPRPRD:P_MHPRPRD,UFF,M11,LENGTH=02,                                  
          MHPRYEAR:P_MHPRYEAR,UFF,M11,LENGTH=04,                                
          MHPMKTZ:P_MHPMKTZ,UFF,M11,LENGTH=02,                                  
          MHPDSAVE:P_MHPDSAVE)),                                                
        IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'21'),                                 
   PARSE=(P_MHUCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_MHUMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHUDMAC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHUMKTR=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_MHUGEOI=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHUGEONM=(ENDBEFR=X'05',FIXLEN=26),                                 
          P_MHUSDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHUEDT=(ENDBEFR=X'05',FIXLEN=18),                                   
          P_MHUNDAYS=(ENDBEFR=X'05',FIXLEN=3),                                  
          P_MHUNWKS=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHURDST=(ENDBEFR=X'05',FIXLEN=7),                                   
          P_MHURSRVC=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHURPRD=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHURYEAR=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_MHUMKTZ=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_MHUDSAVE=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_MHUPRODT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_MHUSUBSI=(ENDBEFR=X'05',FIXLEN=5)),                                 
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          MHUCODE:P_MHUCODE,                                                    
          MHUMKTC:P_MHUMKTC,UFF,M11,LENGTH=03,                                  
          MHUDMAC:P_MHUDMAC,UFF,M11,LENGTH=03,                                  
          MHUMKTR:P_MHUMKTR,UFF,M11,LENGTH=03,                                  
          MHUGEOI:P_MHUGEOI,                                                    
          MHUGEONM:P_MHUGEONM,                                                  
          MHUSDT:P_MHUSDT,                                                      
          MHUEDT:P_MHUEDT,                                                      
          MHUNDAYS:P_MHUNDAYS,UFF,M11,LENGTH=03,                                
          MHUNWKS:P_MHUNWKS,UFF,M11,LENGTH=02,                                  
          MHURDST:P_MHURDST,                                                    
          MHURSRVC:P_MHURSRVC,                                                  
          MHURPRD:P_MHURPRD,UFF,M11,LENGTH=02,                                  
          MHURYEAR:P_MHURYEAR,UFF,M11,LENGTH=04,                                
          MHUMKTZ:P_MHUMKTZ,UFF,M11,LENGTH=02,                                  
          MHUDSAVE:P_MHUDSAVE,                                                  
          MHUPRODT:P_MHUPRODT))                                                 
  OUTREC IFTHEN=(WHEN=(MHPCODE,EQ,C'11'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:MHPCODE,                                                      
          W_KRSRVC:MHPRSRVC,                                                    
          W_KMKTC:MHPMKTC,                                                      
          W_KRPRD:MHPRPRD,                                                      
          W_KRPYR:MHPRYEAR,                                                     
          W_KCALDT:MHPSDT,                                                      
          W_MHQREC:MHPREC)),                                                    
         IFTHEN=(WHEN=(MHPCODE,EQ,C'21'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:MHUCODE,                                                      
          W_KRSRVC:MHURSRVC,                                                    
          W_KMKTC:MHUMKTC,                                                      
          W_KRPRD:MHURPRD,                                                      
          W_KRPYR:MHURYEAR,                                                     
          W_KCALDT:MHUSDT,                                                      
          W_MHQREC:MHUREC))                                                     
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=PR12CNTL   ** CONTROL CARDS FOR USING(PR12)                         
***                                                                             
  INREC IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'12'),                                 
   PARSE=(P_PNRCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_PNRMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_PNRDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_PNRCALL=(ENDBEFR=X'05',FIXLEN=12),                                  
          P_PNROCALL=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_PNRPPLUS=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_PNRQHSDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_PNRQHEDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_PNRPCODE=(ENDBEFR=X'05',FIXLEN=10),                                 
          P_PNRPNAME=(ENDBEFR=X'05',FIXLEN=14),                                 
          P_PNRSUBT=(ENDBEFR=X'05',FIXLEN=12),                                  
          P_PNRCLONG=(ENDBEFR=X'05',FIXLEN=25),                                 
          P_PNRPTYP=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_PNRPSRC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_PNRSNAM=(ENDBEFR=X'05',FIXLEN=1)),                                  
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          PNRCODE:P_PNRCODE,                                                    
          PNRMKTC:P_PNRMKTC,UFF,M11,LENGTH=03,                                  
          PNRDISC:P_PNRDISC,UFF,TO=BI,LENGTH=04,                                
          PNRCALL:P_PNRCALL,                                                    
          PNROCALL:P_PNROCALL,                                                  
          PNRPPLUS:P_PNRPPLUS,                                                  
          PNRQHSDT:P_PNRQHSDT,                                                  
          PNRQHEDT:P_PNRQHEDT,                                                  
          PNRPCODE:P_PNRPCODE,UFF,M11,LENGTH=10,                                
          PNRPNAME:P_PNRPNAME,                                                  
          PNRSUBT:P_PNRSUBT,                                                    
          PNRCLONG:P_PNRCLONG,                                                  
          PNRPTYP:P_PNRPTYP,                                                    
          PNRPSRC:P_PNRPSRC,                                                    
          PNRSNAM:P_PNRSNAM)),                                                  
        IFTHEN=(WHEN=(PARSE_REC_CODE,EQ,C'22'),                                 
   PARSE=(P_PURCODE=(ABSPOS=3,ENDBEFR=X'05',FIXLEN=2),                          
          P_PURMKTC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_PURDISC=(ENDBEFR=X'05',FIXLEN=5),                                   
          P_PURCALL=(ENDBEFR=X'05',FIXLEN=12),                                  
          P_PUROCALL=(ENDBEFR=X'05',FIXLEN=4),                                  
          P_PURPPLUS=(ENDBEFR=X'05',FIXLEN=1),                                  
          P_PURQHSDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_PURQHEDT=(ENDBEFR=X'05',FIXLEN=18),                                 
          P_PURPCODE=(ENDBEFR=X'05',FIXLEN=10),                                 
          P_PURPNAME=(ENDBEFR=X'05',FIXLEN=14),                                 
          P_PURSUBT=(ENDBEFR=X'05',FIXLEN=12),                                  
          P_PURCLONG=(ENDBEFR=X'05',FIXLEN=25),                                 
          P_PURPTYP=(ENDBEFR=X'05',FIXLEN=2),                                   
          P_PURPSRC=(ENDBEFR=X'05',FIXLEN=3),                                   
          P_PURSNAM=(ENDBEFR=X'05',FIXLEN=1)),                                  
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          PURCODE:P_PURCODE,                                                    
          PURMKTC:P_PURMKTC,UFF,M11,LENGTH=03,                                  
          PURDISC:P_PURDISC,UFF,TO=BI,LENGTH=04,                                
          PURCALL:P_PURCALL,                                                    
          PUROCALL:P_PUROCALL,                                                  
          PURPPLUS:P_PURPPLUS,                                                  
          PURQHSDT:P_PURQHSDT,                                                  
          PURQHEDT:P_PURQHEDT,                                                  
          PURPCODE:P_PURPCODE,UFF,M11,LENGTH=10,                                
          PURPNAME:P_PURPNAME,                                                  
          PURSUBT:P_PURSUBT,                                                    
          PURCLONG:P_PURCLONG,                                                  
          PURPTYP:P_PURPTYP,                                                    
          PURPSRC:P_PURPSRC,                                                    
          PURSNAM:P_PURSNAM))                                                   
  OUTREC IFTHEN=(WHEN=(PNRCODE,EQ,C'12'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:PNRCODE,                                                      
          W_KMKTC:PNRMKTC,                                                      
          W_KDISC:PNRDISC,                                                      
          W_KCALDT:PNRQHSDT,                                                    
          W_PNRREC:PNRREC,                                                      
          W_RECTYPE:RECTYPE_PNR)),                                              
         IFTHEN=(WHEN=(PNRCODE,EQ,C'22'),                                       
   BUILD=(W_KSEQ:W_KSEQ,                                                        
          W_KCODE:PURCODE,                                                      
          W_KMKTC:PURMKTC,                                                      
          W_KDISC:PURDISC,                                                      
          W_KCALDT:PURQHSDT,                                                    
          W_PNRREC:PURREC,                                                      
          W_RECTYPE:RECTYPE_PNR))                                               
                                                                                
                                                                                
***********************************************************************         
./ ADD NAME=ITB1CNTL   ** CONTROL CARDS FOR USING(ITB1)                         
   JOINKEYS F1=MRKTPARS,FIELDS=(REC_CODE,A),SORTED                              
   JOINKEYS F2=ITBPARS,FIELDS=(REC_CODE,A),SORTED                               
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                    F2:W_KCODE,                                                 
                    F1:W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                    F2:W_KDISC,                                                 
                    F1:W_KSPEXC,                                                
                       W_KPBACK,                                                
                    F2:W_KSAMTY,                                                
                    F1:W_KSUBSI,                                                
                       W_KOCALL,                                                
                    F2:W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                    F1:W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                    F2:W_QDRREC,                                                
                       W_STRREC,                                                
                    F1:W_UERREC,                                                
                       W_HPTREC,                                                
                       W_HPSREC,                                                
                    F2:W_RECTYPE,                                               
                       W_PNAMEBK,                                               
                       W_TPPAVFLG,                                              
                    F1:W_PREVIEW,                                               
                    F2:W_SPARE,                                                 
                    ?)                   *** W_JOIN_INDICATOR                   
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=UER1CNTL   ** CONTROL CARDS FOR USING(UER1)                         
   JOINKEYS F1=MRKTPARS,FIELDS=(REC_CODE,A),SORTED                              
   JOINKEYS F2=UERPARS,FIELDS=(REC_CODE,A),SORTED                               
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                    F2:W_KCODE,                                                 
                    F1:W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                    F2:W_KDISC,                                                 
                    F1:W_KSPEXC,                                                
                       W_KPBACK,                                                
                    F2:W_KSAMTY,                                                
                    F1:W_KSUBSI,                                                
                       W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                       W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                    F2:W_QDRREC,                                                
                       W_STRREC,                                                
                       W_UERREC,                                                
                    F1:W_HPTREC,                                                
                       W_HPSREC,                                                
                    F2:W_RECTYPE,                                               
                       W_PNAMEBK,                                               
                       W_TPPAVFLG,                                              
                    F1:W_PREVIEW,                                               
                    F2:W_SPARE,                                                 
                    ?)                   *** W_JOIN_INDICATOR                   
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=HPT1CNTL   ** CONTROL CARDS FOR USING(HPT1)                         
   JOINKEYS F1=MRKTPARS,FIELDS=(REC_CODE,A),SORTED                              
   JOINKEYS F2=HPTPARS,TASKID=Q1,FIELDS=(REC_CODE,A)                            
   REFORMAT FIELDS=(F2:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                    F1:W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                    F2:W_KDISC,                                                 
                    F1:W_KSPEXC,                                                
                       W_KPBACK,                                                
                    F2:W_KSAMTY,                                                
                    F1:W_KSUBSI,                                                
                    F2:W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                    F1:W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                    F2:W_QDRREC,                                                
                       W_STRREC,                                                
                    F1:W_UERREC,                                                
                    F2:W_HPTREC,                                                
                       W_HPSREC,                                                
                       W_RECTYPE,                                               
                       W_PNAMEBK,                                               
                       W_TPPAVFLG,                                              
                    F1:W_PREVIEW,                                               
                    F2:W_SPARE,                                                 
                    ?)                   *** W_JOIN_INDICATOR                   
*                                                                               
*                                                                               
./ ADD NAME=Q1F2CNTL   ** CONTROL CARDS FOR USING(Q1F2)                         
***********************************************************************         
* JANUARY 2012: ADDED A CONDITION TO EXCLUDE HUT/PUT FOR EXCLUSIONS             
* EXAMPLE: HARTFORD DURING NOV/11 STORM.                                        
***********************************************************************         
*&&3A                                                                           
   MODS E15=(DELMXR3,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&&                                                                             
*&!3A                                                                           
   MODS E15=(DELMXR1,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&!                                                                             
   OMIT COND=(W_QDREXCI,EQ,C'Y',OR,W_HPTEXCI,EQ,C'Y')                           
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=MKSTCNTL   ** CONTROL CARDS FOR USING(MKST)                         
   JOINKEYS F1=MRKTPARS,FIELDS=(REC_CODE,A),SORTED                              
   JOINKEYS F2=STAPARS,FIELDS=(REC_CODE,A),SORTED                               
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                       W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                    F2:W_KDISC,                                                 
                    F1:W_KSPEXC,                                                
                       W_KPBACK,                                                
                       W_KSAMTY,                                                
                       W_KSUBSI,                                                
                    F2:W_KOCALL,                                                
                    F1:W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                       W_MHQREC,                                                
                    F2:W_DHRREC,                                                
                       W_PNRAREA,                                               
                       W_QDRREC,                                                
                       W_STRREC,                                                
                    F1:W_UERREC,                                                
                       W_HPTREC,                                                
                       W_HPSREC,                                                
                    F2:W_RECTYPE,                                               
                       W_PNAMEBK,                                               
                       W_TPPAVFLG,                                              
                    F1:W_PREVIEW,                                               
                    F2:W_SPARE,                                                 
                    ?)                   *** W_JOIN_INDICATOR                   
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=QTHPCNTL   ** CONTROL CARDS FOR USING(QTHP)                         
   JOINKEYS F1=QHRPARS,TASKID=Q2,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,          
                               W_KQHR,A,W_KDTYPE,A)                             
   JOINKEYS F2=TSAPARS,TASKID=Q2,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,          
                               W_KQHR,A,W_KDTYPE,A)                             
   JOIN UNPAIRED,F1                                                             
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                       W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                       W_KDISC,                                                 
                       W_KSPEXC,                                                
                       W_KPBACK,                                                
                       W_KSAMTY,                                                
                       W_KSUBSI,                                                
                       W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                       W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                       W_QDRREC,                                                
                    F2:W_STRREC,                                                
                    F1:W_UERREC,                                                
                       W_HPTREC,                                                
                       W_HPSREC,                                                
                       W_MISC),FILL=X'00'                                       
*                                                                               
   SORT FIELDS=(W_KSEQ,A,                                                       
                  W_KDISC,A,                                                    
                  W_KSAMTY,A,                                                   
                  W_KYEAR,A,                                                    
                  W_KDATE,A,                                                    
                  W_KQHR,A,                                                     
                  W_KCODE,A)                                                    
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=Q2F1CNTL   ** CONTROL CARDS FOR USING(Q2F1)                         
*&&3A                                                                           
   MODS E15=(DELMXR3,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&&                                                                             
*&!3A                                                                           
   MODS E15=(DELMXR1,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&!                                                                             
   OMIT COND=(W_QDREXCI,EQ,C'Y')                                                
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=Q2F2CNTL   ** CONTROL CARDS FOR USING(Q2F2)                         
*&&3A                                                                           
   MODS E15=(DELMXR3,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&&                                                                             
*&!3A                                                                           
   MODS E15=(DELMXR1,50000)    **EXIT TO DETERMINE WEEK NUMBER                  
*&!                                                                             
   OMIT COND=(W_STREXCI,EQ,C'Y')                                                
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=WRK3CNTL   ** CONTROL CARDS FOR USING(WRK3)                         
   JOINKEYS F1=PRSWRK1,FIELDS=(W_KSEQ,A,W_KDISC,A),SORTED                       
   JOINKEYS F2=PRSWRK2,FIELDS=(W_KSEQ,A,W_KDISC,A),SORTED                       
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                    F2:W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                    F1:W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                       W_KDISC,                                                 
                       W_KSPEXC,                                                
                       W_KPBACK,                                                
                    F2:W_KSAMTY,                                                
                    F1:W_KSUBSI,                                                
                       W_KOCALL,                                                
                    F2:W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                    F1:W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                    F2:W_QDRREC,                                                
                       W_STRREC,                                                
                    F1:W_UERREC,                                                
                       W_HPTREC,                                                
                       W_HPSREC,                                                
                       W_MISC),FILL=X'00'                                       
*                                                                               
* DO THIS ONLY IF NOT PREVIEW DATA:                                             
* COPY DMA VALUES INTO TSA SLOTS FOR NON-STANDARD STREAMS, BROADCAST            
* STATIONS ONLY, THAT ARE NOT PARENT STATIONS.                                  
* JUNE/2011:  ADDED RATING SERVICE NHSI TO THE LIST OF FILTERS                  
*             TO SLOT DMA INTO TSA.                                             
* JAN /2012:  ADDED HISPANIC SUB SAMPLE TO THE LIST OF FILTERS                  
*             TO SLOT DMA INTO TSA.                                             
* AUG /2013:  ADDED BLACK SUB SAMPLE TO THE LIST OF FILTERS                     
*             TO SLOT DMA INTO TSA (ONLY AUG/13 AND FORWARD).                   
* AUG /2017:  ADDED IMPACT DATA TO THE LIST OF FILTERS                          
*             TO SLOT DMA INTO TSA.                                             
   OUTREC IFTHEN=(WHEN=((W_PREVIEW,NE,PREVW,AND,                                
                        (W_KPBACK,EQ,PLB_LO,OR,                                 
                        W_KPBACK,EQ,PLB_LS,OR,                                  
                        W_KPBACK,EQ,PLB_L3,OR,                                  
                        W_KPBACK,EQ,PLB_L1,OR,                                  
                        W_KRSRVC,EQ,RSRVC_NSIX,OR,                              
                        W_KSUBSI,EQ,C'Hisp ',OR,                                
                       (W_KSUBSI,EQ,C'Af-Am',AND, * BLACK SUB SAMPLE...         
                         (W_KRPYR,GE,C'2014',OR,  * ...EFFECTIVE AUG/13         
                         (W_KRPYR,EQ,C'2013',AND,                               
                          W_KRPRD,GE,C'08'))),OR,                               
                        W_KRSRVC,EQ,RSRVC_NHSI),AND,                            
                        W_DHRDSRC,EQ,DIS_BROAD,AND,                             
                        W_DHRPRNT,NE,W_DHPARYQ),OR,                             
                        ((W_KMKTC,EQ,C'024',OR,   * LUFKIN/NACOGDOCHES          
                          W_KMKTC,EQ,C'025',OR,   * FLORIDA TAR                 
                          W_KMKTC,EQ,C'052',OR,   * YAKIMA SPECIAL/TA           
                          W_KMKTC,EQ,C'053',OR,   * TRI-CITIES SPECIAL          
                          W_KMKTC,EQ,C'374',OR,   * THE ALABAMA REPORT          
                          W_KMKTC,EQ,C'469',OR,   * BRYAN/COLLEGE (TA)          
                          W_KMKTC,EQ,C'499'),AND, * WICHITA (METRO)             
                         W_DHRDSRC,EQ,DIS_BROAD,AND,                            
                         W_DHRPRNT,NE,W_DHPARYQ)),                              
                 OVERLAY=(W_STRDEMOS:W_QDRSTRDM,                                
                          W_DHRSTOT:W_DHRSTYDQ))                                
*                                                                               
*                                                                               
./ ADD NAME=WRK4CNTL   ** CONTROL CARDS FOR USING(WRK4)                         
***********************************************************************         
* ADDED THIS SECTION AS PART OF THE PGM SHR PROJECT, TO INCORPORATE             
* THE HUT/PUT VALUE INTO THE WORK RECORD AT A VERY EARLY STAGE.                 
* ALSO TO ADD UP THE MARKET TOTAL PER QUARTER HOUR PER DAY (PRSWRK4)            
***********************************************************************         
   JOINKEYS F1=PRSWRK3,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,                    
                               W_KQHR,A,W_KSAMTY,A)                             
   JOINKEYS F2=HPTOUT,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,                     
                               W_KQHR,A,W_KSAMTY,A)                             
   JOIN UNPAIRED,F1                                                             
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                       W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                       W_KDISC,                                                 
                       W_KSPEXC,                                                
                       W_KPBACK,                                                
                       W_KSAMTY,                                                
                       W_KSUBSI,                                                
                       W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                       W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                       W_QDRREC,                                                
                       W_STRREC,                                                
                       W_UERREC,                                                
                    F2:W_HPTREC,                                                
                    F1:W_HPSREC,                                                
                       W_MISC),FILL=X'00'                                       
*                                                                               
 OUTFIL FNAMES=(MKTTOT),REMOVECC,NODETAIL,                                      
        OMIT=(W_KSAMTY,EQ,STYP_WIRED),                                          
        SECTIONS=(W_KRSRVC,W_KMKTC,W_KRPRD,W_KRPYR,W_KSPEXC,                    
                  W_KPBACK,W_KSAMTY,W_KSUBSI,                                   
                  W_KCALDT,W_KQHR,                                              
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:TOT=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:TOT=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:TOT=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:TOT=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:TOT=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:TOT=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:TOT=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:TOT=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:TOT=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:TOT=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:TOT=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:TOT=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:TOT=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:TOT=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:TOT=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:TOT=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:TOT=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:TOT=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:TOT=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:TOT=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:TOT=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:TOT=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_MISC:W_MISC))                                           
*                                                                               
./ ADD NAME=QHR1CNTL   ** CONTROL CARDS FOR USING(QHR1)                         
***********************************************************************         
* JOIN TOGETHER THE MARKET TOTAL DEMOS WITH THE INDIVIDUAL QUARTER              
* HOUR DATA.  WIRED DATA NOT INCLUDED                                           
***********************************************************************         
   JOINKEYS F1=PRSWRK4,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,                    
                               W_KQHR,A)                                        
   JOINKEYS F2=MKTTOT,FIELDS=(W_KSEQ,A,W_KYEAR,A,W_KDATE,A,                     
                               W_KQHR,A)                                        
   JOIN UNPAIRED,F1                                                             
   REFORMAT FIELDS=(F1:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                       W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                       W_KDISC,                                                 
                       W_KSPEXC,                                                
                       W_KPBACK,                                                
                       W_KSAMTY,                                                
                       W_KSUBSI,                                                
                       W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                       W_MHQREC,                                                
                       W_DHRREC,                                                
                       W_PNRAREA,                                               
                       W_QDRREC,                                                
                       W_STRREC,                                                
                       W_UERREC,                                                
                       W_HPTREC,                                                
                    F2:W_STRREC,                                                
                    F1:W_MISC),FILL=X'00'                                       
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=PAV1CNTL   ** CONTROL CARDS FOR USING(PAV1)                         
   JOINKEYS F1=PMKPARS,FIELDS=(REC_CODE,A),SORTED                               
   JOINKEYS F2=PNRPARS,TASKID=P1,FIELDS=(REC_CODE,A),SORTED                     
   REFORMAT FIELDS=(F2:W_KFILETYPE,                                             
                       W_KSEQ,                                                  
                       W_KWEEK,                                                 
                       W_KDAY,                                                  
                       W_KDAY_ALF,                                              
                       W_KCODE,                                                 
                    F1:W_KRSRVC,                                                
                       W_KMKTC,                                                 
                       W_KRPRD,                                                 
                       W_KRPYR,                                                 
                    F2:W_KDISC,                                                 
                    F1:W_KSPEXC,                                                
                       W_KPBACK,                                                
                       W_KSAMTY,                                                
                       W_KSUBSI,                                                
                    F2:W_KOCALL,                                                
                       W_KCALDT,                                                
                       W_KQHR,                                                  
                       W_KAWKS,                                                 
                       W_KDAYMAP,                                               
                    F1:W_MHQREC,                                                
                       W_DHRREC,                                                
                    F2:W_PNRAREA,                                               
                    F1:W_QDRREC,                                                
                       W_STRREC,                                                
                    F2:W_UERREC,                                                
                       W_HPTREC,                                                
                       W_HPSREC,                                                
                       W_MISC)                                                  
   OUTFIL FNAMES=PAVOUT,INCLUDE=(W_RECTYPE,EQ,RECTYPE_PQR)                      
*&&PU                                                                           
   OUTFIL FNAMES=PUPOUT,INCLUDE=(W_RECTYPE,EQ,RECTYPE_PUP)                      
*&&                                                                             
*                                                                               
*                                                                               
***********************************************************************         
./ ADD NAME=P1F2CNTL   ** CONTROL CARDS FOR USING(P1F2)                         
*&&3A                                                                           
   MODS E15=(DELMXR3,50000)   **EXIT TO DETERMINE WEEK NUMBER                   
*&&                                                                             
*&!3A                                                                           
   MODS E15=(DELMXR1,50000)   **EXIT TO DETERMINE WEEK NUMBER                   
*&!                                                                             
*                                                                               
*                                                                               
***********************************************************************         
*             CONTROL CARDS FOR PU+TP+PA AVERAGING                    *         
***********************************************************************         
*                                                                               
./ ADD NAME=PLSRCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PLSR)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT PROGRAM LINEUP RECORDS                                                   
 SORT FIELDS=(W_KDTUNPL,A)                                                      
*                                                                               
*                                                                               
./ ADD NAME=PLW1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PLW1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=PLORGSRT,SORTED,                                                   
          FIELDS=(W_KDTUNPL,A)                                                  
 JOINKEYS F2=PLNEW,SORTED,                                                      
          FIELDS=(W_KDTUNPL,A)                                                  
* GET RECORDS FROM THE ORIGINAL FILE FOR STATIONS THAT HAVE DATA ON             
* THE ORIGINAL FILE, BUT NOT THE UPDATE FILE.                                   
 JOIN UNPAIRED,F1,ONLY                                                          
*                                                                               
*                                                                               
./ ADD NAME=PLW2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PLW2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=PLORGSRT,SORTED,                                                   
          FIELDS=(W_KDTUNPL,A)                                                  
 JOINKEYS F2=PLWORK1,SORTED,                                                    
          FIELDS=(W_KDTUNPL,A)                                                  
* GET RECORDS FROM THE ORIGINAL FILE ONLY FOR STATIONS THAT OCCUR               
* ON THE UPDATE FILE BY JOINING BACK WITH THE ORIGINAL FILE.                    
 JOIN UNPAIRED,F1,ONLY                                                          
*                                                                               
*                                                                               
./ ADD NAME=PLW3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PLW3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=PLWORK2,                                                           
          FIELDS=(W_KDTUNPL,A,W_KYEAR,A,W_KDATE,A)                              
 JOINKEYS F2=PLNEW,                                                             
          FIELDS=(W_KDTUNPL,A,W_KYEAR,A,W_KDATE,A)                              
 JOIN UNPAIRED,F1,ONLY                                                          
*                                                                               
*                                                                               
./ ADD NAME=HWIRCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HWIR)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* INCLUDE ONLY WIRED HUT/PUT RECORDS. THEY WILL BE TREATED LIKE                 
* A REGULAR STATION.                                                            
 INCLUDE COND=(W_KSAMTY,EQ,STYP_WIRED)                                          
*                                                                               
* COPY HUTS/PUTS INTO THE QDR/STR AREA FOR THE CONVERSION                       
 OUTREC OVERLAY=(W_QDRDEMOS:W_HPTDEMOS,                                         
                 W_STRDEMOS:W_HPSDEMOS)                                         
*                                                                               
*                                                                               
./ ADD NAME=THUTCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THUT)                                       *         
*---------------------------------------------------------------------*         
* DATA IN TPHUTAVG IS MASSAGED TO EXCLUDE WIRED HUTS/PUTS.                      
* WE NEED THE DMA HUTS/PUTS SLOTTED ON ALL RECORDS, INCLUDING WIRED             
* DATA.                                                                         
*                                                                               
 JOINKEYS F1=TPALLAVG,                                                          
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A,                                        
                  W_KDAY,A,W_KQHR,A)                                            
 JOINKEYS F2=TPHUTAVG,TASKID=T3,                                                
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A,                                        
                  W_KDAY,A,W_KQHR,A)                                            
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                  F2:W_HPTREC,                                                  
                     W_HPSREC,                                                  
                  F1:W_MISC)                                                    
*                                                                               
*                                                                               
./ ADD NAME=WHUTCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(WHUT)                                       *         
* (CLONED FROM THUTCNTL FOR TRUE WEEKLY AVERAGES)                     *         
*---------------------------------------------------------------------*         
* DATA IN TPHUTAVG IS MASSAGED TO EXCLUDE WIRED HUTS/PUTS.                      
* WE NEED THE DMA HUTS/PUTS SLOTTED ON ALL RECORDS, INCLUDING WIRED             
* DATA.                                                                         
* NOTE: RECORDS ARE JOINED AT THE WEEK LEVEL.                                   
*                                                                               
 JOINKEYS F1=TWPLCOMB,                                                          
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A,                                        
                  W_KWEEK,A,                                                    
                  W_KDAY,A,W_KQHR,A)                                            
 JOINKEYS F2=TWHUTAVG,TASKID=T3,                                                
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A,                                        
                  W_KWEEK,A,                                                    
                  W_KDAY,A,W_KQHR,A)                                            
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                  F2:W_HPTREC,                                                  
                     W_HPSREC,                                                  
                  F1:W_MISC)                                                    
*                                                                               
*                                                                               
./ ADD NAME=TUNVCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(TUNV)                                       *         
*---------------------------------------------------------------------*         
* DATA IN UEROUT IS MASSAGED TO EXCLUDE WIRED UNIVERSES.                        
* WE NEED THE DMA UNIVERSES SLOTTED ON ALL RECORDS, INCLUDING WIRED             
* DATA.                                                                         
*                                                                               
 JOINKEYS F1=TPALLAV1,                                                          
          SORTED,                                                               
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
 JOINKEYS F2=UEROUT,TASKID=T3,                                                  
          SORTED,                                                               
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                  F2:W_UERREC,                                                  
                  F1:W_HPTREC,                                                  
                     W_HPSREC,                                                  
                     W_MISC)                                                    
*                                                                               
*                                                                               
./ ADD NAME=T3F2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(T3F2)                                       *         
* PRE-PROCESSING OF FILE F2 BEFORE JOINKEYS FOR TASKID T3.            *         
*---------------------------------------------------------------------*         
*                                                                               
* INCLUDE ONLY DMA RECORDS. (I.E. EXCLUDE WIRED)                                
 INCLUDE COND=(W_KSAMTY,EQ,STYP_TDMA)                                           
*                                                                               
*                                                                               
./ ADD NAME=WUNVCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(WUNV)                                       *         
* (CLONED FROM TUNVCNTL FOR TRUE WEEKLY AVERAGES)                     *         
*---------------------------------------------------------------------*         
* DATA IN UEROUT IS MASSAGED TO EXCLUDE WIRED UNIVERSES.                        
* WE NEED THE DMA UNIVERSES SLOTTED ON ALL RECORDS, INCLUDING WIRED             
* DATA.                                                                         
*                                                                               
 JOINKEYS F1=TWALLAV1,                                                          
          SORTED,                                                               
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
 JOINKEYS F2=UEROUT,TASKID=T3,                                                  
          SORTED,                                                               
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                  F2:W_UERREC,                                                  
                  F1:W_HPTREC,                                                  
                     W_HPSREC,                                                  
                     W_MISC)                                                    
*                                                                               
*                                                                               
./ ADD NAME=UDEMCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(UDEM)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* COPY UNIVERSES INTO THE QDR AREA FOR THE CONVERSION                           
 OUTREC OVERLAY=(W_QDRDEMOS:W_UERDEMOS)                                         
*                                                                               
*                                                                               
./ ADD NAME=HDMACNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HDMA)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* INCLUDE ONLY DMA RECORDS. (I.E. EXCLUDE WIRED)                                
 INCLUDE COND=(W_KSAMTY,EQ,STYP_TDMA)                                           
*                                                                               
* COPY HUTS/PUTS INTO THE QDR/STR AREA FOR THE CONVERSION                       
 OUTREC OVERLAY=(W_QDRDEMOS:W_HPTDEMOS,                                         
                 W_STRDEMOS:W_HPSDEMOS)                                         
*                                                                               
*                                                                               
./ ADD NAME=COMBCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(COMB)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=QHROUT,                                                            
          FIELDS=(W_KDTUNPL,A,                                                  
                  W_KYEAR,A,W_KDATE,A,W_KQHR,A)                                 
 JOINKEYS F2=PAVOUT,                                                            
          FIELDS=(W_KDTUNPL,A,                                                  
                  W_KYEAR,A,W_KDATE,A,W_KQHR,A)                                 
                                                                                
* COMBINE TIME PERIOD WITH PROGRAM DATA WHEN THERE IS A MATCH.                  
* THROW AWAY PROGRAM DATA IF THERE ARE NO TIME PERIOD RECORDS FOR IT.           
* KEEP TIME PERIOD RECORDS THAT DO NOT HAVE A MATCH ON THE PROGRAM              
* DATA. (THIS HANDLES THE SCENARIO WHERE THERE IS NO PROGRAM LINEUP FOR         
* A STATION, A DAY, ETC.)                                                       
 JOIN UNPAIRED,F1                                                               
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                  F2:W_PNRAREA,                                                 
                  F1:W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                     W_HPTREC,                                                  
                     W_HPSREC,                                                  
                     W_MISC)                                                    
                                                                                
* SORT JOINED RECORDS                                                           
 SORT FIELDS=(W_KDTYPE,A,W_KDAY,A,W_KQHR,A,W_PNRPNAME,A)                        
                                                                                
* MAKE SURE PROGRAM NAME BREAKOUT FLAG AND RECORD TYPE START AS BLANK.          
* REPLACE BLANK PROGRAM NAME WITH 'NOT AVAILABLE'.                              
 OUTREC IFTHEN=(WHEN=INIT,                                                      
                 OVERLAY=(W_PNAMEBK:PNAME_SP,W_RECTYPE:BLANK)),                 
        IFTHEN=(WHEN=(W_PNRPNAME,EQ,PNAME_BLANKS),                              
                 OVERLAY=(W_PNRPNAME:PNAME_NOT_AVAILABLE))                      
*                                                                               
*                                                                               
./ ADD NAME=CMBUCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(CMBU)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=QHROUT,                                                            
          FIELDS=(W_KDTUNPL,A,                                                  
                  W_KYEAR,A,W_KDATE,A,W_KQHR,A)                                 
 JOINKEYS F2=PLNEW,                                                             
          FIELDS=(W_KDTUNPL,A,                                                  
                  W_KYEAR,A,W_KDATE,A,W_KQHR,A)                                 
                                                                                
* COMBINE TIME PERIOD WITH PROGRAM DATA WHEN THERE IS A MATCH.                  
* IN PROGRAM LINEUP UPDATE MODE KEEP ONLY DATA FOR STATIONS THAT                
* WERE AFFECTED BY THE PROGRAM LINEUP UPDATES. (INNER JOIN)                     
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                  F2:W_PNRAREA,                                                 
                  F1:W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                     W_HPTREC,                                                  
                     W_HPSREC,                                                  
                     W_MISC)                                                    
                                                                                
* SORT JOINED RECORDS                                                           
 SORT FIELDS=(W_KDTYPE,A,W_KDAY,A,W_KQHR,A,W_PNRPNAME,A)                        
                                                                                
* MAKE SURE PROGRAM NAME BREAKOUT FLAG AND RECORD TYPE START AS BLANK.          
* REPLACE BLANK PROGRAM NAME WITH 'NOT AVAILABLE'.                              
 OUTREC IFTHEN=(WHEN=INIT,                                                      
                 OVERLAY=(W_PNAMEBK:PNAME_SP,W_RECTYPE:BLANK)),                 
        IFTHEN=(WHEN=(W_PNRPNAME,EQ,PNAME_BLANKS),                              
                 OVERLAY=(W_PNRPNAME:PNAME_NOT_AVAILABLE))                      
*                                                                               
*                                                                               
./ ADD NAME=DWK1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(DWK1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* CREATE AN AVERAGE LINE FOR THE INDIVIDUAL DAY AVERAGE.                        
* AN INDIVIDUAL DAY AVERAGE SHOULD BE CREATED FOR EVERY WEEKDAY/QUARTER         
* HOUR/PROGRAM NAME (WITHIN MARKET,STATION, ETC..).                             
*                                                                               
* NOTE: RECORDS ARE ALREADY SORTED FROM PREVIOUS STEP ON                        
* WEEKDAY/QH/PROGRAM (WITHIN MARKET/STATION/ETC..).                             
*                                                                               
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
*                                                                               
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KDAY,W_KQHR,W_PNRPNAME,                            
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_PNRAREA:W_PNRAREA,                                      
                      W_QDRHEAD:W_QDRHEAD,                                      
                      W_QDRMTROA:AVG=(W_QDRMTROA,TO=BI,LENGTH=4),               
                      W_QDRMTROB:AVG=(W_QDRMTROB,TO=BI,LENGTH=4),               
                      W_QDRHHLDS:AVG=(W_QDRHHLDS,TO=BI,LENGTH=4),               
                      W_QDRCH25:AVG=(W_QDRCH25,TO=BI,LENGTH=4),                 
                      W_QDRCH611:AVG=(W_QDRCH611,TO=BI,LENGTH=4),               
                      W_QDRM1214:AVG=(W_QDRM1214,TO=BI,LENGTH=4),               
                      W_QDRM1517:AVG=(W_QDRM1517,TO=BI,LENGTH=4),               
                      W_QDRM1820:AVG=(W_QDRM1820,TO=BI,LENGTH=4),               
                      W_QDRM2124:AVG=(W_QDRM2124,TO=BI,LENGTH=4),               
                      W_QDRM2534:AVG=(W_QDRM2534,TO=BI,LENGTH=4),               
                      W_QDRM3549:AVG=(W_QDRM3549,TO=BI,LENGTH=4),               
                      W_QDRM5054:AVG=(W_QDRM5054,TO=BI,LENGTH=4),               
                      W_QDRM5564:AVG=(W_QDRM5564,TO=BI,LENGTH=4),               
                      W_QDRM65P:AVG=(W_QDRM65P,TO=BI,LENGTH=4),                 
                      W_QDRF1214:AVG=(W_QDRF1214,TO=BI,LENGTH=4),               
                      W_QDRF1517:AVG=(W_QDRF1517,TO=BI,LENGTH=4),               
                      W_QDRF1820:AVG=(W_QDRF1820,TO=BI,LENGTH=4),               
                      W_QDRF2124:AVG=(W_QDRF2124,TO=BI,LENGTH=4),               
                      W_QDRF2534:AVG=(W_QDRF2534,TO=BI,LENGTH=4),               
                      W_QDRF3549:AVG=(W_QDRF3549,TO=BI,LENGTH=4),               
                      W_QDRF5054:AVG=(W_QDRF5054,TO=BI,LENGTH=4),               
                      W_QDRF5564:AVG=(W_QDRF5564,TO=BI,LENGTH=4),               
                      W_QDRF65P:AVG=(W_QDRF65P,TO=BI,LENGTH=4),                 
                      W_QDRWW:AVG=(W_QDRWW,TO=BI,LENGTH=4),                     
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_HPTHEAD:W_HPTHEAD,                                      
                      W_HPTMTROA:AVG=(W_HPTMTROA,TO=BI,LENGTH=4),               
                      W_HPTMTROB:AVG=(W_HPTMTROB,TO=BI,LENGTH=4),               
                      W_HPTHHLDS:AVG=(W_HPTHHLDS,TO=BI,LENGTH=4),               
                      W_HPTCH25:AVG=(W_HPTCH25,TO=BI,LENGTH=4),                 
                      W_HPTCH611:AVG=(W_HPTCH611,TO=BI,LENGTH=4),               
                      W_HPTM1214:AVG=(W_HPTM1214,TO=BI,LENGTH=4),               
                      W_HPTM1517:AVG=(W_HPTM1517,TO=BI,LENGTH=4),               
                      W_HPTM1820:AVG=(W_HPTM1820,TO=BI,LENGTH=4),               
                      W_HPTM2124:AVG=(W_HPTM2124,TO=BI,LENGTH=4),               
                      W_HPTM2534:AVG=(W_HPTM2534,TO=BI,LENGTH=4),               
                      W_HPTM3549:AVG=(W_HPTM3549,TO=BI,LENGTH=4),               
                      W_HPTM5054:AVG=(W_HPTM5054,TO=BI,LENGTH=4),               
                      W_HPTM5564:AVG=(W_HPTM5564,TO=BI,LENGTH=4),               
                      W_HPTM65P:AVG=(W_HPTM65P,TO=BI,LENGTH=4),                 
                      W_HPTF1214:AVG=(W_HPTF1214,TO=BI,LENGTH=4),               
                      W_HPTF1517:AVG=(W_HPTF1517,TO=BI,LENGTH=4),               
                      W_HPTF1820:AVG=(W_HPTF1820,TO=BI,LENGTH=4),               
                      W_HPTF2124:AVG=(W_HPTF2124,TO=BI,LENGTH=4),               
                      W_HPTF2534:AVG=(W_HPTF2534,TO=BI,LENGTH=4),               
                      W_HPTF3549:AVG=(W_HPTF3549,TO=BI,LENGTH=4),               
                      W_HPTF5054:AVG=(W_HPTF5054,TO=BI,LENGTH=4),               
                      W_HPTF5564:AVG=(W_HPTF5564,TO=BI,LENGTH=4),               
                      W_HPTF65P:AVG=(W_HPTF65P,TO=BI,LENGTH=4),                 
                      W_HPTWW:AVG=(W_HPTWW,TO=BI,LENGTH=4),                     
                      W_HPSHEAD:W_HPSHEAD,                                      
                      W_HPSHHLDS:AVG=(W_HPSHHLDS,TO=BI,LENGTH=4),               
                      W_HPSCH25:AVG=(W_HPSCH25,TO=BI,LENGTH=4),                 
                      W_HPSCH611:AVG=(W_HPSCH611,TO=BI,LENGTH=4),               
                      W_HPSM1214:AVG=(W_HPSM1214,TO=BI,LENGTH=4),               
                      W_HPSM1517:AVG=(W_HPSM1517,TO=BI,LENGTH=4),               
                      W_HPSM1820:AVG=(W_HPSM1820,TO=BI,LENGTH=4),               
                      W_HPSM2124:AVG=(W_HPSM2124,TO=BI,LENGTH=4),               
                      W_HPSM2534:AVG=(W_HPSM2534,TO=BI,LENGTH=4),               
                      W_HPSM3549:AVG=(W_HPSM3549,TO=BI,LENGTH=4),               
                      W_HPSM5054:AVG=(W_HPSM5054,TO=BI,LENGTH=4),               
                      W_HPSM5564:AVG=(W_HPSM5564,TO=BI,LENGTH=4),               
                      W_HPSM65P:AVG=(W_HPSM65P,TO=BI,LENGTH=4),                 
                      W_HPSF1214:AVG=(W_HPSF1214,TO=BI,LENGTH=4),               
                      W_HPSF1517:AVG=(W_HPSF1517,TO=BI,LENGTH=4),               
                      W_HPSF1820:AVG=(W_HPSF1820,TO=BI,LENGTH=4),               
                      W_HPSF2124:AVG=(W_HPSF2124,TO=BI,LENGTH=4),               
                      W_HPSF2534:AVG=(W_HPSF2534,TO=BI,LENGTH=4),               
                      W_HPSF3549:AVG=(W_HPSF3549,TO=BI,LENGTH=4),               
                      W_HPSF5054:AVG=(W_HPSF5054,TO=BI,LENGTH=4),               
                      W_HPSF5564:AVG=(W_HPSF5564,TO=BI,LENGTH=4),               
                      W_HPSF65P:AVG=(W_HPSF65P,TO=BI,LENGTH=4),                 
                      W_HPSWW:AVG=(W_HPSWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_DAY_AVG))                               
*                                                                               
*                                                                               
./ ADD NAME=DWK2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(DWK2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* INPUT EXIT DETERMINES THE QUARTER HOURS THAT NEED A 4-WEEK AVERAGE            
* AND CREATES THOSE AVERAGES. IT RETURNS BACK ONLY THE AVERAGE RECORDS.         
*                                                                               
 MODS E15=(DELMXT2,5000)                                                        
*                                                                               
 OUTFIL OMIT=(W_RECTYPE,EQ,RECTYPE_TEMP),                                       
        OVERLAY=(W_PNRPNAME:PNAME_AVGALLW,W_RECTYPE:RECTYPE_ALL_WKS)            
*                                                                               
*                                                                               
./ ADD NAME=MWK1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(MWK1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE SATURDAY AND SUNDAY.                                                  
 OMIT COND=(W_KDAY,EQ,SATURDAY,OR,W_KDAY,EQ,SUNDAY)                             
                                                                                
* SORT RECORDS SO THAT ALL 5 RECORDS FOR M-F FOR A QH FOR A WEEK ARE            
* TOGETHER. ALSO SORT ON PROGRAM NAME SO THAT LIKE-PROGRAM NAMES ARE            
* TOGETHER FOR A WEEK.                                                          
 SORT FIELDS=(W_KDTYPE,A,W_KQHR,A,W_KWEEK,A,W_PNRPNAME,A)                       
                                                                                
* CREATE AN AVERAGE LINE FOR THE M-F WEEKLY AVERAGE.                            
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KQHR,W_KWEEK,                                      
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_MHQREC:W_MHQREC,                                        
                      W_DHRREC:W_DHRREC,                                        
                      W_PNRAREA:W_PNRAREA,                                      
                      W_QDRHEAD:W_QDRHEAD,                                      
                      W_QDRMTROA:AVG=(W_QDRMTROA,TO=BI,LENGTH=4),               
                      W_QDRMTROB:AVG=(W_QDRMTROB,TO=BI,LENGTH=4),               
                      W_QDRHHLDS:AVG=(W_QDRHHLDS,TO=BI,LENGTH=4),               
                      W_QDRCH25:AVG=(W_QDRCH25,TO=BI,LENGTH=4),                 
                      W_QDRCH611:AVG=(W_QDRCH611,TO=BI,LENGTH=4),               
                      W_QDRM1214:AVG=(W_QDRM1214,TO=BI,LENGTH=4),               
                      W_QDRM1517:AVG=(W_QDRM1517,TO=BI,LENGTH=4),               
                      W_QDRM1820:AVG=(W_QDRM1820,TO=BI,LENGTH=4),               
                      W_QDRM2124:AVG=(W_QDRM2124,TO=BI,LENGTH=4),               
                      W_QDRM2534:AVG=(W_QDRM2534,TO=BI,LENGTH=4),               
                      W_QDRM3549:AVG=(W_QDRM3549,TO=BI,LENGTH=4),               
                      W_QDRM5054:AVG=(W_QDRM5054,TO=BI,LENGTH=4),               
                      W_QDRM5564:AVG=(W_QDRM5564,TO=BI,LENGTH=4),               
                      W_QDRM65P:AVG=(W_QDRM65P,TO=BI,LENGTH=4),                 
                      W_QDRF1214:AVG=(W_QDRF1214,TO=BI,LENGTH=4),               
                      W_QDRF1517:AVG=(W_QDRF1517,TO=BI,LENGTH=4),               
                      W_QDRF1820:AVG=(W_QDRF1820,TO=BI,LENGTH=4),               
                      W_QDRF2124:AVG=(W_QDRF2124,TO=BI,LENGTH=4),               
                      W_QDRF2534:AVG=(W_QDRF2534,TO=BI,LENGTH=4),               
                      W_QDRF3549:AVG=(W_QDRF3549,TO=BI,LENGTH=4),               
                      W_QDRF5054:AVG=(W_QDRF5054,TO=BI,LENGTH=4),               
                      W_QDRF5564:AVG=(W_QDRF5564,TO=BI,LENGTH=4),               
                      W_QDRF65P:AVG=(W_QDRF65P,TO=BI,LENGTH=4),                 
                      W_QDRWW:AVG=(W_QDRWW,TO=BI,LENGTH=4),                     
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_MF_W,                                   
                      W_PREVIEW:W_PREVIEW))                                     
*                                                                               
*                                                                               
./ ADD NAME=MWK2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(MWK2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* INPUT EXIT DETERMINES THE PREDOMINANT PROGRAM NAME AND SLOTS IT               
* ONTO THE AVERAGE LINE. DROP THE INDIVIDUAL DAY RECORDS.                       
*                                                                               
 MODS E15=(DELMXT1,5000)                                                        
*                                                                               
 OUTFIL OVERLAY=(W_KDAY:MONDAY_FRIDAY)                                          
*                                                                               
*                                                                               
./ ADD NAME=MWK3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(MWK3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 SORT FIELDS=(W_KDTYPE,A,W_KQHR,A,W_PNRPNAME,A,W_PNAMEBK,A)                     
*                                                                               
*                                                                               
./ ADD NAME=MWK4CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(MWK4)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* CREATE A M-F AVERAGE LINE FOR THE WEEKS THAT HAVE THE SAME PROGRAM            
* NAME AND PROGRAM NAME BREAKOUT FLAG.                                          
* RECORDS ARE ALREADY SORTED.                                                   
*                                                                               
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
*                                                                               
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KQHR,W_PNRPNAME,W_PNAMEBK,                         
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_PNRAREA:W_PNRAREA,                                      
                      W_QDRHEAD:W_QDRHEAD,                                      
                      W_QDRMTROA:AVG=(W_QDRMTROA,TO=BI,LENGTH=4),               
                      W_QDRMTROB:AVG=(W_QDRMTROB,TO=BI,LENGTH=4),               
                      W_QDRHHLDS:AVG=(W_QDRHHLDS,TO=BI,LENGTH=4),               
                      W_QDRCH25:AVG=(W_QDRCH25,TO=BI,LENGTH=4),                 
                      W_QDRCH611:AVG=(W_QDRCH611,TO=BI,LENGTH=4),               
                      W_QDRM1214:AVG=(W_QDRM1214,TO=BI,LENGTH=4),               
                      W_QDRM1517:AVG=(W_QDRM1517,TO=BI,LENGTH=4),               
                      W_QDRM1820:AVG=(W_QDRM1820,TO=BI,LENGTH=4),               
                      W_QDRM2124:AVG=(W_QDRM2124,TO=BI,LENGTH=4),               
                      W_QDRM2534:AVG=(W_QDRM2534,TO=BI,LENGTH=4),               
                      W_QDRM3549:AVG=(W_QDRM3549,TO=BI,LENGTH=4),               
                      W_QDRM5054:AVG=(W_QDRM5054,TO=BI,LENGTH=4),               
                      W_QDRM5564:AVG=(W_QDRM5564,TO=BI,LENGTH=4),               
                      W_QDRM65P:AVG=(W_QDRM65P,TO=BI,LENGTH=4),                 
                      W_QDRF1214:AVG=(W_QDRF1214,TO=BI,LENGTH=4),               
                      W_QDRF1517:AVG=(W_QDRF1517,TO=BI,LENGTH=4),               
                      W_QDRF1820:AVG=(W_QDRF1820,TO=BI,LENGTH=4),               
                      W_QDRF2124:AVG=(W_QDRF2124,TO=BI,LENGTH=4),               
                      W_QDRF2534:AVG=(W_QDRF2534,TO=BI,LENGTH=4),               
                      W_QDRF3549:AVG=(W_QDRF3549,TO=BI,LENGTH=4),               
                      W_QDRF5054:AVG=(W_QDRF5054,TO=BI,LENGTH=4),               
                      W_QDRF5564:AVG=(W_QDRF5564,TO=BI,LENGTH=4),               
                      W_QDRF65P:AVG=(W_QDRF65P,TO=BI,LENGTH=4),                 
                      W_QDRWW:AVG=(W_QDRWW,TO=BI,LENGTH=4),                     
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_MF_W,                                   
                      W_PNAMEBK:W_PNAMEBK))                                     
*                                                                               
*                                                                               
./ ADD NAME=MWK5CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(MWK5)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* INPUT EXIT DETERMINES THE QUARTER HOURS THAT NEED A 4-WEEK AVERAGE            
* AND CREATES THOSE AVERAGES. IT RETURNS BACK ONLY THE AVERAGE RECORDS.         
*                                                                               
 MODS E15=(DELMXT2,5000)                                                        
*                                                                               
 OUTFIL OMIT=(W_RECTYPE,EQ,RECTYPE_TEMP),                                       
        OVERLAY=(W_PNRPNAME:PNAME_WK4AVG,W_RECTYPE:RECTYPE_MF_4WK)              
*                                                                               
*                                                                               
./ ADD NAME=HWK1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HWK1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT RECORDS ON WEEKDAY/QH (WITHIN MARKET/STATION/ETC..).                     
*                                                                               
 SORT FIELDS=(W_KDTYPE,A,W_KDAY,A,W_KQHR,A)                                     
*                                                                               
* CREATE AN AVERAGE LINE FOR THE HUT/PUT AVERAGE.                               
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
*                                                                               
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KDAY,W_KQHR,                                       
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_HPTHEAD:W_HPTHEAD,                                      
                      W_HPTMTROA:AVG=(W_HPTMTROA,TO=BI,LENGTH=4),               
                      W_HPTMTROB:AVG=(W_HPTMTROB,TO=BI,LENGTH=4),               
                      W_HPTHHLDS:AVG=(W_HPTHHLDS,TO=BI,LENGTH=4),               
                      W_HPTCH25:AVG=(W_HPTCH25,TO=BI,LENGTH=4),                 
                      W_HPTCH611:AVG=(W_HPTCH611,TO=BI,LENGTH=4),               
                      W_HPTM1214:AVG=(W_HPTM1214,TO=BI,LENGTH=4),               
                      W_HPTM1517:AVG=(W_HPTM1517,TO=BI,LENGTH=4),               
                      W_HPTM1820:AVG=(W_HPTM1820,TO=BI,LENGTH=4),               
                      W_HPTM2124:AVG=(W_HPTM2124,TO=BI,LENGTH=4),               
                      W_HPTM2534:AVG=(W_HPTM2534,TO=BI,LENGTH=4),               
                      W_HPTM3549:AVG=(W_HPTM3549,TO=BI,LENGTH=4),               
                      W_HPTM5054:AVG=(W_HPTM5054,TO=BI,LENGTH=4),               
                      W_HPTM5564:AVG=(W_HPTM5564,TO=BI,LENGTH=4),               
                      W_HPTM65P:AVG=(W_HPTM65P,TO=BI,LENGTH=4),                 
                      W_HPTF1214:AVG=(W_HPTF1214,TO=BI,LENGTH=4),               
                      W_HPTF1517:AVG=(W_HPTF1517,TO=BI,LENGTH=4),               
                      W_HPTF1820:AVG=(W_HPTF1820,TO=BI,LENGTH=4),               
                      W_HPTF2124:AVG=(W_HPTF2124,TO=BI,LENGTH=4),               
                      W_HPTF2534:AVG=(W_HPTF2534,TO=BI,LENGTH=4),               
                      W_HPTF3549:AVG=(W_HPTF3549,TO=BI,LENGTH=4),               
                      W_HPTF5054:AVG=(W_HPTF5054,TO=BI,LENGTH=4),               
                      W_HPTF5564:AVG=(W_HPTF5564,TO=BI,LENGTH=4),               
                      W_HPTF65P:AVG=(W_HPTF65P,TO=BI,LENGTH=4),                 
                      W_HPTWW:AVG=(W_HPTWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_HPT))                                   
*                                                                               
*                                                                               
./ ADD NAME=HWK2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HWK2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE SATURDAY AND SUNDAY.                                                  
 OMIT COND=(W_KDAY,EQ,SATURDAY,OR,W_KDAY,EQ,SUNDAY)                             
                                                                                
* SORT RECORDS SO THAT ALL 5 HUT/PUT RECORDS FOR M-F FOR A QH, FOR A            
* WEEK ARE TOGETHER.                                                            
 SORT FIELDS=(W_KDTYPE,A,W_KQHR,A,W_KWEEK,A)                                    
                                                                                
* CREATE AN AVERAGE LINE FOR THE HUT/PUT M-F WEEKLY AVERAGE.                    
* KEEP AROUND THE RECORDS THAT GO INTO THE AVERAGE.                             
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KQHR,W_KWEEK,                                      
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_MHQREC:W_MHQREC,                                        
                      W_DHRREC:W_DHRREC,                                        
                      W_PNRAREA:W_PNRAREA,                                      
                      W_HPTHEAD:W_HPTHEAD,                                      
                      W_HPTMTROA:AVG=(W_HPTMTROA,TO=BI,LENGTH=4),               
                      W_HPTMTROB:AVG=(W_HPTMTROB,TO=BI,LENGTH=4),               
                      W_HPTHHLDS:AVG=(W_HPTHHLDS,TO=BI,LENGTH=4),               
                      W_HPTCH25:AVG=(W_HPTCH25,TO=BI,LENGTH=4),                 
                      W_HPTCH611:AVG=(W_HPTCH611,TO=BI,LENGTH=4),               
                      W_HPTM1214:AVG=(W_HPTM1214,TO=BI,LENGTH=4),               
                      W_HPTM1517:AVG=(W_HPTM1517,TO=BI,LENGTH=4),               
                      W_HPTM1820:AVG=(W_HPTM1820,TO=BI,LENGTH=4),               
                      W_HPTM2124:AVG=(W_HPTM2124,TO=BI,LENGTH=4),               
                      W_HPTM2534:AVG=(W_HPTM2534,TO=BI,LENGTH=4),               
                      W_HPTM3549:AVG=(W_HPTM3549,TO=BI,LENGTH=4),               
                      W_HPTM5054:AVG=(W_HPTM5054,TO=BI,LENGTH=4),               
                      W_HPTM5564:AVG=(W_HPTM5564,TO=BI,LENGTH=4),               
                      W_HPTM65P:AVG=(W_HPTM65P,TO=BI,LENGTH=4),                 
                      W_HPTF1214:AVG=(W_HPTF1214,TO=BI,LENGTH=4),               
                      W_HPTF1517:AVG=(W_HPTF1517,TO=BI,LENGTH=4),               
                      W_HPTF1820:AVG=(W_HPTF1820,TO=BI,LENGTH=4),               
                      W_HPTF2124:AVG=(W_HPTF2124,TO=BI,LENGTH=4),               
                      W_HPTF2534:AVG=(W_HPTF2534,TO=BI,LENGTH=4),               
                      W_HPTF3549:AVG=(W_HPTF3549,TO=BI,LENGTH=4),               
                      W_HPTF5054:AVG=(W_HPTF5054,TO=BI,LENGTH=4),               
                      W_HPTF5564:AVG=(W_HPTF5564,TO=BI,LENGTH=4),               
                      W_HPTF65P:AVG=(W_HPTF65P,TO=BI,LENGTH=4),                 
                      W_HPTWW:AVG=(W_HPTWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_HPT))                                   
*                                                                               
*                                                                               
./ ADD NAME=HWK3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HWK3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* DAY IS NOW MONDAY-FRIDAY                                                      
 INREC OVERLAY=(W_KDAY:MONDAY_FRIDAY)                                           
*                                                                               
* CREATE A M-F AVERAGE LINE, WHICH IS AN AVERAGE OF THE WKLY AVERAGES.          
* KEEP AROUND THE LINES THAT GO INTO THE AVERAGE.                               
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
*                                                                               
 OUTFIL REMOVECC,                                                               
        SECTIONS=(W_KDTYPE,W_KQHR,                                              
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_PNRAREA:W_PNRAREA,                                      
                      W_HPTHEAD:W_HPTHEAD,                                      
                      W_HPTMTROA:AVG=(W_HPTMTROA,TO=BI,LENGTH=4),               
                      W_HPTMTROB:AVG=(W_HPTMTROB,TO=BI,LENGTH=4),               
                      W_HPTHHLDS:AVG=(W_HPTHHLDS,TO=BI,LENGTH=4),               
                      W_HPTCH25:AVG=(W_HPTCH25,TO=BI,LENGTH=4),                 
                      W_HPTCH611:AVG=(W_HPTCH611,TO=BI,LENGTH=4),               
                      W_HPTM1214:AVG=(W_HPTM1214,TO=BI,LENGTH=4),               
                      W_HPTM1517:AVG=(W_HPTM1517,TO=BI,LENGTH=4),               
                      W_HPTM1820:AVG=(W_HPTM1820,TO=BI,LENGTH=4),               
                      W_HPTM2124:AVG=(W_HPTM2124,TO=BI,LENGTH=4),               
                      W_HPTM2534:AVG=(W_HPTM2534,TO=BI,LENGTH=4),               
                      W_HPTM3549:AVG=(W_HPTM3549,TO=BI,LENGTH=4),               
                      W_HPTM5054:AVG=(W_HPTM5054,TO=BI,LENGTH=4),               
                      W_HPTM5564:AVG=(W_HPTM5564,TO=BI,LENGTH=4),               
                      W_HPTM65P:AVG=(W_HPTM65P,TO=BI,LENGTH=4),                 
                      W_HPTF1214:AVG=(W_HPTF1214,TO=BI,LENGTH=4),               
                      W_HPTF1517:AVG=(W_HPTF1517,TO=BI,LENGTH=4),               
                      W_HPTF1820:AVG=(W_HPTF1820,TO=BI,LENGTH=4),               
                      W_HPTF2124:AVG=(W_HPTF2124,TO=BI,LENGTH=4),               
                      W_HPTF2534:AVG=(W_HPTF2534,TO=BI,LENGTH=4),               
                      W_HPTF3549:AVG=(W_HPTF3549,TO=BI,LENGTH=4),               
                      W_HPTF5054:AVG=(W_HPTF5054,TO=BI,LENGTH=4),               
                      W_HPTF5564:AVG=(W_HPTF5564,TO=BI,LENGTH=4),               
                      W_HPTF65P:AVG=(W_HPTF65P,TO=BI,LENGTH=4),                 
                      W_HPTWW:AVG=(W_HPTWW,TO=BI,LENGTH=4),                     
                      W_RECTYPE:RECTYPE_HPT))                                   
*                                                                               
*                                                                               
./ ADD NAME=HWK4CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(HWK4)                                       *         
* (CLONED FROM HWK3CNTL FOR TRUE WEEKLY AVERAGES)                     *         
*---------------------------------------------------------------------*         
*                                                                               
* DAY IS NOW MONDAY-FRIDAY                                                      
 INREC OVERLAY=(W_KDAY:MONDAY_FRIDAY)                                           
*                                                                               
*                                                                               
./ ADD NAME=THW1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SKIP STATIONS THAT DO NOT HAVE TSA IMPRESSIONS (EITHER REAL OR FILLED         
* IN BY DDS), AND STATIONS NOT REPORTABLE ON THE VIP.                           
* ALSO, SKIP PARENT STATIONS.                                                   
* NOTE: EFFECTIVE WITH THE JAN/2015 BOOK, FOR THE ETHNIC                        
*       SURVEYS, NIELSEN ALWAYS POPULATES THE "REPORTABILITY STATUS"            
*       FIELD IN THE "02" RECORD WITH C'M'. WE CAN THEREFORE NO LONGER          
*       USE THAT FIELD FOR THESE SURVEYS. INSTEAD, WE TREAT THE "02"            
*       RECORDS AS IF THE REPORTABLE STATUS IS "V" OR "D" IF THE MARKET         
*       CODE IS EQUAL TO THE "MARKET OF ORIGIN" CODE (FOR ETHNIC                
*       SURVEYS).                                                               
*       A SIMILAR RULE APPLIES FOR THE SVIP SURVEYS STARTING JUL/2015.          
*                                                                               
 INCLUDE COND=((W_DHRSTOT,EQ,W_DHRSTYQ,OR,                                      
                W_DHRSTOT,EQ,W_DHRSTYDQ),AND,                                   
                W_DHRPRNT,NE,W_DHPARYQ,AND,                                     
               ((W_KRPYR,LT,C'2015',AND,                                        
                  (W_DHRREPST,EQ,REPORTAB_VIP,OR,                               
                   W_DHRREPST,EQ,REPORTAB_DPT)),OR,                             
                (W_KRPYR,GE,C'2015',AND,                                        
                  (((W_KSUBSI,NE,C'Hisp ',AND,                                  
                     W_KSUBSI,NE,C'Af-Am',AND,                                  
                     W_MHQGEOI,NE,C'Special',AND,                               
                      (W_DHRREPST,EQ,REPORTAB_VIP,OR,                           
                       W_DHRREPST,EQ,REPORTAB_DPT))),OR,                        
                   (W_MHQGEOI,EQ,C'Special',AND,                                
                    W_DHRMOOC,NE,C'000'),OR,                                    
                   ((W_KSUBSI,EQ,C'Hisp ',OR,                                   
                     W_KSUBSI,EQ,C'Af-Am'),AND,                                 
                     W_DHRMKTC,EQ,W_DHRMOOC)))))                                
*                                                                               
* SORT RECORDS ON DAY/QH/STATION (WITHIN MARKET,ETC..).                         
*                                                                               
 SORT FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,              
              W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                                 
              W_KDAY,A,W_KQHR,A,W_KDISC,A)                                      
*                                                                               
* CREATE AN AVERAGE LINE FOR THE DAY/QH/STATION.                                
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
* THROW AWAY THE RECORDS THAT GO IN THE AVERAGE.                                
*                                                                               
 OUTFIL REMOVECC,NODETAIL,                                                      
        SECTIONS=(W_KRSRVC,W_KMKTC,W_KRPRD,W_KRPYR,W_KSPEXC,                    
                  W_KPBACK,W_KSAMTY,W_KSUBSI,                                   
                  W_KDAY,W_KQHR,W_KDISC,                                        
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_MISC:W_MISC))                                           
*                                                                               
*                                                                               
./ ADD NAME=THW2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE SATURDAY AND SUNDAY, AND STATIONS THAT DO NOT HAVE TSA                
* IMPRESSIONS (EITHER REAL OR FILLED IN BY DDS), OR ARE PARENT ONLY.            
* NOTE: EFFECTIVE WITH THE JAN/2015 BOOK, FOR THE ETHNIC                        
*       SURVEYS, NIELSEN ALWAYS POPULATES THE "REPORTABILITY STATUS"            
*       FIELD IN THE "02" RECORD WITH C'M'. WE CAN THEREFORE NO LONGER          
*       USE THAT FIELD FOR THESE SURVEYS. INSTEAD, WE TREAT THE "02"            
*       RECORDS AS IF THE REPORTABLE STATUS IS "V" OR "D" IF THE MARKET         
*       CODE IS EQUAL TO THE "MARKET OF ORIGIN" CODE (FOR ETHNIC                
*       SURVEYS).                                                               
*       A SIMILAR RULE APPLIES FOR THE SVIP SURVEYS STARTING JUL/2015.          
*                                                                               
 INCLUDE COND=((W_KDAY,NE,SATURDAY,AND,                                         
                W_KDAY,NE,SUNDAY),AND,                                          
               (W_DHRSTOT,EQ,W_DHRSTYQ,OR,                                      
                W_DHRSTOT,EQ,W_DHRSTYDQ),AND,                                   
                W_DHRPRNT,NE,W_DHPARYQ,AND,                                     
               ((W_KRPYR,LT,C'2015',AND,                                        
                  (W_DHRREPST,EQ,REPORTAB_VIP,OR,                               
                   W_DHRREPST,EQ,REPORTAB_DPT)),OR,                             
                (W_KRPYR,GE,C'2015',AND,                                        
                  (((W_KSUBSI,NE,C'Hisp ',AND,                                  
                     W_KSUBSI,NE,C'Af-Am',AND,                                  
                     W_MHQGEOI,NE,C'Special',AND,                               
                      (W_DHRREPST,EQ,REPORTAB_VIP,OR,                           
                       W_DHRREPST,EQ,REPORTAB_DPT))),OR,                        
                   (W_MHQGEOI,EQ,C'Special',AND,                                
                    W_DHRMOOC,NE,C'000'),OR,                                    
                   ((W_KSUBSI,EQ,C'Hisp ',OR,                                   
                     W_KSUBSI,EQ,C'Af-Am'),AND,                                 
                     W_DHRMKTC,EQ,W_DHRMOOC)))))                                
*                                                                               
* SORT RECORDS SO THAT ALL RECORDS FOR MON THRU FRI FOR A QH/STATION/           
* WEEK ARE TOGETHER.                                                            
*                                                                               
 SORT FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,              
              W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                                 
              W_KQHR,A,W_KDISC,A,W_KWEEK,A)                                     
*                                                                               
* CREATE AN AVERAGE LINE FOR THE M-F WEEKLY AVERAGE.                            
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
* THROW AWAY THE RECORDS THAT GO IN THE AVERAGE.                                
*                                                                               
 OUTFIL REMOVECC,NODETAIL,                                                      
        SECTIONS=(W_KRSRVC,W_KMKTC,W_KRPRD,W_KRPYR,W_KSPEXC,                    
                  W_KPBACK,W_KSAMTY,W_KSUBSI,                                   
                  W_KQHR,W_KDISC,W_KWEEK,                                       
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_MISC:W_MISC))                                           
*                                                                               
*                                                                               
./ ADD NAME=THW3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* DAY IS NOW MONDAY-FRIDAY                                                      
*                                                                               
 INREC OVERLAY=(W_KDAY:MONDAY_FRIDAY)                                           
*                                                                               
* CREATE A M-F AVERAGE LINE, WHICH IS AN AVERAGE OF THE WKLY AVERAGES.          
* RESULTS ARE TRUNCATED, NOT ROUNDED.                                           
* THROW AWAY THE RECORDS THAT GO IN THE AVERAGE.                                
*                                                                               
 OUTFIL REMOVECC,NODETAIL,                                                      
        SECTIONS=(W_KRSRVC,W_KMKTC,W_KRPRD,W_KRPYR,W_KSPEXC,                    
                  W_KPBACK,W_KSAMTY,W_KSUBSI,                                   
                  W_KQHR,W_KDISC,                                               
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:AVG=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:AVG=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:AVG=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:AVG=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:AVG=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:AVG=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:AVG=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:AVG=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:AVG=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:AVG=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:AVG=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:AVG=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:AVG=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:AVG=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:AVG=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:AVG=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:AVG=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:AVG=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:AVG=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:AVG=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:AVG=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:AVG=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_MISC:W_MISC))                                           
*                                                                               
*                                                                               
./ ADD NAME=THW4CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW4)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* CREATE A LINE FOR EACH QH AND INDIVIDUAL DAY OR M-F, WHICH HAS THE            
* SUMS OF THE TSA IMPRESSIONS ACROSS ALL STATIONS.                              
* THROW AWAY THE RECORDS THAT GO IN THE TOTAL LINE.                             
*                                                                               
 OUTFIL REMOVECC,NODETAIL,                                                      
        SECTIONS=(W_KRSRVC,W_KMKTC,W_KRPRD,W_KRPYR,W_KSPEXC,                    
                  W_KPBACK,W_KSAMTY,W_KSUBSI,                                   
                  W_KDAY,W_KQHR,                                                
            TRAILER3=(W_KAREA:W_KAREA,                                          
                      W_STRHEAD:W_STRHEAD,                                      
                      W_STRHHLDS:TOT=(W_STRHHLDS,TO=BI,LENGTH=4),               
                      W_STRCH25:TOT=(W_STRCH25,TO=BI,LENGTH=4),                 
                      W_STRCH611:TOT=(W_STRCH611,TO=BI,LENGTH=4),               
                      W_STRM1214:TOT=(W_STRM1214,TO=BI,LENGTH=4),               
                      W_STRM1517:TOT=(W_STRM1517,TO=BI,LENGTH=4),               
                      W_STRM1820:TOT=(W_STRM1820,TO=BI,LENGTH=4),               
                      W_STRM2124:TOT=(W_STRM2124,TO=BI,LENGTH=4),               
                      W_STRM2534:TOT=(W_STRM2534,TO=BI,LENGTH=4),               
                      W_STRM3549:TOT=(W_STRM3549,TO=BI,LENGTH=4),               
                      W_STRM5054:TOT=(W_STRM5054,TO=BI,LENGTH=4),               
                      W_STRM5564:TOT=(W_STRM5564,TO=BI,LENGTH=4),               
                      W_STRM65P:TOT=(W_STRM65P,TO=BI,LENGTH=4),                 
                      W_STRF1214:TOT=(W_STRF1214,TO=BI,LENGTH=4),               
                      W_STRF1517:TOT=(W_STRF1517,TO=BI,LENGTH=4),               
                      W_STRF1820:TOT=(W_STRF1820,TO=BI,LENGTH=4),               
                      W_STRF2124:TOT=(W_STRF2124,TO=BI,LENGTH=4),               
                      W_STRF2534:TOT=(W_STRF2534,TO=BI,LENGTH=4),               
                      W_STRF3549:TOT=(W_STRF3549,TO=BI,LENGTH=4),               
                      W_STRF5054:TOT=(W_STRF5054,TO=BI,LENGTH=4),               
                      W_STRF5564:TOT=(W_STRF5564,TO=BI,LENGTH=4),               
                      W_STRF65P:TOT=(W_STRF65P,TO=BI,LENGTH=4),                 
                      W_STRWW:TOT=(W_STRWW,TO=BI,LENGTH=4),                     
                      W_MISC:W_MISC))                                           
*                                                                               
*                                                                               
./ ADD NAME=THW5CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW5)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=TPHUTPUT,                                                          
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                             
                  W_KDAY,A,W_KQHR,A)                                            
 JOINKEYS F2=TPWORK12,                                                          
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                             
                  W_KDAY,A,W_KQHR,A)                                            
*                                                                               
* KEEP RECORDS THAT HAVE BOTH HUTS/PUTS AND TSA HUTS/PUTS. ALSO KEEP            
* HUT/PUT RECORDS WITHOUT ANY TSA HUTS/PUTS. THIS COVERS THE SCENARIO           
* WHERE THERE IS NO TSA DATA (EX: LIVE+SD)                                      
*                                                                               
 JOIN UNPAIRED,F1                                                               
*                                                                               
* ADD THE TSA IMPRESSIONS TO THE HUT/PUT RECORDS.                               
* NOTE: SEE FIELD W_UERMKTC BELOW.  I NEEDED A 3-CHARACTER BLANK                
* AND SINCE THE REFORMAT STATEMENT DOES NOT ALLOW STRINGS,                      
* I DECIDED TO USE A RANDOM FIELD THAT IS KNOWN TO HAVE BLANKS.                 
*                                                                               
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                     W_HPTREC,                                                  
                  F2:W_STRREC,                                                  
                  F1:W_MISC),FILL=X'00'                                         
*                                                                               
*                                                                               
./ ADD NAME=FTSRCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(FTSR)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* FORCE THE SORT ORDER BY THE WEEK OF FIRST OCCURRENCE                          
 INREC IFTHEN=(WHEN=(W_KAWK1,EQ,C'1'),OVERLAY=(W_KWEEK:C'1')),                  
       IFTHEN=(WHEN=(W_KAWK2,EQ,C'2'),OVERLAY=(W_KWEEK:C'2')),                  
       IFTHEN=(WHEN=(W_KAWK3,EQ,C'3'),OVERLAY=(W_KWEEK:C'3')),                  
       IFTHEN=(WHEN=(W_KAWK4,EQ,C'4'),OVERLAY=(W_KWEEK:C'4'))                   
*                                                                               
 SORT FIELDS=(W_KRPYR,A,                                                        
              W_KRPRD,A,                                                        
              W_KSPEXC,A,                                                       
              W_KSUBSI,A,                                                       
              W_KRSRVC,A,                                                       
              W_KMKTC,A,                                                        
              W_KPBACK,A,                                                       
              W_KDISC,A,                                                        
              W_KDAY,A,                                                         
              W_KQHR,A,                                                         
*                             *** W_KFILETYPE IS NOW "M" OR BLANK               
              W_KFILETYPE,D,  *** FORCE MONTHLY RECORDS AHEAD OF WEEKLY         
              W_KWEEK,A,                                                        
              W_RECTYPE,A,                                                      
              W_PNRPNAME,A,                                                     
              W_KSAMTY,A)                                                       
*                                                                               
 OUTREC IFTHEN=(WHEN=INIT,OVERLAY=(W_TPPAVFLG:TPREC)),                          
** IF IT IS NOT A MONTHLY RECORD, ASSUME IT IS WEEKLY...                        
   IFTHEN=(WHEN=(W_KFILETYPE,NE,W_KFILETYPE_MONTHLY),                           
                 OVERLAY=(W_KFILETYPE:W_KFILETYPE_WEEKLY),HIT=NEXT),            
** BUT IF THERE IS NO WEEK VALUE, THEN IT IS ACTUALLY A UNIVERSE RECORD         
   IFTHEN=(WHEN=(W_KWEEK,EQ,C' '),                                              
                 OVERLAY=(W_KFILETYPE:W_KFILETYPE_UNIVERSE),HIT=NEXT),          
   IFTHEN=(WHEN=(W_KDAY,EQ,MONDAY),OVERLAY=(W_KDAY_ALF:MON_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,TUESDAY),OVERLAY=(W_KDAY_ALF:TUE_ALF)),              
   IFTHEN=(WHEN=(W_KDAY,EQ,WEDNESDAY),OVERLAY=(W_KDAY_ALF:WED_ALF)),            
   IFTHEN=(WHEN=(W_KDAY,EQ,THURSDAY),OVERLAY=(W_KDAY_ALF:THU_ALF)),             
   IFTHEN=(WHEN=(W_KDAY,EQ,FRIDAY),OVERLAY=(W_KDAY_ALF:FRI_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,SATURDAY),OVERLAY=(W_KDAY_ALF:SAT_ALF)),             
   IFTHEN=(WHEN=(W_KDAY,EQ,SUNDAY),OVERLAY=(W_KDAY_ALF:SUN_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,MONDAY_FRIDAY),OVERLAY=(W_KDAY_ALF:MF_ALF))          
*                                                                               
*                                                                               
./ ADD NAME=NSRTCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(NSRT)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SUPPRESS SORTING BECAUSE RECORDS ARE ALREADY SORTED                           
 OPTION COPY                                                                    
*                                                                               
*                                                                               
./ ADD NAME=PROGCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PROG)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE ANYTHING THAT IS NOT TOTAL DMA (I.E. WIRED), AND ALL THE              
* STATIONS NOT REPORTABLE ON THE VIP (EX: CABLE STATIONS).                      
* EXCLUDE PROGRAM NAMES 'OFF AIR', "NOT AVAILABLE", ETC..                       
* NOTE: EFFECTIVE WITH THE JAN/2015 BOOK, FOR THE ETHNIC                        
*       SURVEYS, NIELSEN ALWAYS POPULATES THE "REPORTABILITY STATUS"            
*       FIELD IN THE "02" RECORD WITH C'M'. WE CAN THEREFORE NO LONGER          
*       USE THAT FIELD FOR THESE SURVEYS. INSTEAD, WE TREAT THE "02"            
*       RECORDS AS IF THE REPORTABLE STATUS IS "V" IF THE MARKET                
*       CODE IS EQUAL TO THE "MARKET OF ORIGIN" CODE (FOR ETHNIC                
*       SURVEYS).                                                               
*       A SIMILAR RULE APPLIES FOR THE SVIP SURVEYS STARTING JUL/2015.          
*                                                                               
 OMIT COND=(W_KSAMTY,NE,STYP_TDMA,OR,                                           
             ((W_KRPYR,LT,C'2015',AND,                                          
               W_DHRREPST,NE,REPORTAB_VIP),OR,                                  
              (W_KRPYR,GE,C'2015',AND,                                          
                ((W_KSUBSI,NE,C'Hisp ',AND,                                     
                  W_KSUBSI,NE,C'Af-Am',AND,                                     
                  W_MHQGEOI,NE,C'Special',AND,                                  
                  W_DHRREPST,NE,REPORTAB_VIP),OR,                               
                 (W_MHQGEOI,EQ,C'Special',AND,                                  
                  W_DHRMOOC,EQ,C'000'),OR,                                      
                 ((W_KSUBSI,EQ,C'Hisp ',OR,                                     
                   W_KSUBSI,EQ,C'Af-Am'),AND,                                   
                   W_DHRMKTC,NE,W_DHRMOOC)))),OR,                               
            W_PNRPNAME,EQ,PNAME_OFFAIR,OR,                                      
            W_PNRPNAME,EQ,PNAME_NOT_AVAILABLE,OR,                               
            W_PNRPNAME,EQ,PNAME_SLIDE,OR,                                       
            W_PNRPNAME,EQ,PNAME_TBA,OR,                                         
            W_PNRPNAME,EQ,PNAME_UNANNOUNCED,OR,                                 
            W_PNRPNAME,EQ,PNAME_VARIOUS,OR,                                     
            W_PNRPNAME,EQ,PNAME_FILLER,OR,                                      
            W_PNRPNAME,EQ,PNAME_NOTREG)                                         
*                                                                               
* SORT ON PROGRAM NAME/QUARTER HOUR.                                            
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_KQHR,A)                                 
                                                                                
* OUTPUT EXIT ASSIGNS A PROGRAM ID TO ALL THE TELECASTS OF A PROGRAM            
* THAT HAVE CONTIGUOUS OR OVERLAPPING QHS ACROSS ALL DAYS AND WEEKS.            
* A PROGRAM THAT CROSSES DAYS WILL BE SPLIT AT 5AM AND ASSIGNED A               
* SEPARATE PROGRAM ID STARTING WITH 5AM.                                        
*                                                                               
 MODS E35=(DELMXP1,5000)                                                        
*                                                                               
*                                                                               
./ ADD NAME=WKNDCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(WKND)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT ON PROGRAM NAME/PROGRAM ID/WEEKDAY/QUARTER HOUR                          
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,                              
              W_KDAY,A,W_KQHR,A)                                                
*                                                                               
* OUTPUT EXIT ASSIGNS SUB-PROGRAM IDS TO SECTIONS OF WEEKEND ONLY               
* PROGRAMS.                                                                     
* WEEKEND ONLY PROGRAMS WITH THE SAME PROGRAM ID SHOULD BE SPLIT INTO           
* DIFFERENT SUB-PROGRAMS FOR SATURDAY AND SUNDAY RESPECTIVELY.                  
* FURTHERMORE, IF THE TELECASTS FOR EITHER DAY ARE NOT CONTIGUOUS OR            
* OVERLAPPING, THEY WOULD BE FURTHER SPLIT INTO SUB-PROGRAMS.                   
*                                                                               
* WHILE GOING THROUGH THE TELECASTS, COLLECT INFORMATION TO DERIVE              
* THE "NORMAL" START AND END TIMES FOR PROGRAMS THAT QUALIFY.                   
*                                                                               
*&&3A                                                                           
 MODS E35=(DELMXP8,50000)                                                       
*&&                                                                             
*&!3A                                                                           
 MODS E35=(DELMXP2,50000)                                                       
*&!                                                                             
*                                                                               
* OUTPUT FILE FOR WORK RECORDS                                                  
 OUTFIL FNAMES=(TPPLCMBW),OMIT=(NOR_SIGNAL,EQ,C'** NOR **')                     
*                                                                               
* OUTPUT FILE FOR "NORMAL" RECORDS                                              
 OUTFIL FNAMES=(NORPROGS),INCLUDE=(NOR_SIGNAL,EQ,C'** NOR **')                  
*                                                                               
*                                                                               
./ ADD NAME=SREPCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(SREP)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT FILE TPPLCMBT ON PROGRAM/DAY.                                            
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,                 
              W_KDAY,A)                                                         
*                                                                               
* OUTPUT EXIT DETERMINES THE OVERALL "REPORT" START AND END TIMES FOR           
* EACH PROGRAM, AND WRITES THEM TO SEPARATE RECORDS.                            
* THE OVERALL "REPORT" START AND END TIMES ARE DERIVED FROM *ALL* THE           
* TELECASTS OF THE PROGRAM, AND ARE NOT SPECIFIC TO THE KIND OF                 
* AVERAGE BEING COMPUTED. (FOR EXAMPLE, AN INDIVIDUAL DAY AVERAGE FOR           
* MONDAY WILL *NOT* REFLECT ONLY THE MONDAY AIRINGS, BUT ALL THE                
* WEEKDAYS). THE SAME OVERALL "REPORT" START AND END TIMES APPLY TO ALL         
* THE AVERAGES OF THE SAME PROGRAM.                                             
*                                                                               
*&&3A                                                                           
 MODS E35=(DELMXP9,50000)                                                       
*&&                                                                             
*&!3A                                                                           
 MODS E35=(DELMXP3,50000)                                                       
*&!                                                                             
*                                                                               
* OUTPUT FILE FOR SORTED WORK RECORDS                                           
 OUTFIL FNAMES=(TPPLCMBS),OMIT=(REP_SIGNAL,EQ,C'** REPORT TIMES **')            
*                                                                               
* OUTPUT FILE FOR OVERALL "REPORT" TIMES RECORDS                                
 OUTFIL FNAMES=(REPTIMES),INCLUDE=(REP_SIGNAL,EQ,C'** REPORT TIMES **')         
*                                                                               
*                                                                               
./ ADD NAME=PDT1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PDT1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* OUTPUT EXIT DETERMINES WHEN AN "AS TELECAST" INDIVIDUAL DAY AVG               
* SHOULD BE COMPUTED AND COMPUTES THE AVERAGE.                                  
* IT RETURNS AN AVERAGE RECORD WITH ALL THE INFORMATION PERTAINING TO           
* TO THE AVERAGE, INCLUDING DETAILED "REPORT" START AND END TIMES,              
* DAY MAP, AND WEEK MAP.                                                        
* ALL RECORDS THAT GO INTO THE AVERAGE ARE DISCARDED.                           
*                                                                               
 MODS E35=(DELMXP4,50000)                                                       
*                                                                               
* SET RECORD TYPE TO: AS TELECAST                                               
 OUTFIL OVERLAY=(W_RECTYPE:RECTYPE_ASTCAST)                                     
*                                                                               
*                                                                               
./ ADD NAME=PDT2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PDT2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* JOIN THE FILE THAT HAS "M-F" AVERAGES (PAVMDTL1) WITH THE FILE THAT           
* HAS THE INDIVIDUAL DAY "AS TELECAST" AVERAGES (PAVDYTEL). PROGRAMS            
* THAT HAVE "M-F" AVERAGES WILL BE EXCLUDED FROM THE INDIVIDUAL DAY             
* "AS TELECAST" FILE. NOTE: EXCLUDE ONLY THE MON THRU FRI AIRINGS. THE          
* SATURDAY AND SUNDAY IND DAY TELECASTS SHOULD BE KEPT.                         
*                                                                               
* PAVMDTL1 IS MASSAGED TO INCLUDE ONLY THE "M-F" LINES. SEE T1F1CNTL.           
* PAVDYTEL IS MASSAGED TO IDENTIFY MON THRU FRI LINES. SEE T1F2CNTL.            
*                                                                               
 JOINKEYS F1=PAVMDTL1,TASKID=T1,                                                
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,             
                  W_KDAY,A)                                                     
 JOINKEYS F2=PAVDYTEL,TASKID=T1,                                                
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,             
                  W_DAY_MF,A)                                                   
*                                                                               
* KEEP ONLY THE ENTRIES IN PAVDYTEL THAT DO NOT HAVE A MATCH IN                 
* PAVMDTL1.                                                                     
 JOIN UNPAIRED,F2,ONLY                                                          
*                                                                               
*                                                                               
./ ADD NAME=PDN3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PDN3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* JOIN THE FILE THAT HAS "M-F" AVERAGES (PAVMDTL1) WITH THE FILE THAT           
* HAS THE INDIVIDUAL DAY "NORMAL" AVERAGES (PAVDYNOR). PROGRAMS THAT            
* HAVE "M-F" AVERAGES WILL BE EXCLUDED FROM THE INDIVIDUAL DAY "NORMAL"         
* AVERAGES. NOTE: EXCLUDE ONLY THE MON THRU FRI AIRINGS. THE SATURDAY           
* AND SUNDAY "NORMAL" LINES SHOULD BE KEPT.                                     
*                                                                               
* PAVMDTL1 IS MASSAGED TO INCLUDE ONLY THE "M-F" LINES. SEE T1F1CNTL.           
* PAVDYNOR IS MASSAGED TO IDENTIFY MON THRU FRI LINES. SEE T1F2CNTL.            
*                                                                               
 JOINKEYS F1=PAVMDTL1,TASKID=T1,                                                
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,             
                  W_KDAY,A)                                                     
 JOINKEYS F2=PAVDYNOR,TASKID=T1,                                                
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,             
                  W_DAY_MF,A)                                                   
*                                                                               
* KEEP ONLY THE ENTRIES FROM PAVDYNOR THAT DO NOT HAVE A MATCH IN               
* PAVMDTL1.                                                                     
 JOIN UNPAIRED,F2,ONLY                                                          
*                                                                               
*                                                                               
./ ADD NAME=T1F1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(T1F1)                                       *         
* PRE-PROCESSING OF FILE F1 BEFORE JOINKEYS FOR TASKID T1.            *         
*---------------------------------------------------------------------*         
*                                                                               
* INCLUDE ONLY THE "M-F" LINES.                                                 
 INCLUDE COND=(W_KDAY,EQ,MONDAY_FRIDAY)                                         
*                                                                               
./ ADD NAME=T1F2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(T1F2)                                       *         
* PRE-PROCESSING OF FILE F2 BEFORE JOINKEYS FOR TASKID T1.            *         
*---------------------------------------------------------------------*         
*                                                                               
* IDENTIFY WEEKDAYS (MON THROUGH FRI) WITH AN INDICATOR THAT WILL               
* MATCH THE "M-F" DAY CODE FROM FILE PAVMDTL1.                                  
*                                                                               
 INREC IFTHEN=(WHEN=INIT,OVERLAY=(W_DAY_MF:W_KDAY)),                            
       IFTHEN=(WHEN=(W_KDAY,EQ,MONDAY,OR,                                       
                     W_KDAY,EQ,TUESDAY,OR,                                      
                     W_KDAY,EQ,WEDNESDAY,OR,                                    
                     W_KDAY,EQ,THURSDAY,OR,                                     
                     W_KDAY,EQ,FRIDAY),                                         
               OVERLAY=(W_DAY_MF:MONDAY_FRIDAY))                                
*                                                                               
*                                                                               
./ ADD NAME=PMT1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMT1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* EXCLUDE SATURDAY AND SUNDAY.                                                  
 OMIT COND=(W_KDAY,EQ,SATURDAY,OR,W_KDAY,EQ,SUNDAY)                             
*                                                                               
* SIGNAL TO EXIT TO EXCLUDE WEEKENDS                                            
 INREC OVERLAY(W_WEEKEND_AVG:W_WKND_EXCL)                                       
*                                                                               
* OUTPUT EXIT DETERMINES WHEN AN "AS TELECAST" MULTI-DAY AVERAGE                
* SHOULD BE COMPUTED, COMPUTES THE AVERAGE, AND RETURNS A RECORD WITH           
* ALL THE INFORMATION PERTAINING TO TO THE AVERAGE. ALL RECORDS THAT            
* GO INTO THE AVERAGE ARE DISCARDED.                                            
*                                                                               
*&&3A                                                                           
 MODS E35=(DELMXPA,50000)                                                       
*&&                                                                             
*&!3A                                                                           
 MODS E35=(DELMXP6,50000)                                                       
*&!                                                                             
*                                                                               
* SET RECORD TYPE TO: "AS TELECAST"                                             
 OUTFIL OVERLAY=(W_RECTYPE:RECTYPE_ASTCAST)                                     
*                                                                               
*                                                                               
./ ADD NAME=PMT2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMT2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SIGNAL TO EXIT TO INCLUDE WEEKENDS                                            
 INREC OVERLAY(W_WEEKEND_AVG:W_WKND_INCL)                                       
*                                                                               
* OUTPUT EXIT DETERMINES WHEN AN "AS TELECAST" MULTI-DAY AVERAGE                
* SHOULD BE COMPUTED, COMPUTES THE AVERAGE, AND RETURNS A RECORD WITH           
* ALL THE INFORMATION PERTAINING TO THE AVERAGE. ALL RECORDS THAT GO            
* INTO THE AVERAGE ARE DISCARDED.                                               
*                                                                               
*&&3A                                                                           
 MODS E35=(DELMXPA,50000)                                                       
*&&                                                                             
*&!3A                                                                           
 MODS E35=(DELMXP6,50000)                                                       
*&!                                                                             
*                                                                               
* SET RECORD TYPE TO: AS TELECAST                                               
 OUTFIL OVERLAY=(W_RECTYPE:RECTYPE_ASTCAST)                                     
*                                                                               
*                                                                               
./ ADD NAME=PDN1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PDN1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* JOIN THE QUARTER HOUR DATA WITH THE FILE OF "NORMAL" START/EMD TIMES.         
* THIS IS AN INNER JOIN. THROW AWAY THE QUARTER HOUR DATA FOR PROGRAMS          
* THAT DO NOT HAVE A "NORMAL" START/END TIME.                                   
* IF MULTIPLE STREAMS ARE BEING PROCESSED, EACH OF THEM WILL BE MATCHED         
* WITH THE "NORMAL" START/END TIMES.                                            
*                                                                               
 JOINKEYS F1=TPPLCMBS,SORTED,                                                   
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=NORPROGS,                                                          
          FIELDS=(NOR_KDTYPE,A,NOR_PNAME,A,NOR_PGID,A,NOR_SPGID,A)              
 REFORMAT FIELDS=(F1:W_RECDATA,                                                 
                  F2:NOR_SQH,F2:NOR_EQH,F2:NOR_STIME,                           
                  F2:NOR_ETIME)                                                 
*                                                                               
* DETERMINE IF THE CURRENT QUARTER HOUR HALLS BETWEEN THE "NORMAL"              
* START AND END TIME, AND SET A FLAG ACCORDINGLY.                               
*                                                                               
 OUTREC IFTHEN=(WHEN=(W_KQHR,LT,W_NORSQH,OR,W_KQHR,GT,W_NOREQH),                
                OVERLAY=(W_NORINCL:W_NORINCNQ)),                                
        IFTHEN=(WHEN=NONE,                                                      
                OVERLAY=(W_NORINCL:W_NORINCYQ))                                 
*                                                                               
*                                                                               
./ ADD NAME=PDN2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PDN2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT ON PROGRAM/DAY/"NORMAL" SQH/"NORMAL" EQH/"NORMAL" INCLUDE FLAG           
* QUARTER HOURS THAT ARE WITHIN THE "NORMAL" START/END TIME GET SORTED          
* BEFORE THE QUARTER HOURS THAT ARE OUTSIDE THE "NORMAL" BOUNDARIES.            
*                                                                               
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,                 
              W_KDAY,A,W_NORSQH,A,W_NOREQH,A,W_NORINCL,A)                       
*                                                                               
* OUTPUT EXIT KEEPS ONLY THE PROGRAMS/DAYS THAT HAVE QUARTER HOURS              
* BOTH INSIDE AND OUTSIDE THE NORMAL BOUNDARIES, AND IT AVERAGES THEM           
* TO CREATE THE INDIVIDUAL DAY "NORMAL" AVERAGES.                               
*                                                                               
 MODS E35=(DELMXP5,50000)                                                       
*                                                                               
* SET RECORD TYPE TO: "NORMAL"                                                  
 OUTFIL OVERLAY=(W_RECTYPE:RECTYPE_NOR)                                         
*                                                                               
*                                                                               
./ ADD NAME=PMN1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* THIS IS AN INNER JOIN.                                                        
* THROW AWAY PROGRAMS THAT HAVE MULTI-DAY "AS TELECAST" AVERAGES, BUT           
* NO "NORMAL".                                                                  
* THROW AWAY PROGRAMS THAT HAVE "NORMAL" BUT NO MULTI-DAY "AS TELECAST"         
* AVERAGES.                                                                     
* IF A PROGRAM HAS MORE THAN ONE MULTI-DAY "AS TELECAST" AVERAGE, EACH          
* OF THEM WILL BE KEPT AND MATCHED WITH THE RESPECTIVE "NORMAL".                
*                                                                               
 JOINKEYS F1=PAVMDTL1,                                                          
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=NORPROGS,                                                          
          FIELDS=(NOR_KDTYPE,A,NOR_PNAME,A,NOR_PGID,A,NOR_SPGID,A)              
 REFORMAT FIELDS=(F2:NOR_INFO,F1:W_KDAY_ALF)                                    
*                                                                               
*                                                                               
./ ADD NAME=PMN2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* THIS IS AN INNER JOIN.                                                        
* THROW AWAY THE QH RECORDS FOR THE PROGRAMS THAT DO NOT HAVE A                 
* "NORMAL" AND A MULTI-DAY AVERAGE.                                             
* IF THERE ARE STATIONS OR PROGRAMS THAT HAVE "NORMALS" AND MULTI-DAY           
* AVERAGES, BUT NO QH RECORDS, THEY WILL BE THROWN AWAY.                        
* IF MULTIPLE STREAMS ARE BEING PROCESSED, EACH OF THEM WILL BE MATCHED         
* WITH THE "NORMAL"/MULTI-DAY LINES.                                            
*                                                                               
* DATA IN TPPLCMBS IS MASSAGED TO EXCLUDE SATURDAY AND SUNDAY.                  
* SEE T2F1CNTL.                                                                 
*                                                                               
 JOINKEYS F1=TPPLCMBS,SORTED,TASKID=T2,                                         
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=PAVWRK2,                                                           
          FIELDS=(NOR_KDTYPE,A,NOR_PNAME,A,NOR_PGID,A,NOR_SPGID,A)              
 REFORMAT FIELDS=(F1:W_RECDATA,                                                 
                  F2:NOR_SQH,F2:NOR_EQH,F2:NOR_STIME,                           
                  F2:NOR_ETIME,F2:NOR_AV_ALF)                                   
*                                                                               
* DETERMINE IF THE CURRENT QUARTER HOUR HALLS BETWEEN THE "NORMAL"              
* START AND END TIME, AND SET A FLAG ACCORDINGLY.                               
*                                                                               
 OUTREC IFTHEN=(WHEN=(W_KQHR,LT,W_NORSQH,OR,W_KQHR,GT,W_NOREQH),                
                OVERLAY=(W_NORINCL:W_NORINCNQ)),                                
        IFTHEN=(WHEN=NONE,                                                      
                OVERLAY=(W_NORINCL:W_NORINCYQ))                                 
*                                                                               
*                                                                               
./ ADD NAME=PMN3CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN3)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT ON PROGRAM /"NORMAL" START QH /"NORMAL" END QH/                          
* "NORMAL" INCLUDE FLAG/ WEEKDAY                                                
*                                                                               
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,                 
              W_NORSQH,A,W_NOREQH,A,W_NORINCL,A,W_KDAY,A)                       
*                                                                               
* SIGNAL TO EXIT TO EXCLUDE WEEKENDS                                            
 INREC OVERLAY(W_WEEKEND_AVG:W_WKND_EXCL)                                       
*                                                                               
* OUTPUT EXIT KEEPS ONLY THE PROGRAMS THAT HAVE AT LEAST 1 QH OUTSIDE           
* THE "NORMAL" BOUNDARIES, AND AT LEAST 2 WEEKDAYS WITH QHS INSIDE THE          
* BOUNDARIES. IT AVERAGES TOGETHER THE QHS INSIDE THE BOUNDARIES TO             
* CREATE THE MULTI-DAY "NORMAL" AVERAGES EXCLUDING WEEKENDS.                    
*                                                                               
 MODS E35=(DELMXP7,50000)                                                       
*                                                                               
* SET RECORD TYPE TO: "NORMAL"                                                  
* DAY CODE IS: 'AV EXCLUDING WEEKENDS', UNLESS IT IS 'M-F'                      
 OUTFIL IFTHEN=(WHEN=INIT,                                                      
                OVERLAY=(W_RECTYPE:RECTYPE_NOR,                                 
                         W_KDAY:AV_EXCL_WKND)),                                 
        IFTHEN=(WHEN=(W_KDAY_ALF,EQ,MF_ALF),                                    
                OVERLAY=(W_KDAY:MONDAY_FRIDAY))                                 
*                                                                               
*                                                                               
./ ADD NAME=PMN4CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN4)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* THIS IS AN INNER JOIN.                                                        
* THROW AWAY PROGRAMS THAT HAVE MULTI-DAY AS TELECAST AVERAGES, BUT             
*  NO NORMAL.                                                                   
* THROW AWAY PROGRAMS THAT HAVE NORMAL BUT NO MULTI-DAY AS TELECAST             
*  AVERAGES.                                                                    
* IF A PROGRAM HAS MORE THAN ONE MULTI-DAY AS TELECAST AVERAGE, EACH            
*  OF THEM WILL BE KEPT AND MATCHED WITH THE RESPECTIVE NORMAL.                 
*                                                                               
 JOINKEYS F1=PAVMDTL2,                                                          
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=NORPROGS,                                                          
          FIELDS=(NOR_KDTYPE,A,NOR_PNAME,A,NOR_PGID,A,NOR_SPGID,A)              
 REFORMAT FIELDS=(F2:NOR_INFO,F1:W_KDAY_ALF)                                    
*                                                                               
*                                                                               
./ ADD NAME=PMN5CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN5)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* THIS IS AN INNER JOIN.                                                        
* THROW AWAY THE QH RECORDS FOR THE PROGRAMS THAT DO NOT HAVE A                 
*  NORMAL AND A MULTI-DAY AVERAGE.                                              
* IF THERE ARE STATIONS OR PROGRAMS THAT HAVE NORMALS AND MULTI-DAY             
*  AVERAGES, BUT NO QH RECORDS, THEY WILL BE THROWN AWAY.                       
* IF MULTIPLE STREAMS ARE BEING PROCESSED, EACH OF THEM WILL BE MATCHED         
*  WITH THE NORMAL/MULTI-DAY AVERAGE LINES.                                     
*                                                                               
 JOINKEYS F1=TPPLCMBS,SORTED,                                                   
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=PAVWRK4,                                                           
          FIELDS=(NOR_KDTYPE,A,NOR_PNAME,A,NOR_PGID,A,NOR_SPGID,A)              
 REFORMAT FIELDS=(F1:W_RECDATA,                                                 
                  F2:NOR_SQH,F2:NOR_EQH,F2:NOR_STIME,                           
                  F2:NOR_ETIME,F2:NOR_AV_ALF)                                   
*                                                                               
* DETERMINE IF THE CURRENT QUARTER HOUR HALLS BETWEEN THE "NORMAL"              
* START AND END TIME, AND SET A FLAG ACCORDINGLY.                               
*                                                                               
 OUTREC IFTHEN=(WHEN=(W_KQHR,LT,W_NORSQH,OR,W_KQHR,GT,W_NOREQH),                
                OVERLAY=(W_NORINCL:W_NORINCNQ)),                                
        IFTHEN=(WHEN=NONE,                                                      
                OVERLAY=(W_NORINCL:W_NORINCYQ))                                 
*                                                                               
*                                                                               
./ ADD NAME=PMN6CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PMN6)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* SORT ON PROGRAM(INCLUDING PROGRAM ID) / NOR SQH /NOR EQH/                     
* NOR INCLUDE FLAG/ WEEKDAY                                                     
*                                                                               
 SORT FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A,                 
              W_NORSQH,A,W_NOREQH,A,W_NORINCL,A,W_KDAY,A)                       
*                                                                               
* SIGNAL TO EXIT TO INCLUDE WEEKENDS                                            
 INREC OVERLAY(W_WEEKEND_AVG:W_WKND_INCL)                                       
*                                                                               
* OUTPUT EXIT KEEPS ONLY THE PROGRAMS THAT HAVE AT LEAST 1 QH OUTSIDE           
* THE NORMAL BOUNDARIES, AND AT LEAST 2 WEEKDAYS AND 1 WEEKEND DAY WITH         
* QHS INSIDE THE BOUNDARIES. IT AVERAGES TOGETHER THE QHS INSIDE THE            
* BOUNDARIES TO CREATE MULTI-DAY NORMAL AVERAGES INCLUDING WEEKENDS.            
*                                                                               
 MODS E35=(DELMXP7,50000)                                                       
*                                                                               
* SET DAY TO: INCLUDE WEEKENDS                                                  
* SET RECORD TYPE TO: NORMAL                                                    
 OUTFIL OVERLAY=(W_RECTYPE:RECTYPE_NOR,                                         
                 W_KDAY:AV_INCL_WKND)                                           
*                                                                               
*                                                                               
./ ADD NAME=T2F1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(T2F1)                                       *         
* PRE-PROCESSING OF FILE F1 BEFORE JOINKEYS FOR TASKID T2.            *         
*---------------------------------------------------------------------*         
*                                                                               
* INCLUDE ONLY THE WEEKDAY LINES.                                               
 OMIT COND=(W_KDAY,EQ,SATURDAY,OR,W_KDAY,EQ,SUNDAY)                             
*                                                                               
*                                                                               
./ ADD NAME=REPTCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(REPT)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* JOIN THE PAV AVERAGE RECORDS WITH THE OVERALL "REPORT" TIMES RECORDS.         
*                                                                               
 JOINKEYS F1=PAVALL,                                                            
          FIELDS=(W_KDTYPE,A,W_PNRPNAME,A,W_PNRPGID,A,W_PNRSPGID,A)             
 JOINKEYS F2=REPTIMES,                                                          
          FIELDS=(REP_KDTYPE,A,REP_PNAME,A,REP_PGID,A,REP_SPGID,A)              
*                                                                               
* NOTE: I DECIDED TO KEEP THE "NORMAL" INFORMATION ON THE FINAL WORK            
* RECORDS BECAUSE IT IS USEFUL DURING DEBUGGING. THE OVERALL "REPORT"           
* TIMES INFORMATION FOLLOWS THE "NORMAL" INFORMATION.                           
 REFORMAT FIELDS=(F1:W_RECNOR,                                                  
                  F2:REP_SQH,F2:REP_EQH,F2:REP_STIME,F2:REP_ETIME)              
*                                                                               
* OVERLAY THE START/END TIMES WITH THE OVERALL "REPORT" START/END TIMES         
 OUTREC OVERLAY=(W_PNRSQH:W_REPSQH,                                             
                 W_PNREQH:W_REPEQH,                                             
                 W_PNRSTIME:W_REPSTIME,                                         
                 W_PNRETIME:W_REPETIME)                                         
*                                                                               
*                                                                               
./ ADD NAME=PUNVCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(PUNV)                                       *         
*---------------------------------------------------------------------*         
* DATA IN UEROUT IS MASSAGED TO EXCLUDE WIRED UNIVERSES.                        
* WE NEED THE DMA UNIVERSES SLOTTED ON ALL RECORDS, INCLUDING WIRED             
* DATA.                                                                         
*                                                                               
 JOINKEYS F1=PAVAVG,                                                            
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
 JOINKEYS F2=UEROUT,TASKID=T3,                                                  
          SORTED,                                                               
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSUBSI,A)                                        
                                                                                
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                  F2:W_UERREC,                                                  
                  F1:W_HPTREC,                                                  
                     W_HPSREC,                                                  
                     W_MISC)                                                    
*                                                                               
*                                                                               
./ ADD NAME=FPSRCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(FPSR)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* MAKE SURE UNIVERSE RECORD SORTS BEFORE THE PAV AVERAGES. SET THE QH           
* TO 0 ON THE UNIVERSE RECORDS. THIS IN COMBINATION WITH THE BLANK              
* STATION FIELD WILL CAUSE THE UNIVERSE TO SORT BEFORE THE PAV AVERGES.         
*                                                                               
 INREC IFTHEN=(WHEN=(W_RECTYPE,EQ,RECTYPE_UER),                                 
               OVERLAY=(W_PNRSQH:X'00'))                                        
*                                                                               
* SORT BY QUARTER HOUR (WITHIN BOOK, MARKET, ETC...)                            
*                                                                               
 SORT FIELDS=(W_KRPYR,A,                                                        
              W_KRPRD,A,                                                        
              W_KSPEXC,A,                                                       
              W_KSUBSI,A,                                                       
              W_KRSRVC,A,                                                       
              W_KMKTC,A,                                                        
              W_KPBACK,A,                                                       
              W_PNRSQH,A,                                                       
              W_KOCALL,A,                                                       
              W_KDAY,A,                                                         
              W_PNRPNAME,A,                                                     
              W_RECTYPE,A)                                                      
*                                                                               
* ADD THE PAV FLAG AND ALPHA DAY DESCRIPTION TO EVERY AVERAGE                   
*                                                                               
 OUTREC IFTHEN=(WHEN=INIT,OVERLAY=(W_TPPAVFLG:PAVREC)),                         
   IFTHEN=(WHEN=(W_KDAY,EQ,MONDAY),OVERLAY=(W_KDAY_ALF:MON_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,TUESDAY),OVERLAY=(W_KDAY_ALF:TUE_ALF)),              
   IFTHEN=(WHEN=(W_KDAY,EQ,WEDNESDAY),OVERLAY=(W_KDAY_ALF:WED_ALF)),            
   IFTHEN=(WHEN=(W_KDAY,EQ,THURSDAY),OVERLAY=(W_KDAY_ALF:THU_ALF)),             
   IFTHEN=(WHEN=(W_KDAY,EQ,FRIDAY),OVERLAY=(W_KDAY_ALF:FRI_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,SATURDAY),OVERLAY=(W_KDAY_ALF:SAT_ALF)),             
   IFTHEN=(WHEN=(W_KDAY,EQ,SUNDAY),OVERLAY=(W_KDAY_ALF:SUN_ALF)),               
   IFTHEN=(WHEN=(W_KDAY,EQ,MONDAY_FRIDAY),OVERLAY=(W_KDAY_ALF:MF_ALF))          
*                                                                               
*                                                                               
./ ADD NAME=JNF1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(JNF1)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
*                                                                               
./ ADD NAME=JNF2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(JNF2)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
*                                                                               
./ ADD NAME=WRK1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(WRK1)                                       *         
*---------------------------------------------------------------------*         
* NOTE: THIS IS NEEDED BY A COUNT OPERATOR WHICH IS INVOKED WITHIN              
*       DELMCALC VIA THE PARAMETER LIST INTERFACE.                              
*                                                                               
* COUNT ONLY THE 'BEGIN MARKET' STATEMENTS, SO WE KNOW THE TOTAL NUMBER         
* OF MARKETS BEING PROCESSED BY THIS INVOCATION OF DELMCALC.                    
*                                                                               
 INCLUDE COND=(PNA_HEADER_EYEC,EQ,C'BEGIN MARKET: ')                            
*                                                                               
*                                                                               
./ ADD NAME=WRK2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(WRK2)                                       *         
*---------------------------------------------------------------------*         
* NOTE: THIS IS NEEDED BY A COUNT OPERATOR WHICH IS INVOKED WITHIN              
*       DELMCALC VIA THE PARAMETER LIST INTERFACE.                              
*                                                                               
* COUNT ONLY THE NIELSEN INPUT FILE HEADER AND FOOTER RECORDS. THIS             
* WILL BE USED TO CONFIRM THAT BOTH ARE PRESENT. IF THEY ARE NOT, THEN          
* THE INPUT FILE IS CORRUPT!                                                    
*                                                                               
 INCLUDE COND=(REC_CODE,EQ,C'01',OR,                                            
               REC_CODE,EQ,C'11',OR,                                            
               REC_CODE,EQ,C'21',OR,                                            
               REC_CODE,EQ,C'99')                                               
*                                                                               
*                                                                               
./ ADD NAME=JON9CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR (JON9)                                                      
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=TPALLAV2,TASKID=J9,                                                
                      FIELDS=(W_KPBACK,A,W_KQHR,A,W_KDAYMAP,A)                  
 JOINKEYS F2=HPTOUT,TASKID=J9,                                                  
                      FIELDS=(W_KPBACK,A,W_KQHR,A,W_KDAYMAP,A)                  
 JOIN UNPAIRED,F1                                                               
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                  F2:W_HPTREC,                                                  
                  F1:W_HPSREC,                                                  
                     W_RECTYPE,                                                 
                     W_PNAMEBK,                                                 
                     W_TPPAVFLG,                                                
                     W_PREVIEW,                                                 
                     W_SPARE,                                                   
                  ?)                   *** W_JOIN_INDICATOR                     
*                                                                               
*                                                                               
./ ADD NAME=J9F1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR (J9F1)                                                      
*---------------------------------------------------------------------*         
*                                                                               
 INCLUDE COND=(((W_KAWKS,EQ,C'1   '),OR,     WEEK 1                             
                (W_KAWKS,EQ,C' 2  '),OR,     WEEK 2                             
                (W_KAWKS,EQ,C'  3 '),OR,     WEEK 3                             
                (W_KAWKS,EQ,C'   4')),AND,   WEEK 4                             
                (W_KDAY,NE,MONDAY_FRIDAY),AND,   NOT M-F                        
                (W_KDAY,NE,AV_EXCL_WKND),AND,    NOT AV5                        
                (W_KDAY,NE,AV_INCL_WKND))        NOT AV7                        
*                                                                               
*                                                                               
./ ADD NAME=J9F2CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR (J9F2)                                                      
*---------------------------------------------------------------------*         
*                                                                               
   OMIT COND=(W_KSAMTY,EQ,STYP_WIRED)                                           
*                                                                               
*                                                                               
./ ADD NAME=JONWCNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR (JONW)                                            *         
* (CLONED FROM JON9CNTL FOR TRUE WEEKLY AVERAGES)                     *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=TWALLAV2,TASKID=J9,                                                
                      FIELDS=(W_KPBACK,A,W_KQHR,A,W_KDAYMAP,A)                  
 JOINKEYS F2=HPTOUT,TASKID=J9,                                                  
                      FIELDS=(W_KPBACK,A,W_KQHR,A,W_KDAYMAP,A)                  
 JOIN UNPAIRED,F1                                                               
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                  F2:W_HPTREC,                                                  
                  F1:W_HPSREC,                                                  
                     W_RECTYPE,                                                 
                     W_PNAMEBK,                                                 
                     W_TPPAVFLG,                                                
                     W_PREVIEW,                                                 
                     W_SPARE,                                                   
                  ?)                   *** W_JOIN_INDICATOR                     
*                                                                               
*                                                                               
./ ADD NAME=THW6CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(THW6)                                       *         
* (CLONED FROM THW5CNTL FOR TRUE WEEKLY AVERAGES)                     *         
*---------------------------------------------------------------------*         
*                                                                               
 JOINKEYS F1=TWWORK9,                                                           
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                             
                  W_KDAY,A,W_KQHR,A)                                            
 JOINKEYS F2=TPWORK12,                                                          
          FIELDS=(W_KRSRVC,A,W_KMKTC,A,W_KRPRD,A,W_KRPYR,A,W_KSPEXC,A,          
                  W_KPBACK,A,W_KSAMTY,A,W_KSUBSI,A,                             
                  W_KDAY,A,W_KQHR,A)                                            
*                                                                               
* KEEP RECORDS THAT HAVE BOTH HUTS/PUTS AND TSA HUTS/PUTS. ALSO KEEP            
* HUT/PUT RECORDS WITHOUT ANY TSA HUTS/PUTS. THIS COVERS THE SCENARIO           
* WHERE THERE IS NO TSA DATA (EX: LIVE+SD)                                      
*                                                                               
 JOIN UNPAIRED,F1                                                               
*                                                                               
* ADD THE TSA IMPRESSIONS TO THE HUT/PUT RECORDS.                               
* NOTE: SEE FIELD W_UERMKTC BELOW.  I NEEDED A 3-CHARACTER BLANK                
* AND SINCE THE REFORMAT STATEMENT DOES NOT ALLOW STRINGS,                      
* I DECIDED TO USE A RANDOM FIELD THAT IS KNOWN TO HAVE BLANKS.                 
*                                                                               
 REFORMAT FIELDS=(F1:W_KAREA,                                                   
                     W_MHQREC,                                                  
                     W_DHRREC,                                                  
                     W_PNRAREA,                                                 
                     W_QDRREC,                                                  
                     W_STRREC,                                                  
                     W_UERREC,                                                  
                     W_HPTREC,                                                  
                  F2:W_STRREC,                                                  
                  F1:W_MISC),FILL=X'00'                                         
*                                                                               
*                                                                               
./ ADD NAME=JONACNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR USING(JONA)                                       *         
*---------------------------------------------------------------------*         
*                                                                               
* JOIN THE MONTHLY TIME PERIOD AVERAGE FILE WITH THE HUT/PUT AVERAGE            
* FILE. WE DO THIS TO TAG THE "ALL-WEEK" MONTHLY AVERAGE RECORDS. THAT          
* INFORMATION IS NEEDED IN THE CONVERSION. (NOTE THAT "ALL WEEKS" IS            
* NOT NECESSARILY THE SAME AS "4 WEEKS", BECAUSE SOME WEEKS MAY HAVE            
* BEEN EXCLUDED DUE TO A STORM, ETC.)                                           
*                                                                               
 JOINKEYS F1=TPALLAV3,                                                          
             FIELDS=(W_KRSRVC,A,                                                
                     W_KMKTC,A,                                                 
                     W_KRPRD,A,                                                 
                     W_KRPYR,A,                                                 
                     W_KSPEXC,A,                                                
                     W_KPBACK,A,                                                
                     W_KSAMTY,A,                                                
                     W_KSUBSI,A,                                                
                     W_KDAY,A,                                                  
                     W_KQHR,A,                                                  
                     W_KAWKS,A)        *** LOOK FOR "ALL-WEEK"                  
 JOINKEYS F2=TPHUTAVG,                                                          
             FIELDS=(W_KRSRVC,A,                                                
                     W_KMKTC,A,                                                 
                     W_KRPRD,A,                                                 
                     W_KRPYR,A,                                                 
                     W_KSPEXC,A,                                                
                     W_KPBACK,A,                                                
                     W_KSAMTY,A,                                                
                     W_KSUBSI,A,                                                
                     W_KDAY,A,                                                  
                     W_KQHR,A,                                                  
                     W_KAWKS,A)                                                 
*                                                                               
 JOIN UNPAIRED,F1                                                               
*                                                                               
* W_JOIN_INDICATOR WILL BE SET TO "B" IF A MONTHLY AVERAGE IS FOR               
* ALL WEEKS.                                                                    
 REFORMAT FIELDS=(F1:W_REC_WITHOUT_JOIN_INDICATOR,                              
                  ?)                   *** W_JOIN_INDICATOR                     
*                                                                               
 OUTREC OVERLAY=(W_KFILETYPE:W_KFILETYPE_MONTHLY)                               
*                                                                               
*                                                                               
./ ADD NAME=COP1CNTL                                                            
*---------------------------------------------------------------------*         
* CONTROL CARDS FOR (COP1)                                                      
*---------------------------------------------------------------------*         
*                                                                               
 OMIT COND=(((W_KAWKS,EQ,C'1   '),OR,     WEEK 1                                
             (W_KAWKS,EQ,C' 2  '),OR,     WEEK 2                                
             (W_KAWKS,EQ,C'  3 '),OR,     WEEK 3                                
             (W_KAWKS,EQ,C'   4')),AND,   WEEK 4                                
             (W_KDAY,NE,MONDAY_FRIDAY),AND,   NOT M-F                           
             (W_KDAY,NE,AV_EXCL_WKND),AND,    NOT AV5                           
             (W_KDAY,NE,AV_INCL_WKND))        NOT AV7                           
*                                                                               
*                                                                               
./ ADD NAME=SYMNAMES                                                            
***********************************************************************         
*              SYMBOLICS USED IN CONTROL CARDS                        *         
***********************************************************************         
*                                                                               
PNAME_WK4AVG,C'4 WK AVG       '                                                 
PNAME_AVGALLW,C'AVG. ALL WKS   '                                                
PNAME_NOT_AVAILABLE,C'NOT AVAILABLE '                                           
PNAME_OFFAIR,C'OFF AIR       '                                                  
PNAME_SLIDE,C'SLIDE         '                                                   
PNAME_TBA,C'TBA           '                                                     
PNAME_UNANNOUNCED,C'UNANNOUNCED   '                                             
PNAME_VARIOUS,C'VARIOUS       '                                                 
PNAME_FILLER,C'FILLER        '                                                  
PNAME_NOTREG,C'NOT REG. SCHED'                                                  
PNAME_BLANKS,C'              '                                                  
BLANK,C' '                                                                      
*               Market Header Record                                            
*                                                                               
MHQREC,5,123,CH                                                                 
MHQCODE,5,2,CH          009-Record Code                                         
MHQFMTV,*,4,CH          011-Format Version                                      
MHQMKTC,*,3,CH          015-Market Code                                         
MHQDMAC,*,3,CH          018-DMA Code                                            
MHQMRNK,*,3,CH          021-Market Rank                                         
MHQGEOI,*,7,CH          024-Geography Indicator                                 
MHQGEONM,*,26,CH        031-Geography Name                                      
MHQSDT,*,18,CH          057-Start Date Time Of Survey                           
MHQEDT,*,18,CH          075-End Date Time Of Survey                             
MHQNDAYS,*,3,CH         093-Number Of Days In Survey                            
MHQNWKS,*,2,CH          096-Number Of Weeks In Survey                           
MHQRDST,*,7,CH          098-Reporting Day Start Time                            
MHQRSRVC,*,1,CH         105-Reporting Service                                   
MHQSPEXC,*,2,CH         106-Special Report Exclusion Indicator                  
MHQSUBSI,*,5,CH         108-SubSample Indicator                                 
MHQHEASI,*,1,CH         113-Header Sample Type                                  
MHQREPRO,*,1,CH         114-Reprocessed                                         
MHQDACCR,*,1,CH         115-Data Accredited                                     
MHQPBACK,*,1,CH         116-Playback Type                                       
MHQINTRV,*,2,CH         117-Time Interval                                       
MHQCMETH,*,2,CH         119-Collection Method                                   
MHQCTIND,*,1,CH         120-Contest Indicator                                   
MHQRPRD,*,2,CH          121-Report Period                                       
MHQRYEAR,*,4,CH         123-Report Year                                         
MHQMKTZ,*,2,CH          127-Market Time Zone                                    
MHQMKCLS,*,1,CH         129-Market Class Code                                   
MHQDMEXC,*,1,CH         130-Distributor, Market or Mobile Exclusion             
*                            Indicator                                          
MHQDSAVE,*,1,CH         131-Daylight Saving Time Indicator                      
*               Distributor Header Record                                       
*                                                                               
DHRREC,5,132,CH                                                                 
DHRCODE,5,2,CH          009-Record Code                                         
DHRMKTC,*,3,CH          011-Market Code                                         
DHRRSRVC,*,1,CH         014-Reporting Service                                   
DHRSDT,*,18,CH          015-Start DateTime Of Survey                            
DHREDT,*,18,CH          033-End DateTimeOf Survey                               
DHRMOOC,*,3,CH          051-Market of Origin Code                               
DHRDISC,*,4,BI          054-Distributor Code                                    
DHRCALL,*,12,CH         058-Call Letters                                        
DHROCALL,*,4,CH         070-Legacy Call Letters                                 
DHRPPLUS,*,1,CH         074-Parent Plus Indicator                               
DHRCLONG,*,25,CH        075-Cable Long Name                                     
DHRBCHAN,*,7,CH         100-Broadcast Channel Number                            
DHRDSRC,*,1,CH          107-Distribution Source Type                            
DHRAFFL1,*,7,CH         108-Primary Affiliation                                 
DHRAFFL2,*,7,CH         115-Secondary Affiliation                               
DHRAFFL3,*,7,CH         122-Tertiary Affiliation                                
DHRDGRP,*,5,CH          129-Distributor Group                                   
DHRPRNT,*,1,CH          134-Parent Indicator                                    
DHRSATL,*,1,CH          135-Satellite Indicator                                 
DHRSTOT,*,1,CH          136-Station Totals Indicator                            
DHRSTYPE,*,1,CH         137-Station Type Code                                   
DHRAEIND,*,1,CH         138-Audience Estimates Indicator                        
DHRREPST,*,1,CH         139-Reportablility Status                               
DHRPNIND,*,1,CH         140-Program Names Indicator                             
*               Demographic Header Record                                       
*                                                                               
DMRREC,5,332,CH                                                                 
DMRCODE,5,2,CH          009-Record Code                                         
DMRHHLDS,*,15,CH        011-Households                                          
DMRCH25,*,15,CH         026-Demographic Dem #1                                  
DMRCH611,*,15,CH        041-Demographic Dem #2                                  
DMRM1214,*,15,CH        056-Demographic Dem #3                                  
DMRM1517,*,15,CH        071-Demographic Dem #4                                  
DMRM1820,*,15,CH        086-Demographic Dem #5                                  
DMRM2124,*,15,CH        101-Demographic Dem #6                                  
DMRM2534,*,15,CH        116-Demographic Dem #7                                  
DMRM3549,*,15,CH        131-Demographic Dem #8                                  
DMRM5054,*,15,CH        146-Demographic Dem #9                                  
DMRM5564,*,15,CH        161-Demographic Dem #10                                 
DMRM65P,*,15,CH         176-Demographic Dem #11                                 
DMRF1214,*,15,CH        191-Demographic Dem #12                                 
DMRF1517,*,15,CH        206-Demographic Dem #13                                 
DMRF1820,*,15,CH        221-Demographic Dem #14                                 
DMRF2124,*,15,CH        236-Demographic Dem #15                                 
DMRF2534,*,15,CH        251-Demographic Dem #16                                 
DMRF3549,*,15,CH        266-Demographic Dem #17                                 
DMRF5054,*,15,CH        281-Demographic Dem #18                                 
DMRF5564,*,15,CH        296-Demographic Dem #19                                 
DMRF65P,*,15,CH         311-Demographic Dem #20                                 
DMRWW,*,15,CH           326-Demographic Dem #21                                 
*               Market Universe Estimate Header Record                          
*                                                                               
UERREC,5,254,CH                                                                 
UERCODE,5,2,CH          009-Record Code                                         
UERMKTC,*,3,CH          011-Market Code                                         
UERGEOI,*,7,CH          014-Geography Indicator                                 
UERRSRVC,*,1,CH         021-Reporting Service                                   
UERSAMTY,*,1,CH         022-Sample Type                                         
UERMTROA,*,10,ZD        023-Metro A Household Universe                          
UERMTROB,*,10,ZD        033-Metro B Household Universe                          
UERHHLDS,*,10,ZD        043-Household Universe                                  
UERCH25,*,10,ZD         053-Demographic Universe Dem #1                         
UERCH611,*,10,ZD        063-Demographic Universe Dem #2                         
UERM1214,*,10,ZD        073-Demographic Universe Dem #3                         
UERM1517,*,10,ZD        083-Demographic Universe Dem #4                         
UERM1820,*,10,ZD        093-Demographic Universe Dem #5                         
UERM2124,*,10,ZD        103-Demographic Universe Dem #6                         
UERM2534,*,10,ZD        113-Demographic Universe Dem #7                         
UERM3549,*,10,ZD        123-Demographic Universe Dem #8                         
UERM5054,*,10,ZD        133-Demographic Universe Dem #9                         
UERM5564,*,10,ZD        143-Demographic Universe Dem #10                        
UERM65P,*,10,ZD         153-Demographic Universe Dem #11                        
UERF1214,*,10,ZD        163-Demographic Universe Dem #12                        
UERF1517,*,10,ZD        173-Demographic Universe Dem #13                        
UERF1820,*,10,ZD        183-Demographic Universe Dem #14                        
UERF2124,*,10,ZD        193-Demographic Universe Dem #15                        
UERF2534,*,10,ZD        203-Demographic Universe Dem #16                        
UERF3549,*,10,ZD        213-Demographic Universe Dem #17                        
UERF5054,*,10,ZD        223-Demographic Universe Dem #18                        
UERF5564,*,10,ZD        233-Demographic Universe Dem #19                        
UERF65P,*,10,ZD         243-Demographic Universe Dem #20                        
UERWW,*,10,ZD           253-Demographic Universe Dem #21                        
*               Market In-tab Record                                            
*                                                                               
MIRREC,5,264,CH                                                                 
MIRCODE,5,2,CH          009-Record Code                                         
MIRMKTC,*,3,CH          011-Market Code                                         
MIRGEOI,*,7,CH          014-Geography Indicator                                 
MIRRSRVC,*,1,CH         021-Reporting Service                                   
MIRSAMTY,*,1,CH         022-Sample Type                                         
MIRIDATE,*,10,CH        023-Intab Date                                          
MIRMTROA,*,10,ZD        033-Metro A Household Intab Count                       
MIRMTROB,*,10,ZD        043-Metro B Household Intab Count                       
MIRHHLDS,*,10,ZD        053-Household Intab Count                               
MIRCH25,*,10,ZD         063-Demographic Intab Count Dem #1                      
MIRCH611,*,10,ZD        073-Demographic Intab Count Dem #2                      
MIRM1214,*,10,ZD        083-Demographic Intab Count Dem #3                      
MIRM1517,*,10,ZD        093-Demographic Intab Count Dem #4                      
MIRM1820,*,10,ZD        103-Demographic Intab Count Dem #5                      
MIRM2124,*,10,ZD        113-Demographic Intab Count Dem #6                      
MIRM2534,*,10,ZD        123-Demographic Intab Count Dem #7                      
MIRM3549,*,10,ZD        133-Demographic Intab Count Dem #8                      
MIRM5054,*,10,ZD        143-Demographic Intab Count Dem #9                      
MIRM5564,*,10,ZD        153-Demographic Intab Count Dem #10                     
MIRM65P,*,10,ZD         163-Demographic Intab Count Dem #11                     
MIRF1214,*,10,ZD        173-Demographic Intab Count Dem #12                     
MIRF1517,*,10,ZD        183-Demographic Intab Count Dem #13                     
MIRF1820,*,10,ZD        193-Demographic Intab Count Dem #14                     
MIRF2124,*,10,ZD        203-Demographic Intab Count Dem #15                     
MIRF2534,*,10,ZD        213-Demographic Intab Count Dem #16                     
MIRF3549,*,10,ZD        223-Demographic Intab Count Dem #17                     
MIRF5054,*,10,ZD        233-Demographic Intab Count Dem #18                     
MIRF5564,*,10,ZD        243-Demographic Intab Count Dem #19                     
MIRF65P,*,10,ZD         253-Demographic Intab Count Dem #20                     
MIRWW,*,10,ZD           263-Demographic Intab Count Dem #21                     
*               Quarter Hour HUT/PUT Record                                     
*                                                                               
HPRREC,5,271,CH                                                                 
HPRCODE,5,2,CH          009-Record Code                                         
HPRDISC,*,4,BI          011-Distributor Code                                    
HPRMKTC,*,3,CH          015-Market Code                                         
HPRRSRVC,*,1,CH         018-Reporting Service                                   
HPRSAMTY,*,1,CH         019-Sample Type                                         
HPRPBACK,*,1,CH         020-Playback Type                                       
HPRCALDT,*,18,CH        021-Calendar Date Time                                  
HPREXCI,*,1,CH          039-Excluded                                            
HPRMTROA,*,10,ZD        040-Metro A Quarter Hour HUT Viewing HH                 
HPRMTROB,*,10,ZD        050-Metro B Quarter Hour HUT Viewing HH                 
HPRHHLDS,*,10,ZD        060-Quarter Hour HUT Viewing HH                         
HPRCH25,*,10,ZD         070-Quarter Hour PUT Viewing Dem #1                     
HPRCH611,*,10,ZD        080-Quarter Hour PUT Viewing Dem #2                     
HPRM1214,*,10,ZD        090-Quarter Hour PUT Viewing Dem #3                     
HPRM1517,*,10,ZD        100-Quarter Hour PUT Viewing Dem #4                     
HPRM1820,*,10,ZD        110-Quarter Hour PUT Viewing Dem #5                     
HPRM2124,*,10,ZD        120-Quarter Hour PUT Viewing Dem #6                     
HPRM2534,*,10,ZD        130-Quarter Hour PUT Viewing Dem #7                     
HPRM3549,*,10,ZD        140-Quarter Hour PUT Viewing Dem #8                     
HPRM5054,*,10,ZD        150-Quarter Hour PUT Viewing Dem #9                     
HPRM5564,*,10,ZD        160-Quarter Hour PUT Viewing Dem #10                    
HPRM65P,*,10,ZD         170-Quarter Hour PUT Viewing Dem #11                    
HPRF1214,*,10,ZD        180-Quarter Hour PUT Viewing Dem #12                    
HPRF1517,*,10,ZD        190-Quarter Hour PUT Viewing Dem #13                    
HPRF1820,*,10,ZD        200-Quarter Hour PUT Viewing Dem #14                    
HPRF2124,*,10,ZD        210-Quarter Hour PUT Viewing Dem #15                    
HPRF2534,*,10,ZD        220-Quarter Hour PUT Viewing Dem #16                    
HPRF3549,*,10,ZD        230-Quarter Hour PUT Viewing Dem #17                    
HPRF5054,*,10,ZD        240-Quarter Hour PUT Viewing Dem #18                    
HPRF5564,*,10,ZD        250-Quarter Hour PUT Viewing Dem #19                    
HPRF65P,*,10,ZD         260-Quarter Hour PUT Viewing Dem #20                    
HPRWW,*,10,ZD           270-Quarter Hour PUT Viewing Dem #21                    
*               Quarter Hour Distributor Record                                 
*                                                                               
QDRREC,5,271,CH                                                                 
QDRCODE,5,2,CH          009-Record Code                                         
QDRDISC,*,4,BI          011-Distributor Code                                    
QDRMKTC,*,3,CH          015-Market Code                                         
QDRRSRVC,*,1,CH         018-Reporting Service                                   
QDRSAMTY,*,1,CH         019-Sample Type                                         
QDRPBACK,*,1,CH         020-Playback Type                                       
QDRCALDT,*,18,CH        021-Calendar Date Time                                  
QDREXCI,*,1,CH          039-Excluded                                            
QDRMTROA,*,10,ZD        040-Metro A Quarter Hour Viewing HH                     
QDRMTROB,*,10,ZD        050-Metro B Quarter Hour Viewing HH                     
QDRHHLDS,*,10,ZD        060-Household Viewing                                   
QDRCH25,*,10,ZD         070-Demo Viewing Dem#1                                  
QDRCH611,*,10,ZD        080-Demo Viewing Dem#2                                  
QDRM1214,*,10,ZD        090-Demo Viewing Dem#3                                  
QDRM1517,*,10,ZD        100-Demo Viewing Dem#4                                  
QDRM1820,*,10,ZD        110-Demo Viewing Dem#5                                  
QDRM2124,*,10,ZD        120-Demo Viewing Dem#6                                  
QDRM2534,*,10,ZD        130-Demo Viewing Dem#7                                  
QDRM3549,*,10,ZD        140-Demo Viewing Dem#8                                  
QDRM5054,*,10,ZD        150-Demo Viewing Dem#9                                  
QDRM5564,*,10,ZD        160-Demo Viewing Dem#10                                 
QDRM65P,*,10,ZD         170-Demo Viewing Dem#11                                 
QDRF1214,*,10,ZD        180-Demo Viewing Dem#12                                 
QDRF1517,*,10,ZD        190-Demo Viewing Dem#13                                 
QDRF1820,*,10,ZD        200-Demo Viewing Dem#14                                 
QDRF2124,*,10,ZD        210-Demo Viewing Dem#15                                 
QDRF2534,*,10,ZD        220-Demo Viewing Dem#16                                 
QDRF3549,*,10,ZD        230-Demo Viewing Dem#17                                 
QDRF5054,*,10,ZD        240-Demo Viewing Dem#18                                 
QDRF5564,*,10,ZD        250-Demo Viewing Dem#19                                 
QDRF65P,*,10,ZD         260-Demo Viewing Dem#20                                 
QDRWW,*,10,ZD           270-Demo Viewing Dem#21                                 
*               Station Totals Record                                           
*                                                                               
STRREC,5,251,CH                                                                 
STRCODE,5,2,CH          009-Record Code                                         
STRDISC,*,4,BI          011-Distributor Code                                    
STRMKTC,*,3,CH          015-Market Code                                         
STRRSRVC,*,1,CH         018-Reporting Service                                   
STRSAMTY,*,1,CH         019-Sample Type                                         
STRPBACK,*,1,CH         020-Playback Type                                       
STRCALDT,*,18,CH        021-Calendar Date Time                                  
STREXCI,*,1,CH          039-Excluded                                            
STRHHLDS,*,10,ZD        040-Household Viewing                                   
STRCH25,*,10,ZD         050-Demo Viewing Dem#1                                  
STRCH611,*,10,ZD        060-Demo Viewing Dem#2                                  
STRM1214,*,10,ZD        070-Demo Viewing Dem#3                                  
STRM1517,*,10,ZD        080-Demo Viewing Dem#4                                  
STRM1820,*,10,ZD        090-Demo Viewing Dem#5                                  
STRM2124,*,10,ZD        100-Demo Viewing Dem#6                                  
STRM2534,*,10,ZD        110-Demo Viewing Dem#7                                  
STRM3549,*,10,ZD        120-Demo Viewing Dem#8                                  
STRM5054,*,10,ZD        130-Demo Viewing Dem#9                                  
STRM5564,*,10,ZD        140-Demo Viewing Dem#10                                 
STRM65P,*,10,ZD         150-Demo Viewing Dem#11                                 
STRF1214,*,10,ZD        160-Demo Viewing Dem#12                                 
STRF1517,*,10,ZD        170-Demo Viewing Dem#13                                 
STRF1820,*,10,ZD        180-Demo Viewing Dem#14                                 
STRF2124,*,10,ZD        190-Demo Viewing Dem#15                                 
STRF2534,*,10,ZD        200-Demo Viewing Dem#16                                 
STRF3549,*,10,ZD        210-Demo Viewing Dem#17                                 
STRF5054,*,10,ZD        220-Demo Viewing Dem#18                                 
STRF5564,*,10,ZD        230-Demo Viewing Dem#19                                 
STRF65P,*,10,ZD         240-Demo Viewing Dem#20                                 
STRWW,*,10,ZD           250-Demo Viewing Dem#21                                 
*               Market Header Record                                            
*                                                                               
MHPREC,5,106,CH                                                                 
MHPCODE,5,2,CH          009-Record Code                                         
MHPFMTV,*,4,CH          011-Format Version                                      
MHPMKTC,*,3,CH          015-Market Code                                         
MHPDMAC,*,3,CH          018-DMA Code                                            
MHPMRNK,*,3,CH          021-Market Rank                                         
MHPGEOI,*,7,CH          024-Geography Indicator                                 
MHPGEONM,*,26,CH        031-Geography Name                                      
MHPSDT,*,18,CH          057-Start Date Time Of Survey                           
MHPEDT,*,18,CH          075-End Date Time Of Survey                             
MHPNDAYS,*,3,CH         093-Number Of Days In Survey                            
MHPNWKS,*,2,CH          096-Number Of Weeks In Survey                           
MHPRDST,*,7,CH          098-Reporting Day Start Time                            
MHPRSRVC,*,1,CH         105-Reporting Service                                   
MHPRPRD,*,2,CH          106-Report Period                                       
MHPRYEAR,*,4,CH         108-Report Year                                         
MHPMKTZ,*,2,CH          112-Market Time Zone                                    
MHPDSAVE,*,1,CH         114-Daylight Saving Time Indicator                      
*               Program Names Record                                            
*                                                                               
PNRREC,5,129,CH                                                                 
PNRCODE,5,2,CH          009-Record Code                                         
PNRMKTC,*,3,CH          011-Market Code                                         
PNRDISC,*,4,BI          014-Distributor Code                                    
PNRCALL,*,12,CH         018-Call Letters                                        
PNROCALL,*,4,CH         030-Legacy Call Letters                                 
PNRPPLUS,*,1,CH         034-Parent Plus Indicator                               
PNRQHSDT,*,18,CH        035-Quarter Hour Start Date Time                        
PNRQHEDT,*,18,CH        053-Quarter Hour End Date Time                          
PNRPCODE,*,10,CH        071-Program Code                                        
PNRPNAME,*,14,CH        081-Program Name                                        
PNRSUBT,*,12,CH         095-Subtitle                                            
PNRCLONG,*,25,CH        107-Cable Long Name                                     
PNRPTYP,*,2,CH          132-Program Type                                        
PNRPSRC,*,3,CH          134-Program Source                                      
PNRSNAM,*,1,CH          137-Satellite Name Indicator                            
*               Market Header Record                                            
*                                                                               
MHUREC,5,120,CH                                                                 
MHUCODE,5,2,CH          009-Record Code                                         
MHUMKTC,*,3,CH          011-Market Code                                         
MHUDMAC,*,3,CH          014-DMA Code                                            
MHUMKTR,*,3,CH          017-Market Rank                                         
MHUGEOI,*,7,CH          020-Geography Indicator                                 
MHUGEONM,*,26,CH        027-Geography Name                                      
MHUSDT,*,18,CH          053-Start Date Time Of Survey                           
MHUEDT,*,18,CH          071-End Date Time Of Survey                             
MHUNDAYS,*,3,CH         089-Number Of Days In Survey                            
MHUNWKS,*,2,CH          092-Number Of Weeks In Survey                           
MHURDST,*,7,CH          094-Reporting Day Start Time                            
MHURSRVC,*,1,CH         101-Reporting Service                                   
MHURPRD,*,2,CH          102-Report Period                                       
MHURYEAR,*,4,CH         104-Report Year                                         
MHUMKTZ,*,2,CH          108-Market Time Zone                                    
MHUDSAVE,*,1,CH         110-Daylight Saving Time Indicator                      
MHUPRODT,*,18,CH        111-Processing Date Time                                
*               Program Update Record                                           
*                                                                               
PURREC,5,129,CH                                                                 
PURCODE,5,2,CH          009-Record Code                                         
PURMKTC,*,3,CH          011-Market Code                                         
PURDISC,*,4,BI          014-Distributor Code                                    
PURCALL,*,12,CH         018-Call Letters                                        
PUROCALL,*,4,CH         030-Legacy Call Letters                                 
PURPPLUS,*,1,CH         034-Parent Plus Indicator                               
PURQHSDT,*,18,CH        035-Quarter Hour Start Date Time                        
PURQHEDT,*,18,CH        053-Quarter Hour End Date Time                          
PURPCODE,*,10,CH        071-Program Code                                        
PURPNAME,*,14,CH        081-Program Name                                        
PURSUBT,*,12,CH         095-Subtitle                                            
PURCLONG,*,25,CH        107-Cable Long Name                                     
PURPTYP,*,2,CH          132-Program Type                                        
PURPSRC,*,3,CH          134-Program Source                                      
PURSNAM,*,1,CH          137-Satellite Name Indicator                            
*                                                                               
*               Working storage keys                                            
*                                                                               
REC_CODE,1,2,CH                                                                 
PARSE_REC_CODE,3,2,CH                                                           
*                                                                               
P_MHQCODE,%1                                                                    
P_MHQFMTV,%2                                                                    
P_MHQMKTC,%3                                                                    
P_MHQDMAC,%4                                                                    
P_MHQMRNK,%5                                                                    
P_MHQGEOI,%6                                                                    
P_MHQGEONM,%7                                                                   
P_MHQSDT,%8                                                                     
P_MHQEDT,%9                                                                     
P_MHQNDAYS,%10                                                                  
P_MHQNWKS,%11                                                                   
P_MHQRDST,%12                                                                   
P_MHQRSRVC,%13                                                                  
P_MHQSPEXC,%14                                                                  
P_MHQSUBSI,%15                                                                  
P_MHQHEASI,%16                                                                  
P_MHQREPRO,%17                                                                  
P_MHQDACCR,%18                                                                  
P_MHQPBACK,%19                                                                  
P_MHQINTRV,%20                                                                  
P_MHQCMETH,%21                                                                  
P_MHQCTIND,%22                                                                  
P_MHQRPRD,%23                                                                   
P_MHQRYEAR,%24                                                                  
P_MHQMKTZ,%25                                                                   
P_MHQMKCLS,%26                                                                  
P_MHQDMEXC,%27                                                                  
P_MHQDSAVE,%28                                                                  
*                                                                               
P_DHRCODE,%29                                                                   
P_DHRMKTC,%30                                                                   
P_DHRRSRVC,%31                                                                  
P_DHRSDT,%32                                                                    
P_DHREDT,%33                                                                    
P_DHRMOOC,%34                                                                   
P_DHRDISC,%35                                                                   
P_DHRCALL,%36                                                                   
P_DHROCALL,%37                                                                  
P_DHRPPLUS,%38                                                                  
P_DHRCLONG,%39                                                                  
P_DHRBCHAN,%40                                                                  
P_DHRDSRC,%41                                                                   
P_DHRAFFL1,%42                                                                  
P_DHRAFFL2,%43                                                                  
P_DHRAFFL3,%44                                                                  
P_DHRDGRP,%45                                                                   
P_DHRPRNT,%46                                                                   
P_DHRSATL,%47                                                                   
P_DHRSTOT,%48                                                                   
P_DHRSTYPE,%49                                                                  
P_DHRAEIND,%50                                                                  
P_DHRREPST,%51                                                                  
P_DHRPNIND,%52                                                                  
*                                                                               
P_UERCODE,%53                                                                   
P_UERMKTC,%54                                                                   
P_UERGEOI,%55                                                                   
P_UERRSRVC,%56                                                                  
P_UERSAMTY,%57                                                                  
*                                                                               
* THE PARSE VARIABLES FOR THIS GROUP OF 24 DEMOS **MUST** BE ASSIGNED           
* SEQUENTIAL NUMBERS, BECAUSE THEY ARE PARSED TOGETHER AS A UNIT.               
P_UERMTROA,%58                                                                  
P_UERMTROB,%59                                                                  
P_UERHHLDS,%60                                                                  
P_UERCH25,%61                                                                   
P_UERCH611,%62                                                                  
P_UERM1214,%63                                                                  
P_UERM1517,%64                                                                  
P_UERM1820,%65                                                                  
P_UERM2124,%66                                                                  
P_UERM2534,%67                                                                  
P_UERM3549,%68                                                                  
P_UERM5054,%69                                                                  
P_UERM5564,%70                                                                  
P_UERM65P,%71                                                                   
P_UERF1214,%72                                                                  
P_UERF1517,%73                                                                  
P_UERF1820,%74                                                                  
P_UERF2124,%75                                                                  
P_UERF2534,%76                                                                  
P_UERF3549,%77                                                                  
P_UERF5054,%78                                                                  
P_UERF5564,%79                                                                  
P_UERF65P,%80                                                                   
P_UERWW,%81                                                                     
*                                                                               
P_MIRCODE,%1                                                                    
P_MIRMKTC,%2                                                                    
P_MIRGEOI,%3                                                                    
P_MIRRSRVC,%4                                                                   
P_MIRSAMTY,%5                                                                   
P_MIRIDATE,%6                                                                   
*                                                                               
* THE PARSE VARIABLES FOR THIS GROUP OF 24 DEMOS **MUST** BE ASSIGNED           
* SEQUENTIAL NUMBERS, BECAUSE THEY ARE PARSED TOGETHER AS A UNIT.               
P_MIRMTROA,%7                                                                   
P_MIRMTROB,%8                                                                   
P_MIRHHLDS,%9                                                                   
P_MIRCH25,%10                                                                   
P_MIRCH611,%11                                                                  
P_MIRM1214,%12                                                                  
P_MIRM1517,%13                                                                  
P_MIRM1820,%14                                                                  
P_MIRM2124,%15                                                                  
P_MIRM2534,%16                                                                  
P_MIRM3549,%17                                                                  
P_MIRM5054,%18                                                                  
P_MIRM5564,%19                                                                  
P_MIRM65P,%20                                                                   
P_MIRF1214,%21                                                                  
P_MIRF1517,%22                                                                  
P_MIRF1820,%23                                                                  
P_MIRF2124,%24                                                                  
P_MIRF2534,%25                                                                  
P_MIRF3549,%26                                                                  
P_MIRF5054,%27                                                                  
P_MIRF5564,%28                                                                  
P_MIRF65P,%29                                                                   
P_MIRWW,%30                                                                     
*                                                                               
P_HPRCODE,%39                                                                   
P_HPRDISC,%40                                                                   
P_HPRMKTC,%41                                                                   
P_HPRRSRVC,%42                                                                  
P_HPRSAMTY,%43                                                                  
P_HPRPBACK,%44                                                                  
P_HPRCALDT,%45                                                                  
P_HPREXCI,%46                                                                   
*                                                                               
* THE PARSE VARIABLES FOR THIS GROUP OF 24 DEMOS **MUST** BE ASSIGNED           
* SEQUENTIAL NUMBERS, BECAUSE THEY ARE PARSED TOGETHER AS A UNIT.               
P_HPRMTROA,%47                                                                  
P_HPRMTROB,%48                                                                  
P_HPRHHLDS,%49                                                                  
P_HPRCH25,%50                                                                   
P_HPRCH611,%51                                                                  
P_HPRM1214,%52                                                                  
P_HPRM1517,%53                                                                  
P_HPRM1820,%54                                                                  
P_HPRM2124,%55                                                                  
P_HPRM2534,%56                                                                  
P_HPRM3549,%57                                                                  
P_HPRM5054,%58                                                                  
P_HPRM5564,%59                                                                  
P_HPRM65P,%60                                                                   
P_HPRF1214,%61                                                                  
P_HPRF1517,%62                                                                  
P_HPRF1820,%63                                                                  
P_HPRF2124,%64                                                                  
P_HPRF2534,%65                                                                  
P_HPRF3549,%66                                                                  
P_HPRF5054,%67                                                                  
P_HPRF5564,%68                                                                  
P_HPRF65P,%69                                                                   
P_HPRWW,%70                                                                     
*                                                                               
P_QDRCODE,%1                                                                    
P_QDRDISC,%2                                                                    
P_QDRMKTC,%3                                                                    
P_QDRRSRVC,%4                                                                   
P_QDRSAMTY,%5                                                                   
P_QDRPBACK,%6                                                                   
P_QDRCALDT,%7                                                                   
P_QDREXCI,%8                                                                    
*                                                                               
* THE PARSE VARIABLES FOR THIS GROUP OF 24 DEMOS **MUST** BE ASSIGNED           
* SEQUENTIAL NUMBERS, BECAUSE THEY ARE PARSED TOGETHER AS A UNIT.               
P_QDRMTROA,%9                                                                   
P_QDRMTROB,%10                                                                  
P_QDRHHLDS,%11                                                                  
P_QDRCH25,%12                                                                   
P_QDRCH611,%13                                                                  
P_QDRM1214,%14                                                                  
P_QDRM1517,%15                                                                  
P_QDRM1820,%16                                                                  
P_QDRM2124,%17                                                                  
P_QDRM2534,%18                                                                  
P_QDRM3549,%19                                                                  
P_QDRM5054,%20                                                                  
P_QDRM5564,%21                                                                  
P_QDRM65P,%22                                                                   
P_QDRF1214,%23                                                                  
P_QDRF1517,%24                                                                  
P_QDRF1820,%25                                                                  
P_QDRF2124,%26                                                                  
P_QDRF2534,%27                                                                  
P_QDRF3549,%28                                                                  
P_QDRF5054,%29                                                                  
P_QDRF5564,%30                                                                  
P_QDRF65P,%31                                                                   
P_QDRWW,%32                                                                     
*                                                                               
P_STRCODE,%33                                                                   
P_STRDISC,%34                                                                   
P_STRMKTC,%35                                                                   
P_STRRSRVC,%36                                                                  
P_STRSAMTY,%37                                                                  
P_STRPBACK,%38                                                                  
P_STRCALDT,%39                                                                  
P_STREXCI,%40                                                                   
*                                                                               
* THE PARSE VARIABLES FOR THIS GROUP OF 22 DEMOS **MUST** BE ASSIGNED           
* SEQUENTIAL NUMBERS, BECAUSE THEY ARE PARSED TOGETHER AS A UNIT.               
P_STRHHLDS,%41                                                                  
P_STRCH25,%42                                                                   
P_STRCH611,%43                                                                  
P_STRM1214,%44                                                                  
P_STRM1517,%45                                                                  
P_STRM1820,%46                                                                  
P_STRM2124,%47                                                                  
P_STRM2534,%48                                                                  
P_STRM3549,%49                                                                  
P_STRM5054,%50                                                                  
P_STRM5564,%51                                                                  
P_STRM65P,%52                                                                   
P_STRF1214,%53                                                                  
P_STRF1517,%54                                                                  
P_STRF1820,%55                                                                  
P_STRF2124,%56                                                                  
P_STRF2534,%57                                                                  
P_STRF3549,%58                                                                  
P_STRF5054,%59                                                                  
P_STRF5564,%60                                                                  
P_STRF65P,%61                                                                   
P_STRWW,%62                                                                     
*                                                                               
P_MHPCODE,%1                                                                    
P_MHPFMTV,%2                                                                    
P_MHPMKTC,%3                                                                    
P_MHPDMAC,%4                                                                    
P_MHPMRNK,%5                                                                    
P_MHPGEOI,%6                                                                    
P_MHPGEONM,%7                                                                   
P_MHPSDT,%8                                                                     
P_MHPEDT,%9                                                                     
P_MHPNDAYS,%10                                                                  
P_MHPNWKS,%11                                                                   
P_MHPRDST,%12                                                                   
P_MHPRSRVC,%13                                                                  
P_MHPRPRD,%14                                                                   
P_MHPRYEAR,%15                                                                  
P_MHPMKTZ,%16                                                                   
P_MHPDSAVE,%17                                                                  
*                                                                               
P_PNRCODE,%18                                                                   
P_PNRMKTC,%19                                                                   
P_PNRDISC,%20                                                                   
P_PNRCALL,%21                                                                   
P_PNROCALL,%22                                                                  
P_PNRPPLUS,%23                                                                  
P_PNRQHSDT,%24                                                                  
P_PNRQHEDT,%25                                                                  
P_PNRPCODE,%26                                                                  
P_PNRPNAME,%27                                                                  
P_PNRSUBT,%28                                                                   
P_PNRCLONG,%29                                                                  
P_PNRPTYP,%30                                                                   
P_PNRPSRC,%31                                                                   
P_PNRSNAM,%32                                                                   
*                                                                               
P_MHUCODE,%33                                                                   
P_MHUMKTC,%34                                                                   
P_MHUDMAC,%35                                                                   
P_MHUMKTR,%36                                                                   
P_MHUGEOI,%37                                                                   
P_MHUGEONM,%38                                                                  
P_MHUSDT,%39                                                                    
P_MHUEDT,%40                                                                    
P_MHUNDAYS,%41                                                                  
P_MHUNWKS,%42                                                                   
P_MHURDST,%43                                                                   
P_MHURSRVC,%44                                                                  
P_MHURPRD,%45                                                                   
P_MHURYEAR,%46                                                                  
P_MHUMKTZ,%47                                                                   
P_MHUDSAVE,%48                                                                  
P_MHUPRODT,%49                                                                  
*                                                                               
P_PURCODE,%50                                                                   
P_PURMKTC,%51                                                                   
P_PURDISC,%52                                                                   
P_PURCALL,%53                                                                   
P_PUROCALL,%54                                                                  
P_PURPPLUS,%55                                                                  
P_PURQHSDT,%56                                                                  
P_PURQHEDT,%57                                                                  
P_PURPCODE,%58                                                                  
P_PURPNAME,%59                                                                  
P_PURSUBT,%60                                                                   
P_PURCLONG,%61                                                                  
P_PURPTYP,%62                                                                   
P_PURPSRC,%63                                                                   
P_PURSNAM,%64                                                                   
*                                                                               
P_MHPSUBSI,%65                                                                  
P_MHUSUBSI,%66                                                                  
*                                                                               
