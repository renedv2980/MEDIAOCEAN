*          DATA SET MCKEYDEF   AT LEVEL 003 AS OF 03/03/21                      
         MACRO                                                                  
&TAG     KEYDEF &TYPE=ACTIVE,&ELEMLIST=                                         
.*                                                                              
.* TYPE=ACTIVE OR TYPE=PASSIVE                                                  
.*  IF TYPE=PASSIVE THEN NO LAYOUT TABLE WILL BE BUILT FOR THIS DSECT,          
.*  EVEN IF IT CONTAINS COMPRESSED DATE FIELDS. IN ADDITION, ALL                
.*  FIELDS WITHIN A PASSIVE KEYDEF WILL BE IGNORED DURING THE                   
.*  COMPRESSED DATE OVERLAP CHECK.                                              
.*                                                                              
.* ELEMLIST= IS A SUBLIST (IN PARENTHESES) OF ELEMENT CODE EQUATES.             
.* EACH EQUATE MUST BE OF PROGRAM TYPE "PTYPE_ELCODE". THIS METHOD IS           
.* INTENDED FOR USE WHEN "ELEMLIST=ALL" (SEE BELOW) WOULD GENERATE              
.* MEANINGLESS OR AMBIGUOUS ELEMENT STRUCTURES IN A LAYOUT TABLE.               
.* NOTE: IF THE SAME HEX ELEMENT CODE VALUE IS ASSIGNED TO MORE THAN            
.*       ONE ELEMENT CODE EQU WITHIN A KEYDEF, THE ENTIRE SET OF THOSE          
.*       EQUS SHOULD BE ENCLOSED WITHIN ITS OWN SET OF PARENTHESES.             
.*       E.G., IF ELEMENT CODE EQUS "E1" "E2" AND "E4" ARE ALL UNIQUE,          
.*       AND IF ELEMENT CODE EQUS "E3A" "E3B" AND "E3C" ALL SHARE THE           
.*       SAME UNDERLYING HEX ELEMENT CODE, THEN CODE THIS:                      
.*        KEYDEF ELEMLIST=(E1,E2,(E3A,E3B,E3C),E4)                              
.*                                                                              
.* ELEMLIST=ALL MEANS THAT EACH ELEMENT CODE ENCOUNTERED                        
.* IN THE ASSEMBLY IS DEEMED ELIGIBLE FOR INCLUSION IN THIS RECORD.             
.* THIS IS TYPICALLY MEANT FOR DSECT MEMBERS WHICH DEFINE A SINGLE              
.* ACTIVE RECORD TYPE, AND WHERE ALL OF THE ELEMENTS IN THE MEMBER ARE          
.* ASSOCIATED WITH THAT RECORD TYPE.                                            
.*                                                                              
.* ELEMLIST=NONE IS USED WHEN A KEY CONTAINS A COMPRESSED DATE, BUT ITS         
.* ASSOCIATED RECORD EITHER HAS NO ELEMENTS, OR NONE OF ITS ELEMENTS            
.* CONTAIN ANY COMPRESSED DATES.                                                
.*                                                                              
         AIF   (N'&SYSLIST EQ 0).CHKTYPE                                        
         MNOTE 8,'INVALID POSITIONAL PARAMETER'                                 
         AGO   .EXIT                                                            
.*                                                                              
.CHKTYPE ANOP                                                                   
         AIF   (T'&TYPE EQ 'O').ACTIVE                                          
         AIF   ('&TYPE' EQ 'ACTIVE').ACTIVE                                     
         AIF   ('&TYPE' EQ 'PASSIVE').PASSIVE                                   
         MNOTE 8,'INVALID TYPE= PARAMETER'                                      
         AGO   .EXIT                                                            
.*                                                                              
.PASSIVE ANOP                                                                   
         AIF   (T'&ELEMLIST EQ 'O').PSVTYPE                                     
         MNOTE 8,'ELEMLIST= IS MUTUALLY EXCLUSIVE WITH TYPE=PASSIVE'            
         AGO   .EXIT                                                            
.*                                                                              
.PSVTYPE ANOP                                                                   
@KEYDEF_TYPE@&SYSNDX EQU 0,,,PTYPE_PASSIVE                                      
         AGO   .EXIT                                                            
.*                                                                              
.ACTIVE  ANOP                                                                   
         AIF   (T'&ELEMLIST NE 'O').ACTVTYP                                     
         MNOTE 8,'TYPE=ACTIVE: ELEMLIST=ALL|NONE|(LIST) REQUIRED'               
         AGO   .EXIT                                                            
.*                                                                              
.ACTVTYP ANOP                                                                   
@KEYDEF_TYPE@&SYSNDX EQU 0,,,PTYPE_ACTIVE                                       
.*                                                                              
         AIF   ('&ELEMLIST' EQ 'NONE').EXIT                                     
         AIF   ('&ELEMLIST' NE 'ALL').DOLIST                                    
.* GENERATE "SIGNAL EQU" INDICATING "ELEMLIST=ALL"                              
@KEYDEF_ELEM@&SYSNDX EQU X'FFFFFFFF',,,PTYPE_RELATED_ELEMENT                    
         AGO   .EXIT                                                            
.*                                                                              
.DOLIST  ANOP                                                                   
.* PROCESS THE ELEMLIST= SUBLIST. EACH SUBLIST ENTRY MUST BE AN EQU             
.* SYMBOL OF PROGRAM TYPE "PTYPE_ELCODE".                                       
         LCLA  &I,&J                                                            
&I       SETA  1                                                                
.*                                                                              
.LOOP    ANOP                                                                   
.* START WITH THE FIRST (OR ONLY) EQU IN EACH SUBLIST                           
&MYATR   SETC  SYSATTRP('&ELEMLIST(&I,1)')                                      
&MYATRA  SETC  C2X('&MYATR')                                                    
         AIF   ('&MYATRA' EQ A2X(PTYPE_ELCODE)).PTYPEOK                         
         MNOTE 8,'''&ELEMLIST(&I,1)'' IS NOT OF TYPE PTYPE_ELCODE'              
         AGO   .SKIPI                                                           
.PTYPEOK ANOP                                                                   
@KEYDEF_ELEM@&SYSNDX&I EQU &ELEMLIST(&I,1),,,PTYPE_RELATED_ELEMENT              
.SKIPI   ANOP                                                                   
.*                                                                              
         AIF   (N'&ELEMLIST(&I) EQ 1).NEXT                                      
.* NOW LOOP THROUGH ANY DUPLICATE HEX ELEMENT CODES                             
&J       SETA  2                   START WITH THE 2ND EQU IN SUBLIST            
.LOOPJ   ANOP                                                                   
&MYATR   SETC  SYSATTRP('&ELEMLIST(&I,&J)')                                     
&MYATRA  SETC  C2X('&MYATR')                                                    
         AIF   ('&MYATRA' EQ A2X(PTYPE_ELCODE)).PTYPEOJ                         
         MNOTE 8,'''&ELEMLIST(&I,&J)'' IS NOT OF TYPE PTYPE_ELCODE'             
         AGO   .SKIPJ                                                           
.PTYPEOJ ANOP                                                                   
@KEYDEF_ELEM@&SYSNDX&I&J EQU &ELEMLIST(&I,&J),,,PTYPE_DUPL_HEX_ELCODE           
.SKIPJ   ANOP                                                                   
.*                                                                              
&J       SETA  &J+1                                                             
         AIF   (&J LE N'&ELEMLIST(&I)).LOOPJ                                    
.*                                                                              
.NEXT    ANOP                                                                   
&I       SETA  &I+1                                                             
         AIF   (&I LE N'&ELEMLIST).LOOP                                         
.*                                                                              
.EXIT    ANOP                                                                   
         MEXIT                                                                  
         MEND                                                                   
