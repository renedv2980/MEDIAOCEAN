*          DATA SET MCEXTED    AT LEVEL 017 AS OF 08/03/04                      
         MACRO                                                                  
&TAG     EXTED &INPUT,&OUTPUT,&BLOCK,&MODADDR=EXTEDIT,&DMCB=DMCB,      *        
               &MINUS=NO,&COMMAS=NO,&ALIGN=RIGHT,&ZERO=NOBLANK,        *        
               &BRACKET=NO,&CURSYMB=NO,&CR=NO,&DECS=YES,&FLOAT=NO,     *        
               &TRAIL=,&DECPNT=COUNTRY,&LANG=,&COMFACS=COMFACS                  
.*                                                                              
.*                                                                              
         LCLC  &CA,&CB,&CC,&CD,&CE,&CF,&CG,&CH,&CI                              
         LCLC  &OUTLEN,&OUTBUF,&LEN,&TEMPC                                      
         LCLA  &AA                                                              
.*                                                                              
.*                                 DEAL WITH PARAMETER LIST ADDRESS             
.PLIST   AIF   ('&DMCB'(1,1) EQ '(').PLISTR                                     
.*                                 LIST IS A STORAGE ADDRESS                    
&TAG     LA    R1,&DMCB                                                         
         AGO   .PLISTX                                                          
.*                                 LIST IS ADDRESSED BY A REGISTER              
.PLISTR  AIF   ('&DMCB(1)' EQ 'R1' OR '&DMCB(1)' EQ '1').PLISTR1                
&TAG     LR    R1,&DMCB(1)                                                      
         AGO   .PLISTX                                                          
.*                                 LIST IS ADDRESSED BY REGISTER1               
.PLISTR1 ANOP                                                                   
&TAG     DS    0H                                                               
         AGO   .PLISTX                                                          
.*                                                                              
.PLISTX  ANOP                                                                   
         XC    0(24,R1),0(R1)                                                   
         AGO   .PARMS1                                                          
.*                                 HANDLE FIRST INDICATOR BYTE                  
.PARMS1  ANOP                                                                   
&CA      SETC  '0'                                                              
&CB      SETC  '0'                                                              
&CC      SETC  '0'                                                              
&CD      SETC  '0'                                                              
&CE      SETC  '0'                                                              
&CF      SETC  '0'                                                              
&CG      SETC  '0'                                                              
&CH      SETC  '0'                                                              
.*                                                                              
.PARMS1A AIF   ('&MINUS'(1,1) NE 'Y').PARMS1B                                   
&CA      SETC  '1'                                                              
.PARMS1B AIF   ('&COMMAS'(1,1) NE 'Y').PARMS1C                                  
&CB      SETC  '1'                                                              
.PARMS1C AIF   ('&ALIGN'(1,1) NE 'L').PARMS1D                                   
&CC      SETC  '1'                                                              
.PARMS1D AIF   ('&ZERO'(1,1) NE 'B').PARMS1E                                    
&CD      SETC  '1'                                                              
.PARMS1E AIF   ('&BRACKET'(1,1) NE 'Y').PARMS1F                                 
&CE      SETC  '1'                                                              
.PARMS1F AIF   ('&CURSYMB'(1,1) NE 'N').PARMS1G                                 
         AIF   (T'&TRAIL NE 'O').PARMS1G                                        
&CF      SETC  '1'                                                              
.PARMS1G AIF   ('&CR'(1,1) NE 'Y').PARMS1H                                      
&CG      SETC  '1'                                                              
.PARMS1H AIF   ('&DECS'(1,1) EQ 'Y').PARMS1X                                    
&CH      SETC  '1'                                                              
.*                                 SET FIRST INDICATOR BYTE                     
.PARMS1X ANOP                                                                   
&CI      SETC  '&CA'.'&CB'.'&CC'.'&CD'.'&CE'.'&CF'.'&CG'.'&CH'                  
         AIF   ('&CI' EQ '00000000').PARMS2                                     
         MVI   0(R1),B'&CI'                                                     
.*                                 HANDLE SECOND INDICATOR BYTE                 
.PARMS2  ANOP                                                                   
&CA      SETC  '0'                                                              
&CB      SETC  '0'                                                              
&CC      SETC  '0'                                                              
&CD      SETC  '0'                                                              
&CE      SETC  '0'                                                              
&CF      SETC  '0'                                                              
&CG      SETC  '0'                                                              
&CH      SETC  '0'                                                              
.*                                                                              
.PARMS2A AIF   ('&DECS'(1,1) NE 'R').PARMS2B                                    
&CA      SETC  '1'                                                              
.PARMS2B AIF   ('&FLOAT'(1,1) NE '-').PARMS2C                                   
&CB      SETC  '1'                                                              
.PARMS2C AIF   ('&DECPNT'(1,1) NE 'F').PARMS2D                                  
&CC      SETC  '1'                                                              
.PARMS2D AIF   ('&CURSYMB'(1,1) NE 'S').PARMS2X                                 
&CD      SETC  '1'                                                              
.*                                 SET SECOND INDICATOR BYTE                    
.PARMS2X ANOP                                                                   
&CI      SETC  '&CA'.'&CB'.'&CC'.'&CD'.'&CE'.'&CF'.'&CG'.'&CH'                  
         AIF   ('&CI' EQ '00000000').PARMSX                                     
         MVI   1(R1),B'&CI'                                                     
         AGO   .PARMSX                                                          
.*                                                                              
.PARMSX  AGO   .INPUT                                                           
.*                                 HANDLE INPUT PARAMETERS                      
.INPUT   AIF   (T'&INPUT NE 'O').INPUT2                                         
.*                                 MNOTE FOR INPUT ERRORS                       
.INPUTZ  MNOTE 8,'INPUT PARAMETER MISSING OR INVALID'                           
         MEXIT                                                                  
.*                                                                              
.INPUT2  AIF   (N'&INPUT GT 2).INPUTZ                                           
         AIF   (N'&INPUT NE 1).INPUT10                                          
         AIF   ('&INPUT'(1,1) EQ '(').INPUTR                                    
&AA      SETA  L'&INPUT                                                         
&LEN     SETC  'L''&INPUT'                                                      
         AIF   (T'&INPUT EQ 'P' OR &AA GT 4).INPUTP                             
.*                                 INPUT ASSUMED TO BE BINARY                   
         MVI   2(R1),X'40'+&LEN                                                 
         AGO   .INPUT4                                                          
.*                                 INPUT ASSUMED TO BE PACKED DECIMAL           
.INPUTP  AIF   (L'&INPUT GT 15).INPUTZ                                          
         MVI   2(R1),X'20'+&LEN                                                 
         AGO   .INPUT4                                                          
.*                                 SET A(INPUT) IN PARAMETER LIST               
.INPUT4  LA    RE,&INPUT                                                        
         STCM  RE,7,4(R1)                                                       
         AGO   .INPUTX                                                          
.*                                 INPUT IS A REGISTER                          
.INPUTR  ANOP                                                                   
         OI    2(R1),X'80'                                                      
         STCM  &INPUT(1),15,3(R1)                                               
         AGO   .INPUTX                                                          
.*                                 HANDLE DATA TYPE,DATA ADDRESS                
.INPUT10 AIF   (K'&INPUT(1) GT 3).INPUTZ                                        
         AIF   (K'&INPUT(1) GT 1).INPUT11                                       
&CA      SETC  '&INPUT(1)'                                                      
&AA      SETA  0+&CA                                                            
.*                                 ASSUME B1-B4 IF 1-4 SPECIFIED                
         AIF   (&AA LT 1 OR &AA GT 4).INPUTZ                                    
         MVI   2(R1),X'40'+&AA                                                  
         AGO   .INPUT12                                                         
.*                                 HANDLE DATA TYPE (B1-B4,P1-P16)              
.INPUT11 ANOP                                                                   
&CA      SETC  '&INPUT(1)'(2,K'&INPUT(1)-1)                                     
&AA      SETA  0+&CA                                                            
         AIF   ('&INPUT(1)'(1,1) EQ 'P').INPUTP2                                
         AIF   ('&INPUT(1)'(1,1) NE 'B').INPUTZ                                 
.*                                 INPUT IS BINARY                              
         AIF   (&AA LT 1 OR &AA GT 4).INPUTZ                                    
         MVI   2(R1),X'40'+&AA                                                  
         AGO   .INPUT12                                                         
.*                                 INPUT IS PACKED DECIMAL                      
.INPUTP2 AIF   (&AA LT 1 OR &AA GT 16).INPUTZ                                   
         MVI   2(R1),X'20'+&AA                                                  
         AGO   .INPUT12                                                         
.*                                 HANDLE DATA ADDRESS                          
.INPUT12 ANOP                                                                   
         AIF   (T'&INPUT(2) EQ 'A' OR T'&INPUT(2) EQ 'V').INPUTA                
.*                                                                              
         AIF   ('&INPUT(2)'(1,2) NE '(R').INPUT14                               
&CA      SETC  '&INPUT(2)'(2,K'&INPUT(2)-2)                                     
         STCM  &CA,7,4(R1)                                                      
         AGO   .INPUTX                                                          
.*                                 INPUT IS A STORAGE LOCATION                  
.INPUT14 ANOP                                                                   
         LA    RE,&INPUT(2)                                                     
         STCM  RE,7,4(R1)                                                       
         AGO   .INPUTX                                                          
.*                                 INPUT IS ADDRESSED BY AN ADCON               
.INPUTA  ANOP                                                                   
         MVC   5(3,R1),&INPUT(2)+1                                              
         AGO   .INPUTX                                                          
.*                                                                              
.INPUTX  ANOP                                                                   
.*                                 HANDLE OUTPUT EXPRESSIONS                    
.OUTPT   AIF   (T'&OUTPUT EQ 'O').OUTPTZ                                        
         AIF   (N'&OUTPUT EQ 2).OUTPT2                                          
         AIF   (N'&OUTPUT NE 1).OUTPTZ                                          
         AIF   ('&OUTPUT'(1,1) EQ '(').OUTPTZ                                   
&OUTLEN  SETC  'L''&OUTPUT'                                                     
&OUTBUF  SETC  '&OUTPUT'                                                        
         AGO   .OUTPT4                                                          
.*                                                                              
.OUTPT2  ANOP                                                                   
&OUTLEN  SETC  '&OUTPUT(1)'                                                     
&OUTBUF  SETC  '&OUTPUT(2)'                                                     
         AIF   (T'&OUTLEN EQ 'O').OUTPT3                                        
         AIF   ('&OUTLEN'(1,1) EQ '(').OUTPTR                                   
         AIF   (T'&OUTLEN NE 'N').OUTPT4                                        
.*                                 LENGTH IS A NUMBER                           
&AA      SETA  &OUTLEN                                                          
         AIF   (&AA LT 1 OR &AA GT 30).OUTPTZ                                   
         MVI   7(R1),&AA                                                        
         AGO   .OUTPT6                                                          
.*                                 LENGTH IS OMITTED                            
.OUTPT3  ANOP                                                                   
         AIF   ('&OUTBUF' EQ '(').OUTPTZ                                        
&OUTLEN  SETC  'L''&OUTBUF'                                                     
.*                                 LENGTH IS IN &OUTLEN                         
.OUTPT4  ANOP                                                                   
         MVI   7(R1),&OUTLEN                                                    
         AGO   .OUTPT6                                                          
.*                                 LENGTH IS IN &OUTLEN                         
.*                                 LENGTH IS IN A REGISTER                      
.OUTPTR  ANOP                                                                   
&CA      SETC  '&OUTLEN'(2,K'&OUTLEN-2)                                         
         STC   &CA,7(,R1)                                                       
.*                                                                              
.OUTPT6  AIF   ('&OUTBUF'(1,1) EQ '(').OUTPT8                                   
.*                                 OUTPUT IS A STORAGE LOCATION                 
         LA    RE,&OUTBUF                                                       
         STCM  RE,7,8(R1)                                                       
         AGO   .OUTPUTX                                                         
.*                                 OUTPUT IS ADDRESSED BY A REGISTER            
.OUTPT8  ANOP                                                                   
&CA      SETC  '&OUTBUF'(2,K'&OUTBUF-2)                                         
         STCM  &CA,7,8(R1)                                                      
         AGO   .OUTPUTX                                                         
.*                                                                              
.*                                 MNOTE FOR OUTPUT ERRORS                      
.OUTPTZ  MNOTE 8,'OUTPUT PARAMETER MISSING OR INVALID'                          
         MEXIT                                                                  
.*                                 OUTPUT EXPRESSIONS COMPLETE                  
.OUTPUTX ANOP                                                                   
.*                                 HANDLE BLOCK ADDRESS                         
.BLOCK   AIF   (T'&BLOCK NE 'O').BLOCK2                                         
.*                                 MNOTE FOR BLOCK ERRORS                       
.BLOCKZ1 MNOTE 8,'MISSING OR INVALID BLOCK PARAMETER'                           
         MEXIT                                                                  
.*                                 MNOTE FOR BLOCK ERRORS                       
.BLOCKZ2 MNOTE 8,'TRAIL=X AND CURRENCY BLOCK CANT BE USED TOGETHER'             
         MEXIT                                                                  
.*                                                                              
.BLOCK2  AIF   (N'&BLOCK NE 1).BLOCKZ1                                          
         AIF   (T'&BLOCK EQ 'N').BLOCKN                                         
         AIF   ('&BLOCK'(1,1) EQ '''').BLOCKE                                   
         AIF   (T'&TRAIL NE 'O').BLOCKZ2                                        
         AIF   (T'&BLOCK EQ 'A' OR T'&BLOCK EQ 'V').BLOCKA                      
         AIF   ('&BLOCK'(1,1) EQ '(').BLOCKR                                    
.*                                 BLOCK IS A STORAGE LOCATION                  
.BLOCK4  ANOP                                                                   
         LA    RE,&BLOCK                                                        
         MVC   11(5,R1),3(RE)                                                   
         AGO   .BLOCKX                                                          
.*                                 BLOCK IS ADDRESSED BY REGISTER               
.BLOCKR  ANOP                                                                   
&CA      SETC  '&BLOCK'(2,K'&BLOCK-2)                                           
         MVC   11(5,R1),3(&CA)                                                  
         AGO   .BLOCKX                                                          
.*                                 BLOCK IS ADDRESSED BY ADCON                  
.BLOCKA  ANOP                                                                   
         ICM   RE,7,&BLOCK+1                                                    
         MVC   11(5,R1),3(RE)                                                   
         AGO   .BLOCKX                                                          
.*                                 BLOCK IS A SELF DEFINING TERM                
.BLOCKN  ANOP                                                                   
         MVI   11(R1),&BLOCK                                                    
         AGO   .BLOCKF                                                          
.*                                 BLOCK IS AN EQUATED VALUE 'XXX'              
.BLOCKE  ANOP                                                                   
&CA      SETC  '&BLOCK'(2,K'&BLOCK-2)                                           
         MVI   11(R1),&CA                                                       
.*                                                                              
.BLOCKF  ANOP                                                                   
         AIF   (T'&TRAIL EQ 'O').BLOCKX                                         
         MVI   12(R1),X'11'                                                     
         AIF   (K'&TRAIL NE 1).BLOCKG                                           
         MVI   13(R1),C'&TRAIL'                                                 
         AGO   .BLOCKX                                                          
.*                                                                              
.BLOCKG  ANOP                                                                   
         MVI   13(R1),&TRAIL                                                    
         AGO   .BLOCKX                                                          
.*                                                                              
.BLOCKX  ANOP                                                                   
.*                                                                              
.*                                 HANDLE LANG FACILITY                         
         AIF   (T'&LANG EQ 'O').LANGEX                                          
         AIF   (N'&LANG NE 1).LANGEZ                                            
         AIF   ('&LANG'(1,1) NE '''').LANGC                                     
&CA      SETC  '&LANG'(2,K'&LANG-2)                                             
         MVI   16(R1),&CA                                                       
         AIF   ('&LANG' NE '''LANGENG''').LANGEX                                
         MNOTE    0,'LANG=LANGENG WILL BE IGNORED, USE LANG=LANGEUK OR X        
               LANGEUS'                                                         
         AGO   .LANGEX                                                          
.*                                                                              
.LANGC   ANOP                                                                   
         AIF   ('&LANG'(1,1) EQ '(').LANGR                                      
         MVC   16(1,R1),&LANG                                                   
         AGO   .LANGEX                                                          
.*                                                                              
.LANGR   ANOP                                                                   
         AIF   ('&LANG(1)' EQ 'R1' OR '&LANG(1)' EQ '1').LANGEZ                 
&CA      SETC  '&LANG'(2,K'&LANG-2)                                             
         STC   &CA,16(,R1)                                                      
         AGO   .LANGEX                                                          
.*                                                                              
.LANGEZ  MNOTE 8,'INVALID LANG KEYWORD'                                         
         MEXIT                                                                  
.*                                                                              
.LANGEX  ANOP                                                                   
.*                                                                              
.COMFACS ANOP                                                                   
         AIF   ('&COMFACS'(1,1) EQ '(').COMFACR                                 
         MVC   20(4,R1),&COMFACS                                                
         AGO   .COMFACX                                                         
.*                                 COMFACS IS ADDRESSED BY A REGISTER           
.COMFACR AIF   ('&COMFACS(1)' EQ 'R1' OR '&COMFACS(1)' EQ '1').COMFACZ          
&CA      SETC  '&COMFACS'(2,K'&COMFACS-2)                                       
         ST    &CA,20(,R1)                                                      
         AGO   .COMFACX                                                         
.*                                                                              
.COMFACZ MNOTE 8,'INVALID COMFACS KEYWORD'                                      
         MEXIT                                                                  
.*                                                                              
.COMFACX ANOP                                                                   
.*                                 MODULE IS ADDRESSED BY A REGISTER            
.MODAD   ANOP                                                                   
         AIF   ('&MODADDR'(1,1) EQ '(').MODADR                                  
         L     RF,&MODADDR                                                      
         AGO   .MODAD2                                                          
.*                                 MODULE IS ADDRESSED BY A REGISTER            
.MODADR  AIF   ('&MODADDR(1)' EQ 'RF' OR '&MODADDR(1)' EQ '15').MODAD2          
         LR    RF,&MODADDR(1)                                                   
         AGO   .MODAD2                                                          
.*                                                                              
.MODAD2  ANOP                                                                   
         BASR  RE,RF                                                            
.*                                                                              
.EXIT    ANOP                                                                   
         MEND                                                                   
