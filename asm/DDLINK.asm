*          DATA SET DDLINK     AT LEVEL 028 AS OF 10/07/20                      
*PROCESS USING(WARN(15))                                                        
*PHASE T00AE5C                                                                  
DDLINK   TITLE '- FALINK/RUNNER application interface'                          
DDLINK   CSECT ,                                                                
         PRINT NOGEN                                                            
         NMOD1 0,*DDLINK*                                                       
         DROP  RB                                                               
                                                                                
         SAC   0                   Ensure not access register mode              
         SAM24 ,                   Set 24 bit addressing                        
         LR    R9,R1                                                            
         USING LP_D,R9             R9=A(DDLINK control block)                   
         LARL  RA,GLOBALS                                                       
         USING GLOBALS,RA          RA=A(DDLINK global literal values)           
                                                                                
         LAM   AR0,ARF,ARZERO      Ensure access registers are empty            
         ST    RB,LP_ADDLK         Save DDLINK entry point                      
         L     RC,LP_AWORK         RC=A(working storage)                        
         LA    RC,7(RC)            Ensure work is on doubleword bndry           
         SRL   RC,3                                                             
         SLL   RC,3                                                             
         ST    RC,LP_AWORK         Save modulo w/s address                      
         USING WORKD,RC            RC=A(local working storage)                  
         USING LP_XD,LPXVARS       Application visible w/s variables            
                                                                                
         LA    R0,WORKD            Clear local working storage                  
         LHI   R1,WORKL                                                         
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         LA    R0,WORKD            Initialize working storage variables         
         ST    R0,AWORKD                                                        
         LA    R0,LP_D                                                          
         ST    R0,ALP_D                                                         
                                                                                
         MVC   SVALPXD,LP_ALPXD    Save current LP_AXLPD value                  
         LA    R0,LPXVARS          Point to local XVARS                         
         ST    R0,LP_ALPXD         Set address in LP_D                          
         ST    R0,ALP_XD           Set control block address                    
         CLC   SVALPXD,FZERO       Test LP_XD provided by RUNNER                
         JE    INIT0020                                                         
         LHI   R1,LP_XLNQ          Yes - copy it locally                        
         L     RE,SVALPXD                                                       
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
                                                                                
***********************************************************************         
* Handle special calling mode from RUNNER to set routine addresses in *         
* LP_D/LP_XD - these addesses may be overwritten by RUNNER trap       *         
* pointers                                                            *         
***********************************************************************         
                                                                                
         L     RF,LP_ARUNP                                                      
         CLI   RUNPMODE-RUNPARMD(RF),FF                                         
         JNE   INIT0020                                                         
         LARL  R0,SETKEY                                                        
         ST    R0,LP_ASETK         Set LP_D addresses                           
         LARL  R0,OUTPUT                                                        
         ST    R0,LP_APUTO                                                      
         LARL  R0,RECP                                                          
         ST    R0,LP_ARECP                                                      
         LARL  R0,ADDWMP                                                        
         ST    R0,LP_AAWMP                                                      
                                                                                
         L     RE,SVALPXD          Point to RUNNER's LP_XD                      
R        USING LP_XD,RE                                                         
         LARL  R0,VMAP             Set LP_XD addresses                          
         ST    R0,R.LP_AVMAP                                                    
         LARL  R0,VSTR                                                          
         ST    R0,R.LP_AVSTR                                                    
         LARL  R0,VINP                                                          
         ST    R0,R.LP_AVINP                                                    
         LARL  R0,EOUT                                                          
         ST    R0,R.LP_AEOUT                                                    
         LARL  R0,PUTARY                                                        
         ST    R0,R.LP_APARY                                                    
         LARL  R0,ARYPUT                                                        
         ST    R0,R.LP_AARYP                                                    
         LARL  R0,RUNR                                                          
         ST    R0,R.LP_ARUNR                                                    
         LARL  R0,MQGET                                                         
         ST    R0,R.LP_AMQGT                                                    
         LARL  R0,RUN                                                           
         ST    R0,R.LP_ARUN                                                     
         LARL  R0,GREQ                                                          
         ST    R0,R.LP_AGREQ                                                    
         LARL  R0,GMQR                                                          
         ST    R0,R.LP_AGMQR                                                    
         LARL  R0,BLDMQD                                                        
         ST    R0,R.LP_ABMQD                                                    
         LARL  R0,FLDPUT                                                        
         ST    R0,R.LP_AFPUT                                                    
         LARL  R0,GOSVR                                                         
         ST    R0,R.LP_AGSVR                                                    
         LARL  R0,BMMI                                                          
         ST    R0,R.LP_ABMMI                                                    
         LARL  R0,LMAP                                                          
         ST    R0,R.LP_ALMAP                                                    
         LARL  R0,BREQ                                                          
         ST    R0,R.LP_ABREQ                                                    
         LARL  R0,SETSEC                                                        
         ST    R0,R.LP_ASSEC                                                    
         LARL  R0,BINSRCH                                                       
         ST    R0,R.LP_ABSRC                                                    
         LARL  R0,RREQ                                                          
         ST    R0,R.LP_ARREQ                                                    
         J     EXITY                                                            
         DROP  R                                                                
                                                                                
         USING XTRAINFD,LP_XTRAV                                                
INIT0020 CLC   LP_WMPL,FZERO       Test WMP size provided                       
         JE    INIT0022                                                         
         OC    AWMP,LP_AUWMP       Test caller supplied WMP area                
         JNZ   INIT0030            Yes - use it                                 
                                                                                
INIT0022 LHI   R5,WMPSIZE          We are on-line here                          
         STH   R5,LP_WMPL          Set acquired WMP size                        
         LR    R3,RD               Acquire WMP storage from w/s pool            
         AR    R3,R5                                                            
         L     R4,4(RD)                                                         
         ST    R4,4(R3)                                                         
         ST    R3,8(R4)                                                         
         LR    R1,RD                                                            
         ST    R1,AWMP                                                          
         LR    RD,R3                                                            
         LR    R4,R1               and clear it                                 
         SR    R3,R3                                                            
         MVCL  R4,R2                                                            
                                                                                
INIT0030 L     R0,AWMP                                                          
         ST    R0,LP_AWMP          Set A(start of WMP)                          
         LLH   R1,LP_WMPL                                                       
         AR    R0,R1                                                            
         SHI   R0,1                                                             
         ST    R0,LP_AWMPX         Set A(last byte of WMP)                      
                                                                                
         CLI   LITINIT,0           Test literals initialized                    
         JNE   INIT0040                                                         
                                                                                
         L     R1,LP_ACOM          Extract COMFACS addresses                    
         USING COMFACSD,R1                                                      
         GOTOR CPROTOFF            Turn off storage protection                  
         MVC   DMGR,CDATAMGR                                                    
         MVC   CALLOV,CCALLOV                                                   
         MVC   GETFACT,CGETFACT                                                 
         MVC   LOCKSPC,CLOCKSPC                                                 
         MVC   SECRET,CSECRET                                                   
         MVC   GETPROF,CGETPROF                                                 
         MVC   SWITCH,CSWITCH                                                   
         MVC   DICTATE,CDICTATE                                                 
         MVC   GETTXT,CGETTXT                                                   
         MVC   CASHVAL,CCASHVAL                                                 
         MVC   DATCON,CDATCON                                                   
         MVC   HEXOUT,CHEXOUT                                                   
         MVC   HEXIN,CHEXIN                                                     
         MVC   GETDAY,CGETDAY                                                   
         MVC   SOFDAT,CSOFDAT                                                   
         MVC   CUREDIT,CCUREDIT                                                 
         MVC   GLOBBER,CGLOBBER                                                 
         MVC   ADDAY,CADDAY                                                     
         MVC   PROTOFF,CPROTOFF                                                 
         MVC   PROTON,CPROTON                                                   
         MVC   WSSVR,CWSSVR                                                     
         MVC   FABSAM,CFABSAM                                                   
         MVC   WRKIO,CWRKIO                                                     
         DROP  R1                                                               
                                                                                
         GOTOR DATCON,DMCB,(5,0),(20,TODAY)                                     
                                                                                
         PACK  DUB(2),TODAY+6(2)                                                
         LLH   RE,DUB                                                           
         SRL   RE,4                                                             
         STC   RE,DAYTODAY         Set today's pwos day                         
                                                                                
         GOTOR DATCON,DMCB,(5,0),(0,WORK)                                       
         GOTOR GETDAY,DMCB,WORK,WORK+6                                          
         MVC   DAYNUM,DMCB                                                      
         OI    DAYNUM,X'F0'        Set today's day number (ebcdic 1-7)          
                                                                                
         MVI   LITINIT,1           Set literals initialized                     
         GOTOR PROTON              Turn protection back on                      
                                                                                
INIT0040 MVC   ATWAD,LP_ATWA       Set A(TWA)                                   
         MVC   ASECD,LP_ASECD      Set A(SECD)                                  
         MVC   ALS_D,LP_ASAVE      Set A(LS_D)                                  
         LAY   R0,MAP                                                           
         ST    R0,LP_AFMAP         Set A(FALINK emulation map)                  
         LA    R0,LP_REQM                                                       
         ST    R0,LP_AREQM         Set A(request mask)                          
         LARL  R0,TSTMSK                                                        
         ST    R0,LP_ATSTM         Set A(TSTMSK routine)                        
         LARL  R0,GETSDR                                                        
         ST    R0,LP_AGSDR         Set A(GETSDR routine)                        
                                                                                
***********************************************************************         
* The following code sets the addresses of all DDLINK routines if     *         
* they have not already been initialized (on-line they will always be *         
* zeroes)                                                             *         
***********************************************************************         
                                                                                
         CLC   LP_ASETK,FZERO                                                   
         JNE   INIT0050                                                         
         LARL  R0,SETKEY                                                        
         ST    R0,LP_ASETK                                                      
INIT0050 CLC   LP_APUTO,FZERO                                                   
         JNE   INIT0060                                                         
         LARL  R0,OUTPUT                                                        
         ST    R0,LP_APUTO                                                      
INIT0060 CLC   LP_AAWMP,FZERO                                                   
         JNE   INIT0070                                                         
         LARL  R0,ADDWMP                                                        
         ST    R0,LP_AAWMP                                                      
INIT0070 CLC   LP_ARECP,FZERO                                                   
         JNE   INIT0080                                                         
         LARL  R0,RECP                                                          
         ST    R0,LP_ARECP                                                      
INIT0080 CLC   LP_AVMAP,FZERO                                                   
         JNE   INIT0090                                                         
         LARL  R0,VMAP                                                          
         ST    R0,LP_AVMAP                                                      
INIT0090 CLC   LP_AVSTR,FZERO                                                   
         JNE   INIT0100                                                         
         LARL  R0,VSTR                                                          
         ST    R0,LP_AVSTR                                                      
INIT0100 CLC   LP_AVINP,FZERO                                                   
         JNE   INIT0110                                                         
         LARL  R0,VINP                                                          
         ST    R0,LP_AVINP                                                      
INIT0110 CLC   LP_AEOUT,FZERO                                                   
         JNE   INIT0120                                                         
         LARL  R0,EOUT                                                          
         ST    R0,LP_AEOUT                                                      
INIT0120 CLC   LP_APARY,FZERO                                                   
         JNE   INIT0130                                                         
         LARL  R0,PUTARY                                                        
         ST    R0,LP_APARY                                                      
INIT0130 CLC   LP_AARYP,FZERO                                                   
         JNE   INIT0140                                                         
         LARL  R0,ARYPUT                                                        
         ST    R0,LP_AARYP                                                      
INIT0140 CLC   LP_ARUNR,FZERO                                                   
         JNE   INIT0150                                                         
         LARL  R0,RUNR                                                          
         ST    R0,LP_ARUNR                                                      
INIT0150 CLC   LP_AMQGT,FZERO                                                   
         JNE   INIT0160                                                         
         LARL  R0,MQGET                                                         
         ST    R0,LP_AMQGT                                                      
INIT0160 CLC   LP_ARUN,FZERO                                                    
         JNE   INIT0170                                                         
         LARL  R0,RUN                                                           
         ST    R0,LP_ARUN                                                       
INIT0170 CLC   LP_AGREQ,FZERO                                                   
         JNE   INIT0180                                                         
         LARL  R0,GREQ                                                          
         ST    R0,LP_AGREQ                                                      
INIT0180 CLC   LP_AGMQR,FZERO                                                   
         JNE   INIT0190                                                         
         LARL  R0,GMQR                                                          
         ST    R0,LP_AGMQR                                                      
INIT0190 CLC   LP_ABMQD,FZERO                                                   
         JNE   INIT0200                                                         
         LARL  R0,BLDMQD                                                        
         ST    R0,LP_ABMQD                                                      
INIT0200 CLC   LP_AFPUT,FZERO                                                   
         JNE   INIT0210                                                         
         LARL  R0,FLDPUT                                                        
         ST    R0,LP_AFPUT                                                      
INIT0210 CLC   LP_AGSVR,FZERO                                                   
         JNE   INIT0220                                                         
         LARL  R0,GOSVR                                                         
         ST    R0,LP_AGSVR                                                      
INIT0220 CLC   LP_ABMMI,FZERO                                                   
         JNE   INIT0230                                                         
         LARL  R0,BMMI                                                          
         ST    R0,LP_ABMMI                                                      
INIT0230 CLC   LP_ALMAP,FZERO                                                   
         JNE   INIT0240                                                         
         LARL  R0,LMAP                                                          
         ST    R0,LP_ALMAP                                                      
INIT0240 CLC   LP_ABREQ,FZERO                                                   
         JNE   INIT0250                                                         
         LARL  R0,BREQ                                                          
         ST    R0,LP_ABREQ                                                      
INIT0250 CLC   LP_ASSEC,FZERO                                                   
         JNE   INIT0260                                                         
         LARL  R0,SETSEC                                                        
         ST    R0,LP_ASSEC                                                      
INIT0260 CLC   LP_ABSRC,FZERO                                                   
         JNE   INIT0270                                                         
         LARL  R0,BINSRCH                                                       
         ST    R0,LP_ABSRC                                                      
INIT0270 CLC   LP_ARREQ,FZERO                                                   
         JNE   INIT0280                                                         
         LARL  R0,RREQ                                                          
         ST    R0,LP_ARREQ                                                      
                                                                                
***********************************************************************         
* Extract run variables                                               *         
***********************************************************************         
                                                                                
INIT0280 ICM   RE,15,LP_ARUNP                                                   
         JZ    DEATH001                                                         
         SR    R2,R2                                                            
         ICM   R2,7,RUNPARUN-RUNPARMD(RE)                                       
         JZ    DEATH002                                                         
         ST    R2,ARUNFACS                                                      
                                                                                
         USING RUNFACSD,R2         Extract RUNFACS values                       
         L     RE,LP_ACOM          Set LINKIO/WRKIO addresses                   
         MVC   LINKIO,CLINKIO-COMFACSD(RE)                                      
         MVC   AMASTD,RMASTC                                                    
         MVC   RUNASEO,RSEOLST                                                  
         MVC   RUNIT,RRUNIT                                                     
         MVC   DYNALLOC,RDYNALOC                                                
         MVC   MQI,RMQI                                                         
         MVC   ASVRSAVE,RSVRSAVE                                                
         MVC   SAVESIZE,RSAVSIZE   Set server save size (RUNNER)                
         MVC   RUNASVR,RASVR                                                    
         MVC   ASYSFACS,RSYSFACS                                                
         MVC   AVALPAR,RVALPAR                                                  
         MVC   AWRKBLK1,RWRKBLK1                                                
         MVC   AWRKBLK2,RWRKBLK2                                                
         MVC   AWRKBLKR,RWRKBLKR                                                
         OC    AWRKBLK,RWRKBLK     RUNNER sets RWRKBLK                          
         JNZ   *+10                                                             
         MVC   AWRKBLK,AWRKBLK1    Set to first if on-line                      
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    INIT0300                                                         
                                                                                
***********************************************************************         
* Off-Line                                                            *         
***********************************************************************         
                                                                                
         MVC   LINKIO,RLINKIO      Use RUNFACS version of LINKIO                
         MVC   LP_TALET,RALET      Extract RUNNER Tabs ALET                     
         MVC   RUNAQUE,RAQUE       Extract A(queue entry)                       
                                                                                
         GOTOR LP_ARUNR            Call RUNNER interface                        
                                                                                
INIT0290 ICM   R0,15,SVALPXD       Test/set RUNNER saved XVARS address          
         JZ    EXITY                                                            
         ST    R0,LP_ALPXD         Restore it if set and                        
         LHI   R1,LP_XLNQ          copy XVARS back to RUNNER storage            
         LA    RE,LPXVARS                                                       
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* On-line                                                             *         
***********************************************************************         
                                                                                
INIT0300 L     R3,LP_ASAVE                                                      
         USING LS_D,R3             Point to DDLINK save area                    
                                                                                
         GOTOR FALK                Call FALINK interface                        
                                                                                
         CLC   LS_EYE,LSDEYE       Ensure SAVED is intact                       
         JNE   DEATH999                                                         
                                                                                
         MVC   LS_TALET,LP_TALET   Save LP_D/LP_XD values in LS_D               
         MVC   LS_AUTH,LP_AUTH                                                  
         MVC   LS_ACCS,LP_ACCS                                                  
         MVC   LS_CUAGY,LP_CUAGY                                                
         MVC   LS_AGY,LP_AGY                                                    
         MVC   LS_SECNO,LP_SECNO                                                
         MVC   LS_LANG,LP_LANG                                                  
         MVC   LS_CTRY,LP_CTRY                                                  
         MVC   LS_LUID,LP_LUID                                                  
         MVC   LS_XPINF,LP_XPINF                                                
         MVC   LS_SENO,LP_SENO                                                  
         CLC   LP_QMAPN,FZERO      Test new map code established                
         JE    *+10                                                             
         MVC   LS_QMAPN,LP_QMAPN   Yes - save it                                
         MVC   LS_FAVER,LP_FAVER                                                
         MVC   LS_ASSB,ASSB                                                     
         J     EXITY                                                            
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* On-line FALINK interface                                            *         
***********************************************************************         
                                                                                
         USING FAWSSVRD,WORK                                                    
         USING GLVXCTLD,WORK                                                    
                                                                                
FALK     NTR1  LABEL=*                                                          
         ST    RD,LP_SVRD          Save w/s pointer (for unwind)                
         ST    RD,UNWINDRD         Save current RD value                        
                                                                                
         CLC   LS_EYE,LSDEYE       Test LS_D eyecatcher intact                  
         JE    FALK0010                                                         
         LA    R0,LS_D             No - initialize                              
         LHI   R1,LS_LNQ                                                        
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         MVC   LS_EYE,LSDEYE       Set save storage eyecatcher                  
                                                                                
FALK0010 L     RF,LP_ACOM                                                       
         L     RF,CXTRAINF-COMFACSD(RF)                                         
         MVC   LP_XTRAV,0(RF)                                                   
                                                                                
         CLC   LS_SVALS(LS_SVALL),NULLS                                         
         JE    FALK0030                                                         
         MVC   LP_TALET,LS_TALET   Use saved values if present                  
         MVC   LP_AUTH,LS_AUTH                                                  
         MVC   LP_ACCS,LS_ACCS                                                  
         MVC   LP_CUAGY,LS_CUAGY                                                
         MVC   LP_AGY,LS_AGY                                                    
         MVC   LP_SECNO,LS_SECNO                                                
         MVC   LP_LANG,LS_LANG                                                  
         MVC   LP_CTRY,LS_CTRY                                                  
         MVC   LP_LUID,LS_LUID                                                  
         MVC   LP_XPINF,LS_XPINF                                                
         MVC   LP_SENO,LS_SENO                                                  
         MVC   LP_VRSN,LS_VRSN                                                  
         MVC   LP_FAVER,LS_FAVER                                                
         MVC   ASSB,LS_ASSB                                                     
         J     FALK0040                                                         
                                                                                
FALK0030 MVC   DMCB,EFFS           Establish variables for new session          
         MVI   DMCB,X'FE'                                                       
         GOTOR SWITCH,DMCB         Extract TABS ALET from SSB                   
         L     R1,0(R1)                                                         
         L     R1,VSSB-SYSFACD(R1)                                              
         ST    R1,ASSB                                                          
         MVC   LP_TALET,SSBTBLET-SSBD(R1)                                       
                                                                                
         GOTOR GETFACT,DMCB,(X'80',0),F#UTLD                                    
         L     R1,0(R1)                                                         
U        USING F@UTLD,R1           Extract connect variables                    
         MVC   LP_AUTH,U.F@TAUTH                                                
         MVC   LP_CUAGY,U.F@TAGY                                                
         MVC   LP_AGY,U.F@TAGY                                                  
         MVC   LP_SECNO,U.F@TPASS                                               
         MVC   LP_LANG,U.F@TLANG                                                
         MVC   LP_CTRY,U.F@TAGCTR                                               
         MVC   LP_LUID,U.F@TSYM                                                 
         MVC   LP_XPINF,U.F@TXPINF                                              
         MVC   LP_SENO,U.F@TSYS                                                 
         MVC   LS_TSTA1,U.F@TSTAT1                                              
                                                                                
         MVC   LP_ACCS,U.F@TACCS   Set limit access                             
         TM    U.F@TTEST,TTESTTAC  If connected with I=xxxx set                 
         JZ    FALK0040            limit access from test table entry           
         ICM   RF,15,LP_ACCS                                                    
         MVC   LP_ACCS,TSTTACCS-TSTTABD(RF)                                     
         DROP  U                                                                
                                                                                
LPX      USING TXPINFO,LP_XPINF                                                 
                                                                                
FALK0040 TM    LS_TSTA1,TSTATDDS   Test/set DDS terminal indicator              
         JZ    *+8                                                              
         OI    INDQDDST,INDSDDST   Set DDS terminal indicator                   
                                                                                
         GOTOR GETSEC,0            Establish security settings                  
                                                                                
         L     RE,LP_AFBLK                                                      
         MVI   FALAINDS-FALINKD(RE),0                                           
         L     R8,FALABLD-FALINKD(,RE)                                          
         USING LT_D,R8             R8=A(TWA control field header)               
         USING FLDHDRD,LT_CHDR                                                  
         OI    FLDOIND,FOUTCUR                                                  
                                                                                
         OI    LT_CTRL,C' '        Ensure control is upper case                 
         GOTOR LP_ABMMI            Build extended index if required             
         JNE   EXIT                                                             
         CLI   LT_CACTN,LT_CAFBQ   Test menu request                            
         JE    FALK0050                                                         
         CLI   LT_CACTN,LT_CANBQ   Test request detail                          
         JE    FALK0050                                                         
         CLC   LS_QMAPN,NULLS      Initialize for last known map                
         JE    FALK0050                                                         
         MVI   LS_PHASE,0                                                       
         GOTOR LP_AVMAP,PARM,('VMNOWKQ+VMINDSQ',LS_QMAPN)                       
                                                                                
FALK0050 TM    LS_INDS1,LS_IGLOB   Test return from called application          
         JNZ   FALK0090                                                         
                                                                                
***********************************************************************         
* For DDS terminals look at PfKey for menu options                    *         
***********************************************************************         
                                                                                
         TM    INDQDDST,INDSDDST   Don't test PfKey if not DDS terminal         
         JZ    FALK0060                                                         
                                                                                
         ICM   RF,15,LP_ATIOB                                                   
         JZ    FALK0060                                                         
         USING TIOBD,RF                                                         
         MVC   PFKEY,TIOBAID       Extract PfKey                                
         MVC   CURDISP,TIOBCURD    Extract displacement to input field          
         DROP  RF                                                               
                                                                                
         CLI   PFKEY,0             Test PfKey entered                           
         JE    FALK0060                                                         
                                                                                
         CLI   PFKEY,PFKMENQ       Test request menu PfKey pressed              
         JE    FABRFRST                                                         
         CLI   PFKEY,PFKSSTQ       Test server table PfKey pressed              
         JE    FASS                                                             
         CLI   PFKEY,PFKQSTQ       Test queue table PfKey pressed               
         JE    FAQS                                                             
         CLI   PFKEY,PFKCMDQ       Test send command PfKey pressed              
         JE    FASC                                                             
                                                                                
         CLI   PFKEY,PFKSUPQ       Test scroll up                               
         JNE   FALK0052                                                         
         TM    LS_BMODE,LS_BMSUP   Test scroll up is valid                      
         JNZ   FALK0060                                                         
         J     EXITY                                                            
                                                                                
FALK0052 CLI   PFKEY,PFKSDNQ       Test scroll down                             
         JNE   FALK0054                                                         
         TM    LS_BMODE,LS_BMSDN   Test scroll down is valid                    
         JNZ   FALK0060                                                         
         J     EXITY                                                            
                                                                                
FALK0054 CLI   PFKEY,PFKPSTQ       Test paste string                            
         JNE   FALK0056                                                         
         TM    LS_IIND1,LS_ICOPY   Test have copy string available              
         JNZ   FAPS                                                             
         J     EXITY                                                            
                                                                                
FALK0056 CLI   PFKEY,PFKSELQ       Test select PfKey entered                    
         JNE   FALK0060                                                         
         TM    LS_BMODE,LS_BMSMI+LS_BMSSI                                       
         JZ    EXITY                                                            
                                                                                
***********************************************************************         
* Validate the action field                                           *         
***********************************************************************         
                                                                                
FALK0060 CLI   LT_CACTN,SPACEQ     Test no action entered                       
         JE    FALK0150                                                         
         CLI   LT_CACTN,LT_CERRQ   Exit if 'error' action                       
         JE    EXITY                                                            
         TM    INDQDDST,INDSDDST   Test DDS terminal                            
         JZ    FALK0070                                                         
                                                                                
***********************************************************************         
* Validate DDLINK interface options (DDS only)                        *         
***********************************************************************         
                                                                                
         CLI   LT_CACTN,LT_CHLPQ   Test help for action request                 
         JE    FAHELP                                                           
         CLI   LT_CACTN,LT_CASSQ   Test action is server list                   
         JE    FASS                                                             
         CLI   LT_CACTN,LT_CAQSQ   Test action is queue list                    
         JE    FAQS                                                             
         CLI   LT_CACTN,LT_CASCQ   Test action is send command                  
         JE    FASC                                                             
         CLI   LT_CACTN,LT_CXCQQ   Test action is clear queue                   
         JE    FACQ                                                             
         CLI   LT_CACTN,LT_CCMDQ   Test action is set command                   
         JE    FAEC                                                             
         CLI   LT_COPTN,LT_CCMDQ   Test option is set command                   
         JE    FAEC                                                             
         CLI   LT_CACTN,LT_CAFBQ   Test first for build request                 
         JE    FABRFRST                                                         
         CLI   LT_CACTN,LT_CANBQ   Test next for build request                  
         JE    FABRNEXT                                                         
                                                                                
***********************************************************************         
* Validate FALINK interface options                                   *         
***********************************************************************         
                                                                                
FALK0070 CLI   LT_CACTN,LT_CSTAQ   Test action is job status                    
         JE    FAJS                                                             
                                                                                
         CLI   LT_CACTN,LT_CANVQ   Test for new version                         
         JE    FALK0080                                                         
         CLI   LT_CACTN,LT_CANEQ   and new expanded version                     
         JE    FALK0080                                                         
         CLI   LT_CACTN,LT_CAVNQ   and old version                              
         JE    FALK0080                                                         
         CLI   LT_CACTN,LT_CAEVQ   and old expanded version                     
         JNE   FALK0090                                                         
                                                                                
         USING RSVRADDR,SERVER                                                  
FALK0080 GOTOR CANWRK              Cancel any outstanding work                  
         MVC   LS_WKEY,NULLS       Clear saved worker file key                  
                                                                                
         TM    LT_FAVER+0,ZONEBITS Test PC comms version present                
         JNO   FALK0090                                                         
         PACK  DUB,LT_FAVER(1)     Yes - extract it                             
         TM    LT_FAVER+1,ZONEBITS                                              
         JNO   *+10                                                             
         PACK  DUB,LT_FAVER(2)                                                  
         CVB   R0,DUB                                                           
         STC   R0,LP_FAVER         Set PC comms version number                  
                                                                                
FALK0090 CLI   LP_FAVER,0          Test PC version given                        
         JNE   *+8                                                              
         MVI   LP_FAVER,VERSION#   Set default PC comms version number          
                                                                                
         TM    LS_INDS1,LS_IGLOB   Test return from called application          
         JZ    FALK0120                                                         
         TM    LS_INDS1,LS_IDIAL   Test dialogue mode with caller               
         JZ    FALK0110                                                         
         NI    LS_INDS1,FF-(LS_IDIAL)                                           
                                                                                
         GOTOR GLOBBER,DMCB,GLGET,GLVXFRSY,GLVXLENQ,GLVXCTL                     
         TM    GLVXFLG1,GLV1SIDE   Test callee session set                      
         JZ    FALK0110                                                         
         LA    R1,LS_SEST                                                       
SES      USING LS_SEST,R1          R1=A(session switch table)                   
         LHI   R0,LS_SESTM         R0=maximum # of sessions supported           
         BASR  RE,0                Look for free session table entry            
         CLC   SES.LS_SEST(LS_SESTL),NULLS                                      
         JE    FALK0100                                                         
         CLC   SES.LS_SESTS(L'LS_SESTS+L'LS_SESTP),GLVXTOSY                     
         JE    FALK0100            Update entry if already there as             
         AHI   R1,LS_SESTL         the session numbers may change               
         BCTR  R0,RE                                                            
         MVC   SES.LS_SEST(LS_SESTL*(LS_SESTM-1)),SES.LS_SEST+LS_SESTL          
         SHI   R1,LS_SESTL         Free entry not found - use last              
                                                                                
FALK0100 MVC   SES.LS_SESTS,GLVXTOSY  Build session switch table entry          
         MVC   SES.LS_SESTP,GLVXTOPR                                            
         MVC   SES.LS_SEST#,GLVXSESR                                            
         DROP  SES                                                              
                                                                                
FALK0110 GOTOR GLOBBER,DMCB,GLCLR  Clear the globals                            
         MVI   LT_CACTN,LT_CADLQ                                                
         MVI   LT_CCTRL,LT_CCFTQ                                                
         TM    LS_INDS1,LS_IXPND   Test expanded download requested             
         JZ    FALK0150                                                         
         NI    LS_INDS1,FF-(LS_IXPND)                                           
         MVI   LT_COPTN,LT_COXDQ   Yes - do expanded download                   
         J     FALK0150                                                         
                                                                                
***********************************************************************         
* For DDS terminals allow on-line/off-line override                   *         
***********************************************************************         
                                                                                
FALK0120 TM    INDQDDST,INDSDDST   Test DDS terminal                            
         JZ    FALK0140                                                         
         CLI   LT_CACTN,LT_CARNQ   Test option to run now                       
         JNE   FALK0130                                                         
         NI    LP_RUNI,FF-(LP_RDSCQ)                                            
         OI    LP_RUNI1,LP_RNOWQ                                                
         MVI   LT_CACTN,LT_CAULQ   Reset to upload                              
         J     FALK0150                                                         
                                                                                
FALK0130 CLI   LT_CACTN,LT_CARXQ   Test option to run off-line                  
         JNE   FALK0140                                                         
         NI    LP_RUNI1,FF-(LP_RNOWQ)                                           
         OI    LP_RUNI1,LP_RDSCQ                                                
         MVI   LT_CACTN,LT_CAULQ   Reset to upload                              
         MVI   LP_FAVER,VERSION#   Set default PC comms version                 
         MVC   LS_FAVER,LP_FAVER                                                
         J     FALK0150                                                         
                                                                                
FALK0140 CLI   LT_CACTN,LT_CANVQ   Version is always first time                 
         JE    FALK0142                                                         
         CLI   LT_CACTN,LT_CAVNQ   or old version number                        
         JE    FALK0142                                                         
         CLI   LT_CACTN,LT_CANEQ   or expanded version                          
         JE    FALK0142                                                         
         CLI   LT_CACTN,LT_CAEVQ   or old expanded version                      
         JE    FALK0142                                                         
         CLI   LT_CACTN,LT_CAULQ   or upload                                    
         JE    FALK0142                                                         
         CLI   LT_CCTRL,LT_CCFTQ   or real test first time                      
         JNE   FALK0150                                                         
FALK0142 MVC   LP_RUNI,NULLS       Clear run indicators when new work           
         MVC   LS_QMAPN,NULLS      and saved map number also                    
                                                                                
FALK0150 ICM   R2,15,AWRKBLK       Test WRKIO block is passed                   
         JZ    FALK0160                                                         
         USING WRKIOD,R2           Initialize worker file key                   
         MVC   WRKWUSID,LP_USRID                                                
         MVC   WRKWSPS,RSVRSYSC                                                 
         MVC   WRKWDAY,DAYTODAY                                                 
         MVI   WRKWCLS,WRKWCLSQ                                                 
         DROP  R2                                                               
                                                                                
FALK0160 L     R4,LP_AFBLK                                                      
         USING FALINKD,R4          R4=A(FALINK control block)                   
                                                                                
         LARL  R0,FARD                                                          
         ST    R0,FALARCV          Set A(receive data routine)                  
         LARL  R0,FASD                                                          
         ST    R0,FALASND          Set A(send data routine)                     
         MVC   FALATRN,LP_AVMAP    Set A(translate element routine)             
         MVC   FALAHOOK,FZERO                                                   
         MVI   FALAWHEN,0          Set no hooks required                        
         LARL  R0,FARETURN                                                      
         STCM  R0,15,FALASTP       Set A(dummy) save routine                    
         STCM  R0,15,FALARSM       Set A(dummy) resume routine                  
         LARL  R0,FABREAK                                                       
         STCM  R0,15,FALAFUL       Set A(break on full) routine                 
                                                                                
         CLI   LT_COPTN,LT_COXCQ   Test expanded with hex codes                 
         JNE   *+12                                                             
         MVI   LT_COPTN,LT_COXDQ   Yes - set expanded download                  
         OI    INDQXCOD,INDSXCOD   and flag for ADDDATA callers                 
                                                                                
         TM    LS_INDS1,LS_IGLOB   Test return from called application          
         JNZ   *+12                                                             
         CLI   LT_CACTN,LT_CADLQ   Test downloading                             
         JNE   FALK0170                                                         
                                                                                
         LARL  R0,SEND                                                          
         ST    R0,FALASND          Set A(send data routine)                     
         CLI   LT_COPTN,LT_COXDQ   Test expanded download                       
         JNE   FALK0170                                                         
         L     RF,LP_AFBLK         Set type embedded in data                    
         OI    FALAINDS-FALINKD(RF),FALAINDD                                    
                                                                                
FALK0170 GOTOR LP_AFALK,LP_AFBLK   Call FALINK to process input                 
                                                                                
         CLI   LP_RUNI1,FF         Test 'all done' from send routine            
         JNE   EXITY                                                            
         MVI   LT_CACTN,LT_CADLQ                                                
         MVI   LT_CCTRL,LT_CCFTQ                                                
                                                                                
         TM    LP_AIND1,LP_AISUD   Test set application data                    
         JZ    EXITY                                                            
         CLC   LS_QMAPN,NULLS      Test map number set                          
         JE    EXITY                                                            
         GOTOR GETFACT,DMCB,(X'80',LS_QMAPN),F#SETUSR                           
         J     EXITY                                                            
         DROP  R3,R4                                                            
         EJECT                                                                  
***********************************************************************         
* Off-line RUNNER interface                                           *         
***********************************************************************         
                                                                                
RUNR     NTR1  LABEL=*                                                          
         L     RF,LP_ALIOB                                                      
         MVC   LIOBACOM-LIOBD(,RF),LP_ACOM                                      
         L     RF,LP_ACOM                                                       
         LA    R0,LP_XTRAV         Set A(XTRAINFO) in COMFACS                   
         STCM  R0,15,CXTRAINF-COMFACSD(RF)                                      
                                                                                
         L     R1,LP_ARUNP         Extract RUNNER calling mode                  
         MVC   LP_CMODE,RUNPMODE-RUNPARMD(R1)                                   
                                                                                
         CLI   LP_CMODE,RRUNSTRQ   Test first time call                         
         JNE   RUNR0020                                                         
         ICM   RF,15,RUNASVR       Get primary server address                   
         JZ    DEATH003                                                         
         ST    RF,LP_ASVR1         Save A(start of primary server)              
                                                                                
         LHI   R0,LP_NSVRS         R0=maximum number of servers                 
         SR    R2,R2               R2=server index number                       
         L     R3,ASVRSAVE                                                      
         USING SS_D,R3             R3=A(server work area)                       
         LA    R4,LP_ASVR1         R4=A(server work index/address list)         
                                                                                
RUNR0010 SR    RF,RF                                                            
         ICM   RF,7,1(R4)          RF=A(server)                                 
         JZ    EXITY                                                            
         STC   R2,0(R4)            Set server work index number                 
         ST    RF,LP_ASVR          Set LP_ASVR to current                       
         MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
         LA    RF,SS_WORK                                                       
         L     RE,ARUNFACS                                                      
         ST    RF,RSVRSAVE-RUNFACSD(RE)                                         
         MVC   SS_AST1,ASTERS      Format '**SSPP**'                            
         MVC   SS_SYSP,RSVRSYSC                                                 
         MVC   SS_AST2,ASTERS                                                   
         MVC   SS_ADDR,0(R4)       Set A(server)                                
         MVC   SS_BEYE,SBLEYE      Set blocks eyecatcher                        
         MVC   SS_REYE,SRGEYE      Set registers eyecatcher                     
         MVC   SS_WEYE,SWKEYE      Set working storage eyecatcher               
         GOTOR LP_AGSVR,RSVRADDR   Call server for first time                   
         MVC   SS_BLKS,LP_BLKS     Save primary server blocks                   
         MVC   SS_R2RB,LP_R2RB     Save primary server registers                
         A     R3,SAVESIZE         Point to next server work area               
         AHI   R4,L'LP_ASVR1       Point to next server address in LP_D         
         AHI   R2,1                Bump work index number                       
         JCT   R0,RUNR0010         Do for number of servers                     
         J     EXITY                                                            
         DROP  R3                                                               
                                                                                
RUNR0020 CLI   LP_CMODE,RPRCCMDQ   Test process a command card                  
         JNE   RUNR0030                                                         
         GOTOR PRCCMD              Yes - call process command routine           
         J     EXITY                                                            
                                                                                
RUNR0030 CLI   LP_CMODE,RPRCWRKQ   Test process server work request             
         JE    RUNR0080                                                         
                                                                                
         CLI   LP_CMODE,RPRCREQQ   Test process batch work request              
         JNE   RUNR0050                                                         
         GOTOR LP_ARREQ            Call run batch request routine               
         J     EXITY                                                            
                                                                                
RUNR0050 CLI   LP_CMODE,RPRCMQMQ   Test process incoming MQ message             
         JNE   RUNR0070                                                         
                                                                                
         L     R1,ARUNFACS                                                      
         USING RUNFACSD,R1                                                      
         MVC   MQB,RMQBUFF         Set A(message) to start of buffer            
         MVC   MQL,RMQLDATA        Set total message length                     
                                                                                
         TM    LP_FLAG2,LP_FMQEQ   Test message from EDI queue                  
         JZ    RUNR0060                                                         
         L     R1,MQB              Adjust buffer address if EDI queue           
         SAM31 ,                                                                
         USING LM_D,R1                                                          
         ICM   RF,15,LM_LHDR       Get binary header length                     
         TM    LM_LHDR,X'F0'       Test ebcdic                                  
         JNO   *+14                                                             
         PACK  DUB,LM_LHDR         Yes - convert                                
         CVB   RF,DUB                                                           
         CHI   RF,LM_RLAB-LM_UKEY+L'LM_RLAB                                     
         JL    *+10                                                             
         MVC   LP_MQQUE,LM_RLAB                                                 
         CHI   RF,LM_RKEY-LM_UKEY+L'LM_RKEY                                     
         JL    *+10                                                             
         MVC   LP_MQKEY,LM_RKEY                                                 
         LA    RF,L'LM_LAB+L'LM_LHDR(RF)                                        
         ALR   R1,RF                                                            
         ST    R1,MQB              Set A(start of data)                         
         L     R1,MQL                                                           
         SR    R1,RF               Decrement header length                      
         ST    R1,MQL                                                           
         SAM24 ,                                                                
                                                                                
RUNR0060 L     RF,LP_ASECD         Preclear person security agency in           
         XC    SECOAGPE-SECD(,RF),SECOAGPE-SECD(RF) case not supplied           
         NI    INDSFILE,X'FF'-INDSOFIL-INDSIFIL                                 
         GOTOR LP_AMQGT,MGDATA     Get run control 1 record                     
         JNE   DEATH004                                                         
         CLC   LP_QMAPN,M#CTRL01   Message starts with run control 1?           
         JNE   DEATH004                                                         
         J     EXITY                                                            
                                                                                
RUNR0070 CLI   LP_CMODE,RPRCMQDQ   Test process incoming MQ data                
         JNE   EXITY                                                            
         L     R1,ARUNFACS                                                      
         USING RUNFACSD,R1                                                      
         MVC   MQB,RMQB            Restore message pointer                      
         MVC   MQL,RMQL            and remaining message length                 
                                                                                
         CLC   LP_DSNTO,NULLS      Test we have been given a DSN                
         JE    RUNR0072                                                         
         CLI   LP_DSNTO,C'*'       DSN text must start with a '*"               
         JE    *+6                                                              
         DC    H'0'                                                             
         OI    INDSFILE,INDSOFIL   Set output file requested                    
         CLI   LP_DSNTO+1,C' '     Test we have third level qualifier           
         JNH   RUNR0072                                                         
         MVC   DSNHLQ3,LP_DSNTO+1  Yes - save value                             
                                                                                
RUNR0072 CLC   LP_DSNTI,NULLS      Test we have been given a DSN                
         JE    RUNR0080                                                         
         OI    INDSFILE,INDSIFIL   Set input from disk file                     
                                                                                
RUNR0080 GOTOR LP_ARUN             Process the input request/message            
         J     EXITY                                                            
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* Process incoming MQ control message or upload data                  *         
***********************************************************************         
                                                                                
MGMAPO   EQU   0                   Get map code only                            
MGDATA   EQU   1                   Get record data                              
                                                                                
MQGET    NTR1  LABEL=*                                                          
                                                                                
         STC   R1,MGCALL           Save calling mode                            
         MVC   LP_AWMP,AWMP        Point to start of work map pool              
                                                                                
         TM    INDSFILE,INDSIFIL   Test input from disk file                    
         JZ    MQGET12             No                                           
         TM    INDSFILE,INDSIOPN   Test input file is open                      
         JNZ   MQGET02             Yes                                          
         GOTOR DYNALLOC,DMCB,('FF',EDIINP+40),(X'05',LP_DSNTI)                  
MQGET01  GOTOR OPNINP              Open the input file                          
         OI    INDSFILE,INDSIOPN   It is now                                    
         OI    INDSFILE,INDSI1ST   Going to get 1st rec in dataset              
                                                                                
MQGET02  L     R2,AWRKBLK          Get next record                              
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         LA    R1,EDIINP                                                        
         GET   (1),(2)                                                          
         LH    R3,0(R2)            Get length of input                          
         LA    R1,4(R3,R2)                                                      
         MVI   0(R1),FF            Move in an FF at end of record               
         SHI   R3,4                Subtract length of overhead                  
         AHI   R2,4                Adjust R2 to beginning of message            
         J     MQGET13             Process input string                         
                                                                                
MQGET04  GOTOR CLOINP              Close input file on end of file              
         NI    INDSFILE,FF-(INDSIOPN)                                           
         J     MQGETH                                                           
                                                                                
MQGET12  L     R2,MQB              R2=A(start of next input record)             
         L     R3,MQL              R3=length of input message                   
         SAM31 ,                   31 bit mode for this                         
                                                                                
***********************************************************************         
* Validate record map code                                            *         
***********************************************************************         
                                                                                
MQGET13  CLI   0(R2),C' '          Test end of message                          
         JNH   MQGETH                                                           
         CLI   0(R2),FF            Exit now if end of record                    
         JE    EXITY                                                            
                                                                                
         CLI   1(R2),C'='          Test pointing to map code                    
         JNE   DEATH005                                                         
         CLI   0(R2),C'A'          Only A thru D are allowed                    
         JL    DEATH006                                                         
         CLI   0(R2),C'D'                                                       
         JH    DEATH007                                                         
         MVC   BYTE1,0(R2)                                                      
         NI    BYTE1,X'07'                                                      
         LLC   R4,BYTE1            R4=length of record map code                 
         MVC   WORK3(4),2(R2)      What if close to end of message?             
         LA    R0,VMNOWKQ(R4)                                                   
         GOTOR LP_ABMMI            Build master map index for VMAP call         
         GOTOR LP_AVMAP,PARM,((R0),WORK3)                                       
                                                                                
         CLI   MGCALL,MGMAPO       Test get map code only                       
         JE    MQGETY02            Yes - exit                                   
                                                                                
         GOTOR CLRREQ              Clear request values                         
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Are we an upload?                            
         JNZ   MQGET14             Yes                                          
*                                  No, we're a download                         
         MVI   LP_CMODE,RPRCWRKQ   Call server to initialize request            
         GOTOR LP_AGSVR,RSVRADDR,XA=OFF                                         
         JNE   DEATH314                                                         
                                                                                
MQGET14  LA    R2,2(R2,R4)         Point to first data byte                     
         SHI   R3,2                Decrement remaining length                   
         SR    R3,R4                                                            
                                                                                
MQGET16  CHI   R3,1                Test end of message                          
         JNH   MQGETY                                                           
         CLI   0(R2),C' '          Test end of buffer                           
         JNH   MQGETY                                                           
                                                                                
***********************************************************************         
* Validate data length                                                *         
***********************************************************************         
                                                                                
         MVC   BYTE1,0(R2)         Extract length control                       
         AHI   R2,1                                                             
         SHI   R3,1                                                             
         SR    R4,R4               R4=length count                              
         CLI   BYTE1,LCHAR         Test +63 length control ('+')                
         JNE   MQGET20                                                          
                                                                                
MQGET18  AHI   R4,LCHARL           Add 63                                       
         MVC   BYTE1,0(R2)         Extract next length control                  
         AHI   R2,1                                                             
         SHI   R3,1                                                             
         CLI   BYTE1,LCHAR         Test +63 control                             
         JE    MQGET18                                                          
                                                                                
MQGET20  TR    BYTE1,INVLENS       Translate remaining length                   
         CLI   BYTE1,FF            Must be good                                 
         JE    DEATH008                                                         
         LLC   RF,BYTE1            Get remainder length                         
         AR    R4,RF               Add to total                                 
         STC   R4,BYTE2            Save value                                   
                                                                                
***********************************************************************         
* Validate data map code                                              *         
***********************************************************************         
                                                                                
         SR    R0,R0               R0=map count                                 
         CLI   0(R2),XCHAR         Test extended length control ('-')           
         JNE   MQGET22                                                          
         AHI   R2,1                                                             
         SHI   R3,1                                                             
         MVC   BYTE1,0(R2)                                                      
         TR    BYTE1,INVLENS       Translate base 63 value                      
         CLI   BYTE1,FF                                                         
         JE    DEATH009                                                         
         LLC   RF,BYTE1                                                         
         MHI   RF,LCHARL           Multiply by 63                               
         LA    R0,XBASIS(RF)       +189=base value                              
         AHI   R2,1                                                             
         SHI   R3,1                                                             
         J     MQGET24                                                          
                                                                                
MQGET22  CLI   0(R2),LCHAR         Test +63 length control (+)                  
         JNE   MQGET24                                                          
         AHI   R0,LCHARL           Yes - add and bump                           
         AHI   R2,1                                                             
         SHI   R3,1                                                             
         CLI   0(R2),LCHAR         Test another +63 length control (++)         
         JNE   MQGET24                                                          
         AHI   R0,LCHARL                                                        
         AHI   R2,1                                                             
         SHI   R3,1                                                             
                                                                                
MQGET24  MVC   BYTE1,0(R2)         Translate remainder (0-63)                   
         TR    BYTE1,INVLENS                                                    
         CLI   BYTE1,FF            Must be good                                 
         JE    DEATH010                                                         
         LLC   RF,BYTE1                                                         
         AR    R0,RF                                                            
         STH   R0,HALF1            HALF1 is data map code                       
                                                                                
         GOTOR FNDDTA,HALF1        Locate data map code                         
         ST    RF,AMD              Save A(map entry) for VSTR                   
         OI    LF_INDS-LF_D(RF),LF_FLDIQ                                        
                                                                                
         AHI   R2,1                Point to first byte of data                  
         SHI   R3,1                                                             
                                                                                
***********************************************************************         
* Extract and validate data string                                    *         
***********************************************************************         
                                                                                
         MVC   WORK3,NULLS                                                      
         SR    R1,R1                                                            
         ICM   R1,1,BYTE2          R1=data length                               
         JZ    MQGET26                                                          
         CR    R1,R3               Insurance                                    
         JH    DEATH011                                                         
         SHI   R1,1                                                             
         EX    R1,MQGMVCW2                                                      
         AHI   R1,1                                                             
         AR    R2,R1               Bump message pointer                         
         SR    R3,R1               Decrement remaining length                   
         JM    DEATH012                                                         
                                                                                
MQGET26  L     RE,AMD              Point to map entry                           
         SR    RF,RF                                                            
         ICM   RF,7,LF_ALD-LF_D(RE)                                             
         JZ    DEATH013                                                         
         TM    LF_INDS-LF_D(RE),LF_CTRLQ                                        
         JZ    MQGET28                                                          
C        USING LD_D,LDWORK         Build LD_D for control record                
         USING LB_DVALS,RF                                                      
         MVC   C.LD_D(LD_LNQ),NULLS                                             
         MVI   C.LD_IDF,LD_IDFCQ                                                
         MVC   C.LD_CODE,LB_DCODE                                               
         MVC   C.LD_INDS3,LB_DBLK#                                              
         MVC   C.LD_DISP,LB_DBDSP                                               
         MVC   C.LD_LEN,LB_DLEN                                                 
         MVC   C.LD_TYPE,LB_DITYP                                               
         LA    RF,C.LD_D           and point to it                              
         DROP  RF,C                                                             
                                                                                
MQGET28  LLC   R0,BYTE2            R0=L'data in WORK3                           
         GOTOR LP_AVSTR,DMCB,WORK3,(R0),(RF),0,XA=OFF                           
         JNE   DEATH014                                                         
                                                                                
         CHI   R3,1                Test any more data to process                
         JNH   MQGETY                                                           
         CLI   0(R2),FF            Test end of record                           
         JE    MQGETY                                                           
         CLI   0(R2),C' '                                                       
         JNH   MQGETY                                                           
         CLI   1(R2),C'='          Test end of current map                      
         JNE   MQGET16                                                          
                                                                                
MQGETY   L     RE,ARUNFACS                                                      
         USING RUNFACSD,RE                                                      
         ST    R2,RMQB             Set next data address                        
         ST    R2,MQB                                                           
         LTR   R3,R3                                                            
         JM    DEATH015                                                         
         ST    R3,RMQL             Set remaining message length                 
         ST    R3,MQL                                                           
         DROP  RE                                                               
                                                                                
MQGETY02 SAM24 ,                                                                
         J     EXITY                                                            
*                                                                               
MQGETH   SAM24 ,                                                                
         J     EXITH                                                            
         EJECT                                                                  
***********************************************************************         
* Handle running work in off-line batch processing mode               *         
***********************************************************************         
                                                                                
RREQ     NTR1  LABEL=*                                                          
         OI    INDQBTCH,INDSBTCH   Set running off-line batch mode              
                                                                                
         L     RF,AMASTD           Initialize global run values                 
         OI    LP_FLAG1,LP_FBTCH                                                
         MVC   LP_USRID,MCORIGID-MASTD(RF)                                      
         MVC   LP_LANG,MCLANG-MASTD(RF)                                         
         MVC   LP_CTRY,MCCTRY-MASTD(RF)                                         
         MVC   LP_ACCS,MCC1ACCS-MASTD(RF)                                       
         MVC   LP_AGY,MCIDAGYA-MASTD(RF)                                        
         MVC   LP_AGYB,MCIDAGYB-MASTD(RF)                                       
         MVC   LP_CUAGY,MCIDAGYA-MASTD(RF)                                      
         MVC   LP_AWMP,AWMP        Initialize work map pool pointer             
                                                                                
         L     R2,ARUNFACS                                                      
         L     R2,RREQUEST-RUNFACSD(R2)                                         
                                                                                
         USING RUNQD,R2            R2=A(request header)                         
         MVC   FOLDER,RUNQFLDR     Set folder id/password/request id            
         MVC   REQPASS,RUNQPASS                                                 
         MVC   REQUEST(REQUESTL),RUNQSRVR                                       
                                                                                
         GOTOR LP_AVMAP,DMCB,(L'REQMAPN+VMNOWKQ,REQMAPN)                        
                                                                                
         LA    RF,SYSTAB           Set system number for SOFDAT calls           
         LHI   R0,SYSTABN                                                       
RREQ0010 CLC   0(1,RF),RSVRSYSC                                                 
         JE    *+12                                                             
         AHI   RF,L'SYSTAB                                                      
         JCT   R0,RREQ0010                                                      
         MVC   LP_SOFSY,1(RF)                                                   
                                                                                
         MVI   LP_CMODE,RPRCWRKQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize request            
         JNE   DEATH016                                                         
                                                                                
         LA    R2,RUNQDATA                                                      
         USING RLPRDD,R2           R2=A(start of request data)                  
RREQ0020 CLI   RLPRDD,SPACEQ       Test end of request data                     
         JE    RREQ0040                                                         
                                                                                
         GOTOR HEXIN,DMCB,RLPRDMAP,REQUEST#,L'RLPRDMAP                          
         CLC   12(4,R1),NULLS                                                   
         JE    DEATH017                                                         
                                                                                
         L     RF,LP_AQMAP                                                      
         USING LD_D,RF                                                          
RREQ0030 CLI   LD_D,LD_EOTQ        Locate request data definition               
         JE    DEATH018                                                         
         CLC   LD_CODE,REQUEST#                                                 
         JE    *+12                                                             
         AHI   RF,LD_LNQ                                                        
         J     RREQ0030                                                         
         DROP  RF                                                               
                                                                                
         PACK  DUB,RLPRDLEN        Validate request data field                  
         CVB   R3,DUB                                                           
         GOTOR LP_AVSTR,DMCB,RLPRDATA,(R3),(RF),0                               
         JNE   DEATH019                                                         
         LA    R2,RLPRDD+RLPRDLNQ(R3)                                           
         J     RREQ0020                                                         
                                                                                
RREQ0040 L     R2,AWRKBLK                                                       
         USING WRKIOD,R2           R2=A(WRKIO control block)                    
                                                                                
         MVC   WRKWUSID,LP_USRID   Build key of output worker file              
         MVC   WRKWSPS,REQPASS                                                  
         MVC   WRKWDAY,DAYTODAY                                                 
         MVC   WRKWCLS,RSVRSYSC    Set class to system letter                   
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVC   WRKLRETH,RETBATCH   Set batch live retain hours                  
         MVI   WRKIACTN,WRKIANEW                                                
         GOTOR WRKIO,WRKIOD        Add worker file                              
         JNE   DEATH020                                                         
                                                                                
         GOTOR LP_ABREQ,BRREQQ     Build request record                         
                                                                                
         GOTOR WRKIO,WRKIOD        Add request record to worker file            
         JNE   DEATH021                                                         
                                                                                
         GOTOR LP_ARUN             Run the work request                         
                                                                                
RREQX    J     EXIT                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Run a work request (interface to server)                            *         
***********************************************************************         
                                                                                
RUN      NTR1  LABEL=*                                                          
         ST    RD,UNWINDRD         Save current RD pointer                      
                                                                                
         MVI   LP_QERR,0           Clear DDLINK request values                  
         MVC   LP_QVALS(LP_QVALL),NULLS                                         
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    RUN0002                                                          
         L     RF,AMASTD                                                        
D        USING MASTD,RF                                                         
         MVC   FACPAKID,D.MCFACPAK                                              
                                                                                
RUN0002  TM    LP_FLAG2,LP_FMQIM   Test MQ message                              
         JZ    RUN0006                                                          
         CLC   LP_SENO,D.MCIDSENO  Ensure SE numbers agree                      
         JNE   DEATH307                                                         
         L     RF,LP_ASECD                                                      
         MVI   SECINDS-SECD(RF),0  Initialize security values                   
         GOTOR SECRET,DMCB,('SECPINIT+SECPOVAL',LP_ASECD),0                     
         J     RUN0062                                                          
                                                                                
RUN0006  L     R7,AWRKBLK          Point to input worker file block             
         USING WRKIOD,R7                                                        
         NI    LP_FLAG1,FF-(LP_FFWRK)                                           
         TM    LP_RUNI1,LP_RUPLQ   Test upload & process in this task           
         JNZ   RUN0020                                                          
         TM    INDQBTCH,INDSBTCH   If not running in batch mode or              
         JNZ   RUN0010                                                          
         TM    LP_FLAG1,LP_FRUNX   not running other process on exit            
         JNZ   RUN0010                                                          
         ICM   R0,1,LP_INDS        Save/restore LP_INDS                         
         MVC   LP_VALS(LP_VALSL),NULLS                                          
         STCM  R0,1,LP_INDS                                                     
                                                                                
RUN0010  TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JNZ   RUN0020                                                          
         TM    LP_RUNI1,LP_RNOWQ   Test running now                             
         JNZ   RUN0030                                                          
                                                                                
RUN0020  TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   RUN0030                                                          
         MVC   LP_USRID,WRKWUSID   Set user-id from worker key                  
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    *+12                                                             
         TM    WRKISTAT,WRKISOPN   Test worker file open already                
         JNZ   RUN0030                                                          
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the input file                          
         JNE   DEATH022                                                         
         TM    LP_RUNI1,LP_RUPLQ   Test upload & process in this task           
         JNZ   RUN0090                                                          
         GOTOR WRKIO,WRKIOD        Read the request record                      
         JNE   DEATH023                                                         
                                                                                
RUN0030  L     R3,WRKIAREC                                                      
         AHI   R3,4                                                             
         TM    LP_FLAG1,LP_FRUNX   Test running other process on exit           
         JZ    *+8                                                              
         L     R3,ARUNXEL          Yes - point to RUNX element                  
         USING LQ_D,R3             R3=A(first data element on record)           
                                                                                
         TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   RUN0050                                                          
         CLI   LQ_EL,LQ_CTRLQ      Must start with a control element            
         JE    RUN0040                                                          
         TM    LP_FLAG1,LP_FRUNX   Test running other process on exit           
         JNZ   RUN0050                                                          
         J     DEATH024                                                         
                                                                                
***********************************************************************         
* We are about to overwrite the current request block from the input  *         
* record.  Isolate RUNNER global system bits and use those instead of *         
* the FACPAK settings                                                 *         
***********************************************************************         
                                                                                
RUN0040  MVC   WORK(L'LP_INDS),LP_INDS                                          
         NI    WORK,LP_IGLOB+LP_IOPN2+LP_IGLO2                                  
         MVC   LP_CVAL,LQ_CVAL     Set request control values                   
         NI    LP_INDS,FF-(LP_IGLOB+LP_IOPN2+LP_IGLO2)                          
         OC    LP_INDS,WORK        Set RUNNER global system bits                
                                                                                
         MVC   LP_OPTS,LQ_OPTS     Set options                                  
         MVC   LP_RECL,LQ_RECL     Set length of WKFILE record                  
         CLC   LQ_LN,=AL2(LQ_QVALS-LQ_D)                                        
         JNH   *+10                Set QVALS if passed in record                
         MVC   LP_QVALS(LP_QVALL),LQ_QVALS                                      
         ICM   RF,15,AMASTD        Set country/language etc. in MASTC           
         JZ    RUN0050                                                          
         MVC   MCLANG-MASTD(,RF),LP_LANG                                        
         MVC   MCCTRY-MASTD(,RF),LP_CTRY                                        
         MVC   MCC1ACCS-MASTD(,RF),LP_ACCS                                      
         MVC   MCRFHDR-MASTD+RQHPSWD-RQHITRM(L'RQHPSWD,RF),LP_SECNO             
                                                                                
RUN0050  CLC   LP_QMAPN,NULLS      Test we have map number                      
         JE    DEATH025            No - can't process                           
         GOTOR LP_ALMAP,LP_QMAPN   Look up input map entry                      
         JNE   DEATH026            Can't find - can't process                   
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JZ    RUN0070                                                          
                                                                                
         LLH   R0,LQ_LN                                                         
         AR    R3,R0               Bump to next element                         
         CLI   LQ_EL,LQ_SECVQ      Test security element                        
         JNE   RUN0060                                                          
         GOTOR LP_ASSEC,LQ_D       Yes - intialize SECRET block                 
                                                                                
RUN0060  TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   RUN0070                                                          
                                                                                
RUN0062  TM    LP_FLAG2,LP_FMQIM   Test MQ message input                        
         JNZ   RUNUO                                                            
         TM    LP_INDS,LP_IOUPD    Test RUNNER upload                           
         JNZ   RUNUO                                                            
                                                                                
         MVI   LP_CMODE,RPRCWRKQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize request            
         JNE   DEATH030                                                         
                                                                                
RUN0070  GOTOR LP_AGREQ,GRDLDQ     Process download request elements            
                                                                                
         L     R1,LP_ARUNP                                                      
         MVI   LP_CMODE,RVALREQQ   Pass validate request to server              
         GOTOR LP_AGSVR,RSVRADDR                                                
         JNE   DEATH031                                                         
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JNZ   RUN0080                                                          
         TM    LP_RUNI1,LP_RNOWQ   Test running now                             
         JNZ   RUN0090                                                          
                                                                                
RUN0080  TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   RUN0090                                                          
         MVI   WRKIACTN,WRKIAAPP   Open worker file for append                  
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH032                                                         
                                                                                
RUN0090  TM    LP_INDS,LP_IOUPD    Test RUNNER upload (on-line)                 
         JNZ   RUNUO                                                            
                                                                                
         TM    RSVRIND1,RSVRLKIO   Test using LINKIO for output                 
         JZ    RUN0130                                                          
         TM    LP_RUNI1,LP_RUPLQ   Test this is an upload file                  
         JNZ   RUN0100                                                          
         GOTOR LINKIO,DMCB,('LIOAOFI',LP_ALIOB)                                 
         J     RUN0130                                                          
                                                                                
RUN0100  OI    INDQUPLD,INDSUPLD   Set LINKIO upload                            
         LAY   RF,MAP                                                           
         USING LIOBD,RF            Initialize LINKIO control block              
         ST    RF,LP_ALIOB         Set A(LIOB) for application                  
         MVC   LIOBD(LIOBWORK-LIOBD),NULLS                                      
         MVC   LIOBAWRK,AWRKBLK                                                 
         TM    LP_INDS,LP_IOUPD    Test/set RUNNER upload                       
         JZ    *+8                                                              
         MVI   LIOBIND2,LIOBIRUP                                                
         DROP  RF                                                               
         MVI   LP_CMODE,RINIREQQ   Pass initialize request to server            
         GOTOR LP_AGSVR,RSVRADDR   (to fill in block addresses)                 
         GOTOR LINKIO,DMCB,('LIOAUPI',LP_ALIOB)                                 
                                                                                
RUN0110  GOTOR LINKIO,DMCB,('LIOAGET',LP_ALIOB)                                 
         JNE   RUN0200                                                          
                                                                                
RUN0120  GOTOR LP_AGREQ,GRUPLQ     Process upload record elements               
         JL    RUN0110             End of request - get next record             
                                                                                
RUN0130  MVI   LP_CMODE,RRUNREQQ   Pass run request call to server              
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JE    RUN0140                                                          
         CLC   LP_MQQUE,NULLS      Can't handle errors for MQ output            
         JNE   RUN0140                                                          
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JNZ   RUN0132                                                          
         GOTOR FAINPERR            No - return error                            
                                                                                
RUN0132  CLC   LP_ERROR,NULLS      Did server return error message              
         JE    RUN0160                                                          
         L     R3,WRKIAREC         Yes - build and add error record             
         AHI   R3,4                                                             
         MVI   LQ_EL,LQ_ERRRQ                                                   
         LHI   R0,LQ_LNEQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_ERRMN,LP_ERROR                                                
         MVC   LQ_ERRMS,LP_EMSYS                                                
         MVI   LQ_D+LQ_LNEQ,0                                                   
         AR    R0,R3                                                            
         AHI   R0,1                                                             
         L     R3,WRKIAREC                                                      
         SR    R0,R3                                                            
         SLL   R0,16                                                            
         STCM  R0,15,0(R3)                                                      
         MVI   WRKIACTN,WRKIAADD                                                
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH033                                                         
                                                                                
RUN0140  TM    INDQRLPD,INDSRLPD   Test RLP download in progress                
         JNZ   RUNX                                                             
         TM    INDQUPLD,INDSUPLD   Test DDLINK upload                           
         JNZ   RUN0120             Yes - get next input record                  
         TM    RSVRIND1,RSVRLKIO   Test using LINKIO for output                 
         JZ    RUN0150                                                          
         GOTOR LINKIO,DMCB,('LIOAPUT',LP_ALIOB),('LIOTEND',0)                   
                                                                                
RUN0150  TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JNZ   RUN0160                                                          
         TM    LP_RUNI1,LP_RUPLQ   Test upload & process in this task           
         JNZ   RUNX                                                             
         TM    LP_RUNI1,LP_RNOWQ   Test running now                             
         JNZ   RUN0190                                                          
                                                                                
RUN0160  TM    INDQRLPD,INDSRLPD   Test RLP download in progress                
         JNZ   RUNX                                                             
         CLC   LP_MQQUE,NULLS      Test MQ output                               
         JNE   *+14                                                             
         CLC   LP_MQSVR,NULLS      Test sending to external service             
         JE    RUN0170                                                          
         GOTOR LP_ARECP,RPENDQ     Call RECP to put MQ buffer                   
         L     R7,AWRKBLK1                                                      
         MVI   WRKIACTN,WRKIACLO                                                
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH034                                                         
         MVI   WRKIACTN,WRKIAOPN   Re-open the worker file                      
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH035                                                         
         GOTOR DMGR,WRKIPARM,WSP   Purge the worker file                        
         J     RUNX                                                             
                                                                                
RUN0170  L     R7,AWRKBLK          Point to current worker block                
         MVI   WRKIACTN,WRKIACLO   Close the worker file                        
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH036                                                         
         TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JZ    RUNX                                                             
                                                                                
         MVI   WRKIACTN,WRKIAOPN   Re-open the worker file                      
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH037                                                         
                                                                                
         L     R3,WRKIAREC         Read request record                          
         LHI   R0,1                                                             
         STCM  R0,15,0(R3)                                                      
         MVC   4(4,R3),REC#                                                     
         MVC   8(4,R3),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JNE   RUN0180                                                          
                                                                                
         GOTOR UPDREQ,(R3)         Update run statistics element                
                                                                                
         MVI   WRKIACTN,WRKIAPUT                                                
         GOTOR WRKIO,WRKIOD        Write back request record                    
         JNE   DEATH038                                                         
                                                                                
RUN0180  GOTOR DMGR,WRKIPARM,WSK   Set file status to keep                      
         JNE   DEATH039                                                         
         J     RUNX                                                             
                                                                                
RUN0190  TM    LP_FLAG1,LP_FRUNX   Test running other process on exit           
         JNZ   RUNX                                                             
         GOTOR ADDDATA,DMCB,LP_AFBLK,FALADNE,FALADNE,0                          
         J     RUNX                                                             
                                                                                
RUN0200  MVI   LP_CMODE,RRUNENDQ   Pass last time request to server             
         GOTOR LP_AGSVR,RSVRADDR                                                
         NI    INDQUPLD,FF-(INDSUPLD)                                           
         NI    INDQINIT,FF-(INDSINIT)                                           
         J     RUNX                                                             
         EJECT                                                                  
***********************************************************************         
* Handle RUNNER uploads                                               *         
***********************************************************************         
                                                                                
RUNUO    TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   RUNUO02                                                          
                                                                                
         LARL  RE,EXITY            No - acquire storage for FACWRK I/O          
         NMOD1 RWWORKL,**RWRK**,CLEAR=YES                                       
         LR    RF,RC               RF=A(acquired storage)                       
         USING RWWORKD,RF                                                       
W        USING WRKIOD,RWWRKBLK     Build on-line FACWRK info                    
         L     RC,LP_AWORK         Reset RC to DDLINK w/s                       
         LAY   R0,RWWRKBLK                                                      
         ST    R0,AWRKBLKR         Set A(FACWRK WRKIO block)                    
         LAY   R0,RWIO                                                          
         ST    R0,W.WRKIAREC       Set A(FACWRK record)                         
         LAY   R0,RWBUFF                                                        
         ST    R0,W.WRKIABUF       Set A(FACWRK buffer)                         
         MVC   W.WRKIACOM,LP_ACOM                                               
         L     RE,ARUNFACS         Set RWRKBLKR                                 
         MVC   RWRKBLKR-RUNFACSD(,RE),AWRKBLKR                                  
         DROP  RF                                                               
                                                                                
         GOTOR WRKIO,WRKIOD        Read the request record                      
         JNE   DEATH040                                                         
                                                                                
         MVI   LP_CMODE,RRUNSTRQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize run                
                                                                                
         L     R1,ASSB                                                          
         MVC   FACPAKID,SSBSYSN1-SSBD(R1)                                       
         OI    LP_INDS,LP_IGLOB    FACPAK is always global (updative)           
                                                                                
RUNUO02  NI    LP_INDS,FF-LP_IRECV                                              
         TM    LP_FLAG2,LP_FMQIM   Test MQ message                              
         JNZ   RUNMQ                                                            
         GOTOR LP_AGREQ,GRUPQQ     Process request header                       
                                                                                
RUNUO06  L     R2,AWRKBLKR         Point to FACWRK WRKIO block                  
R        USING WRKIOD,R2                                                        
         USING UKINDEX,R.WRKINDX                                                
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    RUNUO08                                                          
                                                                                
         L     R4,AMASTD                                                        
         L     R4,MCSSB-MASTD(R4)                                               
         USING SSOOFF,R4           R4=A(off-line SSB)                           
         NI    SSOSTAT2,FF-(SSOSNRCV+SSOSRWRK)                                  
         TM    RSVRIND2,RSVRFWKN   Test no FACWRK recovery                      
         JNZ   RUNUO062                                                         
         MVC   SSOFWBUF,R.WRKIABUF Set A(FACWRK buffer)                         
         LA    R0,UKINDEX                                                       
         ST    R0,SSOFWNDX         Set A(FACWRK index)                          
                                                                                
RUNUO062 L     RF,AMASTD                                                        
         L     RF,MCUTL-MASTD(RF)                                               
U        USING UTLD,RF                                                          
         MVC   SSORPRG,RSVRPROG    Set program number for DMRCVR                
         MVC   SSORUSER,LP_USRID   Set user-id for DMRCVR                       
         MVC   SSORAG,LP_AGYB      Set agency binary for DMRCVR                 
                                                                                
         L     RE,LP_ASECD         Set off-line UTL values for recovery         
S        USING SECD,RE                                                          
         MVC   U.TPRG,RSVRPROG                                                  
         MVC   U.TPERSON,S.SECOPASS                                             
         MVC   U.TAGYSEC,S.SECAGY                                               
         MVC   U.TAGYPER,S.SECOAGPE                                             
         MVC   U.TLUID,LP_LUID                                                  
         DROP  U,S                                                              
                                                                                
RUNUO08  TM    RSVRIND2,RSVRFWKN   Test no FACWRK recovery                      
         JNZ   RUNUO10                                                          
                                                                                
Q        USING WRKIOD,R7                                                        
         MVC   UKINDEX,NULLS       Build FACWRK key                             
         MVC   UKUSRID,LP_USRID                                                 
         MVC   UKSYSPRG,RSVRSYSC                                                
         MVC   UKSUBPRG,FACPAKID   Set FACPAK id                                
         MVC   UKDAY,DAYTODAY                                                   
         MVI   UKCLASS,C'R'        Set class to recovery                        
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    RUNUO082                                                         
         TM    LP_INDS,LP_IGLOB    Test global system (updative)                
         JZ    RUNUO082                                                         
         MVI   UKCLASS,C'G'        Set class to global (not recovery)           
RUNUO082 TM    LP_OFLG1,LP_OFDFT   Test draft run                               
         JZ    *+8                                                              
         MVI   UKCLASS,C'D'        Set class to draft                           
         MVI   UKFLAG,X'01'        Set allow duplicates                         
         GOTOR DMGR,R.WRKIPARM,OPEN,FACWRK,UKINDEX                              
         JNE   DEATH042                                                         
                                                                                
RUNUO10  LARL  R0,DEATH045         Point to my LINKIO from COMFACS              
         L     RF,LP_ACOM                                                       
         ST    R0,CLINKIO-COMFACSD(RF)                                          
                                                                                
         MVI   LP_CMODE,RINIREQQ   Pass initialize request to server            
         GOTOR LP_AGSVR,RSVRADDR   (to fill in block addresses)                 
                                                                                
RUNUO12  GOTOR WRKIO,Q.WRKIOB      Read first/next upload record                
         JNE   RUNUO16                                                          
                                                                                
RUNUO14  GOTOR LP_AGREQ,GRUPLQ     Process upload record elements               
         JL    RUNUO12             End of request - get next record             
         MVI   LP_CMODE,RRUNREQQ   Pass run request call to server              
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JE    RUNUO14                                                          
         J     DEATH043                                                         
                                                                                
RUNUO16  MVI   Q.WRKIACTN,WRKIACLO Close the input worker file                  
         GOTOR WRKIO,Q.WRKIOB                                                   
         JNE   DEATH044                                                         
                                                                                
RUNUO18  MVI   LP_CMODE,RRUNENDQ   Pass last time request to server             
         GOTOR LP_AGSVR,RSVRADDR                                                
                                                                                
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JZ    RUNUO20                                                          
         TM    LP_OFLG1,LP_OFKNW   Test keep (don't purge) worker file          
         JNZ   RUNUO20                                                          
         TM    LP_FLAG2,LP_FMQIM   Test MQ message                              
         JNZ   RUNUO20                                                          
         GOTOR DMGR,Q.WRKIPARM,WSP Purge the worker file                        
                                                                                
RUNUO20  NI    LP_FLAG1,FF-(LP_FFWRK)                                           
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    RUNX                                                             
         MVC   SSOFWBUF,NULLS      Clear A(FACWRK buffer)                       
         MVC   SSOFWNDX,NULLS      Clear A(FACWRK index)                        
         J     RUNX                                                             
         DROP  R4                                                               
         EJECT                                                                  
***********************************************************************         
* Process MQ message                                                  *         
***********************************************************************         
RUNMQ    DS    0H                                                               
         TM    INDSFILE,INDSIFIL   Test input from disk file                    
         JNZ   RUNMQ01             Yes, need MGDATA                             
******                                                                          
*  Need MGMAPO arg for the download requests                                    
******                                                                          
         GOTOR LP_AMQGT,MGMAPO     Get first/next map number                    
         J     RUNMQ01A                                                         
******                                                                          
*  Need MGDATA arg for the upload file requests otherwise we lose 1st           
*     line of the input file                                                    
******                                                                          
RUNMQ01  GOTOR LP_AMQGT,MGDATA                                                  
RUNMQ01A JH    RUNMQX              Exit if end of buffer                        
*                                                                               
         TM    INDQCTRL,INDSCTRL   Test just received a control record          
         JZ    RUNMQ02                                                          
         GOTOR LP_AMQGT,MGDATA     Yes - upload it                              
         J     RUNMQ               and get next record map code                 
                                                                                
                                                                                
RUNMQ02  GOTOR LP_ALMAP,LP_QMAPN   Locate server to do the work                 
         JNE   DEATH313                                                         
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    RUNMQ20                                                          
*                                                                               
         MVC   SVMQB,MQB           Save MQ message pointer                      
         MVC   SVMQL,MQL           Save MQ message length                       
         TM    INDSFILE,INDSIFIL   Test input from disk file                    
         JNZ   RUNMQ08             Yes - they only get one pass                 
                                                                                
***********************************************************************         
* MQ upload - data validation pass                                    *         
***********************************************************************         
                                                                                
         OI    LP_FLAG1,LP_FDRFT   Set 'draft' mode                             
         MVI   LP_CMODE,RINIREQQ                                                
         GOTOR LP_AGSVR,RSVRADDR   (to fill in block addresses)                 
         MVI   LP_CMODE,RVALREQQ   Set request validation mode                  
                                                                                
RUNMQ04  GOTOR LP_AMQGT,MGMAPO     Get next map number                          
         JH    RUNMQ08             Exit if end of buffer                        
         TM    INDQCTRL,INDSCTRL   Test just received a control record          
         JNZ   RUNMQ08                                                          
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    RUNMQ08                                                          
                                                                                
RUNMQ06  GOTOR LP_AMQGT,MGDATA     Get next upload record                       
         JH    RUNMQ08                                                          
         TM    INDQCTRL,INDSCTRL   Test just received a control record          
         JNZ   RUNMQ08             Yes - this terminates the upload             
         GOTOR LP_AGREQ,GRUMQQ     Set request values                           
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JE    RUNMQ04                                                          
         J     DEATH308                                                         
                                                                                
***********************************************************************         
* MQ upload - file update pass                                        *         
***********************************************************************         
                                                                                
RUNMQ08  NI    LP_FLAG1,FF-(LP_FDRFT)                                           
         MVC   MQB,SVMQB           Restore MQ buffer pointer                    
         MVC   MQL,SVMQL           Restore MQ buffer length                     
                                                                                
         MVI   LP_CMODE,RINIREQQ                                                
         GOTOR LP_AGSVR,RSVRADDR   (to fill in block addresses)                 
                                                                                
         MVI   LP_CMODE,RRUNREQQ   Set live upload mode                         
         J     RUNMQ12                                                          
                                                                                
RUNMQ10  TM    INDSFILE,INDSIFIL   Test input from disk file                    
         JNZ   RUNMQ12             Yes - no embedded controls                   
*                                                                               
         GOTOR LP_AMQGT,MGMAPO     Get next map number                          
         JH    RUNMQ14             Exit if end of buffer                        
         TM    INDQCTRL,INDSCTRL   Test just received a control record          
         JNZ   RUNMQ14             Yes - this terminates the upload             
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    RUNMQ14                                                          
                                                                                
RUNMQ12  TM    INDSFILE,INDSI1ST   Read 1st from dataset?                       
         JNZ   RUNMQ13                                                          
*                                                                               
         GOTOR LP_AMQGT,MGDATA     Get next upload record                       
         JH    RUNMQ14             High means no more data/records              
         TM    INDQCTRL,INDSCTRL   Test just received a control record          
         JNZ   RUNMQ14             Yes - this terminates the upload             
                                                                                
RUNMQ13  GOTOR LP_AGREQ,GRUMQQ     Set request values                           
         NI    INDSFILE,X'FF'-INDSI1ST                                          
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JE    RUNMQ10                                                          
         J     DEATH309                                                         
                                                                                
RUNMQ14  MVI   LP_CMODE,RRUNENDQ   Pass last time request to server             
         GOTOR LP_AGSVR,RSVRADDR                                                
*                                                                               
         TM    INDSFILE,INDSIFIL   Test input from disk file                    
         JNZ   RUNMQX              Yes, we're done with the file                
         J     RUNMQ               No, might be more to process                 
                                                                                
***********************************************************************         
* MQ downloads                                                        *         
***********************************************************************         
RUNMQ20  GOTOR LP_AMQGT,MGDATA     Get request data                             
         GOTOR LP_AGREQ,GRUMQQ     Set request values                           
                                                                                
         L     R1,LP_ARUNP                                                      
         MVI   LP_CMODE,RVALREQQ   Pass validate request to server              
         GOTOR LP_AGSVR,RSVRADDR                                                
         JNE   DEATH315                                                         
                                                                                
         MVI   LP_CMODE,RRUNREQQ   Pass run request call to server              
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JE    RUNMQ                                                            
         J     DEATH316                                                         
                                                                                
RUNMQX   GOTOR LP_ARECP,RPENDQ     Call RECP to put MQ buffer                   
                                                                                
RUNX     NI    LP_INDS,FF-LP_IRECV                                              
         J     EXITY                                                            
         DROP  R3,R7,Q,R                                                        
                                                                                
RWWORKD  DSECT ,                   ** RUN local working storage **              
RWWRKBLK DS    XL(WRKIOBL)         FACWRK WRKIO block                           
RWIO     DS    XL(4*ONEK)          FACWRK record area                           
RWBUFF   DS    XL(14*ONEK)         FACWRK buffer area                           
RWWORKL  EQU   *-RWWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Process request elements on the upload/download request record      *         
*                                                                     *         
* Ntry:- R1=calling type (see GRxxxQ equates below)                   *         
***********************************************************************         
                                                                                
GRDLDQ   EQU   0                   Process download request                     
GRUPLQ   EQU   1                   Process upload record                        
GRUPQQ   EQU   2                   Process upload header (RUNNER u/l)           
GRUMQQ   EQU   3                   Process MQ upload record                     
                                                                                
GREQ     NTR1  LABEL=*                                                          
         STC   R1,GRCALL           Save calling type                            
         MVC   AERUNEL,FZERO       Clear A(end run values element)              
         TM    INDQARTF,INDSARTF   Test adding request to group                 
         JNZ   GREQX                                                            
         CLI   GRCALL,GRUPLQ       Test FACPAK upload                           
         JNE   *+10                                                             
         MVC   LP_AQMAP,FZERO      Yes - clear LP_AQMAP (just in case)          
         MVC   LP_REQM,NULLS       Clear request mask                           
                                                                                
         CLI   GRCALL,GRUMQQ       Test MQ message input                        
         JE    GREQMQ              Yes - go to MQ handler                       
                                                                                
         GOTOR CLRWMP              Clear the work map pool                      
         GOTOR CLRREQ,XA=ON        Clear request values                         
                                                                                
         CLI   GRCALL,GRUPQQ                                                    
         JNE   GREQ0010                                                         
         MVC   LP_XD(LP_LKEYX-LP_XD),NULLS                                      
         MVC   LP_RQKEY(LP_AFMAP-LP_RQKEY),NULLS                                
                                                                                
GREQ0010 MVI   BYTE2,0             Set no map element found                     
         L     R2,LP_AWMP                                                       
         USING LW_D,R2             R2=A(request map)                            
         L     R3,AWRKBLK                                                       
         L     R3,WRKIAREC-WRKIOD(R3)                                           
         AHI   R3,4                                                             
         USING LQ_D,R3             R3=A(first element on record)                
         TM    LP_FLAG1,LP_FRUNX   Test running other process on exit           
         JZ    *+12                                                             
         L     R3,ARUNXEL          Yes - point to RUNX element                  
         OI    BYTE2,4                                                          
         TM    INDQNEXT,INDSNEXT   Test record continuation mode                
         JZ    GREQ0012                                                         
         NI    INDQNEXT,FF-INDSNEXT                                             
         ICM   R3,15,ANEXTREQ      Yes - point to next map element              
         JZ    EXITL                                                            
GREQ0012 MVC   ANEXTREQ,FZERO                                                   
         CLI   LQ_EL,0             If nothing (or no more in) record            
         JE    EXITL               exit low to caller                           
         MVC   WORK2,NULLS                                                      
         SR    R0,R0                                                            
         L     R1,LP_ASAVE                                                      
         MVC   LS_SMFF#-LS_D(LS_SMFL,R1),NULLS                                  
                                                                                
GREQ0020 CLI   LQ_EL,0             Test end of record                           
         JE    GREQ0200                                                         
                                                                                
         CLI   LQ_EL,LQ_CTRLQ      Test control element                         
         JNE   *+12                                                             
         OI    BYTE2,1             Yes - set flag                               
         J     GREQ0190                                                         
                                                                                
         TM    LP_FLAG1,LP_FRUNX   Test running other process on exit           
         JNZ   *+12                                                             
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JE    GREQ0200            Yes - treat as if end of record              
                                                                                
         CLI   LQ_EL,LQ_ERUNQ      Test end of run values                       
         JNE   *+12                                                             
         ST    R3,AERUNEL          Save A(end run values element)               
         J     GREQ0210            and treat as if end of record                
                                                                                
         CLI   LQ_EL,LQ_MASKQ      Test mask element                            
         JNE   *+14                                                             
         MVC   LP_YMASK(L'LQ_MASK),LQ_MASK                                      
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_FAXIQ      Test FACPAK extra info element               
         JNE   *+14                                                             
         MVC   LP_XTRAV,LQ_FAXI                                                 
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_LUIDQ      Test terminal VTAM LUID element              
         JNE   *+14                                                             
         MVC   LP_LUID,LQ_LUID                                                  
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_XINFQ      Test external program info element           
         JNE   *+14                                                             
         MVC   LP_XPINF,LQ_XINFO                                                
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_OSINQ      Test original SIN element                    
         JNE   *+14                                                             
         MVC   LP_OSIN,LQ_OSIN                                                  
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_RQKYQ      Test request key                             
         JNE   *+14                                                             
         MVC   LP_RQKEY,LQ_RQKEY                                                
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_LKEYQ      Test lock keys                               
         JNE   *+14                                                             
         MVC   LP_LKEYS(LP_LKEYL),LQ_LKEYS                                      
         J     GREQ0190                                                         
                                                                                
         CLI   LQ_EL,LQ_SMFFQ      Test SMF data fields                         
         JNE   GREQ0040                                                         
         L     R1,LP_ASAVE                                                      
         LLC   RF,LQ_SMFF#                                                      
         STC   RF,LS_SMFF#-LS_D(R1)                                             
         MHI   RF,L'LS_SMFF                                                     
         BCTR  RF,0                                                             
         EX    RF,GREQMVSQ                                                      
         J     GREQ0190                                                         
                                                                                
GREQ0040 CLI   LQ_EL,LQ_IMAPQ      Test map code element (upload)               
         JNE   GREQ0060                                                         
                                                                                
         TM    BYTE2,2             Test map element already found               
         JZ    *+12                                                             
         ST    R3,ANEXTREQ         Save A(current element)                      
         J     GREQ0200                                                         
                                                                                
         OI    BYTE2,2             Set we have found map code element           
         MVC   LP_QMAPN,LQ_IMAPN   Yes - set input record map code              
         GOTOR LP_ALMAP,LP_QMAPN   Look up input map entry                      
         JNE   DEATH046                                                         
         GOTOR CLRREQ,XA=ON        Clear request values                         
         J     GREQ0190                                                         
                                                                                
GREQ0060 CLI   LQ_EL,LQ_RAWDQ      Test raw data element                        
         JNE   *+12                                                             
         MVI   LQ_EL,LQ_RQSTQ      Yes - convert to request element             
         MVI   LQ_TYPE,LQ_TSINQ                                                 
                                                                                
         CLI   LQ_EL,LQ_RQSTQ      Test request data element                    
         JNE   GREQ0150                                                         
         ICM   R6,15,LP_AQMAP      Look up entry in table                       
         JZ    DEATH047                                                         
                                                                                
         USING LD_D,R6                                                          
GREQ0070 CLI   LD_D,LD_EOTQ                                                     
         JE    DEATH048                                                         
         CLC   LD_VRSN,NULLS       Test version stamped                         
         JE    GREQ0072                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    GREQ0072                                                         
         CLC   LP_VRSN,LD_VRSN     Yes - test against PC version                
         JL    GREQ0074                                                         
GREQ0072 CLC   LD_CODE,LQ_DCODE    Match code to element                        
         JE    GREQ0076                                                         
GREQ0074 AHI   R6,LD_LNQ           No match - bump to next entry                
         J     GREQ0070                                                         
                                                                                
GREQ0076 GOTOR UPDRQM,LD_D         Update request mask                          
                                                                                
         LLC   RE,LD_COL           Update request field count                   
         LA    RE,WORK2-1(RE)                                                   
         LLC   RF,0(RE)                                                         
         LR    R0,RF                                                            
         AHI   RF,1                                                             
         STC   RF,0(RE)                                                         
         CHI   RF,1                                                             
         JE    GREQ0080            First field - no extended search             
                                                                                
         LR    RF,R6               Save current entry pointer                   
         BASR  RE,0                Look for further definitions of              
         AHI   R6,LD_LNQ           the same data type in the request            
         CLI   LD_D,LD_EOTQ        table                                        
         JNE   *+10                                                             
         LR    R6,RF               Not found - point to first                   
         J     GREQ0080                                                         
                                                                                
         CLC   LD_VRSN,NULLS       Test version stamped                         
         JE    GREQ0078                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    GREQ0078                                                         
         CLC   LP_VRSN,LD_VRSN     Yes - test against PC version                
         JL    *+12                                                             
GREQ0078 CLC   LD_CODE,LQ_DCODE    Match code to element                        
         BNER  RE                                                               
         BCTR  R0,RE               Do for number of input values                
                                                                                
GREQ0080 MVC   LW_D(LW_LN2Q),NULLS Create request map entry                     
         MVC   LW_CODE,LD_CODE     Set data code                                
         STCM  R6,7,LW_ALD         Set pointer to request definition            
         MVC   VALTYPE,LD_TYPE                                                  
         NI    VALTYPE,FF-(LD_SCOLQ+LD_ECOLQ)                                   
         LLC   R1,VALTYPE                                                       
         SLL   R1,1                                                             
         LA    R1,VALTYPES(R1)                                                  
         MVC   VALVALS,0(R1)       Set validation values                        
                                                                                
         TM    LD_INDS1,LD_IAWPQ   Test adding to work pool                     
         JZ    GREQ0100                                                         
                                                                                
         MVC   LW_TYPE,LQ_TYPE     Copy request type                            
         LLH   R1,LQ_LN            RE=L'data component                          
         SHI   R1,LQ_LN2Q          RE=L'request data                            
                                                                                
         STM   RE,R1,12(RD)                                                     
         LA    R0,LW_DATA1                                                      
         LA    RE,LQ_VALUE                                                      
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         LM    RE,R1,12(RD)                                                     
                                                                                
         LA    RE,LW_LN1Q(R1)                                                   
         STCM  RE,3,LW_LN                                                       
         TM    LW_TYPE,LW_TLSTQ    Test input is a list                         
         JZ    GREQ0090                                                         
         CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    GREQ0090            Yes - can't sort variable lists              
                                                                                
         SR    R0,R0               Else sort list into sequence                 
         SHI   R1,L'LW_NUMN                                                     
         LLH   RE,LW_NUMN                                                       
         DR    R0,RE               R1=width of data row                         
         LTR   R0,R0               R0=is remainder of length/number             
         JNZ   DEATH049                                                         
         LLH   R0,LW_NUMN          R0=number of entries                         
         LA    RF,LW_DATA2         RF=A(list of values)                         
         TM    LD_INDS4,LD_IDSLQ   Test don't want list sorted                  
         JNZ   GREQ0082                                                         
         GOTOR SORTIT              Sort list into ascending sequence            
                                                                                
GREQ0082 TM    LD_INDS4,LD_ICNEQ+LD_ICFEQ                                       
         JZ    GREQ0090                                                         
         LLH   RE,LW_LN            RE=current element length                    
         LA    RF,LW_D(RE)         RF=A(null or FF entry)                       
         AR    RE,R1               Add row width to current length              
         STCM  RE,3,LW_LN          Set new element length                       
         MVI   0(RF),0             Set X'00' at end of list                     
         TM    LD_INDS4,LD_ICFEQ                                                
         JZ    *+8                                                              
         MVI   0(RF),FF            or X'FF'                                     
         SHI   R1,2                                                             
         JM    GREQ0090                                                         
         EX    R1,GREQMVFF         and fill it with term character              
         J     GREQ0090                                                         
                                                                                
GREQ0090 LLH   RE,LW_LN            Bump to next output element                  
         AR    R2,RE                                                            
         J     GREQ0190                                                         
                                                                                
GREQ0100 TM    LD_INDS2,LD_IBLKQ   Test move data to a block                    
         JZ    GREQ0190                                                         
         MVC   BYTE1,LD_INDS2                                                   
         NI    BYTE1,LD_IBLKQ                                                   
         LLC   R1,BYTE1                                                         
         CHI   R1,LP_BLKSN                                                      
         JH    DEATH050                                                         
         MHI   R1,L'LP_BLKS                                                     
         LA    R1,LP_BLKS-L'LP_BLKS(R1)                                         
         ICM   R1,15,0(R1)                                                      
         JZ    DEATH051                                                         
         LLH   R0,LD_DISP          R0=displacement to data in block             
         AR    R0,R1               R0=A(data value in user block)               
         LLH   R1,LQ_LN                                                         
         SHI   R1,LQ_LN2Q                                                       
         LA    RE,LQ_VALUE                                                      
         TM    LQ_TYPE,LQ_TLSTQ    Test this is a list of values                
         JZ    *+12                                                             
         SHI   R1,L'LW_NUMN        Yes - decrement length of move               
         AHI   RE,L'LW_NUMN        and increment address of move                
         LR    RF,R1                                                            
         STM   RE,R1,12(RD)        Save MVCL registers                          
                                                                                
         SR    RF,RF                                                            
         CLI   VALTYPE,LD_CHARQ    Test character string                        
         JNE   GREQ0110                                                         
         ICM   RF,1,LD_LEN         Yes - get output length if set               
         JNZ   GREQ0120                                                         
         ICM   RF,1,LD_INPMX       or maximum input length if not               
         JNZ   GREQ0120                                                         
         J     DEATH052                                                         
                                                                                
GREQ0110 CLI   VALTYPE,LD_VSTRQ    Test variable string                         
         JNE   GREQ0130                                                         
         ICM   RF,1,LD_INPMX       Test maximum input length set                
         JZ    GREQ0130                                                         
                                                                                
GREQ0120 LR    R1,R0               Pre-clear output field to spaces             
         MVI   0(R1),SPACEQ                                                     
         SHI   RF,2                                                             
         JM    GREQ0130                                                         
         EX    RF,GREQMV11                                                      
         J     GREQ0130                                                         
                                                                                
GREQ0130 LM    RE,R1,12(RD)        Restore MVCL registers                       
                                                                                
         CLI   VALVALTY,MASKQ      Test this is a mask bit                      
         JNE   GREQ0140                                                         
         LR    R1,R0               Yes - point to mask byte                     
         OC    0(1,R1),0(RE)       and or in mask bit                           
         J     GREQ0190                                                         
                                                                                
GREQ0140 MVCL  R0,RE               Move data to user block                      
         J     GREQ0190                                                         
                                                                                
GREQ0150 CLI   LQ_EL,LQ_CMNDQ      Test this is a command card                  
         JNE   GREQ0160                                                         
         CLC   AVALPAR,FZERO       Test VALPAR routine set                      
         JE    GREQ0190                                                         
         LLH   RE,LQ_LN                                                         
         SHI   RE,LQ_LN1Q+1                                                     
         MVC   WORK(80),SPACES                                                  
         EX    RE,GREQMVWQ                                                      
         GOTOR AVALPAR,WORK        Call RUNNER to process command               
         J     GREQ0190                                                         
                                                                                
GREQ0160 CLI   LQ_EL,LQ_RESTQ      Test restore data element                    
         JNE   GREQ0170                                                         
         GOTOR SAVRES,LQ_D         Set save/restore addresses                   
         LM    RE,R1,SAVERE                                                     
         MVCL  R0,RE               Set restored data                            
         J     GREQ0190                                                         
                                                                                
GREQ0170 CLI   LQ_EL,LQ_MQRDQ      Test MQ routing values                       
         JNE   GREQ0180                                                         
         MVC   LP_MQQUE,LQ_MQQUE   Set MQ header value                          
         MVC   LP_MQKEY,LQ_MQKEY   Set MQ key value                             
         J     GREQ0190                                                         
                                                                                
GREQ0180 CLI   LQ_EL,LQ_XSVRQ      Test external service call queue             
         JNE   GREQ0190                                                         
         MVC   LP_MQSVR,LQ_XSSVR   Set external service call queue              
         MVC   LP_MQRKV,LQ_XSRKV   Set LM_RLAB value (route back)               
         J     GREQ0190                                                         
                                                                                
GREQ0190 LLH   R0,LQ_LN            Bump to next element on record               
         AR    R3,R0                                                            
         J     GREQ0020                                                         
                                                                                
***********************************************************************         
* Set RUNNER request values                                           *         
***********************************************************************         
                                                                                
GREQ0200 CLI   BYTE2,0             Test map/control element found               
         JE    EXITL               No - nothing to do                           
         CLI   BYTE2,1             Test only control element found              
         JE    GREQ0210                                                         
         CLI   BYTE2,4             Test RUNX element found                      
         JE    GREQ0210                                                         
         OI    INDQNEXT,INDSNEXT   Set to use ANEXTREQ next time                
                                                                                
GREQ0210 CLI   GRCALL,GRUPLQ       Test upload data record                      
         JE    GREQ0260                                                         
         CLI   GRCALL,GRUPQQ       Test upload header record                    
         JE    GREQX                                                            
         J     GREQ0220                                                         
                                                                                
GREQMQ   GOTOR CLRREQ,XA=ON        Clear all user request values                
         GOTOR LP_AGMQR            Set MQ request values                        
                                                                                
***********************************************************************         
* Pass through the request map table looking for values which have    *         
* not been input but require a default entry in the map pool.  For    *         
* any found create a map pool entry with a range type of 'ALL' and    *         
* a range value from X'00...00' to X'FF...FF'. Also apply any default *         
* mask bit settings                                                   *         
***********************************************************************         
                                                                                
GREQ0220 ICM   RE,15,SVALPXD       Point to RUNNER's LP_XD                      
         JZ    GREQ0225                                                         
         L     R0,LP_ALPXD         Get ours                                     
         LA    RF,LP_XLNQ                                                       
         LR    R1,RF                                                            
         MVCL  RE,R0               Copy ours to RUNNER's                        
                                                                                
GREQ0225 ICM   R6,15,LP_AQMAP      Set up default filters                       
         JZ    DEATH053                                                         
                                                                                
GREQ0230 CLI   LD_D,LD_EOTQ        Test end of request map table                
         JE    GREQ0260                                                         
         CLC   LD_VRSN,NULLS       Test version stamped                         
         JE    GREQ0232                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    GREQ0232                                                         
         CLC   LP_VRSN,LD_VRSN     Yes - test against PC version                
         JL    GREQ0250                                                         
                                                                                
GREQ0232 CLI   LD_TYPE,LD_MASKQ    Test mask with default setting               
         JNE   GREQ0240                                                         
         TM    LD_INDS2,LD_IDFTY+LD_IDFTN                                       
         JZ    GREQ0240                                                         
         SR    RE,RE                                                            
         ICM   RE,1,LD_MASKN                                                    
         JZ    DEATH054                                                         
         CHI   RE,L'LP_YMASK*8                                                  
         JH    DEATH055                                                         
         BCTR  RE,0                                                             
         SRDL  RE,3                RE=displacement to mask byte                 
         SRL   RF,32-3                                                          
         IC    RF,BITLIST(RF)      RF=bit value to test/set                     
                                                                                
         LA    R1,LP_YMASK(RE)     Test bit on in either mask                   
         EX    RF,GREQTM10                                                      
         JNZ   GREQ0250            On in YMASK - no default                     
         LA    R1,LP_NMASK(RE)                                                  
         EX    RF,GREQTM10                                                      
         JNZ   GREQ0250            On in NMASK - no default                     
                                                                                
         LA    R1,LP_YMASK(RE)     Nothing input - set default                  
         LA    R0,LP_NMASK(RE)                                                  
         TM    LD_INDS2,LD_IDFTY   Test setting 'Y' as default                  
         JNZ   *+10                                                             
         XR    R1,R0               Yes - flip masks                             
         XR    R0,R1                                                            
         XR    R1,R0                                                            
         TM    LD_INDS2,LD_IFLIP   Test flipping masks                          
         JZ    *+10                                                             
         XR    R1,R0               Yes - flip                                   
         XR    R0,R1                                                            
         XR    R1,R0                                                            
         AR    R1,RE               R1=A(appropriate mask byte)                  
         EX    RF,GREQOI10                                                      
         J     GREQ0250                                                         
                                                                                
GREQ0240 TM    LD_INDS1,LD_IDFTQ   Test build default entry                     
         JZ    GREQ0250                                                         
         SR    RE,RE                                                            
         ICM   RE,1,LD_COL                                                      
         JZ    DEATH056                                                         
         SRDL  RE,3                                                             
         LA    RE,LP_REQM(RE)                                                   
         SRL   RF,32-3                                                          
         IC    RF,BITLIST(RF)                                                   
         EX    RF,GREQTME0                                                      
         JNZ   GREQ0250            Already have this filter                     
         EX    RF,GREQOIE0                                                      
                                                                                
         MVC   LW_CODE,LD_CODE     Build default work pool entry                
         STCM  R6,7,LW_ALD                                                      
         MVI   LW_TYPE,LW_TALLQ                                                 
         TM    LD_INDS4,LD_INZRQ   Test range start must be non-zero            
         JZ    *+8                                                              
         MVI   LW_TYPE,LW_TNZRQ    Yes - set non-zero low value                 
                                                                                
***********************************************************************         
* The following code can be removed at a later date and simply be     *         
* replaced by LH RE,LW_LN1Q                                           *         
***********************************************************************         
                                                                                
         SR    RE,RE                                                            
         CLI   LD_TYPE,LD_VSTRQ    Can't have default variable string           
         JE    *+12                                                             
         ICM   RE,1,LD_LEN         or zero length field                         
         JZ    DEATH057                                                         
         BCTR  RE,0                                                             
         EX    RE,GREQMVWN                                                      
         AHI   RE,LW_LN1Q+1                                                     
                                                                                
***********************************************************************         
* End of removable code                                               *         
***********************************************************************         
                                                                                
         STCM  RE,3,LW_LN                                                       
         AR    R2,RE                                                            
                                                                                
GREQ0250 AHI   R6,LD_LNQ           Bump to next table entry                     
         J     GREQ0230                                                         
                                                                                
GREQ0260 MVC   LW_D(LW_LN2Q),NULLS Set end of list                              
         ST    R2,LP_AWMP          Set A(next entry in work pool)               
         C     R2,LP_AWMPX         Test exceeded WMP size                       
         JH    DEATH058                                                         
                                                                                
GREQ0270 MVC   WORK2,NULLS                                                      
         L     R2,AWMP             R2=A(start of work map pool)                 
GREQ0280 CLC   LW_CODE,NULLS       Test end of work map pool                    
         JE    GREQX                                                            
         SR    R6,R6                                                            
         ICM   R6,7,LW_ALD                                                      
         TM    LD_INDS3,LD_INDXQ   Test user wants an index built               
         JZ    GREQ0300                                                         
         MVC   BYTE1,LD_INDS3                                                   
         NI    BYTE1,LD_INDXQ                                                   
         LLC   RF,BYTE1                                                         
         SLL   RF,2                                                             
         L     RF,LP_BLKS-L'LP_BLKS(RF)                                         
         LLH   RE,LD_DNDX                                                       
         AR    RF,RE               RF=A(start of field index area)              
                                                                                
         TM    LD_INDS4,LD_IBILQ   Test want index list to be built             
         JZ    GREQ0290                                                         
         LLC   R1,LD_COL           Bump input field count                       
         SLL   R1,1                                                             
         LA    R1,WORK2-2(R1)      R1=A(field count)                            
         LLH   R0,0(R1)                                                         
         AHI   R0,1                Bump and store field count                   
         STCM  R0,3,0(R1)                                                       
         SHI   R0,1                                                             
         SLL   R0,2                R0=(field count-1)*4                         
         AR    RF,R0               RF=A(multi-field index entry)                
                                                                                
GREQ0290 CLC   0(4,RF),FZERO       Test index address already set               
         JNE   GREQ0300            Yes - don't overwrite                        
         MVC   0(1,RF),LW_TYPE     First byte of index is type                  
         CLI   0(RF),LW_TNZRQ      (convert non-zero range to 'all'             
         JNE   *+8                  so that the application doesn't             
         MVI   0(RF),LW_TALLQ       have to test for both values)               
         STCM  R2,7,1(RF)          followed by AL3(work pool entry)             
                                                                                
GREQ0300 LLH   RE,LW_LN            Bump to next work map entry                  
         AR    R2,RE                                                            
         J     GREQ0280                                                         
                                                                                
GREQX    J     EXIT                                                             
         DROP  R2,R6                                                            
         EJECT                                                                  
***********************************************************************         
* Move data to server work area for MQ upload record                  *         
***********************************************************************         
                                                                                
GMQR     NTR1  LABEL=*                                                          
         L     R2,AWMP                                                          
         USING LW_D,R2             R2=A(WMP)                                    
                                                                                
GMQR0010 CLC   LW_CODE,NULLS       Test end of input data                       
         JE    GMQRX                                                            
         SR    R6,R6                                                            
         ICM   R6,7,LW_ALD         Point to LD_D                                
         USING LD_D,R6                                                          
                                                                                
         GOTOR UPDRQM,LD_D         Update request mask                          
                                                                                
         MVC   VALTYPE,LD_TYPE     Isolate data type                            
         NI    VALTYPE,FF-(LD_SCOLQ+LD_ECOLQ)                                   
                                                                                
         TM    LW_TYPE,LW_TLSTQ    Test input is a list                         
         JZ    GMQR0020                                                         
         CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    GMQR0020            Yes - can't sort variable lists              
         LLH   R1,LW_LN                                                         
         SHI   R1,LW_LN2Q                                                       
         SR    R0,R0                                                            
         LLH   RE,LW_NUMN                                                       
         DR    R0,RE                                                            
         LTR   R0,R0               R0=is remainder of length/number             
         JNZ   DEATH049                                                         
         LLH   R0,LW_NUMN          R0=number of entries                         
         LA    RF,LW_DATA2         RF=A(list of values)                         
         TM    LD_INDS4,LD_IDSLQ   Test don't want list sorted                  
         JNZ   GMQR0020                                                         
         GOTOR SORTIT              Sort list into ascending sequence            
                                                                                
GMQR0020 TM    LD_INDS2,LD_IBLKQ   Test move data to storage area               
         JZ    GMQR0070                                                         
                                                                                
         LLC   R1,LD_INDS2                                                      
         NILL  GR1,LD_IBLKQ        Isolate user block id                        
         JZ    DEATH310                                                         
         MHI   R1,L'LP_BLKS                                                     
         LA    R1,LP_BLKS-L'LP_BLKS(R1)                                         
         ICM   R1,15,0(R1)                                                      
         JZ    DEATH311                                                         
         LLH   R0,LD_DISP          R0=displacement to data in block             
         AR    R0,R1               R0=A(data value in user block)               
         LLH   R1,LW_LN                                                         
         SHI   R1,LW_LN1Q                                                       
         LA    RE,LW_DATA1                                                      
         TM    LW_TYPE,LW_TLSTQ    Test list of values                          
         JZ    *+12                                                             
         SHI   R1,L'LW_NUMN                                                     
         AHI   RE,L'LW_NUMN                                                     
         LR    RF,R1                                                            
         STM   RE,R1,12(RD)        Save MVCL registers                          
                                                                                
         SR    RF,RF                                                            
         CLI   VALTYPE,LD_CHARQ    Test character string                        
         JNE   GMQR0030                                                         
         ICM   RF,1,LD_LEN                                                      
         JNZ   GMQR0040                                                         
         ICM   RF,1,LD_INPMX                                                    
         JZ    DEATH312                                                         
                                                                                
GMQR0030 CLI   VALTYPE,LD_VSTRQ    Test variable character string               
         JNE   GMQR0050                                                         
         ICM   RF,1,LD_INPMX                                                    
         JZ    GMQR0050                                                         
                                                                                
GMQR0040 LR    R1,R0               Pre-clear output field to spaces             
         MVI   0(R1),SPACEQ                                                     
         SHI   RF,2                                                             
         JM    GMQR0050                                                         
         EX    RF,GMQRMV11                                                      
                                                                                
GMQR0050 LM    RE,R1,12(RD)        Restore MVCL registers                       
                                                                                
         CLI   VALTYPE,LD_MSK80    Test this is a mask bit                      
         JL    GMQR0060                                                         
         CLI   VALTYPE,LD_MSK01                                                 
         JH    GMQR0060                                                         
         LR    R1,R0               Yes - point to mask byte                     
         OC    0(1,R1),0(RE)       and or in mask bit                           
         J     GMQR0070                                                         
                                                                                
GMQR0060 MVCL  R0,RE               Move data to user block                      
                                                                                
GMQR0070 LLH   R0,LW_LN            Bump to next input element                   
         AR    R2,R0                                                            
         J     GMQR0010                                                         
                                                                                
GMQRX    XIT1  REGS=(R2)           Exit pointing to end of WMP                  
         DROP  R2,R6                                                            
         EJECT                                                                  
***********************************************************************         
* Update request mask (ORs on request mask bit for input field)       *         
***********************************************************************         
                                                                                
UPDRQM   NTR1  LABEL=*                                                          
         LR    R6,R1                                                            
         USING LD_D,R6             R6=A(LD_D)                                   
         SR    RE,RE                                                            
         ICM   RE,1,LD_COL         Get column number                            
         JZ    EXITY                                                            
         CLI   GRCALL,GRUPLQ       Test upload                                  
         JNE   UPDRQM02                                                         
         LLH   RE,LD_CODE          Yes - use map number as column               
         BCTR  RE,0                Make it zero based                           
         CHI   RE,L'LP_REQM*8      Ensure within range                          
         JNH   UPDRQM02                                                         
         LHI   RE,L'LP_REQM*8                                                   
                                                                                
UPDRQM02 SRDL  RE,3                                                             
         LA    RE,LP_REQM(RE)                                                   
         SRL   RF,32-3                                                          
         LA    RF,BITLIST(RF)                                                   
         OC    0(1,RE),0(RF)       OR on request mask bit                       
         J     EXITY                                                            
         DROP  R6                                                               
         EJECT                                                                  
***********************************************************************         
* Clear request values                                                *         
*                                                                     *         
* Note:- All request values are cleared for an upload. For downloads  *         
*        only the index pointers are cleared unless the RSVRICLR      *         
*        bit is set in the server header definition                   *         
***********************************************************************         
                                                                                
CLRREQ   STM   RE,R2,12(RD)                                                     
         ICM   R2,15,LP_AQMAP                                                   
         JZ    CLRREQX                                                          
         USING LD_D,R2             R2=A(input map)                              
                                                                                
CLRREQ02 CLI   LD_D,LD_EOTQ        Test end of record map                       
         JE    CLRREQX                                                          
         TM    LD_INDS1,LD_IAWPQ   Test adding to work pool                     
         JNZ   CLRREQ04                                                         
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JNZ   *+12                Yes - always clear                           
         TM    RSVRIND1,RSVRICLR   Test auto clear request values               
         JZ    CLRREQ04            No - don't clear storage                     
         TM    LD_INDS2,LD_IBLKQ   Test moving to an output block               
         JZ    CLRREQ04                                                         
         MVC   BYTE1,LD_INDS2                                                   
         NI    BYTE1,LD_IBLKQ                                                   
         LLC   RF,BYTE1                                                         
         CHI   RF,LP_BLKSN                                                      
         JH    DEATH059            Invalid user block id                        
         MHI   RF,L'LP_BLKS                                                     
         LA    RE,LP_BLKS-L'LP_BLKS(RF)                                         
         ICM   RF,15,0(RE)                                                      
         JZ    DEATH060            Invalid user block address                   
         LLH   R0,LD_DISP          R0=displacement to data in block             
         AR    RF,R0               RF=A(data value in user block)               
         MVI   0(RF),0             Convention for no data if no max len         
         SR    R1,R1                                                            
         CLI   LD_TYPE,LD_VSTRQ    Test variable string                         
         JNE   CLRREQ03                                                         
         ICM   R1,1,LD_INPMX       Yes - test maximum input length set          
         JZ    CLRREQ04                                                         
         J     *+12                                                             
CLRREQ03 ICM   R1,1,LD_LEN         Test output length set                       
         JZ    CLRREQ04                                                         
         SHI   R1,1                Test 2 or more bytes long                    
         JZ    CLRREQ04                                                         
         EX    R1,CLRRMVFN         Yes - clear field                            
                                                                                
CLRREQ04 TM    LD_INDS3,LD_INDXQ   Test user wants an index built               
         JZ    CLRREQ06                                                         
         MVC   BYTE1,LD_INDS3                                                   
         NI    BYTE1,LD_INDXQ                                                   
         LLC   RF,BYTE1                                                         
         SLL   RF,2                                                             
         L     RF,LP_BLKS-L'LP_BLKS(RF)                                         
         LLH   RE,LD_DNDX                                                       
         AR    RF,RE               RF=A(index area)                             
         MVC   0(4,RF),FZERO                                                    
                                                                                
CLRREQ06 AHI   R2,LD_LNQ           Bump to next data definition                 
         J     CLRREQ02                                                         
                                                                                
CLRREQX  LM    RE,R2,12(RD)                                                     
         BR    RE                                                               
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Download worker files/BSAM file via FALINK                          *         
*                                                                     *         
* Ntry:- R1=A(SETDATA/ADDDATA) if called from FALINK or special       *         
*           DDLINK calling type (see SDxxxQ equates below)            *         
***********************************************************************         
                                                                                
SDSNDQ   EQU   1                   Send worker file contents (DDLINK)           
SDERRQ   EQU   2                   Send validation errors                       
SDLNKQ   EQU   255                 Send worker file contents (FALINK)           
                                                                                
SEND     NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(save area)                              
         L     R5,AWRKBLK                                                       
         USING WRKIOD,R5           R5=A(WRKIO control block)                    
                                                                                
         NI    LP_INDS,FF-(LP_IOUPD)                                            
         L     RE,LP_AFBLK                                                      
         MVC   FALAKEY-FALINKD(,RE),NULLS                                       
         OI    FALAINDS-FALINKD(RE),FALAINDC+FALAINDD                           
         MVI   SDCALL,SDLNKQ       Set FALINK calling                           
         CHI   R1,SDLNKQ           Test called from FALINK                      
         JNL   *+12                                                             
         STC   R1,SDCALL           Set DDLINK call type                         
         J     *+10                                                             
         MVC   PUTROUTS(PUTROUTL),0(R1)                                         
                                                                                
         CLI   SDCALL,SDERRQ       Test return validation errors                
         JE    SEND0120            (record already read)                        
         TM    INDQGARC,INDSGARC   Test processing archive pointer              
         JNZ   SEND0044                                                         
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    SEND0030                                                         
         CLC   LS_WKEY,NULLS       Test worker file key known                   
         JE    DEATH061                                                         
         CLC   LS_WKEY,WRKWKEY     Test worker file the same                    
         JNE   *+12                                                             
         TM    WRKISTAT,WRKISOPN   Test file is open                            
         JNZ   SEND0020                                                         
         MVC   WRKWKEY,LS_WKEY                                                  
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the worker file                         
         JE    SEND0020                                                         
         GOTOR FAGENERR,GE#COWRK                                                
                                                                                
SEND0020 L     R1,WRKIAREC         Get first worker file record                 
         LHI   R0,1                                                             
         STCM  R0,15,0(R1)                                                      
         MVC   4(4,R1),REC#                                                     
         MVC   8(4,R1),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JE    SEND0040                                                         
         GOTOR FAGENERR,GE#CRREC                                                
                                                                                
SEND0030 TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JNZ   SEND0080                                                         
                                                                                
         CLC   LS_WKEY,NULLS       Test worker file key known                   
         JE    DEATH062                                                         
                                                                                
         MVC   WRKWKEY,LS_WKEY     Here for download files                      
         MVC   WRKIFTYP,RSVRFTYP   Set server work file type                    
         CLI   WRKIFTYP,0                                                       
         JNE   *+8                                                              
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the worker file                         
         JE    SEND0032                                                         
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,GE#COWRK                                                
                                                                                
SEND0032 L     R1,WRKIAREC         Get first worker file record                 
         LHI   R0,1                                                             
         STCM  R0,15,0(R1)                                                      
         MVC   4(4,R1),REC#                                                     
         MVC   8(4,R1),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JE    SEND0040                                                         
         CLC   WRKWKEY,SAVEWKEY                                                 
         JNE   SEND0280                                                         
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,GE#CRREC                                                
                                                                                
SEND0040 L     R1,WRKIABUF                                                      
         USING W_INDEX,R1                                                       
         MVC   LS_WRECS,W_RECS     Extract number of records                    
                                                                                
         TM    LS_WFLAG,LS_WFBRK   Test break on full last time                 
         JNZ   SEND0080                                                         
                                                                                
         CLC   LS_WLLRN,NULLS      Test any records shipped                     
         JE    *+12                                                             
         CLI   LT_CCTRL,LT_CCFTQ   or first for download                        
         JNE   SEND0080                                                         
                                                                                
         TM    W_ATTB,W_ATERR      Test request in error (abended)              
         JZ    SEND0042                                                         
         GOTOR CANWRK              Cancel any oustanding work                   
         GOTOR FAGENERR,TQEPCHK+G#BASE                                          
                                                                                
SEND0042 TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    *+12                                                             
         CLI   W_STAT,W_STAC       Test active status for upload                
         JE    *+8                                                              
         CLI   W_STAT,W_STSE+W_STKE                                             
         JE    *+8                                                              
         CLI   W_STAT,W_STAC+W_STKE                                             
         JNE   SEND0280                                                         
         DROP  R1                                                               
                                                                                
SEND0044 GOTOR SETREQ,WRKIAREC     Set TWA save data from record 1              
                                                                                
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JNZ   SEND0050                                                         
         TM    LS_INDS2,LS_IXDEL   Test don't purge file flag set               
         JNZ   SEND0050                                                         
                                                                                
         GOTOR DMGR,WRKIPARM,WSS   Set file status to sending                   
         JE    SEND0046                                                         
         GOTOR CANWRK              Cancel any oustanding work                   
         J     DEATH063                                                         
                                                                                
SEND0046 CLC   LS_AQUE,FZERO       Test downloading batch file                  
         JE    SEND0050                                                         
         GOTOR UPDQUE,PENDSEND     Change status pending to sending             
                                                                                
SEND0050 LHI   R0,1                                                             
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JNZ   SEND0080                                                         
         LHI   R0,2                Start at record#2 for download               
         TM    LP_RUNI1,LP_RUPLQ   Test upload & process in this task           
         JNZ   *+12                                                             
         TM    LS_INDS1,LS_IGLOB   or upload & process in another task          
         JZ    *+12                                                             
         LHI   R0,1                Yes - start at record#1                      
         NI    LS_INDS1,FF-(LS_IGLOB)                                           
         STCM  R0,15,LS_WLLRN                                                   
         MVC   LS_WLLRX,NULLS                                                   
         CLM   R0,15,LS_WRECS      Test nothing to send                         
         JH    SEND0230                                                         
         CHI   R0,1                Test record#1 required                       
         JE    SEND0120            Yes - we have read it already                
         J     SEND0080            No - read first download record              
                                                                                
SEND0060 TM    LS_INDS2,LS_IBSAM   Test BSAM file                               
         JZ    SEND0066                                                         
                                                                                
         SR    RE,RE                                                            
SEND0062 CLI   0(R2),0             Locate end of current record                 
         JE    SEND0064                                                         
         ICM   RE,3,LQ_LN-LQ_D(R2)                                              
         AR    R2,RE                                                            
         J     SEND0062                                                         
                                                                                
SEND0064 L     R1,WRKIAREC         Point to input block                         
         LLH   RE,0(R1)            RE=L'block                                   
         AR    RE,R1                                                            
         BCTR  RE,0                RE=A(end of block)                           
         CR    RE,R2               Test at end of current block                 
         JE    SEND0070            Yes - get next record                        
         AHI   R2,1+4              Bump past record terminator/length           
         OI    INDQFTDL,INDSFTDL   Set first time for new record                
         ST    R2,AWRKREC                                                       
         J     SEND0150                                                         
                                                                                
SEND0066 CLI   SDCALL,SDERRQ       Test sending validation errors               
         JE    SEND0230                                                         
                                                                                
SEND0070 ICM   R0,15,LS_WLLRN      Get next record in file                      
         AHI   R0,1                                                             
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JNZ   *+12                                                             
         CLM   R0,15,LS_WRECS      Test all records sent                        
         JH    SEND0230                                                         
         STCM  R0,15,LS_WLLRN      Set next record number                       
         MVC   LS_WLLRX,NULLS      Set index to start of record                 
                                                                                
SEND0080 TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JZ    *+10                                                             
         MVC   WRKIAREC,WRKIABUF   Yes - use 14k buffer area for I/O            
                                                                                
         TM    LS_WFLAG,LS_WFBRK   Test break on full last time                 
         JZ    SEND0090                                                         
         NI    LS_WFLAG,FF-(LS_WFBRK)                                           
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JZ    SEND0090                                                         
         MVC   FAWSSVRD(FAWSSVRL),NULLS                                         
         MVC   FAWSTOKN,BSAMTOKN                                                
         MVI   FAWSACTN,FAWSURST   Set to restore last BSAM file record         
         MVC   FAWSADR,WRKIAREC                                                 
         GOTOR WSSVR,FAWSSVRD      Restore last BSAM file record                
         CLI   FAWSRTN,0                                                        
         JNE   DEATH064                                                         
         MVI   FAWSACTN,FAWSUDEL                                                
         GOTOR (RF),(R1)           Delete buffer                                
         J     SEND0120                                                         
                                                                                
SEND0090 TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JZ    SEND0110                                                         
         TM    LS_INDS2,LS_IOPEN   Test BSAM file is open                       
         JNZ   SEND0100                                                         
         CLC   DSN,NULLS           Test DSN name present                        
         JE    DEATH065                                                         
         GOTOR FABSAM,DMCB,1,DSN,0,0                                            
         JE    SEND0092                                                         
         MVC   LS_INDS,NULLS       Turn off indicators                          
         GOTOR FAGENERR,GE#COFIL                                                
                                                                                
SEND0092 OI    LS_INDS2,LS_IOPEN   Set BSAM file is open                        
                                                                                
SEND0100 GOTOR FABSAM,DMCB,2,WRKIAREC,0,0                                       
         JNE   SEND0230                                                         
         J     SEND0120                                                         
                                                                                
SEND0110 L     R1,WRKIAREC         Get (first/)next worker file record          
         MVC   0(4,R1),LS_WLLRN                                                 
         MVC   4(4,R1),REC#                                                     
         MVC   8(4,R1),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JE    SEND0120                                                         
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,GE#CRREC                                                
                                                                                
SEND0120 L     R2,WRKIAREC                                                      
         SR    RE,RE                                                            
         ICM   RE,3,LS_WLLRX       RE=index to last shipped data                
         JNZ   SEND0130                                                         
         OI    INDQFTDL,INDSFTDL   Set first time for new record                
         AHI   R2,4                and point to first element                   
         TM    LS_INDS2,LS_IBSAM   Test BSAM download file                      
         JZ    *+8                                                              
         AHI   R2,4                Bump past record length                      
         ST    R2,AWRKREC          Save A(worker file record)                   
         J     SEND0150                                                         
                                                                                
SEND0130 AR    R2,RE               R2=A(next output element)                    
         TM    INDQFRSM,INDSFRSM   Test resume after break                      
         JZ    SEND0170                                                         
         NI    INDQFRSM,FF-(INDSFRSM)                                           
                                                                                
         USING LQ_D,R2                                                          
SEND0140 LLH   RE,LQ_LN            Bump to next element on record               
         AR    R2,RE                                                            
         J     SEND0160                                                         
                                                                                
SEND0150 TM    INDQFTDL,INDSFTDL   Test first time for new record               
         JZ    SEND0160                                                         
         NI    INDQFTDL,FF-(INDSFTDL)                                           
         TM    LS_INDS2,LS_ILADL   Test embedded limit access                   
         JZ    SEND0160                                                         
         GOTOR TSTLIM              Test limit access                            
         JNE   SEND0060            CC=not equal - reject this record            
                                                                                
SEND0160 CLI   LQ_EL,0             Test end of record                           
         JE    SEND0060                                                         
         CLI   LQ_EL,LQ_LIMAQ      Test limit access defn. element              
         JE    SEND0380                                                         
         CLI   LQ_EL,LQ_FSECQ      Test field security defn. element            
         JE    SEND0460                                                         
         CLI   LQ_EL,LQ_ERRRQ      Test server error element                    
         JE    SEND0340                                                         
         CLI   LQ_EL,LQ_RUNXQ      Test run another process                     
         JE    SEND0360                                                         
         CLI   LQ_EL,LQ_RAWDQ      Test raw download data element               
         JE    *+12                                                             
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JNE   SEND0140                                                         
                                                                                
         LR    RE,R2                                                            
         S     RE,WRKIAREC                                                      
         STCM  RE,3,LS_WLLRX       Set current displacement                     
                                                                                
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JNE   SEND0170                                                         
         CLC   LQ_LN,LQ#LNCQ       Test pointing to record header               
         JNE   SEND0170                                                         
         MVC   LS_ACRMC,LQ_DCODE   Save record map code                         
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),LQ_DCODE                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
         J     SEND0140                                                         
                                                                                
SEND0170 GOTOR TSTFLD,LQ_EL        Test field security                          
         JNE   SEND0140                                                         
                                                                                
         LA    R6,WORK             Send data component                          
         USING LF_D,R6                                                          
         MVI   LF_LEN,LF_DTAL                                                   
         MVC   LF_CODE,LQ_DCODE                                                 
         LLH   R0,LQ_DCODE                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  LF_TEXT,DUB                                                      
         TM    INDQXCOD,INDSXCOD   Test want hex codes returned                 
         JZ    SEND0180                                                         
         MVI   LF_TEXT,HEXQ                                                     
         GOTOR HEXOUT,DMCB,LF_CODE,LF_TEXT+1,L'LF_CODE,0                        
                                                                                
SEND0180 MVI   LF_TYPE,MDTUQQ      Set special DDLINK output type               
         LLH   R0,LQ_LN                                                         
         SHI   R0,LQ_LNCQ                                                       
         STC   R0,LF_DLEN          Set data length                              
                                                                                
         CLI   LQ_EL,LQ_RAWDQ      Test raw data download element               
         JNE   SEND0190                                                         
         SHI   R0,1                Adjust raw data length & edit data           
         JNP   SEND0200                                                         
         GOTOR LP_AEOUT,DMCB,(LQ_DTYPE,LQ_DDATA),0,                    +        
               ((R0),WORK2+L'LP_OTYPE),0,0                                      
         MVC   WORK2(L'LP_OTYPE),LP_OTYPE                                       
         L     R0,LP_OLEN          Get output length                            
         AHI   R0,1                Add one for type                             
         STC   R0,LF_DLEN          Set output length                            
         LA    R0,WORK2            Point to edited data                         
         J     SEND0210                                                         
                                                                                
SEND0190 CHI   R0,1                Test sending map code only                   
         JE    SEND0200                                                         
         LA    R0,LQ_DTYPE         No - point to download data                  
         J     SEND0210                                                         
                                                                                
SEND0200 MVI   LF_LEN,1            Send map code only                           
         MVI   WORK2,LP_OTHDO                                                   
         LA    R0,WORK2                                                         
                                                                                
SEND0210 GOTOR ADDDATA,DMCB,LP_AFBLK,LF_D,(R0),0                                
         OI    INDQSENT,INDSSENT   Set have sent data                           
         TM    INDQFBRK,INDSFBRK   Test break on full set                       
         JZ    SEND0140            No - get next data element                   
         OI    LS_WFLAG,LS_WFBRK   Set break on full flag                       
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JZ    SEND0220                                                         
         MVC   FAWSSVRD(FAWSSVRL),NULLS                                         
         MVC   FAWSTOKN,BSAMTOKN                                                
         MVI   FAWSACTN,FAWSUSVE   Set to save BSAM file record                 
         MVC   FAWSADR,WRKIAREC                                                 
         L     RE,WRKIAREC                                                      
         MVC   FAWSLEN,0(RE)       Record length at +0(2)                       
         GOTOR WSSVR,FAWSSVRD      Save BSAM file record                        
         CLI   FAWSRTN,0                                                        
         JNE   DEATH066                                                         
                                                                                
SEND0220 GOTOR ADDDATA,DMCB,LP_AFBLK,FALADNE,FALADNE,0                          
         J     SENDX                                                            
         DROP  R6                                                               
                                                                                
SEND0230 MVC   LS_WLLID,NULLS      Clear last sent values                       
         TM    LP_FLAG1,LP_FKEEP   Test keeping worker files                    
         JNZ   SEND0240                                                         
         TM    LS_INDS2,LS_IBSAM   Test BSAM file download                      
         JNZ   SEND0240                                                         
         TM    LS_INDS2,LS_IXDEL   Test don't purge file flag set               
         JNZ   SEND0240                                                         
         TM    LS_IIND1,LS_IKWRK   Test interface override to keep file         
         JNZ   SEND0240                                                         
         TM    LP_OFLG1,LP_OFKNW   Test DDLINK option to keep file              
         JNZ   SEND0240                                                         
         GOTOR DMGR,WRKIPARM,WSP   Purge the worker file                        
         JNE   DEATH067                                                         
                                                                                
SEND0240 CLC   LS_WSEG,NULLS       Test next segment key present                
         JE    SEND0260            No - download complete                       
         TM    LS_WFLAG,LS_WFDDL   Test desktop download                        
         JNZ   SEND0250                                                         
         LA    R4,LS_WQUE          Update work queue entry with                 
         MVC   WORK(1),LS_WFLAG    Next work file segment key                   
         NI    WORK,LS_WFCNT                                                    
         SR    R0,R0                                                            
         ICM   R0,1,WORK                                                        
         JZ    DEATH068                                                         
         BASR  RE,0                                                             
         CLC   LS_WKEY,LS_WKEY1-LS_WQUE(R4)                                     
         JE    SEND0242                                                         
         AHI   R4,LS_WQUEL                                                      
         BCTR  R0,RE                                                            
         J     DEATH069                                                         
                                                                                
SEND0242 MVC   LS_WKEY1-LS_WQUE(,R4),LS_WSEG                                    
                                                                                
SEND0250 MVC   LS_WKEY,LS_WSEG     Set next file segment to inspect             
         MVC   LS_WSEG,NULLS       Clear next segment key                       
         TM    LS_WFLAG,LS_WFDDL   Test desktop download                        
         JNZ   SEND0030            Yes                                          
         J     SEND0510            Else test for error completion               
                                                                                
SEND0260 TM    LS_INDS2,LS_IARCP   Test ending archive file                     
         JNZ   SEND0330                                                         
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JNZ   SEND0330                                                         
         CLI   SDCALL,SDERRQ       Test sending validation errors               
         JE    SEND0330                                                         
         TM    LS_WFLAG,LS_WFDDL   Test desktop download in progress            
         JNZ   SEND0330                                                         
         GOTOR PROTOFF                                                          
         ICM   R2,15,LS_AQUE                                                    
         JZ    DEATH070                                                         
         LAM   AR2,AR2,LP_TALET                                                 
         SAC   512                                                              
         USING TABSQUED,R2         Clear dataspace queue entry                  
         MVC   TABSQUED(TABSQUEL),NULLS                                         
         DROP  R2                                                               
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         MVC   LS_AQUE,FZERO                                                    
                                                                                
         LA    R4,LS_WQUE          Clear work queue entry                       
         MVC   WORK(1),LS_WFLAG                                                 
         NI    WORK,LS_WFCNT                                                    
         SR    R0,R0                                                            
         ICM   R0,1,WORK                                                        
         JZ    DEATH071                                                         
                                                                                
SEND0270 CLC   LS_WKEY,LS_WKEY1-LS_WQUE(R4)                                     
         JE    SEND0272                                                         
         AHI   R4,LS_WQUEL                                                      
         JCT   R0,SEND0270                                                      
         J     DEATH072                                                         
                                                                                
SEND0272 MVC   0(LS_WQUEL,R4),NULLS                                             
         MVC   LS_WKEY,NULLS                                                    
         MVC   LS_AQUE,FZERO                                                    
         J     SEND0290                                                         
                                                                                
SEND0280 TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    SEND0282                                                         
         GOTOR FAGENERR,GE#IWSTA   Yes - return invalid file status             
                                                                                
SEND0282 CLI   LS_FAVER,VERSION5   Test asynchronous download                   
         JNL   SEND0284                                                         
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,GE#IWSTA                                                
                                                                                
SEND0284 CLC   LS_WKEY,SAVEWKEY    Must be a different file segment             
         JNE   SEND0286                                                         
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,GE#IWSTA                                                
                                                                                
SEND0286 GOTOR UPDQUE,SENDPROC     Change queue status to processing            
                                                                                
SEND0290 LA    R4,LS_WQUE          Look for another file to send                
         MVC   WORK(1),LS_WFLAG                                                 
         NI    WORK,LS_WFCNT                                                    
         SR    R0,R0                                                            
         ICM   R0,1,WORK           R0=number of work queue entries              
         JZ    DEATH073                                                         
         SR    R6,R6                                                            
         GOTOR PROTOFF                                                          
                                                                                
SEND0300 CLC   0(LS_WQUEL,R4),NULLS                                             
         JE    SEND0310            Ignore fully sent entries                    
         AHI   R6,1                Bump incomplete download count               
         ICM   R2,15,LS_AQUE1-LS_WQUE(R4)                                       
         JZ    DEATH074                                                         
         LAM   AR2,AR2,LP_TALET                                                 
         SAC   512                                                              
         USING TABSQUED,R2                                                      
         CLI   TQSTATUS,TQSPEND    Test send pending for this entry             
         JE    *+12                                                             
         CLI   TQSTATUS,TQSDONE    Test work completed                          
         JNE   SEND0310                                                         
         DROP  R2                                                               
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         MVC   LS_WKEY,LS_WKEY1-LS_WQUE(R4)                                     
         MVC   LS_AQUE,LS_AQUE1-LS_WQUE(R4)                                     
         MVC   SAVEWKEY,LS_WKEY    Force error if can't send this one           
         J     SEND0510                                                         
                                                                                
SEND0310 SAC   0                   Back to normal addressing mode               
         LAM   AR2,AR2,ARZERO                                                   
         AHI   R4,LS_WQUEL         Bump to next work queue entry                
         JCT   R0,SEND0300         Do for number of entries                     
         GOTOR PROTON                                                           
                                                                                
SEND0320 LTR   R6,R6               Test all work has been sent                  
         JZ    SEND0330                                                         
         TM    INDQSENT,INDSSENT   Test have sent any data                      
         JZ    SEND0370            No                                           
         GOTOR ADDDATA,DMCB,LP_AFBLK,FALABAS,FALABAS,0                          
         J     SENDX                                                            
                                                                                
SEND0330 MVI   LS_WFLAG,0          Reset queue flag                             
         MVC   LS_INDS,NULLS       Reset indicator bytes                        
         MVC   LS_WKEY,NULLS       Clear worker file key                        
         GOTOR ADDDATA,DMCB,LP_AFBLK,FALADNE,FALADNE,0                          
         L     RF,ASSB                                                          
         TM    SSBSTAT6-SSBD(RF),SSB6POLL                                       
         JZ    SENDX                                                            
         GOTOR GETFACT,DMCB,(X'80',0),F#DDLPUN                                  
         J     SENDX                                                            
                                                                                
         USING LQ_D,R2                                                          
SEND0340 MVC   LP_ERROR,LQ_ERRMN   Set error message number                     
         MVC   LP_EMSYS,LQ_ERRMS   Set error message system                     
         LLH   R1,LQ_LN                                                         
         SHI   R1,LQ_LNEQ+1        Test any extra text to tack-on               
         JM    SEND0350            No                                           
         OI    INDQXTRA,INDSXTRA   Set extra message indicator on               
         MVI   WORK2,C' '          Initialize for extra message                 
         MVC   WORK2+1(L'WORK2-1),WORK2                                         
         EX    R1,SENDMVWQ                                                      
                                                                                
SEND0350 GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAINPERR            and return with error message                
                                                                                
SEND0360 ST    R2,ARUNXEL          Set A(RUNX element)                          
         OI    LP_FLAG1,LP_FRUNX   Set running other process on exit            
         MVC   SAVERUNI,LP_RUNI1   Save current run indicators                  
         MVC   LP_RUNI,NULLS       Clear run indicators                         
         GOTOR LP_AVMAP,PARM,('VMNOWKQ',LQ_DCODE)                               
         TM    LP_RUNI1,LP_RGLBQ+LP_RUPLQ                                       
         JNZ   DEATH075                                                         
         OI    LP_RUNI1,LP_RNOWQ   Set running now                              
         MVI   LP_CMODE,RPRCWRKQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize request            
         JNE   DEATH076                                                         
                                                                                
         GOTOR SAVTIA              Save the TIA if necessary                    
         GOTOR LP_ARUN             Go run the download request                  
         GOTOR RESTIA              Restore the TIA if necessary                 
                                                                                
         OI    INDQRANX,INDSRANX   Set ran other process on exit                
         MVC   LP_RUNI,SAVERUNI    Restore run indicators                       
         NI    LP_FLAG1,FF-(LP_FRUNX)                                           
         ICM   R2,15,AERUNEL       Test end run element present                 
         JNZ   SEND0140            Yes - bump to next element                   
         J     SEND0060            Else get next download record                
                                                                                
SEND0370 L     RD,UNWINDRD         Return 'RN' to PC                            
         LM    RE,RC,12(RD)                                                     
         J     FAJSRN                                                           
                                                                                
SEND0380 OI    LS_INDS2,LS_ILADL   Set limit access download in process         
         NI    LS_INDS2,FF-(LS_IISYS)                                           
                                                                                
         LA    R0,LS_POOL          Clear limit access data                      
         LHI   R1,L'LS_POOL                                                     
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         MVC   LS_AMTHD,LQ_AMTHD   Set limit access method                      
         LA    R6,LQ_ARMAP                                                      
         LA    R4,LS_ADLIM                                                      
         USING LS_ADEFN,R4         R4=A(record definition)                      
         LLH   R0,LQ_LN                                                         
         SHI   R0,LQ_ARMAP-LQ_D    R0=length of access data                     
         JNP   DEATH077                                                         
                                                                                
SEND0390 LTR   R0,R0               Test anything left to do                     
         JZ    SEND0420                                                         
         ST    R4,DUB                                                           
         MVC   LS_ARMAP,0(R6)      Move record map code to table                
         AHI   R6,L'LS_ARMAP       R6=A(first data definition)                  
         SHI   R0,L'LS_ARMAP                                                    
         JNP   DEATH078                                                         
         LA    RE,LS_ADDEF                                                      
ADDEF    USING LS_ADDEF,RE         RE=A(data definition)                        
                                                                                
SEND0400 CLI   0(R6),0             Test end of record definition                
         JE    SEND0410                                                         
         MVC   ADDEF.LS_ADTYP(L'LS_ADTYP+L'LS_ADMAP),0(R6)                      
         AHI   R6,L'LQ_ADTYP+L'LQ_ADMAP                                         
         AHI   RE,LS_ADLNQ                                                      
         SHI   R0,L'LQ_ADTYP+L'LQ_ADMAP                                         
         JP    SEND0400                                                         
         JZ    SEND0410                                                         
         J     DEATH079                                                         
                                                                                
SEND0410 MVI   ADDEF.LS_ADTYP,0    Set end of data list                         
         AHI   RE,L'LS_ADTYP                                                    
         S     RE,DUB              RE=L'current record entry                    
         CHI   RE,LS_ARLNQ+LS_ADLNQ                                             
         JL    DEATH080                                                         
         STCM  RE,1,LS_ARLEN       Set length of current entry                  
         AR    R4,RE               Point to next one                            
         AHI   R6,L'LQ_ADTYP       Bump past the terminator                     
         SHI   R0,L'LQ_ADTYP       and decrement length                         
         JP    SEND0390                                                         
                                                                                
SEND0420 MVI   LS_ARLEN,0          Terminate the record list                    
         AHI   R4,L'LS_ARLEN       R4=length of table                           
         DROP  ADDEF                                                            
         DROP  R4                                                               
                                                                                
         CHI   R4,LS_ARLNQ+LS_ADLNQ                                             
         JL    DEATH081                                                         
         AHI   R4,7                Round to doubleword & set eyecatcher         
         SRL   R4,3                                                             
         SLL   R4,3                                                             
         MVC   0(L'LIMEYE,R4),LIMEYE                                            
         AHI   R4,L'LIMEYE         Bump to access block                         
         LA    RE,LS_ADLIM                                                      
         SR    R4,RE                                                            
         STCM  R4,3,LS_ADOCB       Set displacement to OFFICER block            
                                                                                
         CLI   LS_AMTHD,LQ_AMACC   Accpak                                       
         JNE   SEND0422                                                         
         MVI   WORK,RFPFSAPN                                                    
         J     SEND0426                                                         
                                                                                
SEND0422 DS    0H                                                               
*&&US                                                                           
         CLI   LS_AMTHD,LQ_AMSPT   Test Spotpak                                 
         JE    SEND0424                                                         
         CLI   LS_AMTHD,LQ_AMNET   Test Netpak                                  
         JE    SEND0424                                                         
         CLI   LS_AMTHD,LQ_AMPRT   Test Printpak                                
         JE    SEND0424                                                         
*&&                                                                             
         J     DEATH082                                                         
                                                                                
SEND0424 GOTOR GETALA              Spotpak/Netpak/Printpak                      
*&&US                                                                           
         USING OFFICED,R4          R4=A(OFFICER control block)                  
         CLI   LS_AMTHD,LQ_AMSPT   Spotpak                                      
         JNE   *+12                                                             
         MVI   OFCSYS,RFPFSSPL                                                  
         MVI   WORK,RFPFSSPN                                                    
                                                                                
         CLI   LS_AMTHD,LQ_AMNET   Netpak                                       
         JNE   *+12                                                             
         MVI   OFCSYS,RFPFSSPL                                                  
         MVI   WORK,RFPFSNEN                                                    
                                                                                
         CLI   LS_AMTHD,LQ_AMPRT   Printpak                                     
         JNE   SEND0426                                                         
         MVI   OFCSYS,RFPFSPPL                                                  
         MVI   WORK,RFPFSPPN                                                    
*&&                                                                             
SEND0426 GOTOR GETFACT,DMCB,0      Switch and set security                      
         L     R1,0(R1)                                                         
         L     R1,FASYSLST-FACTSD(R1)                                           
         LH    RE,0(R1)                                                         
         L     RF,2(R1)                                                         
         AHI   R1,6                Locate system entry in syslst                
         CLC   WORK(1),0(R1)                                                    
         JE    SEND0432                                                         
         JXLE  R1,RE,*-10                                                       
         J     DEATH083                                                         
                                                                                
SEND0432 MVC   WORK+1(3),2(R1)     Set system name to switch to                 
                                                                                
         GOTOR SWITCH,DMCB,WORK+1,0                                             
         CLI   4(R1),0             Test system switch successful                
         JE    SEND0434                                                         
         OI    LS_INDS2,LS_IISYS   No - set invalid system flag                 
         MVI   LP_OSYS,FF          Set system invalid                           
         J     SEND0140                                                         
                                                                                
SEND0434 MVC   LP_OSYS,WORK        Set connected overlay system                 
         L     RF,LP_ATWA          Set limit access value                       
         MVC   LP_ACCS,TWAACCS-TWAD(RF)                                         
         ICM   RF,15,LP_ASECD                                                   
         JZ    SEND0440                                                         
         MVI   SECINDS-SECD(RF),0  Initialize SECRET control flag               
         GOTOR GETSEC,1            Call SECRET to initialize                    
                                                                                
SEND0440 CLI   LS_AMTHD,LQ_AMACC   Accpak                                       
         JNE   SEND0442                                                         
         GOTOR INIOFL              Call OFFAL to initialize                     
         JE    SEND0140                                                         
         MVI   LP_OSYS,FF          Set system invalid                           
         J     SEND0140                                                         
                                                                                
SEND0442 DS    0H                                                               
*&&US                                                                           
         MVC   OFCAUTH,LP_ACCS     Set OFFICER values                           
         MVC   OFCAGY,LP_AGY                                                    
         MVC   OFCLMT,LP_ACCS                                                   
         MVC   OFCSECD,LP_ASECD                                                 
         DROP  R4                                                               
*&&                                                                             
         J     SEND0140            Get next input element                       
                                                                                
SEND0460 TM    LS_INDS2,LS_ILADL   Test limit access values present             
         JZ    DEATH084                                                         
         TM    LS_INDS2,LS_IFSEC   Must only be one field definition            
         JNZ   DEATH085                                                         
         OI    LS_INDS2,LS_IFSEC   Set field security active                    
                                                                                
         MVC   LS_ADFSD,LS_ADOCB   Build field security control values          
         LLH   R4,LS_ADFSD                                                      
         LA    R4,LS_ADLIM(R4)                                                  
         USING LS_ADEFN,R4                                                      
         MVC   LS_AOSSP,LQ_FSOSP   Set override system/program (if any)         
         LA    R6,LQ_FSRM#                                                      
         LLH   R0,LQ_LN                                                         
         SHI   R0,LQ_FSRM#-LQ_D    R0=length of security data                   
         JNP   DEATH086                                                         
                                                                                
SEND0470 LTR   R0,R0               Test anything left to do                     
         JZ    SEND0500                                                         
         ST    R4,DUB              Save A(start of record definition)           
         MVC   LS_ARMAP,0(R6)      Move record map code to table                
         AHI   R6,L'LS_ARMAP       R6=A(first data definition)                  
         SHI   R0,L'LS_ARMAP                                                    
         JNP   DEATH087                                                         
         LA    RE,LS_ADDEF                                                      
ADDEF    USING LS_ADDEF,RE         RE=A(data definition)                        
                                                                                
SEND0480 CLI   0(R6),0             Test end of record definition                
         JE    SEND0490                                                         
         MVC   ADDEF.LS_ADTYP(L'LS_ADTYP+L'LS_ADMAP),0(R6)                      
         AHI   R6,L'LQ_ADTYP+L'LQ_ADMAP                                         
         AHI   RE,LS_ADLNQ                                                      
         SHI   R0,L'LQ_ADTYP+L'LQ_ADMAP                                         
         JP    SEND0480                                                         
         JZ    SEND0490                                                         
         J     DEATH088                                                         
                                                                                
SEND0490 MVI   ADDEF.LS_ADTYP,0    Set end of data list                         
         AHI   RE,L'LS_ADTYP                                                    
         S     RE,DUB              RE=L'current record entry                    
         CHI   RE,LS_ARLNQ+LS_ADLNQ                                             
         JL    DEATH089                                                         
         STCM  RE,1,LS_ARLEN       Set length of current entry                  
         AR    R4,RE               Point to next one                            
         AHI   R6,L'LQ_FSFLD       Bump past the terminator                     
         SHI   R0,L'LQ_FSFLD       and decrement length                         
         JP    SEND0470                                                         
                                                                                
SEND0500 MVI   LS_ARLEN,0          Terminate the record list                    
         AHI   R4,L'LS_ARLEN       R4=length of table                           
         DROP  ADDEF                                                            
         DROP  R4                                                               
                                                                                
         CHI   R4,LS_ARLNQ+LS_ADLNQ                                             
         JL    DEATH090                                                         
         AHI   R4,7                Round to doubleword & set eyecatcher         
         SRL   R4,3                                                             
         SLL   R4,3                                                             
         MVC   0(L'LIMEYE,R4),LIMEYE                                            
         AHI   R4,L'LIMEYE         Bump to access block                         
         LA    RE,LS_ADLIM                                                      
         SR    R4,RE                                                            
         STCM  R4,3,LS_ADOCB       Set displacement to OFFICER block            
                                                                                
         CLC   LS_AOSSP,NULLS      Test override system/prgram present          
         JE    SEND0140                                                         
         MVC   WORK(L'LS_AOSSP),LS_AOSSP                                        
         MVI   WORK+L'LS_AOSSP,0                                                
         L     RF,LP_ASECD                                                      
         MVI   SECINDS-SECD(RF),0  Initialize security values                   
         GOTOR SECRET,DMCB,('SECPINIT+SECPOSP',(RF)),ONEK,             +        
               ('SECPIFLD',WORK)                                                
         JNL   SEND0140                                                         
         J     DEATH091                                                         
                                                                                
SEND0510 GOTOR PROTOFF             Next job/segment - test for errors           
         ICM   R2,15,LS_AQUE                                                    
         JZ    DEATH092                                                         
         LAM   AR2,AR2,LP_TALET    R2=A(job queue entry)                        
         SAC   512                                                              
         MVC   BYTE4,TQERROR-TABSQUED(R2)                                       
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         CLI   BYTE4,0             Test this job posted in error                
         JE    SEND0030            No - download this segment                   
         GOTOR CANWRK              Cancel any outstanding work                  
         LLC   R1,BYTE4            and return error message                     
         GOTOR FAGENERR,G#BASE(R1)                                              
                                                                                
SENDX    TM    INDQRANX,INDSRANX   Test ran any process on exit                 
         JZ    EXITY                                                            
         MVI   LP_CMODE,RRUNENDQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Pass last time request to server             
         J     EXITY                                                            
         DROP  R2,R5                                                            
         EJECT                                                                  
***********************************************************************         
* Save the TIA if required                                            *         
***********************************************************************         
                                                                                
SAVTIA   TM    LP_FLAG2,LP_FSTIA   Test save/restore TIA                        
         BZR   RE                                                               
                                                                                
SAVTIAGO NTR1  LABEL=*                                                          
         GOTOR GETTIA              Locate TIA                                   
         MVC   FAWSSVRD(FAWSSVRL),NULLS                                         
         MVC   FAWSTOKN,TTIATOKN                                                
         MVI   FAWSACTN,FAWSASVE   Set to save                                  
         MVC   FAWSADR,ATIA                                                     
         LHI   R0,18*ONEK                                                       
         STCM  R0,3,FAWSLEN        Set length                                   
         GOTOR WSSVR,FAWSSVRD      Save TIA                                     
         CLI   FAWSRTN,0                                                        
         JE    EXIT                                                             
         J     DEATH093                                                         
                                                                                
GETTIA   CLC   ATIA,FZERO          Test have address of the TIA                 
         BNER  RE                                                               
         NTR1  ,                                                                
         GOTOR SWITCH,DMCB,X'00FFFFFF'                                          
         L     R1,0(R1)            Point to TCB & get A(TIA)                    
         MVC   ATIA,TCBTIA-TCBD(R1)                                             
         J     EXIT                                                             
                                                                                
***********************************************************************         
* Restore the TIA if required                                         *         
***********************************************************************         
                                                                                
RESTIA   TM    LP_FLAG2,LP_FSTIA   Test save/restore TIA                        
         BZR   RE                                                               
                                                                                
RESTIAGO NTR1  LABEL=*                                                          
         MVC   FAWSSVRD(FAWSSVRL),NULLS                                         
         MVC   FAWSTOKN,TTIATOKN                                                
         MVI   FAWSACTN,FAWSARST   Set to restore                               
         MVC   FAWSADR,ATIA                                                     
         LHI   R0,18*ONEK                                                       
         STCM  R0,3,FAWSLEN        Set length                                   
         GOTOR WSSVR,FAWSSVRD      Restore TIA                                  
         CLI   FAWSRTN,0                                                        
         JNE   DEATH094                                                         
         MVI   FAWSACTN,FAWSADEL   Set to delete                                
         GOTOR (RF),(R1)           Delete the buffer                            
         CLI   FAWSRTN,0                                                        
         JE    EXIT                                                             
         J     DEATH095                                                         
         EJECT                                                                  
***********************************************************************         
* Test limit access for current download record                       *         
*                                                                     *         
* Exit:- CC=Not equal if rejected, equal if okay                      *         
***********************************************************************         
                                                                                
TSTLIM   NTR1  LABEL=*                                                          
         L     R2,AWRKREC          Point to current record                      
         USING LQ_D,R2             Locate record map element                    
         SR    R0,R0                                                            
TSTLIM02 CLI   LQ_EL,0             Test end of record                           
         JE    TSTLIM26            Yes - test previous rejected                 
         CLI   LQ_EL,LQ_LIMAQ      Test limit access defn. element              
         JE    EXITY               Yes - keep this record                       
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JNE   *+14                                                             
         CLC   LQ_LN,LQ#LNCQ       Test record map element                      
         JE    *+14                                                             
         ICM   R0,3,LQ_LN                                                       
         AR    R2,R0               Bump to next element on record               
         J     TSTLIM02                                                         
                                                                                
         TM    LS_INDS2,LS_IISYS   Test invalid system flag set                 
         JNZ   TSTLIM24            Yes - reject this record                     
                                                                                
         LA    R5,LS_ADLIM                                                      
         USING LS_ADEFN,R5         R5=A(record definitions)                     
         SR    R0,R0                                                            
TSTLIM04 CLI   LS_ARLEN,0          Test end of list                             
         JE    EXITY                                                            
         CLC   LS_ARMAP,LQ_DCODE   Match record number to table                 
         JE    *+14                                                             
         IC    R0,LS_ARLEN                                                      
         AR    R5,R0               Bump to next record definition               
         J     TSTLIM04                                                         
                                                                                
         AHI   R5,LS_ARLNQ                                                      
         ST    R5,ARECDEF          Save A(record definition)                    
         DROP  R5                                                               
                                                                                
         GOTOR GETALA              Get A(limit access control block)            
*&&US                                                                           
         CLI   LS_AMTHD,LQ_AMPRT   Test Spotpak/Netpak/Printpak                 
         JH    TSTLIM06                                                         
         USING OFFICED,R4                                                       
         MVC   OFCCLT,NULLS        Clear any previous values in block           
         MVC   OFCACCSC,NULLS                                                   
         MVI   OFCACCSM,FF                                                      
         MVI   OFCSAGMD,0                                                       
         MVI   OFCINDS,0                                                        
         MVI   OFCOFC,0                                                         
         MVC   OFCOFC2,NULLS                                                    
         MVC   OFCCLT2,NULLS                                                    
         LA    R0,OFFTAB1          Point to OFFICER control table               
         J     TSTLIM08                                                         
*&&                                                                             
TSTLIM06 CLI   LS_AMTHD,LQ_AMACC   Test Accpak                                  
         JNE   DEATH096                                                         
         LA    R0,OFFTAB2          Point to OFFAL control table                 
                                                                                
TSTLIM08 ST    R0,AOFFTAB          Save A(office control table)                 
                                                                                
         MVI   BYTE3,0             Set nothing found on this record             
         LLH   R0,LQ_LN                                                         
         AR    R2,R0                                                            
         CLI   0(R2),0             Test map element at end of record            
         JNE   *+8                                                              
         OI    BYTE3,1             Yes - set flag to reject record              
                                                                                
         L     R2,AWRKREC          Point back to start of record                
TSTLIM10 CLI   LQ_EL,0             Test end of record                           
         JE    TSTLIM18                                                         
         LA    RE,LQ_DDATA                                                      
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JE    *+8                                                              
         CLI   LQ_EL,LQ_RAWDQ      Test raw data element                        
         JE    TSTLIM11                                                         
         LA    RE,LQ_VVALU                                                      
         CLI   LQ_EL,LQ_VALUQ      or data value element                        
         JNE   TSTLIM16                                                         
TSTLIM11 MVC   WORK(16),NULLS      (assume maximum length of 16)                
         LR    R1,RE                                                            
         LA    R0,LQ_EL                                                         
         SR    R1,R0                                                            
         CLM   R1,3,LQ_LN          Test any data in element                     
         JE    *+10                                                             
         MVC   WORK(16),0(RE)      Extract data value from element              
                                                                                
         L     R5,ARECDEF                                                       
         USING LS_ADDEF,R5         R5=A(record definition)                      
TSTLIM12 CLI   LS_ADTYP,LQ_ATEOL   Test end of data type list                   
         JE    TSTLIM16                                                         
         CLC   LS_ADMAP,LQ_DCODE   Match map code to table                      
         JE    *+12                                                             
         AHI   R5,LS_ADLNQ         Bump to next table entry                     
         J     TSTLIM12                                                         
                                                                                
         L     R6,AOFFTAB                                                       
         USING OFFTABD,R6          Look up type in control table                
TSTLIM14 CLI   OFFTDTYP,LQ_ATEOL   Test end of table                            
         JE    DEATH097                                                         
         CLC   OFFTDTYP,LS_ADTYP   Match type to table                          
         JE    *+12                                                             
         AHI   R6,OFFTABL          Bump to next table entry                     
         J     TSTLIM14                                                         
                                                                                
         LLC   R1,OFFTDDSP                                                      
         AR    R1,R4               R1=A(data in office control block)           
         LLC   RF,OFFTDLEN         RF=L'data-1                                  
         EX    RF,TSTLMV1W                                                      
         OI    BYTE3,2             Set we have some data                        
                                                                                
TSTLIM16 LLH   R0,LQ_LN            Bump to next element                         
         AR    R2,R0                                                            
         J     TSTLIM10                                                         
                                                                                
TSTLIM18 TM    BYTE3,2             Test any limit access data present           
         JZ    TSTLIM26            No                                           
                                                                                
         NI    LS_AINDS,FF-(LS_AIREJ)                                           
         CLI   LS_AMTHD,LQ_AMPRT   Test Spotpak/Netpak/Printpak                 
         JH    TSTLIM22                                                         
*&&UK*&& J     DEATH098                                                         
*&&US                                                                           
         USING OFFICED,R4                                                       
         CLC   OFCCLT2,NULLS       Test 2 byte client code present              
         JE    *+8                                                              
         OI    OFCINDS,OFCI2CSC    Yes - set indicator for OFFICER              
         CLC   OFFICER,FZERO                                                    
         JNE   TSTLIM20                                                         
         LA    R0,QOFFICER         Get A(OFFICER)                               
         ICM   R0,B'1110',T00A                                                  
         GOTOR CALLOV,DMCB,0,(R0)                                               
         GOTOR PROTOFF                                                          
         MVC   OFFICER,0(R1)                                                    
         GOTOR PROTON                                                           
                                                                                
TSTLIM20 GOTOR OFFICER,DMCB,(C'2',OFFICED),(X'C0',LP_ACOM),OFCLIST              
         JNE   TSTLIM24                                                         
         TM    BYTE3,1             Reject this if record map is last            
         JNZ   EXITN               element on the record                        
         J     EXITY                                                            
*&&                                                                             
TSTLIM22 CLI   LS_AMTHD,LQ_AMACC   Test Accpak                                  
         JNE   DEATH099                                                         
         USING OFFALD,R4                                                        
         GOTOR GOOFFAL,OFFAPST     Call OFFAL to validate office                
         JNE   TSTLIM24                                                         
         TM    BYTE3,1             Reject this if record map is last            
         JNZ   EXITN               element on the record                        
         J     EXITY                                                            
         DROP  R4                                                               
                                                                                
TSTLIM24 OI    LS_AINDS,LS_AIREJ   Turn on rejected indicator                   
         J     EXITN               and reject this record                       
                                                                                
TSTLIM26 TM    LS_AINDS,LS_AIREJ   Test previous record rejected                
         JNZ   EXITN               Yes - reject this one too                    
         J     EXITY               Else download this record                    
         DROP  R2,R5,R6                                                         
                                                                                
***********************************************************************         
* Test field security                                                 *         
***********************************************************************         
                                                                                
         USING LQ_D,R1                                                          
TSTFLD   TM    LS_INDS2,LS_IFSEC   Test field security is active                
         BZR   RE                                                               
TSTFLD02 NTR1  LABEL=*                                                          
                                                                                
         LLH   RF,LS_ADFSD                                                      
         LA    RF,LS_ADLIM(RF)                                                  
         USING LS_ADEFN,RF         RF=A(field security definitions)             
         SR    R0,R0                                                            
TSTFLD04 CLI   LS_ARLEN,0          Test end of record definitions               
         JE    EXITY                                                            
         CLC   LS_ACRMC,LS_ARMAP                                                
         JE    *+14                                                             
         IC    R0,LS_ARLEN                                                      
         AR    RF,R0                                                            
         J     TSTFLD04                                                         
                                                                                
         LA    RF,LS_ADDEF                                                      
         USING LS_ADDEF,RF                                                      
TSTFLD06 CLI   LS_ADTYP,0          Test end of field definitions                
         JE    EXITY                                                            
         CLC   LS_ADMAP,LQ_DCODE   Test correct field                           
         JE    *+12                                                             
         AHI   RF,LS_ADLNQ                                                      
         J     TSTFLD06                                                         
         DROP  R1                                                               
                                                                                
         SR    R0,R0                                                            
         CLC   LS_AOSSP,NULLS      Test override system/program present         
         JE    *+8                                                              
         LHI   R0,SECPIFLD                                                      
         GOTOR SECRET,DMCB,('SECPFLDP',LP_ASECD),LS_ADTYP,             +        
               ((R0),LS_AOSSP)                                                  
         JL    EXITN                                                            
         J     EXITY                                                            
         DROP  RF                                                               
                                                                                
***********************************************************************         
* Get/set A(Limit access control block) in R4                         *         
***********************************************************************         
                                                                                
GETALA   ICM   R4,15,ALABLOCK      Test already established                     
         BNZR  RE                                                               
                                                                                
         CLI   LS_AMTHD,LQ_AMACC   Test Accpak                                  
         JNE   GETALA02                                                         
         L     R4,LP_ASECD         OFFALD is behind SECD                        
         AHI   R4,ONEK+L'OFLEYE                                                 
         J     GETALAX                                                          
                                                                                
GETALA02 LLH   R4,LS_ADOCB                                                      
         LA    R4,LS_ADLIM(R4)                                                  
                                                                                
GETALAX  STCM  R4,15,ALABLOCK                                                   
         BR    RE                                                               
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Initialize OFFAL control block                                      *         
***********************************************************************         
                                                                                
INIOFL   NTR1  LABEL=*                                                          
         MVC   ALABLOCK,FZERO      Clear block address if set                   
         GOTOR GETALA              Get A(OFFAL control block)                   
         SHI   R4,L'OFLEYE                                                      
                                                                                
         LR    R0,R4               Clear control block & set eyecatcher         
         LHI   R1,OFFALLEN+L'OFLEYE                                             
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         MVC   0(L'OFLEYE,R4),OFLEYE                                            
         AHI   R4,L'OFLEYE                                                      
                                                                                
         USING OFFALD,R4                                                        
         MVC   OFFAALPH,LP_AGY     Set agency alpha id                          
         MVC   OFFALIMA,LP_ACCS    Set limit access                             
         MVC   OFFAAUTH,LP_AUTH    Set authorization                            
                                                                                
         L     R1,LP_ACPYR                                                      
         USING CPYRECD,R1                                                       
         MVC   OFFACPY,CPYKCPY     Set company code                             
                                                                                
         LA    R1,CPYRFST                                                       
         SR    R0,R0                                                            
         USING CPYELD,R1           Locate company element                       
INIOFL02 CLI   CPYEL,0                                                          
         JE    DEATH100                                                         
         CLI   CPYEL,CPYELQ                                                     
         JE    INIOFL04                                                         
         IC    R0,CPYLN                                                         
         AR    R1,R0                                                            
         J     INIOFL02                                                         
                                                                                
INIOFL04 MVC   OFFACST1,CPYSTAT1   Set company status flags                     
         MVC   OFFACST2,CPYSTAT2                                                
         MVC   OFFACST3,CPYSTAT3                                                
         MVC   OFFACST4,CPYSTAT4                                                
         MVC   OFFACST5,CPYSTAT5                                                
         MVC   OFFACST6,CPYSTAT6                                                
         MVC   OFFACST7,CPYSTAT7                                                
         MVC   OFFACST8,CPYSTAT8                                                
                                                                                
         GOTOR GOOFFAL,OFFAINI     Call OFFAL to initialize                     
         J     EXIT                                                             
         DROP  R4                                                               
                                                                                
***********************************************************************         
* Load (first time) and call OFFAL                                    *         
***********************************************************************         
                                                                                
         USING OFFALD,R4                                                        
GOOFFAL  NTR1  LABEL=*                                                          
         STC   R1,OFFAACT          Set action number                            
         MVC   OFFACOMF,LP_ACOM    Set A(COMFACS)                               
         CLC   OFFAL,FZERO         Test A(OFFAL) already established            
         JNE   GOOFFAL2                                                         
         LA    R0,QOFFAL                                                        
         ICM   R0,B'1110',T00A                                                  
         GOTOR CALLOV,DMCB,0,(R0)                                               
         GOTOR PROTOFF                                                          
         MVC   OFFAL,0(R1)                                                      
         GOTOR PROTON                                                           
                                                                                
GOOFFAL2 GOTOR OFFAL,OFFALD                                                     
         J     EXIT                                                             
         DROP  R4                                                               
         EJECT                                                                  
***********************************************************************         
* Receive data from FALINK (upload)                                   *         
*                                                                     *         
* Construct work map pool and create upload records if necessary      *         
***********************************************************************         
                                                                                
         USING FALINKD,R4                                                       
FARD     NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(saved w/s)                              
         MVC   LP_OPTS,NULLS       Clear DDLINK options                         
         MVC   GETDATA,0(R1)                                                    
                                                                                
FARD0010 GOTOR GETDATA,DMCB,LP_AFBLK,FAPARMS                                    
         JH    FARD0070            CC high if all data read                     
         JE    FARD0030            CC equal if given data                       
                                                                                
         MVC   WORK2,NULLS         Handle errors                                
         MVC   WORK2(1),0(R1)      Set error condition                          
         OI    WORK2,X'F0'         Make it EBCDIC                               
         OI    INDQXTRA,INDSXTRA   Turn on extra text flag                      
         CLI   0(R1),7             Test GETDATA error                           
         JNE   FARD0020                                                         
         MVI   WORK2+1,C'='                                                     
         MVC   WORK(4),8(R1)       Extract record/data map codes                
         GOTOR HEXOUT,DMCB,WORK+0,WORK2+2,2,0                                   
         MVI   WORK2+6,C'/'                                                     
         GOTOR HEXOUT,DMCB,WORK+2,WORK2+7,2,0                                   
                                                                                
FARD0020 GOTOR FAGENERR,GE#GDERR                                                
                                                                                
FARD0030 CLI   FAPARMS,0           Test header                                  
         JE    FARD0010            Yes - ignore (handled by VMAP)               
                                                                                
         TM    INDQCTRL,INDSCTRL   Test control record                          
         JNZ   FARD0040            Yes - there is no server                     
         TM    INDQINIT,INDSINIT   Test called server to initialize             
         JNZ   FARD0040                                                         
         OI    INDQINIT,INDSINIT   Set server initialized                       
         MVI   LP_CMODE,RPRCWRKQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize request            
                                                                                
FARD0040 SR    RE,RE                                                            
         ICM   RE,7,FAPAMAP+1      RE=A(FALINK map entry)                       
         ST    RE,AMD                                                           
         OI    LF_INDS-LF_D(RE),LF_FLDIQ                                        
         MVC   LF_ILEN-LF_D(,RE),FAPLINP+(L'FAPLINP-L'LF_ILEN)                  
         SR    RF,RF                                                            
         ICM   RF,7,LF_ALD-LF_D(RE)                                             
         JZ    DEATH102                                                         
         TM    LF_INDS-LF_D(RE),LF_CTRLQ                                        
         JZ    FARD0042                                                         
                                                                                
C        USING LD_D,LDWORK         Build LD_D for control record                
         USING LB_DVALS,RF                                                      
         MVC   C.LD_D(LD_LNQ),NULLS                                             
         MVI   C.LD_IDF,LD_IDFCQ                                                
         MVC   C.LD_CODE,LB_DCODE                                               
         MVC   C.LD_INDS3,LB_DBLK#                                              
         MVC   C.LD_DISP,LB_DBDSP                                               
         MVC   C.LD_LEN,LB_DLEN                                                 
         MVC   C.LD_TYPE,LB_DITYP                                               
         LA    RF,C.LD_D           and point to it                              
         DROP  RF,C                                                             
                                                                                
FARD0042 GOTOR LP_AVSTR,DMCB,FAPAINP,FAPLINP,(RF),0                             
         JE    FARD0010                                                         
         MVI   WORK2,SPACEQ                                                     
         MVC   WORK2+1(L'WORK2-1),WORK2                                         
         CLC   LP_ERROR,NULLS      Test application set error                   
         JE    *+12                                                             
         LA    R1,WORK2            Yes - send back data only                    
         J     FARD0050                                                         
                                                                                
         MVI   WORK2,C'('                                                       
         GOTOR HEXOUT,DMCB,LP_QMAPN,WORK2+1,L'LP_QMAPN,0                        
         MVI   WORK2+5,C')'                                                     
         SR    RF,RF               Else send '(recmap)datamap=data'             
         ICM   RF,7,FAPAMAP+1                                                   
         GOTOR HEXOUT,DMCB,LF_CODE-LF_D(RF),WORK2+6,L'LF_CODE,0                 
         MVI   WORK2+10,EQUALQ                                                  
         LA    R1,WORK2+11                                                      
         OI    INDQXTRA,INDSXTRA   Set extra message indicator on               
                                                                                
FARD0050 LM    RE,RF,LP_AINP                                                    
         LTR   RF,RF               Test zero length data                        
         JZ    FARD0060                                                         
         OI    INDQXTRA,INDSXTRA   Set extra message indicator on               
         BCTR  RF,0                                                             
         EX    RF,FARDMV1E                                                      
                                                                                
FARD0060 GOTOR FAINPERR            Exit on error                                
                                                                                
FARD0070 TM    INDQSSVR,INDSSSVR   Test A(application server) saved             
         JZ    FARD0080                                                         
         ICM   RF,15,SAVEASVR      Yes - restore server values                  
         STCM  RF,15,RUNASVR       Set server values                            
         ST    RF,LP_ASVR1         Set A(server)                                
         ST    RF,LP_ASVR                                                       
         MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
                                                                                
FARD0080 TM    LP_RUNI1,LP_RUPLQ   Test this is an upload                       
         JZ    FARD0150                                                         
         ICM   R2,15,AWRKBLK       Test WRKIO block is passed                   
         JZ    DEATH103                                                         
         USING WRKIOD,R2                                                        
         CLC   LP_AWMP,AWMP        Test anything in work map pool               
         JE    FARD0130                                                         
                                                                                
         TM    INDQTEST,INDSTEST   Are we in upload testing mode                
         JZ    FARD0120                                                         
         TM    LP_HINDS,LH_IANUR   Test adding a new record                     
         JNZ   FARD0120                                                         
         TM    LS_INDS1,LS_IUPAQ   Test any upload records added yet            
         JNZ   FARD0100                                                         
         MVC   LS_WKEY,NULLS       Need new file next time                      
         GOTOR FAGENERR,GE#IWSEQ                                                
                                                                                
FARD0100 MVI   WRKIACTN,WRKIAOPN   Re-open the worker file                      
         GOTOR WRKIO,WRKIOD                                                     
         JE    FARD0102                                                         
         GOTOR FAGENERR,GE#COWRK                                                
FARD0102 L     R1,WRKIAREC         Get first worker file record                 
         LHI   R0,1                                                             
         STCM  R0,15,0(R1)                                                      
         MVC   4(4,R1),REC#                                                     
         MVC   8(4,R1),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JE    FARD0104                                                         
         GOTOR FAGENERR,GE#CRREQ                                                
FARD0104 L     R1,WRKIABUF                                                      
         ICM   R0,15,W_RECS-W_INDEX(R1)                                         
         CHI   R0,1                Don't re-read record one                     
         JE    FARD0110                                                         
         ICM   R1,15,WRKIAREC      Get last worker file record                  
         STCM  R0,15,0(R1)                                                      
         MVC   4(4,R1),REC#                                                     
         MVC   8(4,R1),NULLS                                                    
         GOTOR DMGR,WRKIPARM,WRR   Read record randomly                         
         JE    FARD0110                                                         
         GOTOR FAGENERR,GE#CRREC                                                
                                                                                
FARD0110 L     R4,WRKIAREC                                                      
         AHI   R4,4                                                             
         USING LQ_D,R4                                                          
         SR    R0,R0                                                            
         BASR  RE,0                                                             
         CLI   LQ_EL,0                                                          
         JE    DEATH104                                                         
         CLI   LQ_EL,LQ_RDATQ      Test return data element                     
         JE    FARD0112                                                         
         ICM   R0,3,LQ_LN                                                       
         AR    R4,R0                                                            
         BR    RE                                                               
                                                                                
FARD0112 GOTOR LP_ABREQ,BRUPUQ     Attach to previous upload record             
         MVI   WRKIACTN,WRKIAPUT   Put the record back                          
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH105                                                         
         MVI   WRKIACTN,WRKIACLO   Close upload worker file                     
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH106                                                         
         GOTOR DMGR,WRKIPARM,WAC                                                
         JE    FARDX                                                            
         J     DEATH107                                                         
                                                                                
FARD0120 GOTOR LP_ABREQ,BRUPNQ     Create a new upload record                   
         MVI   WRKIACTN,WRKIAADD                                                
         GOTOR WRKIO,WRKIOD        Add upload record to worker file             
         JNE   DEATH108                                                         
         OI    LS_INDS1,LS_IUPAQ   Set upload record added flag                 
                                                                                
FARD0130 MVI   WRKIACTN,WRKIACLO   Close upload worker file                     
         GOTOR WRKIO,WRKIOD                                                     
         JE    FARDX                                                            
         J     DEATH109                                                         
                                                                                
FARD0150 TM    INDQARTF,INDSARTF   Test add request to folder                   
         JZ    FARDX                                                            
         MVC   REQMAP#,LP_CMAPN    Yes - preserve request map number            
         MVC   SVRPHASE(L'RSVRSYSP),RSVRSYSP                                    
         MVC   SVRPHASE+L'RSVRSYSP(L'LS_PHASE),LS_PHASE                         
         MVC   SVREODID,RSVREODI   Set end of day id                            
         GOTOR LP_AVMAP,DMCB,('VMNOWKQ',M#REQMNT)                               
         MVI   LP_RUNI1,LP_RNOWQ                                                
                                                                                
FARDX    J     EXITY                                                            
         DROP  R2,R3,R4                                                         
         EJECT                                                                  
***********************************************************************         
* Initial call to send data from FALINK (download)                    *         
*                                                                     *         
* For download requests:-                                             *         
*                                                                     *         
* Build work requests and send to other server(s) for processing or   *         
* run the work request immediately                                    *         
*                                                                     *         
* Note that download requests can be validated by another application *         
* if so a WSSVR buffer is passed to the application and control will  *         
* be returned here after the validation is done - if any validation   *         
* errors are found the error data will be returned otherwise the      *         
* request will be run immediately or sent to an off-line server for   *         
* processing depending upon the initial input control field           *         
*                                                                     *         
* For upload requests:-                                               *         
*                                                                     *         
* Write last upload record, close file and call specified application *         
* (see LI_D)                                                          *         
***********************************************************************         
                                                                                
FASD     NTR1  LABEL=*                                                          
         L     R4,LP_AFBLK                                                      
         USING FALINKD,R4          R4=A(FALINK block)                           
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         MVC   PUTROUTS(PUTROUTL),0(R1)                                         
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(saved w/s)                              
         L     R5,AWRKBLK                                                       
         USING WRKIOD,R5           R5=A(WRKIO block)                            
                                                                                
         MVC   OUTMAP,MAPOUT       Copy map into w/s                            
         LA    RF,OUTMAP                                                        
         ST    RF,FALAMAP                                                       
         MVC   LF_CODE-LF_D(,RF),LP_QMAPN                                       
                                                                                
         TM    LP_RUNI1,LP_RGLBQ   Test uploading in another app.               
         JZ    FASD0060                                                         
         GOTOR PUTGLB,1            Put values to globber                        
         GOTOR ADDDATA,DMCB,LP_AFBLK,FALAGLB,FALAGLB                            
         J     FASDX                                                            
                                                                                
FASD0060 CLI   LP_FAVER,0          If version not set                           
         JNE   *+14                                                             
         MVI   LP_FAVER,VERSION#   Default to latest PC comms version           
         MVC   LS_FAVER,LP_FAVER                                                
         CLI   LP_FAVER,VERSION4   Test version 4 or greater                    
         JNL   *+8                                                              
         NI    LP_RUNI1,LP_RNOWQ   No - always run now                          
                                                                                
         LHI   R1,PWALLQ           Set build request & run                      
         NI    LP_INDS,FF-(LP_IOUPD)                                            
         TM    LS_INDS1,LS_IOUPD   Test RUNNER upload                           
         JZ    *+12                                                             
         OI    LP_INDS,LP_IOUPD                                                 
         NI    LS_INDS1,FF-(LS_IOUPD)                                           
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    FASD0080                                                         
         TM    LP_INDS,LP_IOUPD    Test RUNNER upload                           
         JZ    FASD0080                                                         
         GOTOR VALFIL              Validate the input file                      
         JNZ   FASD0180                                                         
         TM    LP_RUNI1,LP_RDSCQ   Test off-line available                      
         JZ    FASD0170                                                         
         LHI   R1,PWUPRQ           Prepare for RUNNER upload                    
                                                                                
FASD0080 GOTOR PWRK,(R1)           Prepare work/create work queue               
                                                                                
FASD0090 TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    FASD0100                                                         
         TM    LP_RUNI1,LP_RDSCQ   Test off-line available                      
         JNZ   FASD0110                                                         
         J     FASD0170                                                         
                                                                                
FASD0100 TM    LP_RUNI1,LP_RNOWQ                                                
         JNZ   FASD0170                                                         
         TM    LP_RUNI1,LP_RDSCQ   Test off-line available                      
         JZ    FASD0170                                                         
                                                                                
FASD0110 MVC   WORK(L'WRKWKEY),WRKWKEY                                          
         MVC   WRKINDX,NULLS                                                    
         MVC   WRKWKEY,WORK                                                     
                                                                                
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the worker file                         
         JE    FASD0120                                                         
         GOTOR FAGENERR,GE#COWRK                                                
                                                                                
FASD0120 TM    INDQUPUT,INDSUPUT   Test upload validation sending data          
         JZ    *+12                                                             
         OI    LS_INDS2,LS_IXDEL   Set don't purge worker file                  
         J     FASD0180                                                         
                                                                                
         GOTOR WRKIO,WRKIOD        Read first worker file record                
         JE    FASD0122            (this is to get file values)                 
         GOTOR FAGENERR,GE#CRREQ                                                
FASD0122 L     R1,WRKIABUF                                                      
         MVC   LS_WRECS,W_RECS-W_INDEX(R1)                                      
                                                                                
***********************************************************************         
* Send output file details                                            *         
***********************************************************************         
                                                                                
         L     RF,LP_AFBLK         Set to suppress data compression             
         OI    FALAINDS-FALINKD(RF),FALAINDC                                    
         GOTOR SETELEM,DMCB,LP_AFBLK,OUTMAP,0                                   
                                                                                
         LA    R2,OUTMAP                                                        
         AHI   R2,LF_HDRL                                                       
         USING LF_D,R2                                                          
FASD0130 CLI   LF_LEN,LF_FLDX      Test end of map                              
         JE    FASD0160                                                         
                                                                                
         USING PWKEYD,WORK                                                      
         CLI   LP_FAVER,VERSION5   Test PC comms version 5 and greater          
         JL    FASD0140                                                         
         TM    RSVRIND1,RSVRSEGS   Test server allows file segments             
         JZ    *+8                                                              
         OI    LS_WFLAG,LS_WFSEG   Set segmented worker files flag              
         MVC   PWKEYD(PWKEYDL),SPACES                                           
         MVC   PWFILEID,FILEWK                                                  
         MVI   PWKEY,C'*'          Send asynchronous download flag              
         CLC   LP_MQQUE,NULLS      Test sending output via MQ                   
         JE    *+14                                                             
         MVC   PWFILEID(L'FILEMQ),FILEMQ                                        
         J     FASD0150                                                         
                                                                                
         TM    LS_WFLAG,LS_WFMLT   Test multi-server request                    
         JNZ   FASD0150            Yes - DDLINK handles polls                   
         L     RF,ASSB                                                          
         TM    SSBSTAT6-SSBD(RF),SSB6POLL                                       
         JZ    FASD0150                                                         
         LA    R0,LS_AQUE          Set queue address for FACPAK polling         
         GOTOR GETFACT,DMCB,(X'80',(R0)),F#DDLPST                               
         J     FASD0150                                                         
                                                                                
FASD0140 TM    LS_WFLAG,LS_WFMLT   Test multi-server request                    
         JNZ   DEATH110                                                         
         MVC   PWFILEID,FILEWK                                                  
         LLH   R0,WRKWUSID         Format worker file key                       
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  PWKUSRID,DUB                                                     
         MVC   PWKSP,WRKWSPS                                                    
         UNPK  DUB(3),WRKWDAY(2)                                                
         MVC   PWKDAY,DUB                                                       
         MVC   PWKCLS,WRKWCLS                                                   
         LLH   R0,WRKWSEQN                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  PWKSEQ,DUB                                                       
                                                                                
FASD0150 L     RF,LP_AFBLK                                                      
         LA    R0,PWFILEID                                                      
         STCM  R0,15,FALAKEY-FALINKD(RF)                                        
         MVI   FALAKEY,PWKEYL      Set length of key data to send               
         MVI   PWTYPE,LP_OTCHR                                                  
         GOTOR ADDDATA,DMCB,LP_AFBLK,LF_D,PWKEYD,0                              
         AHI   R2,LF_OLNQ          Bump to next table entry                     
         J     FASD0130                                                         
                                                                                
FASD0160 GOTOR ADDDATA,DMCB,LP_AFBLK,FALADNE,FALADNE,0                          
         MVC   LS_INDS,NULLS       Clear flags and worker key                   
         MVC   LS_WKEY,NULLS                                                    
         MVI   LP_RUNI1,FF         Set action on exit at FALK0170               
         J     FASDX                                                            
                                                                                
FASD0170 MVI   LP_CMODE,RPRCWRKQ   Pass process work call to server             
         GOTOR LP_AGSVR,RSVRADDR                                                
         JE    FASD0172                                                         
         GOTOR FAGENERR,GE#SVRER                                                
                                                                                
FASD0172 LA    R0,LS_POOL          Save WMP in LS_POOL                          
         LHI   R1,L'LS_POOL                                                     
         L     RE,AWMP                                                          
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
                                                                                
         GOTOR LP_ARUN             Call the run work routine                    
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Test upload & process in this task           
         JNZ   FASD0180                                                         
         MVI   LS_INDS1,0          Reset saved indicators                       
         J     FASDX                                                            
                                                                                
FASD0180 GOTOR SEND,SDSNDQ         Send worker file                             
                                                                                
FASDX    J     EXITY                                                            
         DROP  R2,R4,R5                                                         
         EJECT                                                                  
***********************************************************************         
* Validate upload file (RUNNER uploads) - LINKIO is used here (not    *         
* used in RUN for these uploads) - this is so that the server can     *         
* return errors, embedded downloads and put validation data back to   *         
* the worker file records.                                            *         
***********************************************************************         
                                                                                
VALFIL   NTR1  LABEL=*                                                          
         L     R7,AWRKBLK          Point to input worker file block             
         USING WRKIOD,R7                                                        
                                                                                
         LAY   R2,MAP                                                           
         USING LIOBD,R2            Initialize LINKIO control block              
         ST    R2,LP_ALIOB         Set A(LIOB) for application                  
         MVC   LIOBD(LIOBWORK-LIOBD),NULLS                                      
         MVC   LIOBAWRK,AWRKBLK                                                 
         MVI   LIOBIND2,LIOBIRUP   Set RUNNER upload                            
                                                                                
         OI    LP_FLAG1,LP_FDRFT   Set 'draft' mode                             
         MVI   LP_CMODE,RINIREQQ                                                
         GOTOR LP_AGSVR,RSVRADDR   (to fill in block addresses)                 
                                                                                
         MVI   LP_CMODE,RVALREQQ                                                
                                                                                
         MVI   WRKIACTN,WRKIAOPN   Open the worker file                         
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH111                                                         
                                                                                
         GOTOR LINKIO,DMCB,('LIOAUPI',LP_ALIOB)                                 
                                                                                
VALFIL02 GOTOR LINKIO,DMCB,('LIOAGET',LP_ALIOB)                                 
         JNE   VALFIL06                                                         
                                                                                
VALFIL04 GOTOR LP_AGREQ,GRUPLQ     Process upload record elements               
         JL    VALFIL02                                                         
         LA    R1,RSVRADDR         Point to server entry point                  
         TM    LP_HINDS,LH_IRADD   Test routine given                           
         JZ    *+8                                                              
         LA    R1,ROUTDISP         Yes - point to routine                       
         GOTOR LP_AGSVR,(R1)       Call processing routine                      
         JNE   *+12                CC=not equal if server error                 
         TM    LIOBFLG3,LIOBFERR   Test error put to record                     
         JZ    *+12                No - record is clean                         
         OI    INDQUVER,INDSUVER   Turn on validation error flag                
         J     VALFIL04                                                         
         TM    LIOBFLG1,LIOBFWRP+LIOBFPUT                                       
         JZ    VALFIL04                                                         
         OI    INDQUPUT,INDSUPUT   Turn on validation put flag                  
         J     VALFIL04                                                         
                                                                                
VALFIL06 NI    LP_FLAG1,FF-(LP_FDRFT)                                           
         TM    INDQUVER,INDSUVER   Test any validation errors                   
         JNZ   EXIT                                                             
         MVI   WRKIACTN,WRKIACLO   No - close the worker file                   
         GOTOR WRKIO,WRKIOD                                                     
         JE    EXITY                                                            
         J     DEATH112                                                         
         DROP  R2,R7                                                            
         EJECT                                                                  
***********************************************************************         
* Validate map code, load server overlay, build FALINK interface      *         
* maps and create upload worker file records if necessary             *         
*                                                                     *         
* This routine is either called internally or from within FALINK - if *         
* it is called from within DDLINK the high order bit of parameter one *         
* will be on (this is so that the server code is available when       *         
* FALINK calls during the upload to translate the record map code)    *         
*                                                                     *         
* Note that upload worker file records will only be created when this *         
* routine is called by FALINK and not when called internally          *         
***********************************************************************         
                                                                                
VMNOWKQ  EQU   X'80'               Don't create worker file                     
VMTESTQ  EQU   X'40'               Interactive test mode                        
VMXMAPQ  EQU   X'20'               Don't create map element                     
VMINDSQ  EQU   X'10'               Only set LP_RUNI                             
                                                                                
VMAP     NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3                                                          
         MVI   LS_SMFF#,0          Clear SMF field index                        
         NI    INDQCTRL,FF-(INDSCTRL)                                           
         LR    R4,R1               R4=A(input parameter list)                   
         MVC   VMCALL,0(R4)        Set calling type                             
                                                                                
         MVC   BYTE3,VMCALL                                                     
         NI    BYTE3,7             BYTE3=input length (or zero)                 
         SR    RF,RF                                                            
         ICM   RF,7,1(R4)          RF=A(input)                                  
         SR    RE,RE                                                            
         ICM   RE,1,BYTE3          RE=L'input (zero=already in hex)             
         JNZ   *+14                                                             
         MVC   LP_CMAPN,0(RF)                                                   
         J     VMAP0010                                                         
                                                                                
         MVI   WORK,C'0'                                                        
         MVC   WORK+1(3),WORK      Pre-fill work with EBCDIC zeroes             
         LHI   R1,4                                                             
         SR    R1,RE                                                            
         LA    R1,WORK(R1)                                                      
         MVC   0(4,R1),0(RF)                                                    
         GOTOR HEXIN,DMCB,WORK,LP_CMAPN,4                                       
         CLC   12(4,R1),NULLS      Test valid hex string input                  
         JNE   VMAP0010                                                         
         TM    LP_FLAG1,LP_FOFFL   No - kill if running off-line                
         JNZ   DEATH113                                                         
         GOTOR FAGENERR,GE#ICODE   Else send back error message                 
                                                                                
VMAP0010 TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JZ    VMAP0020                                                         
         TM    LP_FLAG2,LP_FMQIM   Build map if MQ message                      
         JNZ   VMAP0020                                                         
         MVC   LP_QMAPN,LP_CMAPN   Set map number                               
         TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JZ    VMAPX                                                            
                                                                                
         MVI   BYTE3,1             Force build of input map                     
         L     RF,LP_ASVR                                                       
         MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
         J     VMAP0100                                                         
                                                                                
VMAP0020 MVC   LP_QMAPN,LP_CMAPN   Set current map number                       
                                                                                
         LARL  R2,CTRLTAB          Point to control record table                
         USING LB_D,R2                                                          
VMAP0030 CLC   LB_HCODE,NULLS      Test end of table                            
         JE    VMAP0040                                                         
         CLC   LB_HCODE,LP_CMAPN   Match control record map code                
         JE    VMAP0330                                                         
         LLH   R1,LB_HLINK         No match - bump to next                      
         LA    R2,LB_HLINK(R1)                                                  
         J     VMAP0030            And try again                                
         DROP  R2                                                               
                                                                                
VMAP0040 ICM   RF,15,ANDX          Point to master map index                    
         JZ    DEATH114                                                         
                                                                                
         USING LN_D,RF                                                          
VMAP0050 CLC   LN_CODE,NULLS       Test end of table                            
         JNE   VMAP0060                                                         
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   DEATH303                                                         
         GOTOR FAGENERR,GE#ICODE                                                
VMAP0060 CLC   LN_CODE,LP_QMAPN    Match code to table                          
         JE    *+12                                                             
         AHI   RF,LN_LN2Q                                                       
         J     VMAP0050                                                         
                                                                                
         CLI   LN_PHASE,LKSERVER   Test DDLINK hosted server                    
         JNE   VMAP0062                                                         
         GOTOR MAPLNK              Yes - dummy-up server values                 
         J     VMAP0100                                                         
                                                                                
VMAP0062 TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   *+14                                                             
         CLC   LP_RUNI,NULLS       Test run indicators set                      
         JNE   *+10                                                             
         MVC   LP_RUNI,LN_RUNI     Set from table                               
                                                                                
         TM    LP_FLAG2,LP_FMQIM   Build map if MQ message                      
         JNZ   VMAP0110                                                         
                                                                                
         MVI   BYTE3,0             Set server phase not loaded                  
         CLC   RUNASVR,FZERO       Test any server overlay loaded               
         JE    VMAP0070            No - must load now                           
         CLC   LP_QMAPN,LS_QMAPN   Test change of map number                    
         JE    VMAP0100            No - must have phase loaded                  
         MVC   LS_QMAPN,LP_QMAPN   Save current map number                      
         MVI   BYTE3,1             Set new map code                             
         CLC   LN_PHASE,LS_PHASE   Test change of overlay                       
         JE    VMAP0100            No - don't issue load                        
                                                                                
VMAP0070 MVC   LS_QMAPN,LP_QMAPN   Save current map number                      
         MVC   LS_PHASE,LN_PHASE   Save current phase number                    
         NI    LP_INDS,FF-(LP_IFACS)                                            
         MVI   BYTE3,1             Set server phase was loaded                  
         GOTOR SETRUNI             Set run indicators                           
         TM    VMCALL,VMINDSQ      Exit if setting LP_RUNI only                 
         JNZ   VMAPX                                                            
         SR    R0,R0                                                            
         ICM   R0,8,LN_PHASE       Get server phase number                      
         DROP  RF                                                               
                                                                                
         GOTOR CALLOV,DMCB,(R0),0,0                                             
         CLI   4(R1),FF                                                         
         JE    DEATH115                                                         
         MVC   RUNASVR,0(R1)                                                    
         ICM   RF,15,RUNASVR                                                    
         JZ    DEATH116                                                         
         LA    RF,0(RF)            Ensure hob is zero                           
         ST    RF,LP_ASVR1         Save A(start of server)                      
         ST    RF,LP_ASVR                                                       
         MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
         MVC   LP_SVRTY,RSVRTYPE-RSVRDEFD(RF)                                   
         OI    INDQASVR,INDSASVR   Set application server loaded                
                                                                                
VMAP0100 TM    VMCALL,VMINDSQ      Exit if setting LP_RUNI only                 
         JNZ   VMAPX                                                            
         GOTOR VALUPD              Validate action                              
                                                                                
         CLI   BYTE3,0             Test server phase just loaded                
         JE    VMAP0110                                                         
         MVI   LP_CMODE,RRUNSTRQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Yes - call server to initialize              
                                                                                
VMAP0110 TM    VMCALL,VMINDSQ      Exit if setting LP_RUNI only                 
         JNZ   VMAPX                                                            
         GOTOR LP_ALMAP,LP_QMAPN   Look up request map in server(s)             
         JE    VMAP0130                                                         
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JNZ   DEATH117                                                         
         GOTOR FAGENERR,GE#UPGRD   Send must upgrade message                    
                                                                                
***********************************************************************         
* Construct an FALINK input map from the server request map table     *         
***********************************************************************         
                                                                                
VMAP0130 LAY   R3,MAP              R3=A(start of map)                           
         ST    R3,4(R4)            Set map address for FALINK                   
                                                                                
         L     R6,LP_AQMAP         Point to server request map                  
         USING LD_D,R6                                                          
         USING LF_D,R3             Build record header                          
         MVI   LF_LEN,LF_HDRL                                                   
         MVC   LF_CODE,LP_QMAPN    Set request map number                       
         AHI   R3,LF_HDRL                                                       
                                                                                
         USING LF_D,R3             Build data entries                           
         MVI   BYTE1,0                                                          
         SR    R5,R5               R5=width of array row                        
         MVC   FULL,FZERO          FULL=A(first array map entry)                
VMAP0140 CLI   LD_D,LD_EOTQ        Test end of server request table             
         JE    VMAP0220                                                         
         GOTOR FLTMAP              Apply record map filters                     
         JNE   VMAP0210                                                         
         MVI   LF_LEN,LF_ILN1Q     Set length of FALINK map entry               
         MVC   LF_CODE(L'LF_CODE+L'LF_TEXT),LD_CODE                             
         MVI   LF_TYPE,MDTUQQ      Set input type to character                  
         MVI   LF_DLEN,0           Set input is variable length                 
         MVI   LF_INDS,0                                                        
         STCM  R6,7,LF_ALD         Set A(DDLINK map in FALINK map)              
         MVC   BYTE2,BYTE1         Save current indicator byte                  
                                                                                
         LLC   R0,LD_LEN           Calculate total item width                   
         LHI   R1,1                                                             
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   VMAP0150                                                         
         TM    LD_INDS5,LD_IMCEQ   Test multiple input column                   
         JZ    VMAP0150                                                         
         ICM   R1,1,LD_LSTMX       Get number of entries                        
         JZ    DEATH118                                                         
                                                                                
VMAP0150 MR    R0,R0                                                            
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   VMAP0152                                                         
         TM    LD_INDS5,LD_IPCEQ   Test prefix column with entry count          
         JZ    VMAP0152                                                         
         AHI   R1,L'VSENTRY                                                     
                                                                                
VMAP0152 LR    R7,R1               R7=output data length/column width           
         TM    BYTE1,LF_ECOLQ      Test previous was end of array               
         JNZ   *+12                                                             
         CLI   BYTE1,LF_ECOLQ+LF_NTRYQ                                          
         JNE   *+8                                                              
         MVI   BYTE1,0             Yes - reset array indicators                 
                                                                                
         CLI   BYTE1,LF_SCOLQ      Test previous was start of array             
         JE    *+12                                                             
         CLI   BYTE1,LF_SCOLQ+LF_NTRYQ                                          
         JNE   *+8                                                              
         MVI   BYTE1,LF_CCOLQ      Yes - set continuation column                
                                                                                
         TM    LD_TYPE,LD_SCOLQ    Test start of array definition               
         JZ    VMAP0160                                                         
         CLI   BYTE1,0             Yes - array must not be open                 
         JNE   DEATH119                                                         
         MVI   BYTE1,LF_SCOLQ                                                   
                                                                                
         TM    LD_TYPE,LD_ECOLQ    Test ARRAY=* type                            
         JZ    VMAP0170                                                         
         OI    BYTE1,LF_ECOLQ      Yes - turn on end of array too               
         J     VMAP0170                                                         
                                                                                
VMAP0160 TM    LD_TYPE,LD_ECOLQ    Test end of array definition                 
         JZ    VMAP0170                                                         
         TM    BYTE1,LF_SCOLQ+LF_CCOLQ                                          
         JZ    DEATH120                                                         
         MVI   BYTE1,LF_ECOLQ                                                   
                                                                                
VMAP0170 CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   VMAP0172                                                         
         TM    LD_INDS5,LD_IMCEQ   Test ENTRIES= specified                      
         JZ    VMAP0172                                                         
         OI    BYTE1,LF_NTRYQ      Yes - set flag for VSTR                      
                                                                                
VMAP0172 CLC   LD_VRSN,NULLS       Test version stamped                         
         JE    VMAP0180                                                         
         CLC   LP_VRSN,NULLS       Test have version number                     
         JE    VMAP0180                                                         
         CLC   LP_VRSN,LD_VRSN     Yes - test against PC version                
         JNL   VMAP0180                                                         
         MVC   BYTE1,BYTE2         Restore saved indicator byte                 
         J     VMAP0210            Get next input map entry                     
                                                                                
VMAP0180 TM    BYTE1,LF_SCOLQ      Test start of array                          
         JZ    VMAP0190                                                         
         MVI   LF_LEN,LF_ILN2Q     Build start array                            
         MVC   LF_INDS,BYTE1       Set array column indicator                   
         NI    BYTE1,FF-(LF_NTRYQ)                                              
         ST    R3,FULL             Save A(first array map entry)                
         SR    R5,R5                                                            
         TM    LF_INDS,LF_ECOLQ    Test ARRAY=* type                            
         JNZ   *+8                                                              
         TM    LD_INDS4,LD_SSHRQ   Test shared array column                     
         JNZ   *+6                 Yes - next has zero displacement             
         LR    R5,R7               No - set initial row width                   
         LHI   R2,1                Set initial number of columns                
                                                                                
VMAP0190 TM    BYTE1,LF_CCOLQ+LF_ECOLQ                                          
         JZ    VMAP0200                                                         
         MVI   LF_LEN,LF_ILN3Q     Build continuation/end array map             
         MVC   LF_INDS,BYTE1       Set array column indicator                   
         NI    BYTE1,FF-(LF_NTRYQ)                                              
         L     RE,FULL             RE=A(first array map entry)                  
         STCM  RE,7,LF_AMD         Set A(first map entry in this)               
         STCM  R5,3,LF_DDSP        Save displacement to data in row             
         TM    LF_INDS,LF_SCOLQ    Test ARRAY=* type                            
         JNZ   *+8                                                              
         TM    LD_INDS4,LD_CSHRQ+LD_ESHRQ                                       
         JNZ   *+8                                                              
         AHI   R2,1                Increment number of columns                  
         STC   R2,LF_COLS          Set column number                            
         CHI   R2,ROWVALMC         Test maximum columns exceeded                
         JH    DEATH121                                                         
         TM    LF_INDS,LF_SCOLQ    Test ARRAY=* type                            
         JNZ   *+8                                                              
         TM    LD_INDS4,LD_SSHRQ+LD_CSHRQ                                       
         JNZ   *+6                                                              
         AR    R5,R7               Increment row width (& displacement)         
         TM    BYTE1,LF_ECOLQ      Test end of array definition                 
         JZ    VMAP0200                                                         
         STCM  R5,3,LF_DDSP-LF_D(RE) Yes - set array width in first             
         LTR   R5,R5               Test width=0 (all columns shared)            
         JNZ   *+8                                                              
         STCM  R7,3,LF_DDSP-LF_D(RE) Yes - set from current data width          
         STC   R2,LF_COLS-LF_D(RE) Set number of columns                        
                                                                                
VMAP0200 LLC   R0,LF_LEN           Bump to next output map entry                
         AR    R3,R0                                                            
                                                                                
VMAP0210 AHI   R6,LD_LNQ           Bump to next input map entry                 
         J     VMAP0140                                                         
                                                                                
VMAP0220 TM    BYTE1,LF_ECOLQ      Ensure array is complete                     
         JNZ   VMAP0230                                                         
         CLI   BYTE1,0                                                          
         JNE   DEATH122                                                         
                                                                                
VMAP0230 MVI   LF_LEN,LF_FLDX      Set end of emulated element                  
         AHI   R3,L'LF_LEN                                                      
         MVI   LF_LEN-LF_D(R3),LF_HDRX                                          
         LAY   R1,MAP                                                           
         SR    R3,R1               Calculate length of emulation map            
         STCM  R3,3,LF_DISP-LF_D(R1)                                            
         TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   VMAPX                                                            
                                                                                
VMAP0240 TM    LP_FLAG2,LP_FMQIM   Exit if MQ message                           
         JNZ   VMAPX                                                            
         CLC   LP_QMAPN,M#UPLPID   Exit if upload program id record             
         JE    VMAPX                                                            
         CLC   LP_QMAPN,M#MQVALS   Exit if MQ values                            
         JE    VMAPX                                                            
         CLC   LP_QMAPN,M#OPVALS   Exit if option values                        
         JE    VMAPX                                                            
         CLC   LP_QMAPN,M#CTRLDL   Exit if control download                     
         JE    VMAPX                                                            
                                                                                
         TM    LP_RUNI1,LP_RUPLQ   Test this is an upload                       
         JZ    VMAPX               No                                           
         TM    VMCALL,VMNOWKQ      Test don't want worker file                  
         JNZ   VMAPX                                                            
                                                                                
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             Add/update worker file records               
                                                                                
         ICM   R1,15,AWRKBLK       Test WRKIO block is passed                   
         JZ    DEATH124                                                         
         USING WRKIOD,R1           Initialize worker file key                   
         TM    WRKISTAT,WRKISOPN   Test worker file already opened              
         JNZ   VMAP0280                                                         
                                                                                
         MVI   WRKIFTYP,WRKIFTWF   Set to open a worker file                    
         MVI   WRKIACTN,WRKIAAPP   Set to open for append                       
         CLC   LS_WKEY,NULLS       Test worker key saved                        
         JE    *+14                                                             
         MVC   WRKWKEY,LS_WKEY     Yes - re-open it                             
         J     VMAP0270                                                         
                                                                                
         NI    LS_INDS1,FF-(LS_IUPAQ)                                           
         MVC   WRKWUSID,LP_USRID                                                
         MVC   WRKWSPS,RSVRSYSC                                                 
         MVC   WRKWDAY,DAYTODAY                                                 
         MVI   WRKWCLS,WRKWCLSQ                                                 
         MVI   WRKIACTN,WRKIANEW   Open new worker file                         
         MVC   WRKLRETH,RETSERVE   Set live retain hours                        
                                                                                
VMAP0270 GOTOR WRKIO,(R1)                                                       
         JE    VMAP0272                                                         
         GOTOR FAGENERR,GE#COWRK                                                
VMAP0272 MVI   WRKIACTN,WRKIAADD                                                
         MVC   LS_WKEY,WRKWKEY     Save worker file key                         
         TM    RSVRIND2,RSVROUPD   Test RUNNER upload                           
         JZ    VMAP0280                                                         
                                                                                
         TM    LS_INDS1,LS_IOUPD   Test new file                                
         JNZ   VMAP0280                                                         
         OI    LS_INDS1,LS_IOUPD   Set RUNNER upload                            
         OI    LP_INDS,LP_IOUPD    Set RUNNER upload                            
         GOTOR LP_ABREQ,BRUPRQ     Build upload header record                   
                                                                                
         L     R1,AWRKBLK                                                       
         GOTOR WRKIO,(R1)          Add upload header to worker file             
         JNE   DEATH125                                                         
         DROP  R1                                                               
                                                                                
VMAP0280 TM    LP_HINDS,LH_IANUR   Test add new worker file record              
         JZ    VMAP0310                                                         
         CLC   LP_AWMP,AWMP        Test anything in work map pool               
         JE    VMAP0310                                                         
                                                                                
         GOTOR LP_ABREQ,BRUPNQ     Create upload record                         
                                                                                
         L     R1,AWRKBLK          R1=A(WRKIO control block)                    
         GOTOR WRKIO,(R1)          Add upload record to worker file             
         JNE   DEATH126                                                         
         OI    LS_INDS1,LS_IUPAQ   Set upload record added flag                 
                                                                                
VMAP0300 L     R0,AWMP             Re-position to start of work map             
         ST    R0,LP_AWMP                                                       
         LLH   R1,LP_WMPL                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE               and clear it out                             
                                                                                
VMAP0310 TM    VMCALL,VMXMAPQ      Test don't add map element                   
         JNZ   VMAPX                                                            
         L     R2,LP_AWMP          Build a map entry in work map pool           
         USING LW_D,R2                                                          
         CLC   LW_CODE,NULLS       Test pointing to end of WMP                  
         JE    VMAP0320                                                         
         LLH   R0,LW_LN            No - advance to end                          
         AR    R2,R0                                                            
                                                                                
VMAP0320 MVC   LW_CODE,LP_QMAPN                                                 
         LHI   R0,LW_LN1Q                                                       
         STCM  R0,3,LW_LN                                                       
         MVC   LW_ALD,NULLS                                                     
         MVI   LW_TYPE,LW_TMAPQ                                                 
         AR    R2,R0                                                            
         ST    R2,LP_AWMP          Set new end of work map pool                 
         MVC   0(LW_LN2Q,R2),NULLS                                              
         AHI   R2,LW_LN2Q                                                       
         C     R2,LP_AWMPX         Test exceeded WMP size                       
         JNH   VMAPXX                                                           
         J     DEATH127                                                         
                                                                                
***********************************************************************         
* Build dynamic upload maps for control records                       *         
***********************************************************************         
                                                                                
         USING LB_D,R2                                                          
VMAP0330 TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   VMAP0340            Yes                                          
         MVC   LS_QMAPN,LP_QMAPN   Save current map number                      
         MVI   LS_PHASE,LKSERVER                                                
                                                                                
VMAP0340 OI    INDQCTRL,INDSCTRL   Set processing control record                
                                                                                
         LAY   R3,MAP                                                           
         USING LF_D,R3             R3=A(emulated map)                           
         TM    LP_FLAG2,LP_FMQIM   Test incoming MQ message                     
         JNZ   *+8                                                              
         ST    R3,4(R4)            Set A(map header) for FALINK                 
                                                                                
         MVI   LF_LEN,LF_HDRL      Build map header                             
         MVC   LF_CODE,LB_HCODE    Set record map number                        
         AHI   R2,LB_HLNQ          Point to first data element                  
         USING LB_DVALS,R2                                                      
         AHI   R3,LF_HDRL                                                       
                                                                                
         MVC   HALF1,NULLS                                                      
VMAP0350 CLC   LB_DCODE,NULLS      Test end of data map                         
         JE    VMAP0370                                                         
         CLC   LB_DCODE,HALF1      Test same as previous                        
         JE    VMAP0360                                                         
         MVC   HALF1,LB_DCODE                                                   
         MVI   LF_LEN,LF_ILN1Q     Build data entry                             
         MVC   LF_CODE,LB_DCODE    Set data map code                            
         MVI   LF_TYPE,MDTUQQ                                                   
         MVI   LF_INDS,LF_CTRLQ    Set this is a control value                  
         STCM  R2,7,LF_ALD         Point to control table entry                 
         AHI   R3,LF_ILN1Q         Bump to next output                          
VMAP0360 AHI   R2,LB_DLNQ          Bump to next input                           
         J     VMAP0350                                                         
                                                                                
VMAP0370 MVI   LF_LEN,LF_FLDX      Set end of emulated map                      
         AHI   R3,L'LF_LEN                                                      
         LAY   R1,MAP              Point to map                                 
         SR    R3,R1               Set length of map                            
         STCM  R3,3,LF_DISP-LF_D(R1)                                            
                                                                                
VMAPX    TM    INDQARTF,INDSARTF   Test add request to folder                   
         JNZ   VMAPXX                                                           
         GOTOR CLRWMP              Clear work map pool                          
                                                                                
VMAPXX   J     EXITY                                                            
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* Apply record map filters to LD entry                                *         
*                                                                     *         
* This code is only effective when called from the FABRNEXT routine   *         
* and we are processing a request map which is being pointed to by    *         
* another request map - this is so that the request details screen    *         
* only contains entries which are relevent to the input record type   *         
***********************************************************************         
                                                                                
FLTMAP   TM    VMCALL,VMTESTQ      Test called from FABRNEXT routine            
         JZ    FLTMAPY                                                          
         TM    INDQMPTR,INDSMPTR   Test processing pointer map                  
         JZ    FLTMAPY                                                          
         CLI   LD_IDF,LD_IDFRQ     Test entry has id area redefined             
         JNE   FLTMAPY                                                          
         TM    LD_INDS5,LD_IMFTQ   Test map filter list present                 
         JZ    FLTMAPY                                                          
         LLH   R1,LD_DISP2         R1=disp. to map filter list                  
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    *+8                                                              
         SLL   R1,1                                                             
         A     R1,LP_ASVR          R1=A(map filter list)                        
                                                                                
FLTMAP02 CLC   0(L'LP_QMAPN,R1),NULLS Test end of list                          
         JE    FLTMAP06                                                         
         CLC   LP_QMAPN,0(R1)      Match record map number to list              
         JNE   FLTMAP04                                                         
         TM    LD_INDS5,LD_IMFXQ   Entry found - test exclude list              
         JZ    FLTMAPY             No - include this one                        
         J     FLTMAPN             Yes - exclude this one                       
                                                                                
FLTMAP04 AHI   R1,L'LP_QMAPN       Bump to next filter list entry               
         J     FLTMAP02                                                         
                                                                                
FLTMAP06 TM    LD_INDS5,LD_IMFXQ   End of list - test exclude list              
         JNZ   FLTMAPY             No - exclude this one                        
                                                                                
FLTMAPN  LTR   RE,RE               Set CC=not equal to exclude                  
         BR    RE                                                               
FLTMAPY  CR    RE,RE               Set CC=equal to include                      
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Set server values for DDLINK server functions                       *         
***********************************************************************         
                                                                                
         USING LN_D,RF                                                          
MAPLNK   STM   RE,R1,SAVERE                                                     
         CLC   LP_CMAPN,NULLS                                                   
         JNE   *+10                                                             
         MVC   LP_CMAPN,LP_QMAPN                                                
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JNZ   MAPLNK00                                                         
         GOTOR SETRUNI             Set run indicators                           
         TM    VMCALL,VMINDSQ      Exit if just setting LP_RUNI                 
         JNZ   MAPLNKX                                                          
         L     RF,LP_ASAVE                                                      
         MVC   LS_QMAPN-LS_D(,RF),LP_CMAPN                                      
         MVI   LS_PHASE-LS_D(RF),LKSERVER                                       
                                                                                
MAPLNK00 CLC   LP_CMAPN,M#GRPMNT   Test desktop delivery map                    
         JH    MAPLNK02                                                         
         CLC   LP_CMAPN,M#FILDLD                                                
         JL    MAPLNK02                                                         
         OI    INDQRLPI,INDSRLPI   Set RLP interface active                     
         LARL  RF,RLPDEF                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK02 CLC   LP_CMAPN,M#UPLPID   Test generalized upload map                  
         JH    MAPLNK04                                                         
         CLC   LP_CMAPN,M#UPLDTA                                                
         JL    MAPLNK04                                                         
         OI    INDQUPLI,INDSUPLI   Set upload interface active                  
         LARL  RF,UPLDEF                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK04 CLC   LP_CMAPN,M#MQVALS   Test MQ values                               
         JNE   MAPLNK06                                                         
         LARL  RF,MQVALS                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK06 CLC   LP_CMAPN,M#OPVALS   Test option values                           
         JNE   MAPLNK10                                                         
         LARL  RF,OPVALS                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK10 CLC   LP_CMAPN,M#CTRLDL   Test control 1 download                      
         JNE   MAPLNK12                                                         
         LARL  RF,DLCTRL                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK12 CLC   LP_CMAPN,M#SECBRO   Test security download                       
         JNE   MAPLNK14                                                         
         LARL  RF,SECBRO                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK14 CLC   LP_CMAPN,M#GENVAL   Test General values download                 
         JNE   MAPLNK16                                                         
         LARL  RF,GNVALS                                                        
         J     MAPLNK20                                                         
                                                                                
MAPLNK16 DS    0H                                                               
                                                                                
MAPLNK20 TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JNZ   MAPLNK22                                                         
         TM    INDQASVR,INDSASVR   Test application server loaded               
         JZ    MAPLNK22                                                         
         TM    INDQSSVR,INDSSSVR   Test its address was saved                   
         JNZ   MAPLNK22                                                         
         MVC   SAVEASVR,LP_ASVR    Save it first time through here              
         OI    INDQSSVR,INDSSSVR   Set server address saved                     
                                                                                
MAPLNK22 ST    RF,RUNASVR          Set server values                            
         ST    RF,LP_ASVR                                                       
         MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
         OI    INDQDDLK,INDSDDLK   Set DDLINK hosted server                     
         TM    LP_FLAG,LP_FOFFL                                                 
         JNZ   MAPLNKX                                                          
         ST    RF,LP_ASVR1         Set A(server)                                
         MVI   BYTE3,1             Force map build                              
MAPLNKX  LM    RE,R1,SAVERE                                                     
         BR    RE                                                               
                                                                                
***********************************************************************         
* Set run indicators - preserve LP_RDSCQ/LP_RNOWQ flags               *         
***********************************************************************         
                                                                                
SETRUNI  MVC   BYTE4,LP_RUNI1      Save run indicator byte 1                    
         MVC   LP_RUNI,LN_RUNI     Set run indicators                           
         NI    BYTE4,LP_RNOWQ+LP_RDSCQ                                          
         BZR   RE                                                               
         NI    LP_RUNI1,FF-(LP_RNOWQ+LP_RDSCQ)                                  
         OC    LP_RUNI1,BYTE4      Preserve on-line/off-line flags              
         BR    RE                                                               
         DROP  RF                                                               
         EJECT                                                                  
***********************************************************************         
* Validate that updative request may be run in this FACPAK            *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
VALUPD   TM    LP_FLAG,LP_FOFFL    Test off-line                                
         BNZR  RE                  Yes - don't check                            
         TM    LP_RUNI2,LP_RUPDQ   Test updative action                         
         BZR   RE                                                               
         TM    LS_IIND1,LS_IUVAL   Test override from interface                 
         BNZR  RE                                                               
         TM    XIFLAG2,XICTUEN     Test connected with U=N                      
         BNZR  RE                                                               
         TM    XIFLAG1,XIROSYS+XIROMODE+XIWRONGF                                
         BZR   RE                                                               
         TM    XIFLAG1,XIROSYS     Test read-only system                        
         JZ    VALUPD02                                                         
         GOTOR FAGENERR,GE#ROSYS                                                
VALUPD02 TM    XIFLAG1,XIROMODE    Test read-only person                        
         JZ    VALUPD04                                                         
         GOTOR FAGENERR,GE#NOUPD                                                
VALUPD04 OI    INDQXTRA,INDSXTRA   Must be connected to wrong FACPAK            
         MVC   WORK2(L'XIUPDFAC),XIUPDFAC                                       
         GOTOR FAGENERR,GE#WRONG                                                
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Validate an input string and build work map pool entry              *         
*                                                                     *         
* Ntry:- R1=A(Parameter list as follows):-                            *         
*                                                                     *         
*        P1=A(Input string)                                           *         
*        P2=L'Input string                                            *         
*        P3=A(Data definition entry (LD_D))                           *         
*        P4=A(TWA field header) or zero                               *         
*        AMD is address of LF_D                                       *         
***********************************************************************         
                                                                                
VSTR     NTR1  LABEL=*,WORK=(R7,VSWORKL)                                        
         USING VSWORKD,R7          R7=A(local w/s)                              
         MVC   VSWORKD(VSWORKL),NULLS                                           
         MVC   VSPARM(VSPARML),0(R1)                                            
         MVC   VALUES(VALUESL),NULLS                                            
                                                                                
         CLC   VSATWAH,NULLS       Test interactive test mode                   
         JE    *+8                                                              
         MVI   VALMODE,VALMTEST    Yes - set input validation mode              
                                                                                
         L     R6,VSALD                                                         
         USING LD_D,R6             R6=A(data definition)                        
         MVC   LP_CODE,LD_CODE     Set current data code in LP_D                
         L     R5,LP_AWMP                                                       
         USING LW_D,R5             R5=A(work map pool)                          
         LM    RF,R0,VSAINP                                                     
         STM   RF,R0,LP_AINP       Set LP values in case of error               
                                                                                
         MVC   VALTYPE,LD_TYPE     Set data type                                
         NI    VALTYPE,FF-(LD_SCOLQ+LD_ECOLQ)                                   
         LLC   R1,VALTYPE                                                       
         SLL   R1,1                                                             
         LA    R1,VALTYPES(R1)                                                  
         MVC   VALVALS,0(R1)       Set validation values                        
                                                                                
         MVC   VALCODE,LD_CODE     Set data code                                
                                                                                
         CLI   VALVALTY,DDLKQ      Test validating DDLINK variable              
         JE    VSTR0370                                                         
         TM    INDQARTF,INDSARTF   Test add request to desktop folder           
         JNZ   VSTR0490                                                         
         MVC   VALARYV(VALARYVL),NULLS                                          
         ICM   RE,15,AMD           If AMD set - test for arrays                 
         JZ    VSTR0020                                                         
         CLI   LF_LEN-LF_D(RE),LF_ILN1Q                                         
         JNH   VSTR0020                                                         
         MVC   VALINDS,LF_INDS-LF_D(RE)                                         
         MVC   VALDISP,LF_DDSP-LF_D(RE)                                         
                                                                                
         TM    VALINDS,LF_SCOLQ    Test first entry in array                    
         JZ    VSTR0010                                                         
         MVC   VALWROW,VALDISP     Yes - set array row width                    
         MVC   VALDISP,NULLS       and zero displacement                        
         MVC   VALCOLS,LF_COLS-LF_D(RE) and number of array columns             
         MVI   VALCOLN,1           First array column number                    
         CLC   LW_CODE,VALCODE     Test same array as last                      
         JNE   VSTR0020                                                         
         TM    VALMODE,VALMTEST    Test interactive test mode                   
         JNZ   VSTR0020                                                         
                                                                                
         LA    RF,ROWHIGH          Update all columns to highest row            
         LLC   R0,VALCOLS                                                       
         SR    R1,R1                                                            
         BASR  RE,0                                                             
         CLM   R1,3,0(RF)                                                       
         JH    *+8                                                              
         ICM   R1,3,0(RF)                                                       
         AHI   RF,L'ROWHIGH                                                     
         BCTR  R0,RE                                                            
         STCM  R1,3,ROWHIGH                                                     
         MVC   ROWHIGH+L'ROWHIGH(ROWHIGHL-L'ROWHIGH),ROWHIGH                    
         MVC   ROWNTRY(ROWNTRYL),NULLS                                          
         J     VSTR0060                                                         
                                                                                
VSTR0010 CLI   LF_LEN-LF_D(RE),LF_ILN2Q                                         
         JNH   VSTR0020                                                         
         MVC   VALCOLN,LF_COLS-LF_D(RE) Current column number                   
         SR    RF,RF                                                            
         ICM   RF,7,LF_AMD-LF_D(RE)                                             
         JZ    DEATH128                                                         
         MVC   VALCODE,LF_CODE-LF_D(RF)                                         
         MVC   VALWROW,LF_DDSP-LF_D(RF)                                         
         MVC   VALCOLS,LF_COLS-LF_D(RF)                                         
                                                                                
VSTR0020 CLI   VALTYPE,LD_VSTRQ    Force element for variable string            
         JE    VSTR0022                                                         
         CLC   LW_CODE,VALCODE     Test change of data type or array            
         JE    VSTR0060                                                         
                                                                                
VSTR0022 CLC   LW_CODE,NULLS       Test pointing to end of list                 
         JE    VSTR0030                                                         
         LLH   R2,LW_LN                                                         
         AR    R5,R2               Advance to next chunk of storage             
         ST    R5,LP_AWMP                                                       
                                                                                
VSTR0030 MVC   LW_CODE,VALCODE     Move in data code                            
         LA    R0,LD_D                                                          
         STCM  R0,7,LW_ALD         Save A(data map)                             
         CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    VSTR0040                                                         
         CLI   LD_IDF,LD_IDFRQ     Test redefined id field                      
         JNE   *+12                                                             
         TM    LD_INDS5,LD_IFLSQ   Test always build a list                     
         JNZ   VSTR0040                                                         
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    VSTR0050                                                         
         MVC   ROWVALS(ROWVALL),NULLS                                           
                                                                                
VSTR0040 MVI   LW_TYPE,LW_TLSTQ    Set type to 'list' for arrays                
         LHI   RE,LW_LN2Q          and user validated variable lists            
         STCM  RE,3,LW_LN                                                       
         MVC   LW_NUMN,NULLS                                                    
         LA    R2,LW_DATA2                                                      
         MVI   VALFLAG,1           Set first for new row                        
         J     VSTR0090                                                         
                                                                                
VSTR0050 MVI   LW_TYPE,LW_TSINQ    Set type to 'single'                         
         L     RE,VSLINP           RE=actual input length                       
         CLI   VALTYPE,LD_VSTRQ    Test variable string input                   
         JE    *+12                Yes - input length is output length          
         ICM   RE,1,LD_LEN         RE=defined output length                     
         JZ    VSTRNA                                                           
         AHI   RE,LW_LN1Q                                                       
         STCM  RE,3,LW_LN                                                       
         LA    R2,LW_DATA1                                                      
         J     VSTR0110                                                         
                                                                                
VSTR0060 CLI   LW_TYPE,LW_TLSTQ    Test current is a list                       
         JE    VSTR0070                                                         
         TM    LW_TYPE,LW_TSINQ    Test this is a single                        
         JZ    VSTRNB                                                           
         TM    LD_INDS1,LD_ILSTQ   Test list permitted                          
         JZ    VSTRNC                                                           
         LLH   RE,LW_LN                                                         
         SHI   RE,LW_LN1Q+1                                                     
         EX    RE,VSTRMVWW                                                      
         MVI   LW_TYPE,LW_TLSTQ                                                 
         LHI   R0,1                                                             
         STCM  R0,3,LW_NUMN                                                     
         EX    RE,VSTRMV2W                                                      
         AHI   RE,LW_LN2Q+1                                                     
         STCM  RE,3,LW_LN                                                       
                                                                                
VSTR0070 TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    VSTR0100                                                         
         LLC   RE,VALCOLN                                                       
         SLL   RE,1                                                             
         LA    RE,ROWHIGH-L'ROWHIGH(RE)                                         
         LLH   RF,0(RE)            RF=row number for this column                
         MVI   VALFLAG,0           Set not first data for new row               
                                                                                
         TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JNZ   VSTR0080                                                         
                                                                                
         LA    R1,ROWHIGH                                                       
         LLC   R0,VALCOLS                                                       
                                                                                
         CLM   RF,3,0(R1)                                                       
         JL    VSTR0080                                                         
         AHI   R1,L'ROWHIGH                                                     
         JCT   R0,*-12                                                          
         MVI   VALFLAG,1           Set first data for new row                   
                                                                                
VSTR0080 LLH   RE,VALWROW          RE=row width                                 
         MR    RE,RE               RF=displacement to next row                  
         LA    R2,LW_DATA2                                                      
         AR    R2,RF                                                            
         CLI   VALFLAG,1           Test first data for new row                  
         JNE   VSTR0090                                                         
         LR    R0,R2               Point to array row                           
         LLH   R1,VALWROW          R1=row width                                 
         SR    RF,RF                                                            
         MVCL  R0,RE               Clear row                                    
                                                                                
VSTR0090 CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    VSTR0110                                                         
         TM    VALINDS,LF_SCOLQ    Test first array column                      
         JNZ   VSTR0110                                                         
         LLH   RE,VALDISP          No - add on displacement                     
         AR    R2,RE                                                            
         J     VSTR0110                                                         
                                                                                
VSTR0100 LLH   R2,LW_LN            Use length to point to end of list           
         AR    R2,R5               Point to next chunk of storage               
                                                                                
VSTR0110 LM    RF,R0,VSAINP                                                     
         MVI   VSDELIMD,FF         Preset list/range delimiters off             
         MVI   VSRANGED,FF                                                      
         MVI   VSENTRYD,FF                                                      
                                                                                
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JNZ   VSTR0130                                                         
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   *+12                                                             
         TM    LD_INDS5,LD_IFLSQ   Test forced list                             
         JNZ   VSTR0130                                                         
         TM    LD_INDS1,LD_ILSTQ   Test list permitted                          
         JNZ   VSTR0130                                                         
         TM    LD_INDS1,LD_IRNGQ   Test range permitted                         
         JZ    VSTR0370                                                         
         J     VSTR0140            Range only permitted                         
                                                                                
VSTR0130 OI    VSINDS,VSILA        Set this is a list/array                     
                                                                                
         MVI   VSDELIMD,IDELIMQ    Set list delimiter                           
                                                                                
         TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JZ    *+8                                                              
         MVI   VSENTRYD,EDELIMQ    Set entry delimiter                          
                                                                                
         TM    LD_INDS2,LD_IODLM   Test override delimiter set                  
         JZ    VSTR0140                                                         
         TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JNZ   *+14                                                             
         MVC   VSDELIMD,LD_DELIM   Set list delimiter                           
         J     VSTR0140                                                         
         MVC   VSENTRYD,LD_DELIM   Set entry delimiter                          
                                                                                
VSTR0140 CLI   VALTYPE,LD_VSTRQ    Can't be here for variable string            
         JE    DEATH129                                                         
         LR    RE,RF                                                            
         LR    R1,R0                                                            
                                                                                
         CLI   VALVALTY,USERQ      Test user validated                          
         JE    VSTR0150                                                         
         TM    LD_INDS1,LD_IRNGQ   Test range of values is valid                
         JZ    VSTR0150                                                         
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JNZ   DEATH130                                                         
         CLI   VALVALTY,DATEQ      Test for dates....                           
         JE    VSTR0150                                                         
         MVI   VSRANGED,RANGEQ     Set range delimiter                          
                                                                                
VSTR0150 LTR   R1,R1               Test for any input data                      
         JZ    VSTR0180                                                         
         CLI   VSDELIMD,FF         Test list delimiter set                      
         JNE   VSTR0160                                                         
         CLI   VSENTRYD,FF         or entry delimiter set                       
         JE    VSTR0180                                                         
                                                                                
VSTR0160 CLC   VSENTRYD,0(RE)      Test for entry delimiter                     
         JE    VSTR0230                                                         
         CLC   VSDELIMD,0(RE)      Test for list delimiter                      
         JE    VSTR0220                                                         
         TM    LD_INDS2,LD_IODLM   Test override delimiter set                  
         JNZ   VSTR0170                                                         
         TM    LP_AIND1,LP_AICOM   Test can use comma too                       
         JZ    VSTR0170                                                         
         CLI   0(RE),COMMAQ        Yes - do match                               
         JE    VSTR0220                                                         
VSTR0170 AHI   RE,1                                                             
         JCT   R1,VSTR0160         Do for number of input characters            
                                                                                
VSTR0180 CLI   VSRANGED,FF         Test range delimiter set                     
         JE    VSTR0370                                                         
         LR    RE,RF               Yes - look for it                            
         LTR   R1,R0                                                            
         JZ    VSTR0370                                                         
VSTR0182 CLC   VSRANGED,0(RE)      Test for range                               
         JE    VSTR0190                                                         
         AHI   RE,1                                                             
         JCT   R1,VSTR0182         Do for number of input characters            
         J     VSTR0370                                                         
                                                                                
VSTR0190 MVI   LW_TYPE,LW_TRNGQ    Set this is a range of values                
         LLC   R1,LD_LEN                                                        
         SLL   R1,1                R1=data length*2                             
         AHI   R1,LW_LN1Q                                                       
         STCM  R1,3,LW_LN                                                       
         S     RE,VSAINP                                                        
         JP    VSTR0200                                                         
         SR    RE,RE                                                            
         ICM   RE,1,LD_LEN         Clear start of range                         
         BCTR  RE,0                                                             
         EX    RE,VSTRMV2N                                                      
         LA    R2,1(RE,R2)                                                      
         AHI   RF,1                Point to end of range                        
         SHI   R0,1                                                             
         J     VSTR0210                                                         
                                                                                
VSTR0200 LR    R0,RE               Validate start of range                      
         GOTOR LP_AVINP,DMCB,(RF),(R0),LD_D,0                                   
         JNE   VSTRND                                                           
         SR    RE,RE                                                            
         ICM   RE,1,LD_LEN         Move start of range                          
         BCTR  RE,0                                                             
         L     RF,LP_AOUT                                                       
         EX    RE,VSTRMV2F                                                      
         LA    R2,1(RE,R2)                                                      
         LR    RE,R0                                                            
         AHI   RE,1                RE=L'start value+1                           
         L     R0,VSLINP                                                        
         SR    R0,RE               R0=L'end value                               
         L     RF,VSAINP                                                        
         AR    RF,RE               RF=A(end value)                              
                                                                                
VSTR0210 LTR   R0,R0               Test any data after delimiter                
         JNZ   VSTR0370                                                         
         SR    RE,RE                                                            
         ICM   RE,1,LD_LEN         Set end of range to FFs                      
         MVI   0(R2),FF                                                         
         SHI   RE,2                                                             
         JM    VSTRX                                                            
         EX    RE,VSTRMV22                                                      
         J     VSTRX                                                            
                                                                                
VSTR0220 MVC   ROWNTRY(ROWNTRYL),NULLS                                          
                                                                                
VSTR0230 MVC   VSDELIM,0(RE)       Set delimiter value                          
         S     RE,VSAINP                                                        
         JNZ   VSTR0232                                                         
         OI    VSINDS,VSINULL                                                   
         MVC   LP_ILEN,NULLS                                                    
                                                                                
VSTR0232 L     R3,VSAINP                                                        
         L     R4,VSLINP                                                        
         LR    R0,RE                                                            
         TM    LW_TYPE,LW_TLSTQ    Test list already initialized                
         JNZ   VSTR0240                                                         
         MVI   LW_TYPE,LW_TLSTQ    Set this is a list of values                 
         LHI   R1,LW_LN2Q                                                       
         STCM  R1,3,LW_LN          Set initial element length                   
         MVC   LW_NUMN,NULLS                                                    
         LA    R2,LW_DATA2                                                      
                                                                                
VSTR0240 TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JNZ   VSTR0250                                                         
         CLI   LD_LSTMX,0          Test list maximum set                        
         JE    VSTR0250                                                         
         CLC   LD_LSTMX,LW_NUMN+(L'LW_NUMN-L'LD_LSTMX)                          
         JE    VSTRNF                                                           
                                                                                
VSTR0250 TM    VSINDS,VSINULL      Test null string                             
         JNZ   VSTR0252                                                         
         GOTOR LP_AVINP,DMCB,(R3),(R0),LD_D,(R2)                                
         JNE   VSTRNG                                                           
                                                                                
VSTR0252 CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    VSTR0320                                                         
                                                                                
         L     RF,LP_AOUT                                                       
         LHI   RE,1                                                             
         CLI   VALVALTY,MASKQ      Test mask bit                                
         JE    VSTR0254                                                         
         SR    RE,RE                                                            
         ICM   RE,1,LD_LEN         Use input length if defined                  
         JNZ   *+12                                                             
         ICM   RE,1,LD_INPMX       Else use maximum input length                
         JZ    VSTRNH                                                           
         STC   RE,VSSAVELN                                                      
         BCTR  RE,0                                                             
                                                                                
VSTR0254 TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JNZ   VSTR0270                                                         
         TM    LW_TYPE,LW_TLSTQ    Test this is a list                          
         JZ    VSTR0270                                                         
         CLI   VALTYPE,LD_UVFLQ    Test user validated list                     
         JE    VSTR0270                                                         
         TM    LD_INDS1,LD_IDADQ   Test don't allow duplicates                  
         JZ    VSTR0270                                                         
         SR    R0,R0                                                            
         ICM   R0,3,LW_NUMN        Don't check if empty list                    
         JZ    VSTR0270                                                         
         LA    R1,LW_DATA2                                                      
                                                                                
VSTR0260 EX    RE,VSTRCL1F         Test for duplicate list entry                
         JE    VSTRNI                                                           
         LA    R1,1(RE,R1)                                                      
         JCT   R0,VSTR0260                                                      
                                                                                
VSTR0270 IC    RE,VSSAVELN                                                      
         LHI   R0,1                R0=number of entries                         
         CLI   VALTYPE,LD_UVFLQ    Test user validated fixed list               
         JNE   VSTR0272                                                         
         MH    RE,LP_OLEN+2        Yes - calculate length of user list          
         LH    R0,LP_OLEN+2        and set number of entries                    
         J     VSTR0300            (row width*number of entries)                
                                                                                
VSTR0272 LR    R1,R2                                                            
         TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JZ    VSTR0280                                                         
         LLC   R1,VALCOLN                                                       
         LA    R1,ROWNTRY-L'ROWNTRY(R1)                                         
         LLC   R0,0(R1)            R0=current column entry count                
         AHI   R0,1                                                             
         CLM   R0,1,LD_LSTMX       Test column entry count exceeded             
         JH    VSTRNJ                                                           
         STC   R0,VSENTRY          Save entry number for code below             
         STC   R0,0(R1)            Set new column entry count                   
         SHI   R0,1                                                             
         LR    R1,RE                                                            
         MR    R0,R0               R1=index to entry value in column            
         AR    R1,R2               R1=A(column entry)                           
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   VSTR0280                                                         
         TM    LD_INDS5,LD_IPCEQ   Test prefix column with entry count          
         JZ    VSTR0280                                                         
         MVC   0(L'VSENTRY,R2),VSENTRY                                          
         AHI   R1,L'VSENTRY                                                     
                                                                                
VSTR0280 CLI   VALVALTY,MASKQ      Test mask bit                                
         JE    VSTR0300                                                         
         SHI   RE,1                                                             
         TM    VSINDS,VSINULL                                                   
         JZ    VSTR0290                                                         
         NI    VSINDS,FF-VSINULL                                                
         EX    RE,VSTRMV1N         Clear data                                   
         AHI   RE,1                                                             
         J     VSTR0300                                                         
                                                                                
VSTR0290 EX    RE,VSTRMV1F         Move data to element                         
         AHI   RE,1                                                             
                                                                                
VSTR0300 TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    VSTR0310                                                         
         CLC   VSDELIM,VSENTRYD    Test just processed a column entry           
         JE    VSTR0330                                                         
                                                                                
         LLH   RE,VALWROW                                                       
         CLI   VALTYPE,LD_UVFLQ    Test user validated list                     
         JNE   *+8                                                              
         MH    RE,LP_OLEN+2                                                     
         AR    R2,RE               Bump element data pointer                    
         MVC   ROWNTRY(ROWNTRYL),NULLS                                          
                                                                                
         LLC   R1,VALCOLN                                                       
         SLL   R1,1                                                             
         LA    R1,ROWHIGH-L'ROWHIGH(R1)                                         
         LLH   RF,0(R1)                                                         
         AR    RF,R0                                                            
         STCM  RF,3,0(R1)          Update row index                             
         CLM   RF,3,LW_NUMN        Test highest row in element                  
         JNH   VSTR0330                                                         
         STCM  RF,3,LW_NUMN        Yes - update list entry count                
         LLH   R1,LW_LN            and total element length                     
         AR    R1,RE                                                            
         STCM  R1,3,LW_LN                                                       
         J     VSTR0330                                                         
                                                                                
VSTR0310 AR    R2,RE               Point to next output area                    
         LLH   R1,LW_LN            Update element length                        
         AR    R1,RE                                                            
         STCM  R1,3,LW_LN                                                       
         ICM   R1,3,LW_NUMN        Update list entry count                      
         AR    R1,R0                                                            
         STCM  R1,3,LW_NUMN                                                     
         J     VSTR0330                                                         
                                                                                
VSTR0320 SR    RE,RE               Test if entry was created                    
         ICM   RE,3,0(R2)                                                       
         JZ    VSTR0330                                                         
         LLH   R0,LW_NUMN          Yes - update list entry count                
         AHI   R0,1                                                             
         STCM  R0,3,LW_NUMN                                                     
         LLH   R0,LW_LN            and total element length                     
         AR    R0,RE                                                            
         STCM  R0,3,LW_LN                                                       
         AR    R2,RE               Point to data in next row                    
                                                                                
VSTR0330 A     R3,LP_ILEN          Point to next part of input string           
         AHI   R3,1                                                             
         SHI   R4,1                                                             
         S     R4,LP_ILEN          Decrement length of input                    
         JNP   VSTRX                                                            
                                                                                
         LR    RF,R3               Look for next delimiter                      
         LR    R0,R4                                                            
VSTR0340 CLC   VSENTRYD,0(RF)      Test for entry delimter                      
         JE    VSTR0360                                                         
         CLC   VSDELIMD,0(RF)                                                   
         JE    VSTR0360                                                         
         TM    LD_INDS2,LD_IODLM   Test override delimter set                   
         JNZ   VSTR0350                                                         
         TM    LP_AIND1,LP_AICOM   Test can use comma too                       
         JZ    VSTR0350                                                         
         CLI   0(RF),COMMAQ        Yes - do match                               
         JE    VSTR0360                                                         
VSTR0350 AHI   RF,1                                                             
         JCT   R0,VSTR0340                                                      
         J     VSTR0360                                                         
                                                                                
VSTR0360 MVC   VSDELIM,0(RF)       Set delimiter value                          
         SR    RF,R3                                                            
         LTR   R0,RF               R0=length of next value                      
         JNZ   VSTR0240                                                         
         OI    VSINDS,VSINULL      Set null string                              
         MVC   LP_ILEN,FZERO       Clear length                                 
         J     VSTR0240                                                         
                                                                                
VSTR0370 TM    VALINDS,LF_NTRYQ    Test multiple entry input                    
         JZ    VSTR0380                                                         
         CHI   R0,1                Test one byte input                          
         JNE   VSTR0380                                                         
         CLI   VALTYPE,LD_USERQ    Don't test null if user validated            
         JE    VSTR0380                                                         
         CLI   0(RF),NULCHARQ      and 'null' character                         
         JNE   VSTR0380                                                         
         CLC   VSDELIM,VSDELIMD    and column delimiter                         
         JE    VSTR0470                                                         
         CLI   VSDELIM,0           or no delimiter                              
         JE    VSTR0470                                                         
                                                                                
VSTR0380 GOTOR LP_AVINP,DMCB,(RF),(R0),LD_D,(R2)                                
         JH    VSTRNK                                                           
         JE    VSTR0390                                                         
                                                                                
         TM    LP_FLAG2,LP_FMQIM   Allowed for MQ messages                      
         JNZ   VSTR0500            Clear WMP entry on way out                   
                                                                                
         OI    VSINDS,VSINULL      Set this is a null string                    
         TM    VSINDS,VSILA        Test it is a list/array                      
         JNZ   VSTR0390            Yes - may be zero length                     
                                                                                
         CLI   VALTYPE,LD_VSTRQ    Test variable string input                   
         JNE   VSTRNL                                                           
         CLC   VSLINP,FZERO        Yes - may be zero length                     
         JE    VSTRX                                                            
                                                                                
VSTR0390 CLI   LD_IDF,LD_IDFCQ     Test control record validation               
         JNE   VSTR0400                                                         
         ICM   RE,15,AMD                                                        
         JZ    DEATH131                                                         
         L     R5,LP_AOUT                                                       
         SR    R2,R2                                                            
         ICM   R2,7,LF_ALD-LF_D(RE)                                             
         USING LB_DVALS,R2         R2=A(LB_DVALS)                               
         MVC   HALF1(L'LB_DCODE),LB_DCODE                                       
         CLI   VALVALTY,DDLKQ      Test DDLINK variable                         
         JNE   VSTR0392                                                         
         LLC   R5,LB_DBLK#         Initialize for copy                          
         MHI   R5,L'LP_BLKS                                                     
         L     R5,DD_BLKS-L'DD_BLKS(R5)                                         
         LTR   R5,R5               Test block defined                           
         JZ    DEATH132                                                         
         LLH   R0,LB_DBDSP                                                      
         AR    R5,R0               R5=A(data to copy)                           
         AHI   R2,LB_DLNQ          Bump to next                                 
                                                                                
VSTR0392 CLC   LB_DCODE,HALF1      Test change of data map                      
         JNE   EXITY                                                            
         LLC   RE,LB_DBLK#                                                      
         MHI   RE,L'LP_BLKS                                                     
         L     RE,DD_BLKS-L'DD_BLKS(RE)                                         
         LTR   RE,RE               Test block defined                           
         JZ    VSTR0394                                                         
         LLH   R0,LB_DBDSP                                                      
         AR    RE,R0               RE=A(output data)                            
         LLC   RF,LB_DLEN                                                       
         LR    R0,R5               Point to input                               
         LR    R1,RF                                                            
         MVCL  RE,R0               Move to output area                          
VSTR0394 AHI   R2,LB_DLNQ          Bump to next data map entry                  
         J     VSTR0392                                                         
                                                                                
VSTR0400 CLI   VALVALTY,DDLKQ      Exit now if DDLINK variable                  
         JE    VSTRX                                                            
                                                                                
         L     RF,LP_AOUT          RF=A(output)                                 
         LLC   RE,LD_LEN           Move data to element                         
                                                                                
         CLI   VALTYPE,LD_VSTRQ    Test variable string input                   
         JNE   *+12                                                             
         L     RE,VSLINP           Yes - use input length                       
         J     VSTR0420                                                         
                                                                                
         CLI   VALTYPE,LD_URNGQ    Test user defined range                      
         JE    VSTR0410                                                         
         CLI   VALTYPE,LD_USERQ    other test for user validated range          
         JNE   VSTR0402                                                         
         TM    LD_INDS1,LD_ILSTQ   Test input can be a list                     
         JNZ   VSTR0402                                                         
         TM    LD_INDS1,LD_IRNGQ   (LD_USERQ and LD_IRNGQ set)                  
         JNZ   VSTR0410                                                         
                                                                                
VSTR0402 TM    LD_INDS1,LD_IRNGQ   Test range of values is valid                
         JZ    VSTR0420                                                         
         CLI   VALVALTY,DATEQ      Test date range                              
         JNE   VSTR0420                                                         
                                                                                
VSTR0410 SLL   RE,1                Double output length for ranges              
         MVI   LW_TYPE,LW_TRNGQ    Set this is a range of values                
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JNZ   VSTR0420                                                         
         LR    R1,RE                                                            
         AHI   R1,LW_LN1Q                                                       
         STCM  R1,3,LW_LN          Set element length                           
                                                                                
VSTR0420 CLI   VALTYPE,LD_UVLLQ    Test user validated variable list            
         JE    VSTR0480                                                         
                                                                                
         LR    R1,R2                                                            
         TM    VALINDS,LF_NTRYQ    Test multiple entry column                   
         JZ    VSTR0430                                                         
         LLC   R1,VALCOLN                                                       
         LA    R1,ROWNTRY-L'ROWNTRY(R1)                                         
         LLC   R0,0(R1)            R0=current column entry count                
         AHI   R0,1                                                             
         CLM   R0,1,LD_LSTMX       Test column entry count exceeded             
         JH    VSTRNN                                                           
         STC   R0,VSENTRY          Save entry number for code below             
         STC   R0,0(R1)            Set new column entry count                   
         SHI   R0,1                                                             
         LR    R1,RE                                                            
         MR    R0,R0               R1=index to entry value in column            
         AR    R1,R2               R1=A(column entry)                           
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   VSTR0430                                                         
         TM    LD_INDS5,LD_IPCEQ   Test prefix column with entry count          
         JZ    VSTR0430                                                         
         MVC   0(L'VSENTRY,R2),VSENTRY                                          
         AHI   R1,L'VSENTRY                                                     
                                                                                
VSTR0430 TM    VSINDS,VSINULL      Test null input string                       
         JZ    VSTR0440                                                         
         NI    VSINDS,FF-VSINULL                                                
         BCTR  RE,0                                                             
         EX    RE,VSTRMV1N         Yes - clear output value                     
         J     VSTR0450                                                         
                                                                                
VSTR0440 BCTR  RE,0                Move data to element                         
         EX    RE,VSTRMV1F                                                      
                                                                                
VSTR0450 TM    LW_TYPE,LW_TRNGQ    Test range of values                         
         JZ    VSTR0460                                                         
         LLC   RE,LD_LEN           Ensure end not greater than start            
         LA    R1,LW_DATA1(RE)                                                  
         BCTR  RE,0                                                             
         EX    RE,VSTRCLW1                                                      
         JH    VSTRNM                                                           
         J     VSTRX                                                            
                                                                                
VSTR0460 TM    LW_TYPE,LW_TLSTQ    Test list of values                          
         JZ    VSTRX                                                            
                                                                                
         LHI   R0,1                                                             
         LLC   RE,LD_LEN                                                        
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    *+10                                                             
         LLH   RE,VALWROW                                                       
         CLI   VALTYPE,LD_UVFLQ    Test user validated fixed list               
         JNE   *+12                                                             
         MH    RE,LP_OLEN+2        Yes - calculate length                       
         LH    R0,LP_OLEN+2        and set number of entries                    
                                                                                
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    *+12                                                             
         CLI   VALFLAG,0           Don't update number and length               
         JE    VSTR0470            If not first for new row                     
                                                                                
         LLH   R1,LW_NUMN          Bump list entry count                        
         AR    R1,R0                                                            
         STCM  R1,3,LW_NUMN                                                     
         LLH   R1,LW_LN            Bump total element length                    
         AR    R1,RE                                                            
         STCM  R1,3,LW_LN                                                       
                                                                                
VSTR0470 TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    VSTRX                                                            
         TM    VALINDS,LF_NTRYQ    Test multiple input column                   
         JNZ   VSTRX                                                            
                                                                                
         LLC   RF,VALCOLN          Update row index                             
         SLL   RF,1                                                             
         LA    RF,ROWHIGH-L'ROWHIGH(RF)                                         
         LLH   R1,0(RF)                                                         
         AR    R1,R0                                                            
         STCM  R1,3,0(RF)                                                       
         J     VSTRX                                                            
                                                                                
VSTR0480 SR    RE,RE               Test if entry was created                    
         ICM   RE,3,0(R2)                                                       
         JZ    VSTRX                                                            
         LLH   R0,LW_NUMN          Yes - bump N'entries                         
         AHI   R0,1                                                             
         STCM  R0,3,LW_NUMN                                                     
         LLH   R0,LW_LN            and element length                           
         AR    R0,RE                                                            
         STCM  R0,3,LW_LN                                                       
         J     VSTRX                                                            
                                                                                
VSTR0490 LM    RE,RF,VSAINP                                                     
         LTR   RF,RF                                                            
         JZ    VSTRX                                                            
         MVC   LW_CODE,VALCODE     Build raw data entry in pool                 
         MVI   LW_TYPE,LW_TRAWQ                                                 
         BCTR  RF,0                                                             
         EX    RF,VSTRMVWE                                                      
         AHI   RF,LW_LN1Q+1                                                     
         STCM  RF,3,LW_LN                                                       
         AR    R5,RF                                                            
         ST    R5,LP_AWMP                                                       
         J     VSTRX                                                            
                                                                                
VSTR0500 MVC   LW_D(LW_LN2Q),NULLS                                              
         J     EXITY                                                            
                                                                                
VSTRX    GOTOR TSTWMP              Test WMP size exceeded                       
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Set validation error types - this is done so that if there is a     *         
* problem the code can be patched to die at VALSRTN and you can see   *         
* how you got there by looking at the value in BYTE1                  *         
*                                                                     *         
* The ':( VSTRN' interface option can be used instead of a hard patch *         
* to get a dump on any validation error                               *         
***********************************************************************         
                                                                                
VSTRNA   MVI   BYTE1,C'A'                                                       
         J     VSTRN                                                            
VSTRNB   MVI   BYTE1,C'B'                                                       
         J     VSTRN                                                            
VSTRNC   MVI   BYTE1,C'C'                                                       
         J     VSTRN                                                            
VSTRND   MVI   BYTE1,C'D'                                                       
         J     VSTRN                                                            
VSTRNE   MVI   BYTE1,C'E'                                                       
         J     VSTRN                                                            
VSTRNF   MVI   BYTE1,C'F'                                                       
         J     VSTRN                                                            
VSTRNG   MVI   BYTE1,C'G'                                                       
         J     VSTRN                                                            
VSTRNH   MVI   BYTE1,C'H'                                                       
         J     VSTRN                                                            
VSTRNI   MVI   BYTE1,C'I'                                                       
         J     VSTRN                                                            
VSTRNJ   MVI   BYTE1,C'J'                                                       
         J     VSTRN                                                            
VSTRNK   MVI   BYTE1,C'K'                                                       
         J     VSTRN                                                            
VSTRNL   MVI   BYTE1,C'L'                                                       
         J     VSTRN                                                            
VSTRNM   MVI   BYTE1,C'M'                                                       
         J     VSTRN                                                            
VSTRNN   MVI   BYTE1,C'N'                                                       
                                                                                
VSTRN    L     RE,LP_ASAVE         Test interface option to die                 
         TM    LS_IIND1-LS_D(RE),LS_IVSTR                                       
         JNZ   DEATH133                                                         
         GOTOR TSTWMP              Test WMP size exceeded                       
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   EXITN                                                            
         ICM   R1,15,LP_ATIOB      Position cursor to bad data                  
         JZ    EXITN                                                            
         USING TIOBD,R1                                                         
         ICM   R0,15,VSATWAH       Test TWA field header passed                 
         JZ    EXITN                                                            
         S     R0,LP_ATWA                                                       
         STCM  R0,3,TIOBCURD       Set displacement to current field            
         MVC   TIOBCURS,NULLS                                                   
         OI    TIOBINDS,TIOBSETC                                                
         L     RF,LP_AINP                                                       
         S     RF,VSAINP                                                        
         STCM  RF,1,TIOBCURI       Set displacement to bad data field           
         J     EXITN                                                            
         DROP  R6,R7                                                            
                                                                                
TSTWMP   LLH   R0,LW_LN            Test WMP size exceeded                       
         AR    R0,R5                                                            
         C     R0,LP_AWMPX                                                      
         BNHR  RE                                                               
         J     DEATH134                                                         
         DROP  R5                                                               
                                                                                
VSWORKD  DSECT ,                   ** VSTR local w/s **                         
VSPARM   DS    0F                  ** Input parameters **                       
VSAINP   DS    A                   A(input string)                              
VSLINP   DS    F                   L'input string                               
VSALD    DS    A                   A(LD_D)                                      
VSATWAH  DS    A                   A(TWA field header) or zero                  
VSPARML  EQU   *-VSPARM            L'parameter list                             
VSINDS   DS    X                   ** Indicators **                             
VSILA    EQU   X'80'               Input is a list/array                        
VSINULL  EQU   X'40'               Zero length data (null string)               
VSDELIMD DS    C                   List delimiter                               
VSRANGED DS    C                   Range delimiter                              
VSENTRYD DS    C                   Entry delimiter                              
VSDELIM  DS    C                   Delimiter character                          
VSSAVELN DS    X                   Saved data length                            
VSENTRY  DS    X                   Current column entry number                  
VSWORKL  EQU   *-VSWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Process a command card (off-line test emulation)                    *         
***********************************************************************         
                                                                                
PRCCMD   NTR1  LABEL=*                                                          
         L     R1,LP_ARUNP                                                      
         L     R1,RUNPACMD-RUNPARMD(R1)                                         
                                                                                
         CLI   0(R1),SVRCMDQ       Test server command card                     
         JNE   PRCCMD02                                                         
         AHI   R1,1                                                             
         ST    R1,LP_AINP          Set A(input string)                          
         GOTOR LP_AGSVR,RSVRADDR   Yes - call server to process                 
         J     EXITY                                                            
                                                                                
PRCCMD02 CLI   0(R1),C'R'          Test record command                          
         JE    PRCCMD04                                                         
         CLI   0(R1),C'D'          Test data command                            
         JE    PRCCMD06                                                         
                                                                                
***********************************************************************         
* Process record map card                                             *         
***********************************************************************         
                                                                                
PRCCMD04 OI    INDQBTCH,INDSBTCH                                                
         LA    R2,2(R1)                                                         
         GOTOR LP_AVMAP,PARM,(4,(R2))                                           
         NI    INDQBTCH,FF-(INDSBTCH)                                           
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Process request data card                                           *         
***********************************************************************         
                                                                                
PRCCMD06 LA    R2,2(R1)                                                         
         GOTOR HEXIN,DMCB,(R2),WORK,4                                           
         CLC   12(4,R1),NULLS                                                   
         JE    DEATH135                                                         
                                                                                
         LHI   R0,1                                                             
         ICM   R3,15,LP_AQMAP      Look up entry in request map table           
         JZ    DEATH136                                                         
         USING LD_D,R3                                                          
PRCCMD08 CLI   LD_D,LD_EOTQ                                                     
         JE    DEATH137                                                         
         CLC   LD_CODE,WORK        Match name to table                          
         JE    PRCCMD10                                                         
         AHI   R3,LD_LNQ           No match - bump to next table entry          
         AHI   R0,1                                                             
         J     PRCCMD08                                                         
                                                                                
PRCCMD10 GOTOR GETMAP,(R0)                                                      
         LA    R2,5(R2)            R2=A(data string)                            
         LA    RF,50(R2)                                                        
         CLI   0(RF),SPACEQ                                                     
         JNE   *+8                                                              
         JCT   RF,*-8                                                           
         SR    RF,R2                                                            
         JM    DEATH138                                                         
         AHI   RF,1                                                             
         GOTOR LP_AVSTR,DMCB,(R2),(RF),LD_D,0                                   
         JE    EXITY                                                            
         J     DEATH139                                                         
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Validate input data object                                          *         
*                                                                     *         
* Ntry:- R1 points to a parameter list as follows:-                   *         
*                                                                     *         
*        P1=A(Input string)                                           *         
*        P2=L'Input string                                            *         
*        P3=A(Map entry)                                              *         
*        P4=A(Output area) only used if user validated variable list  *         
***********************************************************************         
                                                                                
VINP     NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R6,8(R1)                                                         
         USING LD_D,R6             R6=A(input definition)                       
         LM    R3,R4,0(R1)                                                      
         ST    R6,LP_ALDD          Set address for user routines                
                                                                                
         ICM   R5,15,12(R1)        R5=A(output area)                            
         JZ    VINP0010                                                         
         CLI   VALVALTY,MASKQ      Test mask bit                                
         JE    VINP0020                                                         
         CLI   LD_TYPE,LD_UVLLQ    Test user validated variable list            
         JE    VINP0020            Yes - use supplied address                   
                                                                                
VINP0010 MVC   WORK,NULLS          Clear output area                            
         LA    R5,WORK             R5=A(output area)                            
                                                                                
VINP0020 STM   R3,R5,LP_AINP       Set A(input),L'input,A(output)               
         MVC   LP_VPARM,LD_VPARM   Set parameter value                          
                                                                                
         CLI   LD_INPMX,0          Test maximum input length set                
         JE    *+12                                                             
         CLM   R4,1,LD_INPMX       Yes - error if input is longer               
         JH    EXITH                                                            
                                                                                
         CLI   VALTYPE,LD_HDROQ    Test header only                             
         JE    VINP0030                                                         
         CLI   VALTYPE,LD_OCHRQ    Test optional character string               
         JE    VINP0030                                                         
         LTR   R4,R4               Test zero length input                       
         JZ    EXITL               Yes - exit with CC=low                       
         CHI   R4,256              Test input length greater than 255           
         JH    EXITH               Yes - exit with CC=high                      
         GOTOR SETLEN,1            Call SETLEN to get maximum length            
         CLM   R4,1,BYTE1          Test longer than maximum allowed             
         JH    EXITH                                                            
                                                                                
VINP0030 CLI   LD_IDF,LD_IDFRQ     Test have LD_INDS5 available                 
         JNE   VINP0040                                                         
         TM    LD_INDS5,LD_ISMFQ   Test this is an SMF data field               
         JZ    VINP0040                                                         
         LTR   R4,R4                                                            
         JZ    VINP0040                                                         
         L     R1,LP_ASAVE         Save SMF data fields                         
S        USING LS_D,R1                                                          
         CLI   S.LS_SMFF#,LS_SMFMX Test have filled all fields                  
         JE    VINP0040                                                         
         LLC   RE,S.LS_SMFF#       Bump field index value                       
         AHI   RE,1                                                             
         STC   RE,S.LS_SMFF#                                                    
         BCTR  RE,0                                                             
         MHI   RE,L'LS_SMFF                                                     
         LA    RE,S.LS_SMFF(RE)    Point to new entry                           
         MVC   0(L'LS_SMFF,RE),SPACES                                           
         LR    RF,R4               RF=L'input field                             
         CHI   RF,L'LS_SMFF                                                     
         JNH   *+8                                                              
         LHI   RF,L'LS_SMFF        Adjust if too long                           
         BCTR  RF,0                                                             
         EX    RF,VINPMVE3         Move data to entry                           
         DROP  S                                                                
                                                                                
VINP0040 LLC   RF,VALTYPE          Do data validation                           
         MHI   RF,L'VALTAB                                                      
         CHI   RF,VALTABL                                                       
         JNL   DEATH140                                                         
         LARL  RE,VALTAB                                                        
         AR    RF,RE                                                            
         SR    RE,RE                                                            
         BR    RF                                                               
                                                                                
VALTAB   DS    0XL4                                                             
         J     VALUSER             00 - user validated                          
         J     VALUBIN             01 - number - output 31 bit binary           
         J     VALSPAK             02 - signed number - output packed           
         J     VALCHAR             03 - character string                        
         J     VALPDAT             04 - date - output pwos                      
         J     VALCDAT             05 - date - output compressed                
         J     VALSPAK             06 - cash amount - output packed             
         J     VALCBIN             07 - cash amount - output binary             
         J     VALHEXD             08 - hexadecimal string                      
         J     VALHDRO             09 - header only                             
         J     VALJDAT             10 - date - output short julian              
         J     VALBDAT             11 - date - output binary                    
         J     VALUBIN             12 - number - output 32 bit binary           
         J     VALMASK             13 - mask - output bit in y/n mask           
         J     VALUSER             14 - user validated (range output)           
         J     VALEDAT             15 - date - output ebcdic (yymmdd)           
         J     VALVRSN             16 - version number                          
         J     VALVSTR             17 - variable string                         
         J     VALBMON             18 - month - output binary                   
         J     VALCHAR             19 - optional character string               
         J     VALPMON             20 - month - output pwos                     
         J     VALUSER             21 - user validated variable list            
         J     VALUSER             22 - user validated fixed list               
         DC    XL(L'VALTAB)'00'    23 - (output=record map code)                
         J     VALUSID             24 - user-id (multi server request)          
         J     VALACC1             25 - limit access (")                        
         J     VALRINF             26 - desktop folder request info             
         J     VALEDYM             27 - date - output ebcdic (yymm)             
         J     VALJLNG             28 - date - output long julian               
         J     VALFLDR             29 - desktop folder id                       
         J     VALRQST             30 - desktop folder request id               
         J     VALRDSC             31 - desktop folder request desc.            
         J     VALUSYS             32 - upload system                           
         J     VALUPRG             33 - upload program                          
         DC    XL(L'VALTAB)'00'    34 - (run on exit command)                   
         DC    XL(L'VALTAB)'00'    35 - (run on exit request value)             
         DC    XL(L'VALTAB)'00'    36 - (run on exit end)                       
         J     VALMQHV             37 - MQ output queue                         
         J     VALMQKV             38 - MQ output key                           
         J     VALXSQV             39 - external service call queue             
         J     VALXRKV             40 - return routing                          
         J     VALVCHR             41 - variable character string               
         J     VALKNWK             42 - keep =NWK file                          
         J     VALKFWK             43 - keep =FWK file                          
         J     VALDRFT             44 - draft run (don't update files)          
         J     VALTRCE             45 - trace flags                             
         DC    XL(L'VALTAB)'00'    46 - self-defining element                   
         J     VALMB80             47 - mask bit X'80'                          
         J     VALMB40             48 - mask bit X'40'                          
         J     VALMB20             49 - mask bit X'20'                          
         J     VALMB10             50 - mask bit X'10'                          
         J     VALMB08             51 - mask bit X'08'                          
         J     VALMB04             52 - mask bit X'04'                          
         J     VALMB02             53 - mask bit X'02'                          
         J     VALMB01             54 - mask bit X'01'                          
         J     VALNDAT             55 - date - output date type 14              
VALTABL  EQU   *-VALTAB                                                         
         EJECT                                                                  
***********************************************************************         
* Mask bits                                                           *         
***********************************************************************         
                                                                                
VALMB80  LHI   R1,X'80'                                                         
         J     VALMBALL                                                         
VALMB40  LHI   R1,X'40'                                                         
         J     VALMBALL                                                         
VALMB20  LHI   R1,X'20'                                                         
         J     VALMBALL                                                         
VALMB10  LHI   R1,X'10'                                                         
         J     VALMBALL                                                         
VALMB08  LHI   R1,X'08'                                                         
         J     VALMBALL                                                         
VALMB04  LHI   R1,X'04'                                                         
         J     VALMBALL                                                         
VALMB02  LHI   R1,X'02'                                                         
         J     VALMBALL                                                         
VALMB01  LHI   R1,X'01'                                                         
VALMBALL CLI   0(R3),C'Y'          Only acceptable value                        
         JNE   EXITY                                                            
         EX    R1,VMBAOI50         'OR' on the mask bit                         
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Map header only input                                               *         
***********************************************************************         
                                                                                
VALHDRO  TM    LD_INDS1,LD_IRTNQ   Test application routine specified           
         JNZ   VALUSER2            Yes - call application routine               
         LHI   R4,1                No - set output length to 1                  
         ST    R4,LP_OLEN                                                       
         MVI   0(R5),YESQ          and output value to 'Y'                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Application supplied validation routine                             *         
***********************************************************************         
                                                                                
VALUSER  TM    LD_INDS1,LD_IRTNQ   Test routine for data                        
         JZ    DEATH141                                                         
                                                                                
VALUSER2 TM    LD_INDS3,LD_IUIR1+LD_IUIR2                                       
         JNZ   VALUSER4                                                         
         CLC   LD_VALR,NULLS       Ensure routine address is set                
         JE    DEATH142                                                         
         GOTOR LP_AGSVR,LD_VALR    Call the server validation routine           
         JNE   EXITH                                                            
         J     EXIT                                                             
                                                                                
VALUSER4 L     RF,LP_AUIR1         Call index routine passing                   
         TM    LD_INDS3,LD_IUIR2   routine number in hob of RF                  
         JZ    *+8                 and A(input,length,output) in R1             
         L     RF,LP_AUIR2                                                      
         ICM   RF,8,LD_VRNDX                                                    
         LA    R1,LP_AINP                                                       
         LM    R2,RB,LP_R2RB                                                    
         GOTOR (RF),(R1)                                                        
         JNE   EXITH                                                            
         J     EXIT                                                             
                                                                                
***********************************************************************         
* Validate variable character string (output is one byte binary       *         
* length followed by character string)                                *         
***********************************************************************         
                                                                                
VALVCHR  STC   R4,0(R5)            Set length of input data                     
         AHI   R5,1                and bump over it                             
                                                                                
***********************************************************************         
* Validate characters - output is left aligned and space filled       *         
***********************************************************************         
                                                                                
VALCHAR  SR    RF,RF                                                            
         ICM   RF,1,LD_LEN         Get input length                             
         JNZ   VALCHAR2                                                         
         ICM   RF,1,LD_INPMX       Use maximum input length if not set          
         JZ    VALCHAR4                                                         
                                                                                
VALCHAR2 CLI   VALTYPE,LD_VCHRQ    Test variable character string               
         JNE   *+6                                                              
         BCTR  RF,0                Yes - adjust length                          
         MVI   0(R5),SPACEQ        Pre-fill output with spaces                  
         SHI   RF,2                                                             
         JM    VALCHAR4                                                         
         EX    RF,VCHRMV55                                                      
                                                                                
VALCHAR4 SHI   R4,1                                                             
         JM    EXITY                                                            
         TM    INDQTEST,INDSTEST   Test interactive test mode                   
         JZ    VALCHAR6                                                         
         CHI   R4,0                Test input length of 1                       
         JNE   VALCHAR6                                                         
         CLI   0(R3),MAPONLYQ      and map only character                       
         JE    EXITY                                                            
                                                                                
VALCHAR6 EX    R4,VCHRMV53         Move field to output area                    
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate unsigned binary number                                     *         
***********************************************************************         
                                                                                
VALUBIN  MVI   WORK,FF                                                          
         MVC   WORK+1(L'WORK-1),WORK                                            
         MVC   WORK+C'0'(10),NULLS                                              
         CHI   R4,16                                                            
         JH    EXITH                                                            
         BCTR  R4,0                                                             
         EX    R4,VUBITP3W                                                      
         JNZ   EXITH                                                            
         EX    R4,VUBIPKD3                                                      
         CP    DUB,P7EFFS                                                       
         JH    EXITN                                                            
         CVB   R0,DUB                                                           
         IC    R4,LD_LEN                                                        
         LHI   RF,1                                                             
         SLL   RF,0(R4)                                                         
         BCTR  RF,0                RF=STCM/ICM mask                             
         EX    RF,VUBIST05                                                      
         EX    RF,VUBIIC0Z                                                      
         LTR   R0,R0                                                            
         JZ    EXITY                                                            
         J     EXITH                                                            
                                                                                
***********************************************************************         
* Validate signed packed number                                       *         
***********************************************************************         
                                                                                
VALSPAK  GOTOR CASHVAL,DMCB,(C'0',(R3)),(R4)                                    
         CLI   0(R1),FF                                                         
         JE    EXITH                                                            
         LLC   RF,LD_LEN                                                        
         BCTR  RF,0                                                             
         SLL   RF,4                                                             
         EX    RF,VSPAZA51         ZAP in data                                  
         EX    RF,VSPACP51         Test data fits into output field             
         JE    EXITY                                                            
         J     EXITH                                                            
                                                                                
***********************************************************************         
* Validate date - output type pwos                                    *         
***********************************************************************         
                                                                                
VALPDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD5',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output type compressed                              *         
***********************************************************************         
                                                                                
VALCDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD3',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output type new 1964 base type 14                   *         
***********************************************************************         
                                                                                
VALNDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTS14',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output short julian date                            *         
***********************************************************************         
                                                                                
VALJDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD9',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output long julian date                             *         
***********************************************************************         
                                                                                
VALJLNG  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD8',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output type binary                                  *         
***********************************************************************         
                                                                                
VALBDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD7',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output type ebcdic yymmdd                           *         
***********************************************************************         
                                                                                
VALEDAT  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYMD',(R3)),                                      +        
               ('SOFOTSD2',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate date - output type ebcdic yymm                             *         
***********************************************************************         
                                                                                
VALEDYM  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYM',(R3)),                                       +        
               ('SOFOTSD1',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate month - output type binary yymm                            *         
***********************************************************************         
                                                                                
VALBMON  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYM',(R3)),                                       +        
               ('SOFOTSD6',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate month - output type pwos yymm                              *         
***********************************************************************         
                                                                                
VALPMON  GOTOR GOSOFT,DMCB,                                            +        
               ('SOFITYM',(R3)),                                       +        
               ('SOFOTSD4',(R5)),                                      +        
               ('SOFIIANY',0),                                         +        
               ((R4),0)                                                         
         JNE   EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate cash amount - output type binary                           *         
***********************************************************************         
                                                                                
VALCBIN  GOTOR CASHVAL,DMCB,(C'N',(R3)),(R4)                                    
         CLI   0(R1),FF                                                         
         JE    EXITH                                                            
         L     R0,4(R1)                                                         
         IC    R4,LD_LEN                                                        
         LHI   RF,1                                                             
         SLL   RF,0(R4)                                                         
         BCTR  RF,0                RF=STCM/ICM mask                             
         EX    RF,VCBIST05                                                      
         LA    R1,ZEROES                                                        
         TMH   R0,X'8000'          Test number is negative                      
         JZ    *+8                                                              
         LA    R1,EFFS                                                          
         EX    RF,VCBIIC01         Test entire value fits in output             
         CLM   R0,15,0(R1)                                                      
         JE    EXITY                                                            
         J     EXITH                                                            
                                                                                
***********************************************************************         
* Validate hexadecimal string - output is right or left aligned       *         
***********************************************************************         
                                                                                
VALHEXD  SR    RF,RF                                                            
         ICM   RF,1,LD_LEN                                                      
         JNZ   *+12                                                             
         LA    RF,1(R4)                                                         
         SRL   RF,1                                                             
         SLL   RF,1                                                             
         SHI   RF,2                RF=(actual output length*2)-2                
         JM    EXITY                                                            
         MVI   WORK2,C'0'          Pre-fill output with character nulls         
         EX    RF,VHEXMVWW                                                      
         AHI   RF,2                                                             
         LR    R1,RF                                                            
         SR    R1,R4               R1=L'pad characters                          
         LA    R1,WORK2(R1)                                                     
         BCTR  R4,0                                                             
         EX    R4,VHEXMV13                                                      
         GOTOR HEXIN,DMCB,WORK2,(R5),(RF),0                                     
         CLC   12(4,R1),NULLS                                                   
         JE    EXITH                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate mask                                                       *         
***********************************************************************         
                                                                                
VALMASK  LTR   R4,R4               Exit if no input                             
         JZ    EXITY                                                            
         LA    R1,LP_YMASK                                                      
         LA    R0,LP_NMASK                                                      
         CLI   0(R3),YESQ          Input must be Y or N                         
         JE    VALMASK2                                                         
         CLI   0(R3),NOQ                                                        
         JNE   EXITH                                                            
         XR    R1,R0               Swap masks for input N                       
         XR    R0,R1                                                            
         XR    R1,R0                                                            
         TM    LD_INDS3,LD_INDEF   Test N is the default                        
         JNZ   EXITY               Yes - don't set mask bit                     
         J     VALMASK4                                                         
                                                                                
VALMASK2 TM    LD_INDS3,LD_IYDEF   Test Y is the default                        
         JNZ   EXITY               Yes - don't set mask bit                     
                                                                                
VALMASK4 TM    LD_INDS2,LD_IFLIP   Test flipping masks                          
         JZ    *+10                                                             
         XR    R1,R0               Yes - swap to inverse mask                   
         XR    R0,R1                                                            
         XR    R1,R0                                                            
                                                                                
         SR    RE,RE                                                            
         ICM   RE,1,LD_MASKN       Pick up mask number                          
         JZ    DEATH143                                                         
         CHI   RE,L'LP_YMASK*8                                                  
         JH    DEATH144                                                         
         BCTR  RE,0                Set base to zero                             
         SRDL  RE,3                                                             
         AR    R1,RE               Index to correct mask byte                   
         SRL   RF,32-3                                                          
         LA    RF,BITLIST(RF)      Index to bit                                 
         OC    0(0,R1),0(RF)       Set bit on in appropriate mask               
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate application version number                                 *         
***********************************************************************         
                                                                                
VALVRSN  CHI   R4,L'LP_VRSN*2      Test have too many characters                
         JH    EXITN                                                            
         MVI   WORK2,C'0'          Pre-fill with EBCDIC zeroes                  
         MVC   WORK2+1((L'LP_VRSN*2)-1),WORK2                                   
         LHI   R1,L'LP_VRSN*2                                                   
         SR    R1,R4                                                            
         LA    R1,WORK2(R1)                                                     
         MVC   0(8,R1),0(R3)                                                    
         GOTOR HEXIN,DMCB,WORK2,LP_VRSN,8,0                                     
         CLC   12(4,R1),NULLS                                                   
         JE    EXITN                                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate variable string                                            *         
***********************************************************************         
                                                                                
VALVSTR  TM    VALMODE,VALMTEST    Test interactive test mode                   
         JZ    VALVSTR2                                                         
         CHI   R4,1                Test input length of 1                       
         JNE   VALVSTR2                                                         
         CLI   0(R3),MAPONLYQ      and map only character                       
         JE    EXITL                                                            
                                                                                
VALVSTR2 BCTR  R4,0                                                             
         EX    R4,VVSTMV53                                                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate user-id for multi-server request                           *         
***********************************************************************         
                                                                                
VALUSID  CHI   R4,L'CTIKID         Check input length                           
         JH    EXITN                                                            
         GOTOR LOCSVR,LD_VPARM                                                  
         USING SVRTABD,R5                                                       
         L     R2,AWRKBLK                                                       
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         USING CTIREC,R2           Read id record                               
         MVC   CTIKEY,NULLS                                                     
         MVI   CTIKTYP,CTIKTYPQ                                                 
         BCTR  R4,0                                                             
         MVC   CTIKID,SPACES                                                    
         EX    R4,VUSIMVI3                                                      
         GOTOR DMGR,DMCB,DMREAD,CTFILE,CTIREC,CTIREC                            
         JNE   EXITN                                                            
                                                                                
         LA    R2,CTIDATA          Extract user-id number/agency alpha          
         USING CTDSCD,R2                                                        
         SR    R0,R0                                                            
VALUSID2 CLI   CTDSCEL,0                                                        
         JE    VALUSID4                                                         
         CLI   CTDSCEL,CTDSCELQ                                                 
         JNE   *+10                                                             
         MVC   SVRTUSID,CTDSC                                                   
         USING CTAGYD,R2                                                        
         CLI   CTAGYEL,CTAGYELQ                                                 
         JNE   *+10                                                             
         MVC   SVRTAGYA,CTAGYID                                                 
         IC    R0,CTAGYLEN                                                      
         AR    R2,R0                                                            
         J     VALUSID2                                                         
                                                                                
VALUSID4 CLC   SVRTUSID,NULLS      Ensure user fields are present               
         JE    EXITN                                                            
         CLC   SVRTAGYA,NULLS                                                   
         JE    EXITN                                                            
         J     EXITY                                                            
         DROP  R5                                                               
                                                                                
***********************************************************************         
* Validate limit access for multi-server request                      *         
***********************************************************************         
                                                                                
VALACC1  CHI   R4,L'LP_ACCS        Check input length                           
         JH    EXITN                                                            
         GOTOR LOCSVR,LD_VPARM                                                  
         BCTR  R4,0                                                             
         EX    R4,VACCMVS3                                                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate desktop folder id                                          *         
***********************************************************************         
                                                                                
VALFLDR  CHI   R4,L'FOLDER         Check input length                           
         JNE   EXITN                                                            
         OI    INDQARTF,INDSARTF   Set add to folder indicator                  
         MVC   FOLDER#,LD_CODE     Set folder id map number                     
         MVC   FOLDER,SPACES                                                    
         BCTR  R4,0                                                             
         EX    R4,VFLDMVF3         Set folder id                                
         GOTOR GETTYP,LD_RQSTQ                                                  
         STCM  R1,3,REQUEST#       Set request id map number                    
         GOTOR GETTYP,LD_RDSCQ                                                  
         STCM  R1,3,REQDESC#       Set request description map number           
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate desktop folder request id                                  *         
***********************************************************************         
                                                                                
VALRQST  CHI   R4,L'RLPIRID        Check input length                           
         JNE   EXITN                                                            
         MVC   0(L'RLPIRID,R5),0(R3)                                            
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate desktop folder request description                         *         
***********************************************************************         
                                                                                
VALRDSC  CHI   R4,L'REQDESC        Check input length                           
         JH    EXITN                                                            
         MVC   REQDESC,SPACES                                                   
         BCTR  R4,0                                                             
         EX    R4,VRDSMVR3         Set request description                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate desktop folder request info                                *         
***********************************************************************         
                                                                                
VALRINF  CHI   R4,L'REQINFO        Check input length                           
         JH    EXITN                                                            
         STC   R4,REQINFOL         Set length of request info                   
         MVC   REQINFO,0(R3)       Set request info                             
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate upload to system                                           *         
***********************************************************************         
                                                                                
VALUSYS  CHI   R4,L'LI_TSYS        Check input length                           
         JH    EXITN                                                            
         L     R1,LP_ASAVE                                                      
         MVC   LS_TSYS-LS_D(,R1),0(R3)                                          
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate upload to program                                          *         
***********************************************************************         
                                                                                
VALUPRG  CHI   R4,L'LI_TPRG        Check input length                           
         JH    EXITN                                                            
         L     R1,LP_ASAVE                                                      
         MVC   LS_TPRG-LS_D(,R1),SPACES                                         
         BCTR  R4,0                                                             
         EX    R4,VUPRMVS3                                                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate MQ header value                                            *         
***********************************************************************         
                                                                                
VALMQHV  CHI   R4,L'LP_MQQUE       Check input length                           
         JH    EXITN                                                            
         MVI   LP_MQQUE,C'*'                                                    
         MVC   LP_MQQUE+1(L'LP_MQQUE-1),LP_MQQUE                                
         BCTR  R4,0                                                             
         EX    R4,VMQHMVM3         Set MQ header value                          
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate MQ key value                                               *         
***********************************************************************         
                                                                                
VALMQKV  CHI   R4,L'LP_MQKEY       Check input length                           
         JH    EXITN                                                            
         MVC   LP_MQKEY,SPACES                                                  
         BCTR  R4,0                                                             
         EX    R4,VMQKMVM3         Set key value                                
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate external service queue name                                *         
***********************************************************************         
                                                                                
VALXSQV  CHI   R4,L'LP_MQSVR       Check input length                           
         JH    EXITN                                                            
         MVI   LP_MQSVR,C'*'                                                    
         MVC   LP_MQSVR+1(L'LP_MQSVR-1),LP_MQSVR                                
         BCTR  R4,0                                                             
         EX    R4,VSXQMVM3         Set external service call queue name         
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Validate service call routing                                       *         
***********************************************************************         
                                                                                
VALXRKV  CHI   R4,L'LP_MQRKV       Check input length                           
         JH    EXITN                                                            
         MVI   LP_MQRKV,C'*'                                                    
         MVC   LP_MQRKV+1(L'LP_MQRKV-1),LP_MQRKV                                
         BCTR  R4,0                                                             
         EX    R4,VXRKMVM3         Set service call routing                     
         J     EXITY                                                            
                                                                                
***********************************************************************         
* DDLINK Option - Keep =NWK file (ie don't purge it)                  *         
***********************************************************************         
                                                                                
VALKNWK  CLI   0(R3),YESQ                                                       
         JNE   EXITY                                                            
         OI    LP_OFLG1,LP_OFKNW                                                
         J     EXITY                                                            
                                                                                
***********************************************************************         
* DDLINK Option - Keep =NWK file (ie don't purge it)                  *         
***********************************************************************         
                                                                                
VALKFWK  CLI   0(R3),YESQ                                                       
         JNE   EXITY                                                            
         OI    LP_OFLG1,LP_OFKFW                                                
         J     EXITY                                                            
                                                                                
***********************************************************************         
* DDLINK Option - Draft run (don't update files)                      *         
***********************************************************************         
                                                                                
VALDRFT  CLI   0(R3),YESQ                                                       
         JNE   EXITY                                                            
         OI    LP_OFLG1,LP_OFDFT                                                
         J     EXITY                                                            
                                                                                
***********************************************************************         
* DDLINK Option - trace flags (application defined)                   *         
***********************************************************************         
                                                                                
VALTRCE  CHI   R4,2                Input must be 2 bytes long                   
         JNE   EXITH                                                            
         GOTOR HEXIN,DMCB,(R3),LP_OFTRC,L'LP_OFTRC*2                            
         CLC   12(4,R1),NULLS      and be a valid hexadecimal string            
         JE    EXITH                                                            
         J     EXITY                                                            
         DROP  R6                                                               
         EJECT                                                                  
***********************************************************************         
* Locate server table entry for multi-server requests                 *         
*                                                                     *         
* Ntry:- R1=A(Server type)                                            *         
* Exit:- R5=A(Server table entry)                                     *         
***********************************************************************         
                                                                                
LOCSVR   CLI   0(R1),0             Ensure server type is known                  
         JE    DEATH145                                                         
         LA    R5,SVRTAB           Locate free entry in server table            
         USING SVRTABD,R5                                                       
         LA    R0,SVRTABM                                                       
LOCSVR02 CLC   SVRTTYPE,0(R1)      Test entry already initialized               
         BER   RE                                                               
         CLI   SVRTTYPE,0          Test free entry                              
         JE    LOCSVR04                                                         
         AHI   R5,SVRTABL                                                       
         JCT   R0,LOCSVR02                                                      
         J     EXITN                                                            
LOCSVR04 MVC   SVRTTYPE,0(R1)      Initialize entry if not found                
         BR    RE                                                               
         DROP  R5                                                               
                                                                                
***********************************************************************         
* Look-up data type in server input map table                         *         
*                                                                     *         
* Ntry:- R1=Data type                                                 *         
* Exit:- R1=Map code                                                  *         
***********************************************************************         
                                                                                
GETTYP   L     RF,LP_AQMAP                                                      
GETTYP02 CLI   LD_CODE-LD_D(RF),LD_EOTQ                                         
         JE    DEATH146                                                         
         CLM   R1,1,LD_TYPE-LD_D(RF)                                            
         JE    *+12                                                             
         AHI   RF,LD_LNQ                                                        
         J     GETTYP02                                                         
         LLH   R1,LD_CODE-LD_D(RF)                                              
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Edit data into output area                                          *         
*                                                                     *         
* Ntry:- R1 points to a parameter list as follows:-                   *         
*                                                                     *         
*        P1/B0  =Field type                       (LX_CTYPE/LO-TYPE)  *         
*        P1/B1-3=A(Input data)                                        *         
*        P2/B0  =Field indicator                  (LX_CIND1/LO_INDS1) *         
*        P2/B1-3=A(Disp. to address) or zeroes    (LX_CDDSP/LO_ADDR)  *         
*        P3/B0  =Input field length               (LX_CDLEN/LO_DLEN)  *         
*        P3/B1-3=A(Output area)                                       *         
*        P4/B0  =Output indicators                (LO_INDS3/LX_CIND3) *         
*        P4/B1-3=A(Disp. to conversion routine)   (LX_CADDR)          *         
*        P5/B1-3=A(id field)                      (LO_ID/LX_ID)       *         
*                                                                     *         
* Exit:- LP_OLEN is significant output length with field formatted    *         
*        into output area                                             *         
***********************************************************************         
                                                                                
EOUT     NTR1  LABEL=*,WORK=(R7,EOWORKL)                                        
         USING EOWORKD,R7          R7=A(local w/s)                              
         NI    INDOSDEL,FF-INDSSDEL                                             
         LR    R2,R1               R2=A(parameter list)                         
         LA    R0,EOWORKD                                                       
         LHI   R1,EOWORKL                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         MVC   EOTYPE,0(R2)        Extract data validation type                 
         SR    R3,R3                                                            
         ICM   R3,7,1(R2)          R3=A(input string)                           
         MVC   EOINDS,4(R2)        Extract indicators                           
         MVC   EOOIND,12(R2)       Extract output indicators                    
         SR    R4,R4                                                            
         ICM   R4,7,5(R2)                                                       
         JZ    *+10                                                             
         MVC   EODISP,0(R4)        Extract displacement to address              
         MVC   EOILEN,8(R2)        Extract input data length                    
         SR    R5,R5                                                            
         ICM   R5,7,9(R2)          R5=A(output string)                          
         MVI   0(R5),SPACEQ        (clear output to spaces)                     
         MVC   1(255,R5),0(R5)                                                  
         LLC   R4,EOILEN           R4=input length                              
         SR    RE,RE                                                            
         ICM   RE,7,13(R2)                                                      
         JZ    *+10                                                             
         MVC   EOADDR,0(RE)        Set conversion address if set                
         ICM   RE,7,17(R2)         Test id address set                          
         JZ    EOUT0010                                                         
         CLI   0(RE),LO_IDFRQ      Test id reused for extra control             
         JNE   EOUT0010                                                         
         MVC   EOXTRA,L'LO_IDF(RE) Set extra control bytes                      
                                                                                
EOUT0010 TM    EOINDS,LO_IBLKQ     Test block address set                       
         JZ    EOUT0020                                                         
         MVC   EOBYTE,EOINDS       Yes - point to input data                    
         NI    EOBYTE,LO_IBLKQ                                                  
         LLC   R3,EOBYTE                                                        
         MHI   R3,L'LP_BLKS                                                     
         TM    INDQCTRL,INDSCTRL   Test control record                          
         JNZ   *+12                                                             
         L     R3,LP_BLKS-L'LP_BLKS(R3)                                         
         J     *+8                                                              
         L     R3,DD_BLKS-L'DD_BLKS(R3)                                         
         LTR   R3,R3                                                            
         JZ    EXITY               Block not defined - don't send               
         LLH   R0,EODISP                                                        
         AR    R3,R0                                                            
         TM    EOINDS,LO_IADDQ     Test pointing to A(data)                     
         JZ    EOUT0020                                                         
         ICM   R3,15,0(R3)         Yes - take pointer                           
                                                                                
EOUT0020 STM   R3,R5,LP_AINP       Set A(input),L'input,A(output)               
                                                                                
         CLI   EOTYPE,LD_DUMYQ     Test dummy output type                       
         JE    EDTUSER             (processing routine only)                    
                                                                                
         LLC   R1,EOTYPE           Translate output type                        
         TM    EOINDS,LO_IRTNQ     Test calling a routine                       
         JZ    *+6                                                              
         SR    R1,R1               Set reset output type                        
         LA    R1,OUTTYPES(R1)                                                  
         MVC   LP_OTYPE,0(R1)      Set output type                              
         CLI   LP_OTYPE,BINARYQ    Test binary value                            
         JNE   EOUT0030                                                         
         L     R1,LP_ILEN          Yes - translate using length                 
         LA    RF,BINTYPES-1(R1)                                                
         MVC   LP_OTYPE,0(RF)      Set output type for binary fields            
         CLI   EOTYPE,LP_OTFUL     Test fullword integer                        
         JE    EOUT0030            Yes                                          
         CLI   EOTYPE,LD_UBINQ     Test unsigned binary output types            
         JE    *+12                                                             
         CLI   EOTYPE,LD_LBINQ                                                  
         JNE   EOUT0030                                                         
         CHI   R1,1                Test one byte binary                         
         JE    EOUT0030            Yes                                          
         MVI   LP_OTYPE,LP_OTFUL   Else convert into fullword integer           
                                                                                
EOUT0030 TM    INDQCTRL,INDSCTRL   Set sending control record                   
         JNZ   *+12                                                             
         TM    EOOIND2,LO_ICHRQ    Test send as character string                
         JZ    *+8                                                              
         MVI   LP_OTYPE,LP_OTCHR   Yes - override the set value                 
                                                                                
         TM    EOINDS,LO_IRTNQ     Test output routine bit set                  
         JNZ   EDTUSER                                                          
                                                                                
         LLC   RF,EOTYPE                                                        
         MHI   RF,L'EDTTAB                                                      
         CHI   RF,EDTTABL                                                       
         JH    DEATH147                                                         
         LARL  RE,EDTTAB                                                        
         AR    RF,RE               Go to edit routine                           
         BR    RF                                                               
                                                                                
EOUT0040 LM    R4,R5,LP_OLEN       Edit routines normally return here           
         TM    EOFLAG,EOFNULLQ     Test no output set                           
         JNZ   *+10                                                             
         LTR   R4,R4               Treat zero output length as null             
         JNZ   EOUT0050                                                         
                                                                                
         TM    EOOIND,LO_IXNUQ     Test suppress null data                      
         JZ    *+10                Yes exit with zero length                    
         SR    R4,R4                                                            
         J     EOUT0060                                                         
                                                                                
         LTR   R4,R4               Test output length set                       
         JNZ   EOUT0070                                                         
         LHI   R4,1                No - send a space                            
         MVI   0(R5),SPACEQ                                                     
         J     EOUT0080                                                         
                                                                                
EOUT0050 TM    EOFLAG,EOFZEROQ     Test zero packed data                        
         JZ    EOUT0060                                                         
         TM    EOOIND,LO_IXZEQ     Yes - test suppress zero packed data         
         JZ    EOUT0060                                                         
         SR    R4,R4               Yes - clear length and exit                  
         J     EOUT0100                                                         
                                                                                
EOUT0060 LA    R5,0(R4,R5)                                                      
         LTR   R4,R4                                                            
         JZ    EOUT0080                                                         
         BCTR  R5,0                R5=A(last character in output)               
                                                                                
EOUT0070 CLI   0(R5),SPACEQ        Remove trailing spaces from field            
         JH    EOUT0100                                                         
         BCTR  R5,0                                                             
         JCT   R4,EOUT0070                                                      
                                                                                
EOUT0080 TM    EOOIND,LO_IXNUQ     Test suppress null data                      
         JNZ   EOUT0090            Yes exit with zero length                    
         LHI   R4,1                Set output length to 1 if empty              
         J     EOUT0100                                                         
                                                                                
EOUT0090 TM    EOOIND2,LO_IMONQ    Test send map only if null                   
         JZ    EOUT0100                                                         
         MVI   LP_OTYPE,LP_OTHDO   Yes - set type to map code only              
         MVC   LP_OLEN,FZERO       and clear length                             
         J     EXITN                                                            
                                                                                
EOUT0100 ST    R4,LP_OLEN          Set significant data length                  
         LTR   R4,R4               Set CC=equal if no data                      
         J     EXIT                                                             
                                                                                
EDTTAB   DS    0XL4                                                             
         J     EDTUSER             00 - user conversion routine                 
         J     EDTUBIN             01 - unsigned number - input binary          
         J     EDTSPAK             02 - signed packed value                     
         J     EDTCHAR             03 - character string                        
         J     EDTPDAT             04 - date - input pwos                       
         J     EDTCDAT             05 - date - input compressed                 
         J     EDTCPAK             06 - signed packed value                     
         J     EDTCBIN             07 - signed binary value                     
         J     EDTHEXD             08 - hexadecimal string                      
         J     EDTHDRO             09 - (header only)                           
         J     EDTJDAT             10 - date - input short julian               
         J     EDTBDAT             11 - date - input binary                     
         J     EDTLBIN             12 - unsigned number - input binary          
         DC    XL(L'EDTTAB)'00'    13 - (input=mask)                            
         DC    XL(L'EDTTAB)'00'    14 - (input=user range)                      
         J     EDTEDAT             15 - date - input ebcdic yymmdd              
         DC    XL(L'EDTTAB)'00'    16 - (input=version data)                    
         J     EDTCHAR             17 - variable string (characters)            
         J     EDTBMON             18 - month - input binary yymm               
         J     EDTCHAR             19 - optional character string               
         J     EDTPMON             20 - month - input pwos yymm                 
         DC    XL(L'EDTTAB)'00'    21 - (input=user validated list)             
         DC    XL(L'EDTTAB)'00'    22 - (input=user validated list)             
         J     EDTEMAP             23 - record map code                         
         DC    XL(L'EDTTAB)'00'    24 - (user-id)                               
         DC    XL(L'EDTTAB)'00'    25 - (limit access 1)                        
         DC    XL(L'EDTTAB)'00'    26 - desktop folder request info             
         J     EDTEDYM             27 - date - input ebcdic yymm                
         J     EDTJLNG             28 - date - input long julian                
         DC    XL(L'EDTTAB)'00'    29 - desktop folder id                       
         DC    XL(L'EDTTAB)'00'    30 - desktop folder request id               
         DC    XL(L'EDTTAB)'00'    31 - desktop folder request desc.            
         DC    XL(L'EDTTAB)'00'    32 - upload system                           
         DC    XL(L'EDTTAB)'00'    33 - upload program                          
         J     EDTRUNX             34 - run on exit command                     
         J     EDTQVAL             35 - run on exit request value               
         J     EDTERUN             36 - run on exit end                         
         DC    XL(L'EDTTAB)'00'    37 - MQ output routing                       
         DC    XL(L'EDTTAB)'00'    38 - MQ key                                  
         DC    XL(L'EDTTAB)'00'    39 - MQ service call routing                 
         DC    XL(L'EDTTAB)'00'    40 - MQ return routing                       
         J     EDTVCHR             41 - variable character string               
         DC    XL(L'EDTTAB)'00'    42 - keep =NWK file                          
         DC    XL(L'EDTTAB)'00'    43 - keep =FWK file                          
         DC    XL(L'EDTTAB)'00'    44 - draft run (don't update files)          
         DC    XL(L'EDTTAB)'00'    45 - trace flags                             
         J     EDTSDEL             46 - self-defining element                   
         J     EDTMB80             47 - mask bit X'80'                          
         J     EDTMB40             48 - mask bit X'40'                          
         J     EDTMB20             49 - mask bit X'20'                          
         J     EDTMB10             50 - mask bit X'10'                          
         J     EDTMB08             51 - mask bit X'08'                          
         J     EDTMB04             52 - mask bit X'04'                          
         J     EDTMB02             53 - mask bit X'02'                          
         J     EDTMB01             54 - mask bit X'01'                          
         J     EDTNDAT             55 - date - input new compressed             
EDTTABL  EQU   *-EDTTAB                                                         
         EJECT                                                                  
***********************************************************************         
* Edit mask bits                                                      *         
***********************************************************************         
                                                                                
EDTMB80  LHI   R1,X'80'            R1= TARGET BIT TO TEST                       
         J     EDTMBALL                                                         
EDTMB40  LHI   R1,X'40'                                                         
         J     EDTMBALL                                                         
EDTMB20  LHI   R1,X'20'                                                         
         J     EDTMBALL                                                         
EDTMB10  LHI   R1,X'10'                                                         
         J     EDTMBALL                                                         
EDTMB08  LHI   R1,X'08'                                                         
         J     EDTMBALL                                                         
EDTMB04  LHI   R1,X'04'                                                         
         J     EDTMBALL                                                         
EDTMB02  LHI   R1,X'02'                                                         
         J     EDTMBALL                                                         
EDTMB01  LHI   R1,X'01'                                                         
                                                                                
EDTMBALL EX    R1,EDTMTM30         TEST TARGET BIT IS ON?                       
         JO    EDTMBAL5             YES                                         
         TM    EOOIND,LO_IXNUQ     TEST SUPPRESS NULL DATA?                     
         JO    EXITY                YES, OUTPUT NOTHING                         
         MVI   0(R5),C'N'           NO, OUTPUT A C'N'                           
         J     *+8                                                              
EDTMBAL5 MVI   0(R5),C'Y'          OUTPUT A C'Y'                                
         LHI   R0,1                                                             
         ST    R0,LP_OLEN                                                       
         J     EXITN                                                            
         EJECT                                                                  
***********************************************************************         
* Self-defining element - uses appropriate editing routine            *         
***********************************************************************         
                                                                                
         USING SDELD,R3                                                         
EDTSDEL  OI    INDOSDEL,INDSSDEL   Set editing self-defining element            
         MVI   FPTHISDT+0,0        Set data map code                            
         MVC   FPTHISDT+1(1),SDEEL                                              
         MVC   EOTYPE,SDETYPE      Set data type                                
         LLC   R4,SDELEN                                                        
         AHI   R3,SDEDATA-SDELD    R3=A(input data)                             
         SHI   R4,SDEDATA-SDELD    R4=L'input data                              
         JP    EOUT0020                                                         
         JNZ   DEATH148                                                         
         LA    R3,EFFS             Point to non-zero character to send          
         CLI   EOTYPE,LD_HDROQ     Zero length data must be map only            
         JE    EOUT0020                                                         
         J     DEATH149                                                         
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* User edited value                                                   *         
***********************************************************************         
                                                                                
EDTUSER  CLI   EOTYPE,LD_DUMYQ     Test dummy output type                       
         JNE   EDTUSER1                                                         
         MVC   LP_AOUT,FZERO       Yes - there is no output                     
         LA    R1,EOPROC           Point to processing routine                  
         J     EDTUSER2                                                         
                                                                                
EDTUSER1 TM    EOOIND,LO_IUIR1+LO_IUIR2                                         
         JNZ   EDTUSER3                                                         
         LA    R1,EOADDR           Use EOADDR if set                            
         CLC   EOADDR,NULLS                                                     
         JNE   EDTUSER2                                                         
         LA    R1,EODISP           Else use EODISP                              
         CLC   EODISP,NULLS                                                     
         JE    DEATH150                                                         
                                                                                
EDTUSER2 GOTOR LP_AGSVR,(R1)       Call server edit routine                     
         J     EDTUSER4                                                         
                                                                                
EDTUSER3 L     RF,LP_AUIR1         Call edit routine passing routine            
         TM    EOOIND,LO_IUIR2     Index in hob of RF                           
         JZ    *+8                 and A(input,length,output) in R1             
         L     RF,LP_AUIR2                                                      
         ICM   RF,8,EOENDX                                                      
         LA    R1,LP_AINP                                                       
         LARL  RE,EDTUSER4         Set return point after exit                  
EDTUSERG NTR1  LABEL=*                                                          
         LM    R2,RB,LP_R2RB                                                    
         GOTOR (RF),(R1)                                                        
         J     EXIT                                                             
                                                                                
EDTUSER4 IPM   R0                  Return after server call here                
         CLI   EOTYPE,LD_DUMYQ     Test dummy output type                       
         JNE   *+14                                                             
         MVC   LP_OLEN,FZERO       Yes - clear output length & exit             
         J     EXITY                                                            
         SPM   R0                                                               
                                                                                
         JNL   EDTUSER5            Test condition code is low                   
         TM    EOOIND,LO_IXRLQ     Yes - test suppress if true                  
         JZ    EDTUSER5                                                         
         SR    R4,R4               Yes - clear output length and exit           
         J     EOUT0100                                                         
                                                                                
EDTUSER5 ICM   R4,15,LP_OLEN       If zero length data returned                 
         JNZ   *+12                                                             
         OI    EOFLAG,EOFNULLQ     Turn on data is null flag                    
         J     EOUT0040                                                         
                                                                                
         EX    R4,EUSRMVW5         Copy the output string into local            
         LA    R3,EOWORK           Point to copied string                       
         J     EDTCHAR             and treat as a character string              
                                                                                
                                                                                
***********************************************************************         
* Header only                                                         *         
***********************************************************************         
                                                                                
EDTHDRO  MVC   LP_OLEN,FZERO       Send header only                             
         TM    EOOIND,LO_IXNUQ     Test suppress null data                      
         JZ    EXITN               No - exit                                    
         CLI   0(R3),SPACEQ        Else test something there                    
         JNH   EXITY                                                            
         J     EXITN                                                            
                                                                                
***********************************************************************         
* Edit variable character string                                      *         
***********************************************************************         
                                                                                
EDTVCHR  LLC   R4,0(R3)            Get length of data                           
         AHI   R3,1                Bump past the length                         
                                                                                
***********************************************************************         
* Edit a character string - LP_OLEN set to significant data length    *         
* Exit:- LP_OLEN set to significant data length - EOFNULLQ is set if  *         
*        output data is empty                                         *         
***********************************************************************         
                                                                                
EDTCHAR  SR    R1,R1               R1=length of output field                    
                                                                                
EDTCHAR1 MVC   0(1,R5),0(R3)       Move next character to output                
         CLI   0(R5),SPACEQ        Test higher than a space                     
         JH    EDTCHAR3            Yes - there is something to send             
         MVI   0(R5),SPACEQ        Set a space if less than a space             
         AHI   R3,1                Bump input pointer                           
         AHI   R5,1                Bump output pointer                          
         AHI   R1,1                Bump output length                           
         JCT   R4,EDTCHAR1         Set next character and repeat                
         OI    EOFLAG,EOFNULLQ     Set nothing to send                          
         SR    R1,R1               Clear output length                          
         J     EDTCHAR5                                                         
                                                                                
EDTCHAR2 MVC   0(1,R5),0(R3)       Move next character to output                
         CLI   0(R5),SPACEQ        Test significant character                   
         JH    EDTCHAR3                                                         
         MVI   0(R5),SPACEQ        Set a space if less than a space             
         AHI   R0,1                Bump trailing space count                    
         J     EDTCHAR4            Bump pointers                                
                                                                                
EDTCHAR3 SR    R0,R0               Clear trailing space count                   
         CLI   0(R5),REPCHARQ      Test for repeat character ('?')              
         JNE   EDTCHAR4                                                         
         AHI   R5,1                Bump output pointer                          
         MVI   0(R5),REPCHARQ      Duplicate the repeat character               
         AHI   R1,1                Bump output length                           
                                                                                
EDTCHAR4 AHI   R3,1                Bump input pointer                           
         AHI   R5,1                Bump output pointer                          
         AHI   R1,1                Bump output length                           
         JCT   R4,EDTCHAR2         Do for remaining characters                  
         SR    R1,R0               Decrement length by trailing spaces          
                                                                                
EDTCHAR5 ST    R1,LP_OLEN          Set output length                            
         J     EOUT0040                                                         
                                                                                
***********************************************************************         
* Edit binary month - output (yyyy)mm                                 *         
***********************************************************************         
                                                                                
EDTBMON  CLC   0(2,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         MVC   DUB(2),0(R3)                                                     
         MVI   DUB+2,1                                                          
         GOTOR DATCON,DMCB,(3,DUB),(20,DUB2)                                    
         J     EDTMON2                                                          
                                                                                
***********************************************************************         
* Edit pwos month - output (yyyy)mm                                   *         
***********************************************************************         
                                                                                
EDTPMON  CLC   0(2,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         MVC   DUB(2),0(R3)                                                     
         MVI   DUB+2,1                                                          
         GOTOR DATCON,DMCB,(1,DUB),(20,DUB2)                                    
                                                                                
EDTMON2  MVC   0(L'TODAYMM,R5),DUB2+L'TODAYYR                                   
         LHI   R0,L'TODAYMM                                                     
         CLC   TODAYYR,DUB2                                                     
         JE    *+14                                                             
         MVC   0(L'TODAYYR+L'TODAYMM,R5),DUB2                                   
         LHI   R0,L'TODAYYR+L'TODAYMM                                           
         STCM  R0,15,LP_OLEN                                                    
         J     EOUT0040                                                         
                                                                                
***********************************************************************         
* Edit pwos date                                                      *         
***********************************************************************         
                                                                                
EDTPDAT  CLC   0(3,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(1,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit compressed date                                                *         
***********************************************************************         
                                                                                
EDTCDAT  CLC   0(2,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(2,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit new compressed date                                            *         
***********************************************************************         
                                                                                
EDTNDAT  CLC   0(2,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(14,(R3)),(20,(R5))                                  
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit short julian date                                              *         
***********************************************************************         
                                                                                
EDTJDAT  CLC   0(3,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(8,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit long julian date                                               *         
***********************************************************************         
                                                                                
EDTJLNG  CLC   0(4,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(6,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit binary date                                                    *         
***********************************************************************         
                                                                                
EDTBDAT  CLC   0(3,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(3,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit ebcdic date yymmdd                                             *         
***********************************************************************         
                                                                                
EDTEDAT  CLC   0(6,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         GOTOR DATCON,DMCB,(0,(R3)),(20,(R5))                                   
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Edit ebcdic date yymm                                               *         
***********************************************************************         
                                                                                
EDTEDYM  CLC   0(4,R3),NULLS                                                    
         JNE   *+12                                                             
         OI    EOFLAG,EOFNULLQ                                                  
         J     EOUT0040                                                         
         MVC   EOWORK(4),0(R3)                                                  
         MVC   EOWORK+4(2),=C'01'                                               
         GOTOR DATCON,DMCB,EOWORK,(20,(R5))                                     
         J     EDTDATX                                                          
                                                                                
***********************************************************************         
* Enter here to do date compression                                   *         
***********************************************************************         
                                                                                
EDTDATX  LHI   R0,L'TODAY                                                       
         CLC   TODAYYR,0(R5)       Test same year as current                    
         JNE   EDTDATX1                                                         
         MVC   0(4,R5),4(R5)       Copy year/month                              
         MVC   4(4,R5),NULLS       and clear remainder                          
         LHI   R0,L'TODAYMM+L'TODAYDD                                           
EDTDATX1 ST    R0,LP_OLEN          Set output length                            
         J     EOUT0040                                                         
                                                                                
***********************************************************************         
* Edit hexadecimal string                                             *         
***********************************************************************         
                                                                                
EDTHEXD  BCTR  R4,0                                                             
         EX    R4,EHEXCL3N                                                      
         JNE   *+8                                                              
         OI    EOFLAG,EOFNULLQ                                                  
         AHI   R4,1                                                             
         GOTOR HEXOUT,DMCB,(R3),0(R5),(R4),0                                    
         SLL   R4,1                R4=L'output                                  
                                                                                
EDTHEXD2 ST    R4,LP_OLEN                                                       
         CHI   R4,1                                                             
         JNH   EOUT0040                                                         
         CLI   0(R5),C'0'          Test starts with a zero                      
         JNE   EOUT0040                                                         
         BCTR  R4,0                                                             
         EX    R4,EHEXMV55         Yes - remove it                              
         J     EDTHEXD2                                                         
                                                                                
***********************************************************************         
* Edit signed packed number - this one checks for zero values         *         
***********************************************************************         
                                                                                
EDTSPAK  BCTR  R4,0                                                             
         EX    R4,ESPACL3N                                                      
         JE    EDTLBINN                                                         
         SLL   R4,4                                                             
         EX    R4,EDTSPTST         Test for valid packed field                  
         JNE   DEATH317                                                         
         SRL   R4,4                                                             
         EX    R4,EDTSPSET                                                      
         CP    DUB,PZERO           Test for zero value                          
         JZ    EDTSPAK2                                                         
         JNM   EDTLBIN2                                                         
         MVI   FLOAT,C'-'                                                       
         J     EDTLBIN2                                                         
                                                                                
EDTSPAK2 OI    EOFLAG,EOFZEROQ     Set this field has zero data                 
         J     EDTLBINZ                                                         
                                                                                
***********************************************************************         
* Edit signed packed number                                           *         
***********************************************************************         
                                                                                
EDTCPAK  BCTR  R4,0                                                             
         EX    R4,ECPACL3N                                                      
         JE    EDTLBINN                                                         
         SLL   R4,4                                                             
         EX    R4,EDTSPTST         Test for valid packed field                  
         JNE   DEATH319                                                         
         SRL   R4,4                                                             
         EX    R4,EDTSPSET                                                      
         JNM   EDTLBIN2                                                         
         MVI   FLOAT,C'-'          Set float if negative                        
         J     EDTLBIN2                                                         
                                                                                
***********************************************************************         
* Edit up to 31 bit unsigned binary number                            *         
***********************************************************************         
                                                                                
EDTUBIN  LHI   RF,1                                                             
         SLL   RF,0(R4)                                                         
         BCTR  RF,0                RF=ICM mask                                  
         SR    R0,R0                                                            
         EX    RF,EUBIIC03         Get value into R0 and edit                   
         JZ    EDTLBINN                                                         
         N     R0,HOBOFF           Ensure high order bit is off                 
         LTR   R0,R0                                                            
         JZ    EDTLBINN                                                         
         J     EDTLBIN1                                                         
                                                                                
***********************************************************************         
* Edit signed binary amount                                           *         
***********************************************************************         
                                                                                
EDTCBIN  LHI   RF,1                                                             
         SLL   RF,0(R4)                                                         
         BCTR  RF,0                                                             
         SR    R0,R0                                                            
         TM    0(R3),X'80'         Test input is negative                       
         JZ    *+8                                                              
         ICM   R0,15,EFFS          Yes - preset R0 to FFs                       
         EX    RF,ECBIIC03                                                      
         JZ    EDTLBINN                                                         
         LTR   R0,R0               Test value is negative                       
         JNM   EDTLBIN1                                                         
         MVI   FLOAT,C'-'                                                       
         J     EDTLBIN1                                                         
                                                                                
***********************************************************************         
* Edit unsigned 32 bit binary number                                  *         
***********************************************************************         
                                                                                
EDTLBIN  LHI   RF,1                                                             
         SLL   RF,0(R4)                                                         
         BCTR  RF,0                                                             
         SR    R0,R0                                                            
         EX    RF,ELBIIC03                                                      
         JZ    EDTLBINN                                                         
         ZAP   DUB,PZERO                                                        
         TMH   R0,X'8000'          Test high order bit is on                    
         JZ    EDTLBIN1                                                         
         N     R0,HOBOFF           Turn high order bit off                      
         ZAP   DUB,P8ZERO                                                       
         CVD   R0,DUB2                                                          
         AP    DUB,DUB2            Add them together                            
         J     EDTLBIN2                                                         
                                                                                
***********************************************************************         
* Enter here to edit binary value in R0                               *         
***********************************************************************         
                                                                                
EDTLBIN1 CVD   R0,DUB              Enter here with R0 set                       
                                                                                
***********************************************************************         
* Edit value into output area - float character if necessary          *         
***********************************************************************         
                                                                                
EDTLBIN2 OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  EOWORK(14),DUB                                                   
         LA    R1,EOWORK           Point to first digit                         
         LA    RE,14-1                                                          
EDTLBIN3 CLI   0(R1),C'0'          Look for first significant digit             
         JNE   EDTLBIN4                                                         
         AHI   R1,1                                                             
         JCT   RE,EDTLBIN3                                                      
EDTLBIN4 SR    R0,R0               Set no float                                 
         CLI   FLOAT,0             Test need to send float                      
         JE    EDTLBIN5                                                         
         MVC   0(L'FLOAT,R5),FLOAT                                              
         AHI   R5,L'FLOAT                                                       
         MVI   FLOAT,0             Reset float character when used              
         LA    R0,L'FLOAT          R0=length of float                           
EDTLBIN5 EX    RE,ELBIMV51         Move value to output string                  
         AHI   RE,1                Add back one for EX above                    
         AR    RE,R0               Add length of float if any                   
         ST    RE,LP_OLEN          Set total field length                       
         J     EOUT0040                                                         
                                                                                
***********************************************************************         
* Enter here when binary or packed value is zero                      *         
***********************************************************************         
                                                                                
EDTLBINN OI    EOFLAG,EOFNULLQ     Set this field has null data                 
                                                                                
EDTLBINZ MVI   0(R5),C'0'          Hard edit for null/zero fields               
         LHI   RE,1                                                             
         ST    RE,LP_OLEN          Set field length                             
         J     EOUT0040                                                         
                                                                                
***********************************************************************         
* Edit element map code                                               *         
***********************************************************************         
                                                                                
EDTEMAP  MVC   FPTHISEL,0(R3)      Set element code                             
         CR    RE,RE                                                            
         J     EXIT                                                             
                                                                                
***********************************************************************         
* Edit run on exit command                                            *         
***********************************************************************         
                                                                                
EDTRUNX  TM    LP_FLAG1,LP_FOFFL   Off-line only                                
         JZ    EXITY                                                            
         J     EXITN                                                            
                                                                                
***********************************************************************         
* Edit run on exit request value                                      *         
***********************************************************************         
                                                                                
EDTQVAL  TM    LP_FLAG1,LP_FOFFL   Off-line only                                
         JZ    EXITY                                                            
         BCTR  R4,0                Yes - copy value as is                       
         EX    R4,EQVAMV53                                                      
         J     EXITN                                                            
                                                                                
***********************************************************************         
* Edit run on exit end                                                *         
***********************************************************************         
                                                                                
EDTERUN  TM    LP_FLAG1,LP_FOFFL   Off-line only                                
         JZ    EXITY                                                            
         J     EXITN                                                            
                                                                                
EOWORKD  DSECT ,                   ** EOUT local w/s **                         
EOBYTE   DS    X                   Work byte                                    
EOTYPE   DS    X                   Extracted data type                          
EOINDS   DS    X                   Extracted indicator                          
EOOIND   DS    X                   Extracted output indicator                   
EOFLAG   DS    X                   ** Flag byte **                              
EOFNULLQ EQU   X'80'               Field value is null                          
EOFZEROQ EQU   X'40'               Field value is zero (packed)                 
EOILEN   DS    X                   Extracted input length                       
EODISP   DS    AL2                 Extracted displacement                       
EOENDX   DS    0X                  Edit routine index number                    
EOADDR   DS    AL2                 Extracted displacement to routine            
EOXTRA   DS    0XL(L'LO_XTRA)      Extra control bytes from id                  
EOPROC   DS    AL2                 Disp. to processing routine                  
EOOIND2  DS    X                   Extracted output indicator 2                 
         DS    X                   N/D                                          
EOWORK   DS    XL256               Work area                                    
EOWORKL  EQU   *-EOWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Handle FALINK break/resume calls                                    *         
***********************************************************************         
                                                                                
FABREAK  L     R1,LP_AFBLK         Test break on full or resume after           
         CLI   MAHMOUNS-FALINKD(R1),0                                           
         JNE   *+12                                                             
         OI    INDQFBRK,INDSFBRK   Set indicator to send no more data           
         J     FARETURN                                                         
         OI    INDQFRSM,INDSFRSM   Set indicator for resume after               
                                                                                
FARETURN CR    RE,RE               Set CC=equal                                 
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Sort a list of values into ascending sequence                       *         
*                                                                     *         
* Ntry:- R7=A(List of values)                                         *         
*        R1=L'Entry                                                   *         
*        R0=N'Entries                                                 *         
***********************************************************************         
                                                                                
SORTIT   NTR1  LABEL=*                                                          
         SHI   R0,1                R0=N'entries-1                               
         JZ    SORTITX                                                          
         BCTR  R1,0                R1=L'data-1                                  
         LR    R2,RF                                                            
                                                                                
SORTIT02 LA    RF,1(R1,R2)                                                      
         LR    RE,R0                                                            
                                                                                
SORTIT04 EX    R1,SORTCLC          Test in sequence                             
         JNH   SORTIT06                                                         
         EX    R1,SORTXC2F         Swap entries if out                          
         EX    R1,SORTXCF2                                                      
         EX    R1,SORTXC2F                                                      
                                                                                
SORTIT06 LA    RF,1(RF,R1)                                                      
         JCT   RE,SORTIT04                                                      
         LA    R2,1(R2,R1)                                                      
         JCT   R0,SORTIT02                                                      
                                                                                
SORTITX  J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* Routine to test record mask against YMASK and NMASK                 *         
*                                                                     *         
* Ntry:- R1=A(LP_D)                                                   *         
* Exit:- CC=Equal if mask tests successful, not equal if not          *         
***********************************************************************         
                                                                                
TSTMSK   L     RF,LP_AWORK-LP_D(R1)                                             
         MVC   WORK-WORKD(L'LP_YMASK,RF),LP_YMASK-LP_D(R1)                      
         NC    WORK-WORKD(L'LP_YMASK,RF),LP_RMASK-LP_D(R1)                      
         CLC   WORK-WORKD(L'LP_YMASK,RF),LP_YMASK-LP_D(R1)                      
         BNER  RE                                                               
         MVC   WORK-WORKD(L'LP_NMASK,RF),LP_NMASK-LP_D(R1)                      
         NC    WORK-WORKD(L'LP_NMASK,RF),LP_RMASK-LP_D(R1)                      
         OC    WORK-WORKD(L'LP_NMASK,RF),WORK-WORKD(RF)                         
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Routine to set next I/O key or apply filters to I/O key             *         
***********************************************************************         
                                                                                
SETKEY   NTR1  LABEL=*,WORK=(R7,SKWORKL)                                        
         USING SKWORKD,R7                                                       
         MVC   SKPARMS(SKPARML),0(R1)                                           
         SR    R9,R9                                                            
         ICM   R9,7,SKPALPD+1      Point to LP_D                                
         L     RC,LP_AWORK         Point to WORKD                               
         LARL  RA,GLOBALS          Point to GLOBALS                             
         SR    R3,R3                                                            
         ICM   R3,7,SKPATAB        Point to key driver table                    
         MVC   SKKEYLN,0(R3)       Extract key length from table                
         AHI   R3,L'SKKEYLN                                                     
         ST    R3,SKATAB           Save A(key table)                            
         USING LK_D,R3                                                          
         MVI   SKFUNC,SKFTSTKY     Set to test key component                    
         MVI   SKACTV,SKANO        Set no key changes                           
                                                                                
SETKEY02 MVC   SKINDS,LK_INDS                                                   
         CLI   SKFUNC,SKFTSTKY                                                  
         JE    *+8                                                              
         MVI   SKACTV,SKAYES       Set key changed                              
         JNL   SETKEY14                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
                                                                                
         LLC   RE,LK_KDISP                                                      
         A     RE,SKPAKEY          RE=displacement to key field                 
         L     R1,SKPAKEY                                                       
         AH    R1,SKKEYLN                                                       
         BCTR  R1,0                                                             
         SR    R1,RE               R1=L'remaining key                           
         LLH   RF,LK_BDISP         RF=A(A(data))                                
         A     RF,SKPABLK                                                       
                                                                                
         TM    SKINDS,LK_IWMPQ     Test data in work pool                       
         JZ    SETKEY04                                                         
         TM    SKINDS,LK_IXTNQ     Can't be an extension block                  
         JNZ   DEATH151                                                         
         MVI   SKADATA,0                                                        
         MVC   SKADATA+1(L'SKADATA-1),0(RF)                                     
         ICM   RF,15,SKADATA       Point to WMP entry                           
         JNZ   *+12                                                             
         MVI   SKINDS,LK_IALLQ     Nothing there - assume 'all'                 
         J     SETKEY10                                                         
         USING LW_D,RF                                                          
         MVC   SKINDS,LW_TYPE      Set indicator                                
         TM    SKINDS,LK_IXTNQ     Can't be an extension block                  
         JNZ   DEATH152                                                         
         LA    RF,LW_DATA1         RF=A(data) or A(N'entries)                   
         DROP  RF                                                               
                                                                                
SETKEY04 TM    SKINDS,LK_ILSTQ+LK_IRNGQ+LK_ISINQ+LK_IXTNQ                       
         JZ    SETKEY12                                                         
                                                                                
         TM    SKINDS,LK_IXTNQ     Test extension block present                 
         JZ    SETKEY08                                                         
                                                                                
         LR    R2,RF                                                            
         USING LL_D,R2             R2=A(key table extension block)              
         SR    RF,RF                                                            
         ICM   RF,7,LL_ADDR        RF=A(range/table/TSARD/BUFFD)                
         TM    LL_INDS,LL_IRNGQ    Test pointing to a range of values           
         JNZ   SETKEY10            Yes                                          
                                                                                
         TM    LL_INDS,LL_IWORK    Test if a table                              
         JNZ   SETKEY08                                                         
         LR    R5,RF               R5=A(TSARD/BUFFD)                            
         STM   RE,R1,SKSAVERE                                                   
                                                                                
         TM    LL_INDS,LL_ITSAR    Test using TSAR                              
         JZ    SETKEY06                                                         
         USING TSARD,R5                                                         
         L     R1,TSAREC                                                        
         LLC   RE,TSKEYL                                                        
         SHI   RE,1                                                             
         JM    DEATH153                                                         
         EX    RE,SKEYMV1N                                                      
         MVI   TSACTN,TSARDH                                                    
         GOTOR LP_ATSAR,TSARD                                                   
         TM    TSERRS,TSEEOF                                                    
         JNZ   DEATH154                                                         
         L     RF,TSAREC                                                        
         L     RE,SKSAVERE                                                      
         L     R1,SKSAVER1                                                      
         J     SETKEY10                                                         
         DROP  R5                                                               
                                                                                
SETKEY06 TM    LL_INDS,LL_IBUFF    Test using BUFFERIN                          
         JZ    DEATH155                                                         
         USING BUFFD,R5                                                         
         LH    R0,BUFFLREC                                                      
         CHI   R0,L'SKBREC                                                      
         JH    DEATH156                                                         
         MVC   SKBREC,NULLS                                                     
         GOTOR LP_ABFIN,SKPARA,('BUFFARDH',BUFFD),SKBREC,LP_ACOM                
         TM    BUFFERRS-BUFFPARM(R1),BUFFEEOF                                   
         JNZ   DEATH157                                                         
         LA    RF,SKBREC                                                        
         L     RE,SKSAVERE                                                      
         L     R1,SKSAVER1                                                      
         J     SETKEY10                                                         
         DROP  R5                                                               
                                                                                
SETKEY08 TM    SKINDS,LK_ILSTQ     Test table of values                         
         JZ    SETKEY10                                                         
         AHI   RF,L'LW_NUMN        Yes - bump over N'entries                    
                                                                                
SETKEY10 EX    R1,SKEYMVEN         Clear remainder of key                       
                                                                                
         CLI   SKINDS,LK_IALLQ     Test all range (X'0.0'-X'F.F')               
         JE    SETKEYNT                                                         
                                                                                
         IC    R1,LK_KLEN          R1=L'current key component                   
         CLI   SKINDS,LK_INZRQ     Test non-zero range (X'0.1'-X'F.F')          
         JNE   *+14                                                             
         AR    RE,R1                                                            
         MVI   0(RE),1             Yes - start at x'0...1'                      
         J     SETKEYNT                                                         
         EX    R1,SKEYMVEF         Move in first list entry/range start         
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEY12 TM    SKINDS,LK_ILITQ     Test literal value                           
         JZ    DEATH158                                                         
         EX    R1,SKEYMVEN         Clear remainder of key                       
         MVC   0(1,RE),LK_KLIT                                                  
         ICM   R1,1,LK_KLEN                                                     
         JZ    SETKEYNT            Next table entry                             
         BCTR  R1,0                                                             
         EX    R1,SKEYMVEE                                                      
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEY14 JE    SETKEY18                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         LLC   RE,LK_KDISP                                                      
         A     RE,SKPAKEY                                                       
         LLC   R1,LK_KLEN                                                       
         LA    RF,0(R1,RE)                                                      
         AHI   R1,1                                                             
         CLI   0(RF),FF                                                         
         JNE   SETKEY16                                                         
         MVI   0(RF),0                                                          
         BCTR  RF,0                                                             
         JCT   R1,*-14                                                          
         J     SETKEYPT                                                         
                                                                                
SETKEY16 IC    RE,0(RF)                                                         
         AHI   RE,1                                                             
         STC   RE,0(RF)                                                         
         MVI   SKFUNC,SKFSETLO     Set low values in remainder of key           
                                                                                
SETKEY18 LLC   RE,LK_KDISP                                                      
         A     RE,SKPAKEY                                                       
         LLC   R1,LK_KLEN                                                       
         LLH   RF,LK_BDISP                                                      
         A     RF,SKPABLK                                                       
         TM    SKINDS,LK_IWMPQ     Test data in work pool                       
         JZ    SETKEY20                                                         
         TM    SKINDS,LK_IXTNQ     Can't be an extension block                  
         JNZ   DEATH159                                                         
         MVI   SKADATA,0                                                        
         MVC   SKADATA+1(L'SKADATA-1),0(RF)                                     
         ICM   RF,15,SKADATA       Point to WMP entry                           
         JZ    SETKEYNT            Nothing there - assume 'all'                 
         USING LW_D,RF                                                          
         MVC   SKINDS,LW_TYPE      Yes - set indicator                          
         TM    SKINDS,LK_IXTNQ     Can't be an extension block                  
         JNZ   DEATH160                                                         
         LA    RF,LW_DATA1         RF=A(data) or A(N'entries)                   
         DROP  RF                                                               
                                                                                
SETKEY20 TM    SKINDS,LK_ILSTQ+LK_IRNGQ+LK_ISINQ+LK_IXTNQ                       
         JZ    SETKEY50                                                         
         SR    R0,R0                                                            
                                                                                
         TM    SKINDS,LK_IXTNQ     Test extension block present                 
         JZ    SETKEY24                                                         
                                                                                
         LR    R2,RF                                                            
         USING LL_D,R2             R2=A(key table extension block)              
         SR    RF,RF                                                            
         ICM   RF,7,LL_ADDR        RF=A(range/table/TSARD/BUFFD)                
         TM    LL_INDS,LL_IRNGQ                                                 
         JNZ   SETKEY42                                                         
                                                                                
         OI    SKINDS,LK_ILSTQ     Set this is a list of values                 
         TM    LL_INDS,LL_IWORK    Test if a w/s table                          
         JNZ   SETKEY24                                                         
         STM   RE,R1,SKSAVERE                                                   
         LR    R5,RF               R5=A(TSARD/BUFFD)                            
                                                                                
         TM    LL_INDS,LL_ITSAR    Test using TSAR                              
         JZ    SETKEY22                                                         
         USING TSARD,R5                                                         
         L     R1,TSAREC                                                        
         LLC   RF,TSKEYL                                                        
         SHI   RF,1                                                             
         JM    DEATH161                                                         
         EX    RF,SKEYMV1E                                                      
         MVI   TSACTN,TSARDH                                                    
         GOTOR LP_ATSAR,TSARD                                                   
         JE    SETKEYNT            Entry is in list - continue                  
         CLI   SKPACTN,SKPAFLT                                                  
         JE    SETKEYN             Not in list - exit if filtering              
         TM    TSERRS,TSEEOF                                                    
         JNZ   SETKEYPT            Back to previous key field if eof            
         L     RE,SKSAVERE                                                      
         L     RF,TSAREC                                                        
         L     R1,SKSAVER1                                                      
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     and low values for all subsequent            
         MVI   SKACTV,SKAYES                                                    
         J     SETKEYNT                                                         
         DROP  R5                                                               
                                                                                
SETKEY22 TM    LL_INDS,LL_IBUFF    Test using BUFFERIN                          
         JZ    DEATH162                                                         
         USING BUFFD,R5                                                         
         LH    R0,BUFFLREC                                                      
         CHI   R0,L'SKBREC                                                      
         JH    DEATH163                                                         
         LH    RF,BUFFLKEY                                                      
         SHI   RF,1                                                             
         JM    DEATH164                                                         
         EX    RF,SKEYMVRE         Set key for read                             
         GOTOR LP_ABFIN,SKPARA,('BUFFAGET',BUFFD),SKBREC,LP_ACOM                
         JE    SETKEYNT            Entry is in list - continue                  
         CLI   SKPACTN,SKPAFLT                                                  
         JE    SETKEYN             Not in list - exit if filtering              
         TM    BUFFERRS-BUFFPARM(R1),BUFFEEOF                                   
         JNZ   SETKEYPT            Back to previous key field if eof            
         L     RE,SKSAVERE                                                      
         LA    RF,SKBREC                                                        
         L     R1,SKSAVER1                                                      
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     and low values for all subsequent            
         MVI   SKACTV,SKAYES                                                    
         J     SETKEYNT                                                         
         DROP  R5                                                               
                                                                                
SETKEY24 TM    SKINDS,LK_ILSTQ     Test table                                   
         JZ    SETKEY34                                                         
         ICM   R0,3,0(RF)          Yes - get N'table entries                    
         JZ    SETKEYPT                                                         
         AHI   RF,2                Point to filter table                        
         LTR   R9,R9               Test A(LP_D) passed                          
         JZ    SETKEY26            No - always do sequential                    
         CHI   R0,MAXSEQ           Test too many items for sequential           
         JH    SETKEY32            search through the list                      
SETKEY26 EX    R1,SKEYCLEF         Match on filter - exit                       
         JE    SETKEYNT            Next table entry                             
         JH    SETKEY30                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     Set low values                               
         MVI   SKACTV,SKAYES       Set key changed                              
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEY30 LA    RF,1(RF,R1)         Next filter table entry                      
         JCT   R0,SETKEY26         Do key compare                               
         J     SETKEYPT            All entries inspected                        
                                                                                
SETKEY32 LR    R2,RE               R2=search argument                           
         LA    R4,1(R1)            R4=table width                               
         STM   RE,R1,SKSAVERE      Save work registers                          
         GOTOR LP_ABSRC,SKPARA,(R2),(RF),(R0),(R4)                              
         JNZ   SETKEY33            (argument higher than all entries)           
         CLI   SKPACTN,SKPAFLT                                                  
         JE    SETKEYN                                                          
         J     SETKEYPT                                                         
                                                                                
SETKEY33 TM    0(R1),X'80'         Test exact key match                         
         JZ    SETKEYNT            Yes - go to next key element                 
         CLI   SKPACTN,SKPAFLT     Test filtering                               
         JE    SETKEYN             Yes - reject this key                        
                                                                                
         L     RE,SKSAVERE         Point to key field                           
         SR    RF,RF                                                            
         ICM   RF,7,1(R1)          Point to table entry                         
         L     R1,SKSAVER1                                                      
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     and low values for all subsequent            
         MVI   SKACTV,SKAYES                                                    
         J     SETKEYNT                                                         
                                                                                
SETKEY34 TM    SKINDS,LK_IRNGQ     Test range                                   
         JZ    SETKEY44                                                         
                                                                                
         CLI   SKINDS,LK_IALLQ     Test all range (X'0.0'-X'F.F')               
         JE    SETKEYNT                                                         
                                                                                
         CLI   SKINDS,LK_INZRQ     Test non-zero range (X'0.1'-X'F.F')          
         JNE   SETKEY36                                                         
         EX    R1,SKEYCLEE         Test key component non-zero                  
         JNE   SETKEYNT                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         AR    RE,R1                                                            
         MVI   0(RE),1             Set start key to X'0.1'                      
         MVI   SKFUNC,SKFSETLO     and low values for all subsequent            
         MVI   SKACTV,SKAYES                                                    
         J     SETKEYNT                                                         
                                                                                
SETKEY36 EX    R1,SKEYCLEF         Match on filter - exit                       
         JH    SETKEY42            (greater than start of range)                
         JE    SETKEYNT            Next entry if equal                          
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     Set low values                               
         MVI   SKACTV,SKAYES       Set key changed                              
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEY42 LA    RF,1(RF,R1)         RF=A(range end value)                        
         EX    R1,SKEYCLEF         Match on filter - exit                       
         JNH   SETKEYNT            Next entry if in range                       
         J     SETKEYPT                                                         
                                                                                
SETKEY44 TM    SKINDS,LK_ISINQ                                                  
         JZ    DEATH165                                                         
                                                                                
         EX    R1,SKEYCLEF         Match on filter - exit                       
         JE    SETKEYNT                                                         
         JH    SETKEYPT                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         EX    R1,SKEYMVEF         Set next key value                           
         MVI   SKFUNC,SKFSETLO     Set low values                               
         MVI   SKACTV,SKAYES       Set key changed                              
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEY50 TM    SKINDS,LK_ILITQ                                                  
         JZ    DEATH166                                                         
         MVC   SKFILL(L'LK_KLIT),LK_KLIT                                        
         MVC   SKFILL+L'LK_KLIT(L'SKFILL-1),SKFILL                              
         LLC   R1,LK_KLEN                                                       
         EX    R1,SKEYCLFV         Test value                                   
         JH    SETKEYPT                                                         
         JE    SETKEYNT                                                         
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         EX    R1,SKEYMVFV         Set value                                    
         MVI   SKACTV,SKAYES       Set key changed                              
         MVI   SKFUNC,SKFSETLO     Set low values                               
         J     SETKEYNT            Next table entry                             
                                                                                
SETKEYPT CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYN                                                          
         MVI   SKFUNC,SKFSETNX     Set next key value                           
SETKEYP2 SHI   R3,LK_LNQ           Back up to previous entry                    
         C     R3,SKATAB                                                        
         JL    SETKEYN                                                          
         TM    LK_INDS,LK_ILITQ+LK_ISINQ                                        
         JZ    SETKEY02                                                         
         J     SETKEYP2                                                         
                                                                                
SETKEYNT CLI   LK_D+LK_LNQ,LK_EOTQ Test end of table is next                    
         JE    *+12                                                             
         AHI   R3,LK_LNQ           Bump to next entry                           
         J     SETKEY02                                                         
                                                                                
         CLI   SKPACTN,SKPAFLT     Test applying filters                        
         JE    SETKEYY                                                          
         CLI   SKACTV,SKANO        Test key changed                             
         JNE   SETKEYY                                                          
         L     RE,SKPAKEY                                                       
         AH    RE,SKKEYLN                                                       
         BCTR  RE,0                                                             
         CLI   0(RE),FF                                                         
         JNE   *+12                                                             
         MVI   0(RE),0                                                          
         JCT   RE,*-12                                                          
         IC    RF,0(RE)                                                         
         AHI   RF,1                                                             
         STC   RF,0(RE)                                                         
         J     SETKEYY                                                          
                                                                                
SETKEYN  MVI   SKFUNC,2                                                         
         J     SETKEYX                                                          
                                                                                
SETKEYY  MVI   SKFUNC,1                                                         
                                                                                
SETKEYX  CLI   SKFUNC,1            Set condition code for caller                
         J     EXIT                                                             
         DROP  R2,R3,R7                                                         
                                                                                
SKWORKD  DSECT ,                   ** SETKEY local w/s **                       
                                                                                
SKPARMS  DS    0A                  ** Parameter list **                         
SKPACTN  DS    X                   ** Action code **                            
SKPASET  EQU   0                   Set next key                                 
SKPAFLT  EQU   1                   Apply filter to key passed                   
SKPATAB  DS    AL3                 A(key driver table)                          
SKPAKEY  DS    A                   A(key)                                       
SKPABLK  DS    A                   A(user block)                                
SKPALPD  DS    A                   A(LP_D) (only if hob=X'FF')                  
SKPARML  EQU   *-SKPARMS                                                        
                                                                                
SKADATA  DS    A                   A(data entry)                                
SKATAB   DS    A                   A(key table)                                 
SKKEYLN  DS    H                   Key length                                   
SKINDS   DS    X                   Indicator byte                               
SKFUNC   DS    X                   ** Key function **                           
SKFSETLO EQU   0                   Set low value                                
SKFTSTKY EQU   1                   Test key component                           
SKFSETNX EQU   2                   Set next key value                           
SKACTV   DS    X                   ** Key change active **                      
SKANO    EQU   0                   No key changes                               
SKAYES   EQU   1                   Key changed                                  
SKFILL   DS    XL64                Literal value                                
SKSAVERE DS    A                                                                
SKSAVERF DS    A                                                                
SKSAVER0 DS    A                                                                
SKSAVER1 DS    A                                                                
SKPARA   DS    6F                                                               
SKBREC   DS    XL256                                                            
SKWORKL  EQU   *-SKWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Read self-defining values record                                    *         
*                                                                               
* Ntry:- R1 points to a parameter list as follows:-                             
*                                                                               
*        P1/B0   - spare                                                        
*          /B1-3 - A(LP_D)                                                      
*        P2/B0   - Record Seq Number                                            
*          /B1-3 - A(I/O area to use)                                           
*        P3/B0   - spare                                                        
*          /B1-3 - A(free-form key)                                             
*                                                                               
***********************************************************************         
                                                                                
GETSDR   NTR1  LABEL=*                                                          
         LR    R2,R1               R2=A(calling parameter list)                 
         L     R9,0(R2)            R9=A(LP_D)                                   
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         MVC   BYTE1,4(R2)         Record seq number                            
         L     R3,4(R2)            R3=A(I/O area to use)                        
         L     R4,8(R2)            R4=A(Free-form key)                          
                                                                                
         USING SDRRECD,R3                                                       
         MVC   SDRKEY,NULLS        Build key of values record                   
         MVI   SDRKMAJ,SDRKMAJQ                                                 
         MVI   SDRKMIN,SDRKMINQ                                                 
*                                                                               
         CLI   12(R2),C'V'         Caller wants their own values?               
         JNE   GETSDR03                                                         
         MVC   SDRKSYS,13(R2)      Caller provided system                       
         MVC   SDRKAPP,14(R2)                  and external program             
         J     GETSDR06                                                         
*                                                                               
GETSDR03 MVC   SDRKSYS,RSVRSYS1                                                 
         MVC   SDRKAPP,LPX.TXPNUM  Set application id                           
                                                                                
GETSDR06 CLI   BYTE1,0                                                          
         JE    *+10                                                             
         MVC   SDRKSEQ,BYTE1                                                    
                                                                                
         LTR   R4,R4               Test free-form key provided                  
         JZ    *+10                                                             
         MVC   SDRKKEY,0(R4)       Yes - set it                                 
                                                                                
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JNZ   GETSDR10                                                         
                                                                                
         L     R1,ASSB                                                          
         MVC   WORK(L'SSBSYSID),SSBSYSID-SSBD(R1)                               
         L     R1,SSBAFID-SSBD(R1)                                              
         J     GETSDR20                                                         
                                                                                
GETSDR10 L     R1,ARUNFACS         Locate FACIDTAB off-line                     
         L     R1,RFIDTAB-RUNFACSD(R1)                                          
         L     RF,AMASTD                                                        
         MVC   WORK(L'MCFACPAK),MCFACPAK-MASTD(RF)                              
                                                                                
         USING FACITABD,R1         Look-up FACPAK in ID table                   
GETSDR20 CLI   FACIID,FF           Test end of table                            
         JE    GETSDR30                                                         
         LA    RE,FACIID           Online                                       
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JZ    *+8                                                              
         LA    RE,FACISN1          Off-line                                     
         CLC   0(1,RE),WORK        Match FACPAK id                              
         JE    GETSDR30                                                         
         AHI   R1,FACITABL                                                      
         J     GETSDR20                                                         
GETSDR30 MVC   SDRKFFL,FACIFL      Extract key value                            
         DROP  R1                                                               
                                                                                
         MVC   WORK(L'SDRKEY),SDRKEY                                            
         GOTOR DMGR,DMCB,DMREAD,GENDIR,WORK,WORK                                
         JE    GETSDR40                                                         
         MVI   SDRKFFL,0           Not found - read default                     
         MVC   WORK(L'SDRKEY),SDRKEY                                            
         GOTOR (RF),(R1)                                                        
         JNE   GETSDRN                                                          
                                                                                
GETSDR40 MVC   FULL,WORK+(SDRKDA-SDRKEY)                                        
         GOTOR (RF),(R1),GETREC,GENFIL,FULL,SDRRECD,WORK                        
         MVI   0(R2),0             Set record found                             
         JE    EXITY                                                            
                                                                                
GETSDRN  MVI   0(R2),1             Set record not found                         
         MVC   SDRKEY(SDRRFRST+1-SDRKEY),NULLS                                  
         J     EXITY                                                            
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Dynamically build key driver lists in the work map pool (WMP)       *         
*                                                                     *         
* Ntry:- R1 points to a parameter list as follows:-                   *         
*                                                                     *         
*        P1/B0   - Length of data                                     *         
*           B1-3 - A(Data to be added to list)                        *         
*        P2      - A(Data index)                                      *         
*        P3      - Maximum number of entries in list                  *         
*        P4      - A(LP_D)                                            *         
*                                                                     *         
* Ensure that the index pointer is initialized to binary zeroes       *         
* before the first call - the next available space will be allocated  *         
* on the first call from the work map pool and the pool pointer       *         
* updated - this routine will die if the work map pool or table       *         
* overflows.  Only non-zero entries are added to the driver table.    *         
***********************************************************************         
                                                                                
ADDWMP   NTR1  LABEL=*,WORK=(R5,AWWORKL)                                        
         USING AWWORKD,R5          R5=A(local working storage)                  
         LM    R2,R4,0(R1)         R2=A(value), R3=A(data index)                
         LLC   R6,0(R1)            R4=max entries, R6=data length               
         L     R9,12(R1)           R9=A(LP_D)                                   
         L     RC,LP_AWORK         RC=A(WORKD)                                  
         LARL  RA,GLOBALS          RA=A(GLOBALS)                                
         SR    R7,R7                                                            
         ICM   R7,7,1(R3)          R7=A(WMP entry)                              
         JNZ   ADDWMP02                                                         
                                                                                
         L     R7,LP_AWMP          Add WMP entry if first time                  
         STCM  R7,15,0(R3)                                                      
         USING LW_D,R7                                                          
         LR    R0,R4                                                            
         LR    R1,R6                                                            
         MR    R0,R0                                                            
         AHI   R1,LW_LN2Q          R1=space required in WMP                     
         LA    R1,LW_D(R1)                                                      
         ST    R1,LP_AWMP          Set new end of WMP                           
         C     R1,LP_AWMPX                                                      
         JH    DEATH167                                                         
         MVI   LW_TYPE,LW_TLSTQ    Set this is a list                           
                                                                                
ADDWMP02 BCTR  R6,0                R6=L'entry-1                                 
         EX    R6,AWMPCL2N                                                      
         JE    EXIT                Ignore if data is binary zeroes              
                                                                                
         LA    RF,LW_DATA2         Point to start of list                       
         SR    R0,R0                                                            
         ICM   R0,3,LW_NUMN        Get number of entries                        
         JZ    ADDWMP08            Empty - add first one                        
                                                                                
ADDWMP04 EX    R6,AWMPCL2F         Find insertion point in list                 
         JE    EXIT                Ignore if entry already exists               
         JL    ADDWMP06            Found insertion point                        
         LA    RF,1(R6,RF)         Bump to next list entry                      
         JCT   R0,ADDWMP04         Do for number of entries                     
         J     ADDWMP08            Add to end of list                           
                                                                                
ADDWMP06 ST    RF,AWSAVERF         Save insertion point                         
         LA    R1,1(R6)                                                         
         MR    R0,R0               R1=length of list after insertion            
         ST    R1,AWSAVER1         Save length of remainder                     
         LA    R0,12(RD)                                                        
         LR    RE,RF                                                            
         LR    RF,R1                                                            
         MVCL  R0,RE               Save data after entry point                  
         L     RF,AWSAVERF                                                      
         LA    RF,1(R6,RF)         Create space for new entry                   
         LR    R0,RF                                                            
         L     R1,AWSAVER1                                                      
         LA    RE,12(RD)                                                        
         LR    RF,R1                                                            
         MVCL  R0,RE               Restore data after entry point               
         L     RF,AWSAVERF                                                      
                                                                                
ADDWMP08 LLH   R0,LW_NUMN          Update list entry count                      
         AHI   R0,1                                                             
         CR    R0,R4                                                            
         JH    DEATH168                                                         
         STCM  R0,3,LW_NUMN                                                     
         EX    R6,AWMPMVF2         Insert new entry into list                   
         J     EXITY                                                            
         DROP  R5,R7                                                            
                                                                                
AWWORKD  DSECT ,                   ** ADDWMP local w/s **                       
AWSAVER1 DS    A                                                                
AWSAVERF DS    A                                                                
AWWORKL  EQU   *-AWWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Construct an output data record and add it to the worker file or    *         
* send the data to FALINK for downloading if running on-line (now)    *         
*                                                                     *         
* Ntry:- R1=A(LP_D)                                                   *         
***********************************************************************         
                                                                                
OUTPUT   NTR1  LABEL=*,WORK=(R7,OPWORKL)                                        
         USING OPWORKD,R7          R7=A(local w/s)                              
         LR    R9,R1                                                            
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         ICM   RF,15,LP_ARUNP                                                   
         JZ    DEATH169                                                         
                                                                                
         LA    R0,FPVALUES         Clear put values                             
         LHI   R1,FPVALUEL                                                      
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JZ    OUTPUT02                                                         
         TM    INDQDDLK,INDSDDLK   Test DDLINK hosted server                    
         JNZ   OUTPUT02                                                         
         L     RF,SVASAVE          Point to server save area                    
         USING SS_D,RF                                                          
         MVC   SS_BLKS,LP_BLKS     and update block addresses                   
         DROP  RF                                                               
                                                                                
OUTPUT02 L     R6,AWRKBLK          Initialize output record pointer             
         L     R6,WRKIAREC-WRKIOD(R6)                                           
         GOTOR SETWRKX             Set A(end of work record)                    
         AHI   R6,4                                                             
         MVI   0(R6),0             Set end of record                            
                                                                                
         TM    INDQFOUT,INDSFOUT   Test first time call                         
         JNZ   OUTPUT12                                                         
         OI    INDQFOUT,INDSFOUT   Reset first time call                        
                                                                                
         CLC   LP_QMAPN,M#CTRLDL   Test control download                        
         JE    OUTPUT03                                                         
         CLC   LP_MQQUE,NULLS      Test replying with an MQ message             
         JNE   OUTPUT03                                                         
         CLC   LP_MQSVR,NULLS      or sending to an external service            
         JE    OUTPUT12                                                         
                                                                                
OUTPUT03 OI    INDQCTRL,INDSCTRL   Set sending control records                  
                                                                                
         TM    INDSFILE,INDSOFIL   Test we are sending a file                   
         JZ    OUTPUT04                                                         
         GOTOR BLDDSN              Yes - build DSN text and open file           
                                                                                
OUTPUT04 LARL  R2,CTRLTAB          Point to control record table                
         USING LB_D,R2             R2=A(control table header)                   
                                                                                
OUTPUT05 TM    LB_HINDS,LB_HIBEF   Test send before data                        
         JZ    OUTPUT10                                                         
                                                                                
         MVC   FPTHISEL,LB_HCODE   Set record map number                        
         LA    R3,LB_DVALS                                                      
D        USING LB_DVALS,R3         R3=A(control data entry)                     
                                                                                
OUTPUT06 CLC   D.LB_DCODE,NULLS    Test end of this record                      
         JE    OUTPUT10                                                         
         CLC   D.LB_DCODE,FPTHISDT Only send data once                          
         JE    OUTPUT08                                                         
         GOTOR LP_AEOUT,DMCB,(D.LB_DOTYP,0),(D.LB_DBLK#,D.LB_DBDSP),   +        
               (D.LB_DLEN,WORK),0,0                                             
         JZ    OUTPUT08                                                         
         MVI   FPFLDIND,0                                                       
         GOTOR LP_AFPUT,D.LB_DCODE Add data to output record                    
                                                                                
OUTPUT08 AHI   R3,LB_DLNQ          Bump to next control data entry              
         J     OUTPUT06                                                         
                                                                                
OUTPUT10 LLH   R1,LB_HLINK         Point to next control record                 
         LA    R2,LB_HLINK(R1)                                                  
         CLC   LB_HCODE,NULLS      Test end of control record table             
         JNE   OUTPUT05                                                         
         DROP  R2,D                                                             
                                                                                
         NI    INDQCTRL,FF-INDSCTRL                                             
         OI    LP_OFLAG,LP_OFMQD   Set force MQ flag on                         
         GOTOR LP_ARECP,RPLNKQ     Put (last) control record                    
         NI    LP_OFLAG,FF-LP_OFMQD Turn off force MQ flag                      
         CLC   LP_QMAPN,M#CTRLDL   Test control 1 download                      
         JE    OUTPUTX             Yes - all done                               
                                                                                
OUTPUT12 TM    INDQORTN,INDSORTN   Test LP_AOMAP is A(routine)                  
         JNZ   OUTPUT30                                                         
         L     R2,LP_AOMAP                                                      
         USING LH_D,R2             R2=A(map header)                             
         LLH   R0,LH_LN                                                         
         AR    R0,R2                                                            
         ST    R0,OPMAPX           Set A(end of output map)                     
         AHI   R2,LH_LNQ                                                        
         USING LE_D,R2             R2=A(element header)                         
                                                                                
OUTPUT14 CLC   LE_VRSN,NULLS       Test version stamped                         
         JE    OUTPUT16                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    OUTPUT16                                                         
         CLC   LP_VRSN,LE_VRSN     Yes - test against PC version                
         JNL   OUTPUT16                                                         
         LLH   R0,LE_LN            Low - bump to next element                   
         AR    R2,R0                                                            
         J     OUTPUT26                                                         
                                                                                
OUTPUT16 MVC   FPTHISEL,LE_CODE    Set current element code                     
         LLH   R0,LE_LN                                                         
         AR    R0,R2                                                            
         ST    R0,OPELEMX          Set A(end of current element)                
         AHI   R2,LE_LNQ           Advance to first data definition             
         USING LO_D,R2                                                          
                                                                                
OUTPUT18 CLC   LO_VRSN,NULLS       Test version stamped                         
         JE    OUTPUT19                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    OUTPUT19                                                         
         CLC   LP_VRSN,LO_VRSN     Yes - test against PC version                
         JL    OUTPUT24                                                         
                                                                                
OUTPUT19 TM    LO_INDS2,LO_IFADR   Test column filter routine set               
         JZ    OUTPUT20                                                         
         CLI   LO_IDF,LO_IDFRQ     Must have id field redefined                 
         JNE   DEATH170                                                         
         CLC   LO_FADDR,NULLS      Test filter routine is set                   
         JE    DEATH171                                                         
         GOTOR LP_AGSVR,LO_FADDR   Call server column filter routine            
         JNE   OUTPUT24                                                         
                                                                                
OUTPUT20 TM    LO_INDS1,LO_IARRQ   Test this is an array                        
         JZ    OUTPUT22                                                         
         TM    LO_INDS3,LO_ISETQ   Test want new element code                   
         JZ    *+10                                                             
         MVC   FPTHISEL,LO_CODE    Yes - set it                                 
         GOTOR LP_AARYP,DMCB,LO_ADDR,0                                          
         JE    OUTPUT24                                                         
         J     OUTPUT28            Exit with not equal terminates               
                                                                                
OUTPUT22 GOTOR LP_AEOUT,DMCB,(LO_TYPE,0),(LO_INDS1,LO_ADDR),           +        
               (LO_DLEN,WORK),(LO_INDS3,LO_ENDX),LO_ID                          
         JZ    OUTPUT24                                                         
         MVC   FPFLDIND,LO_INDS3   Set output field indicators                  
         GOTOR LP_AFPUT,LO_CODE    Add data to output record                    
                                                                                
OUTPUT24 AHI   R2,LO_LNQ           Bump to next output definition               
                                                                                
         C     R2,OPELEMX          Test at end of current element               
         JL    OUTPUT18            No - go do next data                         
         JNE   DEATH172                                                         
                                                                                
OUTPUT26 C     R2,OPMAPX           Test at end of map                           
         JL    OUTPUT14            No - go do next element                      
         JE    OUTPUT28                                                         
         J     DEATH173                                                         
                                                                                
OUTPUT28 GOTOR LP_ARECP,RPLNKQ     Put record if any data in it                 
         J     OUTPUTX                                                          
                                                                                
OUTPUT30 GOTOR LP_AOMAP            Call output routine                          
                                                                                
OUTPUTX  J     EXIT                                                             
         DROP  R2                                                               
                                                                                
OPWORKD  DSECT ,                   ** OUTPUT local w/s **                       
OPMAPX   DS    A                   A(end of server output map)                  
OPELEMX  DS    A                   A(end of server element)                     
OPWORKL  EQU   *-OPWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Routine to handle data arrays                                       *         
*                                                                     *         
* Ntry:- R1=A(Displacement of array definition)                       *         
*        RF=A(Parent row or zero)                                     *         
*                                                                     *         
* Note:- This routine can be called recursively from the PUTARY       *         
*        routine to process nested arrays                             *         
***********************************************************************         
                                                                                
ARYPUT   NTR1  LABEL=*,WORK=(R7,APWORKL)                                        
         USING APWORKD,R7          R7=A(local w/s)                              
         LR    R2,R1               R2=A(parameter list)                         
         L     R1,0(R2)            R1=A(disp. to array header                   
         SR    R3,R3                                                            
         ICM   R3,3,0(R1)          R3=disp. to array header                     
         JZ    DEATH174                                                         
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    *+8                                                              
         SLL   R3,1                                                             
         A     R3,LP_ASVR                                                       
         USING LX_D,R3             R3=A(array header)                           
         L     R2,4(R2)                                                         
PARENT   USING APWORKD,R2          R2=A(parent row APWORKD)                     
                                                                                
         CLC   LX_VRSN,NULLS       Test version stamped                         
         JE    *+10                                                             
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    *+14                                                             
         CLC   LP_VRSN,LX_VRSN     Yes - test against PC version                
         JL    EXITR6              Low - exit                                   
                                                                                
         TM    LX_INDS2,LX_IFTRQ   Test filter routine                          
         JZ    ARYPUT02                                                         
         CLC   LX_IFILT,NULLS      Test for row filter                          
         JE    ARYPUT02                                                         
         GOTOR LP_AGSVR,LX_FADDR   Call server filter routine                   
         JNE   EXITR6              CC=not equal - discard this array            
                                                                                
ARYPUT02 LA    R0,APWORKD          Clear working storage                        
         LHI   R1,APWORKL                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         TM    LX_INDS3,LX_IXTNQ   Test extended array header                   
         JZ    ARYPUT06                                                         
         TM    LX_INDS4,LX_IUPRQ   Test use parent array row                    
         JZ    ARYPUT06                                                         
         LTR   R2,R2               Test there is a parent row                   
         JNZ   ARYPUT03                                                         
         L     R1,LP_ADATA         No - point to user record                    
         LHI   R0,4*ONEK                                                        
         J     ARYPUT04                                                         
                                                                                
ARYPUT03 ICM   R1,15,PARENT.APAROW R1=A(parent row)                             
         JZ    DEATH175                                                         
         LLH   R0,PARENT.APROWL    R0=L'parent row                              
                                                                                
ARYPUT04 AR    R0,R1                                                            
         ST    R0,APAROWN          Set A(next row) to compare against           
         J     ARYPUT08            if variable number of columns                
                                                                                
ARYPUT06 TM    LX_INDS1,LX_IBLKQ   Test block number provided                   
         JNZ   *+12                                                             
         TM    LX_INDS1,LX_IADDQ                                                
         JZ    ARYPUT10                                                         
                                                                                
         MVC   APBYTE,LX_INDS1                                                  
         NI    APBYTE,LX_IBLKQ                                                  
         SR    R1,R1                                                            
         ICM   R1,1,APBYTE                                                      
         JZ    DEATH176                                                         
         MHI   R1,L'LP_BLKS                                                     
         L     R1,LP_BLKS-L'LP_BLKS(R1)                                         
                                                                                
ARYPUT08 LLH   RF,LX_ADDR                                                       
         AR    R1,RF               R1=A(data)                                   
         TM    LX_INDS1,LX_IADDQ   Test passing A(A(data))                      
         JZ    *+8                                                              
         ICM   R1,15,0(R1)         Yes - take pointer                           
         LTR   R1,R1                                                            
         JZ    DEATH177                                                         
         ST    R1,APAARY                                                        
         J     ARYPUT16                                                         
                                                                                
ARYPUT10 TM    LX_INDS1,LX_IRTNQ   Test user build routine                      
         JZ    DEATH178                                                         
         CLC   LX_ADDR,NULLS       Test row build defined                       
         JE    DEATH179                                                         
         MVI   LP_RMODE,LP_RFRST   Set first for array process                  
         TM    LX_INDS1,LX_IRBRQ   Test build row by row                        
         JZ    ARYPUT14                                                         
                                                                                
ARYPUT12 MVC   LP_ADATA,FZERO                                                   
         GOTOR LP_AGSVR,LX_ADDR    Call server to build row                     
         JNE   EXITR6              Return not equal - all done                  
         CLI   LP_RMODE,LP_RERRR   Test server error                            
         JE    ARYPUTER                                                         
         CLI   LP_RMODE,LP_RQUIT   Test request to exit row                     
         JE    ARYPUT18                                                         
         CLI   LP_RMODE,LP_RLAST   Test server has no (more) data               
         JE    EXITR6                                                           
         CLC   LP_ADATA,FZERO      Test server provided a row address           
         JE    DEATH180                                                         
         MVC   APAARY,LP_ADATA     Set A(array)                                 
         MVC   APROWCOL,NULLS      Clear row/column                             
         GOTOR LP_APARY            Put the array                                
         GOTOR LP_ARECP,RPLNKQ     Put output record                            
         MVI   LP_RMODE,LP_RNEXT   Set to do next row next time                 
         J     ARYPUT12            Get next input record (row)                  
                                                                                
ARYPUT14 MVC   LP_ADATA,FZERO                                                   
         GOTOR LP_AGSVR,LX_ADDR    Call server to build array                   
         CLI   LP_RMODE,LP_RERRR   Test server error                            
         JE    ARYPUTER                                                         
         CLI   LP_RMODE,LP_RLAST   Test server has no data                      
         JE    EXITR6                                                           
         CLC   LP_ADATA,FZERO      Test server provided a row address           
         JE    DEATH181                                                         
         MVC   APAARY,LP_ADATA     Set A(array)                                 
         MVC   APROWCOL,NULLS                                                   
         MVC   APSVMODE,LP_RMODE   Save mode                                    
         GOTOR LP_APARY                                                         
         MVC   LP_RMODE,APSVMODE   Restore mode                                 
         CLI   LP_RMODE,LP_RMORE   Test wants to be called again                
         JE    ARYPUT14                                                         
         CR    RE,RE               Set CC=equal                                 
         J     EXITR6                                                           
                                                                                
ARYPUT16 GOTOR LP_APARY            Put the array                                
         CR    RE,RE               Set CC=equal                                 
         J     EXITR6                                                           
                                                                                
ARYPUT18 L     RD,4(RD)            quit row request - double exit               
         LM    RE,RC,12(RD)                                                     
         LTR   RE,RE                                                            
         J     EXITR6                                                           
                                                                                
ARYPUTER L     RD,UNWINDRD         Server returned error condition              
         LM    RE,RC,12(RD)        Return to RUN                                
         LTR   RE,RE               with condition code of not equal             
         BR    RE                                                               
                                                                                
APWORKD  DSECT ,                   ** ARYPUT local w/s **                       
APAARY   DS    A                   A(array)                                     
APAROW   DS    A                   A(current row in array)                      
APAROWN  DS    A                   A(next row) (if parent row)                  
APACOL   DS    A                   A(current LX_COLS entry)                     
APROWL   DS    H                   L'current row                                
APROWCOL DS    0XL6                Current row/column                           
APROW#   DS    H                   Current row number                           
APROWREL DS    H                   Relative (filtered) row number               
APCOL#   DS    H                   Current column number                        
APBYTE   DS    X                   Work byte                                    
APSVMODE DS    XL(L'LP_RMODE)      Saved LP_CMODE value                         
APWORK   DS    XL256               Work area                                    
APSVVALS DS    XL(FPVALUEL)        Saved put values                             
APSVDISP DS    AL2                 Saved displacement to element                
APSVRLEN DS    AL2                 Saved record length                          
APWORKL  EQU   *-APWORKD                                                        
APSVRECD DS    0XL1000             Saved record area                            
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Put an array - note this routine recursively calls the ARYPUT       *         
* routine to process nested arrays                                    *         
***********************************************************************         
                                                                                
PUTARY   NTR1  LABEL=*                                                          
PUTARY02 TM    LX_INDS2,LX_ICOLQ   Test output by column                        
         JNZ   PUTARY06                                                         
         L     RE,APAARY           RE=A(start of array)                         
         LHI   RF,1                RF=first row                                 
         SR    R1,R1                                                            
         ICM   R1,3,APCOL#         Bump to next column for row                  
         LA    R0,1(R1)            R0=column+1                                  
         JNZ   *+12                First time through                           
         ST    RE,APAROW           Set A(row)                                   
         J     PUTARY10                                                         
         L     RE,APAROW           RE=A(current row)                            
         SR    RF,RF                                                            
         ICM   RF,3,APROW#         RF=row number                                
         TM    LX_INDS3,LX_I2NCQ   Test 2 byte column count                     
         JZ    *+12                                                             
         CLM   R0,3,LX_WROW        Yes - LX_WROW has column count               
         J     *+8                                                              
         CLM   R0,1,LX_NCOLS       No - LX_NCOLS has column count               
         JNH   PUTARY04                                                         
         TM    LX_INDS3,LX_INERQ   Test new record for each row                 
         JZ    PUTARY03                                                         
         GOTOR LP_ARECP,RPLNKQ     Yes - put record now                         
PUTARY03 MVC   APCOL#,NULLS        Reset column number                          
         J     PUTARY06                                                         
                                                                                
PUTARY04 STH   R0,APCOL#           Set next column number                       
         J     PUTARY28                                                         
                                                                                
PUTARY06 TM    LX_INDS1,LX_IRBRQ   Test row by row build                        
         JNZ   PUTARYX             Need next row                                
                                                                                
PUTARY08 CLC   APCOL#,NULLS        Initialize column if first time              
         JNE   *+8                                                              
         MVI   APCOL#+L'APCOL#-1,1                                              
         LLH   RF,APROW#                                                        
         AHI   RF,1                Bump row number                              
         L     RE,APAARY           RE=A(array)                                  
         CLC   APROW#,NULLS        Test first time                              
         JNE   *+12                                                             
         ST    RE,APAROW           Yes - set A(first row)                       
         J     PUTARY10                                                         
         GOTOR ROWLEN              Get length of current row                    
         L     RE,APAROW                                                        
         AH    RE,APROWL           Point to next row                            
         ST    RE,APAROW                                                        
                                                                                
PUTARY10 TM    LX_INDS1,LX_IRBRQ   Test row by row build                        
         JNZ   PUTARY20            Yes - skip end of table tests                
         TM    LX_INDS2,LX_IEOTQ   Test for end of table character              
         JZ    PUTARY12                                                         
         LLC   R1,LX_EDSP                                                       
         AR    R1,RE               R1=A(table terminator)                       
         CLC   LX_EOTC,0(R1)       Test this is the end                         
         JE    PUTARY18                                                         
         J     PUTARY22                                                         
                                                                                
PUTARY12 TM    LX_INDS2,LX_IRADR   Test address N'rows                          
         JZ    PUTARY14                                                         
         MVC   APBYTE,LX_INDS3                                                  
         NI    APBYTE,LX_IRBLQ                                                  
         LLC   R1,APBYTE                                                        
         CHI   R1,LP_BLKSN                                                      
         JH    DEATH182                                                         
         MHI   R1,L'LP_BLKS                                                     
         LA    R1,LP_BLKS-L'LP_BLKS(R1)                                         
         ICM   R1,15,0(R1)                                                      
         JZ    DEATH183                                                         
         LLH   R0,LX_NROWS         R0=displacement to N'rows                    
         AR    R1,R0               R1=A(N'rows)                                 
         CLM   RF,3,0(R1)          Test all rows processed                      
         JNH   PUTARY22            No                                           
         J     PUTARY18            Yes                                          
                                                                                
PUTARY14 TM    LX_INDS2,LX_IRVAR   Test variable number of rows                 
         JZ    PUTARY16                                                         
         CLC   APAROW,APAROWN      Test parent row exhausted                    
         JL    PUTARY22            No                                           
         J     PUTARY18            Yes                                          
                                                                                
PUTARY16 CLM   RF,3,LX_NROWS       Test all rows processed                      
         JNH   PUTARY22            No                                           
                                                                                
PUTARY18 TM    LX_INDS2,LX_ICOLQ   Test output by column                        
         JZ    PUTARY64                                                         
                                                                                
PUTARY20 LH    R0,APCOL#           Bump to next column                          
         AHI   R0,1                                                             
         TM    LX_INDS3,LX_I2NCQ   Test 2 byte column count                     
         JZ    *+12                                                             
         CLM   R0,3,LX_WROW        Yes - LX_WROW has coulumn count              
         J     *+8                                                              
         CLM   R0,1,LX_NCOLS       No - LX_NCOLS has column count               
         JH    PUTARY64            Exit if all columns processed                
         TM    LX_INDS3,LX_I2NCQ                                                
         JNZ   *+12                                                             
         CHI   R0,256                                                           
         JE    PUTARY64                                                         
         STH   R0,APCOL#           Set next column number                       
         TM    LX_INDS1,LX_IRBRQ   Test row by row build                        
         JNZ   PUTARY28                                                         
         MVC   APROW#,NULLS        Go back to start of array                    
         J     PUTARY06                                                         
                                                                                
PUTARY22 STCM  RF,3,APROW#         Set current row number                       
         CLC   LX_IFILT,NULLS      Test for primary row filter                  
         JE    PUTARY26                                                         
         TM    LX_INDS2,LX_IFTRQ   Test filter routine                          
         JZ    PUTARY24                                                         
         CLC   LX_FADDR,NULLS                                                   
         JE    DEATH184                                                         
         ST    RE,LP_AINP          Set LP_AINP to A(row)                        
         STM   RE,R1,SAVERE                                                     
         GOTOR LP_AGSVR,LX_FADDR   Call server filter routine                   
         LM    RE,R1,SAVERE                                                     
         JNE   PUTARY08            CC=not equal - discard this row              
         J     PUTARY26            Else keep                                    
                                                                                
PUTARY24 LLC   R1,LX_IFDSP         Apply one byte character filter              
         AR    R1,RE                                                            
         CLC   LX_IFCHR,0(R1)      Match value to table                         
         JNE   PUTARY08                                                         
         TM    LX_INDS2,LX_IXIFQ   Test send once                               
         JZ    PUTARY26                                                         
         XI    0(R1),FF            Yes - invert value                           
                                                                                
PUTARY26 DS    0H                                                               
*&&DO                                                                           
PUTARY26 LH    RF,APROWREL         NOTE: Instructions moved to SETMAP           
         AHI   RF,1                                                             
         STH   RF,APROWREL                                                      
*&&                                                                             
PUTARY28 SR    R4,R4                                                            
         ICM   R4,3,APCOL#         Set next column number                       
         JNZ   *+12                                                             
         LHI   R4,1                                                             
         STH   R4,APCOL#                                                        
         BCTR  R4,0                                                             
         MHI   R4,LX_COLSL                                                      
         LA    R4,LX_FIRST(R4)                                                  
         TM    LX_INDS3,LX_IXTNQ   Test extension present                       
         JZ    *+8                                                              
         AHI   R4,LX_XTNDL         Yes - add on extension length                
         ST    R4,APACOL           Set A(column entry)                          
         USING LX_COLS,R4                                                       
         GOTOR ROWLEN              Set length of current row                    
                                                                                
         CLC   LX_CFILT,NULLS      Test any column filters                      
         JE    PUTARY34                                                         
         TM    LX_CIND2,LX_CFTRQ   Test filter is a routine                     
         JNZ   PUTARY30                                                         
         LLC   RE,LX_CFDSP                                                      
         CLC   APROWL,NULLS                                                     
         JE    *+12                                                             
         CH    RE,APROWL           Test inside row                              
         JH    PUTARY02                                                         
         A     RE,APAROW                                                        
         CLC   LX_CFCHR,0(RE)                                                   
         JE    PUTARY34                                                         
         J     PUTARY32                                                         
                                                                                
PUTARY30 MVC   LP_AINP,APAROW      Pass row as A(input)                         
         CLC   LX_CFADR,NULLS                                                   
         JE    DEATH185                                                         
         GOTOR LP_AGSVR,LX_CFADR   Call server column filter routine            
         JE    PUTARY34                                                         
                                                                                
PUTARY32 CLI   LX_IDF,LX_IDFRQ     Test id field redefined                      
         JNE   PUTARY02                                                         
         LH    RF,APCOL#           RF=current column number                     
         LLC   RE,LX_CSCOL                                                      
         AR    RF,RE               Add on extra columns to skip                 
         STH   RF,APCOL#                                                        
         J     PUTARY02            Get next column/row                          
                                                                                
PUTARY34 TM    LX_INDS3,LX_IXTNQ   Test extended array header                   
         JZ    PUTARY40                                                         
                                                                                
         TM    LX_INDS4,LX_ISRFQ   Test set row filter from this row            
         JZ    PUTARY36                                                         
         STM   RE,R1,SAVERE                                                     
         LLC   R1,LX_DFILT                                                      
         CH    R1,APROWL           Filter must be within row                    
         JH    DEATH186                                                         
         SR    RF,RF                                                            
         ICM   RF,1,LX_LFILT       Filter length must be specified              
         JZ    DEATH187                                                         
         CHI   RF,L'LP_RFVAL       and not longer than filter value             
         JH    DEATH188                                                         
         STC   RF,LP_RFLEN         Set row filter length                        
         AR    RF,R1                                                            
         CH    RF,APROWL                                                        
         JH    DEATH189                                                         
         SR    RF,R1                                                            
         BCTR  RF,0                                                             
         A     R1,APAROW                                                        
         MVC   LP_RFVAL,0(R1)      Set row filter value                         
         LM    RE,R1,SAVERE                                                     
         J     PUTARY40                                                         
                                                                                
PUTARY36 TM    LX_INDS4,LX_ITRFQ   Test test secondary row filter               
         JZ    PUTARY40                                                         
         STM   RE,R1,SAVERE                                                     
         LLC   RF,LX_DFILT                                                      
         SR    R1,R1                                                            
         ICM   R1,1,LX_LFILT       R1=row filter length to test                 
         JZ    DEATH190                                                         
         CLM   R1,1,LP_RFLEN       Can't be longer than filter value            
         JH    DEATH191                                                         
         AR    RF,R1                                                            
         CH    RF,APROWL           Test filter within this row                  
         JH    PUTARY38                                                         
         SR    RF,R1                                                            
         SHI   R1,1                                                             
         A     RF,APAROW           RF=row filter in current row                 
         EX    R1,PARYCLPF                                                      
PUTARY38 LM    RE,R1,SAVERE                                                     
         JE    PUTARY40                                                         
         MVC   APCOL#,NULLS        Reset column number                          
         J     PUTARY08                                                         
                                                                                
PUTARY40 L     R4,APACOL           Process a column                             
         CLC   LX_CVRSN,NULLS      Test version stamped                         
         JE    PUTARY41                                                         
         CLC   LP_VRSN,NULLS       Yes - test we have PC version                
         JE    PUTARY41                                                         
         CLC   LP_VRSN,LX_CVRSN    Yes - test against PC version                
         JL    PUTARY02            Low - bump to next column                    
                                                                                
PUTARY41 TM    LX_CIND2,LX_CIARR   Test column points to array                  
         JZ    PUTARY52                                                         
         LLH   RE,LX_CADDR                                                      
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    *+8                                                              
         SLL   RE,1                                                             
         A     RE,LP_ASVR          Test row-by-row array                        
         TM    LX_INDS3-LX_D(RE),LX_INEAQ                                       
         JNZ   *+12                                                             
         TM    LX_INDS1-LX_D(RE),LX_IRBRQ                                       
         JZ    PUTARY48                                                         
         GOTOR LP_ARECP,RPLNKQ     Put output record if new element             
                                                                                
         LA    R0,APSVVALS         Yes - save current put values                
         LHI   R1,L'APSVVALS                                                    
         LA    RE,FPVALUES                                                      
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         LA    R0,FPVALUES         Clear put values                             
         LHI   R1,FPVALUEL                                                      
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         GOTOR SETMAP,LX_COLS                                                   
         MVC   FPTHISEL,SETMAP#    Set element code from array                  
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   PUTARY42                                                         
         TM    LP_RUNI1,LP_RNOWQ   Test running now                             
         JZ    PUTARY42                                                         
         GOTOR LP_AARYP,DMCB,LX_CADDR,APWORKD                                   
         J     PUTARY46            Restore saved values                         
                                                                                
         USING LQ_D,R6                                                          
PUTARY42 L     RE,AWRKBLK          Off-line - save current record too           
         L     RE,WRKIAREC-WRKIOD(RE)                                           
         LR    RF,R6                                                            
         SR    RF,RE                                                            
         CHI   RF,L'APSVRECD       Test too much to save                        
         JH    DEATH192                                                         
         CHI   RF,4                Test anything to save                        
         JH    *+6                                                              
         SR    RF,RF                                                            
         STCM  RF,3,APSVDISP       Save disp. to current data in record         
         JZ    PUTARY44                                                         
                                                                                
         LR    RF,R6                                                            
         LLH   R0,LQ_LN-LQ_D(RF)                                                
         AR    RF,R0                                                            
         AHI   RF,1                                                             
         SR    RF,RE                                                            
         STCM  RF,3,APSVRLEN       Save total length of record                  
         LA    R0,7(RF)                                                         
         SRL   R0,3                                                             
         SLL   R0,3                R0=save length modulo 8                      
                                                                                
         L     RE,4(RD)            Create storage for saved record              
         AR    RD,R0               Add modulo length to RD                      
         LR    RF,RE                                                            
         AR    RF,R0                                                            
         MVC   0(76,RF),0(RE)      Copy my registers                            
         ST    RF,4(RD)                                                         
         ST    RD,8(RF)                                                         
         L     RE,4(RF)                                                         
         ST    RF,8(RE)                                                         
                                                                                
         LA    R0,APSVRECD         Save record in acquired storage              
         LLH   R1,APSVRLEN                                                      
         L     RE,AWRKBLK                                                       
         L     RE,WRKIAREC-WRKIOD(RE)                                           
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
                                                                                
PUTARY44 L     R6,AWRKBLK          Point to start of new record                 
         L     R6,WRKIAREC-WRKIOD(R6)                                           
         AHI   R6,4                                                             
         MVC   0(8,R6),NULLS                                                    
         GOTOR LP_AARYP,DMCB,LX_CADDR,APWORKD                                   
         MVC   0(8,R6),NULLS                                                    
         CLC   APSVDISP,NULLS      Test save area acquired                      
         JE    PUTARY46                                                         
         LA    R0,APSVRECD         Restore saved record                         
         LLH   R1,APSVRLEN                                                      
         L     RE,AWRKBLK                                                       
         L     RE,WRKIAREC-WRKIOD(RE)                                           
         LLH   R6,APSVDISP                                                      
         AR    R6,RE               Restore R6 to where it was                   
         LR    RF,R1                                                            
         MVCL  RE,R0                                                            
                                                                                
PUTARY46 LA    R0,APSVVALS         Restore saved put values                     
         LHI   R1,L'APSVVALS                                                    
         LA    RE,FPVALUES                                                      
         LR    RF,R1                                                            
         MVCL  RE,R0                                                            
         J     PUTARY02            Go to next column                            
                                                                                
PUTARY48 LLH   R0,FPTHISEL         Save current element code                    
         TM    LX_INDS1-LX_D(RE),LX_INELQ                                       
         JZ    PUTARY50                                                         
         GOTOR LP_ARECP,RPLNKQ                                                  
         GOTOR SETMAP,LX_COLS                                                   
         MVC   FPTHISEL,SETMAP#    Set new element code if required             
                                                                                
PUTARY50 GOTOR LP_AARYP,DMCB,LX_CADDR,APWORKD                                   
         STCM  R0,3,FPTHISEL       Restore last element code                    
         J     PUTARY02            Go to next column                            
                                                                                
PUTARY52 TM    LX_CIND1,LX_CIBLK                                                
         JZ    PUTARY54                                                         
         LLC   RF,LX_CTYPE                                                      
         TM    LX_CIND1,LX_CIRTN                                                
         JZ    *+6                                                              
         SR    RF,RF                                                            
         GOTOR LP_AEOUT,DMCB,((RF),0),(LX_CIND1,LX_CDDSP),             +        
               (LX_CDLEN,WORK),(LX_CIND3,LX_CADDR),LX_ID                        
         JZ    PUTARY02            No data - get next column                    
         J     PUTARY62                                                         
                                                                                
PUTARY54 LLH   RF,LX_CDDSP         RF=displacement to data in row               
         CLC   APROWL,NULLS        Zero means infinite length                   
         JE    PUTARY56                                                         
         LLC   RE,LX_CDLEN                                                      
         AR    RE,RF               Add length to displacement                   
         CLM   RE,3,APROWL         Test against row length                      
         JH    PUTARY02                                                         
                                                                                
PUTARY56 L     R0,APAROW                                                        
         AR    R0,RF               R0=A(data in row)                            
         LLH   RE,APROWL                                                        
         SR    RE,RF                                                            
         TM    LX_CIND1,LX_CIVAR   Test variable length data                    
         JZ    PUTARY60                                                         
         LTR   RE,RE               Test zero length data                        
         JZ    PUTARY02                                                         
         SR    RF,RF                                                            
         ICM   RF,1,LX_CDLEN       RF=maximum L'data                            
         JNZ   *+6                                                              
         LR    RF,RE               Use actual length if no maximum              
         CR    RE,RF               Test actual L'data against maximum           
         JNH   *+6                                                              
         LR    RE,RF               Use maximum if greater                       
         BCTR  RE,0                RE=actual length-1                           
         BCTR  RF,0                RF=maximum length-1                          
         CR    RE,RF               Test actual length=maximum length            
         JE    PUTARY58                                                         
         MVI   APWORK,SPACEQ       No - pad input with spaces or zeroes         
         CLI   LX_CTYPE,LD_CHARQ                                                
         JE    *+8                                                              
         CLI   LX_CTYPE,LD_OCHRQ                                                
         JE    *+8                                                              
         MVI   APWORK,0                                                         
         SHI   RF,1                                                             
         JM    PUTARY58                                                         
         EX    RF,PARYMVWW                                                      
                                                                                
PUTARY58 LR    RF,R0                                                            
         EX    RE,PARYMVWF         Move data to start of APWORK                 
         LA    R0,1(RE)                                                         
         CLI   LX_CDLEN,0                                                       
         JE    *+8                                                              
         IC    R0,LX_CDLEN                                                      
         SR    RF,RF                                                            
         IC    RF,LX_CTYPE                                                      
         TM    LX_CIND1,LX_CIRTN                                                
         JZ    *+6                                                              
         SR    RF,RF                                                            
         GOTOR LP_AEOUT,DMCB,((RF),APWORK),0,((R0),WORK),              +        
               (LX_CIND3,LX_CADDR),LX_ID                                        
         JZ    PUTARY02                                                         
         J     PUTARY62                                                         
                                                                                
PUTARY60 SR    RF,RF               Data is fixed length in row                  
         ICM   RF,1,LX_CDLEN                                                    
         JZ    DEATH193                                                         
         TM    LX_CIND1,LX_CIRTN                                                
         JZ    *+8                                                              
         LHI   RF,1                Set data length=1 for edit routine           
         CLC   APROWL,NULLS        Test row length given                        
         JE    *+10                                                             
         CR    RF,RE               Test if all the data in the row              
         JH    PUTARY02            No - don't process this column               
                                                                                
         LLC   RF,LX_CTYPE                                                      
         TM    LX_CIND1,LX_CIRTN                                                
         JZ    *+8                                                              
         LHI   RF,LD_USERQ                                                      
         GOTOR LP_AEOUT,DMCB,((RF),(R0)),0,(LX_CDLEN,WORK),            +        
               (LX_CIND3,LX_CADDR),LX_ID                                        
         JZ    PUTARY02                                                         
                                                                                
PUTARY62 MVC   FPFLDIND,LX_CIND3   Set output field indicators                  
         GOTOR SETMAP,LX_COLS                                                   
         GOTOR LP_AFPUT,SETMAP#    Put data                                     
         J     PUTARY02            Go back for next column                      
         DROP  R4                                                               
                                                                                
PUTARY64 TM    LX_INDS3,LX_INEAQ   Test new record for array                    
         JZ    PUTARYX                                                          
         GOTOR LP_ARECP,RPLNKQ     Yes - put record now                         
                                                                                
PUTARYX  J     EXITR6                                                           
         EJECT                                                                  
***********************************************************************         
* Routine to set width of current row                                 *         
***********************************************************************         
                                                                                
ROWLEN   MVC   APROWL,LX_WROW                                                   
         TM    LX_INDS2,LX_IDW1Q+LX_IDW2Q                                       
         BZR   RE                                                               
         STM   RE,R1,12(RD)                                                     
         LLH   R1,LX_WROW                                                       
         A     R1,APAROW                                                        
         LLC   R0,0(R1)                                                         
         TM    LX_INDS2,LX_IDW1Q                                                
         JNZ   *+8                                                              
         ICM   R0,3,0(R1)                                                       
         LTR   R0,R0               Test for row width of zero                   
         JZ    DEATH194                                                         
         STH   R0,APROWL                                                        
         LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
                                                                                
***********************************************************************         
* Set map number from LX_CODE optionally modified by value at disp.   *         
* LC_CMMOD into row (of 1 or 2 bytes in length) or using relative     *         
* (filtered) row number - map number is returned in SETMAP#           *         
***********************************************************************         
                                                                                
         USING LX_COLS,R1                                                       
SETMAP   TM    INDOSDEL,INDSSDEL   Test edited self-defining element            
         JZ    *+12                                                             
         MVC   SETMAP#,FPTHISDT                                                 
         BR    RE                                                               
                                                                                
         LH    RF,APROWREL         NOTE: Instructions moved to SETMAP           
         AHI   RF,1                                                             
         STH   RF,APROWREL                                                      
*                                                                               
         MVC   SETMAP#,LX_CODE                                                  
         CLI   LX_IDF,LX_IDFRQ     Test id field redefined                      
         BNER  RE                                                               
         TM    LX_CIND4,LX_CMM1Q+LX_CMM2Q                                       
         BZR   RE                                                               
         STM   RE,RF,12(RD)                                                     
         JNO   *+12                                                             
         LH    RE,APROWREL         If both flags on use relative row            
         J     SETMAP02                                                         
                                                                                
         LLH   RF,LX_CMMOD         RF=disp. to modifier in row                  
         A     RF,APAROW                                                        
         LLC   RE,0(RF)            RE=1 byte modifier value                     
         TM    LX_CIND4,LX_CMM2Q                                                
         JZ    SETMAP02                                                         
         LLH   RE,0(RF)            RE=2 byte modifier value                     
                                                                                
SETMAP02 LLH   RF,SETMAP#                                                       
         AR    RF,RE               Add modifier to base value                   
         STCM  RF,3,SETMAP#                                                     
         LM    RE,RF,12(RD)                                                     
         BR    RE                                                               
         DROP  R1,R3,R7                                                         
         EJECT                                                                  
***********************************************************************         
* Put record to worker file                                           *         
*                                                                     *         
* This routine is normally called internally but may be called by     *         
* LINKIO when running off-line in which case R1 points to LP_D (else  *         
* R1 is zero)                                                         *         
***********************************************************************         
                                                                                
RPLNKQ   EQU   0                   Called from DDLINK internally                
RPLIOQ   EQU   1                   Called from LINKIO externally                
RPENDQ   EQU   2                   Called from DDLINK for last time             
                                                                                
RECP     NTR1  LABEL=*                                                          
         CHI   R1,RPLNKQ           Test put call from DDLINK                    
         JE    RECP0010            Yes                                          
         CHI   R1,RPENDQ           Test end call from DDLINK                    
         JE    RECP0010            Yes                                          
         MVI   RPCALL,RPLIOQ       Set called from LINKIO                       
         LR    R9,R1               Establish addressability                     
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R6,AWRKBLK                                                       
         L     R6,WRKIAREC-WRKIOD(R6)                                           
         AHI   R6,4                                                             
         USING LQ_D,R6                                                          
         SR    R0,R0                                                            
RECP0002 CLI   0(R6),0             Locate end of worker record                  
         JE    RECP0060                                                         
         ICM   R0,3,LQ_LN                                                       
         AR    R6,R0                                                            
         J     RECP0002                                                         
                                                                                
RECP0010 STC   R1,RPCALL           Set calling mode                             
         CLI   RPCALL,RPENDQ       Test DDLINK end call                         
         JE    RECP0040                                                         
         GOTOR LP_AFPUT,0          Flush any saved data                         
                                                                                
RECP0040 TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   RECP0050                                                         
         TM    LP_RUNI1,LP_RNOWQ+LP_RUPLQ                                       
         JNZ   RECPUTX                                                          
                                                                                
RECP0050 CLI   RPCALL,RPENDQ       Test DDLINK end call                         
         JE    RECP0100                                                         
                                                                                
         CLI   LQ_EL,0             Off-line - test at end of record             
         JE    *+12                                                             
         SR    R0,R0               No - advance to end                          
         ICM   R0,3,LQ_LN                                                       
         AR    R6,R0                                                            
         MVI   0(R6),0                                                          
                                                                                
RECP0060 LA    RE,1(R6)                                                         
         L     R1,AWRKBLK                                                       
         L     R1,WRKIAREC-WRKIOD(R1)                                           
         SR    RE,R1               RE=L'record                                  
         CHI   RE,5                                                             
         JNH   RECPUTX             Don't put nothing                            
         LR    R0,RE               Save N'bytes this record                     
         SLL   RE,16                                                            
         STCM  RE,15,0(R1)         Set L'output record                          
                                                                                
         CLC   LP_MQQUE,NULLS      Test MQ output                               
         JNE   RECP0100                                                         
         CLC   LP_MQSVR,NULLS      Test sending to external service             
         JNE   RECP0100                                                         
         TM    LP_FLAG2,LP_FFALT   Test FALINK test string input                
         JNZ   RECP0100                                                         
                                                                                
         L     R1,AWRKBLK          Put record to worker file                    
         MVI   WRKIACTN-WRKIOD(R1),WRKIAADD                                     
         GOTOR WRKIO,(R1)                                                       
         JNE   DEATH195                                                         
                                                                                
         L     RE,ARUNFACS                                                      
         USING RUNFACSD,RE                                                      
         L     RF,RWRKADD          Bump total records output                    
         AHI   RF,1                                                             
         ST    RF,RWRKADD                                                       
         CLC   LP_QRECS,FZERO      Test maximum records set for request         
         JE    RECP0062                                                         
         CLC   RWRKADD,LP_QRECS    Test record count exceeded                   
         JNH   RECP0062                                                         
         LA    R0,LP_QEREC         Set record count error                       
         J     RECPN                                                            
                                                                                
RECP0062 L     RF,RWRKSIZ          Bump output file size                        
         AR    RF,R0                                                            
         ST    RF,RWRKSIZ                                                       
         CLC   LP_QSIZE,FZERO      Test maximum size set for request            
         JE    RECP0064                                                         
         CLC   RWRKSIZ,LP_QSIZE    Test size exceeded                           
         JNH   RECP0064                                                         
         LA    R0,LP_QESIZ         Set file size error                          
         J     RECPN                                                            
                                                                                
RECP0064 TM    RSVRIND1,RSVRSEGS   Test segmented files allowed                 
         JZ    RECPUTX                                                          
                                                                                
         L     RF,SEGRECS          Bump segment records                         
         AHI   RF,1                                                             
         ST    RF,SEGRECS                                                       
         L     R1,AWRKBLK                                                       
         L     R1,WRKIAREC-WRKIOD(R1)                                           
         LLH   RF,0(R1)            and segment size                             
         A     RF,SEGSIZE                                                       
         ST    RF,SEGSIZE                                                       
                                                                                
         CLC   RSEGRECS,FZERO      Test maximum segment records set             
         JE    *+14                                                             
         CLC   SEGRECS,RSEGRECS                                                 
         JNL   RECP0070                                                         
         CLC   RSEGSIZE,FZERO      Test maximum segment size set                
         JE    RECPUTX                                                          
         CLC   SEGSIZE,RSEGSIZE                                                 
         JNH   RECPUTX                                                          
         DROP  RE                                                               
                                                                                
RECP0070 L     RE,ARUNFACS                                                      
         USING RUNFACSD,RE                                                      
         L     RF,RFILSEG                                                       
         AHI   RF,1                                                             
         CLC   LP_QSEGS,FZERO      Test request max segs set                    
         JE    RECP0072                                                         
         CLM   RF,15,LP_QSEGS                                                   
         JNH   RECP0074                                                         
         LA    R0,LP_QESEG         Set request segment exceeded error           
         J     RECPN                                                            
                                                                                
RECP0072 SR    R0,R0                                                            
         ICM   R0,3,RMAXSEGS       Get maximum number of segments               
         JNZ   *+8                                                              
         LHI   R0,32               Default to 32 if no maximum set              
         CR    RF,R0               Test too many segments                       
         JH    DEATH204                                                         
         DROP  RE                                                               
                                                                                
RECP0074 MVC   SEGVALS(SEGVALL),NULLS                                           
         L     R2,AWRKBLK1         R2=A(current work file block)                
         L     R3,AWRKBLK2         R3=A(unused work file block)                 
         C     R2,AWRKBLK                                                       
         JE    *+12                                                             
         L     R2,AWRKBLK2                                                      
         L     R3,AWRKBLK1                                                      
OLD      USING WRKIOD,R2                                                        
NEW      USING WRKIOD,R3                                                        
         MVC   NEW.WRKINDX,NULLS                                                
         MVC   NEW.WRKWKEY(WRKWSEQN-WRKWKEY),OLD.WRKWKEY                        
         MVC   NEW.WRKIFTYP,RSVRFTYP                                            
         MVI   NEW.WRKIACTN,WRKIANEW                                            
         MVC   NEW.WRKLRETH,RETSERVE                                            
         TM    INDQBTCH,INDSBTCH   Test running off-line batch mode             
         JZ    *+10                                                             
         MVC   NEW.WRKLRETH,RETBATCH                                            
         GOTOR WRKIO,NEW.WRKIOD    Open a new file segment                      
         JNE   RECPUTX             Error - continue with existing file          
                                                                                
         MVI   OLD.WRKIACTN,WRKIACLO                                            
         GOTOR WRKIO,OLD.WRKIOD                                                 
         JNE   DEATH196                                                         
         MVI   OLD.WRKIACTN,WRKIAOPN                                            
         GOTOR WRKIO,OLD.WRKIOD                                                 
         JNE   DEATH197                                                         
         L     R6,OLD.WRKIAREC     Read record#1 in current segment             
         LHI   R0,1                                                             
         STCM  R0,15,0(R6)                                                      
         MVC   4(4,R6),REC#                                                     
         MVC   8(4,R6),NULLS                                                    
         GOTOR DMGR,OLD.WRKIPARM,WRR                                            
         JNE   DEATH198                                                         
                                                                                
         GOTOR UPDREQ,(R6)         Update request values                        
                                                                                
         AHI   R6,4                Set forward segment pointer                  
         SR    R0,R0                                                            
RECP0080 CLI   LQ_EL,0             Test end of record                           
         JE    DEATH199                                                         
         CLI   LQ_EL,LQ_FSEGQ                                                   
         JE    *+14                                                             
         ICM   R0,3,LQ_LN                                                       
         AR    R6,R0                                                            
         J     RECP0080                                                         
         MVC   LQ_FNEXT,NEW.WRKWKEY                                             
                                                                                
         MVI   OLD.WRKIACTN,WRKIAPUT                                            
         GOTOR WRKIO,OLD.WRKIOD    Put record back & set file status            
         JNE   DEATH200                                                         
         GOTOR DMGR,OLD.WRKIPARM,WSK                                            
         JNE   DEATH201                                                         
                                                                                
         L     R0,NEW.WRKIAREC                                                  
         L     RE,OLD.WRKIAREC                                                  
         LLH   R1,0(RE)                                                         
         LR    RF,R1                                                            
         MVCL  R0,RE               Copy record 1 to new file                    
                                                                                
         L     R6,NEW.WRKIAREC                                                  
         GOTOR SETWRKX                                                          
         AHI   R6,4                                                             
         SR    R0,R0                                                            
RECP0090 CLI   LQ_EL,0             Test end of record                           
         JE    DEATH202                                                         
         CLI   LQ_EL,LQ_FSEGQ                                                   
         JE    *+14                                                             
         ICM   R0,3,LQ_LN                                                       
         AR    R6,R0                                                            
         J     RECP0090                                                         
         MVC   LQ_FPREV,OLD.WRKWKEY                                             
         MVC   LQ_FNEXT,NULLS                                                   
         GOTOR WRKIO,NEW.WRKIOD                                                 
         JNE   DEATH203                                                         
         ST    R3,AWRKBLK          Set current file block to new one            
                                                                                
         L     RE,ARUNFACS                                                      
         USING RUNFACSD,RE                                                      
         ST    R3,RWRKBLK          Tell RUNNER which block is in use            
         L     RF,RFILSEG          Bump total segments added                    
         AHI   RF,1                                                             
         ST    RF,RFILSEG                                                       
                                                                                
         CLI   LP_FAVER,VERSION5   Test asynchronous download support           
         JL    RECPUTX                                                          
         GOTOR UPDQUE,PROCPEND     Change status processing to pending          
         J     RECPUTX                                                          
         DROP  OLD,NEW,RE                                                       
                                                                                
RECP0100 LHI   RF,2                                                             
         CLI   RPCALL,RPENDQ       Test last time call                          
         JE    RECP0110                                                         
         GOTOR LP_ABMQD            No - build FALINK string                     
         LHI   RF,1                                                             
         TM    INDSFILE,INDSOFIL   Test sending output to file                  
         JZ    RECP0110            No                                           
         TM    LP_OFLAG,LP_OFFMQ+LP_OFMQD Test forcing to MQ                    
         JNZ   RECP0110            Yes                                          
         L     R2,MQDATAA          Point to FALINK string                       
         SHI   R2,4                Back up to record length                     
         LLH   R0,MQDATAL          R0=length of FALINK string                   
         AHI   R0,4                Add on length of length field                
         STCM  R0,3,0(R2)          Set variable record length                   
         LA    R1,EDIOUT                                                        
         PUT   (1),(2)             Put record to output file                    
         J     RECPUTX                                                          
                                                                                
RECP0110 LLH   R0,MQDATAL          R0=length of FALINK string                   
         GOTOR MQI,DMCB,((RF),MQDATAA),(R0)                                     
         CLI   RPCALL,RPENDQ       Test last time call                          
         JNE   RECPUTX                                                          
         TM    INDSFILE,INDSOFIL   Test sending output to file                  
         JZ    RECPUTX             No                                           
         GOTOR CLOOUT              Close output file too                        
                                                                                
RECPUTX  MVC   FPPREVEL,NULLS                                                   
         MVC   FPPREVDT,NULLS                                                   
         L     R6,AWRKBLK                                                       
         L     R6,WRKIAREC-WRKIOD(R6)                                           
         AHI   R6,4                                                             
         MVC   0(4,R6),NULLS                                                    
         CLI   RPCALL,RPLNKQ       Preserve R6 if called from DDLINK            
         JE    EXITR6                                                           
         J     EXITY               Else restore all registers                   
                                                                                
RECPN    STC   R0,LP_QERR          Set DDLINK request error & exit              
         L     RD,UNWINDRD         back to RUNR                                 
         LM    RE,RC,12(RD)                                                     
         BR    RE                                                               
         DROP  R6                                                               
                                                                                
***********************************************************************         
* Set address of end of WKFILE record - slack is given at the end of  *         
* the record because the FLDPUT routine adds data to the record       *         
* before testing whether the data fits into it - the record will be   *         
* written by FLDPUT when the slack area is encroached                 *         
*                                                                     *         
* Ntry:- R6 is the address of the WKFILE record                       *         
* Exit:- AWRKRECX points to start of slack area                       *         
***********************************************************************         
                                                                                
SETWRKX  CLC   LP_RECL,NULLS       Test WKFILE record size provided             
         JE    *+12                                                             
         LH    R0,LP_RECL          Yes - use it                                 
         J     SETWRKX2                                                         
         LHI   R0,14*ONEK          Allow maximum 14K record off-line            
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JNZ   SETWRKX2                                                         
         LHI   R0,6*ONEK           Allow maximum 6K on-line                     
SETWRKX2 SHI   R0,300              Allow for slack at end of record             
         AR    R0,R6                                                            
         ST    R0,AWRKRECX         Set end of record address                    
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Build MQ data string from worker file record                        *         
***********************************************************************         
                                                                                
BLDMQD   NTR1  LABEL=*                                                          
         SAM31 ,                                                                
         L     R3,AWRKBLK                                                       
         L     R4,AWRKBLK2                                                      
         C     R3,AWRKBLK1                                                      
         JE    *+8                                                              
         L     R4,AWRKBLK1         Use second worker record as output           
         L     R4,WRKIAREC-WRKIOD(R4)                                           
         AHI   R4,4                Leave 4 bytes for output length              
         ST    R4,MQDATAA          Set A(output data string)                    
         L     R3,WRKIAREC-WRKIOD(R3)                                           
         AHI   R3,4                Point to first data element                  
         USING LQ_D,R3                                                          
                                                                                
BLDMQD02 CLI   LQ_EL,0             Test end of data record                      
         JE    BLDMQD24                                                         
         CLI   LQ_EL,LQ_RAWDQ      Test raw download data element               
         JE    BLDMQD04                                                         
         CLI   LQ_EL,LQ_DLDDQ      Test download data element                   
         JNE   BLDMQD22                                                         
         CLC   LQ_LN,LQ#LNCQ       Test pointing to record header               
         JNE   BLDMQD06                                                         
         MVI   0(R4),C'D'          Build D=xxxx or B=xx                         
         MVI   1(R4),C'='                                                       
         GOTOR HEXOUT,DMCB,LQ_DCODE,2(R4),L'LQ_DCODE,0,XA=OFF                   
         CLC   2(2,R4),EZEROS      Test one/two byte record map code            
         JE    *+12                                                             
         AHI   R4,6                                                             
         J     BLDMQD22                                                         
         MVI   0(R4),C'B'                                                       
         MVC   2(2,R4),4(R4)                                                    
         AHI   R4,4                                                             
         J     BLDMQD22                                                         
                                                                                
BLDMQD04 MVC   BYTE2,LQ_DTYPE      Set data type                                
         LLH   R0,LQ_LN                                                         
         SHI   R0,LQ_LNDQ          Get input data length                        
         JNP   BLDMQD08                                                         
         GOTOR LP_AEOUT,DMCB,(LQ_DTYPE,LQ_DDATA),0,((R0),WORK2),0,0,   +        
               XA=OFF                                                           
         MVC   BYTE2,LP_OTYPE      Set data type                                
         CLI   LP_OTYPE,LP_OTHDO   Test sending map code only                   
         JE    BLDMQD08                                                         
         MVC   BYTE1,LP_OLEN+(L'LP_OLEN-L'BYTE1)                                
         LA    R0,WORK2            Point to edited data                         
         J     BLDMQD10                                                         
                                                                                
BLDMQD06 CLI   LQ_DTYPE,LP_OTHDO   Test sending map code only                   
         JE    BLDMQD08                                                         
         MVC   BYTE2,LQ_DTYPE      Set data type                                
         LLH   R0,LQ_LN                                                         
         SHI   R0,LQ_LNDQ          Get output data length                       
         JNP   BLDMQD08                                                         
         STC   R0,BYTE1                                                         
         LA    R0,LQ_DDATA         Point to pre-edited data                     
         J     BLDMQD10                                                         
                                                                                
BLDMQD08 MVI   BYTE1,0             data length zero for map code only           
         MVI   BYTE2,LP_OTHDO      Set output type for map code only            
                                                                                
BLDMQD10 LLC   RF,BYTE1            RF=data length                               
                                                                                
BLDMQD12 CHI   RF,LCHARL           Test length less than 63                     
         JL    BLDMQD14                                                         
         MVI   0(R4),LCHAR                                                      
         AHI   R4,1                                                             
         SHI   RF,LCHARL                                                        
         J     BLDMQD12                                                         
                                                                                
BLDMQD14 LA    RF,FATRTAB(RF)                                                   
         MVC   0(1,R4),0(RF)                                                    
         AHI   R4,1                                                             
                                                                                
         LLH   RF,LQ_DCODE         Move data map code to buffer                 
         CHI   RF,XBASIS           Test use extended map coding                 
         JL    BLDMQD16                                                         
         MVI   0(R4),XCHAR                                                      
         AHI   R4,1                                                             
         SHI   RF,XBASIS                                                        
         SR    RE,RE                                                            
*wrong*  LHI   R1,LCHARL-1                                                      
         LHI   R1,LCHARL           63 not 62 !!!                                
         DR    RE,R1                                                            
         CHI   RF,LCHARL-1                                                      
         JH    DEATH205                                                         
         LA    RF,FATRTAB(RF)                                                   
         MVC   0(1,R4),0(RF)                                                    
         AHI   R4,1                                                             
         LA    RE,FATRTAB(RE)                                                   
         MVC   0(1,R4),0(RE)                                                    
         AHI   R4,1                                                             
         J     BLDMQD20                                                         
                                                                                
BLDMQD16 CHI   RF,LCHARL           Normal map coding                            
         JL    BLDMQD18                                                         
         MVI   0(R4),LCHAR                                                      
         AHI   R4,1                                                             
         SHI   RF,LCHARL                                                        
         J     BLDMQD16                                                         
                                                                                
BLDMQD18 LA    RF,FATRTAB(RF)                                                   
         MVC   0(1,R4),0(RF)                                                    
         AHI   R4,1                                                             
                                                                                
BLDMQD20 TM    LP_FLAG2,LP_FDAUQ   Test download as upload set                  
         JNZ   *+14                                                             
         MVC   0(1,R4),BYTE2       Move data type to buffer                     
         AHI   R4,1                                                             
                                                                                
         CLI   BYTE1,LP_OTHDO      Test map code only                           
         JE    BLDMQD22                                                         
                                                                                
         LLC   R1,BYTE1            Move data to buffer                          
         LR    R5,R1                                                            
         MVCL  R4,R0                                                            
                                                                                
BLDMQD22 LLH   R0,LQ_LN            Bump to next element on record               
         AR    R3,R0                                                            
         J     BLDMQD02                                                         
                                                                                
BLDMQD24 S     R4,MQDATAA                                                       
         STH   R4,MQDATAL          Set output string length                     
         SAM24 ,                                                                
         J     EXIT                                                             
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Put output to FALINK or worker file                                 *         
*                                                                     *         
* Ntry:- FPTHISEL is element code                                     *         
*        R1=Zero to flush saved data (on-line only), else points to   *         
*           data code, data value at LP_AOUT, length at LP_OLEN       *         
***********************************************************************         
                                                                                
FLDPUT   NTR1  LABEL=*                                                          
         MVI   BYTE1,0             BYTE=zero for flush call                     
         LTR   R1,R1                                                            
         JZ    *+14                                                             
         MVI   BYTE1,1             Set not flush call                           
         MVC   FPTHISDT,0(R1)      Set data code                                
                                                                                
         TM    LP_FLAG1,LP_FOFFL   Test running off-line                        
         JNZ   FLDPUT02                                                         
         TM    LP_RUNI1,LP_RUPLQ+LP_RNOWQ                                       
         JNZ   FLDPUT14                                                         
                                                                                
FLDPUT02 CLI   BYTE1,0             Exit on flush call                           
         JE    FLDPUTX                                                          
         TM    LP_OTYPE,X'40'      Test run on exit type                        
         JZ    FLDPUT04                                                         
         TM    INDQROEP,INDSROEP   Test run on exit put in progress             
         JNZ   FLDPUT04                                                         
         CLC   FPPREVEL,NULLS      Test first time                              
         JE    FLDPUT04                                                         
         CLC   FPPREVEL,FPTHISEL   Test change of element                       
         JE    FLDPUT08                                                         
                                                                                
         USING LQ_D,R6             Output header element                        
FLDPUT04 CLI   LQ_EL,0             Test pointing to end of record               
         JE    FLDPUT06                                                         
         LLH   R0,LQ_LN                                                         
         GOTOR UPDPTR              Update record pointer                        
                                                                                
FLDPUT06 TM    LP_OTYPE,X'40'      Test run on exit type                        
         JZ    FLDPUT34            Yes - go to special handling                 
         TM    INDQROEP,INDSROEP   Test run on exit put in progress             
         JNZ   FLDPUT34                                                         
                                                                                
         MVI   LQ_EL,LQ_DLDDQ                                                   
         MVC   LQ_LN,LQ#LNCQ                                                    
         MVC   LQ_DCODE,FPTHISEL                                                
         AH    R6,LQ#LNCQ                                                       
         MVC   LQ_D(LQ_LNCQ),NULLS                                              
         MVC   FPPREVEL,FPTHISEL   Save element code                            
                                                                                
FLDPUT08 TM    FPFLDIND,LO_ISTRQ+LO_OSTRQ                                       
         JZ    FLDPUT10            No                                           
         CLC   LQ_DCODE,FPTHISDT   Test change of data code                     
         JNE   FLDPUT10                                                         
         MVI   LQ_DTYPE,LP_OTCHR   Set type for multiple field (string)         
         LLH   R1,LQ_LN                                                         
         LA    R1,LQ_D(R1)                                                      
         BCTR  R1,0                                                             
         CLI   0(R1),SPACEQ        Insert delimiter                             
         JNE   *+8                                                              
         JCT   R1,*-8                                                           
         AHI   R1,1                                                             
         MVI   0(R1),ODELIMQ                                                    
         TM    FPFLDIND,LO_OSTRQ   Test override output delimiter               
         JZ    *+10                                                             
         MVC   0(1,R1),LP_ODELM    Yes - use it                                 
         AHI   R1,1                                                             
         J     FLDPUT12            and add data to end of element               
                                                                                
FLDPUT10 LLH   R0,LQ_LN            Else advance to next element                 
         GOTOR UPDPTR              Update record pointer                        
         MVI   LQ_EL,LQ_DLDDQ                                                   
         MVC   LQ_DCODE,FPTHISDT                                                
         MVC   LQ_DTYPE,LP_OTYPE                                                
         LA    R1,LQ_DDATA                                                      
                                                                                
FLDPUT12 LM    RE,RF,LP_OLEN                                                    
         BCTR  RE,0                                                             
         EX    RE,FPUTMV1F         Move data to element                         
         LA    R1,1(RE,R1)                                                      
         MVI   0(R1),0             Set end of record                            
         SR    R1,R6                                                            
         STCM  R1,3,LQ_LN          Set new element length                       
         J     FLDPUTX                                                          
         DROP  R6                                                               
                                                                                
FLDPUT14 CLI   BYTE1,0             Test flush call                              
         JNE   FLDPUT16                                                         
         CLC   FPPREVDT,NULLS      Yes - test any saved data                    
         JNE   FLDPUT18            Yes - go put                                 
         CLC   FPTHISEL,NULLS                                                   
         JE    FLDPUTX                                                          
         TM    LP_RUNI2,LP_RASRQ   Test always send a response                  
         JZ    FLDPUTX                                                          
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),FPTHISEL                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
         MVC   FPTHISEL,NULLS                                                   
         J     FLDPUTX                                                          
                                                                                
FLDPUT16 CLC   FPPREVEL,NULLS      Test first time                              
         JE    FLDPUT28                                                         
         CLC   FPPREVEL,FPTHISEL   Test change of element                       
         JNE   FLDPUT18                                                         
         TM    FPFLDIND,LO_ISTRQ+LO_OSTRQ                                       
         JZ    FLDPUT18                                                         
         CLC   FPPREVDT,FPTHISDT   Test change of data                          
         JE    FLDPUT30                                                         
                                                                                
FLDPUT18 CLC   FPSAVEEL,NULLS      Test have element saved                      
         JE    FLDPUT20            No                                           
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),FPSAVEEL                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
         MVC   FPSAVEEL,NULLS      Clear after send                             
                                                                                
FLDPUT20 CLC   FPPREVDT,NULLS      Test any saved data to send                  
         JE    FLDPUT26                                                         
         TM    FPFLDIND,LO_ISTRQ+LO_OSTRQ                                       
         JZ    FLDPUT22                                                         
         CLI   BYTE1,0             Test flush call                              
         JE    FLDPUT22                                                         
         CLC   FPPREVDT,FPTHISDT   No - test change of data                     
         JE    FLDPUT30                                                         
                                                                                
FLDPUT22 L     RF,LP_AFBLK         Set type embedded/no compression             
         OI    FALAINDS-FALINKD(RF),FALAINDD+FALAINDC                           
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),FPPREVDT                         
         MVC   WORK2+(LF_DLEN-LF_D)(L'LF_DLEN),FPSAVELN                         
         MVI   WORK2+(LF_TYPE-LF_D),MDTUQQ                                      
         LLH   R0,FPPREVDT                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  WORK2+(LF_TEXT-LF_D)(L'LF_TEXT),DUB                              
         TM    INDQXCOD,INDSXCOD   Test want hex codes returned                 
         JZ    FLDPUT24                                                         
         MVI   WORK2+(LF_TEXT-LF_D),HEXQ                                        
         GOTOR HEXOUT,DMCB,FPPREVDT,WORK2+(LF_TEXT+1-LF_D),L'LF_CODE,0          
                                                                                
FLDPUT24 GOTOR ADDDATA,DMCB,LP_AFBLK,WORK2,FPSAVEST,0                           
         TM    INDQFBRK,INDSFBRK   Test break on full set                       
         JZ    FLDPUT25                                                         
         L     RD,UNWINDRD         Yes - return to RUN                          
         LM    RE,RC,12(RD)        with registers intact                        
         CR    RE,RE               and condition code of equal                  
         BR    RE                                                               
                                                                                
FLDPUT25 MVI   FPSAVELN,0          Set no data saved                            
         MVC   FPSAVEST,NULLS      Clear save string                            
                                                                                
FLDPUT26 CLI   BYTE1,0             Exit now if flush call                       
         JE    FLDPUTX                                                          
         CLC   FPPREVEL,FPTHISEL   Test change of element                       
         JE    FLDPUT30                                                         
                                                                                
FLDPUT28 MVC   FPSAVEEL,FPTHISEL   First for new element                        
         MVI   FPSAVELN,0          Set no data saved                            
         MVC   FPSAVEST,NULLS      Clear save string                            
                                                                                
FLDPUT30 LM    RE,RF,LP_OLEN       RE=L'data,RF=A(data)                         
         MVI   FPSAVEST,LP_OTCHR   Set type for multiple field (string)         
         SR    R1,R1                                                            
         ICM   R1,1,FPSAVELN                                                    
         JNZ   *+14                                                             
         MVC   FPSAVEST(L'LP_OTYPE),LP_OTYPE                                    
         AHI   R1,1                Add 1 for data type                          
         LA    R0,0(RE,R1)                                                      
         CHI   R0,255              Can't handle element longer than 255         
         JH    DEATH206                                                         
         CHI   R1,1                Test start of string                         
         LA    R1,FPSAVEST(R1)                                                  
         JE    FLDPUT32                                                         
         BCTR  R1,0                                                             
         CLI   0(R1),SPACEQ        Compact out trailing spaces                  
         JNE   *+10                                                             
         BCTR  R0,0                                                             
         JCT   R1,*-10                                                          
         AHI   R1,1                                                             
         MVI   0(R1),ODELIMQ                                                    
         TM    FPFLDIND,LO_OSTRQ   Test override output delimiter               
         JZ    *+10                                                             
         MVC   0(1,R1),LP_ODELM    Yes - use it                                 
         AHI   R1,1                                                             
         AHI   R0,1                Add one to length for delimiter              
                                                                                
FLDPUT32 STC   R0,FPSAVELN         Set new saved string length                  
         BCTR  RE,0                                                             
         EX    RE,FPUTMV1F         Move data to end of saved string             
                                                                                
         MVC   FPPREVEL,FPTHISEL   Save element code                            
         MVC   FPPREVDT,FPTHISDT   Save data code                               
         J     FLDPUTX                                                          
                                                                                
         USING LQ_D,R6             output header element                        
FLDPUT34 CLI   LP_OTYPE,RUNXQ      Test run on exit command                     
         JNE   FLDPUT36                                                         
         OI    INDQROEP,INDSROEP   Set run on exit in process                   
         MVI   LQ_EL,LQ_RUNXQ      Build run on exit command element            
         MVC   LQ_DCODE,FPTHISDT                                                
         LHI   R0,LQ_LNCQ                                                       
         J     FLDPUT40                                                         
                                                                                
FLDPUT36 CLI   LP_OTYPE,ERUNQ      Test run on exit end                         
         JE    FLDPUT38                                                         
         MVI   LQ_EL,LQ_RQSTQ      No - must be request data                    
         MVC   LQ_DCODE,FPTHISDT                                                
         MVI   LQ_TYPE,LQ_TSINQ                                                 
         LM    RE,RF,LP_OLEN                                                    
         LA    R0,LQ_LN2Q(RE)                                                   
         BCTR  RE,0                                                             
         EX    RE,FPUTMVQF                                                      
         J     FLDPUT40                                                         
                                                                                
FLDPUT38 NI    INDQROEP,FF-(INDSROEP)                                           
         MVI   LQ_EL,LQ_ERUNQ      Build run on request end element             
         LHI   R0,LQ_LN1Q                                                       
                                                                                
FLDPUT40 STCM  R0,3,LQ_LN          Set element length                           
         GOTOR UPDPTR              Update record pointer                        
         MVC   0(LQ_LN2Q,R6),NULLS Clear end of current record                  
                                                                                
FLDPUTX  J     EXITR6                                                           
                                                                                
UPDPTR   AR    R6,R0               Advance to next element                      
         C     R6,AWRKRECX         Test beyond end of record                    
         BNHR  RE                                                               
         LR    R0,RE                                                            
         GOTOR LP_ARECP,RPLNKQ     Put output record now                        
         LR    RE,R0                                                            
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Routine to call the server application                              *         
***********************************************************************         
                                                                                
GOSVR    NTR1  LABEL=*                                                          
                                                                                
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JZ    GOSVR04                                                          
         TM    INDQDDLK,INDSDDLK   Test DDLINK hosted server                    
         JNZ   GOSVR04                                                          
                                                                                
         LA    RE,LP_ASVR1         Find server entry                            
         LA    R0,LP_NSVRS                                                      
GOSVR02  CLC   LP_ASVR+1(3),1(RE)  Match on calling address                     
         JE    GOSVR03                                                          
         AHI   RE,L'LP_ASVR1                                                    
         JCT   R0,GOSVR02                                                       
         J     DEATH998                                                         
                                                                                
GOSVR03  LLC   RF,0(RE)            RE=server index value (0-n)                  
         M     RE,SAVESIZE                                                      
         A     RF,ASVRSAVE                                                      
         ST    RF,SVASAVE                                                       
         USING SS_D,RF                                                          
         CLC   SS_BEYE,SBLEYE      Ensure eyecatchers are intact                
         JNE   DEATH027                                                         
         CLC   SS_REYE,SRGEYE                                                   
         JNE   DEATH028                                                         
         CLC   SS_WEYE,SWKEYE                                                   
         JNE   DEATH029                                                         
         MVC   LP_BLKS(LP_BLKSL),SS_BLKS                                        
         MVC   LP_R2RB(LP_R2RBL),SS_R2RB                                        
         LA    R0,SS_WORK                                                       
         L     RE,ARUNFACS         Pass A(workarea) in RUNFACS                  
         ST    R0,RSVRSAVE-RUNFACSD(RE)                                         
         DROP  RF                                                               
                                                                                
GOSVR04  MVC   LP_ERROR,NULLS      Clear error controls                         
         MVI   LP_EMSYS,0                                                       
         TM    RSVRIND1,RSVRILNK   Test I am in control                         
         JZ    GOSVRN                                                           
         CLC   0(2,R1),NULLS       Test displacement set                        
         JNE   *+12                                                             
         TM    RSVRIND1,RSVRIDFC   Test IDF compatible                          
         JZ    EXIT                                                             
         LLH   RF,0(R1)            RSVRADDR is a real displacement              
         CLC   RSVRADDR,0(R1)      Test calling server entry point              
         JE    GOSVR06                                                          
                                                                                
         LARL  RE,EXIT             Grab some storage for caller                 
GOSVRWK  NTR1  LABEL=*,WORK=(R2,400)                                            
         LLH   RF,0(R1)                                                         
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    GOSVR06                                                          
         SLL   RF,1                Yes - double displacement                    
                                                                                
GOSVR06  A     RF,LP_ASVR          RF=A(entry point)                            
         GOTOR GETFAC              Load SYSFACS if necessary                    
         L     R1,LP_ARUNP         Set mode in RUNPARMD for server              
         MVC   RUNPMODE-RUNPARMD(,R1),LP_CMODE                                  
         GOTOR GOTOSVR             Call server overlay                          
                                                                                
         IPM   R0                  Save condition code                          
         TM    LP_FLAG,LP_FOFFL    Test off-line                                
         JZ    GOSVR08                                                          
         TM    INDQDDLK,INDSDDLK   Test DDLINK hosted server                    
         JNZ   GOSVR08                                                          
         L     RF,SVASAVE          Point to server save area                    
         USING SS_D,RF                                                          
         MVC   SS_BLKS,LP_BLKS     and update block addresses                   
                                                                                
GOSVR08  SPM   R0                  Restore condition code                       
                                                                                
GOSVRN   J     EXIT                                                             
         DROP  RF                                                               
                                                                                
GOTOSVR  NTR1  LABEL=*             Call server overlay                          
         LA    R1,LP_D             Point R1 to DDLINK parameter list            
         LR    RC,R2               Point RC to acquired storage                 
         LM    R2,RB,LP_R2RB       Restore caller's R2 thru RB                  
         CR    RF,RF               Set condition code to equal                  
         GOTOR (RF),(R1)           Pass control to server                       
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* Load server facilites if necessary                                  *         
***********************************************************************         
                                                                                
GETFAC   NTR1  LABEL=*                                                          
         TM    RSVRIND1,RSVRILCO   Test load SYSFACS off-line only              
         JNZ   EXITY                                                            
         TM    LP_INDS,LP_IFACS    Test SYSFACS already loaded                  
         JNZ   EXITY                                                            
         OI    LP_INDS,LP_IFACS    Set SYSFACS loaded (one time only)           
         SR    R2,R2                                                            
         ICM   R2,3,RSVRFACS                                                    
         JZ    EXITY                                                            
         A     R2,RUNASVR                                                       
         USING RFACTABD,R2         Initialize server facilities block           
         L     RF,CALLOV                                                        
         LA    R1,DMCB                                                          
         ICM   R0,B'1110',T00A                                                  
GETFAC02 ICM   R0,1,RFACPHSN       Set/test phase number                        
         JZ    EXITY               Zero is end of table                         
         CLC   RFACSYSD,NULLS      Ignore zero displacement                     
         JNE   *+14                                                             
         CLC   RFACCOMD,NULLS      unless not in COMFACS                        
         JNE   GETFAC04                                                         
         GOTOR (RF),(R1),0,(R0)                                                 
         LLH   RE,RFACSYSD         Set address in SYSFACS                       
         A     RE,ASYSFACS                                                      
         MVC   0(4,RE),0(R1)                                                    
GETFAC04 AHI   R2,RFACTABL         Bump to next table entry                     
         J     GETFAC02                                                         
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Build PfKey line                                                    *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
BLDPFK   NTR1  LABEL=*                                                          
         LR    R2,RF                                                            
         S     RF,LP_ATWA                                                       
         STCM  RF,3,LS_BEDSP       Set A(last field in TWA)                     
                                                                                
         USING TWAPFKLD,R2                                                      
         MVC   TWAPFKH,NULLS                                                    
         MVI   TWAPFKH+(FLDLEN-FLDHDRD),TWAPFKLL                                
         MVI   TWAPFKH+(FLDATB-FLDHDRD),FATBPROT+FATBLC                         
         MVI   TWAPFKH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LHI   R0,((ROWSPAGE-1)*COLSLINE)+TWAPFKCQ                              
         STCM  R0,3,TWAPFKH+(FLDADR-FLDHDRD)                                    
                                                                                
         MVC   TWAPFKT,SPACES                                                   
         LA    R4,TWAPFKT                                                       
         MVC   0(L'PFPRFX,R4),PFPRFX                                            
         AHI   R4,L'PFPRFX                                                      
                                                                                
         TM    LS_BMODE,LS_BMECD   Test 'enter command' screen                  
         JZ    *+14                                                             
         MVC   0(L'RUNDSC,R4),RUNDSC                                            
         AHI   R4,L'RUNDSC+1                                                    
                                                                                
         TM    LS_BMODE,LS_BMSUP   Scroll up                                    
         JZ    *+14                                                             
         MVC   0(L'SCRLUP,R4),SCRLUP                                            
         AHI   R4,L'SCRLUP+1                                                    
                                                                                
         TM    LS_BMODE,LS_BMSDN   Scroll down                                  
         JZ    *+14                                                             
         MVC   0(L'SCRLDN,R4),SCRLDN                                            
         AHI   R4,L'SCRLDN+1                                                    
                                                                                
         TM    LS_BMODE,LS_BMSMI+LS_BMSSI                                       
         JZ    *+14                                                             
         MVC   0(L'SELECT,R4),SELECT                                            
         AHI   R4,L'SELECT+1                                                    
                                                                                
         MVC   0(L'CPYSTR,R4),CPYSTR                                            
         AHI   R4,L'CPYSTR+1                                                    
                                                                                
         TM    INDQCTRL,INDSCTRL   Test control record                          
         JNZ   BLDPFK10                                                         
         TM    LS_BMODE,LS_BMRUN   Run keys                                     
         JZ    BLDPFK10                                                         
         TM    RSVRIND2,RSVROUPD   Test RUNNER upload valid                     
         JNZ   BLDPFK02                                                         
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JNZ   BLDPFK08                                                         
         TM    LP_RUNI1,LP_RNOWQ                                                
         JZ    *+14                                                             
         MVC   0(L'RUNNOW,R4),RUNNOW                                            
         AHI   R4,L'RUNNOW+1                                                    
         CLI   RSVRTYPE,0                                                       
         JE    BLDPFK10                                                         
         GOTOR TSVR                Test server availability                     
         JNE   BLDPFK10                                                         
         TM    LP_RUNI1,LP_RDSCQ                                                
         JZ    *+14                                                             
         MVC   0(L'RUNDSC,R4),RUNDSC                                            
         AHI   R4,L'RUNDSC+1                                                    
         J     BLDPFK10                                                         
                                                                                
BLDPFK02 MVC   0(L'ADDULR,R4),ADDULR                                            
         AHI   R4,L'ADDULR+1                                                    
         TM    LS_INDS1,LS_IOUPD   Test worker file created                     
         JNZ   BLDPFK04                                                         
         MVC   0(L'RUNNOWI,R4),RUNNOWI                                          
         AHI   R4,L'RUNNOWI+1                                                   
         J     BLDPFK06                                                         
                                                                                
BLDPFK04 MVC   0(L'RUNNOWW,R4),RUNNOWW                                          
         AHI   R4,L'RUNNOWW+1                                                   
                                                                                
BLDPFK06 CLI   RSVRTYPE,0                                                       
         JE    DEATH207                                                         
         GOTOR TSVR                Test server availability                     
         JNE   BLDPFK10                                                         
         MVC   0(L'RUNDSC,R4),RUNDSC                                            
         AHI   R4,L'RUNDSC+1                                                    
         J     BLDPFK10                                                         
                                                                                
BLDPFK08 MVC   0(L'ADDULR,R4),ADDULR                                            
         AHI   R4,L'ADDULR+1                                                    
         MVC   0(L'SNDULF,R4),SNDULF                                            
         AHI   R4,L'SNDULF+1                                                    
                                                                                
BLDPFK10 TM    LS_IIND1,LS_ICOPY   Test copy string available                   
         JZ    BLDPFK12                                                         
         MVC   0(L'PSTSTR,R4),PSTSTR                                            
         AHI   R4,L'PSTSTR+1                                                    
         J     BLDPFK14                                                         
                                                                                
BLDPFK12 MVC   0(L'SVRDIS,R4),SVRDIS                                            
         AHI   R4,L'SVRDIS+1                                                    
         MVC   0(L'QUEDIS,R4),QUEDIS                                            
         AHI   R4,L'QUEDIS+1                                                    
         MVC   0(L'SENCMD,R4),SENCMD                                            
         AHI   R4,L'SENCMD+1                                                    
                                                                                
BLDPFK14 TM    LS_BMODE,LS_BMSMI   Select menu item key                         
         JNZ   BLDPFKX                                                          
         MVC   0(L'MENDIS,R4),MENDIS                                            
         AHI   R4,L'MENDIS+1                                                    
                                                                                
BLDPFKX  AHI   R2,TWAPFKLL         Set end of TWA & exit                        
         MVI   0(R2),0                                                          
         MVI   1(R2),1                                                          
         MVI   2(R2),1                                                          
         J     EXITY                                                            
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* Copy application master map index and attach DDLINK index entries   *         
* to the end of it                                                    *         
***********************************************************************         
                                                                                
BMMI     NTR1  LABEL=*                                                          
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(saved storage)                          
         L     RF,LP_ANDX                                                       
OLDNDX   USING LN_D,RF             RF=A(application index)                      
         LAY   R1,NDX                                                           
NEWNDX   USING LN_D,R1             R1=A(extended index)                         
         STCM  R1,15,ANDX                                                       
         MVC   FILTMAP,NULLS       Initialize filter map                        
                                                                                
BMMI0010 CLC   OLDNDX.LN_CODE,NULLS                                             
         JZ    BMMI0150                                                         
         STM   RE,R1,SAVERE        Save work registers                          
                                                                                
         MVC   NEWNDX.LN_D(LN_LNQ),OLDNDX.LN_D                                  
                                                                                
         TM    NEWNDX.LN_RUNI2,LP_RTERQ                                         
         JZ    BMMI0020                                                         
         MVC   HALF1,OLDNDX.LN_TDSP                                             
         LA    R0,OLDNDX.LN_TDSP   Point to text displacement                   
         AH    R0,HALF1            and add displacement value                   
         STCM  R0,7,NEWNDX.LN_TADR Set address of text in index                 
                                                                                
BMMI0020 CLI   LT_CACTN,LT_CAFBQ   Test menu request...                         
         JE    *+12                                                             
         CLI   LT_CACTN,LT_CANBQ   ...or request details                        
         JNE   BMMI0120                                                         
         OI    LT_COPTN,C' '       Ensure option is upper case                  
                                                                                
         CLI   LT_COPTN,C'+'       Test menu filter present                     
         JNE   BMMI0040                                                         
         MVC   LS_QMAPN,NULLS                                                   
                                                                                
         MVC   BYTE1,OLDNDX.LN_TLEN                                             
         LR    RF,R0               Point to index text                          
         LLC   R1,BYTE1            R0=length of text                            
         LA    R1,LT_CCTRL-1(R1)                                                
         LA    RE,LT_CCTRL                                                      
         CLI   0(R1),C' '                                                       
         JH    *+8                                                              
         JCT   R1,*-8                                                           
         CR    R1,RE               Test any text entered                        
         JE    BMMI0120                                                         
         LLC   R0,BYTE1            R0=length of text to search                  
         SR    R1,RE               R1=length of input text                      
BMMI0030 EX    R1,BMMICLFT                                                      
         JE    BMMI0120                                                         
         AHI   RF,1                                                             
         JCT   R0,BMMI0030                                                      
         LM    RE,R1,SAVERE        Restore work registers                       
         J     BMMI0140                                                         
                                                                                
BMMI0040 CLI   LT_COPTN,C'#'       Test phase filter present                    
         JNE   BMMI0050                                                         
         MVC   LS_QMAPN,NULLS                                                   
         OC    LT_CCTRL(2),SPACES  Ensure hex codes are upper case              
         LLC   R0,OLDNDX.LN_PHASE                                               
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   WORK+1(1),0(R1)                                                  
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   WORK+0(1),0(R1)                                                  
         CLC   LT_CCTRL(2),WORK    Match with input value                       
         JE    BMMI0120                                                         
         LM    RE,R1,SAVERE                                                     
         J     BMMI0140                                                         
                                                                                
BMMI0050 CLI   LT_COPTN,C'='       Test map filter present                      
         JNE   BMMI0070                                                         
         CLC   FILTMAP,NULLS       Test resolved filter                         
         JNE   BMMI0060                                                         
         MVC   FILTMAP,EFFS        Preset to no filter                          
         LA    RE,LT_CCTRL+(L'LN_CODE*2)-1                                      
         CLI   0(RE),C' '                                                       
         JH    *+8                                                              
         JCT   RE,*-8                                                           
         LA    RF,LT_COPTN                                                      
         SR    RE,RF                                                            
         JZ    BMMI0120                                                         
         MVC   WORK(L'LN_CODE*2),EZEROS                                         
         LA    RF,L'LN_CODE*2                                                   
         SR    RF,RE                                                            
         LA    RF,WORK(RF)                                                      
         BCTR  RE,0                                                             
         EX    RE,BMMIMVFT                                                      
         OC    WORK(L'LN_CODE*2),SPACES                                         
         GOTOR HEXIN,DMCB,WORK,FILTMAP,L'LN_CODE*2                              
         CLC   12(4,R1),NULLS                                                   
         JNE   BMMI0060                                                         
         MVC   LT_CCTRL(60),NULLS                                               
         MVI   LT_CCTRL,HELPQ                                                   
         MVC   LT_CCTRL+1(L'LN_CODE*2-1),LT_CCTRL                               
         J     EXITN                                                            
                                                                                
BMMI0060 LM    RE,R1,SAVERE        Restore work registers                       
         CLC   FILTMAP,EFFS        Test no filter present                       
         JE    BMMI0120                                                         
         CLC   FILTMAP,OLDNDX.LN_CODE                                           
         JE    BMMI0120                                                         
         J     BMMI0140                                                         
                                                                                
BMMI0070 CLI   LT_COPTN,C'R'       Test RUNNER request                          
         JNE   BMMI0080                                                         
         MVC   LP_QMAPN,NULLS                                                   
         TM    OLDNDX.LN_RUNI1,LP_RDSCQ                                         
         JNZ   BMMI0120                                                         
         LM    RE,R1,SAVERE                                                     
         J     BMMI0140                                                         
                                                                                
BMMI0080 CLI   LT_COPTN,C'F'       Test FACPAK request                          
         JNE   BMMI0090                                                         
         MVC   LP_QMAPN,NULLS                                                   
         TM    OLDNDX.LN_RUNI1,LP_RNOWQ                                         
         JNZ   BMMI0120                                                         
         LM    RE,R1,SAVERE                                                     
         J     BMMI0140                                                         
                                                                                
BMMI0090 CLI   LT_COPTN,C'U'       Test upload request                          
         JNE   BMMI0100                                                         
         MVC   LP_QMAPN,NULLS                                                   
         TM    OLDNDX.LN_RUNI1,LP_RUPLQ                                         
         JNZ   BMMI0120                                                         
         LM    RE,R1,SAVERE                                                     
         J     BMMI0140                                                         
                                                                                
BMMI0100 CLI   LT_COPTN,C'D'       Test download request                        
         JNE   BMMI0110                                                         
         MVC   LP_QMAPN,NULLS                                                   
         TM    OLDNDX.LN_RUNI1,LP_RUPLQ                                         
         JZ    BMMI0120                                                         
         LM    RE,R1,SAVERE                                                     
         J     BMMI0140                                                         
                                                                                
BMMI0110 MVC   LT_COPTN(64),SPACES                                              
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTTRN                                
                                                                                
BMMI0120 LM    RE,R1,SAVERE        Restore work registers                       
                                                                                
BMMI0130 AHI   R1,LN_LN2Q          Bump to next new index entry                 
                                                                                
BMMI0140 AHI   RF,LN_LNQ           Bump to next old index entry                 
         J     BMMI0010                                                         
                                                                                
BMMI0150 MVC   NEWNDX.LN_D(DDLNDXL),DDLNDX                                      
         LA    RF,DDLNDXL(R1)      Point to DDLINK interface                    
         LAY   R0,NDXX             Point to end of index area                   
         CR    RF,R0               Ensure index fits                            
         JH    DEATH208                                                         
         LA    RF,DDLNDX           Point to actual index                        
BMMI0160 CLC   NEWNDX.LN_CODE,NULLS                                             
         JE    EXITY                                                            
         MVC   HALF1,OLDNDX.LN_TDSP                                             
         LA    R0,OLDNDX.LN_TDSP   Point to text displacement                   
         AH    R0,HALF1            and add displacement value                   
         STCM  R0,7,NEWNDX.LN_TADR Set address of text in index                 
         AHI   RF,LN_LN2Q          Bump to next old index entry                 
         AHI   R1,LN_LN2Q          Bump to next new index entry                 
         J     BMMI0160                                                         
         DROP  OLDNDX,NEWNDX,R3                                                 
         EJECT                                                                  
***********************************************************************         
* Set action in control field and point RF to first usable TWA area   *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
BLDHDR   ST    RE,12(RD)                                                        
         STC   R1,BYTE1                                                         
         OI    FLDOIND,FOUTTRN                                                  
         LLC   RE,FLDLEN           Clear and transmit control field             
         LA    RF,FLDHDRD(RE)      RF=A(start of build area)                    
         SHI   RE,FLDHDRL+2                                                     
         TM    FLDATB,FATBXHDR                                                  
         JZ    *+8                                                              
         SHI   RE,FLDHDRL                                                       
         SR    R0,R0                                                            
         TM    FLDDATA+1,ZONEBITS  Test version number set                      
         JNO   *+8                                                              
         TM    FLDDATA+2,ZONEBITS                                               
         JNO   *+14                                                             
         PACK  DUB,FLDDATA+1(2)    Yes - extract from control field             
         CVB   R0,DUB                                                           
         STC   R0,LP_FAVER                                                      
         MVC   LS_FAVER,LP_FAVER                                                
         CLI   BYTE1,0                                                          
         JE    BLDHDR02                                                         
         MVI   FLDDATA,SPACEQ      Clear control field to spaces                
         EX    RE,BHDRMVFF                                                      
         MVC   FLDDATA(L'BYTE1),BYTE1                                           
         CLI   LP_FAVER,0                                                       
         JE    BLDHDR02                                                         
         LLC   R0,LP_FAVER                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  FLDDATA+1(2),DUB                                                 
                                                                                
BLDHDR02 LLH   R0,FLDADR                                                        
         SRDL  R0,32                                                            
         LHI   RE,COLSLINE                                                      
         DR    R0,RE                                                            
         LA    RE,1(R1)                                                         
         MHI   RE,COLSLINE         RE=absolute start of row address             
         AHI   R1,2                R1=current line number                       
                                                                                
         USING TWAHEDLD,RF         Build headline                               
         MVC   TWAHEDH,NULLS                                                    
         MVI   TWAHEDH+(FLDLEN-FLDHDRD),TWAHEDLL                                
         MVI   TWAHEDH+(FLDATB-FLDHDRD),FATBPROT+FATBLC                         
         MVI   TWAHEDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LA    R0,TWAHEDCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWAHEDH+(FLDADR-FLDHDRD)                                    
         MVC   TWAHEDT,SPACES                                                   
                                                                                
         S     RF,LP_ATWA                                                       
         STCM  RF,3,LS_BFHED       Save displacement to headline                
         A     RF,LP_ATWA                                                       
         AHI   RF,TWAHEDLL                                                      
         AHI   RE,COLSLINE                                                      
         AHI   R1,1                                                             
                                                                                
         STCM  RE,3,LS_BFABS       Save absolute address of first row           
         STCM  R1,1,LS_BFROW       Save first build row number                  
         LHI   R0,ROWSPAGE-1                                                    
         SR    R0,R1                                                            
         STC   R0,LS_BFMAX         Set maximum lines per page                   
         LR    R0,RF                                                            
         S     R0,LP_ATWA                                                       
         STCM  R0,3,LS_BFDSP       Save displacement to first field             
         L     R0,LP_ATWA                                                       
         AHI   R0,MAXTWALN                                                      
         ST    R0,AENDTWA          Save A(end of TWA)                           
         LLH   RF,LS_BFHED                                                      
         A     RF,LP_ATWA          RF=A(headline) on exit                       
                                                                                
BLDHDRX  L     RE,12(RD)                                                        
         BR    RE                                                               
         DROP  R3,RF                                                            
         EJECT                                                                  
***********************************************************************         
* Extract run tables from dataspace into the TIA                      *         
***********************************************************************         
                                                                                
GETRUN   NTR1  LABEL=*                                                          
         LR    R2,R1               R2=table number                              
                                                                                
         GOTOR GETTIA              Locate TIA                                   
                                                                                
         GOTOR PROTOFF                                                          
         LAM   AR3,AR3,LP_TALET                                                 
         SAC   512                                                              
         SR    R3,R3                                                            
         ICM   R3,15,TABSRUN-FATABSD(R3)                                        
         JZ    DEATH209                                                         
         LLC   R0,TABSSRWD-TABSRUND(,R3)                                        
         LLC   R1,TABSJBWD-TABSRUND(,R3)                                        
         CLI   TABSIND1-TABSRUND(R3),TABSINEW                                   
         JE    *+12                                                             
         LHI   R0,TABSSVRL                                                      
         LHI   R1,TABSQUEL                                                      
         STH   R0,SVRWIDTH                                                      
         STH   R1,QUEWIDTH                                                      
                                                                                
         CHI   R2,GETRUNSQ         Test want server tables                      
         JE    GETRUNS                                                          
         CHI   R2,GETRUNQQ         Test want queue table                        
         JE    GETRUNQ                                                          
         J     DEATH210                                                         
                                                                                
GETRUNSQ EQU   1                                                                
GETRUNS  LLH   RF,TABSNSVR-TABSRUND(,R3)                                        
         ST    RF,FULL             Save N'entries in full                       
         ICM   RE,15,TABSASVR-TABSRUND(R3)                                      
         MH    RF,SVRWIDTH         RF=L'server table                            
         J     GETRUN02                                                         
                                                                                
GETRUNQQ EQU   2                                                                
GETRUNQ  LLH   RF,TABSNQUE-TABSRUND(,R3)                                        
         ST    RF,FULL                                                          
         ICM   RE,15,TABSAQUE-TABSRUND(R3)                                      
         MH    RF,QUEWIDTH         RF=L'work queue                              
                                                                                
GETRUN02 CHI   RF,18*ONEK                                                       
         JNH   *+8                                                              
         LHI   RF,18*ONEK                                                       
         CPYA  ARE,AR3                                                          
         L     R0,ATIA                                                          
         LR    R1,RF                                                            
         MVCL  R0,RE                                                            
         SAC   0                                                                
         LAM   AR3,AR3,ARZERO                                                   
         LAM   ARE,ARE,ARZERO                                                   
         GOTOR PROTON                                                           
         J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Look up request map table for code                                  *         
***********************************************************************         
                                                                                
LMAP     NTR1  LABEL=*                                                          
                                                                                
         LARL  RF,DDLNDX                                                        
         USING LN_D,RF                                                          
LMAP0010 CLC   LN_CODE,NULLS       Look for DDLINK hosted downloads             
         JE    LMAP0020                                                         
         CLC   LN_CODE,0(R1)       Match code to table                          
         JE    *+12                                                             
         AHI   RF,LN_LN2Q                                                       
         J     LMAP0010                                                         
         GOTOR MAPLNK              This is one of mine                          
         L     RF,RUNASVR          Point to my server code                      
         ST    RF,LP_ASVR                                                       
         J     LMAP0040            Go initialize                                
         DROP  RF                                                               
                                                                                
LMAP0020 LA    R2,LP_ASVR1         Point to server list                         
         LHI   R3,LP_NSVRS         Set maximum server count                     
                                                                                
LMAP0030 SR    RF,RF                                                            
         ICM   RF,7,1(R2)          RF=A(current server to search)               
         JZ    EXITN               Server not found                             
         MVC   LP_ASVR,0(R2)                                                    
         MVI   LP_ASVR,0                                                        
         MVC   RUNASVR,LP_ASVR                                                  
                                                                                
LMAP0040 MVC   SERVER,RSVRADDR-RSVRDEFD(RF)                                     
                                                                                
         SR    RE,RE               Get displacement to request map              
         ICM   RE,3,RSVRQMAP                                                    
         JZ    EXITN                                                            
         AR    RF,RE               RF=A(server request map table)               
                                                                                
         USING LH_D,RF                                                          
         SR    R0,R0                                                            
LMAP0050 CLC   LH_LN,NULLS         Test end of request maps                     
         JNE   LMAP0060                                                         
         AHI   R2,L'LP_ASVR        Yes - try another server                     
         JCT   R3,LMAP0030                                                      
         J     EXITN               Server not found for this request            
                                                                                
LMAP0060 CLC   LH_MAPN,0(R1)       Match map number                             
         JNE   LMAP0070                                                         
         CLC   LP_VRSN,NULLS       Test version check required                  
         JE    LMAP0090            No - use first one found                     
         CLC   LP_VRSN,LH_VRSN     Compare PC version to map version            
         JNL   LMAP0090                                                         
                                                                                
LMAP0070 LLH   R0,LH_LN            R0=length/displacement                       
         TM    LH_INDS,LH_IDISP    Test linked list                             
         JZ    LMAP0080                                                         
         SR    RF,RF                                                            
         ICM   RF,7,1(R2)          Yes - point to start of server               
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    LMAP0080                                                         
         SLL   R0,1                                                             
                                                                                
LMAP0080 AR    RF,R0               Point to next request                        
         J     LMAP0050                                                         
                                                                                
LMAP0090 MVC   LP_QMAPN,LH_MAPN    Set current map number                       
         LLH   R1,LH_OMAPD         R1=disp. to actual map or output map         
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    *+8                                                              
         SLL   R1,1                Yes - double displacement                    
                                                                                
         TM    LH_INDS,LH_IMPTR    Is this a pointer to another map?            
         JZ    LMAP0100                                                         
         OI    INDQMPTR,INDSMPTR   Yes - set processing pointer map             
         A     R1,LP_ASVR          Get address of actual map                    
         LR    RF,R1               and point to it                              
         LLH   R1,LH_OMAPD         R1=displacement to output map                
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    LMAP0100                                                         
         SLL   R1,1                Yes - double displacement                    
                                                                                
LMAP0100 MVC   LP_HINDS,LH_INDS    Extract header indicators                    
         MVC   ROUTDISP,LH_OMAPD   Extract routine displacement                 
         AHI   RF,LH_LNQ                                                        
         ST    RF,LP_AQMAP         Set A(request map)                           
         LTR   R1,R1               Test output map was specified                
         JNZ   LMAP0110                                                         
         CLC   RSVRTYPS,NULLS      Test server list present                     
         JNE   LMAPX               Yes - these types never have output          
         TM    LP_RUNI1,LP_RGLBQ+LP_RUPLQ                                       
         JNZ   LMAPX               Output map is n/r for uploads                
         TM    RSVRIND1,RSVRLKIO                                                
         JNZ   LMAPX               nor if using LINKIO for output               
         J     DEATH211                                                         
                                                                                
LMAP0110 A     R1,LP_ASVR          R1=A(output table/routine)                   
         ST    R1,LP_AOMAP                                                      
         TM    LP_HINDS,LH_IROUT   Test output is a routine                     
         JZ    LMAPX                                                            
         OI    INDQORTN,INDSORTN   Yes - set indicator                          
                                                                                
LMAPX    J     EXITY               Return with CC equal if found                
         EJECT                                                                  
***********************************************************************         
* Look up output element code in FALINK constructed map               *         
***********************************************************************         
                                                                                
FNDELH   LAY   RF,MAP                                                           
         USING LF_D,RF                                                          
         CLC   LF_CODE,0(R1)                                                    
         BER   RE                                                               
         J     DEATH212                                                         
         DROP  RF                                                               
                                                                                
***********************************************************************         
* Look up data code in FALINK constructed map                         *         
***********************************************************************         
                                                                                
FNDDTA   ST    RE,12(RD)                                                        
         LAY   RF,MAP              Point to map header                          
         AHI   RF,LF_HDRL                                                       
         USING LF_D,RF                                                          
FNDDTA02 CLI   LF_LEN,LF_FLDX      Test end of table                            
         JE    DEATH213                                                         
         CLC   LF_CODE,0(R1)       Match code to table                          
         JE    FNDDTA04                                                         
         LLC   RE,LF_LEN           Bump to next table entry                     
         AR    RF,RE                                                            
         J     FNDDTA02                                                         
FNDDTA04 L     RE,12(RD)                                                        
         BR    RE                                                               
         DROP  RF                                                               
         EJECT                                                                  
***********************************************************************         
* Look up map code in FALINK emulated map - return A(LD_D) in RF      *         
***********************************************************************         
                                                                                
GETMAP   STM   RE,R1,12(RD)                                                     
         LR    R0,R1               R0=entry number to be located                
         LAY   R1,MAP                                                           
         USING LF_D,R1                                                          
GETMAP02 SR    RE,RE                                                            
         ICM   RE,1,LF_LEN                                                      
         JZ    GETMAPN                                                          
         LLH   RF,LF_DISP                                                       
         BCTR  RF,0                                                             
         MVC   LP_CMAPN,LF_CODE    Set record map code                          
         AR    RF,R1                                                            
         AR    R1,RE                                                            
         USING LF_D,R1                                                          
GETMAP04 CR    R1,RF               Test pointing to map end                     
         JNE   *+12                                                             
         AHI   R1,1                Yes - bump to next header                    
         J     GETMAP02                                                         
         JH    DEATH214                                                         
         JCT   R0,*+8                                                           
         J     GETMAPY             Found the entry                              
         LLC   RE,LF_LEN                                                        
         AR    R1,RE                                                            
         J     GETMAP04                                                         
                                                                                
GETMAPY  SR    RF,RF                                                            
         ICM   RF,7,LF_ALD         Return A(LD_D) in RF                         
         TM    LF_INDS-LF_D(R1),LF_CTRLQ                                        
         JZ    *+14                                                             
         MVC   VALTYPE,LB_DITYP-LB_DVALS(RF)                                    
         J     *+10                                                             
         MVC   VALTYPE,LD_TYPE-LD_D(RF)                                         
         NI    VALTYPE,FF-(LD_SCOLQ+LD_ECOLQ)                                   
         MVC   VALINDS,LF_INDS-LF_D(R1)                                         
         ST    R1,AMD              Set A(LF_D) for VSTR                         
         LLC   RE,VALTYPE                                                       
         MHI   RE,L'VALVALS                                                     
         LA    RE,VALTYPES(RE)                                                  
         MVC   VALVALS,0(RE)       Set field validation type                    
                                                                                
         TM    LF_INDS-LF_D(R1),LF_CTRLQ                                        
         JZ    GETMAPY2                                                         
C        USING LD_D,LDWORK         Build LD_D for control record                
         USING LB_DVALS,RF                                                      
         MVC   C.LD_D(LD_LNQ),NULLS                                             
         MVI   C.LD_IDF,LD_IDFCQ                                                
         MVC   C.LD_CODE,LB_DCODE                                               
         MVC   C.LD_INDS3,LB_DBLK#                                              
         MVC   C.LD_DISP,LB_DBDSP                                               
         MVC   C.LD_LEN,LB_DLEN                                                 
         MVC   C.LD_TYPE,LB_DITYP                                               
         MVC   HALF1,LB_DTEXT                                                   
         LH    RE,HALF1                                                         
         LA    R1,LB_DTEXT                                                      
         AR    R1,RE               Point to actual text                         
         STCM  R1,7,C.LD_ATEXT                                                  
         MVC   C.LD_TSYS,LB_LTEXT                                               
         LA    RF,C.LD_D           and point to it                              
         DROP  RF,C                                                             
                                                                                
GETMAPY2 L     RE,12(RD)                                                        
         LM    R0,R1,20(RD)                                                     
         CR    RE,RE               Set CC to equal                              
         BR    RE                                                               
                                                                                
GETMAPN  SR    RF,RF                                                            
         L     RE,12(RD)                                                        
         LM    R0,R1,20(RD)                                                     
         LTR   RE,RE               Set CC to not equal                          
         BR    RE                                                               
         DROP  R1                                                               
         EJECT                                                                  
***********************************************************************         
* Get input value from data pool                                      *         
***********************************************************************         
                                                                                
         USING LD_D,R6                                                          
         USING LS_D,R3                                                          
GETIDP   STM   RE,R1,12(RD)                                                     
         MVI   WORK,0                                                           
         MVC   WORK+1(L'TWAVAL),SPACES                                          
         SR    R1,R1                                                            
         ICM   R1,3,LS_BFNXT                                                    
         JZ    GETIDPX                                                          
         LA    R1,LS_POOL(R1)                                                   
         LA    RE,LS_POOL                                                       
         USING LC_D,RE                                                          
         SR    RF,RF                                                            
GETIDP02 CR    RE,R1                                                            
         JE    GETIDPX                                                          
         CLC   LD_CODE,LC_CODE                                                  
         JE    *+14                                                             
         IC    RF,LC_LN                                                         
         AR    RE,RF                                                            
         J     GETIDP02                                                         
         SR    R1,R1                                                            
         IC    R1,LC_LN                                                         
         SHI   R1,LC_LN1Q                                                       
         STC   R1,WORK                                                          
         BCTR  R1,0                                                             
         EX    R1,GIDPMVWC                                                      
GETIDPX  LM    RE,R1,12(RD)                                                     
         CLC   WORK+1(L'TWAVAL),SPACES                                          
         BR    RE                                                               
         DROP  RE                                                               
                                                                                
***********************************************************************         
* Delete an input value from the data pool                            *         
***********************************************************************         
                                                                                
DELIDP   STM   RE,R1,12(RD)                                                     
         SR    R1,R1                                                            
         ICM   R1,3,LS_BFNXT                                                    
         JZ    DELIDPX                                                          
         LA    R1,LS_POOL(R1)      R1=A(end of pool)                            
         LA    RE,LS_POOL          RE=A(start of pool)                          
         USING LC_D,RE                                                          
         SR    RF,RF                                                            
DELIDP02 CR    RE,R1               Test end of pool                             
         JE    DELIDPX             Yes - exit                                   
         CLC   LD_CODE,LC_CODE                                                  
         JE    *+14                                                             
         IC    RF,LC_LN            Bump to next pool entry                      
         AR    RE,RF                                                            
         J     DELIDP02                                                         
                                                                                
         IC    RF,LC_LN            RF=L'entry to remove                         
         AR    RF,RE                                                            
         CR    RF,R1               Test this is last in pool                    
         JNE   DELIDP04                                                         
         LA    R1,LS_POOL                                                       
         SR    RE,R1                                                            
         STCM  RE,3,LS_BFNXT                                                    
         J     DELIDPX                                                          
                                                                                
DELIDP04 MVC   BYTE1,LC_LN         Save length removed                          
         SR    R1,RF               R1=length to move                            
         LR    R0,RE               R0=move to address                           
         LR    RE,RF               RE=move from address                         
         LR    RF,R1               RF=length to move                            
         MVCL  R0,RE                                                            
                                                                                
         LLH   R0,LS_BFNXT         Decrease index by length removed             
         LLC   R1,BYTE1                                                         
         SR    R0,R1                                                            
         STCM  R0,3,LS_BFNXT                                                    
                                                                                
DELIDPX  LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         DROP  R3,R6,RE                                                         
         EJECT                                                                  
***********************************************************************         
* Set length of input field or get maximum input length               *         
***********************************************************************         
                                                                                
         USING TWADATAD,RF                                                      
         USING LD_D,R6                                                          
SETLEN   STM   RE,R1,12(RD)                                                     
         STC   R1,BYTE1                                                         
                                                                                
         CLI   LD_IDF,LD_IDFRQ     Test id field redefined                      
         JNE   *+12                                                             
         TM    LD_INDS5,LD_IFLSQ   Test list of values forced                   
         JNZ   SETLEN06                                                         
                                                                                
         LHI   R1,1                                                             
         CLI   VALVALTY,MASKQ      Test mask bit                                
         JE    SETLEN08                                                         
         CLI   LD_INPMX,0          Test maximum input length set                
         JNE   *+12                                                             
         CLI   LD_TYPE,LD_VSTRQ    No - test variable string input              
         JE    SETLEN06            Yes - set to maximum                         
                                                                                
         SR    R1,R1                                                            
         ICM   R1,1,LD_INPMX       Test maximum input length set                
         JNZ   SETLEN08                                                         
         ICM   R1,1,VALVALLN       Test default input length set                
         JNZ   SETLEN02                                                         
                                                                                
         CLI   VALVALTY,USERQ      Test user defined field                      
         JNE   SETLEN01                                                         
         ICM   R1,1,LD_INPMX       Yes - is maximum input length set            
         JNZ   SETLEN08            Yes - use it                                 
         J     SETLEN06            No - set to maximum                          
                                                                                
SETLEN01 IC    R1,LD_LEN           Get output length                            
         CLI   VALTYPE,LD_OCHRQ    For optional character input type            
         JE    SETLEN08                                                         
         CLI   VALTYPE,LD_CHARQ    For character input type                     
         JE    SETLEN08                                                         
         CLI   VALTYPE,LD_VCHRQ    Test variable character string               
         JNE   *+10                                                             
         BCTR  R1,0                Yes - decrement one for length               
         J     SETLEN08                                                         
                                                                                
         CLI   VALTYPE,LD_HEXDQ    For hexadecimal string                       
         JNE   *+12                                                             
         SLL   R1,1                length=output length*2                       
         J     SETLEN08                                                         
                                                                                
         CLI   VALVALTY,PACKQ      Packed numbers                               
         JNE   SETLEN04                                                         
         SLL   R1,1                Double length                                
         AHI   R1,2                Add one for sign and spare                   
         J     SETLEN08                                                         
                                                                                
SETLEN02 TM    LD_INDS1,LD_IRNGQ   Test range allowed                           
         JZ    SETLEN08                                                         
         LA    R1,1(R1,R1)         Yes - double length and add one              
         J     SETLEN08                                                         
                                                                                
SETLEN04 CLI   VALVALTY,BNRYQ      Test for binary values                       
         JNE   SETLEN06                                                         
         IC    R1,LD_LEN                                                        
         IC    R1,BINLEN-1(R1)                                                  
         CLI   VALTYPE,LD_CBINQ    Test signed cash                             
         JNE   SETLEN08                                                         
         AHI   R1,2                Yes - add one for sign and spare             
         J     SETLEN08                                                         
                                                                                
SETLEN06 LHI   R1,L'TWAVAL         Set maximum input length                     
         CLI   BYTE1,0                                                          
         JE    SETLEN08                                                         
         LHI   R1,253                                                           
                                                                                
SETLEN08 CLI   BYTE1,0             Test called just to set max len              
         STC   R1,BYTE1            Set maximum input length                     
         JNE   SETLENX                                                          
                                                                                
         TM    VALINDS,LF_XCOLQ    Test if an input array                       
         JZ    *+12                                                             
         LHI   R1,L'TWAVAL         Arrays have maximum input length             
         J     SETLEN12                                                         
                                                                                
         SR    R0,R0               Calculate & set TWA field length             
         ICM   R0,1,LD_LSTMX                                                    
         JNZ   SETLEN10                                                         
         TM    LD_INDS1,LD_ILSTQ   Test list allowed                            
         JZ    *+12                                                             
         LHI   R0,FF               Set high value                               
         J     SETLEN10                                                         
         CLI   VALVALTY,USERQ      Test user validated                          
         JNE   SETLEN10                                                         
         TM    LD_INDS1,LD_IRNGQ   Test range of values allowed                 
         JZ    SETLEN10                                                         
         SLL   R1,1                double input length                          
         AHI   R1,1                and add one for delimiter                    
                                                                                
SETLEN10 LTR   R0,R0                                                            
         JNZ   *+8                                                              
         AHI   R0,1                                                             
         MR    R0,R0                                                            
         CHI   R1,L'TWAVAL         Test against field maximum                   
         JNH   SETLEN12                                                         
         LHI   R1,L'TWAVAL                                                      
                                                                                
SETLEN12 LTR   R1,R1               Must have non-zero length                    
         JZ    DEATH215                                                         
         AHI   R1,L'TWAVALH                                                     
         STC   R1,TWAVALH+(FLDLEN-FLDHDRD)                                      
                                                                                
SETLENX  LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         DROP  R6,RF                                                            
         EJECT                                                                  
***********************************************************************         
* Routine to clear work map pool                                      *         
***********************************************************************         
                                                                                
CLRWMP   STM   RE,R1,12(RD)                                                     
         L     R0,AWMP                                                          
         ST    R0,LP_AWMP                                                       
         LLH   R1,LP_WMPL                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Routine to call SOFDAT for date validation and conversion           *         
*                                                                     *         
* Ntry:- R1=A(Parameter list as follows):-                            *         
*                                                                     *         
*        P1/B0  =SOFDAT input type (SOFITYPE)                         *         
*        P1/B1-3=A(Input area)                                        *         
*        P2/B0  =SOFDAT output type (SOFOTYPE)                        *         
*        P2/B1-3=A(Output area)                                       *         
*        P3/B0  =SOFDAT input indicators (SOFIINDS)                   *         
*        P3/B1-3=A(Maximum period type/value) or zero                 *         
*        P4/B0  =L'Input                                              *         
*        R6=A(LD_D) if a validation call                              *         
***********************************************************************         
                                                                                
GOSOFT   NTR1  LABEL=*,WORK=(R7,GSWORKL)                                        
         USING GSWORKD,R7                                                       
         MVC   GSWORKD(GSWORKL),NULLS                                           
         LR    R2,R1               R2=A(parameter list)                         
         MVC   GSITYPE,0(R2)       Extract input type                           
         MVC   GSOTYPE,4(R2)       Extract output type                          
         LA    R1,GSSOFBLK                                                      
         USING SOFDATD,R1                                                       
         MVC   SOFITYPE,GSITYPE                                                 
         MVC   SOFAINP+1(3),1(R2)                                               
         MVC   SOFOTYPE,GSOTYPE                                                 
         MVC   SOFAOUT+1(3),5(R2)                                               
         MVC   SOFIINDS,8(R2)                                                   
         SR    RF,RF                                                            
         ICM   RF,7,9(R2)          Get A(maximum value)                         
         JZ    *+10                                                             
         MVC   SOFMAXPT(L'SOFMAXPT+L'SOFMAXPV),0(RF)                            
         MVI   GSFIELDL,L'GSFIELDH+L'GSFIELD                                    
                                                                                
         NI    GSITYPE,DIGIBITS                                                 
         CLI   GSITYPE,SOFITYM     Test validation call...                      
         JE    *+12                                                             
         CLI   GSITYPE,SOFITYMD                                                 
         JNE   GOSOFT02                                                         
                                                                                
         TM    LD_INDS1-LD_D(R6),LD_IRNGQ                                       
         JNZ   *+8                                                              
         OI    SOFIINDS,SOFIIONE                                                
         OI    SOFIINDS,SOFIISLH+SOFIIF1O+SOFIIF2O                              
                                                                                
         TM    VALMODE,VALMTEST    Test interactive test mode                   
         JNZ   *+12                                                             
         TM    INDQBTCH,INDSBTCH   Test running off-line batch mode             
         JZ    *+8                                                              
         OI    SOFIINDS,SOFIIRES   Set to resolve soft dates now                
                                                                                
         MVI   GSITYPE,0           (set type to zero for validation)            
         LLC   RE,12(R2)           R1=L'input string                            
         SHI   RE,1                                                             
         JM    DEATH216                                                         
         SR    RF,RF                                                            
         ICM   RF,7,SOFAINP+1      RF=A(input data)                             
         MVC   GSFIELD,SPACES                                                   
         EX    RE,GSOFMVFF         Extract input into GSFIELD                   
         LA    R0,GSFIELDH                                                      
         STCM  R0,7,SOFAINP+1      Set field header as input                    
         J     GOSOFT04                                                         
                                                                                
GOSOFT02 LA    R0,GSFIELDH         Set GSFIELD as output for convert            
         ST    R0,SOFAOUT                                                       
                                                                                
GOSOFT04 MVC   SOFTODAY,TODAYYY                                                 
         MVC   SOFACOM,LP_ACOM                                                  
         MVC   SOFSYSN,LP_SOFSY                                                 
         CLI   SOFSYSN,0                                                        
         JNE   *+8                                                              
         MVI   SOFSYSN,10                                                       
         MVC   SOFACFST,LP_SOFSF                                                
         MVC   SOFLANG,LP_LANG                                                  
         GOTOR SOFDAT,(R1)                                                      
         JNZ   EXITN                                                            
         CLI   GSITYPE,0           Test validation call                         
         JE    EXITY                                                            
         LLC   RE,GSFIELDH+5       Move converted string to output area         
         SHI   RE,1                                                             
         JM    DEATH217                                                         
         SR    RF,RF                                                            
         ICM   RF,7,5(R2)          RF=A(output area)                            
         LA    R1,GSFIELD                                                       
         CLI   GSOTYPE,SOFOTPR2    Test yyyymmdd format                         
         JNE   GOSOFT08                                                         
         CLC   TODAYYR,0(R1)       Test same as current year                    
         JNE   GOSOFT08                                                         
         SHI   RE,L'TODAYYR        Yes - drop the year                          
         AHI   R1,L'TODAYYR                                                     
                                                                                
GOSOFT08 EX    RE,GSOFMVF1         Move data to output area                     
         EX    RE,GSOFOCFS         Ensure no binary zeroes in output            
         AHI   RE,1                                                             
         ST    RE,LP_OLEN                                                       
         J     EXITY                                                            
         DROP  R7                                                               
                                                                                
GSWORKD  DSECT ,                   ** GOSOFT local w/s **                       
GSITYPE  DS    XL(L'SOFITYPE)      Extracted input type                         
GSOTYPE  DS    XL(L'SOFOTYPE)      Extracted output type                        
GSFIELDL DS    0X                  L'field header+L'input field                 
GSFIELDH DS    XL8                 Dummy field header                           
GSFIELD  DS    CL80                Dummy field                                  
GSSOFBLK DS    XL(SOFDATL)         SOFDAT block                                 
GSWORKL  EQU   *-GSWORKD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Build a record from data in the work map pool                       *         
*                                                                     *         
* Ntry:- R1=Call type - see BRxxxQ equates below                      *         
*        R4=Where to add next element if call type=BRUPUQ             *         
***********************************************************************         
                                                                                
BRREQQ   EQU   0                   Build download request record                
BRUPNQ   EQU   1                   Build new upload record                      
BRUPUQ   EQU   2                   Update existing upload record                
BRUPRQ   EQU   3                   Build upload request record                  
                                                                                
BREQ     NTR1  LABEL=*                                                          
         STC   R1,BRCALL           Save calling type                            
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(save values)                            
         MVC   HALF1,NULLS         Set no spare used                            
         L     RF,AWRKBLK                                                       
         L     RF,WRKIAREC-WRKIOD(RF)                                           
         SR    RE,RE                                                            
         ICM   RE,3,LP_RECL        Test caller provided record size             
         JNZ   *+8                                                              
         ICM   RE,3,LP_WMPL        Test caller provided WMP size                
         JNZ   *+8                                                              
         LHI   RE,FOURK            4K is the default                            
         AR    RE,RF               Point to end of request record               
         ST    RE,AWRKRECX                                                      
                                                                                
         USING LQ_D,R4             Point to request record                      
         CLI   BRCALL,BRUPUQ       Test updating existing record                
         JE    *+12                                                             
         LA    R4,4(RF)            Point to start of record                     
         J     BREQ0002                                                         
         MVC   HALF1,LQ_LN         Set current amount of spare                  
         ST    R4,FULL             and save current record pointer              
                                                                                
BREQ0002 CLI   BRCALL,BRREQQ       Test download request                        
         JE    *+12                                                             
         CLI   BRCALL,BRUPRQ       Test upload request                          
         JNE   BREQ0080                                                         
         TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   BREQ0030                                                         
                                                                                
         MVC   LQ_D(LQ_LNVQ),NULLS                                              
         MVI   LQ_EL,LQ_CTRLQ      Build a control element                      
         LHI   R0,LQ_LNVQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_CVAL,LP_CVAL     Set control values                           
         MVC   LQ_OPTS,LP_OPTS     Set options                                  
         MVC   LQ_RECL,LP_RECL     Set WKFILE record length                     
         MVC   LQ_QVALS,LP_QVALS   Set request parameters                       
         AR    R4,R0                                                            
                                                                                
         GOTOR GETSEC,0            Establish security settings                  
         JZ    BREQ0010                                                         
         MVI   LQ_EL,LQ_SECVQ      Build security element                       
         LHI   R0,LQ_LN1Q+L'SECOVALS+L'SECOAGPE                                 
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_DATA(L'SECOVALS),WORK                                         
         MVC   LQ_DATA+L'SECOVALS(L'SECOAGPE),WORK+L'SECOVALS                   
         AR    R4,R0                                                            
                                                                                
BREQ0010 MVC   LQ_D(LQ_LNLQ),NULLS Build terminal VTAM LUID element             
         MVI   LQ_EL,LQ_LUIDQ                                                   
         LHI   R0,LQ_LNLQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_LUID,LP_LUID                                                  
         AR    R4,R0                                                            
                                                                                
         L     RF,LP_ACOM          Build FACPAK extra info element              
         L     RF,CXTRAINF-COMFACSD(RF)                                         
         MVI   LQ_EL,LQ_FAXIQ                                                   
         LHI   R0,LQ_LNFXQ                                                      
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_FAXI,0(RF)                                                    
         AR    R4,R0                                                            
                                                                                
         CLC   LP_XPINF,NULLS      Test program extra info resolved             
         JE    BREQ0020                                                         
         MVC   LQ_D(LQ_LNXQ),NULLS Build program extra info element             
         MVI   LQ_EL,LQ_XINFQ                                                   
         LHI   R0,LQ_LNXQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_XINFO,LP_XPINF                                                
         AR    R4,R0                                                            
                                                                                
BREQ0020 MVC   LQ_D(LQ_LNOSQ),NULLS Build original SIN element                  
         MVI   LQ_EL,LQ_OSINQ                                                   
         LHI   R0,LQ_LNOSQ                                                      
         STCM  R0,3,LQ_LN                                                       
         GOTOR GETFACT,DMCB,(X'80',LP_OSIN),F#OSIGET                            
         MVC   LQ_OSIN,LP_OSIN                                                  
         AR    R4,R0                                                            
                                                                                
         CLC   LP_MQQUE,NULLS      Test MQ header value present                 
         JE    BREQ0030                                                         
         MVI   LQ_EL,LQ_MQRDQ                                                   
         LHI   R0,LQ_MQL1Q                                                      
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_MQQUE,LP_MQQUE                                                
         CLC   LP_MQKEY,NULLS      Ensure we have been given a key too          
         JE    DEATH218                                                         
         MVC   LQ_MQKEY,LP_MQKEY                                                
         AR    R4,R0                                                            
                                                                                
BREQ0030 CLC   LP_MQSVR,NULLS      Test external service call present           
         JE    BREQ0040                                                         
         MVI   LQ_EL,LQ_XSVRQ                                                   
         LHI   R0,LQ_XSLNQ                                                      
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_XSSVR,LP_MQSVR                                                
         MVC   LQ_XSRKV,LP_MQRKV                                                
         AR    R4,R0                                                            
                                                                                
BREQ0040 CLC   LP_LKEYS(LP_LKEYL),NULLS                                         
         JE    BREQ0050                                                         
         MVI   LQ_EL,LQ_LKEYQ                                                   
         LHI   R0,LQ_LKLNQ                                                      
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_LKEYS,LP_LKEYS                                                
         AR    R4,R0                                                            
                                                                                
BREQ0050 CLC   LP_RQKEY,NULLS                                                   
         JE    BREQ0060                                                         
         MVI   LQ_EL,LQ_RQKYQ                                                   
         LHI   R0,LQ_RQLNQ                                                      
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_RQKEY,LP_RQKEY                                                
         AR    R4,R0                                                            
                                                                                
BREQ0060 CLI   LS_SMFF#,0          Test any SMF data fields                     
         JZ    BREQ0070                                                         
         MVI   LQ_EL,LQ_SMFFQ                                                   
         LLC   RF,LS_SMFF#                                                      
         STC   RF,LQ_SMFF#                                                      
         MHI   RF,L'LS_SMFF                                                     
         BCTR  RF,0                                                             
         EX    RF,BREQMVQS                                                      
         AHI   RF,LQ_SMFLQ+1                                                    
         STCM  RF,3,LQ_LN                                                       
         AR    R4,RF                                                            
                                                                                
BREQ0070 TM    RSVRIND1,RSVRSEGS   Test segmented files allowed                 
         JZ    BREQ0080                                                         
         MVC   LQ_D(LQ_LNFQ),NULLS                                              
         MVI   LQ_EL,LQ_FSEGQ      Build file pointer element                   
         LHI   R0,LQ_LNFQ                                                       
         STCM  R0,3,LQ_LN                                                       
         AR    R4,R0                                                            
                                                                                
BREQ0080 CLC   LP_YMASK(L'LP_YMASK+L'LP_NMASK),NULLS                            
         JE    BREQ0090                                                         
         MVI   LQ_EL,LQ_MASKQ      Build request mask element                   
         MVC   LQ_MASK,LP_YMASK                                                 
         LHI   R0,LQ_LNMQ                                                       
         STCM  R0,3,LQ_LN                                                       
         AR    R4,R0                                                            
                                                                                
BREQ0090 CLI   BRCALL,BRUPRQ       Test upload request                          
         JE    BREQ0240                                                         
         CLI   BRCALL,BRREQQ       Test download request                        
         JNE   BREQ0120                                                         
         TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   BREQ0120                                                         
                                                                                
         MVI   LQ_EL,LQ_RSTAQ      Build run statistics element                 
         LHI   R0,LQ_LNRQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_RSTA,NULLS                                                    
         AR    R4,R0                                                            
                                                                                
         CLI   LS_CINDS,0          Test any run commands to send                
         JE    BREQ0120                                                         
         LARL  R2,CMDTAB                                                        
         USING CMDTABD,R2                                                       
BREQ0100 CLI   CMDTABD,CMDTEOTQ    Test end of table                            
         JE    BREQ0120                                                         
         CLI   CMDTDISP,LS_CINDS-LS_D                                           
         JNE   BREQ0110            Only interested in run commands              
         MVC   BYTE1,LS_CINDS                                                   
         NC    BYTE1,CMDTOBIT                                                   
         CLC   BYTE1,CMDTOBIT                                                   
         JNE   BREQ0110                                                         
         MVI   LQ_EL,LQ_CMNDQ      Build a command element                      
         MVC   LQ_CMND(L'CMDTTEXT),CMDTTEXT                                     
         LA    RE,LQ_CMND+L'CMDTTEXT-1                                          
         CLI   0(RE),SPACEQ                                                     
         JNE   *+8                                                              
         JCT   RE,*-8                                                           
         AHI   RE,1                                                             
         SR    RE,R4                                                            
         STCM  RE,3,LQ_LN          Set length of command element                
         AR    R4,RE               Point to next output element                 
BREQ0110 AHI   R2,CMDTABL          Bump to next run command entry               
         J     BREQ0100                                                         
         DROP  R2                                                               
                                                                                
BREQ0120 TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JZ    BREQ0130                                                         
         MVI   LQ_EL,LQ_QINFQ      Yes - build request info element             
         MVC   LQ_QFLDR,FOLDER                                                  
         MVC   LQ_QRQST,REQUEST                                                 
         LHI   RE,LQ_LNQQ                                                       
         STCM  RE,3,LQ_LN                                                       
         AR    R4,RE                                                            
                                                                                
         CLI   REQINFOL,0          Test request info present                    
         JE    BREQ0130                                                         
         MVI   LQ_EL,LQ_DESCQ      Yes - build description element              
         LLC   RE,REQINFOL                                                      
         BCTR  RE,0                                                             
         EX    RE,BREQMVQI                                                      
         AHI   RE,LQ_LN1Q+1                                                     
         STCM  RE,3,LQ_LN                                                       
         AR    R4,RE                                                            
         J     BREQ0130                                                         
                                                                                
BREQ0130 L     R2,AWMP             Build request elements                       
         USING LW_D,R2                                                          
                                                                                
BREQ0140 CLC   LW_CODE,NULLS       Test end of work data                        
         JE    BREQ0170                                                         
         CLI   LW_TYPE,LW_TMAPQ    Test map entry                               
         JNE   BREQ0150                                                         
         MVI   LQ_EL,LQ_IMAPQ      Build map element                            
         LHI   R0,LQ_LNIQ                                                       
         STCM  R0,3,LQ_LN                                                       
         MVC   LQ_IMAPN,LW_CODE                                                 
         J     BREQ0160                                                         
                                                                                
BREQ0150 MVI   LQ_EL,LQ_RQSTQ      Set request details                          
         MVC   LQ_DCODE,LW_CODE                                                 
         MVC   LQ_TYPE,LW_TYPE                                                  
         LLH   R1,LW_LN                                                         
         SHI   R1,LW_LN1Q          R1=L'data to be moved                        
         JM    DEATH219                                                         
                                                                                
         ST    R1,SAVER1                                                        
         LA    R0,LQ_VALUE                                                      
         AR    R1,R0                                                            
         C     R1,AWRKRECX                                                      
         JH    DEATH220                                                         
         L     R1,SAVER1                                                        
         LA    RE,LW_DATA1                                                      
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         L     R1,SAVER1                                                        
                                                                                
         AHI   R1,LQ_LN2Q          R1=total length of element                   
         STCM  R1,3,LQ_LN                                                       
                                                                                
BREQ0160 LLH   R1,LW_LN                                                         
         AR    R2,R1               Bump to next input element                   
         LLH   R1,LQ_LN                                                         
         AR    R4,R1               Bump to next output element                  
         J     BREQ0140                                                         
                                                                                
BREQ0170 TM    INDQBTCH,INDSBTCH   Test off-line batch mode                     
         JNZ   BREQ0240                                                         
         CLI   BRCALL,BRREQQ       Test upload file                             
         JE    BREQ0220                                                         
                                                                                
         SR    RF,RF                                                            
         TM    INDQUPLI,INDSUPLI   Test general upload interface active         
         JNZ   *+12                                                             
         ICM   RF,3,RSVRIBLK       Yes - test interface block present           
         JZ    BREQ0220                                                         
                                                                                
         TM    LP_RUNI1,LP_RGLBQ   Test upload in another task                  
         JNZ   BREQ0180                                                         
         LR    R1,RF               No - RSVRIBLK=length of return area          
         J     BREQ0200                                                         
                                                                                
BREQ0180 TM    INDQUPLI,INDSUPLI   Test general upload interface active         
         JZ    BREQ0190                                                         
         LHI   R1,3500             Test mode record size                        
         TM    INDQTEST,INDSTEST                                                
         JNZ   *+8                                                              
         LHI   R1,500              Live mode return length                      
         J     BREQ0200                                                         
                                                                                
BREQ0190 A     RF,LP_ASVR                                                       
         SR    R1,R1               Get length of record                         
         ICM   R1,3,LI_RLEN-LI_D(RF)                                            
         JZ    BREQ0220                                                         
                                                                                
BREQ0200 MVI   LQ_EL,LQ_RDATQ      Build return values element                  
         CLC   HALF1,NULLS         Test any spare used                          
         JE    BREQ0210            (will only be set for append)                
         LA    RF,LQ_D                                                          
         S     RF,FULL             RF=amount used this time                     
         LH    R1,HALF1            R1=saved spare amount                        
         SR    R1,RF               Subtract what we have just used              
         SHI   R1,LQ_LN1Q                                                       
         JM    DEATH221                                                         
                                                                                
BREQ0210 LA    RF,LQ_LN1Q(R1)                                                   
         STCM  RF,3,LQ_LN          Set element length                           
         LA    R0,LQ_DATA                                                       
         AR    R4,RF               Point to end of record                       
         SR    RF,RF                                                            
         MVCL  R0,RE               Clear area for returned data                 
                                                                                
BREQ0220 TM    LP_RUNI2,LP_RSASQ+LP_RRASQ                                       
         JZ    BREQ0240                                                         
         JO    DEATH222                                                         
         SR    RF,RF                                                            
         ICM   RF,3,RSVRSBLK       No - test save block defined                 
         JZ    DEATH223                                                         
         A     RF,LP_ASVR                                                       
         SR    R1,R1               Yes - get length of saved data               
         ICM   R1,3,LA_DLEN-LA_D(RF)                                            
         JZ    DEATH224                                                         
         MVI   LQ_EL,LQ_SAVEQ      Build save data element (receive)            
         LA    RF,LQ_LN1Q(R1)                                                   
         STCM  RF,3,LQ_LN          Set element length                           
         LA    R0,LQ_DATA                                                       
         SR    RE,RE                                                            
         SR    RF,RF                                                            
         TM    LP_RUNI2,LP_RRASQ   Test restore application data (send)         
         JZ    BREQ0230                                                         
         MVI   LQ_EL,LQ_RESTQ      Yes - build restore data element             
         LLH   RE,LP_DSAVE                                                      
         A     RE,LP_ATWA                                                       
         LR    RF,R1               and set length from block                    
BREQ0230 MVCL  R0,RE               Clear/set saved data                         
         LLH   R0,LQ_LN                                                         
         AR    R4,R0               Point to end of record                       
                                                                                
BREQ0240 MVI   0(R4),0             Set end of record                            
         AHI   R4,1                                                             
         C     R4,AWRKRECX                                                      
         JH    DEATH225                                                         
         L     RE,AWRKBLK                                                       
         L     RE,WRKIAREC-WRKIOD(RE)                                           
         SR    R4,RE                                                            
         SLL   R4,16                                                            
         STCM  R4,15,0(RE)         Set record length                            
                                                                                
BREQX    J     EXITY                                                            
         DROP  R2,R3,R4                                                         
         EJECT                                                                  
***********************************************************************         
* Routine to look up messages                                         *         
***********************************************************************         
                                                                                
GETMSG   NTR1  LABEL=*                                                          
         LR    R0,R1                                                            
         LA    R1,WORK                                                          
         USING GETTXTD,R1                                                       
         MVC   GTBLOCK,NULLS                                                    
         L     R2,LP_ATWA                                                       
         USING TWAD,R2                                                          
         MVI   GTMAXL,L'TWAMSG                                                  
         LA    RE,TWAMSG                                                        
         STCM  RE,7,GTAOUT                                                      
         STCM  R0,B'1000',GTMSYS   Set message system                           
         STCM  R0,B'0100',GTMTYP   Set message type                             
         STCM  R0,B'0011',GTMSGNO  Set message number                           
         CLI   GTMSYS,0                                                         
         JNE   *+8                                                              
         MVI   GTMSYS,FF           Set default message system                   
         CLI   GTMTYP,0                                                         
         JNE   *+8                                                              
         MVI   GTMTYP,GTMINF       Default type is information                  
         OI    GT1INDS,GT1OWRK                                                  
         GOTOR GETTXT,(R1)                                                      
         OI    TWAMSGH+(FLDOIND-FLDLEN),FOUTTRN                                 
         J     EXIT                                                             
         DROP  R1,R2                                                            
         EJECT                                                                  
***********************************************************************         
* Download the request details                                        *         
***********************************************************************         
                                                                                
SENREQ   NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(save area)                              
         MVC   PUTROUTS(PUTROUTL),0(R1)                                         
         MVC   FPTHISEL,NULLS                                                   
         L     RF,LP_AFBLK         Set don't send data type                     
         OI    FALAINDS-FALINKD(RF),FALAINDT                                    
                                                                                
         SR    R0,R0                                                            
SENREQ02 AHI   R0,1                Bump to next map entry number                
         GOTOR GETMAP,(R0)         Get map entry                                
         JNE   SENREQ08                                                         
         LR    R6,RF                                                            
         USING LD_D,R6                                                          
         GOTOR GETIDP              Get data from pool                           
         JE    SENREQ02                                                         
         CLC   FPTHISEL,LP_CMAPN   Test change of map code                      
         JE    SENREQ04                                                         
         MVC   FPTHISEL,LP_CMAPN                                                
         GOTOR FNDELH,FPTHISEL                                                  
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),FPTHISEL                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
                                                                                
SENREQ04 GOTOR FNDDTA,LD_CODE      Send data component                          
         MVC   LF_DLEN-LF_D(,RF),WORK                                           
         CLI   LD_TYPE,LD_VSTRQ    Test variable string input                   
         JNE   SENREQ06                                                         
         CLI   WORK,1              Test 1 byte input length                     
         JNE   SENREQ06                                                         
         CLI   WORK+1,MAPONLYQ     Test want to send map only                   
         JNE   SENREQ06                                                         
         MVI   WORK+1,SPACEQ       Yes - set output value to a space            
SENREQ06 GOTOR ADDDATA,DMCB,LP_AFBLK,(RF),WORK+1,0                              
         J     SENREQ02                                                         
                                                                                
SENREQ08 CLC   FPTHISEL,NULLS      Test nothing sent                            
         JNE   SENREQ10                                                         
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),LP_CMAPN                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
                                                                                
SENREQ10 GOTOR ADDDATA,DMCB,LP_AFBLK,FALADNE,FALADNE,0                          
                                                                                
SENREQX  J     EXITY                                                            
         DROP  R3,R6                                                            
         EJECT                                                                  
***********************************************************************         
* Help for action field                                               *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
FAHELP   OI    LS_IIND1,LS_IACTV   Set interface active                         
         LARL  R2,ACTTXT           Point to action help text                    
         CLI   LT_COPTN,LT_CCMDQ                                                
         JNE   *+10                                                             
         LARL  R2,OPTTXT           or interface option help text                
         GOTOR BLDHDR,LT_CHLPQ                                                  
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWAHELPD,RF         RF=A(first build row)                        
         MVI   LS_BFLST,0                                                       
                                                                                
FAHELP02 LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         MVC   TWAHELPD(TWAHELPL),NULLS                                         
         MVI   TWAHELH+(FLDLEN-FLDHDRD),TWAHELPL                                
         MVI   TWAHELH+(FLDATB-FLDHDRD),FATBHIGH+FATBLC+FATBPROT                
         MVI   TWAHELH+(FLDOIND-FLDHDRD),FOUTTRN                                
         MVC   TWAHELT,0(R2)                                                    
         LA    R0,TWAHELCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWAHELH+(FLDADR-FLDHDRD)                                    
         AHI   RF,TWAHELPL                                                      
         AHI   R2,L'ACTTXT                                                      
         CLI   0(R2),0                                                          
         JE    FAHELP04                                                         
                                                                                
         C     RF,AENDTWA          Test TWA full                                
         JNL   FAHELP04                                                         
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JNH   FAHELP02                                                         
                                                                                
FAHELP04 GOTOR BLDPFK              Build PfKey line                             
         GOTOR GETMSG,GI#SELIT     Look up information message                  
         J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Request job status                                                  *         
*                                                                     *         
* RC - to cancel running work (returns 'RC' as confirmation)          *         
* R? - returns job status or downloads first data buffer if ready     *         
* RE - returns job status or downloads in expanded format             *         
* RS - returns job statistics                                         *         
***********************************************************************         
                                                                                
FAJS     OI    LT_COPTN,C' '       Ensure option is upper case                  
         CLI   LT_COPTN,LT_CANCQ   Test work to be cancelled                    
         JNE   FAJS02                                                           
         GOTOR CANWRK              Yes - call cancel work routine               
         L     RE,LP_ATWA                                                       
         MVC   TWAMSG-TWAD(,RE),NULLS                                           
         GOTOR LP_AFALK,LP_AFBLK                                                
         MVI   LT_CACTN,LT_CSTAQ   and return cancel confirmation               
         MVI   LT_COPTN,LT_CANCQ                                                
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTCUR+FOUTTRN                        
         J     EXIT                                                             
                                                                                
FAJS02   L     R5,AWRKBLK          Point to input worker file block             
         USING WRKIOD,R5                                                        
         TM    LS_WFLAG,LS_WFBRK   Test break on full last time                 
         JNZ   FAJS10                                                           
                                                                                
         LA    R4,LS_WQUE          R4=A(work queue)                             
         MVC   WORK(1),LS_WFLAG                                                 
         NI    WORK,LS_WFCNT                                                    
         SR    R0,R0                                                            
         ICM   R0,1,WORK           R0=number of work queue entries              
         JZ    DEATH226                                                         
         GOTOR PROTOFF                                                          
                                                                                
FAJS04   CLC   0(LS_WQUEL,R4),NULLS                                             
         JE    FAJS12              Ignore sent entries                          
         MVC   WRKWKEY,LS_WKEY1-LS_WQUE(R4)                                     
                                                                                
         LAM   AR2,AR2,LP_TALET                                                 
         ICM   R2,15,LS_AQUE1-LS_WQUE(R4)                                       
         JZ    DEATH227                                                         
         SAC   512                                                              
         USING TABSQUED,R2         R2=A(dataspace work queue entry)             
         SR    R1,R1                                                            
         CLI   TQSTATUS,TQSPEND    Test send file pending                       
         JE    *+12                                                             
         CLI   TQSTATUS,TQSDONE    or work is complete                          
         JNE   FAJS12                                                           
         CLI   LT_COPTN,LT_CJSTQ   Test job statistics wanted                   
         JE    FAJS06                                                           
         CLI   TQSTATUS,TQSDONE    Test work completed                          
         JNE   FAJS06                                                           
         IC    R1,TQERROR          Yes - extract completion code                
                                                                                
FAJS06   SAC   0                   Back to normal addressing mode               
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
                                                                                
         LTR   R1,R1               Test good completion code                    
         JZ    FAJS08                                                           
         GOTOR CANWRK              Cancel any outstanding work                  
         GOTOR FAGENERR,G#BASE(R1) and return appropriate error                 
         DROP  R2                                                               
                                                                                
FAJS08   MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the worker file                         
         JNE   FAJSERR                                                          
         GOTOR WRKIO,(R1)          Read the first record                        
         JNE   FAJSERR                                                          
                                                                                
         L     R1,WRKIABUF         Look to see if job is complete               
         USING W_INDEX,R1                                                       
         TM    W_ATTB,W_ATERR      Test request in error (abended)              
         JZ    FAJS082                                                          
         GOTOR CANWRK              Cancel any oustanding work                   
         GOTOR FAGENERR,TQEPCHK+G#BASE                                          
                                                                                
FAJS082  CLI   W_STAT,W_STSE+W_STKE                                             
         JE    *+12                                                             
         CLI   W_STAT,W_STAC+W_STKE                                             
         JNE   FAJSERR                                                          
                                                                                
         MVC   LS_AQUE,LS_AQUE1-LS_WQUE(R4)                                     
         MVC   LS_WKEY,LS_WKEY1-LS_WQUE(R4)                                     
         MVC   LS_WLLID,NULLS                                                   
         L     R1,WRKIAREC                                                      
         AHI   R1,4                                                             
         USING LQ_D,R1                                                          
         CLI   LQ_EL,LQ_CTRLQ      Extract control info from request            
         JNE   DEATH228                                                         
         MVC   LP_CVAL,LQ_CVAL     Set control values                           
         MVC   LP_OPTS,LQ_OPTS     Set options                                  
         MVC   LS_QMAPN,LP_QMAPN   Save request map number                      
         CLI   LT_COPTN,LT_CJSTQ   Test job statistics wanted                   
         JE    FAJS16                                                           
                                                                                
         MVC   BYTE1,LT_COPTN      Save format option                           
         L     RE,LP_ATWA          Test FALINK is initialized                   
         CLC   FALKID,TWAMSG-TWAD(RE)                                           
         JE    FAJS10                                                           
         GOTOR LP_AFALK,LP_AFBLK   No - call FALINK to do it                    
                                                                                
FAJS10   MVC   LT_CACTN(64),NULLS                                               
         MVI   LT_CACTN,LT_CADLQ   Set action to download                       
         MVI   LT_COPTN,SPACEQ                                                  
         CLI   BYTE1,LT_COXDQ      Test want expanded download                  
         JNE   *+8                                                              
         MVI   LT_COPTN,LT_COXDQ                                                
         MVI   LT_CCTRL,LT_CCFTQ                                                
         MVI   LT_CMORE,LT_CMNMQ                                                
         MVC   SAVEWKEY,LS_WKEY    Save worker key for send routine             
         J     FALK0090                                                         
                                                                                
FAJS12   SAC   0                   Back to normal addressing mode               
         LAM   AR2,AR2,ARZERO                                                   
         AHI   R4,LS_WQUEL         Bump to next work queue entry                
         JCT   R0,FAJS04           Do for number of entries                     
         GOTOR PROTON                                                           
                                                                                
FAJSRN   CLI   LS_FAVER,VERSION5   Test PC comms version 5 or greater           
         JL    *+12                                                             
         TM    LS_WFLAG,LS_WFSEG   Test segmented files                         
         JNZ   FAJS14                                                           
         MVC   LT_CTRL(60),NULLS                                                
         MVI   LT_CACTN,LT_CSTAQ                                                
         MVI   LT_COPTN,LT_CJNCQ   Set job not complete                         
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTCUR+FOUTTRN                        
         J     EXITY                                                            
                                                                                
FAJS14   L     RE,LP_ATWA          For asynchronous downloads                   
         MVC   TWAMSG-TWAD(,RE),NULLS                                           
         GOTOR LP_AFALK,LP_AFBLK   Return a clean screen                        
         L     RE,LP_ATWA                                                       
         MVC   TWAMSG+13-TWAD(L'ASYNCHWK,RE),ASYNCHWK                           
         MVC   LT_CTRL(60),NULLS                                                
         MVI   LT_CACTN,LT_CSTAQ                                                
         MVI   LT_COPTN,LT_CJNCQ   with job not complete                        
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTCUR+FOUTTRN                        
         J     EXITY                                                            
                                                                                
FAJS16   OI    LS_IIND1,LS_IACTV   Set interface active                         
         LLH   R0,LQ_LN            Locate run statistics element                
         AR    R1,R0                                                            
         CLI   LQ_EL,0                                                          
         JE    DEATH229                                                         
         CLI   LQ_EL,LQ_RSTAQ                                                   
         JNE   FAJS16                                                           
         MVC   WORK2(L'LQ_RSTA),LQ_RSTA                                         
         L     R0,WORK2+(RSTRTIM-RVALUES)                                       
         SL    R0,WORK2+(RARRTIM-RVALUES)                                       
         ST    R0,WORK2+(RQUETIM-RVALUES)                                       
         L     R0,WORK2+(RENDTIM-RVALUES)                                       
         SL    R0,WORK2+(RARRTIM-RVALUES)                                       
         ST    R0,WORK2+(RTOTTIM-RVALUES)                                       
                                                                                
         GOTOR BLDHDR,0                                                         
                                                                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWASTATD,RF         RF=A(first build row)                        
                                                                                
         LARL  R2,STATAB                                                        
         USING STATABD,R2                                                       
FAJS18   MVC   TWASTATD(TWASTATL),NULLS                                         
         MVI   TWASTAH+(FLDLEN-FLDHDRD),TWASTATL                                
         MVI   TWASTAH+(FLDATB-FLDHDRD),FATBPROT+FATBLC+FATBHIGH                
         MVI   TWASTAH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LA    R0,TWASTACQ(RE)     R0=absolute address                          
         STCM  R0,3,TWASTAH+(FLDADR-FLDHDRD)                                    
                                                                                
         MVC   TWASTAT,STATTEXT                                                 
         STM   RE,R1,SAVERE                                                     
         LLC   R1,STATDISP                                                      
         L     R0,WORK2(R1)                                                     
         TM    STATTYPE,STATTTIM   Test this is a time value                    
         JZ    FAJS20                                                           
         GOTOR EDTTUS,TWASTAV                                                   
         J     FAJS22                                                           
                                                                                
FAJS20   CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         MVC   BYTE1,STATTYPE                                                   
         NI    BYTE1,STATOLEN                                                   
         LLC   R1,BYTE1                                                         
         BCTR  R1,0                                                             
         SLL   R1,4                                                             
         EX    R1,FAJSUPTD                                                      
                                                                                
FAJS22   LM    RE,R1,SAVERE                                                     
         AHI   RF,TWASTATL                                                      
         AHI   R2,STATABL                                                       
         CLI   STATABD,STATEOTQ                                                 
         JE    FAJS24                                                           
                                                                                
         C     RF,AENDTWA          Test TWA full                                
         JNL   FAJS24                                                           
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JNH   FAJS18                                                           
                                                                                
FAJS24   GOTOR BLDPFK              Build PfKey line                             
         GOTOR GETMSG,GI#RSTAT     Look up information message                  
         J     EXITY                                                            
                                                                                
FAJSERR  SAC   0                   Back to normal addressing mode               
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR CANWRK              Cancel any outstanding work                  
         MVC   LT_CTRL(L'ERRD),ERRD                                             
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTTRN                                
         J     EXITY                                                            
         DROP  R1,R2,R5                                                         
         EJECT                                                                  
***********************************************************************         
* Enter commands                                                      *         
***********************************************************************         
                                                                                
FAEC     OI    LS_IIND1,LS_IACTV   Set interface active                         
         OC    LT_CACTN(68),SPACES                                              
         LLC   R1,LT_CHDR+(FLDILEN-FLDHDRD)                                     
         LA    R1,LT_CTRL-1(R1)                                                 
         CLI   0(R1),SPACEQ                                                     
         JH    FAEC01                                                           
         JCT   R1,*-8                                                           
         J     DEATH230                                                         
                                                                                
FAEC01   LA    RF,LT_CACTN+L'LT_CACTN                                           
         CLI   LT_CACTN,LT_CCMDQ                                                
         JE    *+8                                                              
         LA    RF,LT_COPTN+L'LT_COPTN                                           
         SR    R1,RF                                                            
         JM    FAECERR                                                          
         CHI   R1,L'CMDTTEXT-1                                                  
         JNH   *+8                                                              
         LHI   R1,L'CMDTTEXT-1                                                  
                                                                                
         LARL  R2,CMDTAB                                                        
         USING CMDTABD,R2                                                       
FAEC02   CLI   CMDTABD,CMDTEOTQ    Test end of table                            
         JE    FAECERR                                                          
         EX    R1,FAECCLCF         Match input to table text                    
         JE    *+12                                                             
         AHI   R2,CMDTABL          No match - bump to next                      
         J     FAEC02                                                           
                                                                                
         LLC   R1,CMDTDISP         R1=displacement to byte in LS_D              
         LA    R1,LS_D(R1)                                                      
         NC    0(1,R1),CMDTABIT                                                 
         OC    0(1,R1),CMDTOBIT                                                 
         CLI   LT_CACTN,LT_CCMDQ   Test action is set command                   
         JNE   FAEC04                                                           
         MVC   0(L'CMDTTEXT,RF),CMDTTEXT                                        
         J     FAECX                                                            
                                                                                
FAEC04   BCTR  RF,0                Remove the option                            
         MVI   0(RF),C' '                                                       
         J     FALK0060            and process the action                       
                                                                                
FAECERR  MVI   LT_CACTN,LT_CERRQ                                                
                                                                                
FAECX    LA    RF,LT_CHDR          Re-transmit entire screen                    
         SR    R0,R0               (stops line 2 being protected)               
FAECX2   OI    FLDOIND-FLDHDRD(RF),FOUTTRN                                      
         ICM   R0,1,FLDLEN-FLDHDRD(RF)                                          
         JZ    EXIT                                                             
         AR    RF,R0                                                            
         J     FAECX2                                                           
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Send command(s) to RUNNER                                           *         
***********************************************************************         
                                                                                
FASC     OI    LS_IIND1,LS_IACTV   Set interface active                         
         TM    LS_BMODE,LS_BMSSI   Test select mode valid                       
         JZ    FASC12                                                           
         CLI   PFKEY,PFKSELQ       Test select PfKey used                       
         JNE   FASC30                                                           
                                                                                
         CLC   CURDISP,NULLS       Test select within a field                   
         JE    FASC30                                                           
         CLC   CURDISP,LS_BFDSP    Test select within display screen            
         JL    FASC30                                                           
         CLC   CURDISP,LS_BEDSP                                                 
         JH    FASC30                                                           
                                                                                
         LLH   RF,CURDISP                                                       
         A     RF,LP_ATWA                                                       
         USING TWASVRSD,RF         RF=A(selected item)                          
         LLH   RE,LS_BFDSP                                                      
         A     RE,LP_ATWA                                                       
         LLC   R0,LS_BFMAX         Loop for maximum on screen                   
         AHI   R0,1                                                             
                                                                                
FASC02   CR    RE,RF               Position to field on screen                  
         JE    FASC04                                                           
         AHI   RE,TWASVRSL                                                      
         JCT   R0,FASC02                                                        
         J     DEATH231                                                         
                                                                                
FASC04   STM   RE,R1,SAVERE                                                     
         GOTOR RUNIT,DMCB,(TWASVRTY,0),0,TWASVRJB                               
         LM    RE,R1,SAVERE                                                     
         JE    FASC06                                                           
         LLC   R1,DMCB                                                          
         GOTOR FAGENERR,G#BASE(R1)                                              
                                                                                
FASC06   MVC   LS_SVRTY,TWASVRTY   Save server type & job name                  
         MVC   LS_SVRJB,TWASVRJB                                                
         GOTOR BLDHDR,LT_CASCQ                                                  
                                                                                
         USING TWAHEDLD,RF         Build headline                               
         MVC   TWAHEDT+2(L'DATA),DATA                                           
         MVC   TWAHEDT+30(L'LS_SVRJB),LS_SVRJB                                  
                                                                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWACMDED,RF         RF=A(first build row)                        
         MVI   LS_BFLST,0                                                       
                                                                                
FASC08   LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         MVC   TWACMDED(TWACMDEL),NULLS                                         
         MVI   TWACMDH+(FLDLEN-FLDHDRD),TWACMDEL                                
         MVI   TWACMDH+(FLDATB-FLDHDRD),FATBHIGH                                
         MVI   TWACMDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         MVC   TWACMDT,SPACES                                                   
         LA    R0,TWACMDCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWACMDH+(FLDADR-FLDHDRD)                                    
                                                                                
         AHI   RF,TWACMDEL                                                      
         C     RF,AENDTWA          Test TWA full                                
         JNL   FASC10                                                           
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JNH   FASC08                                                           
                                                                                
FASC10   MVI   LS_BMODE,LS_BMECD+LS_BMRUN                                       
         MVI   LP_RUNI1,LP_RDSCQ                                                
         GOTOR BLDPFK              Build PfKey line                             
         GOTOR GETMSG,GI#ENTPS     Look up information message                  
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         OI    TWACMDH+(FLDOIND-FLDHDRD),FOUTCUR                                
         MVI   TWACMDT,HELPQ                                                    
         J     EXITY                                                            
                                                                                
FASC12   TM    LS_BMODE,LS_BMECD   Test enter command data is set               
         JZ    FASC30                                                           
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWACMDED,RF         RF=A(first build row)                        
                                                                                
         CLI   TWACMDT,HELPQ       Test user wants help                         
         JNE   FASC18                                                           
         OI    TWACMDH+(FLDOIND-FLDHDRD),FOUTCUR                                
         LARL  RE,CMDTXT                                                        
         LLC   R0,LS_BFLST                                                      
FASC14   CLI   0(RE),0                                                          
         JE    FASC16                                                           
         MVC   TWACMDT,0(RE)                                                    
         OI    TWACMDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         AHI   RF,TWACMDEL                                                      
         AHI   RE,L'CMDTXT                                                      
         JCT   R0,FASC14                                                        
         J     EXITY                                                            
FASC16   MVC   TWACMDT,SPACES                                                   
         OI    TWACMDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         AHI   RF,TWACMDEL                                                      
         JCT   R0,FASC14                                                        
         J     EXITY                                                            
         DROP  RF                                                               
                                                                                
FASC18   L     R2,AWRKBLK                                                       
         USING WRKIOD,R2                                                        
         MVI   WRKISTAT,0                                                       
                                                                                
         LLH   R6,LS_BFDSP                                                      
         A     R6,LP_ATWA                                                       
         USING TWACMDED,R6                                                      
         SR    R5,R5                                                            
                                                                                
FASC20   CLM   R5,1,LS_BFLST       Set first/last line numbers                  
         JH    FASC26                                                           
         CLI   TWACMDH+(FLDILEN-FLDHDRD),0                                      
         JE    FASC24                                                           
                                                                                
         CLI   PFKEY,PFKROFQ       Test run key entered                         
         JNE   FASC24                                                           
                                                                                
         TM    WRKISTAT,WRKISOPN   Test worker file is open                     
         JNZ   FASC22                                                           
         MVC   WRKINDX,NULLS       No - open it now                             
         MVC   WRKWUSID,DDSUID                                                  
         MVC   WRKWSYS(L'RUNCMD),RUNCMD                                         
         MVI   WRKWSPG,C'X'                                                     
         MVC   WRKWDAY,DAYTODAY                                                 
         MVI   WRKWCLS,C'X'                                                     
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIANEW                                                
         MVC   WRKLRETH,RETSERVE                                                
         GOTOR WRKIO,WRKIOD                                                     
         JE    FASC22                                                           
         GOTOR FAGENERR,GE#COWRK                                                
                                                                                
FASC22   L     R1,WRKIAREC                                                      
         AHI   R1,4                                                             
         USING LQ_D,R1             Build a command element                      
         MVI   LQ_EL,LQ_CMNDQ                                                   
         LLC   RE,TWACMDH+(FLDILEN-FLDHDRD)                                     
         BCTR  RE,0                                                             
         EX    RE,FASCMVQT                                                      
         AHI   RE,LQ_LN1Q+1                                                     
         STCM  RE,3,LQ_LN                                                       
         DROP  R1                                                               
         AR    RE,R1                                                            
         MVI   0(RE),0                                                          
         AHI   RE,1                                                             
         L     R1,WRKIAREC                                                      
         SR    RE,R1                                                            
         SLL   RE,16                                                            
         STCM  RE,15,0(R1)                                                      
         GOTOR WRKIO,WRKIOD                                                     
         JE    FASC24                                                           
         GOTOR FAGENERR,GE#CAREQ                                                
                                                                                
FASC24   AHI   R6,TWACMDEL         Bump to next screen line                     
         AHI   R5,1                                                             
         J     FASC20                                                           
         DROP  R6                                                               
                                                                                
FASC26   TM    WRKISTAT,WRKISOPN   Test worker file created                     
         JZ    EXITY                                                            
         MVI   WRKIACTN,WRKIACLO   Close worker file                            
         GOTOR WRKIO,WRKIOD                                                     
         JE    FASC28                                                           
         GOTOR FAGENERR,GE#CCWRK                                                
                                                                                
FASC28   MVI   LS_BMODE,0          Reset action mode                            
         GOTOR RUNIT,DMCB,(LS_SVRTY,WRKWKEY),0,LS_SVRJB                         
         JE    FASC30                                                           
         ICM   R1,8,0(R1)          Return RUNIT error                           
         SRL   R1,24                                                            
         GOTOR FAGENERR,G#BASE(R1)                                              
                                                                                
FASC30   MVC   BYTE2,LT_COPTN                                                   
         GOTOR BLDHDR,LT_CASCQ                                                  
         J     FASS02              Build server menu                            
         EJECT                                                                  
***********************************************************************         
* Clear work queue                                                    *         
***********************************************************************         
                                                                                
FACQ     GOTOR PROTOFF                                                          
         OI    LS_IIND1,LS_IACTV   Set interface active                         
         TIME  TU                                                               
         ST    R0,DUB              Save current time                            
         LAM   AR0,ARF,ARZERO                                                   
         LAM   AR2,AR2,LP_TALET                                                 
         SR    R2,R2                                                            
         SAC   512                                                              
         ICM   R2,15,TABSRUN-FATABSD(R2)                                        
         JZ    DEATH232                                                         
                                                                                
         USING TABSRUND,R2                                                      
         LLC   R0,TABSSRWD                                                      
         LLC   R1,TABSJBWD                                                      
         CLI   TABSIND1,TABSINEW                                                
         JE    *+12                                                             
         LHI   R0,TABSSVRL                                                      
         LHI   R1,TABSQUEL                                                      
         STH   R0,SVRWIDTH         Set width of server entry                    
         STH   R1,QUEWIDTH         Set width of queue entry                     
                                                                                
         SR    R0,R0                                                            
         ICM   R0,3,TABSNQUE       R0=N'queue entries                           
         JZ    DEATH233                                                         
                                                                                
         ICM   R2,15,TABSAQUE                                                   
         JZ    DEATH234                                                         
                                                                                
         USING TABSQUED,R2         R2=A(queue table)                            
FACQ02   CLI   TQERROR,0           Test any completion errors                   
         JE    FACQ04                                                           
         CLI   LT_COPTN,LT_CXCQQ   Yes - clear entry if '!!' input              
         JE    FACQ06                                                           
         J     FACQ08                                                           
                                                                                
FACQ04   CLI   LT_CCTRL,LT_CXCQQ   Clear all if '!!!' input                     
         JE    FACQ06                                                           
         CLC   TQATIME,DUB         Test job time greater than now               
         JNH   FACQ08              No - don't clear                             
                                                                                
FACQ06   MVC   TABSQUED(TABSQUEL),NULLS                                         
                                                                                
FACQ08   AH    R2,QUEWIDTH         Bump to next queue entry                     
         JCT   R0,FACQ02                                                        
                                                                                
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         J     FAQS                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Server status screen                                                *         
***********************************************************************         
                                                                                
FASS     OI    LS_IIND1,LS_IACTV   Set interface active                         
         MVC   BYTE2,LT_COPTN      Save server filter                           
         GOTOR BLDHDR,LT_CASSQ                                                  
                                                                                
FASS02   MVC   LT_COPTN,BYTE2      Restore filter option                        
         OI    LT_COPTN,C' '       and ensure upper case                        
         MVI   LS_BMODE,0                                                       
         USING TWAHEDLD,RF         Build headline                               
         MVI   TWAHEDT+(TWASVR#-TWASVRT),C'#'                                   
         MVI   TWAHEDT+(TWASVRTY-TWASVRT),C'C'                                  
         MVI   TWAHEDT+(TWASVRMQ-TWASVRT),C'Q'                                  
         MVC   TWAHEDT+(TWASVRNM-TWASVRT)(L'SVRNM),SVRNM                        
         MVC   TWAHEDT+(TWASVRJB-TWASVRT)(L'SVRJB),SVRJB                        
         MVI   TWAHEDT+(TWASVRID-TWASVRT),C'F'                                  
         MVC   TWAHEDT+(TWASVRAG-TWASVRT)(L'SVRAG),SVRAG                        
         MVC   TWAHEDT+(TWASVRAI-TWASVRT)(L'SVRAI),SVRAI                        
         MVC   TWAHEDT+(TWASVRST-TWASVRT)(L'SVRST),SVRST                        
                                                                                
         GOTOR GETRUN,GETRUNSQ     Get server tables                            
         L     R2,ATIA                                                          
         USING TABSSVRD,R2                                                      
         L     R5,FULL                                                          
         LHI   R4,1                R4=entry number                              
                                                                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWASVRSD,RF         RF=A(first build row)                        
         MVI   LS_BFLST,0          Always start from top of table               
                                                                                
FASS04   CLC   TABSSVRD(TABSSVRL),NULLS                                         
         JE    FASS08                                                           
         CLI   LT_CACTN,LT_CASCQ   Test send command action                     
         JNE   *+14                                                             
         CLC   TSJOB,SPACES                                                     
         JNH   FASS08                                                           
         LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         CLI   LS_BFFST,0                                                       
         JNE   *+8                                                              
         STC   R0,LS_BFFST                                                      
                                                                                
         MVC   TWASVRSD(TWASVRSL),NULLS                                         
         MVI   TWASVRH+(FLDLEN-FLDHDRD),TWASVRSL                                
         MVI   TWASVRH+(FLDATB-FLDHDRD),FATBPROT+FATBLC+FATBHIGH                
         MVI   TWASVRH+(FLDOIND-FLDHDRD),FOUTTRN                                
         MVC   TWASVRT(TWASVRTL),SPACES                                         
         LA    R0,TWASVRCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWASVRH+(FLDADR-FLDHDRD)                                    
         CVD   R4,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWASVR#,DUB                                                      
         CLI   TWASVR#,C'0'                                                     
         JNE   *+14                                                             
         MVC   TWASVR#(L'TWASVR#),TWASVR#+1                                     
         J     *-14                                                             
         MVC   TWASVRTY(L'TSTYPE),TSTYPE                                        
         MVI   TWASVRMQ,C' '                                                    
         CLI   LT_COPTN,C' '                                                    
         JNH   *+14                                                             
         CLC   TWASVRTY,LT_COPTN   Match server type filter                     
         JNE   FASS08                                                           
                                                                                
         STM   RE,R1,SAVERE                                                     
         GOTOR GETSVN,TSTYPE       Get server name                              
         LM    RE,R1,SAVERE                                                     
         MVC   TWASVRNM,WORK                                                    
                                                                                
         MVC   TWASVRJB,TSJOB      Server job (step) name                       
         OC    TWASVRJB,SPACES                                                  
                                                                                
         MVC   TWASVRID,TSLFACID   FACPAK id                                    
         CLI   TWASVRID,SPACEQ                                                  
         JH    *+8                                                              
         MVI   TWASVRID,C'*'                                                    
                                                                                
         LLH   R0,TSASID                                                        
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWASVRAI,DUB                                                     
         CLI   TSFLAG,TSFACTIV                                                  
         JNE   *+10                                                             
         MVC   TWASVRST(L'ACTIVE),ACTIVE                                        
         CLI   TSFLAG,TSFABEND                                                  
         JNE   *+10                                                             
         MVC   TWASVRST(L'ABEND),ABEND                                          
         CLI   TSFLAG,TSFAVAIL                                                  
         JNE   *+10                                                             
         MVC   TWASVRST(L'AVAIL),AVAIL                                          
         CLC   SVRWIDTH,=AL2(TABSSVRL)                                          
         JL    FASS06                                                           
         TM    TSTIND1,TSTIMQ      Test MQ enabled                              
         JZ    *+8                                                              
         MVI   TWASVRMQ,C'Y'                                                    
         MVC   TWASVRAG,TSTFAGYS   Filter agencies                              
         CLI   TWASVRAG+L'TWASVRAG-1,C' '                                       
         JNH   FASS06                                                           
         MVI   TWASVRAG+L'TWASVRAG-1,C'+'                                       
                                                                                
FASS06   AHI   RF,TWASVRSL                                                      
         C     RF,AENDTWA          Test TWA full                                
         JNL   FASS10                                                           
                                                                                
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JH    FASS10                                                           
                                                                                
FASS08   AH    R2,SVRWIDTH         Bump to next table entry                     
         AHI   R4,1                                                             
         JCT   R5,FASS04                                                        
                                                                                
FASS10   LHI   R1,GI#SVRTD                                                      
         CLI   LT_CACTN,LT_CASSQ                                                
         JE    FASS12                                                           
         CLI   LS_BFLST,0          Test no entries on screen                    
         JE    FASS12                                                           
         LHI   R1,GI#SELIT                                                      
         OI    LS_BMODE,LS_BMSSI   Set select is valid                          
                                                                                
FASS12   GOTOR GETMSG              Look up information message                  
         GOTOR BLDPFK              Build PfKey line                             
         J     EXITY                                                            
         DROP  R2,RF                                                            
         EJECT                                                                  
***********************************************************************         
* Queue status screen                                                 *         
***********************************************************************         
                                                                                
FAQS     OI    LS_IIND1,LS_IACTV   Set interface active                         
         MVI   LS_BMODE,0                                                       
         GOTOR BLDHDR,LT_CAQSQ                                                  
         USING TWAHEDLD,RF         Build headline                               
         MVI   TWAHEDT+(TWAQUE#-TWAQUET),C'#'                                   
         MVC   TWAHEDT+(TWAQUEFI-TWAQUET)(L'QUEFI),QUEFI                        
         MVC   TWAHEDT+(TWAQUEET-TWAQUET)(L'QUEET),QUEET                        
         MVC   TWAHEDT+(TWAQUETY-TWAQUET)(L'QUETY),QUETY                        
         MVC   TWAHEDT+(TWAQUEWK-TWAQUET)(L'QUEWK),QUEWK                        
         MVC   TWAHEDT+(TWAQUEST-TWAQUET)(L'QUEST),QUEST                        
         MVC   TWAHEDT+(TWAQUEER-TWAQUET)(L'QUEER),QUEER                        
                                                                                
         GOTOR GETRUN,GETRUNQQ     Get queue tables                             
         L     R2,ATIA                                                          
         USING TABSQUED,R2                                                      
         L     R5,FULL             R5=N'queue entries                           
         LHI   R4,1                R4=entry count                               
                                                                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWAQUESD,RF         RF=A(first build row)                        
         MVI   LS_BFLST,0          Always start from top of table               
                                                                                
FAQS02   CLC   TABSQUED(TABSQUEL),NULLS                                         
         JE    FAQS18                                                           
         CLC   TQWKEY,NULLS                                                     
         JE    FAQS18                                                           
         LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         CLI   LS_BFFST,0                                                       
         JNE   *+8                                                              
         STC   R0,LS_BFFST                                                      
                                                                                
         MVC   TWAQUESD(TWAQUESL),NULLS                                         
         MVI   TWAQUEH+(FLDLEN-FLDHDRD),TWAQUESL                                
         MVI   TWAQUEH+(FLDATB-FLDHDRD),FATBPROT+FATBLC+FATBHIGH                
         MVI   TWAQUEH+(FLDOIND-FLDHDRD),FOUTTRN                                
         MVC   TWAQUET(TWAQUETL),SPACES                                         
         LA    R0,TWAQUECQ(RE)     R0=absolute address                          
         STCM  R0,3,TWAQUEH+(FLDADR-FLDHDRD)                                    
         CVD   R4,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWAQUE#,DUB                                                      
         CLI   TWAQUE#,C'0'                                                     
         JNE   *+14                                                             
         MVC   TWAQUE#(L'TWAQUE#),TWAQUE#+1                                     
         J     *-14                                                             
         MVI   TWAQUELI,FILLQ                                                   
                                                                                
         MVC   TWAQUELI+1(L'TWAQUELI-1),TWAQUELI                                
         CLC   TQLOCKID,NULLS                                                   
         JE    FAQS04                                                           
         MVC   TWAQUEFI,TQLFACID                                                
         MVC   TWAQUETI,TQLTSKID                                                
         LLH   R0,TQLFASID                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWAQUEAI,DUB                                                     
                                                                                
FAQS04   STM   RE,R1,SAVERE                                                     
         ICM   R0,15,TQATIME                                                    
         GOTOR EDTTUS,WORK                                                      
         LM    RE,R1,SAVERE                                                     
         MVC   TWAQUEET,WORK                                                    
         MVC   TWAQUETY(L'TQTYPE),TQTYPE                                        
                                                                                
         GOTOR GETSVN,TQTYPE       Get server name                              
         LM    RE,R1,SAVERE                                                     
         MVC   TWAQUETY,WORK                                                    
         CLC   TQWUSRID,NULLS      Test MQ message id                           
         JE    FAQS12                                                           
                                                                                
         L     R6,AWRKBLK          Point to input worker file block             
         L     R6,WRKIAREC-WRKIOD(R6)                                           
         USING CTIREC,R6                                                        
         MVC   CTIKEY,NULLS                                                     
         MVI   CTIKTYP,CTIKTYPQ                                                 
         MVC   CTIKNUM,TQWUSRID                                                 
         GOTOR DMGR,DMCB,DMREAD,CTFILE,CTIREC,CTIREC                            
         L     RF,SAVERF           Restore RF                                   
         JNE   FAQS08                                                           
         LA    R1,CTIDATA                                                       
         USING CTDSCD,R1                                                        
         SR    R0,R0                                                            
FAQS06   CLI   CTDSCEL,0                                                        
         JE    DEATH235                                                         
         CLI   CTDSCEL,CTDSCELQ                                                 
         JE    *+14                                                             
         IC    R0,CTDSCLEN                                                      
         AR    R1,R0                                                            
         J     FAQS06                                                           
         MVC   TWAQUEWK(L'CTIKID),CTDSC                                         
         LA    R1,TWAQUEWK                                                      
         J     FAQS10                                                           
         DROP  R6                                                               
                                                                                
FAQS08   LLH   R0,TQWUSRID                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWAQUEWK(5),DUB                                                  
         CLI   TWAQUEWK,C'0'                                                    
         JNE   FAQS10                                                           
         MVC   TWAQUEWK(5),TWAQUEWK+1                                           
         J     *-14                                                             
                                                                                
FAQS10   LA    R1,TWAQUEWK                                                      
         CLI   0(R1),SPACEQ                                                     
         JE    *+12                                                             
         AHI   R1,1                                                             
         J     *-12                                                             
         MVI   0(R1),COMMAQ                                                     
         AHI   R1,1                                                             
         MVC   0(L'WRKWSPS,R1),TQWKEY+(WRKWSPS-WRKWKEY)                         
         UNPK  DUB(3),TQWKEY+(WRKWDAY-WRKWKEY)(2)                               
         MVC   L'WRKWSPS(2,R1),DUB                                              
         MVC   L'WRKWSPS+2(L'WRKWCLS,R1),TQWKEY+(WRKWCLS-WRKWKEY)               
         MVI   L'WRKWSPS+2+L'WRKWCLS(R1),COMMAQ                                 
         AHI   R1,L'WRKWSPS+2+L'WRKWCLS+1                                       
         LLH   R0,TQWKEY+(WRKWSEQN-WRKWKEY)                                     
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  0(5,R1),DUB                                                      
         CLI   0(R1),C'0'                                                       
         JNE   *+14                                                             
         MVC   0(5,R1),1(R1)                                                    
         J     *-14                                                             
         LM    RE,R1,SAVERE                                                     
         J     FAQS14                                                           
                                                                                
FAQS12   GOTOR HEXOUT,DMCB,TQMQCTRL,WORK,L'TQMQCTRL,0                           
         LM    RE,R1,SAVERE                                                     
         MVC   TWAQUEWK(2),=C'M='                                               
         MVC   TWAQUEWK+2(L'TQMQCTRL*2),WORK                                    
                                                                                
FAQS14   CLI   TQSTATUS,TQSWAIT                                                 
         JNE   *+10                                                             
         MVC   TWAQUEST(L'WAIT),WAIT                                            
         CLI   TQSTATUS,TQSRUN                                                  
         JNE   *+10                                                             
         MVC   TWAQUEST(L'RUNG),RUNG                                            
         CLI   TQSTATUS,TQSPEND                                                 
         JNE   *+10                                                             
         MVC   TWAQUEST(L'PEND),PEND                                            
         CLI   TQSTATUS,TQSSEND                                                 
         JNE   *+10                                                             
         MVC   TWAQUEST(L'SNDG),SNDG                                            
         CLI   TQSTATUS,TQSDONE                                                 
         JNE   *+10                                                             
         MVC   TWAQUEST(L'DONE),DONE                                            
                                                                                
         SR    R0,R0                                                            
         ICM   R0,1,TQERROR                                                     
         JZ    FAQS16                                                           
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  TWAQUEER,DUB                                                     
                                                                                
FAQS16   AHI   RF,TWAQUESL                                                      
         C     RF,AENDTWA          Test TWA full                                
         JNL   FAQS20                                                           
                                                                                
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JH    FAQS20                                                           
                                                                                
FAQS18   AH    R2,QUEWIDTH         Bump to next table entry                     
         AHI   R4,1                                                             
         JCT   R5,FAQS02                                                        
                                                                                
FAQS20   GOTOR BLDPFK                                                           
         GOTOR GETMSG,GI#QUETD     Look up information message                  
         J     EXITY                                                            
         DROP  R2,RF                                                            
         EJECT                                                                  
***********************************************************************         
* Interactive build request mode                                      *         
***********************************************************************         
                                                                                
FABRFRST OI    LS_IIND1,LS_IACTV   Set interface active                         
         OI    LS_IIND1,LS_IMENU   Set request menus active                     
         MVC   LS_BVALS(LS_BVALL),NULLS                                         
                                                                                
FABRF02  GOTOR BLDHDR,0                                                         
         MVI   LT_CTRL,LT_CANBQ                                                 
         USING TWAHEDLD,RF         Build headline                               
                                                                                
         MVC   TWAHEDT+(TWAMENC-TWAMENU)(L'CODE),CODE                           
         MVC   TWAHEDT+(TWAMENT-TWAMENU)(L'NAME),NAME                           
         MVC   TWAHEDT+(TWAMPHS-TWAMENU)(L'PHSN),PHSN                           
         MVC   TWAHEDT+(TWAMTYP-TWAMENU)(L'TYPE),TYPE                           
                                                                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLC   R1,LS_BFROW         R1=line number of first build row            
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWAMENUD,RF         RF=A(first build row)                        
                                                                                
         L     R2,ANDX             Point to master map index                    
         LLC   R0,LS_BFLST                                                      
         MHI   R0,LN_LN2Q          R0=index to first/next                       
         AR    R2,R0                                                            
         USING LN_D,R2                                                          
         CLC   LN_CODE,NULLS       Test end of table                            
         JNE   FABRF04                                                          
         L     R2,ANDX             Point to master map index                    
         MVI   LS_BFLST,0          Invalid map table - point to start           
                                                                                
FABRF04  LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         CLI   LS_BFFST,0                                                       
         JNE   *+8                                                              
         STC   R0,LS_BFFST                                                      
                                                                                
         MVC   TWAMENUD(TWAMENUL),NULLS                                         
         MVI   TWAMENH+(FLDLEN-FLDHDRD),TWAMENUL                                
         MVI   TWAMENH+(FLDATB-FLDHDRD),FATBPROT+FATBLC+FATBHIGH                
         MVI   TWAMENH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LA    R0,TWAMENCQ(RE)     R0=ABSOLUTE ADDRESS                          
         STCM  R0,3,TWAMENH+(FLDADR-FLDHDRD)                                    
                                                                                
         STM   RE,R1,SAVERE                                                     
         TM    LS_IIND1,LS_IDECS   Test option to see decimal numbers           
         JNZ   FABRF06                                                          
         MVI   TWAMENDX,HEXQ       Format X'code'                               
         MVI   TWAMEND1,C''''                                                   
         GOTOR HEXOUT,DMCB,LN_CODE,TWAMENC,L'LN_CODE,0                          
         L     RF,SAVERF                                                        
         MVI   TWAMEND2,C''''                                                   
         J     FABRF08                                                          
                                                                                
FABRF06  LLH   R0,LN_CODE                                                       
         CURED (R0),(6,TWAMENC),0,ALIGN=LEFT                                    
         L     RF,SAVERF                                                        
                                                                                
FABRF08  CLC   LN_TNUM,NULLS       Test any text                                
         JE    FABRF12                                                          
         TM    LN_RUNI2,LP_RTERQ   Test text embedded in root overlay           
         JNZ   FABRF10                                                          
         MVI   TWAMENT+0,DD#ESCL                                                
         MVC   TWAMENT+1(L'LN_TNUM),LN_TNUM                                     
         MVI   TWAMENT+1+L'LN_TNUM,L'TWAMENT                                    
         ICM   R0,B'1100',TRASL                                                 
         ICM   R0,B'0010',LN_TSYS                                               
         ICM   R0,B'0001',LP_LANG                                               
         STCM  R0,15,0(R1)                                                      
         LA    R0,TWAMENT                                                       
         STCM  R0,15,4(R1)                                                      
         GOTOR DICTATE,(R1)                                                     
         J     FABRF12                                                          
                                                                                
FABRF10  LLC   R1,LN_TLEN          R1=text length                               
         CHI   R1,L'TWAMENT        Test fits into field                         
         JNH   *+8                                                              
         LHI   R1,L'TWAMENT                                                     
         SHI   R1,1                                                             
         SR    R4,R4                                                            
         ICM   R4,7,LN_TADR        RF=displacement to text value                
         EX    R1,FABRMVM4         Move text to screen field                    
                                                                                
FABRF12  LM    RE,R1,SAVERE                                                     
         LA    R0,TWAMPHS                                                       
         GOTOR HEXOUT,DMCB,LN_PHASE,(R0),L'LN_PHASE,0                           
         LM    RE,R1,SAVERE                                                     
                                                                                
         TM    LN_RUNI1,LP_RUPLQ   Test upload                                  
         JZ    FABRF16                                                          
         MVI   TWAMTYP,C'U'                                                     
         MVI   TWAMTYP+1,C'N'      Set native                                   
         TM    LN_RUNI1,LP_RGLBQ                                                
         JZ    *+8                                                              
         MVI   TWAMTYP+1,C'S'      ...or sending                                
         TM    LN_RUNI1,LP_RDSCQ                                                
         JZ    *+8                                                              
         MVI   TWAMTYP+1,C'O'      ...or RUNNER                                 
         LA    R4,TWAMTYP+2                                                     
         TM    LN_RUNI1,LP_RDSCQ   Test RUNNER                                  
         JZ    FABRF18                                                          
         MVC   0(L'RUNNER,R4),RUNNER                                            
         AHI   R4,L'RUNNER                                                      
         J     FABRF20                                                          
                                                                                
FABRF16  MVI   TWAMTYP,C'D'        Set download                                 
         LA    R4,TWAMTYP+1                                                     
         TM    LN_RUNI1,LP_RDSCQ   Test runs off-line                           
         JZ    FABRF18                                                          
         MVC   0(L'RUNNER,R4),RUNNER                                            
         AHI   R4,L'RUNNER                                                      
                                                                                
FABRF18  TM    LN_RUNI2,LP_RUPDQ   Test updative                                
         JZ    FABRF20                                                          
         MVC   0(L'UPDATE,R4),UPDATE                                            
                                                                                
FABRF20  AHI   RF,TWAMENUL                                                      
         AHI   R2,LN_LN2Q                                                       
         CLC   LN_CODE,NULLS       Test end of table                            
         JE    FABRF24                                                          
         C     RF,AENDTWA          Test TWA full                                
         JNL   FABRF22                                                          
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JL    FABRF04                                                          
         DROP  R2                                                               
                                                                                
FABRF22  MVI   LS_BMODE,LS_BMSMI+LS_BMSDN                                       
         J     FABRF26                                                          
FABRF24  MVI   LS_BMODE,LS_BMSMI   End of table - select                        
FABRF26  CLI   LS_BFFST,1          Test start at front of table                 
         JE    *+8                                                              
         OI    LS_BMODE,LS_BMSUP   No set - scroll up is valid                  
                                                                                
         GOTOR BLDPFK              Build PfKey line                             
         DROP  RF                                                               
                                                                                
         LHI   R1,GI#SELIT         Set information message                      
         TM    LS_BMODE,LS_BMSDN+LS_BMSUP                                       
         JZ    *+8                                                              
         LHI   R1,GI#SELSC                                                      
         GOTOR GETMSG              Look up information message                  
         J     EXITY                                                            
                                                                                
FABRNEXT TM    LS_BMODE,LS_BMSMI   Test select valid...                         
         JZ    FABRN30                                                          
                                                                                
         CLI   PFKEY,0             Test PfKey entered                           
         JE    EXITY                                                            
         CLI   PFKEY,PFKSELQ       Test select PfKey used                       
         JE    FABRN06                                                          
                                                                                
         TM    LS_BMODE,LS_BMSDN   Test scroll down valid                       
         JZ    FABRN02                                                          
         CLI   PFKEY,PFKSDNQ       Test scroll down PfKey used                  
         JNE   FABRN02                                                          
         MVI   LS_BFFST,0          Set first line n/d                           
         J     FABRF02                                                          
                                                                                
FABRN02  TM    LS_BMODE,LS_BMSUP   Test scroll up valid                         
         JZ    EXITY                                                            
         CLI   PFKEY,PFKSUPQ       Test scroll up PfKey used                    
         JNE   EXITY                                                            
         SR    R0,R0                                                            
         ICM   R0,1,LS_BFMAX                                                    
         JZ    FABRN04                                                          
         SR    R1,R1                                                            
         ICM   R1,1,LS_BFFST                                                    
         JZ    FABRN04                                                          
         BCTR  R1,0                                                             
         SR    R1,R0                                                            
         JNM   *+6                                                              
         SR    R1,R1                                                            
         STC   R1,LS_BFLST                                                      
         MVI   LS_BFFST,0                                                       
         J     FABRF02                                                          
                                                                                
FABRN04  MVI   LS_BFFST,0          Error - start from top of table              
         J     FABRF02                                                          
                                                                                
FABRN06  CLC   CURDISP,NULLS       Test select within a field                   
         JE    EXITY                                                            
         CLC   CURDISP,LS_BFDSP    Test select within menu                      
         JL    EXITY                                                            
         CLC   CURDISP,LS_BEDSP                                                 
         JH    EXITY                                                            
                                                                                
         LLH   RF,CURDISP                                                       
         A     RF,LP_ATWA                                                       
         USING TWAMENUD,RF         RF=A(selected menu line)                     
         LLH   RE,LS_BFDSP                                                      
         A     RE,LP_ATWA                                                       
         L     R2,ANDX                                                          
         USING LN_D,R2                                                          
         LLC   R0,LS_BFFST                                                      
         SHI   R0,1                                                             
         MHI   R0,LN_LN2Q          R0=index to first on screen                  
         AR    R2,R0                                                            
         LLC   R0,LS_BFMAX         Loop for maximum on screen                   
                                                                                
FABRN08  CR    RE,RF               Position to field on screen                  
         JE    FABRN10                                                          
         AHI   RE,TWAMENUL                                                      
         AHI   R2,LN_LN2Q          Increment pointer                            
         JCT   R0,FABRN08                                                       
         J     DEATH236                                                         
                                                                                
FABRN10  GOTOR LP_AVMAP,PARM,('VMNOWKQ+VMTESTQ',LN_CODE)                        
         MVI   LS_BFFST,1                                                       
         MVI   LS_BFLST,0                                                       
                                                                                
FABRN11  LLH   RF,LS_BFHED                                                      
         A     RF,LP_ATWA                                                       
         USING TWAHEDLD,RF         Build headline                               
         OI    TWAHEDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         MVC   TWAHEDT,SPACES                                                   
         MVC   TWAHEDT+2(L'CODE),CODE                                           
         MVC   TWAHEDT+8(L'NAME),NAME                                           
         MVC   TWAHEDT+TWAVALCQ-1(L'VALUE),VALUE                                
         LLH   RE,LS_BFABS         RE=abs. address of first build row           
         LLH   RF,LS_BFDSP                                                      
         A     RF,LP_ATWA                                                       
         USING TWADATAD,RF         RF=A(first build row)                        
         L     R0,LP_ATWA                                                       
         AHI   R0,MAXTWALN                                                      
         ST    R0,AENDTWA                                                       
         LLC   R1,LS_BFROW         R1=line number of first build row            
                                                                                
FABRN12  LLC   R0,LS_BFLST         Set first/last line numbers                  
         AHI   R0,1                                                             
         STC   R0,LS_BFLST                                                      
         CLI   LS_BFFST,0                                                       
         JNE   *+8                                                              
         STC   R0,LS_BFFST                                                      
         STM   RE,R1,SAVERE                                                     
         GOTOR GETMAP,(R0)         Look up maps for this line                   
         LR    R6,RF                                                            
         USING LD_D,R6                                                          
         LM    RE,R1,SAVERE                                                     
         JNE   FABRN28             End of map table                             
                                                                                
         MVC   TWADATAD(TWADATAL),NULLS                                         
         MVI   TWAKWDH+(FLDLEN-FLDHDRD),TWAKWDL                                 
         MVI   TWAKWDH+(FLDATB-FLDHDRD),FATBPROT+FATBLC+FATBHIGH                
         MVI   TWAKWDH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LA    R0,TWAKWDCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWAKWDH+(FLDADR-FLDHDRD)                                    
                                                                                
         STM   RE,R1,SAVERE                                                     
         TM    LS_IIND2,LS_ISHWT   Test show validation type                    
         JZ    FABRN16                                                          
         LLH   R0,LD_CODE                                                       
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  TWAKWMAP,DUB                                                     
         TM    LS_IIND1,LS_IDECS   Test show decimal numbers                    
         JNZ   FABRN13                                                          
         GOTOR HEXOUT,DMCB,LD_CODE+1,TWAKWMAP,1,0                               
         L     RF,SAVERF                                                        
                                                                                
FABRN13  MVI   TWAKWDLM,C' '                                                    
         TM    LD_TYPE,LD_SCOLQ                                                 
         JZ    *+8                                                              
         MVI   TWAKWDLM,C'('                                                    
         TM    LD_TYPE,LD_ECOLQ                                                 
         JZ    *+8                                                              
         MVI   TWAKWDLM,C')'                                                    
         TM    LD_TYPE,LD_SCOLQ+LD_ECOLQ                                        
         JZ    FABRN14                                                          
         JNO   *+12                                                             
         MVI   TWAKWDLM,C'*'                                                    
         J     FABRN15                                                          
                                                                                
FABRN14  TM    LD_INDS1,LD_ILSTQ                                                
         JZ    *+8                                                              
         MVI   TWAKWDLM,C'#'                                                    
         TM    LD_INDS1,LD_IRNGQ                                                
         JZ    *+8                                                              
         MVI   TWAKWDLM,C'-'                                                    
         TM    LD_INDS1,LD_ILSTQ+LD_IRNGQ                                       
         JNO   FABRN15                                                          
         MVI   TWAKWDLM,C'!'                                                    
                                                                                
FABRN15  MVC   WORK(L'LD_TYPE),LD_TYPE                                          
         NI    WORK,FF-(LD_SCOLQ+LD_ECOLQ)                                      
         LLC   R0,WORK                                                          
         MHI   R0,L'TYPETAB                                                     
         LARL  R1,TYPETAB                                                       
         AR    R1,R0                                                            
         MVC   TWAKWTYP,0(R1)                                                   
         LM    RE,R1,SAVERE                                                     
         J     FABRN18                                                          
                                                                                
FABRN16  TM    LS_IIND1,LS_IDECS   Test show decimal numbers                    
         JNZ   FABRN17                                                          
         MVI   TWAKWDDX,HEXQ       Format X'code'                               
         MVI   TWAKWDD1,C''''                                                   
         GOTOR HEXOUT,DMCB,LD_CODE,TWAKWDC,L'LD_CODE,0                          
         L     RF,SAVERF                                                        
         MVI   TWAKWDD2,C''''                                                   
         MVC   TWAKWDT(L'LD_ID),LD_ID                                           
         J     FABRN18                                                          
                                                                                
FABRN17  CURED LD_CODE,(6,TWAKWDC),0,ALIGN=LEFT                                 
         L     RF,SAVERF                                                        
                                                                                
FABRN18  CLI   LD_IDF,LD_IDFCQ     Test control record format                   
         JE    FABRN19                                                          
                                                                                
         CLC   LD_TNUM,NULLS       Test text given                              
         JE    FABRN22                                                          
                                                                                
         CLI   LD_IDF,LD_IDFRQ     Test text embedded in overlay                
         JNE   FABRN20                                                          
         TM    LD_INDS5,LD_ITEOQ                                                
         JZ    FABRN20                                                          
         SR    R1,R1                                                            
         ICM   R1,1,LD_TSYS        Get/test length of text                      
         JZ    FABRN22                                                          
         LA    R0,TWAKWDT                                                       
         LLH   RE,LD_TNUM                                                       
         TM    RSVRIND2,RSVRIBSQ   Test big server                              
         JZ    *+8                                                              
         SLL   RE,1                                                             
         A     RE,LP_ASVR          RE=A(text)                                   
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         J     FABRN22                                                          
                                                                                
FABRN19  CLI   LD_IDF,LD_IDFCQ     Test control record format                   
         JNE   FABRN20                                                          
         SR    RE,RE                                                            
         ICM   RE,7,LD_ATEXT       Yes - address is passed                      
         LLC   R1,LD_TSYS                                                       
         LA    R0,TWAKWDT                                                       
         LR    RF,R1                                                            
         MVCL  R0,RE                                                            
         J     FABRN22                                                          
                                                                                
FABRN20  MVI   TWAKWDT+0,DD#ESCL                                                
         MVC   TWAKWDT+1(L'LD_TNUM),LD_TNUM                                     
         MVI   TWAKWDT+1+L'LD_TNUM,L'TWAKWDT                                    
         ICM   R0,B'1100',TRASL                                                 
         ICM   R0,B'0010',LD_TSYS                                               
         ICM   R0,B'0001',LP_LANG                                               
         GOTOR DICTATE,DMCB,(R0),TWAKWDT                                        
                                                                                
FABRN22  LM    RE,R1,SAVERE                                                     
         MVI   TWAVALH+(FLDLEN-FLDHDRD),TWAVALL                                 
         MVI   TWAVALH+(FLDATB-FLDHDRD),FATBHIGH                                
         TM    LD_INDS1,LD_ILOWQ   Test lower case input valid                  
         JZ    *+8                                                              
         OI    TWAVALH+(FLDATB-FLDHDRD),FATBLC                                  
         MVI   TWAVALH+(FLDOIND-FLDHDRD),FOUTTRN                                
         LA    R0,TWAVALCQ(RE)     R0=absolute address                          
         STCM  R0,3,TWAVALH+(FLDADR-FLDHDRD)                                    
                                                                                
         STM   RE,R1,SAVERE                                                     
         GOTOR SETLEN,0                                                         
         GOTOR GETIDP              Look up data value in pool                   
         L     RF,SAVERF                                                        
         SR    R1,R1                                                            
         ICM   R1,1,WORK                                                        
         JZ    FABRN24                                                          
         CHI   R1,L'TWAVAL                                                      
         JH    DEATH237                                                         
         BCTR  R1,0                                                             
         EX    R1,FABRMVTW         Move value to data field                     
                                                                                
FABRN24  LM    RE,R1,SAVERE                                                     
         LLC   R0,TWAKWDH+(FLDLEN-FLDHDRD)                                      
         AR    RF,R0                                                            
         IC    R0,TWAKWDH+(FLDLEN-FLDHDRD)                                      
         AR    RF,R0                                                            
                                                                                
         C     RF,AENDTWA          Test TWA full                                
         JNL   FABRN26                                                          
         AHI   RE,COLSLINE         Bump base address                            
         AHI   R1,1                Bump row number                              
         CHI   R1,ROWSPAGE-1       Test all rows used                           
         JL    FABRN12                                                          
         DROP  R6                                                               
                                                                                
FABRN26  STM   RE,R1,SAVERE        Test all entries are displayed               
         LLC   R1,LS_BFLST                                                      
         AHI   R1,1                                                             
         GOTOR GETMAP                                                           
         LM    RE,R1,SAVERE                                                     
         JNE   FABRN28                                                          
         MVI   LS_BMODE,LS_BMEDT+LS_BMSDN                                       
         J     *+8                                                              
FABRN28  MVI   LS_BMODE,LS_BMEDT   End of request map                           
         CLI   LS_BFFST,1          Test display from start of table             
         JE    *+8                                                              
         OI    LS_BMODE,LS_BMSUP   No - scroll up is valid                      
         OI    LS_BMODE,LS_BMRUN   Set run is valid                             
                                                                                
         GOTOR BLDPFK              Build PfKey line                             
         DROP  RF                                                               
                                                                                
         LHI   R1,GI#ENTIT                                                      
         TM    LS_BMODE,LS_BMSDN+LS_BMSUP                                       
         JZ    *+8                                                              
         LHI   R1,GI#ENTSC                                                      
         GOTOR GETMSG              Look up information message                  
         J     FABRNX                                                           
                                                                                
FABRN30  TM    LS_BMODE,LS_BMEDT   Test enter data valid...                     
         JZ    FABRFRST            No - build menu screen                       
         GOTOR LP_AVMAP,PARM,('VMNOWKQ+VMTESTQ',LS_QMAPN)                       
         MVC   LP_AWMP,AWMP        Set A(start of work map pool)                
                                                                                
         GOTOR VALSCR              Validate request details                     
         JNE   FABRNX                                                           
                                                                                
         TM    LS_BMODE,LS_BMSDN   Test scroll down is valid                    
         JZ    FABRN32                                                          
         CLI   PFKEY,PFKSDNQ       Test scroll down request                     
         JNE   FABRN32                                                          
         MVI   LS_BFFST,0                                                       
         J     FABRN11                                                          
                                                                                
FABRN32  TM    LS_BMODE,LS_BMSUP   Test scroll up is valid                      
         JZ    FABRN36                                                          
         CLI   PFKEY,PFKSUPQ       Test scroll up PfKey used                    
         JNE   FABRN36                                                          
         SR    R0,R0                                                            
         ICM   R0,1,LS_BFMAX                                                    
         JZ    FABRN34                                                          
         SR    R1,R1                                                            
         ICM   R1,1,LS_BFFST                                                    
         JZ    FABRN34                                                          
         BCTR  R1,0                                                             
         SR    R1,R0                                                            
         JNM   *+6                                                              
         SR    R1,R1                                                            
         STC   R1,LS_BFLST                                                      
         MVI   LS_BFFST,0                                                       
         J     FABRN11                                                          
                                                                                
FABRN34  MVI   LS_BFFST,0          Error - start from top of table              
         J     FABRN11                                                          
                                                                                
FABRN36  CLI   PFKEY,PFKCPYQ       Test want to copy string                     
         JE    FABRN37                                                          
         TM    INDQCTRL,INDSCTRL   Test control record                          
         JNZ   *+12                                                             
         TM    LP_RUNI1,LP_RUPLQ   Test this is an upload                       
         JZ    FABRN44                                                          
         CLI   PFKEY,PFKADDQ       Test want to add worker file record          
         JNE   FABRN40                                                          
                                                                                
FABRN37  GOTOR INIFAL              Initialize FALINK                            
                                                                                
         LARL  R0,SENREQ                                                        
         L     RE,LP_AFBLK                                                      
         ST    R0,FALASND-FALINKD(RE)                                           
         OI    FALAINDS-FALINKD(RE),FALAINDC                                    
         MVI   LT_CACTN,LT_CADLQ   Set action to download                       
         MVI   LT_COPTN,SPACEQ                                                  
         MVI   LT_CCTRL,LT_CCFTQ   Set first time                               
         MVI   LT_CMORE,LT_CMNMQ                                                
         GOTOR LP_AFALK,LP_AFBLK   Call FALINK to do download                   
                                                                                
         CLI   PFKEY,PFKCPYQ       Test want to save string                     
         JE    FABRN64                                                          
                                                                                
         MVI   LT_CACTN,LT_CAULQ   Set action to upload                         
         MVI   LT_COPTN,SPACEQ                                                  
         MVI   LT_CCTRL,LT_CCFTQ   Set first time                               
         MVI   LT_CMORE,LT_CMNMQ                                                
         L     RE,LP_AFBLK                                                      
         LARL  R0,FARD                                                          
         ST    R0,FALARCV-FALINKD(RE)                                           
         LARL  R0,FABRN38                                                       
         ST    R0,FALASND-FALINKD(RE)                                           
         MVC   FALATRN-FALINKD(,RE),LP_AVMAP                                    
         MVC   RUNASVR,FZERO                                                    
         L     R0,AWMP                                                          
         ST    R0,LP_AWMP          Point to start of work map pool              
         LLH   R1,LP_WMPL          and clear the pool                           
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         NTR1  LABEL=*             Save my current registers                    
         ST    RD,UNWINDRD         Save current RD pointer                      
         OI    INDQTEST,INDSTEST   Set upload test mode                         
         GOTOR LP_AFALK,LP_AFBLK   Call FALINK to do upload                     
                                                                                
FABRN38  L     RD,UNWINDRD         Restore saved RD value                       
         LM    RE,RC,12(RD)        Restore my registers                         
         L     RD,4(RD)                                                         
         MVC   WORK(L'LS_QMAPN),LS_QMAPN                                        
         MVC   LS_QMAPN,NULLS      Force re-build of map                        
         GOTOR LP_AVMAP,PARM,('VMNOWKQ+VMTESTQ',WORK)                           
         GOTOR BLDHDR,LT_CANBQ     Rebuild header                               
         MVI   LS_BFLST,0                                                       
         MVI   LS_BFFST,0                                                       
         J     FABRN11             Rebuild request screen                       
                                                                                
FABRN40  TM    RSVRIND2,RSVROUPD   Test RUNNER upload                           
         JNZ   FABRN60                                                          
         CLI   PFKEY,PFKSRDQ       Test want to send (regular down)             
         JE    *+8                                                              
         CLI   PFKEY,PFKSEDQ       Test want to send (expanded down)            
         JNE   FABRN44                                                          
         CLI   PFKEY,PFKSRDQ       Test want regular download                   
         JE    *+8                                                              
         OI    LS_INDS1,LS_IXPND   Set expanded download required               
         CLC   LS_WKEY,NULLS       Have we created a worker file?               
         JNE   *+12                                                             
         MVI   BYTE4,LT_CAULQ      No - just send string                        
         J     FABRN80                                                          
         NI    LS_INDS1,FF-(LS_IUPAQ)                                           
         TM    LP_RUNI1,LP_RGLBQ   Test where work is to run                    
         JZ    FABRN42                                                          
         GOTOR PUTGLB              Put global values                            
                                                                                
FABRN42  GOTOR INIFAL              Initialize FALINK                            
                                                                                
         TM    LP_RUNI1,LP_RGLBQ   Test upload in another task                  
         JNZ   EXIT                Yes - exit to call application               
                                                                                
         L     R1,AWRKBLK                                                       
         USING WRKIOD,R1                                                        
         MVC   WRKWKEY,LS_WKEY                                                  
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIAOPN   Open the upload worker file                  
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH238                                                         
         DROP  R1                                                               
                                                                                
         L     RF,LP_AFBLK         Build FALINK parameter block                 
         USING FALINKD,RF                                                       
         LARL  R0,FASD                                                          
         ST    R0,FALASND          Set A(send data routine)                     
         MVC   FALAHOOK,FZERO                                                   
         MVI   FALAWHEN,0          Set no hooks required                        
         LARL  R0,FARETURN                                                      
         STCM  R0,15,FALASTP       Set A(dummy) save routine                    
         STCM  R0,15,FALARSM       Set A(dummy) resume routine                  
         LARL  R0,FABREAK                                                       
         STCM  R0,15,FALAFUL       Set A(break on full) routine                 
         DROP  RF                                                               
                                                                                
         MVI   LT_CACTN,LT_CADLQ   Set to first for download                    
         MVI   LT_COPTN,LT_COXDQ                                                
         MVI   LT_CCTRL,LT_CCFTQ                                                
         GOTOR LP_AFALK,LP_AFBLK   Call FALINK to process download              
         J     EXIT                                                             
                                                                                
FABRN44  MVI   BYTE4,LT_CARNQ      Set run now                                  
         CLI   PFKEY,PFKNOWQ       Test run now PfKey pressed                   
         JE    FABRN80             Yes                                          
                                                                                
         CLI   PFKEY,PFKSRDQ       Set send worker file                         
         JNE   FABRN50                                                          
         TM    LP_RUNI1,LP_RUPLQ   Test valid to send file                      
         JNZ   FABRN80                                                          
         J     FABRNX                                                           
                                                                                
FABRN50  MVI   BYTE4,LT_CARXQ      Set run off-line                             
         CLI   PFKEY,PFKROFQ                                                    
         JNE   FABRNX                                                           
         TM    LP_RUNI1,LP_RDSCQ   Test valid to run off-line                   
         JZ    FABRNX                                                           
         J     FABRN80                                                          
                                                                                
FABRN60  TM    LS_INDS1,LS_IOUPD   Test have worker file already                
         JNZ   FABRN62                                                          
         OI    LS_INDS1,LS_IXPND   Set expanded download required               
         MVI   BYTE4,LT_CARNQ                                                   
         CLI   PFKEY,PFKNOWQ       Test want to run now                         
         JE    FABRN80                                                          
         CLI   PFKEY,PFKROFQ       Test want to run off-line                    
         JNE   FABRNX                                                           
         MVI   BYTE4,LT_CARXQ      Set run off-line                             
         J     FABRN80             Build & process request data                 
                                                                                
FABRN62  CLI   PFKEY,PFKNOWQ       Test want to run now                         
         JE    *+12                                                             
         CLI   PFKEY,PFKROFQ       Test want to run off-line                    
         JNE   FABRNX                                                           
                                                                                
         GOTOR INIFAL              Initialize FALINK                            
                                                                                
         L     R1,AWRKBLK                                                       
         USING WRKIOD,R1                                                        
         MVC   WRKWKEY,LS_WKEY                                                  
         MVI   WRKIFTYP,WRKIFTWF                                                
         MVI   WRKIACTN,WRKIAOPN   Open the upload worker file                  
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH239                                                         
         DROP  R1                                                               
                                                                                
         L     RF,LP_AFBLK         Build FALINK parameter block                 
         USING FALINKD,RF                                                       
         LARL  R0,FASD                                                          
         ST    R0,FALASND          Set A(send data routine)                     
         MVC   FALAHOOK,FZERO                                                   
         MVI   FALAWHEN,0          Set no hooks required                        
         LARL  R0,FARETURN                                                      
         STCM  R0,15,FALASTP       Set A(dummy) save routine                    
         STCM  R0,15,FALARSM       Set A(dummy) resume routine                  
         LARL  R0,FABREAK                                                       
         STCM  R0,15,FALAFUL       Set A(break on full) routine                 
         DROP  RF                                                               
                                                                                
         MVI   LT_CACTN,LT_CADLQ   Set to first for download                    
         CLI   PFKEY,PFKNOWQ                                                    
         JNE   *+8                                                              
         NI    LP_RUNI1,FF-(LP_RDSCQ)                                           
         MVI   LT_COPTN,SPACEQ                                                  
         MVI   LT_CCTRL,LT_CCFTQ                                                
         GOTOR LP_AFALK,LP_AFBLK   Call FALINK to enter FASD                    
         J     EXIT                                                             
                                                                                
***********************************************************************         
* Copy string                                                         *         
***********************************************************************         
                                                                                
FABRN64  L     R2,AWRKBLK                                                       
         L     R2,WRKIABUF-WRKIOD(R2)                                           
         TM    LS_IIND1,LS_ICOPY   Test string previously copied                
         JNZ   FABRN66                                                          
         LR    R0,R2               No - initialize copy buffer                  
         LHI   R1,14*ONEK                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
         J     FABRN68                                                          
                                                                                
FABRN66  LHI   RF,14*ONEK                                                       
         ICM   RF,B'1100',LEQUAL                                                
         GOTOR DMGR,DMCB,DMREAD,TEMPSTR,(1,0),(R2),0,(RF)                       
         JNE   DEATH240                                                         
                                                                                
FABRN68  SR    R3,R3                                                            
         ICM   R3,3,0(R2)          R3=Current length of copy buffer             
         JNZ   *+12                                                             
         LHI   R3,2                Set initial buffer length if empty           
         STCM  R3,3,0(R2)          and set in buffer                            
         AR    R3,R2               R3=A(next copy string in buffer)             
                                                                                
         LA    R4,LT_CHDR                                                       
F        USING FLDHDRD,R4          R4=A(input field header)                     
         MVI   WORK,0              Set processing first field                   
                                                                                
FABRN70  SR    R1,R1                                                            
         ICM   R1,1,F.FLDLEN       Get/Test field length                        
         JZ    FABRN74             Zero=end of TWA                              
                                                                                
         SHI   R1,FLDDATA-FLDHDRD  Calculate field length                       
         TM    F.FLDATB,FATBXHDR                                                
         JZ    *+8                                                              
         SHI   R1,FLDDATA-FLDHDRD                                               
         LA    R0,F.FLDDATA                                                     
         CLI   WORK,0              Test first field                             
         JNE   *+12                                                             
         SHI   R1,L'LT_CTRL        Yes - adjust for control info                
         AHI   R0,L'LT_CTRL                                                     
                                                                                
         LR    RF,R0                                                            
         AR    RF,R1               RF=A(end of field+1)                         
         LR    RE,R1               RE=length of this data field                 
                                                                                
FABRN72  LTR   RE,RE               Test any data at all in this field           
         JZ    FABRN74             No - all done                                
         BCTR  RF,0                Back-up one byte                             
         CLI   0(RF),0             Test null character here                     
         JNE   *+10                                                             
         BCTR  RE,0                Yes - decrement data length                  
         J     FABRN72                                                          
                                                                                
         STC   R1,BYTE1            Save length of field this line               
         STC   RE,BYTE2            Save length of data this line                
         LR    R1,RE               R1=copy length                               
                                                                                
         LR    RE,R3               Set 'copy to' address                        
         LLH   RF,0(R2)            RF=length of buffer so far                   
         AR    RF,R1               Bump buffer length                           
         STCM  RF,3,0(R2)          Set new buffer length                        
         AR    R3,R1               Bump buffer pointer                          
         LR    RF,R1               RF=length of data to copy                    
         MVCL  RE,R0               Copy string from TWA to buffer               
                                                                                
         CLC   BYTE1,BYTE2         Test field is full of data                   
         JNE   FABRN74             No - must be last input line                 
                                                                                
         LLC   R0,F.FLDLEN                                                      
         AR    R4,R0               Point to next input field header             
         MVI   WORK,1              Set this is not the first field              
         J     FABRN70             Go process next input field                  
         DROP  F                                                                
                                                                                
FABRN74  LHI   RF,14*ONEK          Write buffer back to TEMPSTR page 1          
         ICM   RF,B'1100',LEQUAL                                                
         GOTOR DMGR,DMCB,DMWRT,TEMPSTR,(1,0),(R2),0,(RF)                        
         JNE   DEATH241                                                         
         L     R3,LP_ASAVE                                                      
         OI    LS_IIND1,LS_ICOPY   Set we have a string copied                  
                                                                                
         MVC   WORK(L'LS_QMAPN),LS_QMAPN                                        
         MVC   LS_QMAPN,NULLS      Force re-build of map                        
         GOTOR LP_AVMAP,PARM,('VMNOWKQ+VMTESTQ',WORK)                           
         GOTOR BLDHDR,LT_CANBQ     Rebuild header                               
         MVI   LS_BFLST,0                                                       
         MVI   LS_BFFST,0                                                       
         J     FABRN11             Rebuild request screen                       
                                                                                
***********************************************************************         
* Build and process request data - BYTE4 is action code (LT_CACTN)    *         
***********************************************************************         
                                                                                
FABRN80  GOTOR INIFAL              Initialize FALINK                            
                                                                                
         LARL  R0,SENREQ                                                        
         L     RE,LP_AFBLK                                                      
         ST    R0,FALASND-FALINKD(RE)                                           
         OI    FALAINDS-FALINKD(RE),FALAINDC+FALALVER                           
                                                                                
         MVI   LT_CACTN,LT_CADLQ   Set action to download                       
         MVI   LT_COPTN,SPACEQ                                                  
         MVI   LT_CCTRL,LT_CCFTQ   Set first time                               
         MVI   LT_CMORE,LT_CMNMQ                                                
                                                                                
         GOTOR LP_AFALK,LP_AFBLK   Call FALINK to do download                   
                                                                                
         MVC   LT_CACTN,BYTE4      Set run action                               
         CLI   PFKEY,PFKSRDQ       Test want regular download                   
         JE    *+8                                                              
         MVI   LT_COPTN,LT_COXDQ   Set expanded download                        
         MVI   LT_CCTRL,LT_CCFTQ   Set first time                               
         MVI   LT_CMORE,LT_CMNMQ                                                
                                                                                
         OI    LT_CHDR+(FLDOIND-FLDHDRD),FOUTCUR                                
                                                                                
         CLI   LT_CACTN,LT_CARXQ   Test want to run off-line                    
         JNE   FABRN82                                                          
         MVI   LT_CACTN,LT_CANVQ   Yes - fudge the action                       
         LHI   R0,VERSION#         and set current comms version number         
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  LT_FAVER,DUB                                                     
                                                                                
FABRN82  LA    RF,LT_DATA          Look for element id in output string         
         CLI   1(RF),LT_MINDQ                                                   
         JE    FABRNX                                                           
         MVI   0(RF),C'B'          Not found - build B=xx/D=xxxx                
         MVI   1(RF),LT_MINDQ                                                   
         CLI   LP_CMAPN,0                                                       
         JE    FABRN88                                                          
         MVI   0(RF),C'D'                                                       
         IC    R0,LP_CMAPN                                                      
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   3(1,RF),0(R1)                                                    
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   2(1,RF),0(R1)                                                    
         AHI   RF,2                                                             
FABRN88  IC    R0,LP_CMAPN+1                                                    
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   3(1,RF),0(R1)                                                    
         SRDL  R0,4                                                             
         SRL   R1,32-4                                                          
         LA    R1,HEXLIST(R1)                                                   
         MVC   2(1,RF),0(R1)                                                    
                                                                                
FABRNX   J     EXIT                                                             
         DROP  R3                                                               
                                                                                
INIFAL   NTR1  LABEL=*             Call FALINK to initialize                    
         L     RF,LP_ATWA          Set to rebuild TWA                           
         MVC   TWAMSG-TWAD(,RF),NULLS                                           
         GOTOR LP_AFALK,LP_AFBLK                                                
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* Routine to paste string                                             *         
***********************************************************************         
                                                                                
FAPS     GOTOR INIFAL              Initialize FALINK                            
                                                                                
         L     R2,AWRKBLK                                                       
         L     R2,WRKIABUF-WRKIOD(R2)                                           
         LHI   RF,14*ONEK                                                       
         ICM   RF,B'1100',LEQUAL                                                
         GOTOR DMGR,DMCB,DMREAD,TEMPSTR,(1,0),(R2),0,(RF)                       
         JNE   DEATH242                                                         
                                                                                
         LLH   R3,0(R2)            R3=L'save buffer                             
         AHI   R2,2                R2=A(save string)                            
                                                                                
         LA    R4,LT_CHDR                                                       
F        USING FLDHDRD,R4          R4=A(input field header)                     
         MVI   WORK,0              Set processing first field                   
                                                                                
FAPS02   LTR   R3,R3               Test any data left to paste                  
         JZ    FAPS06              No - all done                                
         SR    R1,R1                                                            
         ICM   R1,1,F.FLDLEN       Get/Test field length                        
         JZ    FAPS06              Zero=end of TWA                              
                                                                                
         SHI   R1,FLDDATA-FLDHDRD  Calculate field length                       
         TM    F.FLDATB,FATBXHDR                                                
         JZ    *+8                                                              
         SHI   R1,FLDDATA-FLDHDRD                                               
         LA    R0,F.FLDDATA                                                     
         CLI   WORK,0              Test first field                             
         JNE   *+12                                                             
         SHI   R1,L'LT_CTRL        Yes - adjust for control info                
         AHI   R0,L'LT_CTRL                                                     
                                                                                
         LR    RE,R2               RE='move from' address                       
         CR    R1,R3               Test remaining string fits                   
         JL    *+6                                                              
         LR    R1,R3               Yes - move remainder                         
         AR    R2,R1               Bump buffer pointer                          
         SR    R3,R1               Decrement remaining buffer length            
         LR    RF,R1               RF='move from' length                        
         MVCL  R0,RE               Copy string from buffer to TWA               
                                                                                
         LLC   R0,F.FLDLEN                                                      
         AR    R4,R0               Point to next input field header             
         MVI   WORK,1              Set this is not the first field              
         J     FAPS02              Go process next piece of string              
                                                                                
FAPS06   MVI   LT_CACTN,LT_CANVQ   Set upload the action                        
         LHI   R0,VERSION#         and set current comms version number         
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  LT_FAVER,DUB                                                     
         J     EXIT                                                             
         DROP  F                                                                
         EJECT                                                                  
***********************************************************************         
* Routine to output error message                                     *         
***********************************************************************         
                                                                                
FAINPERR CLC   LP_ERROR,NULLS      Test application set message number          
         JNE   FAERROR1                                                         
         LHI   R1,GE#INPER         No - use generic validation error            
                                                                                
FAGENERR ST    RE,SAVERE           Save where we came from                      
         STCM  R1,3,LP_ERROR       Set error number                             
         MVI   LP_EMSYS,FF         and GENERAL system                           
                                                                                
FAERROR1 L     R3,LP_ASAVE                                                      
         USING LS_D,R3                                                          
         TM    LS_IIND1,LS_IERRS   Test interface option to die                 
         JNZ   DEATH243                                                         
                                                                                
         L     RD,LP_SVRD          Restore original RD                          
         LM    RE,RB,12(RD)        Restore my registers                         
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         L     R2,LP_ASAVE                                                      
                                                                                
         LA    R1,WORK                                                          
         USING GETTXTD,R1                                                       
         MVC   GTBLOCK,NULLS                                                    
         OI    FLDOIND,FOUTTRN                                                  
         LLC   RE,FLDLEN                                                        
         SHI   RE,FLDDATA+2-FLDLEN                                              
         TM    FLDATB,FATBXHDR                                                  
         JZ    *+8                                                              
         SHI   RE,FLDDATA-FLDLEN                                                
         LA    RF,FLDDATA                                                       
         CLI   0(RF),LT_CANBQ      Test in build request mode                   
         JNE   *+12                                                             
         SHI   RE,1                                                             
         AHI   RF,1                                                             
         MVI   0(RF),SPACEQ                                                     
         EX    RE,FAERMVFF                                                      
         MVC   0(L'ERRD,RF),ERRD                                                
         LHI   R0,GE#INPER         Test input validation error                  
         CLI   LP_EMSYS,FF                                                      
         JNE   *+12                                                             
         CLM   R0,3,LP_ERROR                                                    
         JNE   *+10                                                             
         MVC   0(L'ERRC,RF),ERRC   Yes - set client error                       
         SHI   RE,L'ERRD-2                                                      
         STC   RE,GTMAXL                                                        
         AHI   RF,L'ERRD                                                        
         STCM  RF,7,GTAOUT                                                      
         MVC   GTMSGNO,LP_ERROR    Set message number                           
         MVI   GTMTYP,GTMERR       Set message type                             
         MVC   GTMSYS,LP_EMSYS     Set message system                           
         OI    GT1INDS,GT1OWRK                                                  
         TM    INDQXTRA,INDSXTRA   Test extra message indicator on              
         JZ    FAERROR2                                                         
         LA    R0,WORK2                                                         
         LA    RE,WORK2+L'WORK2-1                                               
         CLI   0(RE),SPACEQ                                                     
         JNE   *+8                                                              
         JCT   RE,*-8                                                           
         AHI   RE,1                                                             
         SR    RE,R0                                                            
         JNP   FAERROR2                                                         
         CHI   RE,22                                                            
         JNH   *+8                                                              
         LHI   RE,22                                                            
         STC   RE,GTLTXT                                                        
         STCM  R0,7,GTATXT                                                      
         J     FAERROR3                                                         
                                                                                
FAERROR2 CLI   LP_ELTXT,0          Test extra text supplied                     
         JE    FAERROR3                                                         
         MVC   GTLTXT,LP_ELTXT     Set length of extra text                     
         MVC   GTATXT,LP_EATXT     Set A(extra text)                            
         MVI   LP_ELTXT,0          Clear extra text                             
                                                                                
FAERROR3 MVC   GTASUBST,LP_EASUB   Set A(substitution list)                     
         MVC   LP_EASUB,NULLS      Clear substitution text                      
         GOTOR GETTXT,(R1)                                                      
         J     EXITN                                                            
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Edit timer units into printable format (hh:mm:ss.uuuuu)             *         
***********************************************************************         
                                                                                
EDTTUS   STM   RE,R1,12(RD)                                                     
         LR    RF,R1               RF=A(output)                                 
         SRDL  R0,32               R0/R1=TUs                                    
         D     R0,TUSSEC           R1=seconds,R0=TUs                            
         CVD   R0,DUB              Edit TUs                                     
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  9(5,RF),DUB                                                      
         SR    R0,R0               Clear TUs                                    
         LHI   RE,SECSMIN                                                       
         DR    R0,RE                                                            
         CVD   R0,DUB              Edit seconds                                 
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  6(2,RF),DUB                                                      
         SR    R0,R0                                                            
         LHI   RE,MINHOUR                                                       
         DR    R0,RE                                                            
         CVD   R0,DUB              Edit minutes                                 
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  3(2,RF),DUB                                                      
         CVD   R1,DUB              Edit hours                                   
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  0(2,RF),DUB                                                      
         MVI   2(RF),C':'                                                       
         MVI   5(RF),C':'                                                       
         MVI   8(RF),C'.'                                                       
EDTTUSX  LM    RE,R1,12(RD)                                                     
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Put values to GLOBBER for other application program call            *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
PUTGLB   NTR1  LABEL=*                                                          
         GOTOR GLOBBER,DMCB,GLCLR  Clear globals                                
                                                                                
         CLC   LS_WKEY,NULLS       Ensure we have worker file key               
         JE    DEATH245                                                         
         GOTOR (RF),(R1),GLPUT,LS_WKEY,L'LS_WKEY,GLVDLUWF                       
                                                                                
         GOTOR (RF),(R1),GLPUT,LS_VRSN,L'LS_VRSN,GLVDLUV#                       
                                                                                
         TM    INDQUPLI,INDSUPLI   Test general upload interface active         
         JZ    PUTGLB08                                                         
         CLC   LS_TSYS,NULLS       Must know where I am going                   
         JE    DEATH246                                                         
         CLC   LS_TPRG,NULLS                                                    
         JE    DEATH247                                                         
         GOTOR GETFACT,DMCB,0      Build interface block                        
         L     R1,0(R1)                                                         
         MVC   WORK(L'FAOVSYS),FAOVSYS-FACTSD(R1)                               
         L     R1,FASYSLST-FACTSD(R1)                                           
         LH    RE,0(R1)                                                         
         L     RF,2(R1)                                                         
         AHI   R1,6                Locate system I am connected to              
         CLC   WORK(L'FAOVSYS),0(R1)                                            
         JE    PUTGLB06                                                         
         JXLE  R1,RE,*-10                                                       
         J     DEATH248                                                         
                                                                                
PUTGLB06 MVC   WORK(L'LI_TSYS),2(R1)                                            
         LA    RE,WORK2                                                         
         USING LI_D,RE                                                          
         MVC   LI_D(LI_LNQ),NULLS                                               
         MVC   LI_FSYS,WORK        Set from system                              
         MVC   LI_FPRG,LINKPROG    Default to 'LINK'                            
         CLC   LP_PROG,NULLS       Unless override name is given                
         JE    *+10                                                             
         MVC   LI_FPRG,LP_PROG                                                  
         MVC   LI_TSYS,LS_TSYS     Set to system                                
         MVC   LI_TPRG,LS_TPRG     Set to program                               
         J     PUTGLB10                                                         
                                                                                
PUTGLB08 SR    RE,RE                                                            
         ICM   RE,3,RSVRIBLK       RE=displacement to interface block           
         JZ    DEATH249                                                         
         A     RE,LP_ASVR          RE=A(application interface block)            
                                                                                
PUTGLB10 MVC   GLVXCTLD(GLVXLENQ),NULLS                                         
         MVC   GLVXFRSY,LI_FSYS    From system/program                          
         MVC   GLVXFRPR,LI_FPRG                                                 
         MVC   GLVXTOSY,LI_TSYS    To system/program                            
         MVC   GLVXTOPR,LI_TPRG                                                 
         OI    GLVXFLG1,GLV1SEPS   Set to run in a separate session             
                                                                                
         TM    LI_INDS1,LI_IDIAL   Test enter dialogue mode with caller         
         JZ    PUTGLB12                                                         
         OI    LS_INDS1,LS_IDIAL   Yes - set indicator                          
         OI    GLVXFLG1,GLV1SEPD   Set instigate dialogue mode                  
                                                                                
         LA    R1,LS_SEST          Test have session switch entry               
SES      USING LS_SEST,R1          R1=A(session switch table)                   
         LHI   R0,LS_SESTM         R0=maximum # of sessions supported           
         BASR  RE,0                                                             
         CLC   SES.LS_SEST(LS_SESTL),NULLS                                      
         JE    PUTGLB12                                                         
         CLC   SES.LS_SESTS(L'GLVXTOSY+L'GLVXTOPR),GLVXTOSY                     
         JE    *+14                Entry found - use it                         
         AHI   R1,LS_SESTL                                                      
         BCTR  R0,RE                                                            
         J     PUTGLB12                                                         
         MVC   GLVXSESR(L'GLVXSESR+L'GLVXSESE),SES.LS_SEST#                     
         DROP  SES                                                              
                                                                                
PUTGLB12 GOTOR GLOBBER,DMCB,GLPUT,GLVXFRSY,GLVXLENQ,GLVXCTL                     
         CLI   8(R1),0                                                          
         JNE   DEATH250                                                         
         OI    LS_INDS1,LS_IGLOB   Set want return from application             
         J     EXIT                                                             
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Initialize security values (on-line)                                *         
***********************************************************************         
                                                                                
GETSEC   NTR1  LABEL=*                                                          
         MVC   WORK(L'SECOVALS+L'SECOAGPE),NULLS                                
         STC   R1,BYTE1            Save calling mode                            
                                                                                
         ICM   R2,15,LP_ASECD      Test security block passed                   
         JZ    GETSEC04                                                         
         USING SECD,R2                                                          
         TM    SECINDS,SECIINIT    Test security block initialized              
         JNZ   GETSEC02                                                         
         GOTOR SECRET,DMCB,('SECPINIT',SECD),0                                  
                                                                                
GETSEC02 CLI   BYTE1,1             Exit if switching mode                       
         JE    EXITY                                                            
         MVC   LP_SECNO,SECOPASS   Set password number                          
         MVC   LP_OSYS,SECOSYS     No - set overlay system number               
         MVC   WORK(L'SECOVALS),SECOVALS                                        
         MVC   WORK+L'SECOVALS(L'SECOAGPE),SECOAGPE                             
         J     GETSECX                                                          
                                                                                
GETSEC04 GOTOR GETFACT,PARM,(X'80',0),F#UTLD                                    
         L     R1,0(R1)                                                         
         MVC   LP_SECNO,F@TPASS-F@UTLD(R1)                                      
                                                                                
GETSECX  CLC   WORK(L'SECOVALS+L'SECOAGPE),NULLS                                
         J     EXIT                                                             
         DROP  R2                                                               
                                                                                
***********************************************************************         
* Set security values (off-line)                                      *         
***********************************************************************         
                                                                                
SETSEC   NTR1  LABEL=*                                                          
         USING LQ_D,R1             R1=A(security element)                       
         ICM   R2,15,LP_ASECD                                                   
         JZ    SETSECX                                                          
         USING SECD,R2             R2=A(secret control block)                   
         MVI   SECINDS,0           Set block not initialized                    
         MVC   SECOSYS(L'SECOSYS+L'SECOPRG),RSVRSYSP                            
         MVC   SECOVALS,LQ_DATA    Restore security values                      
         MVC   SECOAGPE,LQ_DATA+L'SECOVALS                                      
         GOTOR SECRET,DMCB,('SECPINIT+SECPOVAL',SECD),0                         
         ICM   RF,15,AMASTD        Set security values in MASTC                 
         JZ    SETSECX                                                          
         MVC   MCRHSAGY-MASTD(,RF),SECOAGYS                                     
         MVC   MCRHPSWD-MASTD(,RF),SECOPASS                                     
         MVC   MCRHSAGP-MASTD(,RF),SECOAGPE                                     
SETSECX  J     EXIT                                                             
         DROP  R1,R2                                                            
         EJECT                                                                  
***********************************************************************         
* Routine to set values from request record                           *         
*                                                                     *         
* Ntry:- R1=A(A(Worker file record))                                  *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
SETREQ   STM   RE,RC,12(RD)                                                     
         MVC   LS_WSEG,NULLS       Clear next worker file segment key           
         ICM   R2,15,0(R1)         R2=A(worker file record)                     
         JZ    DEATH251                                                         
         TM    INDQGARC,INDSGARC   Test processing archive                      
         JZ    *+12                                                             
         AHI   R2,GARRFST-GARCD    Point to first element on record             
         J     SETREQ02                                                         
         AHI   R2,4                Point to first worker file record            
                                                                                
         USING LQ_D,R2             R2=A(first element on record)                
SETREQ02 CLI   LQ_EL,0                                                          
         JE    SETREQX                                                          
         CLI   LQ_EL,LQ_SAVEQ      Test save data element                       
         JE    SETREQ06                                                         
         CLI   LQ_EL,LQ_FSEGQ      Test file pointer element                    
         JE    SETREQ08                                                         
         CLI   LQ_EL,LQ_BSAMQ      Test BSAM file description                   
         JE    SETREQ10                                                         
SETREQ04 LLH   R0,LQ_LN            Bump to next element                         
         AR    R2,R0                                                            
         J     SETREQ02                                                         
                                                                                
SETREQ06 LA    RE,LQ_DATA          RE=A(save data to set in TWA0)               
         LLH   R0,LP_DSAVE                                                      
         A     R0,LP_ATWA          R0='to address'                              
         LLH   RF,LQ_LN                                                         
         SHI   RF,LQ_LN1Q                                                       
         LR    R1,RF                                                            
         MVCL  R0,RE                                                            
         J     SETREQ04                                                         
                                                                                
SETREQ08 MVC   LS_WSEG,LQ_FNEXT    Set key of next file segment                 
         J     SETREQ04                                                         
                                                                                
SETREQ10 OI    LS_INDS2,LS_IBSAM   Set downloading BSAM file                    
         MVC   LS_WRECS,LQ_BRECS   Set number of records in BSAM file           
         MVC   DSN,LQ_BDSN         Set BSAM file DSN name                       
         J     SETREQ04                                                         
                                                                                
SETREQX  LM    RE,RC,12(RD)                                                     
         BR    RE                                                               
         DROP  R2,R3                                                            
         EJECT                                                                  
***********************************************************************         
* Update data elements on request record                              *         
***********************************************************************         
                                                                                
UPDREQ   NTR1  LABEL=*                                                          
         LR    R2,R1                                                            
         AHI   R2,4                                                             
         USING LQ_D,R2             R2=A(first element on record)                
UPDREQ02 CLI   LQ_EL,0             Test end of record                           
         JE    UPDREQX                                                          
         CLI   LQ_EL,LQ_RSTAQ      Test run statistics element                  
         JE    UPDREQ06                                                         
         CLI   LQ_EL,LQ_SAVEQ      Test save data element                       
         JE    UPDREQ08                                                         
UPDREQ04 LLH   R0,LQ_LN            Bump to next element                         
         AR    R2,R0                                                            
         J     UPDREQ02                                                         
                                                                                
UPDREQ06 TIME  TU                  Set request end time                         
         LAM   AR0,ARF,ARZERO                                                   
         L     R1,ARUNFACS                                                      
         ST    R0,RENDTIM-RUNFACSD(R1)                                          
         MVC   LQ_RSTA,RVALUES-RUNFACSD(R1)                                     
         J     UPDREQ04                                                         
                                                                                
UPDREQ08 GOTOR SAVRES,LQ_D         Set save/restore addresses                   
         LM    RE,R1,SAVERE                                                     
         MVCL  RE,R0               Set save data                                
         J     UPDREQ04                                                         
                                                                                
UPDREQX  J     EXIT                                                             
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Set up save/restore addresses lengths in SAVERE                     *         
*                                                                     *         
* Ntry:- R1=A(LQ_SAVEQ/LQ_RESTQ element)                              *         
* Exit:- SAVERE through SAVER1 contain addresses/lengths for MVCL     *         
***********************************************************************         
                                                                                
SAVRES   STM   RE,R2,12(RD)                                                     
         LR    R2,R1               R2=A(save/restore element)                   
         SR    RF,RF                                                            
         ICM   RF,3,RSVRSBLK                                                    
         JZ    DEATH252                                                         
         A     RF,LP_ASVR                                                       
         SR    R1,R1                                                            
         ICM   R1,1,LA_FBLK-LA_D(RF)                                            
         JZ    DEATH253                                                         
         CHI   R1,LP_BLKSN                                                      
         JH    DEATH254                                                         
         MHI   R1,L'LP_BLKS                                                     
         LA    R1,LP_BLKS-L'LP_BLKS(R1)                                         
         ICM   R1,15,0(R1)                                                      
         JZ    DEATH255                                                         
         LLH   R0,LA_FDSP-LA_D(RF)                                              
         AR    R0,R1               R0='from data' address                       
         LA    RE,LQ_DATA-LQ_D(R2)                                              
         SR    R1,R1                                                            
         ICM   R1,3,LA_DLEN-LA_D(RF)                                            
         JZ    DEATH256                                                         
         LR    RF,R1                                                            
         STM   RE,R1,SAVERE        Set addresses/lengths for caller             
SAVRESX  LM    RE,R2,12(RD)                                                     
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Look up server name in server name table                            *         
*                                                                     *         
* Ntry:- R1=A(Server type)                                            *         
* Exit:- Work contains server name                                    *         
***********************************************************************         
                                                                                
GETSVN   LARL  RF,SVNTAB                                                        
         USING SVNTABD,RF                                                       
         LHI   R0,SVNTABN                                                       
GETSVN02 CLC   SVNTTYP,0(R1)                                                    
         JE    *+12                                                             
         AHI   RF,SVNTABL                                                       
         JCT   R0,GETSVN02                                                      
         MVC   WORK(L'SVNTNAM),SVNTNAM                                          
         BR    RE                                                               
         DROP  RF                                                               
         EJECT                                                                  
***********************************************************************         
* Prepare work to run and create work queue entry/ies if necessary    *         
*                                                                     *         
* Ntry:- R1=Calling type (see PQxxxQ equates below)                   *         
***********************************************************************         
                                                                                
PWRUNQ   EQU   1                   Run validated request                        
PWCWRQ   EQU   2                   Create worker file and run                   
PWALLQ   EQU   3                   Build request/create worker file/run         
PWUPRQ   EQU   4                   Prepare for RUNNER upload                    
                                                                                
PWRK     NTR1  LABEL=*                                                          
         STC   R1,PWCALL           Save calling type                            
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3             R3=A(save values)                            
         L     R5,AWRKBLK                                                       
         USING WRKIOD,R5           R5=A(WRKIO block)                            
                                                                                
         CLI   PWCALL,PWALLQ       Test do all (build, create & run)            
         JE    *+12                                                             
         CLI   PWCALL,PWCWRQ       Test create worker file & run                
         JNE   PWRK0010                                                         
                                                                                
         MVC   WRKWUSID,LP_USRID   Build worker file key                        
         MVC   WRKWSPS,RSVRSYSC                                                 
         CLC   SAVEWSPS,NULLS      Test saved key (multi-server)                
         JE    *+10                                                             
         MVC   WRKWSPS,SAVEWSPS    Yes - use it                                 
         MVC   WRKWDAY,DAYTODAY                                                 
         MVI   WRKWCLS,WRKWCLSQ                                                 
                                                                                
PWRK0010 LHI   R0,0                R0=number of work queue entries              
                                                                                
         CLI   PWCALL,PWUPRQ       Test Prepare for RUNNER upload               
         JE    PWRK0020                                                         
         TM    LP_RUNI1,LP_RUPLQ   Test upload                                  
         JNZ   PWRKX                                                            
         CLC   AWRKBLK,FZERO       Test worker block provided                   
         JE    PWRK0060                                                         
                                                                                
PWRK0020 TM    LP_RUNI1,LP_RDSCQ   Test RUNNER available                        
         JZ    PWRK0060                                                         
         GOTOR TSVR                Test server(s) are available                 
         JE    PWRK0030            OK - we can run work (in theory)             
         TM    LP_RUNI1,LP_RNOWQ   Error - test if can run now                  
         JNZ   PWRK0060                                                         
         ICM   R1,8,0(R1)          No - return RUNIT error                      
         SRL   R1,24                                                            
         GOTOR FAGENERR,G#BASE(R1)                                              
                                                                                
PWRK0030 NI    LP_RUNI1,FF-(LP_RNOWQ)                                           
         IC    RE,LS_CINDS                                                      
         CLI   PWCALL,PWUPRQ       Test Prepare for RUNNER upload               
         JE    *+10                                                             
         MVC   LS_BVALS(LS_SEST-LS_BVALS),NULLS                                 
         STC   RE,LS_CINDS                                                      
         MVC   LS_QMAPN,LP_QMAPN   Save request map number                      
         MVC   LS_FAVER,LP_FAVER   Save PC comms version number                 
         CLC   WRKWKEY,NULLS       Ensure we have a worker key                  
         JE    DEATH257                                                         
         LA    R4,LS_WQUE          R4=A(work queue)                             
         SR    R2,R2                                                            
         ICM   R2,3,RSVRTYPS       Test server list present                     
         JZ    *+12                                                             
         A     R2,RUNASVR          Yes - point to it                            
         J     PWRK0040                                                         
         LA    R2,SVRTYPE          Else point to single entry list              
         MVC   0(L'RSVRTYPE,R2),RSVRTYPE                                        
         MVI   L'RSVRTYPE(R2),0                                                 
                                                                                
PWRK0040 TM    RSVRIND1,RSVRURMS   Test user-id required for submit             
         JZ    PWRK0050                                                         
         LA    R1,SVRTAB                                                        
         USING SVRTABD,R1          Locate server table entry                    
         LHI   RF,SVRTABM                                                       
         BASR  RE,0                                                             
         CLC   SVRTTYPE,0(R2)      Match server type to table                   
         JE    *+14                                                             
         AHI   R1,SVRTABL                                                       
         BCTR  RF,RE                                                            
         J     PWRK0130            Don't submit if not found                    
         CLC   SVRTUSID,NULLS      or user-id not supplied                      
         JE    PWRK0130                                                         
         MVC   WRKWUSID,SVRTUSID   Set user-id                                  
         MVC   LP_AGY,SVRTAGYA     Set agency alpha                             
         MVC   LP_ACCS,SVRTACC1    Set limit access 1                           
         DROP  R1                                                               
                                                                                
PWRK0050 CLI   PWCALL,PWRUNQ       Test run only                                
         JE    PWRK0070                                                         
         CLI   PWCALL,PWUPRQ       Test Prepare for RUNNER upload               
         JE    PWRK0110                                                         
         MVC   WRKIFTYP,RSVRFTYP   Set server work file type                    
         MVI   WRKIACTN,WRKIANEW   Open new worker file                         
         MVC   WRKLRETH,RETSERVE   Set live retain hours                        
         GOTOR WRKIO,WRKIOD                                                     
         JE    PWRK0070                                                         
         GOTOR PWRKERR,GE#COWRK                                                 
                                                                                
PWRK0060 NI    LP_RUNI1,FF-(LP_RDSCQ)                                           
         TM    RSVRIND2,RSVROUPD   Test RUNNER upload                           
         JNZ   PWRKX                                                            
         TM    LP_RUNI1,LP_RNOWQ   Test if work can run now                     
         JNZ   PWRK0070            Yes - do it                                  
         GOTOR FAGENERR,TQENOSVR+G#BASE                                         
                                                                                
PWRK0070 CLI   PWCALL,PWRUNQ       Test run only                                
         JE    PWRK0080                                                         
         CLI   PWCALL,PWCWRQ       Test create worker file & run                
         JE    PWRK0080                                                         
         GOTOR LP_ABREQ,BRREQQ     Build request record                         
                                                                                
PWRK0080 TM    LP_RUNI1,LP_RNOWQ   Test running now                             
         JNZ   PWRKX                                                            
                                                                                
PWRK0090 CLI   PWCALL,PWRUNQ       Test run only                                
         JE    PWRK0100                                                         
         GOTOR WRKIO,WRKIOD        Add download request record                  
         JE    PWRK0092                                                         
         GOTOR PWRKERR,GE#CAREQ                                                 
PWRK0092 MVI   WRKIACTN,WRKIACLO   and close the worker file                    
         GOTOR (RF),(R1)                                                        
         JE    PWRK0100                                                         
         GOTOR PWRKERR,GE#CCWRK                                                 
                                                                                
PWRK0100 MVC   LS_WKEY,WRKWKEY     Save the last worker file key                
                                                                                
PWRK0110 GOTOR RUNIT,DMCB,(0(R2),LS_WKEY),LP_AGY,0                              
         JE    PWRK0120                                                         
         ICM   R1,8,0(R1)                                                       
         SRL   R1,24                                                            
         GOTOR FAGENERR,G#BASE(R1)                                              
                                                                                
PWRK0120 TM    LP_RUNI1,LP_RDSCQ   Test submit in disconnect mode               
         JZ    PWRKX                                                            
                                                                                
         MVC   LS_AQUE,8(R1)       Extract A(work queue entry)                  
         CLC   LS_AQUE,NULLS                                                    
         JE    DEATH258                                                         
         MVC   LS_AQUE1-LS_WQUE(,R4),LS_AQUE                                    
         MVC   LS_WKEY1-LS_WQUE(,R4),LS_WKEY                                    
                                                                                
         AHI   R4,LS_WQUEL         Bump to next work queue entry                
         AHI   R0,1                Bump number of queue entries added           
                                                                                
PWRK0130 AHI   R2,L'RSVRTYPE                                                    
         CLI   0(R2),0             Test end of server list                      
         JNE   PWRK0040                                                         
         STC   R0,LS_WFLAG         Set number of servers used                   
         CHI   R0,1                Test muliple servers used                    
         JE    PWRKX                                                            
         OI    LS_WFLAG,LS_WFMLT   Yes - set on multi-server flag               
         J     PWRKX                                                            
                                                                                
PWRK0140 TM    LP_RUNI1,LP_RDSCQ                                                
         JNZ   PWRKX                                                            
         OI    LS_INDS1,LS_INOWQ   Set run now after validation                 
                                                                                
PWRKX    J     EXITY                                                            
                                                                                
PWRKERR  STC   R0,LS_WFLAG         Set number of entries created                
         GOTOR CANWRK              Cancel any oustanding work                   
         GOTOR FAGENERR,(R1)       Set error message                            
         DROP  R3,R5                                                            
         EJECT                                                                  
***********************************************************************         
* Test all required servers are available to run the work             *         
***********************************************************************         
                                                                                
TSVR     STM   RE,R2,SAVERE                                                     
         LHI   R0,LS_WMAXN         R0=maximum N'servers supported               
         SR    R2,R2                                                            
         ICM   R2,3,RSVRTYPS       Is a server list specified?                  
         JZ    TSVR0010                                                         
         A     R2,RUNASVR          Yes - point to list                          
         NI    LP_RUNI1,FF-(LP_RNOWQ)                                           
         J     TSVR0020                                                         
                                                                                
TSVR0010 MVC   SVRTYPE(L'RSVRTYPE),RSVRTYPE                                     
         MVI   SVRTYPE+L'RSVRTYPE,0                                             
         LA    R2,SVRTYPE          Point to single entry list                   
                                                                                
         CLI   SVRTYPE,FF          Test runs in default system server           
         JNE   TSVR0020            (DDLINK off-line downloads)                  
         LARL  R1,SVNTAB                                                        
         USING SVNTABD,R1                                                       
         LHI   R0,SVNTABN                                                       
TSVR0012 CLC   SVNTSYS,LP_OSYS     Locate default entry for system              
         JE    TSVR0014                                                         
         AHI   R1,SVNTABL                                                       
         JCT   R0,TSVR0012                                                      
         J     TSVRN               Error if not available                       
TSVR0014 MVC   0(L'RSVRTYPE,R2),SVNTTYP                                         
         MVC   RSVRTYPE,SVNTTYP    Also set RSVRTYPE here                       
         DROP  R1                                                               
                                                                                
TSVR0020 CLI   0(R2),0             Test at least one type specified             
         JE    DEATH259                                                         
                                                                                
TSVR0030 TM    RSVRIND1,RSVRURMS   Test user-id required                        
         JZ    TSVR0040                                                         
         LA    R1,SVRTAB                                                        
         USING SVRTABD,R1                                                       
         LHI   RF,SVRTABM                                                       
         BASR  RE,0                                                             
         CLC   SVRTTYPE,0(R2)                                                   
         JE    *+14                                                             
         AHI   R1,SVRTABL                                                       
         BCTR  RF,RE                                                            
         J     TSVR0050                                                         
         CLC   SVRTUSID,NULLS      User-id is required                          
         JE    TSVR0050                                                         
         DROP  R1                                                               
                                                                                
TSVR0040 GOTOR RUNIT,DMCB,(0(R2),0),LP_AGY,0                                    
         JNE   TSVRN                                                            
                                                                                
TSVR0050 AHI   R2,L'RSVRTYPE       Bump to next server in list                  
         CLI   0(R2),0             Test end of server list                      
         JE    TSTSVRY                                                          
         JCT   R0,TSVR0030                                                      
         J     DEATH260                                                         
                                                                                
TSTSVRY  LHI   RE,1                Set CC=equal if servers available            
         J     TSVRX                                                            
                                                                                
TSVRN    LHI   RE,0                Set CC=not equal if not                      
                                                                                
TSVRX    CHI   RE,1                                                             
         LM    RE,R2,SAVERE                                                     
         LA    R1,DMCB             Point R1 to RUNIT parameter list             
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Cancel work - purge queue entries and worker files                  *         
***********************************************************************         
                                                                                
CANWRK   NTR1  LABEL=*                                                          
         USING LS_D,R3             R3=A(saved w/s)                              
         L     R5,AWRKBLK          Point to input worker file block             
         USING WRKIOD,R5                                                        
         MVC   WORK(1),LS_WFLAG                                                 
         NI    WORK,LS_WFCNT                                                    
         SR    R0,R0                                                            
         ICM   R0,1,WORK           R0=number of work queue entries              
         JZ    CANWRKX             Exit if no current work                      
         LA    R4,LS_WQUE          R4=A(work queue)                             
                                                                                
CANWRK02 CLC   0(LS_WQUEL,R4),NULLS                                             
         JE    CANWRK14            Ignore sent entries                          
         MVC   LS_AQUE,LS_AQUE1-LS_WQUE(R4)                                     
         LHI   R6,10               Status change retry count                    
                                                                                
CANWRK04 ICM   R2,15,LS_AQUE                                                    
         JZ    DEATH261                                                         
         GOTOR PROTOFF                                                          
         LAM   AR2,AR2,LP_TALET                                                 
         SAC   512                                                              
         USING TABSQUED,R2         R2=A(RUNNER work queue)                      
         CLI   TQSTATUS,TQSWAIT    Test work waiting to run                     
         JNE   CANWRK06                                                         
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         GOTOR UPDQUE,WAITFREE     Free queue entry if waiting to run           
         JE    CANWRK14                                                         
         GOTOR PROTOFF                                                          
                                                                                
CANWRK06 ICM   R2,15,LS_AQUE                                                    
         JZ    DEATH262                                                         
         LAM   AR2,AR2,LP_TALET                                                 
         SAC   512                                                              
                                                                                
         LA    R1,SENDCANC                                                      
         CLI   TQSTATUS,TQSSEND    Test file sending                            
         JE    CANWRK07                                                         
         LA    R1,PENDCANC                                                      
         CLI   TQSTATUS,TQSPEND    or file send pending                         
         JE    CANWRK07                                                         
         LA    R1,PROCCANC                                                      
         CLI   TQSTATUS,TQSRUN     or running                                   
         JNE   CANWRK08                                                         
                                                                                
CANWRK07 SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         GOTOR UPDQUE,(R1)         Yes - set cancel action for RUNNER           
         JE    CANWRK14                                                         
         JCT   R6,CANWRK04         try again if not successful                  
         J     DEATH263                                                         
                                                                                
CANWRK08 CLI   TQSTATUS,TQSDONE    Test work is complete                        
         JNE   CANWRK13                                                         
         SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         GOTOR PROTON                                                           
         GOTOR UPDQUE,DONEFREE     Free the queue entry                         
         MVC   WRKWKEY,LS_WKEY1-LS_WQUE(R4)                                     
                                                                                
CANWRK10 MVI   WRKIFTYP,WRKIFTWF   Attempt to purge the worker file             
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD        Open the worker file                         
         JNE   CANWRK14            Ignore if can't open it                      
         MVC   LS_WSEG,NULLS       Clear next segment key                       
         GOTOR (RF),(R1)           Read request record                          
         JNE   CANWRK12                                                         
         GOTOR SETREQ,WRKIAREC     Set next segment key                         
                                                                                
CANWRK12 GOTOR DMGR,WRKIPARM,WSP   Purge the worker file                        
         CLC   LS_WSEG,NULLS       Test next segment key present                
         JE    CANWRK14                                                         
         MVC   WRKWKEY,LS_WSEG     Yes - purge next segment                     
         J     CANWRK10                                                         
                                                                                
CANWRK13 GOTOR PROTON              Turn storage protection back on              
                                                                                
CANWRK14 MVC   0(LS_WQUEL,R4),NULLS                                             
         AHI   R4,LS_WQUEL         Bump to next work queue entry                
         JCT   R0,CANWRK02         Do for number of queue entries               
         MVI   LS_WFLAG,0          Set nothing in work queue                    
                                                                                
CANWRKX  LAM   AR0,ARF,ARZERO      Ensure we are not in AR mode                 
         SAC   0                                                                
         J     EXITY                                                            
         DROP  R2,R3,R5                                                         
         EJECT                                                                  
***********************************************************************         
* Update TQSTATUS/TQACTION or free work queue entry                   *         
*                                                                     *         
* Ntry:- R1=Current/new status values                                 *         
*        R3=A(LS_D if running on-line) to get work queue lockword     *         
*                                                                     *         
* Exit:- CC=Equal if updated, low if the lock could not be obtained   *         
*        for the queue entry, high if the current queue status is     *         
*        different than expected                                      *         
*                                                                     *         
* Note:- If current status value is null the queue entry will be      *         
*        updated regardless of current status.  If new status value   *         
*        is null the queue entry will be cleared                      *         
***********************************************************************         
                                                                                
UPDQUE   NTR1  LABEL=*                                                          
         LR    R4,R1               R4=A(old/new status)                         
         MVI   BYTE1,0             Status change flag                           
         ICM   R2,15,RUNAQUE                                                    
         MVC   DUB(L'RUNAQUE),RUNAQUE                                           
         TM    LP_FLAG1,LP_FOFFL   Test off-line                                
         JNZ   UPDQUE02            Yes                                          
         ICM   R2,15,LS_AQUE-LS_D(R3)                                           
                                                                                
UPDQUE02 GOTOR PROTOFF                                                          
         GOTOR LOCKSPC,DMCB,DTRUNITL,0                                          
         LAM   AR0,ARF,ARZERO                                                   
         LAM   AR2,AR2,LP_TALET                                                 
         SAC   512                                                              
         USING TABSQUED,R2                                                      
                                                                                
         CLI   0(R4),0             Test current status is 'any'                 
         JE    *+14                                                             
         CLC   TQSTATUS,0(R4)      No - match current status                    
         JNE   UPDQUE04                                                         
         MVI   BYTE1,1             Set queue status changed flag                
                                                                                
         CLI   1(R4),TQSCANC       Test setting cancel action                   
         JNE   *+12                                                             
         MVI   TQACTION,TQACANC    Yes - set it                                 
         J     UPDQUE04                                                         
                                                                                
         MVC   TQSTATUS,1(R4)      Set new queue status                         
         CLI   1(R4),TQSFREE       Test new status is 'free'                    
         JNE   UPDQUE04                                                         
         MVC   TABSQUED(TABSQUEL),NULLS                                         
                                                                                
UPDQUE04 SAC   0                                                                
         LAM   AR2,AR2,ARZERO                                                   
         DROP  R2                                                               
                                                                                
         GOTOR LOCKSPC,DMCB,(X'10',DTRUNITL),0                                  
         SAC   0                                                                
         LAM   AR0,ARF,ARZERO                                                   
                                                                                
         GOTOR PROTON                                                           
         LHI   R0,1                Set CC=equal if queue updated                
         CLI   BYTE1,1             Test queue status updated                    
         JE    UPDQUEX                                                          
         LHI   R0,2                Set CC=high if status different              
                                                                                
UPDQUEX  CHI   R0,1                Set condition code for caller                
         J     EXIT                                                             
         EJECT                                                                  
***********************************************************************         
* Routine to validate request data screen                             *         
***********************************************************************         
                                                                                
         USING LS_D,R3                                                          
VALSCR   NTR1  LABEL=*                                                          
                                                                                
         MVI   LP_CMODE,RRUNSTRQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize run                
                                                                                
         MVI   LP_CMODE,RPRCWRKQ                                                
         GOTOR LP_AGSVR,RSVRADDR   Call server to initialize request            
                                                                                
         LLH   R4,LS_BFDSP                                                      
         A     R4,LP_ATWA                                                       
         USING TWADATAD,R4         R4=A(input line)                             
         SR    R5,R5                                                            
         ICM   R5,1,LS_BFFST                                                    
                                                                                
VALSCR02 CLM   R5,1,LS_BFLST       Test greater than last on screen             
         JH    EXITY                                                            
         GOTOR GETMAP,(R5)         Look up maps                                 
         JNE   EXITY                                                            
         LR    R6,RF                                                            
         USING LD_D,R6                                                          
         GOTOR DELIDP              Delete if already in data pool               
         SR    R0,R0                                                            
         ICM   R0,1,TWAVALH+(FLDILEN-FLDHDRD)                                   
         JZ    VALSCR06                                                         
         GOTOR LP_AVSTR,DMCB,TWAVAL,(R0),LD_D,TWAVALH                           
         JE    VALSCR04                                                         
         OI    TWAVALH+(FLDOIND-FLDHDRD),FOUTCUR+FOUTTRN                        
         GOTOR FAINPERR            Exit on error                                
                                                                                
VALSCR04 LLH   RE,LS_BFNXT                                                      
         LA    RE,LS_POOL(RE)                                                   
         USING LC_D,RE                                                          
         MVC   LC_CODE,LD_CODE                                                  
         LR    R1,R0                                                            
         BCTR  R1,0                                                             
         EX    R1,VSCRMVCT                                                      
         AHI   R1,LC_LN1Q+1                                                     
         STC   R1,LC_LN                                                         
         DROP  RE                                                               
         AR    RE,R1                                                            
         LA    R1,LS_POOL                                                       
         SR    RE,R1                                                            
         STCM  RE,3,LS_BFNXT                                                    
                                                                                
VALSCR06 SR    R0,R0               Advance to next line on screen               
         IC    R0,TWAKWDH+(FLDLEN-FLDHDRD)                                      
         AR    R4,R0                                                            
         IC    R0,TWAKWDH+(FLDLEN-FLDHDRD)                                      
         AR    R4,R0                                                            
                                                                                
VALSCR08 AHI   R5,1                Bump line number                             
         J     VALSCR02                                                         
         DROP  R3,R4,R6                                                         
                                                                                
**********************************************************************          
* Build DSN text for output file, call dynamic allocation and open   *          
* the output file (EDIOUT)                                           *          
**********************************************************************          
                                                                                
BLDDSN   NTR1  LABEL=*                                                          
*                                                                               
         LA    R2,EDIOUT                                                        
         CLC   =C'EDIOUT',0(R2)    File not closed due to failure?              
         JE    BLDDSN03            No - Continue                                
         GOTOR CLOOUT              Yes- Close output file                       
*                                                                               
BLDDSN03 L     R3,ARUNFACS                                                      
         USING RUNFACSD,R3         R3=A(RUNNER facilities)                      
         MVC   LP_DSNTO,SPACES     Pre-set DSN text to spaces                   
         MVC   LP_DSNTO(L'ROFILHLQ),NULLS                                       
         OC    LP_DSNTO(L'ROFILHLQ),ROFILHLQ                                    
         JZ    DEATH320                                                         
         LA    R2,LP_DSNTO+L'ROFILHLQ-1                                         
         CLI   0(R2),C' '                                                       
         JH    *+8                                                              
         JCT   R2,*-8                                                           
         LA    R2,1(R2)                                                         
         MVI   0(R2),C'.'                                                       
         LA    R2,1(R2)                                                         
         CLC   DSNHLQ3,NULLS       Test we have 3rd level qualifier             
         JE    BLDDSN10            No                                           
         CLC   =C'PINERGYU',DSNHLQ3   Pinergy upload?                           
         JE    BLDDSN05               Yes                                       
         MVC   0(L'DSNHLQ3,R2),DSNHLQ3  No, use whatever was provided           
         LA    R2,L'DSNHLQ3-1(R2)                                               
         J     BLDDSN20                                                         
*                                                                               
BLDDSN05 MVC   0(7,R2),=CL7'PINERGY' Reply for Pinergy upload we want           
         LA    R2,6(R2)               as SFTPDISK.????.PINERGY.R?               
         J     BLDDSN20                                                         
                                                                                
BLDDSN10 L     RF,AMASTD           Use step name if not given                   
         MVC   0(L'MCSTEP,R2),MCSTEP-MASTD(RF)                                  
         LA    R2,L'MCSTEP-1(R2)                                                
                                                                                
BLDDSN20 CLI   0(R2),C' '                                                       
         JH    *+8                                                              
         JCT   R2,*-8                                                           
         LA    R2,1(R2)                                                         
         MVI   0(R2),C'.'                                                       
         LA    R2,1(R2)                                                         
*                                                                               
         MVI   0(R2),C'D'            Day number                                 
         CLC   =C'PINERGYU',DSNHLQ3  Pinergy upload?                            
         JNE   *+8                   No                                         
         MVI   0(R2),C'R'            We want R+Daynum for the response          
         MVC   1(1,R2),DAYNUM                                                   
         LA    R2,2(R2)                                                         
*                                                                               
         MVI   0(R2),C'.'                                                       
         LA    R2,1(R2)                                                         
         MVI   0(R2),C'T'                                                       
         GOTOR GETTIM              Get current time into WORK                   
         MVC   1(7,R2),WORK                                                     
         LA    R2,8(R2)                                                         
         MVI   0(R2),C'.'                                                       
         LA    R2,1(R2)                                                         
         MVI   0(R2),C'X'          Pre-seed agency with 'XXXX'                  
         MVC   1(L'UIDAGYLB-1,R2),0(R2)                                         
         L     R1,RUIDREC          Point to UID record                          
         USING UIDRECD,R1                                                       
         CLC   UIDAGYLB,NULLS      Test agency label defined                    
         JE    BLDDSN30            No                                           
         MVC   0(L'UIDAGYLB,R2),UIDAGYLB                                        
         DROP  R1                                                               
                                                                                
BLDDSN30 GOTOR DYNALLOC,DMCB,(X'80',EDIOUT+40),                        +        
               (X'45',ROUTPRI),                                        +        
               (X'80',LP_DSNTO)                                                 
         GOTOR OPNOUT              Open the output file                         
         J     EXIT                                                             
         DROP  R3                                                               
         EJECT                                                                  
***********************************************************************         
* Download control 1 record                                           *         
***********************************************************************         
                                                                                
DLCTRL   LKSVR TYPE=D,REQUEST=DLCMAP,CODE=DLCGO,SYSTEM=GENSYS#,CSECT=N          
                                                                                
DLCGO    NTR1  LABEL=*                                                          
         LR    R9,R1               R9=A(LP_D)                                   
         L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LARL  RA,GLOBALS          RA=A(DDLINK global literals)                 
         CLI   LP_CMODE,RRUNREQQ                                                
         JNE   EXITY                                                            
         GOTOR LP_APUTO,LP_D       Call OUTPUT s/r to send control 1            
         J     EXITY                                                            
                                                                                
DLCREQ   LKREQ *,I#CTRLDL,OUTDLC                                                
                                                                                
OUTDLC   EQU   *                   Dummy output table                           
         EJECT                                                                  
***********************************************************************         
* Download General values                                                       
***********************************************************************         
                                                                                
B#GVLSVD EQU   2                                                                
GNVALS   LKSVR TYPE=D,REQUEST=GVLMAP,CODE=GETGNVAL,SYSTEM=GENSYS#,     +        
               CSECT=N,BLOCKS=(B#GVLSVD,GNVALSVD,B#WORKD,WORKD),       +        
               SERVERTYPE=FF,WORKERKEY=DDSB,IDF=Y                               
                                                                                
GETGNVAL NTR1  LABEL=*                                                          
         LR    R9,R1               R9=A(LP_D)                                   
         L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LARL  RA,GLOBALS          RA=A(DDLINK global literals)                 
         L     RF,LP_ARUNP                                                      
         L     R8,ASVRSAVE                                                      
         USING GNVALSVD,R8         R8=A(save w/s)                               
         TM    LP_FLAG,LP_FOFFL                                                 
         JZ    *+8                                                              
         L     R8,LP_ATWA          Point to TWA if off-line                     
         ST    RC,LP_ABLK1                                                      
         ST    R8,LP_ABLK2                                                      
         STM   R2,RB,LP_R2RB                                                    
                                                                                
         CLI   LP_CMODE,RRUNREQQ                                                
         JNE   EXITY                                                            
         GOTOR LP_APUTO,LP_D       Call OUTPUT s/r to send control 1            
         J     EXITY                                                            
                                                                                
GVALREQ  LKREQ H,I#GENVAL,OUTGVAL                                               
System   LKREQ F,01,(D,B#GVLSVD,GVLSYSN),LBIN,TEXT=(*,DSYSLIT),COL=*            
Program  LKREQ F,02,(D,B#GVLSVD,GVLPRGN),LBIN,TEXT=(*,DPRGLIT),COL=*            
         LKREQ E                                                                
                                                                                
OUTGVAL  LKOUT H                   Dummy output table                           
                                                                                
GVLVALS  LKOUT R,X'0100'                                                        
PRout    LKOUT P,,GTGVLSDR                                                      
Array    LKOUT C,X'0100',(A,ARYGVL)                                             
         LKOUT E                                                                
                                                                                
         LKOUT X                                                                
                                                                                
ARYGVL   LKOUT A,(R,GTGVLAIO),EOT=EOR,ROWWIDTH=(V,SDELEN),             +        
               ROWID=(SDELD,0)                                                  
Defvl    LKOUT C,255,SDELD,SDEL                                                 
         LKOUT E                                                                
                                                                                
GTGVLSDR DS    0H                                                               
         LA    R2,GVLIO2                                                        
         ST    R2,GVLAIO                                                        
*                                                                               
         LR    RE,R2                                                            
         LHI   RF,FOURK                                                         
         XCEFL ,                                                                
*                                                                               
         MVI   DMCB+12,C'V'                                                     
         MVC   DMCB+13(L'GVLSYSN),GVLSYSN                                       
         MVC   DMCB+14(L'GVLPRGN),GVLPRGN                                       
*                                                                               
         GOTOR LP_AGSDR,DMCB,LP_D,GVLAIO,0,,0,0                                 
*                                                                               
         L     RF,LP_ACOM          LOAD FACILITIES OVERLAYS                     
         L     RF,CRECUP-COMFACSD(RF)                                           
         ST    RF,GVLRECUP                                                      
*****                                                                           
* SDR SEQUENTIAL RECORD                                                         
*****                                                                           
GTSDR05  LA    R2,GVLIO1                                                        
         USING SDRRECD,R2                                                       
         LR    RE,R2               CLEAR OUT THE RECORD                         
         LA    RF,TWOK                                                          
         XCEFL ,                                                                
*                                                                               
         LHI   RF,1                                                             
GTSDR07  STC   RF,BYTE1                                                         
         GOTOR LP_AGSDR,DMCB,LP_D,(BYTE1,GVLIO1),0                              
*                                                                               
         LA    RE,GVLIO2           NEED THIS CHECK AS GETSDR DOES A             
         LA    RF,GVLIO1             DEFAULT READ BY CLEARING SDRKFFL           
         CLC   0(SDRKKEY-SDRKEY,RE),0(RF)                                       
         JNE   GTSDRX                                                           
         CLC   31(1,RF),BYTE1      MATCH ON SEQ?                                
         JNE   GTSDRX                                                           
*                                                                               
         BRAS  RE,SDRMOVE                                                       
*                                                                               
         LLC   RF,BYTE1                                                         
         AHI   RF,1                                                             
         CHI   RF,3                MORE THEN 2 SEQ RECORDS?                     
         JNH   GTSDR07              NO, GET NEXT SEQ                            
         DC    H'0'                 YES, TRASHES NEXT AIO6                      
*                                                                               
GTSDRX   J     EXIT                                                             
         EJECT                                                                  
GTGVLAIO DS    0H                                                               
         LA    R2,GVLIO2           R2 = a(first element)                        
         LA    R2,SDRRFRST-SDRKEY(R2)                                           
         ST    R2,LP_ADATA                                                      
         J     EXITY                                                            
         EJECT                                                                  
SDRMOVE  NTR1  LABEL=*                                                          
         LA    R2,GVLIO1           LOOK AT THE AGENCY SPECIFIC SDR              
         OC    0(2,R2),0(R2)       MAKE SURE WE HAVE A RECORD                   
         JZ    SDRMVX              OTHERWISE JUST USE GENERIC SDR               
         LA    R2,SDRRFRST                                                      
SDRMV010 CLI   0(R2),0             ANY MORE ELEMENT IN SEQ RECORD?              
         JE    SDRMVX                                                           
*                                                                               
         LA    R6,GVLIO2                                                        
         LLH   RF,SDRRLEN-SDRKEY(R6)  GET LENGTH OF REC                         
         AR    R6,RF                                                            
*                                                                               
         GOTOR GVLRECUP,DMCB,(X'FE',GVLIO2),0(R2),0(R6),               +        
               =X'002A00201770'                                                 
*                                                                               
         LLC   R1,1(R2)                                                         
         AR    R2,R1                                                            
         J     SDRMV010                                                         
*                                                                               
SDRMVX   J     EXITY                                                            
*                                                                               
GNVALSVD DSECT ,                   ** Server work/save area **                  
GVLQVAL  DS    0X                  ** Request values **                         
GVLRECUP DS    A                   A(RECUP)                                     
GVLAIO   DS    A                   A(IOAREA TO USE)                             
GVLSYSN  DS    X                   SYSTEM NUMBER                                
GVLPRGN  DS    XL2                 PROGRAM NUMBER (TXPNUM)                      
*                                                                               
GVLKEY   DS    XL32                CURRENT GENVAL KEY                           
GVLIO1   DS    XL(TWOK)            IO #1 FOR GEGENSDR RECORD                    
GVLIO2   DS    XL(FOURK)           IO #2 FOR GEGENSDR RECORD                    
                                                                                
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Download security records                                           *         
***********************************************************************         
                                                                                
B#SECSVD EQU   2                                                                
                                                                                
SECBRO   LKSVR TYPE=D,REQUEST=DLSMAP,CODE=SECBROEP,SYSTEM=GENSYS#,     +        
               CSECT=N,BLOCKS=(B#SECSVD,SECSAVED,B#WORKD,WORKD),       +        
               SERVERTYPE=FF,WORKERKEY=DDSB,IDF=Y                               
                                                                                
SECBROEP NTR1  LABEL=*                                                          
         LR    R9,R1               R9=A(LP_D)                                   
         L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LARL  RA,GLOBALS          RA=A(DDLINK global literals)                 
         L     RF,LP_ARUNP                                                      
         L     R8,ASVRSAVE                                                      
         USING SECSAVED,R8         R8=A(save w/s)                               
         TM    LP_FLAG,LP_FOFFL                                                 
         JZ    *+8                                                              
         L     R8,LP_ATWA          Point to TWA if off-line                     
         ST    RC,LP_ABLK1                                                      
         ST    R8,LP_ABLK2                                                      
         STM   R2,RB,LP_R2RB                                                    
                                                                                
         CLI   LP_CMODE,RPRCWRKQ   Test process work mode                       
         JNE   SECBRO02                                                         
         MVC   SECQVAL(SECQVALL),NULLS                                          
         J     EXITY                                                            
                                                                                
SECBRO02 CLI   LP_CMODE,RRUNREQQ   Test run request mode                        
         JNE   EXITY                                                            
         GOTOR DATCON,DMCB,(5,0),(2,SECTODC)                                    
         GOTOR LP_APUTO,LP_D       Call OUTPUT s/r to send data                 
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Security download request                                           *         
***********************************************************************         
                                                                                
REQSEC   LKREQ H,I#SECBRO,OUTSEC                                                
                                                                                
AgyAlpha LKREQ F,01,(D,B#SECSVD,SECAGYA),CHAR,TEXT=(*,ACODLIT),COL=*            
OffID    LKREQ F,02,(I,B#SECSVD,SECAOFFI),CHAR,TEXT=(*,OCODLIT),COL=*, +        
               DEFAULT=Y,OLEN=L'SAOFOID,LIST=Y                                  
DptId    LKREQ F,03,(I,B#SECSVD,SECADPTI),CHAR,TEXT=(*,DCODLIT),COL=*, +        
               DEFAULT=Y,OLEN=L'SADPDID,LIST=Y                                  
PID      LKREQ F,04,(I,B#SECSVD,SECAPIDI),CHAR,TEXT=(*,DPIDLIT),COL=*, +        
               DEFAULT=Y,OLEN=L'SAPEPID,LIST=Y                                  
System   LKREQ F,05,(D,B#SECSVD,SECSYSN),LBIN,TEXT=(*,DSYSLIT),COL=*            
Program  LKREQ F,06,(D,B#SECSVD,SECPRGN),LBIN,TEXT=(*,DPRGLIT),COL=*            
DLOffs   LKREQ F,20,(D,B#SECSVD,SECOFFB),CHAR,TEXT=(*,DOFFLIT),COL=*            
DLDeps   LKREQ F,21,(D,B#SECSVD,SECDPTB),CHAR,TEXT=(*,DDPTLIT),COL=*            
DLAccs   LKREQ F,22,(D,B#SECSVD,SECACCB),CHAR,TEXT=(*,DACCLIT),COL=*            
DLPers   LKREQ F,23,(D,B#SECSVD,SECPERB),CHAR,TEXT=(*,DPERLIT),COL=*            
DLHist   LKREQ F,24,(D,B#SECSVD,SECHSTB),CHAR,TEXT=(*,DHSTLIT),COL=*            
DLAuth   LKREQ F,25,(D,B#SECSVD,SECAUTB),CHAR,TEXT=(*,DAUTLIT),COL=*            
TTrap    LKREQ F,99,(I,B#SECSVD,SECTRPI),CHAR,TEXT=(*,TRAPLIT),COL=*,  +        
               LIST=F,OLEN=TRPLNQ                                               
TRPLNQ   EQU   20                  Length of a trap                             
                                                                                
         LKREQ E                                                                
                                                                                
OCODLIT  DC    C'Office code/list'                                              
DCODLIT  DC    C'Department code/list'                                          
DPIDLIT  DC    C'Person id (PID)/list'                                          
DSYSLIT  DC    C'System filter'                                                 
DPRGLIT  DC    C'Program filter'                                                
DOFFLIT  DC    C'Browse offices?'                                               
DDPTLIT  DC    C'Browse departments?'                                           
DACCLIT  DC    C'Browse access records?'                                        
DPERLIT  DC    C'Browse people?'                                                
DHSTLIT  DC    C'Browse person history?'                                        
DAUTLIT  DC    C'Download sys/prg auths?'                                       
TRAPLIT  DC    C'Trap(s)'                                                       
                                                                                
OUTSEC   LKOUT H                                                                
                                                                                
SECODB   LKOUT R,X'0001'           Office/department browser                    
PTrap    LKOUT P,,SETTRP           Set trap                                     
PRout    LKOUT P,,INIAGY           Initialize security agency                   
Array    LKOUT C,X'0001',(A,ARYOFF),FILTROUT=TSTODB                             
         LKOUT E                                                                
                                                                                
SECACC   LKOUT R,X'0010'           Access record browser                        
Array    LKOUT C,X'0010',(A,ARYACC),FILTROUT=TSTACC                             
         LKOUT E                                                                
                                                                                
SECPER   LKOUT R,X'0020'           Person browser                               
Array    LKOUT C,X'0020',(A,ARYPER),FILTROUT=TSTPER                             
         LKOUT E                                                                
                                                                                
SECOCO   LKOUT R,X'0022'           Option controls                              
Array    LKOUT C,X'0022',(A,ARYOCO),FILTROUT=TSTAUT                             
         LKOUT E                                                                
                                                                                
SECFCO   LKOUT R,X'0023'           Field controls                               
Array    LKOUT C,X'0023',(A,ARYFCO),FILTROUT=TSTAUT                             
         LKOUT E                                                                
                                                                                
SECACO   LKOUT R,X'0024'           Access controls                              
Array    LKOUT C,X'0024',(A,ARYACO),FILTROUT=TSTAUT                             
         LKOUT E                                                                
                                                                                
         LKOUT X                                                                
                                                                                
SETTRP   SR    R2,R2               Set traps                                    
         ICM   R2,7,SECATRP                                                     
         JZ    EXIT                                                             
         LLH   R0,LW_NUMN-LW_D(R2)                                              
         AHI   R2,LW_LN2Q                                                       
SETTRP02 LARL  RF,TRAP             Point to my trap routine                     
         GOTOR CALLOV,DMCB,(X'80',0),(C'T',(R2)),0,(RF)                         
         AHI   R2,TRPLNQ           Point to next trap                           
         JCT   R0,SETTRP02                                                      
         MVI   LITINIT,0           Set to re-initialize next time               
         J     EXIT                through the top of DDLINK                    
                                                                                
TRAP     DC    H'0'                I got the trap                               
                                                                                
TSTODB   CLI   SECOFFB,C'Y'        Test office browser on                       
         BER   RE                                                               
         CLI   SECDPTB,C'Y'        Test department browser on                   
         BR    RE                                                               
                                                                                
TSTACC   CLI   SECACCB,C'Y'        Test access record browser on                
         BR    RE                                                               
                                                                                
TSTPER   CLI   SECAUTB,C'Y'        Test auth browser on                         
         BER   RE                                                               
         CLI   SECPERB,C'Y'        Test person browser on                       
         BR    RE                                                               
                                                                                
***********************************************************************         
* Read access record to establish the security agency                 *         
***********************************************************************         
                                                                                
INIAGY   LR    R2,RC                                                            
         USING IAWORKD,R2                                                       
         CLC   SECAGYA,NULLS       Test agency alpha id given                   
         JNE   *+10                                                             
         MVC   SECAGYA,LP_AGY      No - use connected agency alpha id           
                                                                                
K        USING CT5REC,IAKEY                                                     
R        USING CT5REC,IAIO                                                      
         MVC   K.CT5KEY,NULLS      Read access record for agency                
         MVI   K.CT5KTYP,CT5KTYPQ                                               
         MVC   K.CT5KALPH,SECAGYA                                               
         GOTOR DMGR,DMCB,DMREAD,CTFILE,K.CT5KEY,R.CT5KEY                        
         JNE   DEATH318                                                         
                                                                                
         LA    R1,R.CT5DATA        Look for security agency override            
         USING CTSEAD,R1                                                        
         SR    R0,R0                                                            
INIAGY02 CLI   CTSEAEL,EOR         Test end of record                           
         JE    EXITY                                                            
         CLI   CTSEAEL,CTSEAELQ    Test security agency element                 
         JE    *+14                                                             
         IC    R0,CTSEALEN                                                      
         AR    R1,R0                                                            
         J     INIAGY02                                                         
         MVC   SECAGYA,CTSEAAID    Extract security agency alpha id             
         J     EXITY                                                            
         DROP  R1,R2                                                            
                                                                                
IAWORKD  DSECT ,                   ** INIAGY work area **                       
IAKEY    DS    XL(L'CT5KEY)        Access record key                            
IAIO     DS    XL(ONEK)            Access record                                
DDLINK   CSECT ,                                                                
                                                                                
***********************************************************************         
* Read office records for an agency                                   *         
***********************************************************************         
                                                                                
ARYOFF   LKOUT A,(R,NXTOFF),MULTIROW=Y,ROWNAME=SAOFREC                          
OFFSKIP  EQU   *                                                                
AgyCode  LKOUT C,01,SAOFAGY,CHAR,FILTROUT=TSTOFF,SKIPCOLS=OFFSKIPS              
OffCode  LKOUT C,02,SAOFOID,CHAR                                                
Array    LKOUT C,03,(A,ARYODT)     Office name                                  
Array    LKOUT C,04,(A,ARYMAN)     Manager PIDs                                 
OFFSKIPS EQU   (*-OFFSKIP)/LX_COLSL                                             
Array    LKOUT C,X'0002',(A,ARYDPT),FILTROUT=TSTDPT                             
         LKOUT E                                                                
                                                                                
TSTOFF   CLI   SECOFFB,C'Y'        Test office browser on                       
         BR    RE                                                               
                                                                                
ARYODT   LKOUT A,(*,SAOFDATA),EOT=EOR,ROWID=(SAOFFEL,SAOFFELQ),        +        
               ROWWIDTH=(V,SAOFFLN),ROWNAME=SAOFREC                             
OffName  LKOUT C,03,SAOFFNAM,CHAR,LEN=V                                         
         LKOUT E                                                                
                                                                                
NXTOFF   LA    R2,OFFKEYT          Point to office key driver                   
         LA    R3,SECOKEY          Point to office key area                     
         J     NXTSEC              Go to general read                           
                                                                                
TSTDPT   CLI   SECDPTB,C'Y'        Test department records required             
         BR    RE                                                               
                                                                                
***********************************************************************         
* Read department records for an office                               *         
***********************************************************************         
                                                                                
ARYDPT   LKOUT A,(R,NXTDPT),MULTIROW=Y,ROWNAME=SADPREC                          
Agency   LKOUT C,01,SADPAGY,CHAR                                                
DeptCod  LKOUT C,02,SADPDID,CHAR                                                
Array    LKOUT C,03,(A,ARYDDT)     Department details                           
Array    LKOUT C,04,(A,ARYMAN)     Manager PIDs                                 
         LKOUT E                                                                
                                                                                
ARYDDT   LKOUT A,(*,SADPDATA),EOT=EOR,ROWID=(SADPTEL,SADPTELQ),        +        
               ROWWIDTH=(V,SADPTLN),ROWNAME=SADPREC                             
OffName  LKOUT C,03,SADPTNAM,CHAR,LEN=V                                         
         LKOUT E                                                                
                                                                                
ARYMAN   LKOUT A,(*,SADPDATA),EOT=EOR,ROWID=(SAMANEL,SAMANELQ),        +        
               ROWWIDTH=(V,SAMANLN),ROWNAME=SADPREC                             
PRout    LKOUT C,04,SAMANID,(R,GETPID)                                          
         LKOUT E                                                                
                                                                                
NXTDPT   LA    R2,DPTKEYT          Point to department key driver               
         LA    R3,SECDKEY          Point to department key area                 
         J     NXTSEC              Go to general read                           
                                                                                
***********************************************************************         
* Read access records for an agency                                   *         
***********************************************************************         
                                                                                
ARYACC   LKOUT A,(R,NXTACC),MULTIROW=Y,ROWNAME=SAAGREC                          
Agency   LKOUT C,01,SAAGAGY,CHAR                                                
AGroupCd LKOUT C,02,SAAGAGR,CHAR                                                
Array    LKOUT C,03,(A,ARYAGN)                                                  
         LKOUT E                                                                
                                                                                
ARYAGN   LKOUT A,(*,SAAGDATA),EOT=EOR,ROWID=(SAAGNEL,SAAGNELQ),        +        
               ROWWIDTH=(V,SAAGNLN),ROWNAME=SAAGREC                             
AGroupNo LKOUT C,03,SAAGNNUM,LBIN                                               
AGroupNm LKOUT C,04,SAAGNNAM,CHAR,LEN=V                                         
         LKOUT E                                                                
                                                                                
NXTACC   LA    R2,ACCKEYT          Point to access key driver                   
         LA    R3,SECAKEY          Point to access key area                     
         J     NXTSEC              Go to general read                           
                                                                                
***********************************************************************         
* Read person records for an agency, optionally filter on office and  *         
* department and extract some difficult values for sending            *         
***********************************************************************         
                                                                                
ARYPER   LKOUT A,(R,NXTPER),MULTIROW=Y,ROWNAME=SAPEREC                          
AgyCode  LKOUT C,01,SAPEAGY,CHAR,FILTROUT=TSTPDT,SKIPCOLS=PERSKIPS              
PERSKIP  EQU   *                                                                
PIDCode  LKOUT C,02,SAPEPID,CHAR                                                
PIDNum   LKOUT C,03,(D,B#SECSVD,SECPPID#),HEXD                                  
EffDate  LKOUT C,04,SAPEDEF,(R,EDTEFD),LEN=8                                    
FirstNm  LKOUT C,05,(D,B#SECSVD,SECPFNAM),CHAR,ND=Y                             
MiddleNm LKOUT C,06,(D,B#SECSVD,SECPMNAM),CHAR,ND=Y                             
LastNm   LKOUT C,07,(D,B#SECSVD,SECPLNAM),CHAR,ND=Y                             
Array    LKOUT C,10,(A,ARYPDT)     Person details                               
Array    LKOUT C,20,(A,ARYPEM)     E-mail address                               
Array    LKOUT C,21,(A,ARYLAC)     Limit access group code                      
Array    LKOUT C,22,(A,ARYTSA)     Time sheet approver group num/code           
PERSKIPS EQU   (*-PERSKIP)/LX_COLSL                                             
Array    LKOUT C,24,(A,ARYAGC)     Access group (add to driver list)            
Array    LKOUT C,X'0021',(A,ARYSYS),FILTROUT=TSTAUT                             
         LKOUT E                                                                
                                                                                
NXTPER   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTPER02                                                         
         MVC   SECPKEY,NULLS       Yes - clear key for SETKEY call              
                                                                                
NXTPER02 GOTOR LP_ASETK,DMCB,(0,PERKEYT),SECPKEY,SECSAVED,('FF',LP_D)           
         JH    NOMORE                                                           
         GOTOR DMGR,DMCB,DMRDHI,CTFILE,SECPKEY,SECIO1                           
         JNE   NOMORE                                                           
         MVC   SECPKEY,SECIO1      Set key of record read                       
         GOTOR LP_ASETK,DMCB,(1,PERKEYT),SECPKEY,SECSAVED,('FF',LP_D)           
         JNE   NXTPER02                                                         
         LA    R0,SECIO1                                                        
         ST    R0,LP_ADATA         Point to person record                       
                                                                                
         MVC   SECPFNAM,SPACES     Initialize names                             
         MVC   SECPMNAM,SPACES                                                  
         MVC   SECPLNAM,SPACES                                                  
                                                                                
R        USING SAPEREC,SECIO1                                                   
         LA    R4,R.SAPEDATA       Process person record                        
         SR    R0,R0                                                            
         USING SANAMD,R4                                                        
NXTPER04 CLI   SANAMEL,EOR         Test end of record                           
         JE    NXTPER20                                                         
                                                                                
         CLI   SANAMEL,SANAMELQ    Test name element                            
         JNE   NXTPER10                                                         
         MVC   BYTE1,SANAMIND                                                   
         LA    R3,SANAMES                                                       
         SR    RF,RF                                                            
SNAM     USING SANAMES,R3                                                       
                                                                                
         TM    BYTE1,SANAMIFN      Test first name present                      
         JZ    NXTPER06                                                         
         IC    RF,SNAM.SANAMELN                                                 
         BCTR  RF,0                                                             
         EX    RF,NPERMVFN                                                      
         LA    R3,2(RF,R3)                                                      
                                                                                
NXTPER06 TM    BYTE1,SANAMIMN      Test middle name present                     
         JZ    NXTPER08                                                         
         IC    RF,SNAM.SANAMELN                                                 
         BCTR  RF,0                                                             
         EX    RF,NPERMVMN                                                      
         LA    R3,2(RF,R3)                                                      
                                                                                
NXTPER08 TM    BYTE1,SANAMILN      Test last name present                       
         JZ    NXTPER18                                                         
         IC    RF,SNAM.SANAMELN                                                 
         BCTR  RF,0                                                             
         EX    RF,NPERMVLN                                                      
         J     NXTPER18                                                         
         DROP  SNAM                                                             
                                                                                
         USING SAPERD,R4                                                        
NXTPER10 CLI   SAPEREL,SAPERELQ    Test person details element                  
         JNE   NXTPER16                                                         
         CLC   SECAPID,NULLS       Test PID list provided                       
         JE    NXTPER12            No - apply termination check                 
         SR    RE,RE                                                            
         ICM   RE,7,SECAPID                                                     
         CLI   LW_TYPE-LW_D(RE),LW_TALLQ                                        
         JNE   NXTPER14            Specific PIDs - no termination check         
                                                                                
NXTPER12 CLC   SAPERDTE,NULLS      Test person terminated                       
         JE    NXTPER14                                                         
         CLC   SAPERDTE,SECTODC    Test terminated now                          
         JNH   NXTPER32                                                         
                                                                                
NXTPER14 GOTOR LP_ASETK,DMCB,(1,OFFFLTT),SAPEROFF,SECSAVED,('FF',LP_D)          
         JNE   NXTPER32                                                         
         GOTOR LP_ASETK,DMCB,(1,DPTFLTT),SAPERDID,SECSAVED,('FF',LP_D)          
         JNE   NXTPER32                                                         
         J     NXTPER18                                                         
                                                                                
         USING SAPWDD,R4                                                        
NXTPER16 CLI   SAPWDEL,SAPWDELQ    Test password element                        
         JNE   NXTPER18                                                         
         MVC   SECPPID#,SAPWDNUM   Set password (PID) number                    
         J     NXTPER18                                                         
         DROP  R4                                                               
                                                                                
NXTPER18 IC    R0,1(R4)            Bump to next element on record               
         AR    R4,R0                                                            
         J     NXTPER04                                                         
                                                                                
S        USING SA0REC,SECIO2                                                    
NXTPER20 MVC   S.SA0KEY,NULLS      Read person security record                  
         MVI   S.SA0KTYP,SA0KTYPQ                                               
         MVC   S.SA0KAGY,SECAGYA                                                
         MVC   S.SA0KNUM,SECPPID#                                               
         GOTOR DMGR,DMCB,DMREAD,CTFILE,S.SA0KEY,S.SA0KEY                        
         JNE   NXTPER32                                                         
                                                                                
         CLI   SECSYSN,0           Test system filter present                   
         JE    NXTPER30                                                         
         LA    R1,S.SA0DATA                                                     
         USING SASYSD,R1                                                        
         SR    R0,R0                                                            
NXTPER22 CLI   SASYSEL,EOR         Test end of data                             
         JE    NXTPER32                                                         
         CLI   SASYSEL,SASYSELQ    Test system element                          
         JNE   *+14                                                             
         CLC   SASYSNUM,SECSYSN    Match system to filter value                 
         JE    NXTPER30                                                         
         IC    R0,SASYSLN                                                       
         AR    R1,R0                                                            
         J     NXTPER22                                                         
         DROP  R1                                                               
                                                                                
NXTPER30 CLI   SECHSTB,C'Y'        Test browse person history                   
         JE    EXITY                                                            
         MVC   SECPKEY+(SAPEDEF-SAPEKEY)(L'SAPEDEF),EFFS                        
         J     EXITY                                                            
                                                                                
NXTPER32 MVC   SECPKEY+(SAPEDEF-SAPEKEY)(L'SAPEDEF),EFFS                        
         J     NXTPER02                                                         
                                                                                
TSTAUT   CLI   SECAUTB,C'Y'        Test program authorizations required         
         BR    RE                                                               
                                                                                
TSTPDT   CLI   SECPERB,C'Y'        Test person details required                 
         BR    RE                                                               
                                                                                
ARYPDT   LKOUT A,(*,SAPEDATA),EOT=EOR,ROWID=(SAPEREL,SAPERELQ),        +        
               ROWWIDTH=(V,SAPERLN),ROWNAME=SAPEREC                             
Office   LKOUT C,10,SAPEROFF,CHAR                                               
DeptId   LKOUT C,11,SAPERDID,CHAR                                               
Extn.    LKOUT C,12,SAPEREXT,CHAR,ND=Y                                          
StaffCd  LKOUT C,13,SAPERSTA,CHAR,ND=Y                                          
ProfsId  LKOUT C,14,SAPERPRO,CHAR,ND=Y                                          
MStatus  LKOUT C,15,SAPERMAR,CHAR,ND=Y                                          
Gender   LKOUT C,16,SAPERSEX,CHAR,ND=Y                                          
TermDate LKOUT C,30,SAPERDTE,CDAT,ND=Y                                          
         LKOUT E                                                                
                                                                                
ARYPEM   LKOUT A,(*,SAPEDATA),EOT=EOR,ROWID=(SAPEEEL,SAPEEELQ),        +        
               ROWWIDTH=(V,SAPEELN),ROWNAME=SAPEREC                             
E-mail   LKOUT C,20,SAPEEID,CHAR,LEN=V                                          
         LKOUT E                                                                
                                                                                
ARYLAC   LKOUT A,(*,SAPEDATA),EOT=EOR,ROWID=(SALACEL,SALACELQ),        +        
               ROWWIDTH=(V,SALACLN),ROWNAME=SAPEREC                             
LAGrpCd  LKOUT C,21,SALACCOD,CHAR                                               
         LKOUT E                                                                
                                                                                
ARYTSA   LKOUT A,(*,SAPEDATA),EOT=EOR,ROWID=(SAAPCEL,SAAPCELQ),        +        
               ROWWIDTH=(V,SAAPCLN),ROWNAME=SAPEREC                             
LAGrpNo  LKOUT C,22,SAAPCNUM,LBIN                                               
LAGrpCd  LKOUT C,23,SAAPCCOD,CHAR                                               
         LKOUT E                                                                
                                                                                
ARYAGC   LKOUT A,(*,SAPEDATA),EOT=EOR,ROWID=(SAAGCEL,SAAGCELQ),        +        
               ROWWIDTH=(V,SAAGCLN),ROWNAME=SAPEREC                             
PRout    LKOUT P,SAAGCNUM,ADDAGC   Add to list of access groups                 
AcGrpNo  LKOUT C,24,SAAGCNUM,LBIN,FILTROUT=TSTPDT                               
         LKOUT E                                                                
                                                                                
ADDAGC   GOTOR LP_AAWMP,DMCB,(L'SAAGCNUM,LP_AINP),SECAAGCI,ONEK,LP_D            
         J     EXITY                                                            
                                                                                
ARYSYS   LKOUT A,(D,B#SECSVD,SECIO2+(SA0DATA-SA0REC)),                 +        
               ROWID=(SASYSEL,SASYSELQ),ROWWIDTH=(V,SASYSLN),          +        
               ROWNAME=SASYSD,NEWEL=B,EOT=EOR                                   
SysNum   LKOUT C,01,SASYSNUM,LBIN,FILTROUT=TSTSYS,SKIPCOLS=SYSSKIPS             
SYSSKIP  EQU   *                                                                
AllAuth  LKOUT C,02,SASYSALL,HEXD                                               
Array    LKOUT C,03,(A,ARYPGM)                                                  
SYSSKIPS EQU   (*-SYSSKIP)/LX_COLSL                                             
         LKOUT E                                                                
                                                                                
TSTSYS   CLI   SECSYSN,0           Test system filter is true                   
         BER   RE                                                               
         L     R1,LP_AINP                                                       
         CLC   SECSYSN,SASYSNUM-SASYSD(R1)                                      
         BR    RE                                                               
                                                                                
ARYPGM   LKOUT A,(*,SASYSPGM),ROWNAME=SASYSD,NROWS=*,                  +        
               ROWWIDTH=L'SASYSPGM                                              
PRout    LKOUT P,SASYSPNM,SETPRG                                                
ProgNum  LKOUT C,03,SASYSPNM,LBIN,FILTROUT=TSTPRG,SKIPCOLS=PGMSKIPS             
PSKIP    EQU   *                                                                
ProgAuth LKOUT C,04,SASYSAUT,HEXD                                               
PGMSKIPS EQU   (*-PSKIP)/LX_COLSL                                               
         LKOUT E                                                                
                                                                                
SETPRG   L     R1,LP_AINP          Sets current program number                  
         MVC   SECPRG#,0(R1)                                                    
         BR    RE                                                               
                                                                                
TSTPRG   CLI   SECPRGN,0           Test program filter is true                  
         BER   RE                                                               
         CLC   SECPRGN,SECPRG#                                                  
         BR    RE                                                               
                                                                                
EDTEFD   L     RF,LP_AINP          Edit effective date                          
         MVC   WORK(L'SAPEDEF),0(RF)                                            
         XC    WORK(L'SAPEDEF),EFFS                                             
         GOTOR DATCON,DMCB,(2,WORK),(20,LP_AOUT)                                
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Read option control records                                         *         
***********************************************************************         
                                                                                
ARYOCO   LKOUT A,(R,NXTOCO),MULTIROW=Y,ROWNAME=SAOCREC                          
System   LKOUT C,01,SAOCOVS,UBIN,SKIPCOLS=OCOSKIPS,FILTROUT=TSTOCO              
OCOSKIP  EQU   *                                                                
Program  LKOUT C,02,SAOCPGM,UBIN                                                
UserId   LKOUT C,03,SAOCUID,UBIN                                                
AGrpNum  LKOUT C,04,SAOCAGN,UBIN                                                
OCOSKIPS EQU   (*-OCOSKIP)/LX_COLSL                                             
Array    LKOUT C,05,(A,ARYOCO2)    Option controls                              
         LKOUT E                                                                
                                                                                
NXTOCO   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTOCO02                                                         
         CLC   SECAAGC,NULLS       Test any access groups found                 
         JE    NOMORE                                                           
         CLI   SECSYSN,0           Test system given                            
         JE    NOMORE                                                           
         CLI   SECPRGN,0           Test program given                           
         JE    NOMORE                                                           
NXTOCO02 LA    R2,OCOKEYT          Point to option control key driver           
         LA    R3,SECAKEY          Point to option control key area             
         J     NXTSEC              Go to general read                           
                                                                                
TSTOCO   L     R1,LP_AINP          Don't send agency level records              
         MVI   SECCONL,2           Set not agency level                         
         CLC   SAOCAGN-SAOCREC(,R1),NULLS                                       
         JE    *+8                                                              
         CR    RE,RE               Set CC to equal to send                      
         BR    RE                                                               
         MVI   SECCONL,1           Set agency level                             
         LTR   RE,RE               Set CC to not equal to suppress              
         BR    RE                                                               
                                                                                
ARYOCO2  LKOUT A,(*,SAOCDATA),EOT=EOR,ROWID=(SAOCTEL,SAOCTELQ),        +        
               ROWWIDTH=(V,SAOCTLN),ROWNAME=SAOCREC                             
Array    LKOUT C,05,(A,ARYOCO3),FILTROUT=TSTOCO2                                
         LKOUT E                                                                
                                                                                
TSTOCO2  L     RE,LP_AINP          Point to input element & get length          
         LLC   RF,SAOCTLN-SAOCTD(RE)                                            
         SHI   RF,SAOCTTAB-SAOCTD                                               
         LA    RE,SAOCTTAB-SAOCTD(RE)                                           
         LA    R1,SECCONA          Point to agency level mask                   
         J     SETCON              Process input mask                           
                                                                                
ARYOCO3  LKOUT A,(R,NXTFOB),ROWNAME=SECSAVED                                    
BitIndex LKOUT C,05,SECNDX,UBIN    Send bit index as field value                
         LKOUT E                                                                
                                                                                
***********************************************************************         
* Read field control records                                          *         
***********************************************************************         
                                                                                
ARYFCO   LKOUT A,(R,NXTFCO),MULTIROW=Y,ROWNAME=SAFCREC                          
System   LKOUT C,01,SAFCOVS,UBIN,SKIPCOLS=FCOSKIPS,FILTROUT=TSTFCO              
FCOSKIP  EQU   *                                                                
Program  LKOUT C,02,SAFCPGM,UBIN                                                
UserId   LKOUT C,03,SAFCUID,UBIN                                                
AGrpNum  LKOUT C,04,SAFCAGN,UBIN                                                
FCOSKIPS EQU   (*-FCOSKIP)/LX_COLSL                                             
Array    LKOUT C,05,(A,ARYFCOW)    Write permissions                            
Array    LKOUT C,06,(A,ARYFCOR)    Read permissions                             
         LKOUT E                                                                
                                                                                
NXTFCO   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTFCO02                                                         
         CLC   SECAAGC,NULLS       Test any access groups found                 
         JE    NOMORE                                                           
         CLI   SECSYSN,0           Test system given                            
         JE    NOMORE                                                           
         CLI   SECPRGN,0           Test program given                           
         JE    NOMORE                                                           
NXTFCO02 LA    R2,FCOKEYT          Point to field control key driver            
         LA    R3,SECAKEY          Point to field control key area              
         J     NXTSEC              Go to general read                           
                                                                                
TSTFCO   L     R1,LP_AINP          Don't send agency level records              
         MVI   SECCONL,2           Set not agency level                         
         CLC   SAFCAGN-SAFCREC(,R1),NULLS                                       
         JE    *+8                                                              
         CR    RE,RE               Set CC to equal to send                      
         BR    RE                                                               
         MVI   SECCONL,1           Set agency level                             
         LTR   RE,RE               Set CC to not equal to suppress              
         BR    RE                                                               
                                                                                
ARYFCOW  LKOUT A,(*,SAFCDATA),EOT=EOR,ROWID=(SAFCWEL,SAFCWELQ),        +        
               ROWWIDTH=(V,SAFCWLN),ROWNAME=SAFCREC                             
Array    LKOUT C,05,(A,ARYFCOW2),FILTROUT=TSTFCOW                               
         LKOUT E                                                                
                                                                                
TSTFCOW  L     RE,LP_AINP          Point to input element & get length          
         LLC   RF,SAFCWLN-SAFCWD(RE)                                            
         SHI   RF,SAFCWTAB-SAFCWD                                               
         LA    RE,SAFCWTAB-SAFCWD(RE)                                           
         LA    R1,SECFCOAW         Point to agency level write mask             
         J     SETCON              Process input mask                           
                                                                                
ARYFCOW2 LKOUT A,(R,NXTFOB),ROWNAME=SECSAVED                                    
BitIndex LKOUT C,05,SECNDX,UBIN    Send bit index as field value                
         LKOUT E                                                                
                                                                                
ARYFCOR  LKOUT A,(*,SAFCDATA),EOT=EOR,ROWID=(SAFCREL,SAFCRELQ),        +        
               ROWWIDTH=(V,SAFCRLN),ROWNAME=SAFCREC                             
Array    LKOUT C,06,(A,ARYFCOR2),FILTROUT=TSTFCOR                               
         LKOUT E                                                                
                                                                                
TSTFCOR  L     RE,LP_AINP          Point to input element & get length          
         LLC   RF,SAFCRLN-SAFCRD(RE)                                            
         SHI   RF,SAFCRTAB-SAFCRD                                               
         LA    RE,SAFCRTAB-SAFCRD(RE)                                           
         LA    R1,SECFCOAR         Point to agency level read mask              
         J     SETCON              Process input mask                           
                                                                                
ARYFCOR2 LKOUT A,(R,NXTFOB),ROWNAME=SECSAVED                                    
BitIndex LKOUT C,06,SECNDX,UBIN    Send bit index as field value                
         LKOUT E                                                                
                                                                                
***********************************************************************         
* Read access control records                                         *         
***********************************************************************         
                                                                                
ARYACO   LKOUT A,(R,NXTACO),MULTIROW=Y,ROWNAME=SAASREC                          
System   LKOUT C,01,SAASOVS,UBIN,SKIPCOLS=ACOSKIPS,FILTROUT=TSTACO              
ACOSKIP  EQU   *                                                                
Program  LKOUT C,02,SAASPGM,UBIN                                                
UserId   LKOUT C,03,SAASUID,UBIN                                                
AGrpNum  LKOUT C,04,SAASAGN,UBIN                                                
Array    LKOUT C,X'0025',(A,ARYACO2)                                            
ACOSKIPS EQU   (*-ACOSKIP)/LX_COLSL                                             
         LKOUT E                                                                
                                                                                
NXTACO   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTACO10                                                         
         CLC   SECAAGC,NULLS       Test any access groups found                 
         JE    NOMORE                                                           
         CLI   SECSYSN,0           Test system given                            
         JE    NOMORE                                                           
         CLI   SECPRGN,0           Test program given                           
         JE    NOMORE                                                           
                                                                                
         USING SAPGREC,SECIO3      Read program record and set actions          
         MVC   SAPGKEY,NULLS                                                    
         MVI   SAPGTYP,SAPGTYPQ                                                 
         MVI   SAPGSUB,SAPGSUBQ                                                 
         MVC   SAPGOVS,SECSYSN                                                  
         MVC   SAPGPGM,SECPRGN                                                  
         GOTOR DMGR,DMCB,DMREAD,CTFILE,SAPGKEY,SAPGKEY                          
         JNE   NOMORE                                                           
         LA    R1,SAPGDATA         Locate program element                       
         USING SAPGMD,R1                                                        
         SR    R0,R0                                                            
NXTACO02 CLI   SAPGMEL,0           Test end of record                           
         JE    NOMORE                                                           
         CLI   SAPGMEL,SAPGMELQ    Test program element                         
         JE    *+14                                                             
         IC    R0,SAPGMLN                                                       
         AR    R1,R0                                                            
         J     NXTACO02                                                         
         MVC   SECPGMA,SAPGMACT    Set program action list                      
                                                                                
         MVC   SECAKEY,NULLS       Build default access record                  
         LA    R2,SECIO3+(SARCDATA-SARCREC)                                     
R        USING SAMIXD,R2           R2=A(default record/action list)             
                                                                                
NXTACO04 GOTOR LP_ASETK,DMCB,(0,RECKEYT),SECAKEY,SECSAVED,('FF',LP_D)           
         JH    NXTACO08                                                         
         GOTOR DMGR,DMCB,DMRDHI,CTFILE,SECPKEY,SECIO1                           
         JH    NXTACO08                                                         
         MVC   SECAKEY,SECIO1                                                   
         GOTOR LP_ASETK,DMCB,(1,RECKEYT),SECAKEY,SECSAVED,('FF',LP_D)           
         JNE   NXTACO04                                                         
                                                                                
         LA    R1,SECIO1+(SARCDATA-SARCREC)                                     
         USING SAMIXD,R1           Add element to default access record         
         SR    R0,R0                                                            
NXTACO06 CLI   SAMIXEL,EOR         Test end of record record                    
         JE    NXTACO04                                                         
         CLI   SAMIXEL,SAMIXELQ    Test record/actions element                  
         JE    *+14                                                             
         IC    R0,SAMIXLN                                                       
         AR    R1,R0                                                            
         J     NXTACO06                                                         
         LLC   RF,SAMIXLN          Get length of this element                   
         BCTR  RF,0                                                             
         EX    RF,NACOMVRS         Move element to default record               
         LA    R2,1(RF,R2)         Point to next output element                 
         J     NXTACO04            Get next record record                       
                                                                                
NXTACO08 MVI   R.SAMIXEL,EOR       Set end of default access record             
         LA    R0,SECIO2+(SARCDATA-SARCREC)                                     
         CR    R2,R0               Test any record records found                
         JE    NOMORE              No - there are no valid rec/actions          
         MVI   LP_RMODE,LP_RFRST   Reset LP_RMODE for access reading            
         DROP  R,R1                                                             
                                                                                
NXTACO10 LA    R2,ACOKEYT          Point to access control key driver           
         LA    R3,SECAKEY          Point to access control key area             
         J     NXTSEC              Go to general read                           
                                                                                
TSTACO   L     R1,LP_AINP          Don't send agency level records              
         CLC   SAASAGN-SAASREC(,R1),NULLS                                       
         JNE   EXITY                                                            
         LA    R0,SECIO2           Save agency level record in SECIO2           
         LLH   RF,SAASLEN-SAASREC(R1)                                           
         LR    RE,R1                                                            
         LR    R1,RF                                                            
         MVCL  R0,RE                                                            
         J     EXITN                                                            
                                                                                
ARYACO2  LKOUT A,(*,SAASDATA),EOT=EOR,ROWID=(SAMIXEL,SAMIXELQ),        +        
               ROWWIDTH=(V,SAMIXLN),ROWNAME=SAASREC,NEWEL=B                     
Record   LKOUT C,01,SAMIXRCD,UBIN,FILTROUT=TSTACO2,SKIPCOLS=ACCSKIPS            
ACCSKIP  EQU   *                                                                
Attach#  LKOUT C,02,SAMIXATT,UBIN                                               
Array    LKOUT C,03,(A,ARYACO3)                                                 
ACCSKIPS EQU   (*-ACCSKIP)/LX_COLSL                                             
         LKOUT E                                                                
                                                                                
***********************************************************************         
* Establish action bits for a record                                  *         
*                                                                     *         
* Ntry:- LP_AINP points to SAMIXD on access record (in SECIO1)        *         
*        SECIO2 contains agency default record/actions                *         
*        SECIO3 contains 'dummy' access record built from RECORD      *         
*               records                                               *         
***********************************************************************         
                                                                                
TSTACO2  L     R2,LP_AINP          Point to input SAMIXD element                
R        USING SAMIXD,R2                                                        
                                                                                
         LA    R1,SECIO3+(SARCDATA-SARCREC)                                     
         USING SAMIXD,R1           Process system defaults                      
         SR    R0,R0                                                            
TSTACO21 CLI   SAMIXEL,EOR         Test end of system default record            
         JE    EXITN               Yes - no actions are valid                   
         CLI   SAMIXEL,SAMIXELQ    Test record/action element                   
         JNE   TSTACO22            No                                           
         CLC   SAMIXRCD,R.SAMIXRCD Match on record code                         
         JE    TSTACO23                                                         
TSTACO22 IC    R0,SAMIXLN          Bump to next element                         
         AR    R1,R0                                                            
         J     TSTACO21            Look again                                   
                                                                                
TSTACO23 LA    R0,SECCONB          Set system default actions                   
         LLC   RF,SAMIXLN                                                       
         CLC   SAMIXLN,R.SAMIXLN   Test default element longer                  
         JNH   *+10                                                             
         LLC   RF,R.SAMIXLN        Yes - use length of access level             
         SHI   RF,SAMIXACT-SAMIXD                                               
         LA    RE,SAMIXACT                                                      
         LA    R1,L'SECCONB                                                     
         MVCL  R0,RE               Move in system default actions               
                                                                                
         LA    R1,SECIO2+(SAASDATA-SAASREC)                                     
         USING SAMIXD,R1           Process agency defaults                      
         SR    R0,R0                                                            
TSTACO24 CLI   SAMIXEL,EOR         Test end of agency default record            
         JE    EXITN               Yes - no actions are valid                   
         CLI   SAMIXEL,SAMIXELQ    Test record/action element                   
         JNE   TSTACO25            No                                           
         CLC   SAMIXRCD,R.SAMIXRCD Match on record code                         
         JE    TSTACO26                                                         
TSTACO25 IC    R0,SAMIXLN          Bump to next element                         
         AR    R1,R0                                                            
         J     TSTACO24            Look again                                   
                                                                                
TSTACO26 LLC   RF,SAMIXLN                                                       
         CLC   SAMIXLN,R.SAMIXLN   Test default element longer                  
         JNH   *+10                                                             
         LLC   RF,R.SAMIXLN        Yes - use length of access level             
         SHI   RF,SAMIXACT+1-SAMIXD                                             
         JM    EXITN                                                            
         EX    RF,TACONCBA         'And' in agency level defaults               
         LLC   RF,R.SAMIXLN                                                     
         SHI   RF,SAMIXACT+1-SAMIXD                                             
         JM    EXITN                                                            
         EX    RF,TACONCBR         'And' in access record defaults              
         JNZ   EXITY                                                            
         J     EXITN                                                            
                                                                                
ARYACO3  LKOUT A,(R,NXTACB),ROWNAME=SECSAVED                                    
BitIndex LKOUT C,03,SECACT,UBIN    Send action number                           
         LKOUT E                                                                
                                                                                
***********************************************************************         
* General security record reading                                     *         
*                                                                     *         
* Ntry:- R2=A(key driver table)                                       *         
*        R3=A(key area)                                               *         
***********************************************************************         
                                                                                
NXTSEC   CLI   LP_RMODE,LP_RFRST   Clear key if first time                      
         JNE   NXTSEC02                                                         
         MVC   0(L'SECAKEY,R3),NULLS                                            
                                                                                
NXTSEC02 GOTOR LP_ASETK,DMCB,(0,(R2)),(R3),SECSAVED,('FF',LP_D)                 
         JH    NOMORE                                                           
         GOTOR DMGR,DMCB,DMRDHI,CTFILE,(R3),SECIO1                              
         JNE   NOMORE                                                           
         MVC   0(L'SECAKEY,R3),SECIO1                                           
         GOTOR LP_ASETK,DMCB,(1,(R2)),(R3),SECSAVED,('FF',LP_D)                 
         JNE   NXTSEC02                                                         
         LA    R0,SECIO1                                                        
         ST    R0,LP_ADATA         Point to record and exit to send             
         J     EXITY                                                            
                                                                                
***********************************************************************         
* General handling for OControl/FControl mask sending                 *         
*                                                                     *         
* Ntry:- RE=A(input mask)                                             *         
*        RF=L'input mask                                              *         
*        R1=A(agency level mask)                                      *         
*        SECCONL=1 if an agency level record else access group        *         
*                                                                     *         
* If the input record is an agency level default the input mask is    *         
* saved in the approriate agency level mask, exiting to not send the  *         
* record data.  Other level records are 'And'ed with the appropriate  *         
* agency level mask before sending to ensure that options turned off  *         
* at agency level are not sent.  Empty masks are suppressed.          *         
***********************************************************************         
                                                                                
SETCON   CLI   SECCONL,1           Test agency level mask                       
         JNE   SETCON1                                                          
         LR    R0,R1                                                            
         LA    R1,L'SECCONB                                                     
         MVCL  R0,RE               Save agency level mask                       
         J     EXITN                                                            
                                                                                
SETCON1  MVC   SECCONB,NULLS       Pre-clear output mask                        
         SHI   RF,1                Decrement length for execute below           
         JM    EXITN               Exit if zero length                          
         EX    RF,SCONMVB1         Preset with agency level bits                
         EX    RF,SCONNCBE         'And' in this level record bits              
         JNZ   EXITY                                                            
         J     EXITN                                                            
                                                                                
***********************************************************************         
* Send next non-zero bit position number in OControl/FControl mask    *         
***********************************************************************         
                                                                                
NXTFOB   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTFOB02                                                         
         MVC   SECNDX,NULLS        Yes - initialize loop counter                
                                                                                
NXTFOB02 LLH   RE,SECNDX           Test next bit in mask                        
         AHI   RE,1                                                             
         CHI   RE,L'SECCONB*8      Test all bits in mask inspected              
         JH    NOMORE              Yes - we are all done                        
         STCM  RE,3,SECNDX                                                      
         BCTR  RE,0                                                             
         SRDL  RE,3                                                             
         SRL   RF,32-3                                                          
         IC    RF,BITLIST(RF)                                                   
         LA    RE,SECCONB(RE)      Point to byte in mask                        
         EX    RF,NFOBTM0E         Test this bit on                             
         JZ    NXTFOB02            No - test next one                           
         MVI   LP_RMODE,LP_RMORE   Set to come back                             
         LA    R0,SECSAVED         Point to SECSAVED to send SECNDX             
         ST    R0,LP_ADATA                                                      
         J     EXITY                                                            
                                                                                
***********************************************************************         
* Send next action number from access control mask                    *         
***********************************************************************         
                                                                                
NXTACB   CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTACB02                                                         
         MVC   SECNDX,NULLS        Yes - initialize loop counter                
                                                                                
NXTACB02 LLH   RE,SECNDX           Test next bit in mask                        
         AHI   RE,1                                                             
         CHI   RE,L'SECCONB*8      Test all bits in mask inspected              
         JH    NOMORE              Yes - we are all done                        
         STCM  RE,3,SECNDX                                                      
         BCTR  RE,0                                                             
         SRDL  RE,3                                                             
         SRL   RF,32-3                                                          
         IC    RF,BITLIST(RF)                                                   
         LA    RE,SECCONB(RE)      Point to byte in mask                        
         EX    RF,NACBTM0E         Test this bit on                             
         JZ    NXTACB02            No - test next one                           
         LLH   RE,SECNDX           Convert to action number                     
         LA    RE,SECPGMA-1(RE)    via SECPGMA                                  
         MVC   SECACT,0(RE)        Set action number                            
         MVI   LP_RMODE,LP_RMORE   Set to come back                             
         LA    R0,SECSAVED         Point to SECSAVED to send SECACT             
         ST    R0,LP_ADATA                                                      
         J     EXITY                                                            
                                                                                
NOMORE   MVI   LP_RMODE,LP_RLAST   Exit setting no more data                    
         J     EXITY                                                            
                                                                                
SECSAVED DSECT ,                   ** Server work/save area **                  
SECQVAL  DS    0X                  ** Request values **                         
SECTRPI  DS    X                   Trap input indicator                         
SECATRP  DS    AL3                 A(trap parameters)                           
SECAOFFI DS    X                   Office input indicator                       
SECAOFF  DS    AL3                 A(WMP entry for office)                      
SECADPTI DS    X                   Department input indicator                   
SECADPT  DS    AL3                 A(WMP entry for department)                  
SECAPIDI DS    X                   Person input indicator                       
SECAPID  DS    AL3                 A(WMP entry for person)                      
SECAAGCI DS    X                   Person input indicator                       
SECAAGC  DS    AL3                 A(access group WMP entry)                    
SECAGYA  DS    CL(L'SAOFAGY)       Agency alpha id                              
SECSYSN  DS    X                   System number (acts as filter)               
SECPRGN  DS    X                   Program number (acts as filter)              
SECPRG#  DS    X                   Program number                               
SECOFFB  DS    C                   Browse offices                               
SECDPTB  DS    C                   Browse departments                           
SECACCB  DS    C                   Browse access records                        
SECPERB  DS    C                   Browse person records                        
SECHSTB  DS    C                   Browse person history                        
SECAUTB  DS    C                   Download program authorizations              
SECTRAP  DS    C                   Trap tester                                  
SECQVALL EQU   *-SECQVAL                                                        
                                                                                
SECTODC  DS    XL2                 Today's date in compressed                   
                                                                                
SECPFNAM DS    CL64                Person first name                            
SECPMNAM DS    CL64                Person middle name                           
SECPLNAM DS    CL64                Person last name                             
SECPPID# DS    XL(L'SA0KNUM)       Person PID number                            
                                                                                
SECAKEY  DS    0XL(L'SAAGKEY)      Current access record key                    
SECPKEY  DS    0XL(L'SAPEKEY)      Current person record key                    
SECOKEY  DS    XL(L'SAOFKEY)       Current office record key                    
SECDKEY  DS    XL(L'SADPKEY)       Current department record key                
                                                                                
SECCONL  DS    X                   Current record level                         
SECNDX   DS    XL2                 Current mask bit index value                 
SECACT   DS    X                   Action number                                
SECCONA  DS    0XL(L'SAOCTTAB)     Agency level OControl mask                   
SECFCOAR DS    XL(L'SAFCWTAB)      Agency level FControl read mask              
SECFCOAW DS    XL(L'SAFCWTAB)      Agency level FControl write mask             
SECCONB  DS    XL(L'SAOCTTAB)      Other level OControl mask                    
SECPGMA  DS    XL(L'SAPGMACT)      Program record action list                   
                                                                                
SECIO1   DS    XL(ONEK)            Control file i/o area 1                      
SECIO2   DS    XL(ONEK)            Control file i/o area 2                      
SECIO3   DS    XL(ONEK)            Control file i/o area 3                      
                                                                                
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Receive option values                                               *         
***********************************************************************         
                                                                                
OPVALS   LKSVR TYPE=U,REQUEST=OPVMAP,SYSTEM=GENSYS#,CSECT=N                     
                                                                                
***********************************************************************         
* Option values (must be passed before first upload record)           *         
***********************************************************************         
                                                                                
OPDATA   LKMAP H,I#OPVALS,NEWREC=Y                                              
OptKWRK  LKMAP F,1,KNWK,(*,OKNWKLIT),OLEN=1,MAXLEN=1                            
OptKFWK  LKMAP F,2,KFWK,(*,OKFWKLIT),OLEN=1,MAXLEN=1                            
OptDRFT  LKMAP F,3,DRFT,(*,ODRFTLIT),OLEN=1,MAXLEN=1                            
OptTRCE  LKMAP F,4,TRCE,(*,OTRCTLIT),OLEN=1,MAXLEN=2                            
         LKMAP E                                                                
                                                                                
         LKMAP X                                                                
                                                                                
OKNWKLIT DC    C'Keep =NWK file'                                                
OKFWKLIT DC    C'Keep =FWK file'                                                
ODRFTLIT DC    C'Draft run'                                                     
OTRCTLIT DC    C'Print trace'                                                   
         EJECT                                                                  
***********************************************************************         
* Receive MQ values (prefixes actual download request)                *         
***********************************************************************         
                                                                                
MQVALS   LKSVR TYPE=U,REQUEST=MQVMAP,SYSTEM=GENSYS#,CSECT=N                     
                                                                                
***********************************************************************         
* MQ values                                                           *         
***********************************************************************         
                                                                                
MQDATA   LKMAP H,I#MQVALS,NEWREC=Y                                              
MQXSvr   LKMAP F,1,MQQV,(*,XSVRLIT),OLEN=L'LP_MQSVR,MAXLEN=L'LP_MQSVR           
MQOQueue LKMAP F,2,MQHV,(*,MQOQLIT),OLEN=L'LP_MQQUE,MAXLEN=L'LP_MQQUE           
MQOKey   LKMAP F,3,MQKV,(*,MQOKLIT),OLEN=L'LP_MQKEY,MAXLEN=L'LP_MQKEY           
MQRKey   LKMAP F,4,MQRV,(*,MQRKLIT),OLEN=L'LP_MQRKV,MAXLEN=L'LP_MQRKV           
         LKMAP E                                                                
                                                                                
         LKMAP X                                                                
                                                                                
XSVRLIT  DC    C'EDISHED routing label'                                         
MQRKLIT  DC    C'EDISHED return routing label'                                  
MQOQLIT  DC    C'MQ output label'                                               
MQOKLIT  DC    C'MQ output key'                                                 
         EJECT                                                                  
***********************************************************************         
* Generalized upload interface                                        *         
***********************************************************************         
                                                                                
UPLDEF   LKSVR TYPE=US,REQUEST=UPLMAP,WORKERKEY=LKUP,SYSTEM=GENSYS#,   +        
               CSECT=N                                                          
                                                                                
***********************************************************************         
* System/Program identification                                       *         
***********************************************************************         
                                                                                
UPLPID   LKMAP H,I#UPLPID,NEWREC=Y                                              
Systm    LKMAP F,1,USYS,GE#SYSTM,OLEN=L'LI_TSYS,MAXLEN=L'LI_TSYS                
Progm    LKMAP F,2,UPRG,GE#PROG,OLEN=L'LI_TPRG,MAXLEN=L'LI_TPRG                 
         LKMAP E                                                                
                                                                                
***********************************************************************         
* Record/Action header record                                         *         
***********************************************************************         
                                                                                
UPLHDR   LKMAP H,I#UPLHDR,NEWREC=Y                                              
RecNo    LKMAP F,1,LBIN,GE#RECD,OLEN=1                                          
ActNo    LKMAP F,2,LBIN,GE#ACTN,OLEN=1                                          
         LKMAP E                                                                
                                                                                
***********************************************************************         
* Data identification and value record                                *         
***********************************************************************         
                                                                                
UPLDTA   LKMAP H,I#UPLDTA,NEWREC=N                                              
FldNo    LKMAP F,1,LBIN,GE#FLDNO,OLEN=1                                         
SeqNo    LKMAP F,2,LBIN,GE#FSQNO,OLEN=1                                         
DataV    LKMAP F,3,VSTR,GE#DATA                                                 
         LKMAP E                                                                
                                                                                
         LKMAP X                                                                
         EJECT                                                                  
***********************************************************************         
* Generalized RLP interface/worker file index & file downloads        *         
***********************************************************************         
                                                                                
B#RLPSVD EQU   2                   RLPSAVED block equate                        
                                                                                
RLPDEF   LKSVR TYPE=D,REQUEST=RLPMAP,CODE=RLPLNK,SYSTEM=GENSYS#,       +        
               CSECT=N,BLOCKS=(B#RLPSVD,RLPSAVED,B#WORKD,WORKD)                 
                                                                                
RLPLNK   NTR1  LABEL=*                                                          
         LR    R9,R1               R9=A(LP_D)                                   
         L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LARL  RA,GLOBALS          RA=A(DDLINK global literals)                 
         L     R8,ASVRSAVE                                                      
         USING RLPSAVED,R8         R8=A(save w/s)                               
         ST    RC,LP_ABLK1                                                      
         ST    R8,LP_ABLK2                                                      
         LA    R4,RLPBLOCK                                                      
         USING RFPIOD,R4           R4=A(RFPIO control block)                    
         STM   R2,RB,LP_R2RB       Save registers for sub-routines              
         EJECT                                                                  
***********************************************************************         
* Initialize for running                                              *         
***********************************************************************         
                                                                                
RLPINI   CLI   LP_CMODE,RRUNSTRQ   Test 'first for run' mode                    
         JNE   RLPWRK                                                           
                                                                                
         LA    R0,QRFPIO           Get A(RFPIO)                                 
         ICM   R0,B'1110',T00A                                                  
         GOTOR CALLOV,DMCB,0,(R0)                                               
         MVC   RLPRFPIO,0(R1)                                                   
                                                                                
         MVC   RLPPASS,LP_SECNO    Set password number                          
                                                                                
RLPINIX  J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Initialize for new work                                             *         
***********************************************************************         
                                                                                
RLPWRK   CLI   LP_CMODE,RPRCWRKQ   Test 'process work' mode                     
         JNE   RLPRUN                                                           
                                                                                
         LA    R0,RLPXCVS          Initialize work values                       
         LHI   R1,RLPXCVL                                                       
         SR    RF,RF                                                            
         MVCL  R0,RE                                                            
                                                                                
         CLI   LP_RLPSL,0          Test RLP system initialized                  
         JE    RLPWRKX                                                          
                                                                                
         MVC   RFPACOMF,LP_ACOM    Initialize RFPIO control block               
         LA    R0,RLPSAVED                                                      
         AHI   R0,MINBLK-RLPSAVED                                               
         STCM  R0,15,RFPAMIN                                                    
         MVC   RFPFSYS,LP_RLPSL                                                 
         L     RF,LP_ATWA                                                       
         MVC   RFPFUID,TWAUSRID-TWAD(RF)                                        
         MVC   RFPFAGY,TWAAGY-TWAD(RF)                                          
         MVI   RFPFLAGS,RFPXSYMS                                                
         MVI   RFPFFLAG,RFPFSYMS                                                
         GOTOR RLPRFPIO,DMCB,RFPBLK                                             
                                                                                
RLPWRKX  J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Run work                                                            *         
***********************************************************************         
                                                                                
RLPRUN   CLI   LP_CMODE,RRUNREQQ   Test 'run request' mode                      
         JNE   EXITY                                                            
                                                                                
RLPGRP   CLC   LP_QMAPN,M#GRPMNT   Test folder maintenance                      
         JNE   RLPCAL                                                           
                                                                                
GRPADD   CLI   RLPIACT,RLPIAADD    Test add a new folder                        
         JNE   GRPCHA                                                           
         USING GRPKEYD,RLPKEY                                                   
         MVC   GRPKEY,NULLS        Establish new folder id                      
         MVI   GRPKSYS,GRPKSYSQ                                                 
         MVI   GRPKSTYP,GRPKSTYQ                                                
         MVC   GRPKSYST,LP_RLPSL                                                
         MVC   GRPKAGY,RFPFAGY                                                  
         CLI   RLPIFTYP,RLPIFTGQ   Test global folder                           
         JNE   GRPADD02                                                         
         GOTOR GETPRN,RFPFUID      Yes - get/set principal user id              
GRPADD02 MVC   GRPKUSER,RFPFUID                                                 
         MVI   GRPKDTF,GRPKDTFQ                                                 
         CLI   RLPIFTYP,RLPIFTGQ   Test global folder                           
         JE    *+10                                                             
         MVC   GRPKDTFP,LP_SECNO   No - set person password number              
                                                                                
         GOTOR DMGR,DMCB,(X'88',DMRDHI),GENDIR,GRPKEY,WORK                      
         CLC   GRPKEY(GRPKDTFI-GRPKEY),WORK                                     
         JNE   *+14                                                             
         MVC   GRPKEY,WORK         Set key for next folder                      
         J     *+10                                                             
         MVC   GRPKDTFI,EFFS       Else initialize if first folder              
         SR    R0,R0                                                            
         ICM   R0,7,GRPKDTFI       Allocate next folder number                  
         SHI   R0,1                                                             
         STCM  R0,7,GRPKDTFI                                                    
         MVC   RFPFGRP,GRPKDTF     Set folder code                              
         MVI   RFPMODE,RFPVALGP                                                 
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOGRP   Test folder exists                           
         JNE   DEATH272                                                         
                                                                                
         MVC   RFPVDESC,RLPIFDSC                                                
         MVC   RFPVDSC2,RLPIFDSC+L'RFPVDESC                                     
         MVI   RFPVFREQ,GRPFNOTR                                                
         MVI   RFPVHSTA,0                                                       
         CLI   RLPIWHEN,RLPIWAMQ   Test AM folder                               
         JNE   *+8                                                              
         MVI   RFPVHSTA,GRPHSRAM                                                
         CLI   RLPIWHEN,RLPIWRSQ   Test desktop request save folder             
         JNE   *+8                                                              
         MVI   RFPVHSTA,GRPHSRRS                                                
                                                                                
         GOTOR SAVGRP              Save folder                                  
         GOTOR EDTFID,GRPKDTFP     Edit folder id                               
         J     RLPXIT                                                           
                                                                                
GRPCHA   CLI   RLPIACT,RLPIACHA    Test change an existing folder               
         JNE   GRPDEL                                                           
         GOTOR VALGRP              Validate folder                              
         CLC   RLPIFDSC,NULLS      Test description given                       
         JE    *+16                No - don't touch it                          
         MVC   RFPVDESC,RLPIFDSC                                                
         MVC   RFPVDSC2,RLPIFDSC+L'RFPVDESC                                     
         TM    RFPVHSTA,GRPHSRRS   Test desktop request save folder             
         JNZ   GRPCHA02                                                         
         MVI   RFPVHSTA,0                                                       
         CLI   RLPIWHEN,RLPIWAMQ   Test/set am folder                           
         JNE   GRPCHA02                                                         
         MVI   RFPVHSTA,GRPHSRAM                                                
                                                                                
GRPCHA02 GOTOR SAVGRP              Save folder                                  
         J     RLPXIT                                                           
                                                                                
GRPDEL   CLI   RLPIACT,RLPIADEL    Test delete an existing folder               
         JNE   DEATH273                                                         
         GOTOR VALGRP              Validate folder                              
         MVI   RFPMODE,RFPDELGP    Delete the folder                            
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Die if any errors                            
         JE    RLPXIT                                                           
         J     DEATH274                                                         
                                                                                
RLPCAL   CLC   LP_QMAPN,M#CALMNT   Test calendar maintenance                    
         JNE   RLPREQ                                                           
                                                                                
CALCHA   GOTOR VALGRP              Change folder run calendar                   
                                                                                
         MVC   RFPVRNGE,NULLS      Clear calendar values                        
         MVC   RFPVNXTR,NULLS                                                   
         MVC   RFPVENDR,NULLS                                                   
         MVC   RFPVDAYS,NULLS                                                   
                                                                                
         SR    R1,R1                                                            
         ICM   R1,7,RLPIADAT                                                    
         JZ    CALCHA04            No dates means clear calendar                
                                                                                
         MVC   RFPVNXTR,EFFS                                                    
         MVI   RFPVDAYS,FF         Set converted run days                       
         MVI   RFPVDAYS+1,3        Set 'irregular' calendar                     
                                                                                
         USING LW_D,R1                                                          
         LA    R2,LW_DATA1                                                      
         LHI   R0,1                                                             
         CLI   LW_TYPE,LW_TSINQ    Test single date                             
         JE    CALCHA02                                                         
         CLI   LW_TYPE,LW_TLSTQ    Test list of dates                           
         JNE   DEATH275                                                         
         LA    R2,LW_DATA2                                                      
         LLH   R0,LW_NUMN                                                       
         DROP  R1                                                               
                                                                                
CALCHA02 CLC   0(L'RFPVNXTR,R2),RFPVNXTR                                        
         JNL   *+10                                                             
         MVC   RFPVNXTR,0(R2)      Set next run date (lowest)                   
         CLC   0(L'RFPVENDR,R2),RFPVENDR                                        
         JNH   *+10                                                             
         MVC   RFPVENDR,0(R2)      Set last run date (highest)                  
                                                                                
         ZAP   DUB,2(2,R2)         Turn on bit in run calendar                  
         CVB   RE,DUB                                                           
         SRDL  RE,3                Shift off day into RF                        
         SRL   RF,32-3                                                          
         LA    RE,RFPVRNGE(RE)                                                  
         IC    RF,BITLIST(RF)      Point to bit mask for day                    
         STC   RF,WORK                                                          
         OC    0(1,RE),WORK        Turn it on                                   
                                                                                
         AHI   R2,L'RFPVNXTR       Bump to next run date                        
         JCT   R0,CALCHA02         Do for number of dates input                 
                                                                                
CALCHA04 GOTOR SAVGRP              Save folder                                  
         J     RLPXIT                                                           
                                                                                
RLPREQ   CLC   LP_QMAPN,M#REQMNT   Test request maintenance                     
         JNE   RLPRLP                                                           
                                                                                
REQADD   TM    INDQARTF,INDSARTF   Test add request to folder                   
         JZ    REQCHA                                                           
         MVC   RLPIFID,FOLDER      Add request to folder                        
         GOTOR VALGRP              Validate folder                              
         MVI   RFPFFLAG,RFPRUNNR   Set RUNNER style request                     
         OI    RFPFLAGS,RFPALLOW   Set allowed to add regardless                
         MVC   RFPFRQID,REQMAP#    Set request key fields                       
         GOTOR HEXOUT,DMCB,SVRPHASE,RFPFSORT,L'SVRPHASE,0                       
         MVI   RFPFSORT,C'T'       RFPFSORT=TSPPOO                              
         MVC   RFPVRDSC,REQDESC    Set request description/extension            
         MVC   RFPVRDS2,REQDESC+L'RFPVRDSC                                      
                                                                                
         LA    R0,RFPVREQC                                                      
         LHI   R1,L'RFPVREQC*RFPVMAXC                                           
         SR    RF,RF                                                            
         ICM   RF,8,SPACES                                                      
         MVCL  R0,RE                                                            
                                                                                
         L     R2,AWMP                                                          
         USING LW_D,R2             R2=A(start of work map pool)                 
                                                                                
         USING RLPRHD,RFPVREQC     Build request header                         
         MVC   RLPRHEOD,SVREODID                                                
         GOTOR HEXOUT,DMCB,REQUEST#,RLPRHRID,L'REQUEST#,0                       
         GOTOR (RF),(R1),REQDESC#,RLPRHRDS,L'REQDESC#,0                         
                                                                                
         LA    R3,RFPVREQC+RLPRHLNQ                                             
         USING RLPRDD,R3           R3=A(request data element)                   
REQADD02 CLC   LW_CODE,NULLS       Test all request values processed            
         JE    REQADD04                                                         
         CLI   LW_TYPE,LW_TRAWQ    Ensure raw data is present                   
         JNE   DEATH276                                                         
         GOTOR HEXOUT,DMCB,LW_CODE,RLPRDMAP,L'LW_CODE,0                         
         LLH   R1,LW_LN                                                         
         SHI   R1,LW_LN1Q                                                       
         CVD   R1,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  RLPRDLEN,DUB                                                     
         SHI   R1,1                                                             
         JM    DEATH277                                                         
         EX    R1,RADDMVRW                                                      
         LA    R2,LW_LN1Q+1(R2,R1) Bump to next pool entry                      
         LA    R3,RLPRDD+RLPRDLNQ+1(R1)                                         
         J     REQADD02                                                         
                                                                                
REQADD04 LA    R2,RFPVREQC         Calculate number of cards used               
         SR    R3,R2                                                            
         SR    R2,R2                                                            
         LHI   R0,L'RFPVREQC                                                    
         DR    R2,R0                                                            
         AHI   R3,2                                                             
         CHI   R3,RFPVMAXC+1                                                    
         JH    DEATH278                                                         
         STC   R3,RFPFNUMR         Set number of request cards                  
         MVI   RFPMODE,RFPADDRQ    and add request to folder                    
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test request added successfully              
         JNE   DEATH279                                                         
         MVC   RFPVRQID(L'RFPVRQID+L'RFPVSORT+L'RFPVSEQN),RFPFRQID              
         GOTOR EDTRID              Edit request id                              
         J     RLPXIT                                                           
                                                                                
REQCHA   CLI   RLPIACT,RLPIACHA    Test change request                          
         JNE   REQDEL                                                           
         GOTOR VALGRP              Validate folder                              
         GOTOR VALREQ              Validate request                             
         MVC   RFPVRDSC,RLPIRDSC   Set new request description                  
         MVC   RFPVRDS2,RLPIRDSC+L'RFPVRDSC                                     
         MVI   RFPMODE,RFPCHARQ    Change the request                           
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test request changed successfully            
         JE    RLPXIT                                                           
         J     DEATH280                                                         
                                                                                
REQDEL   CLI   RLPIACT,RLPIADEL    Test delete request                          
         JNE   DEATH281                                                         
         GOTOR VALGRP              Validate folder                              
         GOTOR VALREQ              Validate request                             
         MVI   RFPMODE,RFPDELRQ    Delete the request                           
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test request deleted successfully            
         JE    RLPXIT                                                           
         J     DEATH282                                                         
                                                                                
RLPRLP   CLC   LP_QMAPN,M#RLPDLD   Test RLP download                            
         JNE   RLPXIT                                                           
         MVC   WORK(16),NULLS      Yes - read RLP profile                       
         MVI   WORK+0,CONLETQ-SPACEQ                                            
         MVC   WORK+1(L'RLPPRG),RLPPRG                                          
         MVC   WORK+4(L'LP_AGY),LP_AGY                                          
         GOTOR GETPROF,DMCB,WORK,WORK2,DMGR                                     
         MVC   RLPOAWSH,WORK2+1                                                 
         CLI   RLPOAWSH,YESQ       Test Sunday scheduling allowed               
         JE    RLPXIT                                                           
         MVI   RLPOAWSH,0          No - don't send profile                      
                                                                                
RLPXIT   GOTOR LP_APUTO,LP_D       Send response                                
         J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Get/format next folder for download                                 *         
***********************************************************************         
                                                                                
FLTFAR   CLI   RLPIACT,0           Folders & requests filter routine            
         JNE   *+8                                                              
         LTR   RE,RE                                                            
         BR    RE                                                               
         CLI   RLPIACT,RLPIFTPQ    Test download personal folders               
         BER   RE                                                               
         NTR1  LABEL=*                                                          
         MVC   RLPPASS,NULLS       No - set to download global folders          
         GOTOR GETPRN,RFPFUID      and set principal user-id                    
         J     EXITY                                                            
                                                                                
NXTGRP   L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LA    R0,RLPSAVED                                                      
         ST    R0,LP_ADATA                                                      
NXTGRP02 GOTOR LP_ASETK,DMCB,(0,GRPKEYT),RLPKEY,RLPSAVED,('FF',LP_D)            
         JH    RLPLAST                                                          
         GOTOR DMGR,DMCB,DMRDHI,GENDIR,RLPKEY,RLPKEY                            
         JNE   DEATH283                                                         
         GOTOR LP_ASETK,DMCB,(1,GRPKEYT),RLPKEY,RLPSAVED,('FF',LP_D)            
         JNE   NXTGRP02                                                         
         MVC   RFPFGRP,RLPKEY+(GRPKGRP-GRPKEYD)                                 
         MVI   RFPMODE,RFPVALGP                                                 
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test folder exists                           
         JNE   DEATH284                                                         
         GOTOR EDTFID,RFPFGRP+(GRPKDTFP-GRPKDTF)                                
         MVC   RLPOFDSC(L'RFPVDESC),RFPVDESC                                    
         MVC   RLPOFDSC+L'RFPVDESC(L'RFPVDSC2),RFPVDSC2                         
         TM    RFPVHSTA,GRPHSRRS   Test/set request save folder                 
         JZ    *+8                                                              
         MVI   RLPOWHEN,RLPIWRSQ                                                
         TM    RFPVHSTA,GRPHSRAM   Test/set run am folder                       
         JZ    *+8                                                              
         MVI   RLPOWHEN,RLPIWAMQ                                                
         MVC   RLPODATE,NULLS                                                   
         CLC   RFPVNXTR,NULLS                                                   
         JE    EXITY                                                            
         CLC   RFPVENDR,NULLS                                                   
         JE    EXITY                                                            
                                                                                
         LA    R2,RLPODATE                                                      
         GOTOR DATCON,DMCB,(6,RFPVNXTR),(0,RLPECUR)                             
         GOTOR DATCON,DMCB,(6,RFPVENDR),(0,RLPEEND)                             
                                                                                
NXTGRP04 GOTOR DATCON,DMCB,(0,RLPECUR),(15,RLPJCUR)                             
         ZAP   DUB,RLPJCUR+2(2)                                                 
         CVB   RE,DUB                                                           
         SRDL  RE,3                                                             
         SRL   RF,32-3                                                          
         LA    R1,RFPVRNGE(RE)                                                  
         IC    RF,BITLIST(RF)                                                   
         EX    RF,NGRPTM10                                                      
         JZ    NXTGRP06                                                         
         GOTOR DATCON,DMCB,(0,RLPECUR),(2,0(R2))                                
         AHI   R2,L'RLPODATE                                                    
         MVC   0(L'RLPODATE,R2),NULLS                                           
                                                                                
NXTGRP06 GOTOR ADDAY,DMCB,(0,RLPECUR),WORK,1                                    
         MVC   RLPECUR,WORK                                                     
         CLC   RLPECUR,RLPEEND                                                  
         JNH   NXTGRP04                                                         
         J     EXITY                                                            
         EJECT                                                                  
***********************************************************************         
* Get/format next request for download                                *         
***********************************************************************         
                                                                                
NXTREQ   NTR1  LABEL=*                                                          
         L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         OI    RFPFFLAG,RFPF1STR                                                
         MVI   RFPMODE,RFPRETRQ                                                 
                                                                                
NXTREQ02 GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         NI    RFPFFLAG,FF-(RFPF1STR)                                           
         CLI   RFPERROR,RFPNOERR   Test request exists                          
         JNE   DEATH285                                                         
         CLI   RFPRET,RFPEOF       Test end of requests                         
         JE    RLPLAST                                                          
                                                                                
         MVC   WORK2+(LF_CODE-LF_D)(L'LF_CODE),RFPVRQID                         
         GOTOR SETELEM,DMCB,LP_AFBLK,WORK2,0                                    
                                                                                
         USING LF_D,WORK           Build request id                             
         MVI   LF_LEN,LF_DTAL                                                   
         GOTOR HEXIN,DMCB,RLPRHRID,LF_CODE,L'RLPRHRID                           
         CLC   12(4,R1),NULLS                                                   
         JE    DEATH286                                                         
         MVI   LF_TEXT,HEXQ                                                     
         MVC   LF_TEXT+1(L'RLPRHRID),RLPRHRID                                   
         MVI   LF_TYPE,MDTUQQ                                                   
         MVI   LF_DLEN,L'RLPORID+1                                              
         GOTOR EDTRID              Edit request id                              
         MVI   WORK2,LP_OTCHR                                                   
         MVC   WORK2+1(L'RLPORID),RLPORID                                       
         GOTOR ADDDATA,DMCB,LP_AFBLK,LF_D,WORK2,0                               
                                                                                
         CLC   RFPVRDSC,NULLS      Build request description                    
         JE    NXTREQ04                                                         
         GOTOR HEXIN,DMCB,RLPRHRDS,LF_CODE,L'RLPRHRDS                           
         CLC   12(4,R1),NULLS                                                   
         JE    DEATH287                                                         
         MVC   LF_TEXT+1(L'RLPRHRDS),RLPRHRDS                                   
         MVC   RLPIRDSC(L'RFPVRDSC),RFPVRDSC                                    
         MVC   RLPIRDSC+L'RFPVRDSC(L'RFPVRDS2),RFPVRDS2                         
         GOTOR LP_AEOUT,DMCB,('LD_CHARQ',RLPIRDSC),0,                  +        
               (L'RLPIRDSC,WORK2+1),0,0                                         
         L     R0,LP_OLEN                                                       
         AHI   R0,1                                                             
         STC   R0,LF_DLEN                                                       
         MVI   WORK2,LP_OTCHR                                                   
         GOTOR ADDDATA,DMCB,LP_AFBLK,LF_D,WORK2,0                               
                                                                                
NXTREQ04 LA    R3,RFPVREQC+RLPRHLNQ                                             
         USING RLPRDD,R3           R3=A(request data element)                   
NXTREQ06 CLI   RLPRDMAP,SPACEQ     Test end of request data                     
         JE    NXTREQ02                                                         
         MVC   LF_TEXT+1(L'RLPRDMAP),RLPRDMAP                                   
         PACK  DUB,RLPRDLEN                                                     
         CVB   R2,DUB                                                           
         GOTOR LP_AEOUT,DMCB,('LD_CHARQ',RLPRDATA),0,                  +        
               ((R2),WORK2+1),0,0                                               
         L     R0,LP_OLEN                                                       
         AHI   R0,1                                                             
         STC   R0,LF_DLEN                                                       
         MVI   WORK2,LP_OTCHR                                                   
         GOTOR ADDDATA,DMCB,LP_AFBLK,LF_D,WORK2,0                               
         LA    R3,RLPRDD+RLPRDLNQ(R2)                                           
         J     NXTREQ06                                                         
         DROP  R3,R8                                                            
         EJECT                                                                  
***********************************************************************         
* Set principal id                                                    *         
***********************************************************************         
                                                                                
GETPRN   NTR1  LABEL=*                                                          
         L     RC,LP_AWORK                                                      
         LARL  RA,GLOBALS                                                       
         LR    R3,R1                                                            
         L     R2,AWRKBLK                                                       
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         USING CT5REC,R2                                                        
         MVC   CT5KEY,NULLS                                                     
         MVI   CT5KTYP,CT5KTYPQ                                                 
         MVC   CT5KALPH,LP_AGY                                                  
         GOTOR DMGR,DMCB,DMREAD,CTFILE,CT5REC,CT5REC                            
         JNE   DEATH288                                                         
                                                                                
         LA    R2,CT5DATA          Locate principal id element                  
         USING CTDSCD,R2                                                        
         SR    R0,R0                                                            
GETPRN02 CLI   CTDSCEL,0                                                        
         JE    DEATH289                                                         
         CLI   CTDSCEL,CTDSCELQ                                                 
         JE    *+14                                                             
         IC    R0,CTDSCLEN                                                      
         AR    R2,R0                                                            
         J     GETPRN02                                                         
         MVC   0(L'GRPKUSER,R3),CTDSC                                           
         J     EXITY                                                            
         DROP  R2                                                               
         EJECT                                                                  
***********************************************************************         
* Get/format next download file key for download                      *         
***********************************************************************         
                                                                                
         USING RLPOWVAL,WORK2                                                   
NXTFIL   L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         LA    R0,RLPOWVAL                                                      
         ST    R0,LP_ABLK1         Only use WORKD for this function             
         ST    R0,LP_ADATA                                                      
                                                                                
         L     R3,AWRKBLK                                                       
         USING WRKIOD,R3           R3=A(WRKIO control block)                    
         CLI   LP_RMODE,LP_RFRST   Test first time                              
         JNE   NXTFIL06                                                         
         MVC   WRKINDX,NULLS       Clear index area                             
         MVI   WRKIFTYP,WRKIFTWF   Set file type                                
         MVI   WRKFYSTA,W_STAC+W_STKE                                           
         MVI   WRKFNSTA,W_STDEAD+W_STRUN                                        
         MVI   WRKIACTN,WRKIANDX   Set action to index read                     
         CLC   WRKKEY,NULLS        Test worker key present                      
         JNE   NXTFIL02                                                         
         MVC   WRKFCLS,LP_RLPSL    Set class (system)                           
         MVC   WRKFUSID,LP_USRID   Set user-id                                  
         GOTOR HEXOUT,DMCB,LP_SECNO,WRKFSYS,L'LP_SECNO,0                        
         J     NXTFIL06                                                         
                                                                                
NXTFIL02 L     R2,WRKIAREC         Read access record                           
         USING CT5REC,R2                                                        
         MVC   CT5KEY,NULLS                                                     
         MVI   CT5KTYP,CT5KTYPQ                                                 
         MVC   CT5KALPH,LP_AGY                                                  
         GOTOR DMGR,DMCB,DMREAD,CTFILE,CT5REC,CT5REC                            
         JNE   DEATH290                                                         
                                                                                
         LA    R2,CT5DATA          Locate principal id element                  
         USING CTDSCD,R2                                                        
         SR    R0,R0                                                            
NXTFIL04 CLI   CTDSCEL,0                                                        
         JE    DEATH291                                                         
         CLI   CTDSCEL,CTDSCELQ                                                 
         JE    *+14                                                             
         IC    R0,CTDSCLEN                                                      
         AR    R2,R0                                                            
         J     NXTFIL04                                                         
                                                                                
         MVC   WRKFUSID,CTDSC      Set (principal) user-id & key                
         MVC   WRKFSYS(L'WRKFSYS+L'WRKFPRG+L'WRKFSPG),WRKKEY                    
         MVC   WRKFCLS,WRKKEY+L'WRKFSYS+L'WRKFPRG+L'WRKFSPG                     
         DROP  R2                                                               
                                                                                
NXTFIL06 TM    INDQWORF,INDSWORF   Test in file reading mode                    
         JNZ   NXTFIL30                                                         
                                                                                
         GOTOR WRKIO,WRKIOD        Get first/next index entry                   
         CLI   WRKIERRS,WRKIEEOF                                                
         JE    NXTFIL28            Now process Archive pointers                 
         CLI   WRKIERRS,0                                                       
         JNE   DEATH292                                                         
                                                                                
         MVC   RLPOWVAL(RLPOWVLQ),NULLS                                         
         LLH   R0,WRKWUSID         Build worker file key                        
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  RLPOWKUS,DUB                                                     
         MVC   RLPOWKPW,WRKWSPS                                                 
         UNPK  DUB(3),WRKWDAY(2)                                                
         MVC   RLPOWKDY,DUB                                                     
         MVC   RLPOWKSL,WRKWCLS                                                 
         LLH   R0,WRKWSEQN                                                      
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  RLPOWKS#,DUB                                                     
                                                                                
         MVC   WORK(WRKIOBL),WRKIOD                                             
         MVI   WRKIACTN,WRKIAOPN                                                
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH293                                                         
         GOTOR WRKIO,WRKIOD        Read first worker file record                
         JNE   DEATH294                                                         
                                                                                
         L     R1,WRKIABUF         Set number of records/file size              
         ICM   RF,15,W_RECS-W_INDEX(R1)                                         
         BCTR  RF,0                                                             
         STCM  RF,15,RLPOWREC                                                   
         MVC   RLPOWSIZ,W_FSIZE-W_INDEX(R1)                                     
         MVC   RLPOWCDT,W_DATEL-W_INDEX(R1)                                     
         LLH   RE,W_TIMEL-W_INDEX(R1)                                           
         SRDL  RE,8                                                             
         SRL   RF,32-8                                                          
         MHI   RE,100                                                           
         AR    RE,RF                                                            
         STCM  RE,3,RLPOWCTM                                                    
         MVC   RLPOWRDT,W_AGERD-W_INDEX(R1)                                     
         LLC   RF,W_AGERT-W_INDEX(R1)                                           
         MHI   RF,10                                                            
         SR    RE,RE                                                            
         LHI   R0,60                                                            
         DR    RE,R0                                                            
         MHI   RF,100                                                           
         AR    RE,RF                                                            
         STCM  RE,3,RLPOWRTM                                                    
         MVC   SAVEWKEY,NULLS      Clear segment pointer                        
                                                                                
         L     R1,WRKIAREC                                                      
         AHI   R1,4                                                             
         SR    R0,R0                                                            
         USING LQ_D,R1             Locate folder info element                   
NXTFIL08 CLI   LQ_EL,0             Test end of record                           
         JE    NXTFIL20                                                         
         CLI   LQ_EL,LQ_QINFQ      Test folder info element                     
         JE    NXTFIL12                                                         
         CLI   LQ_EL,LQ_FSEGQ      Test file segment pointer element            
         JE    NXTFIL14                                                         
         CLI   LQ_EL,LQ_DESCQ      Test description element                     
         JE    NXTFIL15                                                         
         CLI   LQ_EL,LQ_BSAMQ      Test BSAM file description                   
         JE    NXTFIL17                                                         
                                                                                
NXTFIL10 LLH   R0,LQ_LN            Bump to next element on record               
         AR    R1,R0                                                            
         J     NXTFIL08                                                         
                                                                                
NXTFIL12 MVC   RLPOWFID,LQ_QFLDR   Set folder id                                
         MVC   RLPOWRID,LQ_QRQST   Set request id                               
         J     NXTFIL10                                                         
                                                                                
NXTFIL14 CLC   LQ_FPREV,NULLS      Test has backward segment pointer            
         JE    *+14                                                             
         MVC   WRKIOD(WRKIOBL),WORK                                             
         J     NXTFIL06                                                         
         MVC   SAVEWKEY,LQ_FNEXT   Set next segment pointer                     
         J     NXTFIL10                                                         
                                                                                
NXTFIL15 LLH   RF,LQ_LN            Set file description                         
         SHI   RF,LQ_LN1Q+1                                                     
         CHI   RF,L'RLPODESC-1                                                  
         JNH   *+8                                                              
         LHI   RF,L'RLPODESC-1                                                  
         EX    RF,NFILMVDQ                                                      
         J     NXTFIL10                                                         
                                                                                
NXTFIL17 MVC   RLPOWREC,LQ_BRECS   Set BSAM file records and size               
         MVC   RLPOWSIZ,LQ_BSIZE                                                
         LLH   RF,LQ_LN                                                         
         CHI   RF,LQ_LNB2Q                                                      
         JL    NXTFIL10                                                         
         MVC   RLPOWRTM,NULLS      Clear retention time                         
         MVC   RLPOWCTM,NULLS      Clear creation time                          
*                                                                               
         TM    LQ_BRUND,X'80'      TEMPORARILY CHECK FOR TYPE 14 DATES          
         JZ    NXTFIL18                                                         
*                                                                               
         CHI   RF,LQ_LNB3Q                                                      
         JL    NXTFIL19                                                         
         TM    LQ_BIND,LQ_DTE14    Type 14 date type                            
         JZ    NXTFIL19                                                         
NXTFIL18 MVC   RLPOWCDT,LQ_BRUND   Set run date override                        
         MVC   RLPOWRDT,LQ_BEXPD   Set retention date override                  
         J     NXTFIL10                                                         
                                                                                
NXTFIL19 MVC   RLPOWCDT,LQ_BRUND                                                
         MVC   RLPOWRDT,LQ_BEXPD                                                
         STM   RE,R1,SAVERE                                                     
         GOTOR DATCON,DMCB,(2,RLPOWCDT),(30,RLPOWCDT)                           
         GOTOR DATCON,DMCB,(2,RLPOWRDT),(30,RLPOWRDT)                           
         LM    RE,R1,SAVERE                                                     
         J     NXTFIL10                                                         
                                                                                
NXTFIL20 CLC   SAVEWKEY,NULLS      Test segment pointer set                     
         JE    NXTFIL26                                                         
                                                                                
NXTFIL22 MVC   WRKWKEY,SAVEWKEY                                                 
         MVC   SAVEWKEY,NULLS                                                   
         MVI   WRKIACTN,WRKIAOPN   Open next segment                            
         GOTOR WRKIO,WRKIOD                                                     
         JNE   DEATH295                                                         
         GOTOR WRKIO,WRKIOD        Read first worker file record                
         JNE   DEATH296                                                         
                                                                                
         L     R1,WRKIABUF         Add number of records/file size              
         ICM   RF,15,W_RECS-W_INDEX(R1)                                         
         BCTR  RF,0                                                             
         ICM   RE,15,RLPOWREC                                                   
         AR    RE,RF                                                            
         STCM  RE,15,RLPOWREC                                                   
         ICM   RF,15,W_FSIZE-W_INDEX(R1)                                        
         ICM   RE,15,RLPOWSIZ                                                   
         AR    RE,RF                                                            
         STCM  RE,15,RLPOWSIZ                                                   
                                                                                
         L     R1,WRKIAREC                                                      
         AHI   R1,4                                                             
NXTFIL24 CLI   LQ_EL,0             Test end of record                           
         JE    DEATH297                                                         
         CLI   LQ_EL,LQ_FSEGQ      Test file segment pointer                    
         JE    *+14                                                             
         ICM   R0,3,LQ_LN                                                       
         AR    R1,R0                                                            
         J     NXTFIL24                                                         
         OC    SAVEWKEY,LQ_FNEXT   Set next segment key                         
         JNZ   NXTFIL22                                                         
         MVC   WRKIOD(WRKIOBL),WORK                                             
         GOTOR WRKIO,WRKIOD        Reset index read sequence                    
         J     EXITY                                                            
                                                                                
NXTFIL26 MVC   WRKIOD(WRKIOBL),WORK                                             
         J     EXITY                                                            
                                                                                
NXTFIL28 OI    INDQWORF,INDSWORF   Set in file reading mode                     
                                                                                
         L     R2,AWRKBLK                                                       
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         USING GARCD,R2                                                         
         MVC   GARKEY,NULLS                                                     
         MVI   GARKTYP,GARKTYPQ                                                 
         MVC   GARKAGY,LP_AGY                                                   
         MVC   GARKFILE,WRKKEY                                                  
         MVC   WORK3(GARKCDAT-GARKEY),GARKEY                                    
         GOTOR DMGR,DMCB,DMRDHI,GENDIR,GARCD,GARCD                              
         J     NXTFIL32                                                         
                                                                                
NXTFIL30 L     R2,AWRKBLK                                                       
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         GOTOR DMGR,DMCB,DMRSEQ,GENDIR,GARCD,GARCD                              
                                                                                
NXTFIL32 JNE   DEATH304                                                         
         CLC   GARKEY(GARKCDAT-GARKEY),WORK3                                    
         JE    *+12                                                             
         NI    INDQWORF,FF-INDSWORF                                             
         J     RLPLAST                                                          
                                                                                
         MVC   FULL,GARKDA         Read GENFIL record                           
         GOTOR DMGR,DMCB,GETREC,GENFIL,FULL,GARCD,WORK                          
         JNE   DEATH305                                                         
                                                                                
         MVC   RLPOWVAL(RLPOWVLQ),NULLS                                         
         MVI   RLPOWAPI,RLPOWAPQ                                                
         MVC   RLPOWKID,GARKFILE                                                
         MVC   RLPOWCDT,GARKCDAT                                                
         GOTOR DATCON,DMCB,(2,GARKCDAT),(20,RLPOWKCD)                           
         MVC   BYTE1,GARKSEQN                                                   
         XI    BYTE1,FF                                                         
         LLC   R0,BYTE1                                                         
         CVD   R0,DUB                                                           
         OI    DUB+L'DUB-1,X'0F'                                                
         UNPK  RLPOWKR#,DUB                                                     
         GOTOR DATCON,DMCB,(1,GARREXPD),(2,RLPOWRDT)                            
                                                                                
         LA    R1,GARRFST                                                       
         SR    R0,R0                                                            
         USING LQ_D,R1                                                          
NXTFIL34 CLI   LQ_EL,0             Test end of record                           
         JE    EXITY                                                            
         CLI   LQ_EL,LQ_DESCQ      Test description element                     
         JE    NXTFIL38                                                         
         CLI   LQ_EL,LQ_BSAMQ      Test BSAM file description                   
         JE    NXTFIL40                                                         
                                                                                
NXTFIL36 LLH   R0,LQ_LN            Bump to next element on record               
         AR    R1,R0                                                            
         J     NXTFIL34                                                         
                                                                                
NXTFIL38 LLH   RF,LQ_LN            Set file description                         
         SHI   RF,LQ_LN1Q+1                                                     
         CHI   RF,L'RLPODESC-1                                                  
         JNH   *+8                                                              
         LHI   RF,L'RLPODESC-1                                                  
         EX    RF,NFILMVDQ                                                      
         J     NXTFIL36                                                         
                                                                                
NXTFIL40 MVC   RLPOWREC,LQ_BRECS   Set BSAM file records and size               
         MVC   RLPOWSIZ,LQ_BSIZE                                                
         J     NXTFIL36                                                         
         DROP  R1,R2,R3                                                         
         EJECT                                                                  
***********************************************************************         
* Download a worker file                                              *         
***********************************************************************         
                                                                                
         USING RLPSAVED,R8                                                      
IWKID    USING RLPOWVAL,RLPIWKID                                                
FILDLD   L     RC,LP_AWORK         RC=A(DDLINK global w/s)                      
         L     R3,LP_ASAVE                                                      
         USING LS_D,R3                                                          
         USING WRKWKEY,LS_WKEY     Build worker file key                        
         CLI   IWKID.RLPOWAPI,RLPOWAPQ                                          
         JE    FILDLD02                                                         
         PACK  DUB,IWKID.RLPOWKUS                                               
         CVB   R0,DUB                                                           
         STCM  R0,3,WRKWUSID                                                    
         MVC   WRKWSPS,IWKID.RLPOWKPW                                           
         PACK  DUB(2),IWKID.RLPOWKDY                                            
         LLH   R0,DUB                                                           
         SRL   R0,4                                                             
         STC   R0,WRKWDAY                                                       
         MVC   WRKWCLS,IWKID.RLPOWKSL                                           
         PACK  DUB,IWKID.RLPOWKS#                                               
         CVB   R0,DUB                                                           
         STCM  R0,3,WRKWSEQN                                                    
         OI    INDQRLPD,INDSRLPD                                                
         OI    LS_WFLAG,LS_WFDDL   Set desktop download in progress             
         CLI   RLPPURGE,NOQ        Test don't purge file option set             
         JNE   *+8                                                              
         OI    LS_INDS2,LS_IXDEL   Yes - set don't purge flag                   
         GOTOR SEND,SDSNDQ         Call send file routine                       
         J     EXITY                                                            
                                                                                
FILDLD02 L     R2,AWRKBLK          Archive pointer download                     
         L     R2,WRKIAREC-WRKIOD(R2)                                           
         USING GARCD,R2            Read archive pointer record                  
         MVC   GARKEY,NULLS                                                     
         MVI   GARKTYP,GARKTYPQ                                                 
         MVC   GARKAGY,LP_AGY                                                   
         MVC   GARKFILE,IWKID.RLPOWKID                                          
         GOTOR DATCON,DMCB,(9,IWKID.RLPOWKCD),(2,GARKCDAT)                      
         PACK  DUB,IWKID.RLPOWKR#                                               
         CVB   R0,DUB                                                           
         STC   R0,GARKSEQN                                                      
         XI    GARKSEQN,FF                                                      
         GOTOR DMGR,DMCB,DMREAD,GENDIR,GARCD,GARCD                              
         JNE   DEATH306                                                         
         MVC   FULL,GARKDA         Extract disk address & read record           
         GOTOR DMGR,DMCB,GETREC,GENFIL,FULL,GARCD,WORK                          
         JNE   DEATH123                                                         
         OI    LS_INDS2,LS_IXDEL+LS_IARCP                                       
         OI    INDQGARC,INDSGARC   Set processing archive pointer               
         GOTOR SEND,SDSNDQ         Call send file routine                       
         NI    INDQGARC,FF-INDSGARC                                             
         J     EXITY                                                            
         DROP  R2,R3                                                            
         DROP  IWKID                                                            
         EJECT                                                                  
***********************************************************************         
* Validate folder                                                     *         
***********************************************************************         
                                                                                
VALGRP   LR    R0,RE                                                            
         MVC   RFPFGRP,NULLS                                                    
         MVI   RFPFGRP+(GRPKDTF-GRPKGRP),GRPKDTFQ                               
         CLI   RLPIFTYP,RLPIFTGQ   Test global folder                           
         JE    *+10                                                             
         MVC   RFPFGRP+(GRPKDTFP-GRPKGRP)(L'GRPKDTFP),LP_SECNO                  
         PACK  DUB,RLPIFSEQ                                                     
         CVB   RF,DUB                                                           
         STCM  RF,7,DUB                                                         
         XC    DUB(3),EFFS                                                      
         MVC   RFPFGRP+(GRPKDTFI-GRPKGRP)(L'GRPKDTFI),DUB                       
         MVI   RFPMODE,RFPVALGP                                                 
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test folder exists                           
         JE    VALGRPX                                                          
         J     DEATH298                                                         
VALGRPX  LR    RE,R0                                                            
         BR    RE                                                               
                                                                                
***********************************************************************         
* Validate request                                                    *         
***********************************************************************         
                                                                                
VALREQ   LR    R0,RE                                                            
         GOTOR HEXIN,DMCB,RLPIRIDM,RFPFRQID,L'RLPIRIDM                          
         CLC   12(4,R1),NULLS                                                   
         JE    DEATH299                                                         
         MVC   RFPFSORT(L'RLPIRIDP),RLPIRIDP                                    
         PACK  DUB,RLPIRIDS                                                     
         CVB   RF,DUB                                                           
         STC   RF,RFPFSEQN                                                      
         OI    RFPFFLAG,RFPF1STR                                                
         MVI   RFPMODE,RFPRETRQ                                                 
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         NI    RFPFFLAG,FF-(RFPF1STR)                                           
         CLI   RFPERROR,RFPNOERR   Test request exists                          
         JNE   DEATH300                                                         
         CLI   RFPRET,RFPEOF       Test end of requests                         
         JNE   VALREQX                                                          
         J     DEATH301                                                         
VALREQX  LR    RE,R0                                                            
         BR    RE                                                               
         EJECT                                                                  
***********************************************************************         
* Save folder                                                         *         
***********************************************************************         
                                                                                
SAVGRP   LR    R0,RE                                                            
         MVI   RFPMODE,RFPSAVGP    Save the folder                              
         GOTOR RLPRFPIO,DMCB,RFPIOD                                             
         CLI   RFPERROR,RFPNOERR   Test successful save                         
         JE    SAVGRPX                                                          
         J     DEATH302                                                         
SAVGRPX  LR    RE,R0                                                            
         BR    RE                                                               
                                                                                
***********************************************************************         
* Edit folder id                                                      *         
***********************************************************************         
                                                                                
EDTFID   MVI   RLPOFTYP,RLPIFTGQ                                                
         CLC   0(L'GRPKDTFP,R1),NULLS                                           
         JE    *+8                                                              
         MVI   RLPOFTYP,RLPIFTPQ                                                
         MVC   WORK(L'GRPKDTFI),L'GRPKDTFP(R1)                                  
         XC    WORK(L'GRPKDTFI),EFFS                                            
         SR    R1,R1                                                            
         ICM   R1,7,WORK                                                        
         CVD   R1,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  RLPOFSEQ,DUB                                                     
EDTFIDX  BR    RE                                                               
                                                                                
***********************************************************************         
* Edit request id                                                     *         
***********************************************************************         
                                                                                
EDTRID   LR    R0,RE                                                            
         MVC   RLPORIDP,RFPVSORT                                                
         GOTOR HEXOUT,DMCB,RFPVRQID,RLPORIDM,L'RFPVRQID,0                       
         LLC   RE,RFPVSEQN                                                      
         CVD   RE,DUB                                                           
         OI    DUB+L'DUB-1,DIGIBITS                                             
         UNPK  RLPORIDS,DUB                                                     
EDTRIDX  LR    RE,R0                                                            
         BR    RE                                                               
                                                                                
RLPLAST  MVI   LP_RMODE,LP_RLAST   Set no more records to come                  
         J     EXITY                                                            
         DROP  R4,R8                                                            
         EJECT                                                                  
***********************************************************************         
* Request maps                                                        *         
***********************************************************************         
                                                                                
REQFIL   LKREQ H,I#FILDLD,FILDLD,POINTROUT=Y                                    
WkKey    LKREQ F,1,(D,B#RLPSVD,RLPIWKID),CHAR,TEXT=GE#FILE,COL=*                
Purge    LKREQ F,2,(D,B#RLPSVD,RLPPURGE),CHAR,TEXT=GE#DEL,COL=*                 
         LKREQ E                                                                
                                                                                
REQLST   LKREQ H,I#LSTDLD,OUTLST                                                
WkKey    LKREQ F,1,(D,B#WORKD,WRKKEY),CHAR,TEXT=GE#KEY,COL=*                    
         LKREQ E                                                                
                                                                                
REQRLP   LKREQ H,I#RLPDLD,OUTRLP                                                
Data?    LKREQ F,1,(D,B#RLPSVD,RLPIACT),CHAR,TEXT=GE#RLPFR,COL=*                
         LKREQ E                                                                
                                                                                
REQMNT   LKREQ H,I#REQMNT,OUTREQ                                                
ActCd    LKREQ F,1,(D,B#RLPSVD,RLPIACT),CHAR,TEXT=GE#ACTN,COL=*                 
GrpID    LKREQ F,2,(D,B#RLPSVD,RLPIFID),CHAR,TEXT=GE#GROUP,COL=*                
Reqst    LKREQ F,3,(D,B#RLPSVD,RLPIRID),CHAR,TEXT=GE#REQST,COL=*                
RDesc    LKREQ F,4,(D,B#RLPSVD,RLPIRDSC),CHAR,TEXT=GE#DESC,COL=*,      +        
               LOWERCASE=Y                                                      
         LKREQ E                                                                
                                                                                
REQCAL   LKREQ H,I#CALMNT,OUTCAL                                                
GrpCd    LKREQ F,1,(D,B#RLPSVD,RLPIFID),CHAR,TEXT=GE#GROUP,COL=*                
RunDt    LKREQ F,2,(I,B#RLPSVD,RLPIDATI),JLNG,TEXT=GE#RUNON,COL=*,     +        
               LIST=Y,OLEN=L'RFPVNXTR                                           
         LKREQ E                                                                
                                                                                
REQGRP   LKREQ H,I#GRPMNT,OUTGRP                                                
ActCd    LKREQ F,1,(D,B#RLPSVD,RLPIACT),CHAR,TEXT=GE#ACTN,COL=*                 
GrpID    LKREQ F,2,(D,B#RLPSVD,RLPIFID),CHAR,TEXT=GE#GROUP,COL=*                
FDesc    LKREQ F,3,(D,B#RLPSVD,RLPIFDSC),CHAR,TEXT=GE#DESC,COL=*,      +        
               LOWERCASE=Y                                                      
When?    LKREQ F,4,(D,B#RLPSVD,RLPIWHEN),CHAR,TEXT=GE#RUNTM,COL=*               
         LKREQ E                                                                
                                                                                
         LKREQ X                                                                
         EJECT                                                                  
***********************************************************************         
* Output maps                                                         *         
***********************************************************************         
                                                                                
OUTRLP   LKOUT H                   ** RLP download **                           
                                                                                
OUTCTL   LKOUT R,1                 ** Control values **                         
Wkend    LKOUT C,1,(D,B#RLPSVD,RLPOAWSH),CHAR,ND=Y                              
         LKOUT E                                                                
                                                                                
OUTFAR   LKOUT R,2                 ** Folders and requests **                   
Array    LKOUT C,2,(A,ARYFAR),FILTROUT=FLTFAR                                   
         LKOUT E                                                                
                                                                                
         LKOUT X                                                                
                                                                                
OUTGRP   LKOUT H                   ** Folder maintenance response **            
         LKOUT R,1                                                              
Error    LKOUT C,1,(D,B#RLPSVD,RLPOERR),CHAR,ND=Y                               
FilID    LKOUT C,2,(D,B#RLPSVD,RLPOFID),CHAR,ND=Y                               
         LKOUT X                                                                
                                                                                
OUTCAL   LKOUT H                   ** Calendar maintenance response **          
         LKOUT R,1                                                              
Error    LKOUT C,1,(D,B#RLPSVD,RLPOERR),CHAR,ND=Y                               
         LKOUT X                                                                
                                                                                
OUTREQ   LKOUT H                   ** Request maintenance response **           
         LKOUT R,1                                                              
Error    LKOUT C,1,(D,B#RLPSVD,RLPOERR),CHAR,ND=Y                               
ReqID    LKOUT C,2,(D,B#RLPSVD,RLPORID),CHAR,ND=Y                               
         LKOUT X                                                                
                                                                                
OUTLST   LKOUT H                   ** File list download **                     
         LKOUT R,1                                                              
Array    LKOUT C,1,(A,ARYFIL)                                                   
         LKOUT X                                                                
         EJECT                                                                  
***********************************************************************         
* Nested array definitions                                            *         
***********************************************************************         
                                                                                
ARYFAR   LKOUT A,(R,NXTGRP),MULTIROW=Y                                          
FilIF    LKOUT C,1,(D,B#RLPSVD,RLPOFID),CHAR                                    
FDesc    LKOUT C,2,(D,B#RLPSVD,RLPOFDSC),CHAR,ND=Y                              
When?    LKOUT C,3,(D,B#RLPSVD,RLPOWHEN),CHAR,ND=Y                              
Array    LKOUT C,4,(A,ARYCAL)                                                   
Array    LKOUT C,5,(A,ARYREQ)                                                   
         LKOUT E                                                                
                                                                                
ARYREQ   LKOUT A,(R,NXTREQ),MULTIROW=Y                                          
ReqID    LKOUT C,1,(D,B#RLPSVD,RLPORID),CHAR                                    
         LKOUT E                                                                
                                                                                
ARYCAL   LKOUT A,(D,B#RLPSVD,RLPODATE),EOT=0                                    
Dates    LKOUT C,1,(D,,RLPODATE),CDAT                                           
         LKOUT E                                                                
                                                                                
ARYFIL   LKOUT A,(R,NXTFIL),MULTIROW=Y,ROWNAME=RLPOWVAL                         
WrkKy    LKOUT C,1,RLPOWKEY,CHAR,LEN=RLPOWKLQ                                   
#Recs    LKOUT C,2,RLPOWREC,UBIN                                                
FSize    LKOUT C,3,RLPOWSIZ,UBIN                                                
FDesc    LKOUT C,4,RLPODESC,CHAR,ND=Y                                           
GrpID    LKOUT C,5,RLPOWFID,CHAR,ND=Y                                           
ReqID    LKOUT C,6,RLPOWRID,CHAR,ND=Y                                           
CDate    LKOUT C,7,RLPOWCDT,NDAT,ND=Y                                           
CTime    LKOUT C,8,RLPOWCTM,LBIN,ND=Y                                           
RDate    LKOUT C,9,RLPOWRDT,NDAT,ND=Y                                           
RTime    LKOUT C,10,RLPOWRTM,LBIN,ND=Y                                          
         LKOUT E                                                                
         EJECT                                                                  
***********************************************************************         
* Saved storage for RLP interface                                     *         
***********************************************************************         
                                                                                
RLPSAVED DSECT ,                                                                
                                                                                
RLPRFPIO DS    A                   A(RFPIO)                                     
RLPPASS  DS    XL(L'LP_SECNO)      User password number                         
                                                                                
RLPXCVS  DS    0X                  ** Cleared values **                         
                                                                                
RLPKEY   DS    XL64                Key build area                               
                                                                                
RLPECUR  DS    CL6                 Current date (EBCDIC)                        
RLPEEND  DS    CL6                 End date (EBCDIC)                            
RLPJCUR  DS    XL4                 Current date (long Julian)                   
                                                                                
RLPIVALS DS    0X                  ** Input values **                           
                                                                                
RLPIACT  DS    C                   ** Action code **                            
RLPIAADD EQU   C'A'                Add a new folder/request                     
RLPIACHA EQU   C'C'                Change an existing folder/request            
RLPIADEL EQU   C'D'                Delete a folder/request                      
                                                                                
RLPIFID  DS    0CL6                ** Folder id **                              
RLPIFTYP DS    C                   ** Folder type **                            
RLPIFTGQ EQU   C'G'                Global folder                                
RLPIFTPQ EQU   C'P'                Personal folder                              
RLPIFSEQ DS    CL5                 Sequence number                              
                                                                                
RLPIFDSC DS    CL(RFPVDSCL)        Folder description                           
RLPIWHEN DS    C                   ** Run when? **                              
RLPIWAMQ EQU   C'A'                Run AM folder                                
RLPIWOVQ EQU   C'O'                Run overnight folder                         
RLPIWRSQ EQU   C'S'                Desktop save folder (never runs)             
RLPIDATI DS    X                   Run dates input indicator                    
RLPIADAT DS    AL3                 A(run dates)                                 
RLPIRID  DS    0CL13               Request id (mmmmtsppoonnn)                   
RLPIRIDP DS    CL6                 Overlay phase (tsppoo)                       
RLPIRIDM DS    CL4                 Request map number (hexadecimal)             
RLPIRIDS DS    CL3                 Request sequence number                      
RLPIRDSC DS    CL(RFPVRDSL)        Request description                          
RLPIWKID DS    CL(RLPOWKLQ)        Worker file id                               
RLPPURGE DS    C                   'N'=don't Purge file after send              
                                                                                
RLPIVALL EQU   *-RLPIVALS                                                       
                                                                                
RLPOVALS DS    0X                  ** Output values **                          
                                                                                
RLPOERR  DS    CL60                Error message                                
                                                                                
RLPOFID  DS    0CL6                ** Added folder id **                        
RLPOFTYP DS    C                   Added folder type (see RLPIFTXQ)             
RLPOFSEQ DS    CL5                 Added folder sequence number                 
                                                                                
RLPOFDSC DS    CL(RFPVDSCL)        Folder description                           
RLPOWHEN DS    C                   Run when?                                    
RLPORID  DS    0CL(L'RLPIRID)      Added request id (mmmmtsppoonnn)             
RLPORIDP DS    CL(L'RLPIRIDP)      Overlay phase (tsppoo)                       
RLPORIDM DS    CL(L'RLPIRIDM)      Request map number (hexadecimal)             
RLPORIDS DS    CL(L'RLPIRIDS)      Request sequence number                      
RLPOAWSH DS    C                   Allow weekend scheduling                     
RLPODATE DS    366XL2              Folder run dates                             
                                                                                
RLPOVALL EQU   *-RLPOVALS                                                       
                                                                                
         DS    0D                                                               
RLPBLOCK DS    (RFPBLTLN)X         RFPIO control block                          
                                                                                
         DS    0D                                                               
MINBLK   DS    XL(MINBLKL)         MINIO control block                          
                                                                                
RLPXCVL  EQU   *-RLPXCVS                                                        
                                                                                
RLPOWVAL DSECT ,                   ** Worker file values **                     
                                                                                
RLPOWKEY DS    0C                  ** Worker file key **                        
RLPOWKUS DS    CL5                 User-id number                               
RLPOWKPW DS    CL4                 Password                                     
RLPOWKDY DS    CL2                 Day                                          
RLPOWKSL DS    C                   System letter                                
RLPOWKS# DS    CL5                 File sequence number                         
RLPOWKLQ EQU   *-RLPOWKEY                                                       
                                                                                
         ORG   RLPOWKUS            ** Key for archive pointers **               
RLPOWAPI DS    C                   Archive pointer indicator                    
RLPOWAPQ EQU   C'*'                Indicator value                              
RLPOWKID DS    CL(L'GARKFILE)      File id                                      
RLPOWKCD DS    CL8                 Creation date (YYYYMMDD)                     
RLPOWKR# DS    CL2                 Sequence number                              
         ORG   ,                                                                
                                                                                
RLPODESC DS    CL100               File description                             
RLPOWFID DS    CL(L'RLPIFID)       Folder id                                    
RLPOWRID DS    CL(L'RLPIRID)       Request id                                   
RLPOWREC DS    XL(L'W_RECS)        Number of records                            
RLPOWSIZ DS    XL(L'W_FSIZE)       File size                                    
RLPOWCDT DS    XL(L'W_DATEL)       Creation date                                
RLPOWCTM DS    XL(L'W_TIMEL)       Creation time                                
RLPOWRDT DS    XL(L'W_AGERD)       Retention date                               
RLPOWRTM DS    XL(L'RLPOWCTM)      Retention time                               
                                                                                
RLPOWVLQ EQU   *-RLPOWVAL                                                       
                                                                                
RLPRHD   DSECT ,                   ** Request header element **                 
RLPRHEOD DS    CL(L'RSVREODI)      End of day id                                
RLPRHRID DS    CL(L'REQUEST#*2)    Request id map number                        
RLPRHRDS DS    CL(L'REQDESC#*2)    Request description map number               
         DS    CL30                Reserved for expansion                       
RLPRHLNQ EQU   *-RLPRHD            Length of request header                     
                                                                                
RLPRDD   DSECT ,                   ** Request data element **                   
RLPRDMAP DS    CL(L'LD_CODE*2)     Request data map number                      
RLPRDLEN DS    CL2                 Request data length                          
RLPRDLNQ EQU   *-RLPRDD                                                         
RLPRDATA DS    0C                  Request data value                           
DDLINK   CSECT ,                                                                
         EJECT                                                                  
**********************************************************************          
* Get PID                                                            *          
**********************************************************************          
                                                                                
         USING SECSAVED,R8         R8=A(save w/s)                               
GETPID   LR    R2,RC               Point to supplied storage                    
         USING GPWORKD,R2                                                       
         USING SA0REC,GPIO                                                      
         L     RC,LP_AWORK                                                      
         LHI   R0,L'SAPALPID                                                    
         ST    R0,LP_OLEN                                                       
         L     R1,LP_AINP          R1=A(PID number)                             
                                                                                
         MVC   SA0KEY,NULLS        Read person password record                  
         MVI   SA0KTYP,SA0KTYPQ                                                 
         MVC   SA0KAGY,SECAGYA                                                  
         MVC   SA0KNUM,0(R1)                                                    
         GOTOR DMGR,DMCB,DMREAD,CTFILE,SA0KEY,SA0KEY                            
         JNE   GETPIDN                                                          
                                                                                
         LA    R1,SA0DATA                                                       
         USING SAPALD,R1                                                        
         SR    R0,R0                                                            
GETPID02 CLI   SAPALEL,EOR         Test end of record                           
         JE    GETPIDN                                                          
         CLI   SAPALEL,SAPALELQ    Test new security person element             
         JE    *+14                                                             
         IC    R0,SAPALLN          Bump to next element                         
         AR    R1,R0                                                            
         J     GETPID02                                                         
         L     RF,LP_AOUT          Set PID                                      
         MVC   0(L'SAPALPID,RF),SAPALPID                                        
         J     EXITY                                                            
                                                                                
GETPIDN  MVC   LP_OLEN,FZERO                                                    
         J     EXITY                                                            
         DROP  R1,R2,R8                                                         
                                                                                
GPWORKD  DSECT ,                   ** GETPID local w/s **                       
GPIO     DS    XL1000              I/O area                                     
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Binary search routine                                               *         
***********************************************************************         
                                                                                
BINSRCH  NTR1  LABEL=*                                                          
         LR    R9,R1                                                            
         USING BSPARA,R9           R9=A(parameter list)                         
         LM    R2,R3,BSPATAB       R2=A(table), R3=entry count                  
         LH    R4,BSPLENR          R4=entry length                              
         LR    R5,R4                                                            
         BCTR  R5,0                R5=entry length-1                            
         LR    R1,R3               Calculate end of table                       
         BCTR  R1,0                                                             
         MH    R1,BSPLENR                                                       
         AR    R1,R2               R1=A(last entry in table)                    
         SR    RF,RF                                                            
         ICM   RF,7,BSPAREC        RF=A(key to search for)                      
                                                                                
         AR    R1,R4                                                            
         ST    R1,FULL             Save A(end of table)                         
         BCTR  R1,0                R1=A(end of table-1)                         
         LR    R0,R4                                                            
         SR    R2,R0                                                            
         SR    R1,R2                                                            
         AR    R0,R0                                                            
         CR    R0,R1                                                            
         JNH   *-4                                                              
         AR    R1,R2                                                            
                                                                                
         BASR  RE,0                                                             
         SRL   R0,1                                                             
         CR    R0,R4                                                            
         JL    BINSRCH4                                                         
         BRXH  R2,R0,BINSRCH2                                                   
                                                                                
         EX    R5,BSRCCLF2         Match entry key                              
         BHR   RE                  High                                         
         JL    BINSRCH2            Low                                          
         STCM  R2,7,BSPAREC        Return entry address                         
         J     BINSRCHX                                                         
                                                                                
BINSRCH2 SR    R2,R0               Low                                          
         BR    RE                                                               
                                                                                
BINSRCH4 AR    R2,R4                                                            
         MVC   BSPAREC,FZERO       Set entry not found                          
         C     R2,FULL             Test entry within table                      
         JNL   BINSRCHX                                                         
         STCM  R2,7,BSPAREC        Point to entry found (read high)             
         OI    BSPRTRN,X'80'       Set no exact key match                       
                                                                                
BINSRCHX CLC   BSPAREC,FZERO       Set condition code                           
         J     EXIT                                                             
         DROP  R9                                                               
                                                                                
BSPARA   DSECT ,                   ** Parameter list to BINSRCH **              
BSPRTRN  DS    X                                                                
BSPAREC  DS    AL3                 A(key to search for)/A(entry)                
BSPATAB  DS    F                   A(table)                                     
BSPRECS  DS    F                   Number of entries in table                   
         DS    H                   n/d                                          
BSPLENR  DS    H                   Length of table entry (and key)              
DDLINK   CSECT ,                                                                
         EJECT                                                                  
         DROP  RA                                                               
***********************************************************************         
* Sundry routines requiring base registers                            *         
***********************************************************************         
                                                                                
GETTIM   NTR1  BASE=*,LABEL=*      Get current time into WORK                   
         TIME  DEC,DUB,LINKAGE=SYSTEM                                           
         UNPK  WORK(15),DUB                                                     
         J     EXIT                                                             
                                                                                
OPNINP   NTR1  BASE=*,LABEL=*      Open EDIINP input file                       
         OPEN  (EDIINP,INPUT)                                                   
         J     EXIT                                                             
         DROP  RB                                                               
                                                                                
CLOINP   NTR1  BASE=*,LABEL=*      Close EDIINP input file                      
         CLOSE (EDIINP)                                                         
         J     EXIT                                                             
         DROP  RB                                                               
                                                                                
OPNOUT   NTR1  BASE=*,LABEL=*      Open EDIOUT output file                      
         OPEN  (EDIOUT,OUTPUT)                                                  
         LTR   RF,RF                                                            
         JNZ   DEATH322                                                         
         J     EXIT                                                             
         DROP  RB                                                               
                                                                                
CLOOUT   NTR1  BASE=*,LABEL=*      Close EDIOUT output file                     
         CLOSE (EDIOUT)                                                         
         J     EXIT                                                             
         DROP  RB                                                               
         EJECT                                                                  
***********************************************************************         
* Exits                                                               *         
***********************************************************************         
         USING GLOBALS,RA          RA=A(DDLINK global literal values)           
                                                                                
EXITR6   XIT1  REGS=(R6)           Exit with R6 intact                          
                                                                                
EXITY    LHI   RF,1                                                             
         J     EXITCC                                                           
EXITL    LHI   RF,0                                                             
         J     EXITCC                                                           
EXITH    DS    0H                                                               
EXITN    LHI   RF,2                                                             
EXITCC   CHI   RF,1                                                             
                                                                                
EXIT     XIT1  ,                                                                
         EJECT                                                                  
DEATH001 DC    H'0',C'E001'        RUNPARM address not set                      
DEATH002 DC    H'0',C'E002'        RUNFACS address not set                      
DEATH003 DC    H'0',C'E003'        No server address set                        
DEATH004 DC    H'0',C'E004'        Bad message                                  
DEATH005 DC    H'0',C'E005'        Missing equals sign                          
DEATH006 DC    H'0',C'E006'        Character less than A                        
DEATH007 DC    H'0',C'E007'        Character greater than D                     
DEATH008 DC    H'0',C'E008'        Invalid length character                     
DEATH009 DC    H'0',C'E009'        Invalid length character                     
DEATH010 DC    H'0',C'E010'        Invalid length character                     
DEATH011 DC    H'0',C'E011'                                                     
DEATH012 DC    H'0',C'E012'                                                     
DEATH013 DC    H'0',C'E013'        Something terribly wrong                     
DEATH014 DC    H'0',C'E014'                                                     
DEATH015 DC    H'0',C'E015'                                                     
DEATH016 DC    H'0',C'E016'        Die if can't initialize                      
DEATH017 DC    H'0',C'E017'                                                     
DEATH018 DC    H'0',C'E018'                                                     
DEATH019 DC    H'0',C'E019'        Can't take validation errors here            
DEATH020 DC    H'0',C'E020'                                                     
DEATH021 DC    H'0',C'E021'                                                     
DEATH022 DC    H'0',C'E022'                                                     
DEATH023 DC    H'0',C'E023'                                                     
DEATH024 DC    H'0',C'E024'                                                     
DEATH025 DC    H'0',C'E025'                                                     
DEATH026 DC    H'0',C'E026'                                                     
DEATH027 DC    H'0',C'E027'                                                     
DEATH028 DC    H'0',C'E028'                                                     
DEATH029 DC    H'0',C'E029'                                                     
DEATH030 DC    H'0',C'E030'        Die if can't initialize                      
DEATH031 DC    H'0',C'E031'                                                     
DEATH032 DC    H'0',C'E032'                                                     
DEATH033 DC    H'0',C'E033'                                                     
DEATH034 DC    H'0',C'E034'        Can't close the worker file                  
DEATH035 DC    H'0',C'E035'        Can't open the file                          
DEATH036 DC    H'0',C'E036'        Can't close the worker file                  
DEATH037 DC    H'0',C'E037'        Can't open the file                          
DEATH038 DC    H'0',C'E038'                                                     
DEATH039 DC    H'0',C'E039'                                                     
DEATH040 DC    H'0',C'E040'                                                     
DEATH042 DC    H'0',C'E042'                                                     
DEATH043 DC    H'0',C'E043'                                                     
DEATH044 DC    H'0',C'E044'                                                     
DEATH045 DC    H'0',C'E045'        Server can't call LINKIO                     
DEATH046 DC    H'0',C'E046'                                                     
DEATH047 DC    H'0',C'E047'        LP_AQMAP not set                             
DEATH048 DC    H'0',C'E048'                                                     
DEATH049 DC    H'0',C'E049'        which can't be zero                          
DEATH050 DC    H'0',C'E050'        Invalid user block id                        
DEATH051 DC    H'0',C'E051'        Invalid user block address                   
DEATH052 DC    H'0',C'E052'                                                     
DEATH053 DC    H'0',C'E053'                                                     
DEATH054 DC    H'0',C'E054'        Mask number can't be zero                    
DEATH055 DC    H'0',C'E055'        Nor greater than mask length                 
DEATH056 DC    H'0',C'E056'                                                     
DEATH057 DC    H'0',C'E057'                                                     
DEATH058 DC    H'0',C'E058'                                                     
DEATH059 DC    H'0',C'E059'        Invalid user block id                        
DEATH060 DC    H'0',C'E060'        Invalid user block address                   
DEATH061 DC    H'0',C'E061'        Worker key is zeroes                         
DEATH062 DC    H'0',C'E062'        Worker key is zeroes                         
DEATH063 DC    H'0',C'E063'                                                     
DEATH064 DC    H'0',C'E064'        Can't restore record                         
DEATH065 DC    H'0',C'E065'                                                     
DEATH066 DC    H'0',C'E066'        Can't save buffer                            
DEATH067 DC    H'0',C'E067'        Can't purge the worker file                  
DEATH068 DC    H'0',C'E068'                                                     
DEATH069 DC    H'0',C'E069'        Can't locate work queue entry                
DEATH070 DC    H'0',C'E070'                                                     
DEATH071 DC    H'0',C'E071'                                                     
DEATH072 DC    H'0',C'E072'        Work queue entry not found                   
DEATH073 DC    H'0',C'E073'                                                     
DEATH074 DC    H'0',C'E074'                                                     
DEATH075 DC    H'0',C'E075'        Other process can't be an upload             
DEATH076 DC    H'0',C'E076'        Can't initialize                             
DEATH077 DC    H'0',C'E077'        Bad element                                  
DEATH078 DC    H'0',C'E078'                                                     
DEATH079 DC    H'0',C'E079'        Bad element                                  
DEATH080 DC    H'0',C'E080'        Record has no data definitions               
DEATH081 DC    H'0',C'E081'        Bad element                                  
DEATH082 DC    H'0',C'E082'        Unknown limit access type                    
DEATH083 DC    H'0',C'E083'                                                     
DEATH084 DC    H'0',C'E084'                                                     
DEATH085 DC    H'0',C'E085'                                                     
DEATH086 DC    H'0',C'E086'        Bad element                                  
DEATH087 DC    H'0',C'E087'                                                     
DEATH088 DC    H'0',C'E088'        Bad element                                  
DEATH089 DC    H'0',C'E089'        Record has no data definitions               
DEATH090 DC    H'0',C'E090'        Bad element                                  
DEATH091 DC    H'0',C'E091'        Can't initialise SECRET                      
DEATH092 DC    H'0',C'E092'                                                     
DEATH093 DC    H'0',C'E093'        Can't save TIA                               
DEATH094 DC    H'0',C'E094'        Can't restore TIA                            
DEATH095 DC    H'0',C'E095'                                                     
DEATH096 DC    H'0',C'E096'                                                     
DEATH097 DC    H'0',C'E097'        Unknown data type                            
DEATH098 DC    H'0',C'E098'                                                     
DEATH099 DC    H'0',C'E099'                                                     
DEATH100 DC    H'0',C'E100'                                                     
DEATH102 DC    H'0',C'E102'        Something terribly wrong                     
DEATH103 DC    H'0',C'E103'                                                     
DEATH104 DC    H'0',C'E104'                                                     
DEATH105 DC    H'0',C'E105'                                                     
DEATH106 DC    H'0',C'E106'        Can't close upload worker file               
DEATH107 DC    H'0',C'E107'                                                     
DEATH108 DC    H'0',C'E108'                                                     
DEATH109 DC    H'0',C'E109'        Can't close upload worker file               
DEATH110 DC    H'0',C'E110'        Can't run this work                          
DEATH111 DC    H'0',C'E111'        Can't open worker file                       
DEATH112 DC    H'0',C'E112'        Can't close the worker file                  
DEATH113 DC    H'0',C'E113'        Invalid hexadecimal characters               
DEATH114 DC    H'0',C'E114'        Master map index pointer not set             
DEATH115 DC    H'0',C'E115'        Can't load server phase                      
DEATH116 DC    H'0',C'E116'        No server address set                        
DEATH117 DC    H'0',C'E117'        Can't locate map in server                   
DEATH118 DC    H'0',C'E118'        Sub-list columns not set                     
DEATH119 DC    H'0',C'E119'        Array is already open                        
DEATH120 DC    H'0',C'E120'        Array end without start                      
DEATH121 DC    H'0',C'E121'        Need to increase ROWVALMC                    
DEATH122 DC    H'0',C'E122'                                                     
DEATH123 DC    H'0',C'E123'                                                     
DEATH124 DC    H'0',C'E124'        Can't create upload file                     
DEATH125 DC    H'0',C'E125'                                                     
DEATH126 DC    H'0',C'E126'                                                     
DEATH127 DC    H'0',C'E127'                                                     
DEATH128 DC    H'0',C'E128'                                                     
DEATH129 DC    H'0',C'E129'                                                     
DEATH130 DC    H'0',C'E130'        Range can't be valid                         
DEATH131 DC    H'0',C'E131'                                                     
DEATH132 DC    H'0',C'E132'                                                     
DEATH133 DC    H'0',C'E133'                                                     
DEATH134 DC    H'0',C'E134'                                                     
DEATH135 DC    H'0',C'E135'                                                     
DEATH136 DC    H'0',C'E136'                                                     
DEATH137 DC    H'0',C'E137'                                                     
DEATH138 DC    H'0',C'E138'                                                     
DEATH139 DC    H'0',C'E139'                                                     
DEATH140 DC    H'0',C'E140'                                                     
DEATH141 DC    H'0',C'E141'                                                     
DEATH142 DC    H'0',C'E142'                                                     
DEATH143 DC    H'0',C'E143'        Can't be zero                                
DEATH144 DC    H'0',C'E144'        Can't be greater than N'mask bits            
DEATH145 DC    H'0',C'E145'                                                     
DEATH146 DC    H'0',C'E146'                                                     
DEATH147 DC    H'0',C'E147'                                                     
DEATH148 DC    H'0',C'E148'        Bad element length                           
DEATH149 DC    H'0',C'E149'        Bad element length                           
DEATH150 DC    H'0',C'E150'                                                     
DEATH151 DC    H'0',C'E151'                                                     
DEATH152 DC    H'0',C'E152'                                                     
DEATH153 DC    H'0',C'E153'                                                     
DEATH154 DC    H'0',C'E154'                                                     
DEATH155 DC    H'0',C'E155'                                                     
DEATH156 DC    H'0',C'E156'        Make SKBREC bigger please                    
DEATH157 DC    H'0',C'E157'                                                     
DEATH158 DC    H'0',C'E158'        Unknown key component type                   
DEATH159 DC    H'0',C'E159'                                                     
DEATH160 DC    H'0',C'E160'                                                     
DEATH161 DC    H'0',C'E161'                                                     
DEATH162 DC    H'0',C'E162'                                                     
DEATH163 DC    H'0',C'E163'        Make SKBREC bigger please                    
DEATH164 DC    H'0',C'E164'                                                     
DEATH165 DC    H'0',C'E165'        Invalid key component type                   
DEATH166 DC    H'0',C'E166'        Invalid key component type                   
DEATH167 DC    H'0',C'E167'        WMP overflow                                 
DEATH168 DC    H'0',C'E168'        Table overflow                               
DEATH169 DC    H'0',C'E169'        RUNPARM address not set                      
DEATH170 DC    H'0',C'E170'                                                     
DEATH171 DC    H'0',C'E171'                                                     
DEATH172 DC    H'0',C'E172'        Invalid table                                
DEATH173 DC    H'0',C'E173'        Invalid table                                
DEATH174 DC    H'0',C'E174'                                                     
DEATH175 DC    H'0',C'E175'        Die if no parent row                         
DEATH176 DC    H'0',C'E176'        Invalid block number                         
DEATH177 DC    H'0',C'E177'                                                     
DEATH178 DC    H'0',C'E178'                                                     
DEATH179 DC    H'0',C'E179'                                                     
DEATH180 DC    H'0',C'E180'        Server didn't set the data address           
DEATH181 DC    H'0',C'E181'        Server didn't set the data address           
DEATH182 DC    H'0',C'E182'        Invalid user block id                        
DEATH183 DC    H'0',C'E183'        Invalid user block address                   
DEATH184 DC    H'0',C'E184'                                                     
DEATH185 DC    H'0',C'E185'                                                     
DEATH186 DC    H'0',C'E186'                                                     
DEATH187 DC    H'0',C'E187'                                                     
DEATH188 DC    H'0',C'E188'                                                     
DEATH189 DC    H'0',C'E189'                                                     
DEATH190 DC    H'0',C'E190'                                                     
DEATH191 DC    H'0',C'E191'                                                     
DEATH192 DC    H'0',C'E192'                                                     
DEATH193 DC    H'0',C'E193'                                                     
DEATH194 DC    H'0',C'E194'                                                     
DEATH195 DC    H'0',C'E195'                                                     
DEATH196 DC    H'0',C'E196'                                                     
DEATH197 DC    H'0',C'E197'                                                     
DEATH198 DC    H'0',C'E198'                                                     
DEATH199 DC    H'0',C'E199'                                                     
DEATH200 DC    H'0',C'E200'                                                     
DEATH201 DC    H'0',C'E201'                                                     
DEATH202 DC    H'0',C'E202'                                                     
DEATH203 DC    H'0',C'E203'                                                     
DEATH204 DC    H'0',C'E204'                                                     
DEATH205 DC    H'0',C'E205'                                                     
DEATH206 DC    H'0',C'E206'                                                     
DEATH207 DC    H'0',C'E207'                                                     
DEATH208 DC    H'0',C'E208'        Index area needs to be longer                
DEATH209 DC    H'0',C'E209'                                                     
DEATH210 DC    H'0',C'E210'                                                     
DEATH211 DC    H'0',C'E211'                                                     
DEATH212 DC    H'0',C'E212'                                                     
DEATH213 DC    H'0',C'E213'                                                     
DEATH214 DC    H'0',C'E214'        Invalid map                                  
DEATH215 DC    H'0',C'E215'                                                     
DEATH216 DC    H'0',C'E216'                                                     
DEATH217 DC    H'0',C'E217'                                                     
DEATH218 DC    H'0',C'E218'                                                     
DEATH219 DC    H'0',C'E219'                                                     
DEATH220 DC    H'0',C'E220'        Record will overflow                         
DEATH221 DC    H'0',C'E221'                                                     
DEATH222 DC    H'0',C'E222'                                                     
DEATH223 DC    H'0',C'E223'                                                     
DEATH224 DC    H'0',C'E224'                                                     
DEATH225 DC    H'0',C'E225'        Record has overflowed                        
DEATH226 DC    H'0',C'E226'                                                     
DEATH227 DC    H'0',C'E227'                                                     
DEATH228 DC    H'0',C'E228'                                                     
DEATH229 DC    H'0',C'E229'                                                     
DEATH230 DC    H'0',C'E230'                                                     
DEATH231 DC    H'0',C'E231'                                                     
DEATH232 DC    H'0',C'E232'        No Tabs run tables                           
DEATH233 DC    H'0',C'E233'        Bad N'queue entries                          
DEATH234 DC    H'0',C'E234'        Bad queue address                            
DEATH235 DC    H'0',C'E235'                                                     
DEATH236 DC    H'0',C'E236'                                                     
DEATH237 DC    H'0',C'E237'                                                     
DEATH238 DC    H'0',C'E238'        Can't open the file                          
DEATH239 DC    H'0',C'E239'        Can't open the file                          
DEATH240 DC    H'0',C'E240'                                                     
DEATH241 DC    H'0',C'E241'                                                     
DEATH242 DC    H'0',C'E242'                                                     
DEATH243 DC    H'0',C'E243'                                                     
DEATH245 DC    H'0',C'E245'                                                     
DEATH246 DC    H'0',C'E246'                                                     
DEATH247 DC    H'0',C'E247'                                                     
DEATH248 DC    H'0',C'E248'                                                     
DEATH249 DC    H'0',C'E249'                                                     
DEATH250 DC    H'0',C'E250'        GLOBBER error encountered                    
DEATH251 DC    H'0',C'E251'                                                     
DEATH252 DC    H'0',C'E252'                                                     
DEATH253 DC    H'0',C'E253'                                                     
DEATH254 DC    H'0',C'E254'                                                     
DEATH255 DC    H'0',C'E255'                                                     
DEATH256 DC    H'0',C'E256'                                                     
DEATH257 DC    H'0',C'E257'        No worker file key specified                 
DEATH258 DC    H'0',C'E258'                                                     
DEATH259 DC    H'0',C'E259'                                                     
DEATH260 DC    H'0',C'E260'        Too many server entries in list              
DEATH261 DC    H'0',C'E261'                                                     
DEATH262 DC    H'0',C'E262'                                                     
DEATH263 DC    H'0',C'E263'                                                     
DEATH272 DC    H'0',C'E272'                                                     
DEATH273 DC    H'0',C'E273'                                                     
DEATH274 DC    H'0',C'E274'                                                     
DEATH275 DC    H'0',C'E275'                                                     
DEATH276 DC    H'0',C'E276'                                                     
DEATH277 DC    H'0',C'E277'                                                     
DEATH278 DC    H'0',C'E278'                                                     
DEATH279 DC    H'0',C'E279'                                                     
DEATH280 DC    H'0',C'E280'                                                     
DEATH281 DC    H'0',C'E281'                                                     
DEATH282 DC    H'0',C'E282'                                                     
DEATH283 DC    H'0',C'E283'                                                     
DEATH284 DC    H'0',C'E284'                                                     
DEATH285 DC    H'0',C'E285'                                                     
DEATH286 DC    H'0',C'E286'                                                     
DEATH287 DC    H'0',C'E287'                                                     
DEATH288 DC    H'0',C'E288'                                                     
DEATH289 DC    H'0',C'E289'                                                     
DEATH290 DC    H'0',C'E290'                                                     
DEATH291 DC    H'0',C'E291'                                                     
DEATH292 DC    H'0',C'E292'                                                     
DEATH293 DC    H'0',C'E293'                                                     
DEATH294 DC    H'0',C'E294'                                                     
DEATH295 DC    H'0',C'E295'                                                     
DEATH296 DC    H'0',C'E296'                                                     
DEATH297 DC    H'0',C'E297'                                                     
DEATH298 DC    H'0',C'E298'                                                     
DEATH299 DC    H'0',C'E299'                                                     
DEATH300 DC    H'0',C'E300'                                                     
DEATH301 DC    H'0',C'E301'                                                     
DEATH302 DC    H'0',C'E302'                                                     
DEATH303 DC    H'0',C'E303'                                                     
DEATH304 DC    H'0',C'E304'                                                     
DEATH305 DC    H'0',C'E305'                                                     
DEATH306 DC    H'0',C'E306'                                                     
DEATH307 DC    H'0',C'E307'        Credential check                             
DEATH308 DC    H'0',C'E308'                                                     
DEATH309 DC    H'0',C'E309'                                                     
DEATH310 DC    H'0',C'E310'        Invalid user block id                        
DEATH311 DC    H'0',C'E311'        Invalid user block address                   
DEATH312 DC    H'0',C'E312'                                                     
DEATH313 DC    H'0',C'E313'                                                     
DEATH314 DC    H'0',C'E314'        Can't initialize                             
DEATH315 DC    H'0',C'E315'                                                     
DEATH316 DC    H'0',C'E316'                                                     
DEATH317 DC    H'0',C'E317'        Invalid packed field                         
DEATH318 DC    H'0',C'E318'        Invalid security agency                      
DEATH319 DC    H'0',C'E319'        Invalid packed field                         
DEATH320 DC    H'0',C'E320'        Missing HLQ for output file                  
DEATH321 DC    H'0',C'E321'        Can't read agency record                     
DEATH322 DC    H'0',C'E322'        Can't open EDIOUT output file                
DEATH998 DC    H'0',C'E998'        Can't locate server                          
DEATH999 DC    H'0',C'E999'        LS_D corrupt                                 
         EJECT                                                                  
***********************************************************************         
*<<<<<<<<<<<<<<<<<<<<<<<<<< Start of globals >>>>>>>>>>>>>>>>>>>>>>>>>*         
***********************************************************************         
                                                                                
GLOBALS  DS    0D                                                               
                                                                                
ELBIIC03 ICM   R0,0,0(R3)                                                       
ECBIIC03 ICM   R0,0,0(R3)                                                       
MQGMVCW2 MVC   WORK3(0),0(R2)                                                   
         USING LQ_D,R3                                                          
GREQMVSQ MVC   LS_SMFF-LS_D(0,R1),LQ_SMFF                                       
GREQMVWQ MVC   WORK(0),LQ_CMND                                                  
         DROP  R3                                                               
GREQMVFF MVC   1(0,RF),0(RF)                                                    
GREQMV11 MVC   1(0,R1),0(R1)                                                    
GREQTM10 TM    0(R1),0                                                          
GREQOI10 OI    0(R1),0                                                          
GREQTME0 TM    0(RE),0                                                          
GREQOIE0 OI    0(RE),0                                                          
         USING LW_D,R2                                                          
GREQMVWN MVC   LW_DATA1(0),NULLS                                                
         DROP  R2                                                               
GMQRMV11 MVC   1(0,R1),0(R1)                                                    
CLRRMVFN MVC   0(0,RF),NULLS                                                    
         USING LQ_D,R2                                                          
SENDMVWQ MVC   WORK2(0),LQ_ERRXT                                                
         DROP  R2                                                               
TSTLMV1W MVC   0(0,R1),WORK                                                     
FARDMV1E MVC   0(0,R1),0(RE)                                                    
         USING LW_D,R5                                                          
VSTRMVWW MVC   WORK(0),LW_DATA1                                                 
VSTRMV2W MVC   LW_DATA2(0),WORK                                                 
VSTRMV2N MVC   0(0,R2),NULLS                                                    
VSTRMV2F MVC   0(0,R2),0(RF)                                                    
VSTRMV22 MVC   1(0,R2),0(R2)                                                    
VSTRCL1F CLC   0(0,R1),0(RF)                                                    
VSTRMV1N MVC   0(0,R1),NULLS                                                    
VSTRMV1F MVC   0(0,R1),0(RF)                                                    
VSTRCLW1 CLC   LW_DATA1(0),0(R1)                                                
VSTRMVWE MVC   LW_DATA1(0),0(RE)                                                
         DROP  R5                                                               
VINPMVE3 MVC   0(0,RE),0(R3)                                                    
VMBAOI50 OI    0(R5),0                                                          
VCHRMV55 MVC   1(0,R5),0(R5)                                                    
VCHRMV53 MVC   0(0,R5),0(R3)                                                    
VUBITP3W TRT   0(0,R3),WORK                                                     
VUBIPKD3 PACK  DUB,0(0,R3)                                                      
VUBIST05 STCM  R0,0,0(R5)                                                       
VUBIIC0Z ICM   R0,0,ZEROES                                                      
VSPAZA51 ZAP   0(0,R5),4(8,R1)                                                  
VSPACP51 CP    0(0,R5),4(8,R1)                                                  
VCBIST05 STCM  R0,0,0(R5)                                                       
VCBIIC01 ICM   R0,0,0(R1)                                                       
VHEXMVWW MVC   WORK2+1(0),WORK2                                                 
VHEXMV13 MVC   0(0,R1),0(R3)                                                    
VVSTMV53 MVC   0(0,R5),0(R3)                                                    
         USING CTIREC,R2                                                        
VUSIMVI3 MVC   CTIKID(0),0(R3)                                                  
         DROP  R2                                                               
         USING SVRTABD,R5                                                       
VACCMVS3 MVC   SVRTACC1(0),0(R3)                                                
         DROP  R5                                                               
VFLDMVF3 MVC   FOLDER(0),0(R3)                                                  
VRDSMVR3 MVC   REQDESC(0),0(R3)                                                 
VUPRMVS3 MVC   LS_TPRG-LS_D(0,R1),0(R3)                                         
VMQHMVM3 MVC   LP_MQQUE(0),0(R3)                                                
VMQKMVM3 MVC   LP_MQKEY(0),0(R3)                                                
VSXQMVM3 MVC   LP_MQSVR(0),0(R3)                                                
VXRKMVM3 MVC   LP_MQRKV(0),0(R3)                                                
EDTMTM30 TM    0(R3),0                                                          
         USING EOWORKD,R7                                                       
EUSRMVW5 MVC   EOWORK(0),0(R5)                                                  
         DROP  R7                                                               
EHEXCL3N CLC   0(0,R3),NULLS                                                    
EHEXMV55 MVC   0(0,R5),1(R5)                                                    
ESPACL3N CLC   0(0,R3),NULLS                                                    
EDTSPTST TP    0(0,R3)                                                          
EDTSPSET ZAP   DUB,0(0,R3)                                                      
ECPACL3N CLC   0(0,R3),NULLS                                                    
EUBIIC03 ICM   R0,0,0(R3)                                                       
ELBIMV51 MVC   0(0,R5),0(R1)                                                    
EQVAMV53 MVC   0(0,R5),0(R3)                                                    
SORTCLC  CLC   0(0,R2),0(RF)                                                    
SORTXC2F XC    0(0,R2),0(RF)                                                    
SORTXCF2 XC    0(0,RF),0(R2)                                                    
         USING SKWORKD,R7                                                       
SKEYMVRE MVC   SKBREC(0),0(RE)                                                  
SKEYMV1N MVC   0(0,R1),NULLS                                                    
SKEYMVEN MVC   0(0,RE),NULLS                                                    
SKEYMVEF MVC   0(0,RE),0(RF)                                                    
SKEYMVEE MVC   1(0,RE),0(RE)                                                    
SKEYMV1E MVC   0(0,R1),0(RE)                                                    
SKEYCLEF CLC   0(0,RE),0(RF)                                                    
SKEYCLEE CLC   0(0,RE),NULLS                                                    
SKEYCLFV CLC   0(0,RE),SKFILL                                                   
SKEYMVFV MVC   0(0,RE),SKFILL                                                   
         DROP  R7                                                               
AWMPCL2N CLC   0(0,R2),NULLS                                                    
AWMPCL2F CLC   0(0,R2),0(RF)                                                    
AWMPMVF2 MVC   0(0,RF),0(R2)                                                    
PARYCLPF CLC   LP_RFVAL(0),0(RF)                                                
         USING APWORKD,R7                                                       
PARYMVWW MVC   APWORK+1(0),APWORK                                               
PARYMVWF MVC   APWORK(0),0(RF)                                                  
         DROP  R7                                                               
FPUTMV1F MVC   0(0,R1),0(RF)                                                    
         USING LQ_D,R6                                                          
FPUTMVQF MVC   LQ_VALUE(0),0(RF)                                                
         DROP  R6                                                               
         USING LT_D,R8                                                          
BMMICLFT CLC   0(0,RF),LT_CCTRL                                                 
BMMIMVFT MVC   0(0,RF),LT_CCTRL                                                 
         DROP  R8                                                               
         USING FLDHDRD,R8                                                       
BHDRMVFF MVC   FLDDATA+1(0),FLDDATA                                             
         DROP  R8                                                               
         USING LC_D,RE                                                          
GIDPMVWC MVC   WORK+1(0),LC_DATA                                                
         DROP  RE                                                               
         USING GSWORKD,R7                                                       
GSOFMVFF MVC   GSFIELD(0),0(RF)                                                 
GSOFMVF1 MVC   0(0,RF),0(R1)                                                    
GSOFOCFS OC    0(0,RF),SPACES                                                   
         DROP  R7                                                               
         USING LS_D,R3                                                          
         USING LQ_D,R4                                                          
BREQMVQS MVC   LQ_SMFF(0),LS_SMFF                                               
BREQMVQI MVC   LQ_DATA(0),REQINFO                                               
         DROP  R3,R4                                                            
         USING TWASTATD,RF                                                      
FAJSUPTD UNPK  TWASTAV(0),DUB                                                   
         DROP  RF                                                               
         USING CMDTABD,R2                                                       
FAECCLCF CLC   CMDTTEXT(0),0(RF)                                                
         DROP  R2                                                               
         USING TWACMDED,R6                                                      
         USING LQ_D,R1                                                          
FASCMVQT MVC   LQ_CMND(0),TWACMDT                                               
         DROP  R1                                                               
         USING TWAMENUD,RF                                                      
FABRMVM4 MVC   TWAMENT(0),0(R4)                                                 
         DROP  R6,RF                                                            
         USING TWADATAD,RF                                                      
FABRMVTW MVC   TWAVAL(0),WORK+1                                                 
         DROP  RF                                                               
FAERMVFF MVC   1(0,RF),0(RF)                                                    
         USING TWADATAD,R4                                                      
         USING LC_D,RE                                                          
VSCRMVCT MVC   LC_DATA(0),TWAVAL                                                
         DROP  R4,RE                                                            
         USING SECSAVED,R8                                                      
         USING SANAMES,R3                                                       
NPERMVFN MVC   SECPFNAM(0),SANAME                                               
NPERMVMN MVC   SECPMNAM(0),SANAME                                               
NPERMVLN MVC   SECPLNAM(0),SANAME                                               
         DROP  R3                                                               
         USING SAMIXD,R1                                                        
R        USING SAMIXD,R2                                                        
NACOMVRS MVC   R.SAMIXD(0),SAMIXD                                               
         DROP  R1,R                                                             
SCONMVB1 MVC   SECCONB(0),0(R1)                                                 
SCONNCBE NC    SECCONB(0),0(RE)                                                 
NFOBTM0E TM    0(RE),0                                                          
NACBTM0E TM    0(RE),0                                                          
         USING LW_D,R2                                                          
         USING RLPRDD,R3                                                        
RADDMVRW MVC   RLPRDATA(0),LW_DATA1                                             
         DROP  R2,R3                                                            
NGRPTM10 TM    0(R1),0                                                          
         USING RLPSAVED,R8                                                      
         USING LQ_D,R1                                                          
NFILMVDQ MVC   RLPODESC(0),LQ_DATA                                              
         DROP  R1,R8                                                            
BSRCCLF2 CLC   0(0,RF),0(R2)                                                    
         USING SAMIXD,R1                                                        
R        USING SAMIXD,R2                                                        
         USING SECSAVED,R8                                                      
TACONCBA NC    SECCONB(0),SAMIXACT                                              
TACONCBR NC    SECCONB(0),R.SAMIXACT                                            
         DROP  R,R1,R8                                                          
                                                                                
DMGR     DC    A(0)                A(DATAMGR)                                   
CALLOV   DC    A(0)                A(CALLOV)                                    
GETFACT  DC    A(0)                A(GETFACT)                                   
LOCKSPC  DC    A(0)                A(LOCKSPC)                                   
SECRET   DC    A(0)                A(SECRET)                                    
GETPROF  DC    A(0)                A(GETPROF)                                   
SWITCH   DC    A(0)                A(SWITCH)                                    
DICTATE  DC    A(0)                A(DICTATE)                                   
GETTXT   DC    A(0)                A(GETTXT)                                    
CASHVAL  DC    A(0)                A(CASHVAL)                                   
DATCON   DC    A(0)                A(DATCON)                                    
ADDAY    DC    A(0)                A(ADDAY)                                     
PROTOFF  DC    A(0)                A(PROTOFF)                                   
PROTON   DC    A(0)                A(PROTON)                                    
WSSVR    DC    A(0)                A(WSSVR)                                     
FABSAM   DC    A(0)                A(FABSAM)                                    
GLOBBER  DC    A(0)                A(GLOBBER)                                   
HEXIN    DC    A(0)                A(HEXIN)                                     
HEXOUT   DC    A(0)                A(HEXOUT)                                    
GETDAY   DC    A(0)                A(GETDAY)                                    
SOFDAT   DC    A(0)                A(SOFDAT)                                    
CUREDIT  DC    A(0)                A(CUREDIT)                                   
OFFAL    DC    A(0)                A(OFFAL)                                     
OFFICER  DC    A(0)                A(OFFICER)                                   
WRKIO    DC    A(0)                A(WRKIO)                                     
                                                                                
TODAY    DS    0CL8                ** Today's date **                           
TODAYYR  DS    0CL4                MCYY                                         
TODAYMC  DC    CL2' '              MC                                           
TODAYYY  DC    CL2' '              YY                                           
TODAYMM  DS    CL2' '              MM                                           
TODAYDD  DS    CL2' '              DD                                           
                                                                                
DAYTODAY DC    X'00'               Today's day in pwos format                   
DAYNUM   DC    X'00'               Today's day number (1-7)                     
                                                                                
LITINIT  DC    AL1(0)              Non-zero=literals above initialized          
                                                                                
         LTORG ,                                                                
                                                                                
DTRUNITL DC    A(DTRUNIT)          Run table LOCKSPC id                         
FZERO    DS    0F                                                               
ARZERO   DS    0F                                                               
NULLS    DC    256X'00'                                                         
TUSSEC   DC    F'38400'            Number of timer units per second             
HOBON    DC    X'80000000'                                                      
HOBOFF   DC    X'7FFFFFFF'                                                      
LQ#LNCQ  DC    AL2(LQ_LNCQ)                                                     
EZEROS   DC    C'00000'                                                         
DDLKTOKN DC    C'DDLK'             WSSVR token value                            
BSAMTOKN DC    C'BSAM'             BSAM record token value                      
TTIATOKN DC    C'TTIA'             TIA token value                              
RETSERVE DC    H'01'               Worker file retain hours - server            
RETBATCH DS    0H                  Worker file retain hours - batch             
*&&US*&& DC    H'48'                                                            
*&&UK*&& DC    H'18'                                                            
BINLEN   DC    AL1(3,5,8,11)       Input lengths for binary fields              
P7EFFS   DC    P'2147483647'       Packed value of X'7FFFFFFF'                  
P8ZERO   DC    P'2147483648'       Packed value of X'80000000'                  
                                                                                
EOR      EQU   0                   End of record element                        
                                                                                
I#VERSN1 EQU   X'00FD'             Version 1 data                               
I#VERSN2 EQU   X'00FE'             Version 2 data                               
                                                                                
I#GRPMNT EQU   X'FEFF'             Folder maintenance                           
I#CALMNT EQU   X'FEFE'             Calendar maintenance                         
I#REQMNT EQU   X'FEFD'             Request maintenance                          
I#RLPDLD EQU   X'FEF9'             Desktop download                             
I#LSTDLD EQU   X'FEF8'             File list download                           
I#FILDLD EQU   X'FEF7'             File download                                
                                                                                
I#UPLPID EQU   X'FEF6'             Upload program id (system/program)           
I#UPLHDR EQU   X'FEF5'             Upload header (record/action)                
I#UPLDTA EQU   X'FEF4'             Upload data (field id/data)                  
                                                                                
I#MQVALS EQU   X'FEF3'             MQ values                                    
                                                                                
I#OPVALS EQU   X'FEF1'             Option values                                
                                                                                
I#CTRLDL EQU   X'FA00'             Request for control record download          
I#CTRL01 EQU   X'FA02'             Control record 1                             
I#CTRL02 EQU   X'FA03'             Control record 2                             
I#SECBRO EQU   X'FA04'             Security download                            
I#GENVAL EQU   X'FA05'             General values download                      
                                                                                
M#GRPMNT DC    AL2(I#GRPMNT)       Desktop folder maintenance                   
M#CALMNT DC    AL2(I#CALMNT)       Desktop folder calendar maintenance          
M#REQMNT DC    AL2(I#REQMNT)       Request maintenance                          
M#RLPDLD DC    AL2(I#RLPDLD)       Desktop download                             
M#LSTDLD DC    AL2(I#LSTDLD)       File list download                           
M#FILDLD DC    AL2(I#FILDLD)       File download                                
                                                                                
M#UPLPID DC    AL2(I#UPLPID)       Upload program id (system/program)           
M#UPLHDR DC    AL2(I#UPLHDR)       Upload header (record/action)                
M#UPLDTA DC    AL2(I#UPLDTA)       Upload data (field id/data)                  
                                                                                
M#MQVALS DC    AL2(I#MQVALS)       MQ values                                    
                                                                                
M#OPVALS DC    AL2(I#OPVALS)       DDLINK option values                         
                                                                                
M#CTRLDL DC    AL2(I#CTRLDL)       Control record 1 download                    
M#CTRL01 DC    AL2(I#CTRL01)       Control record 1                             
M#CTRL02 DC    AL2(I#CTRL02)       Control record 2                             
M#SECBRO DC    AL2(I#SECBRO)       Security records browser                     
M#GENVAL DC    AL2(I#GENVAL)       General values browser                       
                                                                                
TQSCANC  EQU   FF                  Special status for cancel work               
SENDCANC DC    AL1(TQSSEND,TQSCANC)                                             
PENDCANC DC    AL1(TQSPEND,TQSCANC)                                             
PROCCANC DC    AL1(TQSRUN,TQSCANC)                                              
PENDSEND DC    AL1(TQSPEND,TQSSEND)                                             
SENDPROC DC    AL1(TQSSEND,TQSRUN)                                              
PROCPEND DC    AL1(TQSRUN,TQSPEND)                                              
WAITFREE DC    AL1(TQSWAIT,TQSFREE)                                             
DONEFREE DC    AL1(TQSDONE,TQSFREE)                                             
                                                                                
OUTTYPES DS    0AL1                ** Translate table for type **               
LD#USERQ DC    AL1(LP_OTCHR)                                                    
BINARYQ  EQU   1                   Binary integer (length modified)             
LD#UBINQ DC    AL1(BINARYQ)                                                     
LD#SPAKQ DC    AL1(LP_OTLNG)                                                    
LD#CHARQ DC    AL1(LP_OTCHR)                                                    
LD#PDATQ DC    AL1(LP_OTDAT)                                                    
LD#CDATQ DC    AL1(LP_OTDAT)                                                    
LD#CPAKQ DC    AL1(LP_OTLNG)                                                    
LD#CBINQ DC    AL1(BINARYQ)                                                     
LD#HEXDQ DC    AL1(LP_OTHEX)                                                    
LD#HDROQ DC    AL1(LP_OTHDO)                                                    
LD#JDATQ DC    AL1(LP_OTDAT)                                                    
LD#BDATQ DC    AL1(LP_OTDAT)                                                    
LD#LBINQ DC    AL1(BINARYQ)                                                     
LD#MASKQ DC    AL1(0)                                                           
LD#URNGQ DC    AL1(0)                                                           
LD#EDATQ DC    AL1(LP_OTDAT)                                                    
LD#VRSNQ DC    AL1(0)                                                           
LD#VSTRQ DC    AL1(LP_OTCHR)                                                    
LD#BMONQ DC    AL1(LP_OTCHR)                                                    
LD#OCHRQ DC    AL1(LP_OTCHR)                                                    
LD#PMONQ DC    AL1(LP_OTCHR)                                                    
LD#UVLLQ DC    AL1(0)                                                           
LD#UVFLQ DC    AL1(0)                                                           
LD#EMAPQ DC    AL1(0)                                                           
LD#USIDQ DC    AL1(0)                                                           
LD#ACC1Q DC    AL1(0)                                                           
LD#RINFQ DC    AL1(0)                                                           
LD#EDYMQ DC    AL1(LP_OTDAT)                                                    
LD#JLNGQ DC    AL1(LP_OTDAT)                                                    
LD#FLDRQ DC    AL1(0)                                                           
LD#RQSTQ DC    AL1(0)                                                           
LD#RDSCQ DC    AL1(0)                                                           
LD#USYSQ DC    AL1(0)                                                           
LD#UPRGQ DC    AL1(0)                                                           
RUNXQ    EQU   2                   Run on exit command                          
LD#RUNXQ DC    AL1(RUNXQ)                                                       
QVALQ    EQU   3                   Run on exit request value                    
LD#QVALQ DC    AL1(QVALQ)                                                       
ERUNQ    EQU   4                   Run on exit end                              
LD#ERUNQ DC    AL1(ERUNQ)                                                       
LD#XSCQQ DC    AL1(0)                                                           
LD#MQOKQ DC    AL1(0)                                                           
LD#MQQVQ DC    AL1(0)                                                           
LD#MQSRQ DC    AL1(0)                                                           
LD#VCHRQ DC    AL1(LP_OTCHR)                                                    
LD#KNWKQ DC    AL1(0)                                                           
LD#KFWKQ DC    AL1(0)                                                           
LD#DRFTQ DC    AL1(0)                                                           
LD#TRCEQ DC    AL1(0)                                                           
LD#SDELQ DC    AL1(0)                                                           
LD#MSK80 DC    AL1(LP_OTCHR)                                                    
LD#MSK40 DC    AL1(LP_OTCHR)                                                    
LD#MSK20 DC    AL1(LP_OTCHR)                                                    
LD#MSK10 DC    AL1(LP_OTCHR)                                                    
LD#MSK08 DC    AL1(LP_OTCHR)                                                    
LD#MSK04 DC    AL1(LP_OTCHR)                                                    
LD#MSK02 DC    AL1(LP_OTCHR)                                                    
LD#MSK01 DC    AL1(LP_OTCHR)                                                    
LD#NDATQ DC    AL1(LP_OTDAT)                                                    
                                                                                
USERQ    EQU   1                   User validated                               
BNRYQ    EQU   2                   Binary value                                 
PACKQ    EQU   3                   Packed decimal value                         
CHARQ    EQU   4                   Character string                             
DATEQ    EQU   5                   Date                                         
HEXDQ    EQU   6                   Hexadecimal string                           
MASKQ    EQU   7                   Bit mask                                     
DDLKQ    EQU   255                 DDLINK variables                             
                                                                                
DATYMO$  EQU   8                   Maximum length of YM expression              
DATYMD$  EQU   11                  Maximum length of YMD expression             
                                                                                
VALTYPES DS    0XL2                ** Validation table for type **              
LD$USERQ DC    AL1(USERQ,0)                                                     
LD$UBINQ DC    AL1(BNRYQ,0)                                                     
LD$SPAKQ DC    AL1(PACKQ,0)                                                     
LD$CHARQ DC    AL1(CHARQ,0)                                                     
LD$PDATQ DC    AL1(DATEQ,DATYMD$)                                               
LD$CDATQ DC    AL1(DATEQ,DATYMD$)                                               
LD$CPAKQ DC    AL1(PACKQ,0)                                                     
LD$CBINQ DC    AL1(BNRYQ,0)                                                     
LD$HEXDQ DC    AL1(HEXDQ,0)                                                     
LD$HDROQ DC    AL1(CHARQ,1)                                                     
LD$JDATQ DC    AL1(DATEQ,DATYMD$)                                               
LD$BDATQ DC    AL1(DATEQ,DATYMD$)                                               
LD$LBINQ DC    AL1(BNRYQ,0)                                                     
LD$MASKQ DC    AL1(DDLKQ,1)                                                     
LD$URNGQ DC    AL1(USERQ,0)                                                     
LD$EDATQ DC    AL1(DATEQ,DATYMD$)                                               
LD$VRSNQ DC    AL1(DDLKQ,L'LP_VRSN*2)                                           
LD$VSTRQ DC    AL1(CHARQ,0)                                                     
LD$BMONQ DC    AL1(DATEQ,DATYMO$)                                               
LD$OCHRQ DC    AL1(CHARQ,0)                                                     
LD$PMONQ DC    AL1(DATEQ,DATYMO$)                                               
LD$UVLLQ DC    AL1(USERQ,0)                                                     
LD$UVFLQ DC    AL1(USERQ,0)                                                     
         DC    AL2(0)                                                           
LD$USIDQ DC    AL1(DDLKQ,L'CTIKID)                                              
LD$ACC1Q DC    AL1(DDLKQ,L'LP_ACCS)                                             
LD$RINFQ DC    AL1(0,0)                                                         
LD$EDYMQ DC    AL1(DATEQ,DATYMD$)                                               
LD$JLNGQ DC    AL1(DATEQ,DATYMD$)                                               
LD$FLDRQ DC    AL1(DDLKQ,L'FOLDER)                                              
LD$RQSTQ DC    AL1(DDLKQ,L'RLPIRID)                                             
LD$RDSCQ DC    AL1(DDLKQ,L'REQDESC)                                             
LD$USYSQ DC    AL1(DDLKQ,L'LI_TSYS)                                             
LD$UPRGQ DC    AL1(DDLKQ,L'LI_TPRG)                                             
         DC    AL2(0)                                                           
         DC    AL2(0)                                                           
         DC    AL2(0)                                                           
LD$XSCQQ DC    AL1(DDLKQ,L'LP_MQSVR)                                            
LD$MQHVQ DC    AL1(DDLKQ,L'LP_MQQUE)                                            
LD$MQKVQ DC    AL1(DDLKQ,L'LP_MQKEY)                                            
LD$MQRVQ DC    AL1(DDLKQ,L'LP_MQRKV)                                            
LD$VCHRQ DC    AL1(CHARQ,0)                                                     
LD$KNWKQ DC    AL1(DDLKQ,L'LP_OFLG1)                                            
LD$KFWKQ DC    AL1(DDLKQ,L'LP_OFLG1)                                            
LD$DRFTQ DC    AL1(DDLKQ,L'LP_OFLG1)                                            
LD$TRCEQ DC    AL1(DDLKQ,L'LP_OFTRC)                                            
LD$SDEL  DC    AL1(0,0)                                                         
LD$MSK80 DC    AL1(MASKQ,1)                                                     
LD$MSK40 DC    AL1(MASKQ,1)                                                     
LD$MSK20 DC    AL1(MASKQ,1)                                                     
LD$MSK10 DC    AL1(MASKQ,1)                                                     
LD$MSK08 DC    AL1(MASKQ,1)                                                     
LD$MSK04 DC    AL1(MASKQ,1)                                                     
LD$MSK02 DC    AL1(MASKQ,1)                                                     
LD$MSK01 DC    AL1(MASKQ,1)                                                     
LD$NDATQ DC    AL1(DATEQ,DATYMD$)                                               
                                                                                
BINTYPES DS    0AL1                ** Types settings for binary **              
         DC    AL1(LP_OTTNY)       Tiny  (FL1)                                  
         DC    AL1(LP_OTSML)       Small (FL2)                                  
         DC    AL1(LP_OTFUL)       Full  (FL4)                                  
         DC    AL1(LP_OTFUL)       Long  (PLn)                                  
                                                                                
DDSUID   DS    0AL2                DDS user-id (for command files)              
*&&UK*&& DC    AL2(01)             DDS Europe                                   
*&&US*&& DC    AL2(90)             DDS North America                            
                                                                                
ASTERS   DC    C'**'                                                            
LSDEYE   DC    C'**LS_D**'         Server LS_D eyecatcher                       
SBLEYE   DC    C'*SSBLKS*'         Server SS_BLKS area eyecatcher               
SRGEYE   DC    C'*SSR2RB*'         Server SS_R2RB area eyecatcher               
SWKEYE   DC    C'*SSWORK*'         Server SS_WORK area eyecatcher               
OFLEYE   DC    C'*OFFALD*'         OFFAL control block  eyecatcher              
LIMEYE   DC    C'*LIMACC*'         Limit access eyecatcher in LS_D              
LINKPROG DC    C'LINK'             Program id                                   
TRASL    DC    C'SL'               Single translate (for DICTATE)               
FALKID   DC    C'<FALINK>'         FALINK TWA eyecatcher                        
FILEWK   DC    C'K='               Send output to worker file                   
FILEMQ   DC    C'MQ=Y'             Send output to MQ                            
ASYNCHWK DC    C'25 25 1 1 K=*'                                                 
LEQUAL   DC    C'L='                                                            
RUNCMD   DC    C'RUN'              Wkfile key for command files                 
ERRD     DC    C'ERRD'             DDLINK error                                 
ERRC     DC    C'ERRC'             Server error                                 
RLPPRG   DC    C'RLP'              RLP program name for GETPROF call            
T00A     DC    C'R',X'000A'                                                     
                                                                                
CTFILE   DC    CL8'CTFILE'                                                      
GENDIR   DC    CL8'GENDIR'                                                      
GENFIL   DC    CL8'GENFIL'                                                      
TEMPSTR  DC    CL8'TEMPSTR'                                                     
FACWRK   DC    CL8'FACWRK'                                                      
                                                                                
DMRDHI   DC    CL8'DMRDHI'                                                      
DMREAD   DC    CL8'DMREAD'                                                      
DMRSEQ   DC    CL8'DMRSEQ'                                                      
DMWRT    DC    CL8'DMWRT'                                                       
GETREC   DC    CL8'GETREC'                                                      
                                                                                
WSK      DC    CL8'KEEP'           Wkfile action keep                           
WSP      DC    CL8'PURGE'          Wkfile action purge                          
WRR      DC    CL8'RANDOM'         Wkfile action random read                    
WAC      DC    CL8'ACTIVE'         Wkfile action active                         
WSS      DC    CL8'SENDING'        Wkfile action sending                        
                                                                                
REC#     DC    C'REC#'             Wkfile random read action                    
                                                                                
OPEN     DC    CL8'OPEN'           FACWRK open command                          
                                                                                
GLCLR    DC    C'CLEAR'            Globber clear                                
GLPUT    DC    C'PUTD'             Globber put                                  
GLGET    DC    C'GETD'             Globber get                                  
                                                                                
SPACES   DC    CL80' '                                                          
EFFS     DC    32AL1(FF)                                                        
ZEROES   DC    XL32'00'                                                         
BITLIST  DC    X'8040201008040201'                                              
HEXLIST  DC    C'0123456789ABCDEF' Hex character conversion list                
PZERO    DC    P'0'                                                             
PTWO     DC    P'2'                                                             
                                                                                
DATA     DC    C'<<<<<<<< Enter commands for StepName >>>>>>>>'                 
CODE     DC    C'Code'                                                          
NAME     DC    C'Name'                                                          
PHSN     DC    C'P#'                                                            
TYPE     DC    C'Type'                                                          
NOWRK    DC    C',NoWrk'                                                        
UPDATE   DC    C',Updative'                                                     
RUNNER   DC    C',RUNNER'                                                       
VALUE    DC    C'Value'                                                         
PFPRFX   DC    C'PF'                                                            
SELECT   DC    C'1=Select'                                                      
CPYSTR   DC    C'3=Copy'                                                        
PSTSTR   DC    C'13=Paste'                                                      
ADDULR   DC    C'6=Add upload'                                                  
RUNNOW   DC    C'2=Run now'                                                     
RUNNOWI  DC    C'2=Run now(Input)'                                              
RUNNOWW  DC    C'2=Run now(Worker)'                                             
SNDULF   DC    C'2=Send/E 4=Send/R'                                             
RUNDSC   DC    C'5=Run RUNNER'                                                  
SCRLUP   DC    C'7=Up'                                                          
SCRLDN   DC    C'8=Down'                                                        
SVRDIS   DC    C'9=Server'                                                      
QUEDIS   DC    C'10=Queue'                                                      
MENDIS   DC    C'11=Menu'                                                       
SENCMD   DC    C'12=Send'                                                       
SVRNM    DC    C'Server description'                                            
SVRJB    DC    C'StepName'                                                      
SVRAG    DC    C'Agy/s'                                                         
SVRAI    DC    C'Asid'                                                          
SVRST    DC    C'Status'                                                        
                                                                                
ACTIVE   DC    C'Active'                                                        
ABEND    DC    C'Abended'                                                       
AVAIL    DC    C'Waiting for work'                                              
                                                                                
WAIT     DC    C'Waiting to run'                                                
RUNG     DC    C'Running'                                                       
PEND     DC    C'Pending send'                                                  
SNDG     DC    C'Sending'                                                       
DONE     DC    C'Completed'                                                     
                                                                                
QUEFI    DC    C'FTAsid'                                                        
QUEET    DC    C'Arr.Time'                                                      
QUETY    DC    C'Type'                                                          
QUEWK    DC    C'Worker key'                                                    
QUEST    DC    C'Status'                                                        
QUEER    DC    C'Err'                                                           
                                                                                
MAPOUT   DS    0X                  ** Initial response map **                   
MAPOUTH  DC    AL1(LF_HDRL),AL2(0,MAPOUTX-MAPOUTH)                              
         DC    AL1(LF_OLNQ),AL2(1),C'Wrkey',AL1(MDTUQQ,PWKEYDL,LF_FLDX)         
MAPOUTX  DC    AL1(LF_HDRX)                                                     
MAPOUTL  EQU   *-MAPOUT                                                         
                                                                                
INVLENS  DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 00-0F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 10-1F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 20-2F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 30-3F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFF3FFF' 40-4F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 50-5F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF' 60-6F                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 70-7F                        
         DC    X'FF25262728292A2B2C2DFFFFFFFFFFFF' 80-8F                        
         DC    X'FF2E2F30313233343536FFFFFFFFFFFF' 90-9F                        
         DC    X'FFFF3738393A3B3C3D3EFFFFFFFFFFFF' A0-AF                        
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' B0-BF                        
         DC    X'FF010203040506070809FFFFFFFFFFFF' C0-CF                        
         DC    X'FF0A0B0C0D0E0F101112FFFFFFFFFFFF' D0-DF                        
         DC    X'FFFF131415161718191AFFFFFFFFFFFF' E0-EF                        
         DC    X'1B1C1D1E1F2021222324FFFFFFFFFFFF' F0-FF                        
                                                                                
FATRTAB  DS    0C                  ** Map code/length translation **            
         DC    C'%ABCDEFGHIJKLMNO'                                              
         DC    C'PQRSTUVWXYZ01234'                                              
         DC    C'56789abcdefghijk'                                              
         DC    C'lmnopqrstuvwxyz'                                               
FATRTABL EQU   *-FATRTAB                                                        
                                                                                
*DIINP   DCB   DDNAME=EDIINP,DSORG=PS,RECFM=VB,EODAD=MQGET04,MACRF=(R),         
*              LRECL=8192,BLKSIZE=32760                                         
                                                                                
EDIINP   DCB   DDNAME=EDIINP,DSORG=PS,MACRF=(GM),RECFM=VB,             +        
               EODAD=MQGET04                                                    
                                                                                
EDIOUT   DCB   DDNAME=EDIOUT,DSORG=PS,MACRF=(PM),RECFM=VB,LRECL=8192,  +        
               BLKSIZE=32760                                                    
                                                                                
LKSERVER EQU   FF                  DDLINK server phase number                   
                                                                                
NDXHDR   LKMMI H,GENSYS#                                                        
                                                                                
DDLNDX   DS    0H                  ** DDLINK server record maps **              
                                                                                
*                                  ** Version 1 record **                       
         LKMMI U,I#VERSN1,LKSERVER,(*,VR1LIT)                                   
         DC    AL1(0)                                                           
*                                  ** Version 2 record **                       
         LKMMI U,I#VERSN2,LKSERVER,(*,VR2LIT)                                   
         DC    AL1(0)                                                           
*                                  ** Control record 1 d/l **                   
         LKMMI D,I#CTRLDL,LKSERVER,(*,CRDLIT)                                   
         DC    AL1(0)                                                           
*                                  ** Control record 1 u/l **                   
         LKMMI U,I#CTRL01,LKSERVER,(*,CR1LIT)                                   
         DC    AL1(0)                                                           
*                                  ** Control record 2 u/l **                   
         LKMMI U,I#CTRL02,LKSERVER,(*,CR2LIT)                                   
         DC    AL1(0)                                                           
*                                  ** Security browser **                       
         LKMMI D,I#SECBRO,LKSERVER,(*,SECLIT)                                   
         DC    AL1(0)                                                           
*                                  ** General values **                         
         LKMMI D,I#GENVAL,LKSERVER,(*,GVLLIT)                                   
         DC    AL1(0)                                                           
*                                  ** MQ routing values **                      
         LKMMI U,I#MQVALS,LKSERVER,(*,MQVLIT)                                   
         DC    AL1(0)                                                           
*                                  ** Option values **                          
         LKMMI U,I#OPVALS,LKSERVER,(*,OPVLIT)                                   
         DC    AL1(0)                                                           
*                                  ** Script upload **                          
         LKMMI US,I#UPLPID,LKSERVER,(*,PIDLIT),UPDATIVE=Y                       
         DC    AL1(0)                                                           
         LKMMI US,I#UPLHDR,LKSERVER,(*,HDRLIT),UPDATIVE=Y                       
         DC    AL1(0)                                                           
         LKMMI US,I#UPLDTA,LKSERVER,(*,DTALIT),UPDATIVE=Y                       
         DC    AL1(0)                                                           
*                                  ** RLP interface **                          
         LKMMI D,I#FILDLD,LKSERVER,(*,DLDLIT)                                   
         DC    AL1(0)                                                           
         LKMMI D,I#LSTDLD,LKSERVER,(*,LSTLIT)                                   
         DC    AL1(0)                                                           
         LKMMI D,I#RLPDLD,LKSERVER,(*,RLPLIT)                                   
         DC    AL1(0)                                                           
         LKMMI D,I#GRPMNT,LKSERVER,(*,GRPLIT),UPDATIVE=Y                        
         DC    AL1(0)                                                           
         LKMMI D,I#CALMNT,LKSERVER,(*,CALLIT),UPDATIVE=Y                        
         DC    AL1(0)                                                           
         LKMMI D,I#REQMNT,LKSERVER,(*,REQLIT),UPDATIVE=Y,              +        
               ALWAYSRESPOND=Y                                                  
         DC    AL1(0)                                                           
         DC    AL2(0)              end of table                                 
DDLNDXL  EQU   *-DDLNDX                                                         
                                                                                
VR1LIT   DC    C'Version (B=FD)'                                                
VR2LIT   DC    C'Version (B=FE)'                                                
MQVLIT   DC    C'MQ routing values'                                             
OPVLIT   DC    C'Option values'                                                 
PIDLIT   DC    C'Upload System/Program ID'                                      
HDRLIT   DC    C'Upload Record/Action'                                          
DTALIT   DC    C'Upload Data'                                                   
DLDLIT   DC    C'Download Worker/BSAM File'                                     
LSTLIT   DC    C'Download Worker File List'                                     
RLPLIT   DC    C'Desktop Download'                                              
GRPLIT   DC    C'Desktop Folder Maintenance'                                    
CALLIT   DC    C'Desktop Folder Calendar Maintenance'                           
REQLIT   DC    C'Desktop Request Maintenance'                                   
CRDLIT   DC    C'Control record 1 download'                                     
CR1LIT   DC    C'Control record 1'                                              
CR2LIT   DC    C'Control record 2'                                              
SECLIT   DC    C'Security records browser'                                      
GVLLIT   DC    C'General values download'                                       
                                                                                
GRPKEYT  LKKEY H,GRPKEY,RLPSAVED   ** RLP folder driver **                      
         LKKEY LIT,GRPKSYS,GRPKSYSQ                                             
         LKKEY LIT,GRPKSTYP,GRPKSTYQ                                            
         LKKEY SIN,GRPKSYST,RLPBLOCK+(RFPFSYS-RFPIOD)                           
         LKKEY SIN,GRPKAGY,RLPBLOCK+(RFPFAGY-RFPIOD)                            
         LKKEY SIN,GRPKUSER,RLPBLOCK+(RFPFUID-RFPIOD)                           
         LKKEY LIT,GRPKDTF,GRPKDTFQ                                             
         LKKEY SIN,GRPKDTFP,RLPPASS                                             
         LKKEY ALL,GRPKDTFI                                                     
         LKKEY LIT,GRPKDTFI+L'GRPKDTFI,0,GRPKELEM-(GRPKDTFI+L'GRPKDTFI)         
         LKKEY LIT,GRPKELEM,FF                                                  
         LKKEY E                                                                
                                                                                
OFFKEYT  LKKEY H,SAOFKEY,SECSAVED  ** Security office driver **                 
         LKKEY LIT,SAOFTYP,SAOFTYPQ                                             
         LKKEY LIT,SAOFSUB,SAOFSUBQ                                             
         LKKEY SIN,SAOFAGY,SECAGYA                                              
         LKKEY WMP,SAOFOID,SECAOFF                                              
         LKKEY E                                                                
                                                                                
DPTKEYT  LKKEY H,SADPKEY,SECSAVED  ** Security department driver **             
         LKKEY LIT,SADPTYP,SADPTYPQ                                             
         LKKEY LIT,SADPSUB,SADPSUBQ                                             
         LKKEY SIN,SADPAGY,SECAGYA                                              
         LKKEY SIN,SADPOID,SECOKEY+(SAOFOID-SAOFKEY)                            
         LKKEY WMP,SADPDID,SECADPT                                              
         LKKEY E                                                                
                                                                                
ACCKEYT  LKKEY H,SAAGKEY,SECSAVED  ** Security access driver **                 
         LKKEY LIT,SAAGTYP,SAAGTYPQ                                             
         LKKEY LIT,SAAGSUB,SAAGSUBQ                                             
         LKKEY LIT,SAAGFILL,0                                                   
         LKKEY SIN,SAAGAGY,SECAGYA                                              
         LKKEY ALL,SAAGAGR                                                      
         LKKEY E                                                                
                                                                                
PERKEYT  LKKEY H,SAPEKEY,SECSAVED  ** Security person driver **                 
         LKKEY LIT,SAPETYP,SAPETYPQ                                             
         LKKEY LIT,SAPESUB,SAPESUBQ                                             
         LKKEY LIT,SAPEFILL,0                                                   
         LKKEY SIN,SAPEAGY,SECAGYA                                              
         LKKEY WMP,SAPEPID,SECAPID                                              
         LKKEY ALL,SAPEDEF                                                      
         LKKEY E                                                                
                                                                                
OCOKEYT  LKKEY H,SAOCKEY,SECSAVED  ** Security option control driver **         
         LKKEY LIT,SAOCTYP,SAOCTYPQ                                             
         LKKEY LIT,SAOCSUB,SAOCSUBQ                                             
         LKKEY LIT,SAOCFILL,0                                                   
         LKKEY SIN,SAOCAGY,SECAGYA                                              
         LKKEY SIN,SAOCOVS,SECSYSN                                              
         LKKEY SIN,SAOCPGM,SECPRGN                                              
         LKKEY ALL,SAOCUID                                                      
         LKKEY ALL,SAOCAGN                                                      
         LKKEY E                                                                
                                                                                
FCOKEYT  LKKEY H,SAFCKEY,SECSAVED  ** Security field control driver **          
         LKKEY LIT,SAFCTYP,SAFCTYPQ                                             
         LKKEY LIT,SAFCSUB,SAFCSUBQ                                             
         LKKEY LIT,SAFCFILL,0                                                   
         LKKEY SIN,SAFCAGY,SECAGYA                                              
         LKKEY SIN,SAFCOVS,SECSYSN                                              
         LKKEY SIN,SAFCPGM,SECPRGN                                              
         LKKEY ALL,SAFCUID                                                      
         LKKEY ALL,SAFCAGN                                                      
         LKKEY E                                                                
                                                                                
RECKEYT  LKKEY H,SARCKEY,SECSAVED  ** Security record control driver **         
         LKKEY LIT,SARCTYP,SARCTYPQ                                             
         LKKEY LIT,SARCSUB,SARCSUBQ                                             
         LKKEY LIT,SARCFILL,0                                                   
         LKKEY SIN,SARCOVS,SECSYSN                                              
         LKKEY SIN,SARCPGM,SECPRGN                                              
         LKKEY ALL,SARCRCD                                                      
         LKKEY E                                                                
                                                                                
ACOKEYT  LKKEY H,SAASKEY,SECSAVED  ** Security field control driver **          
         LKKEY LIT,SAASTYP,SAASTYPQ                                             
         LKKEY LIT,SAASSUB,SAASSUBQ                                             
         LKKEY LIT,SAASFILL,0                                                   
         LKKEY SIN,SAASAGY,SECAGYA                                              
         LKKEY SIN,SAASOVS,SECSYSN                                              
         LKKEY SIN,SAASPGM,SECPRGN                                              
         LKKEY ALL,SAASUID                                                      
         LKKEY ALL,SAASAGN                                                      
         LKKEY E                                                                
                                                                                
OFFFLTT  LKKEY H,SAPEROFF,SECSAVED ** Office filter **                          
         LKKEY WMP,SAPEROFF,SECAOFF                                             
         LKKEY E                                                                
                                                                                
DPTFLTT  LKKEY H,SAPERDID,SECSAVED ** Department filter **                      
         LKKEY WMP,SAPERDID,SECADPT                                             
         LKKEY E                                                                
                                                                                
SYSTAB   DS    0XL2                ** System translation table **               
         DC    AL1(RFPFSAPL,RFPFSAPN)                                           
*&&US*&& DC    AL1(RFPFSSPL,RFPFSSPN)                                           
*&&US*&& DC    AL1(RFPFSNEL,RFPFSNEN)                                           
*&&US*&& DC    AL1(RFPFSPPL,RFPFSPPN)                                           
*&&US*&& DC    AL1(RFPFSTPL,RFPFSTPN)                                           
*&&US*&& DC    AL1(RFPFSRPL,RFPFSRPN)                                           
*&&UK*&& DC    AL1(RFPFSMLL,RFPFSMLN)                                           
*&&UK*&& DC    AL1(RFPFSMPL,RFPFSMPN)                                           
*&&UK*&& DC    AL1(RFPFSFPL,RFPFSFPN)                                           
SYSTABN  EQU   (*-SYSTAB)/L'SYSTAB                                              
         DC    C'?',AL1(0)                                                      
*&&US                                                                           
OFFTAB1  DS    0XL(OFFTABL)        ** OFFICER control table **                  
         DC    AL1(LQ_ATOFF,OFCOFC2-OFFICED,L'OFCOFC2-1)                        
         DC    AL1(LQ_ATECL,OFCCLT-OFFICED,L'OFCCLT-1)                          
         DC    AL1(LQ_ATCLA,OFCACCSC-OFFICED,3-1)                               
         DC    AL1(LQ_ATMKA,OFCACCSM-OFFICED,3-1)                               
         DC    AL1(LQ_ATAGM,OFCSAGMD-OFFICED,L'OFCSAGMD-1)                      
         DC    AL1(LQ_ATPCL,OFCCLT2-OFFICED,L'OFCCLT2-1)                        
         DC    AL1(LQ_ATIMO,OFCOFC-OFFICED,L'OFCOFC-1)                          
OFFTAB1X DC    AL1(LQ_ATEOL)                                                    
*&&                                                                             
OFFTAB2  DS    0XL(OFFTABL)        ** OFFAL control table **                    
         DC    AL1(LQ_ATOFF,OFFAOFFC-OFFALD,L'OFFAOFFC)                         
OFFTAB2X DC    AL1(LQ_ATEOL)                                                    
                                                                                
OFFTABD  DSECT ,                   ** Office control table **                   
OFFTDTYP DS    AL1                 Data type                                    
OFFTDDSP DS    AL1                 Displacement into control block              
OFFTDLEN DS    AL1                 Length of output data-1                      
OFFTABL  EQU   *-OFFTABD                                                        
DDLINK   CSECT ,                                                                
         DROP  RA                                                               
                                                                                
***********************************************************************         
*<<<<<<<<<<<<<<<<<<<<<<<<<<< End of globals >>>>>>>>>>>>>>>>>>>>>>>>>>*         
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
* Warning note:-                                                      *         
*                                                                     *         
* For DDLINK variables (those whose output field is within LP_D or    *         
* WORKD) which are to be copied to multiple control blocks the LP_D   *         
* (or WORKD) variable must be first - VSTR assumes that these fields  *         
* have already been populated by VINP and are merely copied to any    *         
* other location                                                      *         
***********************************************************************         
                                                                                
CTRLTAB  DS    0H                                                               
                                                                                
VERSION1 DC    AL2(I#VERSN1)       ** PC Version 1 record **                    
         DC    AL2(VERSION2-*)                                                  
         DC    AL1(0)                                                           
                                                                                
         DC    AL2(001),AL1(LD_VRSNQ,LD_HEXDQ)                                  
         DC    AL1(B#LP_D),AL2(LP_VRSN-LP_D),AL1(L'LP_VRSN)                     
         DC    AL2(VRSNLIT-*),AL1(L'VRSNLIT)                                    
                                                                                
         DC    AL2(001),AL1(LD_VRSNQ,LD_HEXDQ)                                  
         DC    AL1(B#LS_D),AL2(LS_VRSN-LS_D),AL1(L'LS_VRSN)                     
         DC    AL2(VRSNLIT-*),AL1(L'VRSNLIT)                                    
                                                                                
         DC    AL2(0)                                                           
                                                                                
VERSION2 DC    AL2(I#VERSN2)       ** PC Version 2 record **                    
         DC    AL2(CTRL01-*)                                                    
         DC    AL1(0)                                                           
                                                                                
         DC    AL2(001),AL1(LD_VRSNQ,LD_HEXDQ)                                  
         DC    AL1(B#LP_D),AL2(LP_VRSN-LP_D),AL1(L'LP_VRSN)                     
         DC    AL2(VRSNLIT-*),AL1(L'VRSNLIT)                                    
                                                                                
         DC    AL2(001),AL1(LD_VRSNQ,LD_HEXDQ)                                  
         DC    AL1(B#LS_D),AL2(LS_VRSN-LS_D),AL1(L'LS_VRSN)                     
         DC    AL2(VRSNLIT-*),AL1(L'VRSNLIT)                                    
                                                                                
         DC    AL2(0)                                                           
                                                                                
CTRL01   DC    AL2(I#CTRL01)       ** Run Control record 1 **                   
         DC    AL2(CTRL02-*)                                                    
         DC    AL1(LB_HIBEF)                                                    
                                                                                
         DC    AL2(C1_RQKYQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#LP_XD)                
         DC    AL2(LP_RQKEY-LP_XD),AL1(L'LP_RQKEY)                              
         DC    AL2(QKEYLIT-*),AL1(L'QKEYLIT)                                    
                                                                                
         DC    AL2(C1_SVTYQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#RUNFCD)               
         DC    AL2(RSVRTY-RUNFACSD),AL1(L'RSVRTY)                               
         DC    AL2(RSVRLIT-*),AL1(L'RSVRLIT)                                    
                                                                                
         DC    AL2(C1_AGYAQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#LP_D)                 
         DC    AL2(LP_AGY-LP_D),AL1(L'LP_AGY)                                   
         DC    AL2(ACODLIT-*),AL1(L'ACODLIT)                                    
                                                                                
         DC    AL2(C1_FACPQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#MASTD)                
         DC    AL2(MCFACPAK-MASTD),AL1(L'MCFACPAK)                              
         DC    AL2(FPIDLIT-*),AL1(L'FPIDLIT)                                    
                                                                                
         DC    AL2(C1_SENOQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_SENO-LP_D),AL1(L'LP_SENO)                                 
         DC    AL2(SENOLIT-*),AL1(L'SENOLIT)                                    
                                                                                
         DC    AL2(C1_SENOQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#MASTD)                
         DC    AL2(MCIDSENO-MASTD),AL1(L'MCIDSENO)                              
         DC    AL2(SENOLIT-*),AL1(L'SENOLIT)                                    
                                                                                
         DC    AL2(C1_USIDQ),AL1(LD_LBINQ,LD_LBINQ),AL1(B#LP_D)                 
         DC    AL2(LP_USRID-LP_D),AL1(L'LP_USRID)                               
         DC    AL2(USIDLIT-*),AL1(L'USIDLIT)                                    
                                                                                
         DC    AL2(C1_AUTHQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_AUTH-LP_D),AL1(L'LP_AUTH)                                 
         DC    AL2(AUTHLIT-*),AL1(L'AUTHLIT)                                    
                                                                                
         DC    AL2(C1_LKY1Q),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_XD)                
         DC    AL2(LP_LKEY1-LP_XD),AL1(L'LP_LKEY1)                              
         DC    AL2(LKY1LIT-*),AL1(L'LKY1LIT)                                    
                                                                                
         DC    AL2(C1_LKY2Q),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_XD)                
         DC    AL2(LP_LKEY2-LP_XD),AL1(L'LP_LKEY2)                              
         DC    AL2(LKY2LIT-*),AL1(L'LKY2LIT)                                    
                                                                                
         DC    AL2(C1_LKY3Q),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_XD)                
         DC    AL2(LP_LKEY3-LP_XD),AL1(L'LP_LKEY3)                              
         DC    AL2(LKY3LIT-*),AL1(L'LKY3LIT)                                    
                                                                                
         DC    AL2(C1_OFL1Q),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_OFLG1-LP_D),AL1(L'LP_OFLG1)                               
         DC    AL2(OFLGLIT-*),AL1(L'OFLGLIT)                                    
                                                                                
         DC    AL2(C1_TRFLQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_OFTRC-LP_D),AL1(L'LP_OFTRC)                               
         DC    AL2(OTRCLIT-*),AL1(L'OTRCLIT)                                    
                                                                                
         DC    AL2(C1_ATIMQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#RUNFCD)               
         DC    AL2(RARRTIM-RUNFACSD),AL1(L'RARRTIM)                             
         DC    AL2(RTIMLIT-*),AL1(L'RTIMLIT)                                    
                                                                                
         DC    AL2(C1_LANGQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_LANG-LP_D),AL1(L'LP_LANG)                                 
         DC    AL2(LANGLIT-*),AL1(L'LANGLIT)                                    
                                                                                
         DC    AL2(C1_CTRYQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_CTRY-LP_D),AL1(L'LP_CTRY)                                 
         DC    AL2(CTRYLIT-*),AL1(L'CTRYLIT)                                    
                                                                                
         DC    AL2(C1_OSYSQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_OSYS-LP_D),AL1(L'LP_OSYS)                                 
         DC    AL2(OSYSLIT-*),AL1(L'OSYSLIT)                                    
                                                                                
         DC    AL2(C1_LIMAQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_ACCS-LP_D),AL1(L'LP_ACCS)                                 
         DC    AL2(ACCSLIT-*),AL1(L'ACCSLIT)                                    
                                                                                
         DC    AL2(C1_SFMOQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_SOFSF-LP_D),AL1(L'LP_SOFSF)                               
         DC    AL2(SOFSLIT-*),AL1(L'SOFSLIT)                                    
                                                                                
         DC    AL2(C1_SECNQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_SECNO-LP_D),AL1(L'LP_SECNO)                               
         DC    AL2(PASSLIT-*),AL1(L'PASSLIT)                                    
                                                                                
         DC    AL2(C1_VERNQ),AL1(LD_LBINQ,LD_LBINQ),AL1(B#LP_D)                 
         DC    AL2(LP_FAVER-LP_D),AL1(L'LP_FAVER)                               
         DC    AL2(FAVRLIT-*),AL1(L'FAVRLIT)                                    
                                                                                
         DC    AL2(C1_AGYBQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                 
         DC    AL2(LP_AGYB-LP_D),AL1(L'LP_AGYB)                                 
         DC    AL2(AGYBLIT-*),AL1(L'AGYBLIT)                                    
                                                                                
         DC    AL2(C1_CUAGQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#LP_D)                 
         DC    AL2(LP_CUAGY-LP_D),AL1(L'LP_CUAGY)                               
         DC    AL2(SECALIT-*),AL1(L'SECALIT)                                    
                                                                                
         DC    AL2(C1_LUIDQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#LP_XD)                
         DC    AL2(LP_LUID-LP_XD),AL1(L'LP_LUID)                                
         DC    AL2(LUIDLIT-*),AL1(L'LUIDLIT)                                    
                                                                                
         DC    AL2(C1_XPINQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_XD)                
         DC    AL2(LP_XPINF-LP_XD),AL1(L'LP_XPINF)                              
         DC    AL2(XPINLIT-*),AL1(L'XPINLIT)                                    
                                                                                
         DC    AL2(C1_OSINQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_XD)                
         DC    AL2(LP_OSIN-LP_XD),AL1(L'LP_OSIN)                                
         DC    AL2(OSINLIT-*),AL1(L'OSINLIT)                                    
                                                                                
         DC    AL2(C1_SAGAQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#SECD)                 
         DC    AL2(SECOAGY-SECD),AL1(L'SECOAGY)                                 
         DC    AL2(SOAGLIT-*),AL1(L'SOAGLIT)                                    
                                                                                
         DC    AL2(C1_SSAAQ),AL1(LD_VSTRQ,LD_CHARQ),AL1(B#SECD)                 
         DC    AL2(SECOAGYS-SECD),AL1(L'SECOAGYS)                               
         DC    AL2(SOSALIT-*),AL1(L'SOSALIT)                                    
                                                                                
         DC    AL2(C1_SUSRQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOUSER-SECD),AL1(L'SECOUSER)                               
         DC    AL2(SOUSLIT-*),AL1(L'SOUSLIT)                                    
                                                                                
         DC    AL2(C1_SPASQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOPASS-SECD),AL1(L'SECOPASS)                               
         DC    AL2(SOPWLIT-*),AL1(L'SOPWLIT)                                    
                                                                                
         DC    AL2(C1_SAGNQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOSAGN-SECD),AL1(L'SECOSAGN)                               
         DC    AL2(SOSGLIT-*),AL1(L'SOSGLIT)                                    
                                                                                
         DC    AL2(C1_SSYSQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOSYS-SECD),AL1(L'SECOSYS)                                 
         DC    AL2(SOOSLIT-*),AL1(L'SOOSLIT)                                    
                                                                                
         DC    AL2(C1_SPRGQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOPRG-SECD),AL1(L'SECOPRG)                                 
         DC    AL2(SOOPLIT-*),AL1(L'SOOPLIT)                                    
                                                                                
         DC    AL2(C1_SFLGQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOFLAG-SECD),AL1(L'SECOFLAG)                               
         DC    AL2(SOOFLIT-*),AL1(L'SOOFLIT)                                    
                                                                                
         DC    AL2(C1_SSTAQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOSTAT-SECD),AL1(L'SECOSTAT)                               
         DC    AL2(SOSTLIT-*),AL1(L'SOSTLIT)                                    
                                                                                
         DC    AL2(C1_SAGPQ),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#SECD)                 
         DC    AL2(SECOAGPE-SECD),AL1(L'SECOAGPE)                               
         DC    AL2(SOAPLIT-*),AL1(L'SOAPLIT)                                    
                                                                                
         DC    AL2(C1_QSEGQ),AL1(LD_UBINQ,LD_UBINQ),AL1(B#LP_XD)                
         DC    AL2(LP_QSEGS-LP_XD),AL1(L'LP_QSEGS)                              
         DC    AL2(QSEGLIT-*),AL1(L'QSEGLIT)                                    
                                                                                
         DC    AL2(C1_QXCPQ),AL1(LD_UBINQ,LD_UBINQ),AL1(B#LP_XD)                
         DC    AL2(LP_QEXCP-LP_XD),AL1(L'LP_QEXCP)                              
         DC    AL2(QIOSLIT-*),AL1(L'QIOSLIT)                                    
                                                                                
         DC    AL2(C1_QRECQ),AL1(LD_UBINQ,LD_UBINQ),AL1(B#LP_XD)                
         DC    AL2(LP_QRECS-LP_XD),AL1(L'LP_QRECS)                              
         DC    AL2(QRECLIT-*),AL1(L'QRECLIT)                                    
                                                                                
         DC    AL2(C1_QSIZQ),AL1(LD_UBINQ,LD_UBINQ),AL1(B#LP_XD)                
         DC    AL2(LP_QSIZE-LP_XD),AL1(L'LP_QSIZE)                              
         DC    AL2(QSIZLIT-*),AL1(L'QSIZLIT)                                    
                                                                                
         DC    AL2(C1_QCPUQ),AL1(LD_UBINQ,LD_UBINQ),AL1(B#LP_XD)                
         DC    AL2(LP_QCPUV-LP_XD),AL1(L'LP_QCPUV)                              
         DC    AL2(QCPULIT-*),AL1(L'QCPULIT)                                    
                                                                                
         DC    AL2(C1_DSNIQ),AL1(LD_CHARQ,LD_CHARQ),AL1(B#LP_XD)                
         DC    AL2(LP_DSNTI-LP_XD),AL1(L'LP_DSNTI)                              
         DC    AL2(DSTILIT-*),AL1(L'DSTILIT)                                    
                                                                                
         DC    AL2(C1_DSNOQ),AL1(LD_CHARQ,LD_CHARQ),AL1(B#LP_XD)                
         DC    AL2(LP_DSNTO-LP_XD),AL1(L'LP_DSNTO)                              
         DC    AL2(DSTOLIT-*),AL1(L'DSTOLIT)                                    
                                                                                
CTRL01X  DC    AL2(0)                                                           
                                                                                
CTRL02   DC    AL2(I#CTRL02)       ** Run Control record 2 **                   
         DC    AL2(CTRLX-*)                                                     
         DC    AL1(LB_HIBEF)                                                    
                                                                                
         DC    AL2(001),AL1(LD_HEXDQ,LD_HEXDQ),AL1(B#LP_D)                      
         DC    AL2(LP_MQMST-LP_D),AL1(L'LP_MQMST)                               
         DC    AL2(RSVRLIT-*),AL1(L'RSVRLIT)                                    
                                                                                
CTRL02X  DC    AL2(0)                                                           
                                                                                
CTRLX    DC    AL2(0)              End of control record table                  
                                                                                
VRSNLIT  DC    C'PC Application version#'                                       
QKEYLIT  DC    C'Request key'                                                   
RSVRLIT  DC    C'Server type'                                                   
ACODLIT  DC    C'Agency alpha id'                                               
FPIDLIT  DC    C'FACPAK id'                                                     
SENOLIT  DC    C'SE number'                                                     
USIDLIT  DC    C'User id number'                                                
AUTHLIT  DC    C'Authorization bits'                                            
LKY1LIT  DC    C'Lock key 1'                                                    
LKY2LIT  DC    C'Lock key 2'                                                    
LKY3LIT  DC    C'Lock key 3'                                                    
OFLGLIT  DC    C'Option flag 1'                                                 
OTRCLIT  DC    C'Trace flags'                                                   
RTIMLIT  DC    C'Arrival time'                                                  
LANGLIT  DC    C'Language'                                                      
CTRYLIT  DC    C'Country'                                                       
OSYSLIT  DC    C'Overlay system'                                                
ACCSLIT  DC    C'Access controls'                                               
SOFSLIT  DC    C'Start fiscal month'                                            
PASSLIT  DC    C'Password'                                                      
FAVRLIT  DC    C'PC comms. version'                                             
AGYBLIT  DC    C'Agency binary'                                                 
SECALIT  DC    C'Security agency alpha id'                                      
LUIDLIT  DC    C'LUID'                                                          
XPINLIT  DC    C'Extra program info.'                                           
OSINLIT  DC    C'Original SIN'                                                  
SOAGLIT  DC    C'Secret - SECOAGY'                                              
SOSALIT  DC    C'Secret - SECOAGYS'                                             
SOUSLIT  DC    C'Secret - SECOUSER'                                             
SOPWLIT  DC    C'Secret - SECOPASS'                                             
SOSGLIT  DC    C'Secret - SECOSAGN'                                             
SOOSLIT  DC    C'Secret - SECOSYS'                                              
SOOPLIT  DC    C'Secret - SECOPRG'                                              
SOOFLIT  DC    C'Secret - SECOFLAG'                                             
SOSTLIT  DC    C'Secret - SECOSTAT'                                             
SOAPLIT  DC    C'Secret - SECOAGPE'                                             
QSEGLIT  DC    C'Maximum file segements'                                        
QIOSLIT  DC    C'Maximum I/Os'                                                  
QRECLIT  DC    C'Maximum output records'                                        
QSIZLIT  DC    C'Maximum download size'                                         
QCPULIT  DC    C'Maximum CPU(+SRB) value'                                       
DSTILIT  DC    C'Input file DSN text'                                           
DSTOLIT  DC    C'Output file DSN text'                                          
                                                                                
         DS    0H                                                               
TYPETAB  DS    0CL4                ** Data type table **                        
         DC    C'USER'                                                          
         DC    C'UBIN'                                                          
         DC    C'SPAK'                                                          
         DC    C'CHAR'                                                          
         DC    C'PDAT'                                                          
         DC    C'CDAT'                                                          
         DC    C'CPAK'                                                          
         DC    C'CBIN'                                                          
         DC    C'HEXD'                                                          
         DC    C'HDRO'                                                          
         DC    C'JDAT'                                                          
         DC    C'BDAT'                                                          
         DC    C'LBIN'                                                          
         DC    C'MASK'                                                          
         DC    C'URNG'                                                          
         DC    C'EDAT'                                                          
         DC    C'VRSN'                                                          
         DC    C'VSTR'                                                          
         DC    C'BMON'                                                          
         DC    C'OCHR'                                                          
         DC    C'PMON'                                                          
         DC    C'UVLL'                                                          
         DC    C'UVFL'                                                          
         DC    C'EMAP'                                                          
         DC    C'USID'                                                          
         DC    C'ACC1'                                                          
         DC    C'RINF'                                                          
         DC    C'EDYM'                                                          
         DC    C'JLNG'                                                          
         DC    C'FLDR'                                                          
         DC    C'RQST'                                                          
         DC    C'RDSC'                                                          
         DC    C'USYS'                                                          
         DC    C'UPRG'                                                          
         DC    C'RUNX'                                                          
         DC    C'QVAL'                                                          
         DC    C'ERUN'                                                          
         DC    C'XSCQ'                                                          
         DC    C'MQKV'                                                          
         DC    C'MQQV'                                                          
         DC    C'MQRV'                                                          
         DC    C'VCHR'                                                          
         DC    C'KNWK'                                                          
         DC    C'KFWK'                                                          
         DC    C'DRFT'                                                          
         DC    C'TRCE'                                                          
         DC    C'SDEL'                                                          
         DC    C'MB80'                                                          
         DC    C'MB40'                                                          
         DC    C'MB20'                                                          
         DC    C'MB10'                                                          
         DC    C'MB08'                                                          
         DC    C'MB04'                                                          
         DC    C'MB02'                                                          
         DC    C'MB01'                                                          
         DC    C'NDAT'                                                          
                                                                                
         DS    0H                                                               
CMDTAB   DS    0XL(CMDTABL)        ** Command table **                          
                                                                                
         DC    CL(L'CMDTTEXT)'TRACE=L'                                          
         DC    AL1(LS_CINDS-LS_D)                                               
         DC    AL1(LS_CIALL,LS_CITLQ)                                           
         DC    CL(L'CMDTTEXT)'TRACE=P'                                          
         DC    AL1(LS_CINDS-LS_D)                                               
         DC    AL1(LS_CIALL,LS_CITPQ)                                           
         DC    CL(L'CMDTTEXT)'TRACE=B'                                          
         DC    AL1(LS_CINDS-LS_D)                                               
         DC    AL1(LS_CIALL,LS_CITBQ)                                           
         DC    CL(L'CMDTTEXT)'TRACE=N'                                          
         DC    AL1(LS_CINDS-LS_D)                                               
         DC    AL1(LS_CIALL,LS_CITNQ)                                           
                                                                                
         DC    CL(L'CMDTTEXT)'NOPURGE'                                          
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF,LS_IKWRK)                                                 
         DC    CL(L'CMDTTEXT)'PURGE'                                            
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF-LS_IKWRK,0)                                               
         DC    CL(L'CMDTTEXT)'UPDATE'                                           
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF,LS_IUVAL)                                                 
         DC    CL(L'CMDTTEXT)'NOUPDATE'                                         
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF-LS_IUVAL,0)                                               
         DC    CL(L'CMDTTEXT)'DECIMAL'                                          
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF,LS_IDECS)                                                 
         DC    CL(L'CMDTTEXT)'HEX'                                              
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF-LS_IDECS,0)                                               
         DC    CL(L'CMDTTEXT)':( VSTRN'                                         
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF,LS_IVSTR)                                                 
         DC    CL(L'CMDTTEXT)':( FAERROR1'                                      
         DC    AL1(LS_IIND1-LS_D)                                               
         DC    AL1(FF,LS_IERRS)                                                 
         DC    CL(L'CMDTTEXT)'SHOWTYPE'                                         
         DC    AL1(LS_IIND2-LS_D)                                               
         DC    AL1(FF,LS_ISHWT)                                                 
                                                                                
CMDTABX  DC    AL1(CMDTEOTQ)                                                    
                                                                                
CMDTABD  DSECT ,                   ** Command table layout **                   
CMDTEOTQ EQU   X'FF'               End of table indicator                       
CMDTTEXT DS    CL16                Command text                                 
CMDTDISP DS    X                   Displacement to byte in LS_D                 
CMDTABIT DS    X                   'And' bits                                   
CMDTOBIT DS    X                   'Or' bits                                    
CMDTABL  EQU   *-CMDTABD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
***********************************************************************         
* Server type/name table                                              *         
***********************************************************************         
                                                                                
SVNTAB   DS    0XL22                                                            
         DC    AL1(TSTAPAL),CL20'Accent'                                        
         DC    AL1(06)                                                          
         DC    AL1(TSTASCR),CL20'Scribe'                                        
         DC    AL1(0)                                                           
         DC    AL1(TSTBOTU),CL20'BrandOcean Time'                               
         DC    AL1(0)                                                           
         DC    AL1(TSTACBO),CL20'BrandOcean Downloads'                          
         DC    AL1(0)                                                           
*&&US*&& DC    AL1(TSTSTEW),CL20'Netpak Steward'                                
*&&US*&& DC    AL1(03)                                                          
*&&US*&& DC    AL1(TSTADBY),CL20'Print ADBuyer'                                 
*&&US*&& DC    AL1(04)                                                          
*&&US*&& DC    AL1(TSTSPOT),CL20'Spot Desktop'                                  
*&&US*&& DC    AL1(02)                                                          
*&&US*&& DC    AL1(TSTSPUP),CL20'Spot Desktop upload'                           
*&&US*&& DC    AL1(02)                                                          
*&&US*&& DC    AL1(TSTNETM),CL20'Netpak MatchMaker'                             
*&&US*&& DC    AL1(00)                                                          
*&&US*&& DC    AL1(TSTDEMO),CL20'ComparaGraph'                                  
*&&US*&& DC    AL1(0)                                                           
*&&US*&& DC    AL1(TSTDEMD),CL20'Demo Lookups'                                  
*&&US*&& DC    AL1(0)                                                           
*&&US*&& DC    AL1(TSTDEMC),CL20'Demo Convergence'                              
*&&US*&& DC    AL1(0)                                                           
*&&US*&& DC    AL1(TSTCTLD),CL20'Control CFM/MFM/MV'                            
*&&US*&& DC    AL1(10)                                                          
*&&US*&& DC    AL1(TSTAEST),CL20'Audience Estimator'                            
*&&US*&& DC    AL1(0)                                                           
*&&UK*&& DC    AL1(TSTMELK),CL20'Media Explorer'                                
*&&UK*&& DC    AL1(04)                                                          
*&&UK*&& DC    AL1(TSTMEOU),CL20'Media Offline Upload'                          
*&&UK*&& DC    AL1(0)                                                           
*&&UK*&& DC    AL1(TSTMEPU),CL20'Media Offln Pay UpLd'                          
*&&UK*&& DC    AL1(0)                                                           
*&&UK*&& DC    AL1(TSTSTEW),CL20'Media Statistics' (aka C'S')                   
*&&UK*&& DC    AL1(0)                                                           
*&&UK*&& DC    AL1(TSTMEBU),CL20'Media Spot Processor'                          
*&&UK*&& DC    AL1(0)                                                           
SVNTABN  EQU   (*-SVNTAB)/L'SVNTAB                                              
         DC    AL1(0),CL20'NotKnown',AL1(0)                                     
                                                                                
SVNTABD  DSECT ,                   ** SVNTAB above **                           
SVNTTYP  DS    C                   Server type (TSTYPE value)                   
SVNTNAM  DS    CL20                Server name                                  
SVNTSYS  DS    XL(L'LP_OSYS)       Default system overlay number                
SVNTABL  EQU   *-SVNTABD           Width of table                               
DDLINK   CSECT ,                                                                
                                                                                
***********************************************************************         
* Command help text                                                   *         
***********************************************************************         
                                                                                
         DS    0H                                                               
CMDTXT   DS    0CL79                                                            
 DC CL79'* Commands starting with * are comments'                               
 DC CL79'* PATCH=(phase(/testlevel)/*modname)(+disp=patch)'                     
 DC CL79'* VERIFY=(phase(/testlevel)/*modname)(+disp=patch)'                    
 DC CL79'* TRAPCALL=(phase(/testlevel)/*modname)(+disp=patch)'                  
 DC CL79'* TRAPVIS=filename(,options)'                                          
 DC CL79'* TRAPFIL=filename(,options)'                                          
 DC CL79'* TRAPDIR=filename(,options)'                                          
 DC CL79'* DOWNASUP=Y output FALINK string in upload format'                    
 DC CL79'* MAXIO=I/O threshold for request cancel'                              
 DC CL79'* BIGIO=I/O threshold for big request reporting'                       
 DC CL79'* BIGCPU=CPU threshold for big request reporting'                      
 DC CL79'* BIGSEG=segment threshold for big request reporting'                  
 DC CL79'* <FALINK> (followed by FALINK upload string)'                         
 DC CL79'* <FALINKX> (process FALINK upload string)'                            
 DC CL79'* MQTRACE=I(input)/O(output)/B(both)'                                  
 DC CL79'* MAXQTIME=maximum queue time threshold'                               
 DC CL79'* AVGQTIME=average queue time threshold'                               
 DC CL79'* SAMPLE=request count for average queue time evaluation'              
 DC CL79'* EOJ or ENDRUN stops the RUNNER'                                      
CMDTXTX  DC    AL1(0)                                                           
                                                                                
***********************************************************************         
* Action help text                                                    *         
***********************************************************************         
                                                                                
         DS    0H                                                               
ACTTXT   DS    0CL79                                                            
 DC CL79'H        - To display this screen - H&& for options help'              
 DC CL79'PfKeys   - see interface screens for copy/paste/run options'           
 DC CL79'U        - U=Upload'                                                   
 DC CL79'Dx       - D=regular download, DE=expanded download'                   
 DC CL79'wxy      - wxO=First time, DxZ=Nothing to send, wxD=Last time'         
 DC CL79'wxyz     - DxyY=Download in progress, wxyC=More data to come'          
 DC CL79'Vnn/Pnn  - comms version number (nn=version number 01-99)'             
 DC CL79'E        - Error'                                                      
 DC CL79'M(enu)   - M(+text)(#overlay)(=mapcode)(R)(F)(D)(U)'                   
 DC CL79'I(nput)  - request input/submit screen'                                
 DC CL79'+(Pf12)  - list servers for command sending'                           
 DC CL79'S(type)  - server status'                                              
 DC CL79'L(Pf10)  - job status'                                                 
 DC CL79'N(Pf2)   - run work in FACPAK'                                         
 DC CL79'R?/RE    - request work status (replies with RN if not ready)'         
 DC CL79'RC       - to cancel work and purge worker file'                       
ACTTXTX  DC    AL1(0)                                                           
                                                                                
***********************************************************************         
* Interface options text                                              *         
***********************************************************************         
                                                                                
         DS    0H                                                               
OPTTXT   DS    0CL79                                                            
 DC CL79'H&&             - To display this screen'                              
 DC CL79'&&TRACE=L       - Trace I/O to worker file'                            
 DC CL79'&&TRACE=B       - Trace I/O to worker file and SYSPRINT'               
 DC CL79'&&TRACE=P       - Trace I/O to SYSPRINT'                               
 DC CL79'&&TRACE=N       - Turn I/O trace off'                                  
 DC CL79'&&NOPURGE       - Keep worker files after use'                         
 DC CL79'&&PURGE         - Purge worker files after use'                        
 DC CL79'&&UPDATE        - Allow updative upload for read-only system'          
 DC CL79'&&NOUPDATE      - Turn off &&UPDATE'                                   
 DC CL79'&&DECIMAL       - To see decimal map numbers in menus'                 
 DC CL79'&&HEX           - To see hexadecimal map numbers in menus'             
 DC CL79'&&:( VSTRN      - Die at VSTRN on input validation error'              
 DC CL79'&&:( FAERROR1   - Die at FAERROR1 on any error'                        
 DC CL79'&&SHOWTYPE      - Show validation type in request details'             
 DC CL79' '                                                                     
 DC CL79'Note:- an option may be appended to an action (eg ''m&&u'')'           
 DC CL79'       options are sticky, mixed case is accepted'                     
OPTTXTX  DC    AL1(0)                                                           
                                                                                
***********************************************************************         
* Statistics table                                                    *         
***********************************************************************         
                                                                                
         DS    0H                                                               
STATAB   DS    0X                                                               
         DC    AL1(RARRTIM-RVALUES,STATTTIM)                                    
         DC    CL25'Arrival time.............'                                  
         DC    AL1(RQUETIM-RVALUES,STATTTIM)                                    
         DC    CL25'Queue time...............'                                  
         DC    AL1(RSTRTIM-RVALUES,STATTTIM)                                    
         DC    CL25'Start time...............'                                  
         DC    AL1(RENDTIM-RVALUES,STATTTIM)                                    
         DC    CL25'End time.................'                                  
         DC    AL1(RTOTTIM-RVALUES,STATTTIM)                                    
         DC    CL25'Total elapsed time.......'                                  
         DC    AL1(RTOTLOD-RVALUES,STATTNUM+3)                                  
         DC    CL25'Phases loaded............'                                  
         DC    AL1(RTOTPOP-RVALUES,STATTNUM+3)                                  
         DC    CL25'Timer pops...............'                                  
         DC    AL1(RTOTSIO-RVALUES,STATTNUM+6)                                  
         DC    CL25'Total start I/Os.........'                                  
         DC    AL1(RTOTPIO-RVALUES,STATTNUM+6)                                  
         DC    CL25'Printer start I/Os.......'                                  
         DC    AL1(RTOTPAG-RVALUES,STATTNUM+5)                                  
         DC    CL25'Pages printed............'                                  
         DC    AL1(RTOTLIN-RVALUES,STATTNUM+6)                                  
         DC    CL25'Lines printed............'                                  
         DC    AL1(RWRKADD-RVALUES,STATTNUM+5)                                  
         DC    CL25'Download records.........'                                  
         DC    AL1(RLOGADD-RVALUES,STATTNUM+5)                                  
         DC    CL25'Log records..............'                                  
         DC    AL1(RFILSEG-RVALUES,STATTNUM+5)                                  
         DC    CL25'Output file segments.....'                                  
STATABX  DC    AL1(STATEOTQ)                                                    
                                                                                
STATABD  DSECT ,                   ** Layout of stats table **                  
STATEOTQ EQU   X'FF'               End of table indicator                       
STATDISP DS    AL1                 Displacement to data in stats block          
STATTYPE DS    X                   ** Data type **                              
STATTTIM EQU   X'80'               Time                                         
STATTNUM EQU   X'40'               Counter                                      
STATOLEN EQU   X'0F'               Output length (for numbers)                  
STATTEXT DS    CL25                Line description                             
STATABL  EQU   *-STATABD                                                        
DDLINK   CSECT ,                                                                
         EJECT                                                                  
VERSION4 EQU   4                   RUNNER server support                        
VERSION5 EQU   5                   Asynchronous download support                
VERSION6 EQU   6                   Expanded map code support                    
VERSION# EQU   VERSION6            Current version number                       
                                                                                
WMPSIZE  EQU   9*ONEK              Acquired work map pool size                  
                                                                                
GENSYS#  EQU   15                  General system number                        
                                                                                
G#BASE   EQU   1000                Base message number for DDLINK               
                                                                                
GE#PLOCK EQU   54                  Physical lockout                             
GE#COWRK EQU   01+G#BASE           Can't open worker file                       
GE#CAREQ EQU   02+G#BASE           Can't add request to worker file             
GE#CCWRK EQU   03+G#BASE           Can't close worker file                      
GE#CRREQ EQU   04+G#BASE           Can't read request from worker file          
GE#SVRER EQU   05+G#BASE           Server returned error                        
GE#ICODE EQU   06+G#BASE           Invalid map code                             
GE#CRREC EQU   07+G#BASE           Can't read record from worker file           
GE#GDERR EQU   08+G#BASE           GETDATA returned error                       
GE#LSTER EQU   09+G#BASE           List validation error                        
GE#INPER EQU   10+G#BASE           Input validation error                       
GE#IWSTA EQU   11+G#BASE           Invalid worker file status                   
GE#IWSEQ EQU   12+G#BASE           Invalid action sequence                      
GE#NOUPD EQU   13+G#BASE           Not authorized to update                     
GE#WRONG EQU   14+G#BASE           Wrong FACPAK                                 
GE#ROSYS EQU   15+G#BASE           System is currently read-only                
GE#COFIL EQU   17+G#BASE           Can't open (BSAM) download file              
GE#UPGRD EQU   18+G#BASE           Must upgrade PC version                      
                                                                                
GI#SELIT EQU   01+G#BASE           Select an item                               
GI#SELSC EQU   02+G#BASE           Select an item or scroll                     
GI#ENTIT EQU   03+G#BASE           Enter data or press run key                  
GI#ENTSC EQU   04+G#BASE           Enter data, scroll or press run key          
GI#SVRTD EQU   05+G#BASE           Server table displayed                       
GI#QUETD EQU   06+G#BASE           Queue table displayed                        
GI#ENTPS EQU   07+G#BASE           Enter data, press go key to send             
GI#RSTAT EQU   08+G#BASE           Run statistics displayed                     
                                                                                
SECSMIN  EQU   60                  N'seconds in a minute                        
MINHOUR  EQU   60                  N'minutes in an hour                         
COLSLINE EQU   80                  N'columns in TWA line                        
ROWSPAGE EQU   24                  N'rows in TWA page                           
MAXTWALN EQU   2304                Maximum length of TWA                        
                                                                                
ONEK     EQU   1024                                                             
TWOK     EQU   2*ONEK                                                           
FOURK    EQU   4*ONEK                                                           
FF       EQU   X'FF'                                                            
FE       EQU   X'FE'                                                            
MAXSEQ   EQU   20                                                               
ZONEBITS EQU   X'F0'                                                            
DIGIBITS EQU   X'0F'                                                            
YESQ     EQU   C'Y'                                                             
NOQ      EQU   C'N'                                                             
HEXQ     EQU   C'X'                                                             
CONLETQ  EQU   C'C'                                                             
SPACEQ   EQU   C' '                                                             
EQUALQ   EQU   C'='                                                             
RANGEQ   EQU   C'-'                                                             
IDELIMQ  EQU   C';'                                                             
EDELIMQ  EQU   C'/'                                                             
ODELIMQ  EQU   C';'                                                             
COMMAQ   EQU   C','                                                             
HELPQ    EQU   C'?'                                                             
REPCHARQ EQU   C'?'                                                             
MAPONLYQ EQU   C'='                                                             
SVRCMDQ  EQU   C'+'                                                             
NULCHARQ EQU   C'*'                                                             
WILDCQ   EQU   C'*'                                                             
FILLQ    EQU   C'.'                                                             
WRKWCLSQ EQU   C'Q'                                                             
LCHARL   EQU   FATRTABL            Normal multiple character length             
LCHAR    EQU   C'+'                Normal multiple character                    
XBASIS   EQU   FATRTABL*3          Extended multiple character length           
XCHAR    EQU   C'-'                Extended multiple character                  
         EJECT                                                                  
***********************************************************************         
* DDLINK global working storage                                       *         
***********************************************************************         
                                                                                
WORKD    DSECT ,                                                                
                                                                                
DUB      DS    D                                                                
DUB2     DS    D                                                                
FULL     DS    F                                                                
HALF1    DS    H                                                                
HALF2    DS    H                                                                
BYTE1    DS    X                                                                
BYTE2    DS    X                                                                
BYTE3    DS    X                                                                
BYTE4    DS    X                                                                
DMCB     DS    6F                                                               
PARM     DS    6F                                                               
WORK     DS    XL256                                                            
WORK2    DS    XL256                                                            
WORK3    DS    XL256                                                            
                                                                                
LDWORK   DS    (LD_LNQ)X           Used for building dynamic LD_D               
                                                                                
SAVERE   DS    A                                                                
SAVERF   DS    A                                                                
SAVER0   DS    A                                                                
SAVER1   DS    A                                                                
SAVER2   DS    A                                                                
                                                                                
MQI      DS    A                   A(RUNNER MQ interface)                       
LINKIO   DS    A                   A(LINKIO)                                    
RUNIT    DS    A                   A(RUNIT)                                     
DYNALLOC DS    A                   A(DYNALLOC)                                  
                                                                                
FAPARMS  DS    0F                  ** FALINK parameters **                      
FAPAMAP  DS    A                                                                
FAPAINP  DS    A                                                                
FAPLINP  DS    A                                                                
         DS    A                                                                
         DS    A                                                                
         DS    A                                                                
                                                                                
GETDATA  DS    A                   A(FALINK get data routine)                   
                                                                                
PUTROUTS DS    0A                  ** FALINK put routines **                    
SETELEM  DS    A                   A(FALINK set element routine)                
ADDDATA  DS    A                   A(FALINK add data routine)                   
PUTROUTL EQU   *-PUTROUTS                                                       
                                                                                
DD_BLKS  DS    0A                  ** DDLINK block addresses **                 
B#WORKD  EQU   1                   WORKD block equate                           
AWORKD   DS    A                                                                
B#LP_D   EQU   2                   LP_D block equate                            
ALP_D    DS    A                                                                
B#MASTD  EQU   3                   MASTD block equate                           
AMASTD   DS    A                                                                
B#SECD   EQU   4                   SECD block equate                            
ASECD    DS    A                                                                
B#TWAD   EQU   5                   TWAD block equate                            
ATWAD    DS    A                                                                
B#LS_D   EQU   6                   LS_D block equate                            
ALS_D    DS    A                                                                
B#LP_XD  EQU   7                   LP_XD block equate                           
ALP_XD   DS    A                                                                
B#RUNFCD EQU   8                   RUNFACS block equate                         
ARUNFACS DS    A                                                                
                                                                                
AFAMAPN  DS    A                   A(FALINK map entry)                          
                                                                                
SAVESIZE DS    A                   Size of each server work area                
ANDX     DS    A                   A(DDLINK master map index)                   
ASSB     DS    A                   A(SSB)                                       
ATIA     DS    A                   A(TIA)                                       
AWRKBLK  DS    A                   A(current WRKIO block)                       
AWRKREC  DS    A                   A(current worker file record)                
AWRKRECX DS    A                   A(end of current worker file record)         
AWRKBLK1 DS    A                   A(WRKIO block 1)                             
AWRKBLK2 DS    A                   A(WRKIO block 2)                             
AWRKBLKR DS    A                   A(FACWRK WRKIO block)                        
ALABLOCK DS    A                   A(limit access control block)                
ARECDEF  DS    A                   A(record definitions)                        
AOFFTAB  DS    A                   A(office control table)                      
ANEXTREQ DS    A                   A(next request element to process)           
                                                                                
ARUNXEL  DS    A                   A(LQ_RUNXQ element)                          
AERUNEL  DS    A                   A(LQ_ERUNQ element)                          
                                                                                
ASVRSAVE DS    A                   A(server save area)                          
ASVRLAST DS    A                   A(last called server save area)              
AVALPAR  DS    A                   A(VALPAR)                                    
ASYSFACS DS    A                   A(SYSFACS)                                   
                                                                                
RUNASEO  DS    A                   RUNNER - A(SEOLST)                           
RUNASVR  DS    A                   RUNNER - A(server)                           
RUNAQUE  DS    A                   RUNNER - A(work queue entry)                 
                                                                                
MQB      DS    A                   A(MQ buffer)                                 
MQL      DS    F                   L'incoming MQ message                        
                                                                                
AWMP     DS    A                   A(start of work map pool)                    
AENDTWA  DS    A                   A(end of TWA)                                
AMD      DS    A                   A(LF_D) for VSTR routine                     
UNWINDRD DS    A                   Saved RD value for unwind                    
                                                                                
SEGVALS  DS    0F                  ** Current file segment **                   
SEGRECS  DS    F                   N'records added this segment                 
SEGSIZE  DS    F                   N'data bytes added this segment              
SEGVALL  EQU   *-SEGVALS                                                        
                                                                                
SVALPXD  DS    A                   Saved LP_ALPXD value on entry                
SVMQB    DS    A                   Saved MQB value                              
SVMQL    DS    A                   Saved MQL value                              
SVASAVE  DS    A                   Saved server work area pointer               
                                                                                
SVRWIDTH DS    H                   Width of server entry                        
QUEWIDTH DS    H                   Width of queue entry                         
                                                                                
FILTMAP  DS    XL(L'LN_CODE)       BMMI filter map                              
FACPAKID DS    XL(L'MCFACPAK)      FACPAK id                                    
                                                                                
SERVER   DS    XL(RSVRDEFL-(RSVREYE-RSVRDEFD))                                  
                                                                                
SAVEWKEY DS    XL(L'WRKWKEY)       Saved worker file key                        
SAVERUNI DS    XL(L'LP_RUNI)       Saved run indicators                         
SAVEWSPS DS    CL(L'WRKWSPS)       Saved WRKWSPS (multi-server)                 
SAVEASVR DS    AL(L'LP_ASVR)       Saved server address                         
                                                                                
SVRTYPE  DS    XL(L'RSVRTYPE+1)    Single entry server list built here          
SVRTAB   DS    (SVRTABM)XL(SVRTABL)                                             
                                                                                
MGCALL   DS    X                   MQGET call type                              
VMCALL   DS    X                   VMAP call type                               
PWCALL   DS    X                   PWRK call type                               
SDCALL   DS    X                   SEND call type                               
BRCALL   DS    X                   BREQ call type                               
RPCALL   DS    X                   RECP call type                               
GRCALL   DS    X                   GREQ call type                               
                                                                                
INDS1    DS    X                   ** Indicator byte 1 **                       
INDQINIT EQU   INDS1                                                            
INDSINIT EQU   X'80'               Have called server with init call            
INDQFBRK EQU   INDS1                                                            
INDSFBRK EQU   X'40'               Break on full request from FALINK            
INDQFRSM EQU   INDS1                                                            
INDSFRSM EQU   X'20'               Resume after break from FALINK               
INDQXTRA EQU   INDS1                                                            
INDSXTRA EQU   X'10'               Extra message in WORK2 set                   
INDQDDST EQU   INDS1                                                            
INDSDDST EQU   X'08'               DDS terminal                                 
INDQUPLD EQU   INDS1                                                            
INDSUPLD EQU   X'04'               DDLINK/LINKIO upload                         
INDQRLPI EQU   INDS1                                                            
INDSRLPI EQU   X'02'               DDLINK RLP interface active                  
INDQRANX EQU   INDS1                                                            
INDSRANX EQU   X'01'               Ran other process on exit                    
                                                                                
INDS2    DS    X                   ** Indicator byte 2 **                       
INDQARTF EQU   INDS2                                                            
INDSARTF EQU   X'80'               Add request to folder                        
INDQORTN EQU   INDS2                                                            
INDSORTN EQU   X'40'               LP_AOMAP is A(server routine)                
INDQRLPD EQU   INDS2                                                            
INDSRLPD EQU   X'20'               RLP worker file download in progress         
INDQXCOD EQU   INDS2                                                            
INDSXCOD EQU   X'10'               Hex map codes in expanded download           
INDQBTCH EQU   INDS2                                                            
INDSBTCH EQU   X'08'               Running off-line batch mode                  
INDQMPTR EQU   INDS2                                                            
INDSMPTR EQU   X'04'               Processing a pointer map                     
INDQTEST EQU   INDS2                                                            
INDSTEST EQU   X'02'               Upload test mode                             
INDQUPLI EQU   INDS2                                                            
INDSUPLI EQU   X'01'               General upload interface active              
                                                                                
INDS3    DS    X                   ** Indicator byte 3 **                       
INDQSENT EQU   INDS3                                                            
INDSSENT EQU   X'80'               Data sent (send routine)                     
INDQFTDL EQU   INDS3                                                            
INDSFTDL EQU   X'40'               First time for next download record          
INDQROEP EQU   INDS3                                                            
INDSROEP EQU   X'20'               Run on exit put in progress                  
INDQUVER EQU   INDS3                                                            
INDSUVER EQU   X'10'               Upload validation error                      
INDQUPUT EQU   INDS3                                                            
INDSUPUT EQU   X'08'               Data put to upload record                    
INDQASVR EQU   INDS3                                                            
INDSASVR EQU   X'04'               Application server loaded                    
INDQSSVR EQU   INDS3                                                            
INDSSSVR EQU   X'02'               A(application server) saved                  
INDOSDEL EQU   INDS3                                                            
INDSSDEL EQU   X'01'               Just edited self-defining element            
                                                                                
INDS4    DS    X                   ** Indicator byte 4 **                       
INDQNEXT EQU   INDS4                                                            
INDSNEXT EQU   X'80'               Next time for GREQ routine                   
INDQCTRL EQU   INDS4                                                            
INDSCTRL EQU   X'40'               Sending/receiving control record             
INDQFOUT EQU   INDS4                                                            
INDSFOUT EQU   X'20'               First time OUTPUT s/r called                 
INDQWORF EQU   INDS4                                                            
INDSWORF EQU   X'10'               Processing archive pointers (NXTFIL)         
INDQGARC EQU   INDS4                                                            
INDSGARC EQU   X'08'               Processing archive pointer (FILDLD)          
INDQPWRK EQU   INDS4                                                            
INDSPWRK EQU   X'04'               Process work mode passed in VINP             
INDQDDLK EQU   INDS4                                                            
INDSDDLK EQU   X'02'               DDLINK hosted server fuction                 
                                                                                
INDSFILE DS    X                   ** Indicator byte 4 **                       
INDSIFIL EQU   X'80'               Reading input disk file                      
INDSOFIL EQU   X'40'               Writing output disk file                     
INDSIOPN EQU   X'20'               Input disk file is open                      
INDSI1ST EQU   X'01'               Getting 1st record of dataset                
                                                                                
VALUES   DS    0X                  ** VSTR values **                            
VALMODE  DS    X                   ** Validation mode **                        
VALMTEST EQU   X'80'               Interactive test mode                        
VALTYPE  DS    XL(L'LD_TYPE)       Input data type                              
VALCODE  DS    XL(L'LF_CODE)       Data code of first map of array              
VALFLAG  DS    X                   Flag byte                                    
                                                                                
VALVALS  DS    0XL2                ** Validation values **                      
VALVALTY DS    AL1                 Validation type                              
VALVALLN DS    AL1                 Maximum input length or zero                 
                                                                                
VALARYV  DS    0X                  ** Array values **                           
VALINDS  DS    XL(L'LF_INDS)       Input data indicators                        
VALDISP  DS    XL(L'LF_DDSP)       Displacement to data in array row            
VALCOLN  DS    XL(L'LF_COLS)       Current column number                        
VALCOLS  DS    XL(L'LF_COLS)       Number of array columns                      
VALWROW  DS    XL(L'LF_DDSP)       Width of array row                           
VALARYVL EQU   *-VALARYV                                                        
                                                                                
VALUESL  EQU   *-VALUES                                                         
                                                                                
ROWVALS  DS    0X                  ** Input array column controls **            
ROWVALMC EQU   64                  Maximum number of columns per row            
ROWHIGH  DS    (ROWVALMC)XL2       High row # for each array column             
ROWHIGHL EQU   *-ROWHIGH                                                        
ROWNTRY  DS    (ROWVALMC)X         Entry count for each array column            
ROWNTRYL EQU   *-ROWNTRY                                                        
ROWVALL  EQU   *-ROWVALS                                                        
                                                                                
SETMAP#  DS    XL(L'LX_CODE)       Map number set by SETMAP                     
                                                                                
FPVALUES DS    0X                  ** FLDPUT routine values **                  
FPTHISEL DS    XL2                 Current element code                         
FPTHISDT DS    XL2                 Current data code                            
FPPREVEL DS    XL2                 Previous element code                        
FPPREVDT DS    XL2                 Previous data code                           
FPFLDIND DS    XL(L'LO_INDS3)      (LO_INDS3/LX_CIND3)                          
FPSAVEEL DS    XL2                 Saved map number                             
FPSAVELN DS    X                   Actual length used in FPSAVEST               
FPSAVEST DS    CL256               Saved string                                 
FPVALUEL EQU   *-FPVALUES                                                       
                                                                                
PFKEY    DS    XL(L'TIOBAID)       ** PfKey value **                            
PFKSELQ  EQU   1                   Select PfKey                                 
PFKNOWQ  EQU   2                   Run now PfKey                                
PFKSEDQ  EQU   2                   Send upload file (expanded down)             
PFKCPYQ  EQU   3                   Copy string                                  
PFKSRDQ  EQU   4                   Send upload file (regular down)              
PFKROFQ  EQU   5                   Run off-line PfKey                           
PFKADDQ  EQU   6                   Add record to worker file                    
PFKSUPQ  EQU   7                   Scroll up PfKey                              
PFKSDNQ  EQU   8                   Scroll down PfKey                            
PFKSSTQ  EQU   9                   Server status                                
PFKQSTQ  EQU   10                  Queue status                                 
PFKMENQ  EQU   11                  Menu PfKey                                   
PFKCMDQ  EQU   12                  Command PfKey                                
PFKPSTQ  EQU   13                  Paste string                                 
                                                                                
CURDISP  DS    XL(L'TIOBCURD)      Cursor displacement                          
                                                                                
         DS    0D                                                               
LPXVARS  DS    XL(LP_XLNQ)         Application visible (LP_XD)                  
                                                                                
MQDATAA  DS    A                   A(data string)                               
MQDATAL  DS    H                   L'data string                                
                                                                                
DSN      DS    CL(L'LQ_BDSN)       BSAM file DSN name                           
DSNHLQ3  DS    CL8                 3rd level HLQ for output file                
                                                                                
ROUTDISP DS    XL(L'LH_OMAPD)      Upload routine displacement                  
REQMAP#  DS    XL(L'LP_QMAPN)      Request map number                           
SVRPHASE DS    XL3                 Server overlay (0SPPOO)                      
SVREODID DS    CL(L'RSVREODI)      End of day id                                
FOLDER#  DS    XL(L'LD_CODE)       Desktop folder id map number                 
FOLDER   DS    CL6                 Desktop folder id                            
REQDESC# DS    XL(L'LD_CODE)       Request description map number               
REQDESC  DS    CL(RFPVRDSL)        Request description                          
         ORG   REQDESC                                                          
REQPASS  DS    CL(L'RUNQPASS)      Requester password                           
REQUEST  DS    0C                  Request id (off-line batch)                  
REQSRVR  DS    CL(L'RUNQSRVR)      Server name                                  
REQMAPN  DS    CL(L'RUNQMAPN)      Request map number                           
REQSEQN  DS    CL(L'RUNQSEQN)      Request sequence number                      
REQUESTL EQU   *-REQUEST                                                        
         ORG   ,                                                                
REQUEST# DS    FL(L'LD_CODE)       Request id map number                        
REQINFOL DS    X                   Length of request info                       
REQINFO  DS    CL(L'RLPODESC)      Request info                                 
WRKKEY   DS    CL5                 Worker key/class (index download)            
                                                                                
FLOAT    DS    X                   Float character                              
                                                                                
OUTMAP   DS    XL(MAPOUTL)         FALINK output map                            
                                                                                
         DS    0F                                                               
NDX      DS    XL(3*ONEK)          Master map index build area                  
NDXX     EQU   *                                                                
                                                                                
MAP      DS    XL(2*ONEK)          FALINK emulation map                         
                                                                                
WORKL    EQU   ((((*-WORKD)+7)/8)*8)                                            
WORKFREE EQU   (10*ONEK)-WORKL     Free space in WORKD                          
                                                                                
PWKEYD   DSECT ,                   ** Layout of printable worker key **         
PWTYPE   DS    C                   Field type                                   
PWFILEID DS    CL2                 File id (K=)                                 
PWKEY    DS    0C                                                               
PWKUSRID DS    CL5                 User-id number                               
PWKSP    DS    CL4                 System/program                               
PWKDAY   DS    CL2                 Day                                          
PWKCLS   DS    C                   Class                                        
PWKSEQ   DS    CL5                 File sequence number                         
PWKEYL   EQU   *-PWFILEID                                                       
PWKEYDL  EQU   *-PWKEYD                                                         
                                                                                
SVRTABD  DSECT ,                   ** Layout of server table **                 
SVRTTYPE DS    CL(L'TSTYPE)        Server type                                  
SVRTUSID DS    XL(L'CTIKNUM)       User-id number                               
SVRTAGYA DS    CL(L'CTAGYID)       Agency alpha id                              
SVRTACC1 DS    CL(L'LP_ACCS)       Limit access 1                               
SVRTABL  EQU   *-SVRTABD                                                        
SVRTABM  EQU   LS_WMAXN            Maximum N'entries supported                  
                                                                                
SS_D     DSECT ,                   ** Server save area **                       
SS_AST1  DS    CL2                 C'**'                                        
SS_SYSP  DS    CL(L'RSVRSYSC+L'RSVRPRGC)                                        
SS_AST2  DS    CL2                 C'**'                                        
SS_ADDR  DS    AL4                 Work index number/A(server)                  
SS_BEYE  DS    CL(L'SBLEYE)        LP_BLKS eyecatcher                           
SS_BLKS  DS    XL(LP_BLKSL)        LP_BLK1-LP_BLKF                              
SS_REYE  DS    CL(L'SRGEYE)        LP_R2RB eyecatcher                           
SS_R2RB  DS    XL(LP_R2RBL)        LP_R2RB                                      
         DS    0D                                                               
SS_WEYE  DS    CL(L'SWKEYE)        Work area eyecatcher                         
SS_WORK  DS    0X                  Start of server work area                    
         EJECT                                                                  
       ++INCLUDE DDLINKD                                                        
         EJECT                                                                  
*FALINKBLK                                                                      
         PRINT OFF                                                              
       ++INCLUDE FALINKBLK                                                      
         PRINT ON                                                               
                                                                                
TWAHEDLD DSECT ,                   ** Layout of header line **                  
                                                                                
TWAHEDCQ EQU   1                   Header starts in column 2                    
TWAHEDH  DS    XL8                 Header field header                          
TWAHEDT  DS    CL79                Header text                                  
                                                                                
TWAHEDLL EQU   *-TWAHEDLD                                                       
                                                                                
TWAMENUD DSECT ,                   ** Layout of menu line **                    
                                                                                
TWAMENCQ EQU   1                   Menu starts in column 2                      
TWAMENH  DS    XL8                 Menu field header                            
TWAMENU  DS    0C                                                               
TWAMENDX DS    C                   "X"                                          
TWAMEND1 DS    C                   "'"                                          
TWAMENC  DS    CL4                 Record map code                              
TWAMEND2 DS    C                   "'"                                          
         DS    C                                                                
TWAMENT  DS    CL48                Menu item text                               
         DS    C                                                                
TWAMPHS  DS    CL2                 Phase number                                 
         DS    C                                                                
TWAMTYP  DS    CL20                Server type/flags                            
                                                                                
TWAMENUL EQU   *-TWAMENUD                                                       
                                                                                
TWACMDED DSECT ,                   ** Layout of command edit **                 
                                                                                
TWACMDCQ EQU   1                   Data starts in column 2                      
TWACMDH  DS    XL8                 Data field header                            
TWACMDT  DS    CL79                Data value                                   
                                                                                
TWACMDEL EQU   *-TWACMDED                                                       
                                                                                
TWAHELPD DSECT ,                   ** Layout of help screen **                  
                                                                                
TWAHELCQ EQU   1                   Data starts in column 2                      
TWAHELH  DS    XL8                 Data field header                            
TWAHELT  DS    CL79                Data value                                   
                                                                                
TWAHELPL EQU   *-TWAHELPD                                                       
                                                                                
TWADATAD DSECT ,                   ** Layout of data line **                    
                                                                                
TWAKWDCQ EQU   1                   Keyword starts in column...                  
TWAKWDH  DS    XL8                 Keyword field header                         
TWAKWDDX DS    C                   "X'                                          
TWAKWDD1 DS    C                   "'"                                          
TWAKWDC  DS    CL4                 Data map number                              
TWAKWDD2 DS    C                   "'"                                          
         ORG   TWAKWDDX                                                         
TWAKWMAP DS    CL2                 Map number                                   
TWAKWDLM DS    C                   "/"                                          
TWAKWTYP DS    CL4                 Data validation type                         
         DS    C                                                                
TWAKWDT  DS    CL25                Keyword text                                 
TWAKWDDL EQU   *-TWAKWDDX                                                       
TWAKWDL  EQU   *-TWAKWDH                                                        
                                                                                
TWAVALCQ EQU   TWAKWDCQ+TWAKWDDL+2                                              
TWAVALH  DS    XL8                 Data value field header                      
TWAVAL   DS    CL(COLSLINE-TWAVALCQ-1)                                          
TWAVALL  EQU   *-TWAVALH                                                        
                                                                                
TWADATAL EQU   *-TWADATAD                                                       
                                                                                
TWASVRSD DSECT ,                   ** Layout of server status **                
                                                                                
TWASVRCQ EQU   1                   Server status starts in column 2             
TWASVRH  DS    XL8                 Server status field header                   
                                                                                
TWASVRT  DS    0C                  ** Server display line **                    
TWASVR#  DS    CL2                 Table entry number                           
         DS    C                                                                
TWASVRTY DS    C                   Server type                                  
         DS    C                                                                
TWASVRNM DS    CL(L'SVNTNAM)       Server name                                  
         DS    C                                                                
TWASVRJB DS    CL8                 Server jobname                               
         DS    C                                                                
TWASVRID DS    C                   FACPAK id                                    
TWASVRMQ DS    C                   MQ enabled                                   
         DS    C                                                                
TWASVRAG DS    CL5                 Agency filter                                
         DS    C                                                                
TWASVRAI DS    CL5                 Server ASID                                  
         DS    C                                                                
TWASVRST DS    CL20                Server status                                
TWASVRTL EQU   *-TWASVRT                                                        
                                                                                
TWASVRSL EQU   *-TWASVRSD                                                       
                                                                                
TWAQUESD DSECT ,                   ** Layout of queue status **                 
                                                                                
TWAQUECQ EQU   1                   Queue status starts in column 2              
TWAQUEH  DS    XL8                 Queue status field header                    
                                                                                
TWAQUET  DS    0C                  ** Queue display line **                     
TWAQUE#  DS    CL3                 Entry number                                 
         DS    C                                                                
TWAQUELI DS    0CL7                Locking id                                   
TWAQUEFI DS    C                   FACPAK id                                    
TWAQUETI DS    C                   Task id                                      
TWAQUEAI DS    CL5                 ASID                                         
         DS    C                                                                
TWAQUEET DS    CL8                 Queue entry arrival time                     
         DS    C                                                                
TWAQUETY DS    CL(L'SVNTNAM)       Server type                                  
         DS    C                                                                
TWAQUEWK DS    CL22                Worker key id                                
         DS    C                                                                
TWAQUEST DS    CL10                Queue entry status                           
         DS    C                                                                
TWAQUEER DS    CL3                 Error return code                            
TWAQUETL EQU   *-TWAQUET                                                        
                                                                                
TWAQUESL EQU   *-TWAQUESD                                                       
                                                                                
TWAPFKLD DSECT ,                   ** Layout of PfKey line **                   
                                                                                
TWAPFKCQ EQU   1                   PfKeys start in column 2                     
TWAPFKH  DS    XL8                 PfKey field header                           
TWAPFKT  DS    CL79                PfKey text                                   
                                                                                
TWAPFKLL EQU   *-TWAPFKLD                                                       
                                                                                
TWASTATD DSECT ,                   ** Layout of statistics line **              
                                                                                
TWASTACQ EQU   1                   Statistics starts in column 2                
TWASTAH  DS    XL8                 Statistics field header                      
                                                                                
TWASTAT  DS    CL(L'STATTEXT)      Statistics text                              
TWASTAV  DS    CL14                Statistics value                             
TWASTATL EQU   *-TWASTATD                                                       
         EJECT                                                                  
*ACGENFILE                                                                      
         PRINT OFF                                                              
       ++INCLUDE ACGENFILE                                                      
         PRINT ON                                                               
*ACOFFALD                                                                       
         PRINT OFF                                                              
       ++INCLUDE ACOFFALD                                                       
         PRINT ON                                                               
*CTGENFILE                                                                      
         PRINT OFF                                                              
       ++INCLUDE CTGENFILE                                                      
         PRINT ON                                                               
*DDCOMFACS                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDCOMFACS                                                      
         PRINT ON                                                               
*DDDDEQUS                                                                       
         PRINT OFF                                                              
       ++INCLUDE DDDDEQUS                                                       
         PRINT ON                                                               
*DDFLDHDR                                                                       
         PRINT OFF                                                              
       ++INCLUDE DDFLDHDR                                                       
FLDHDRL  EQU   FLDDATA-FLDLEN                                                   
         PRINT ON                                                               
*DDMASTD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DDMASTD                                                        
         PRINT ON                                                               
*DDRUNNERD                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDRUNNERD                                                      
RUNFACSD DSECT ,                                                                
RQUETIM  DS    F                                                                
RTOTTIM  DS    F                                                                
         PRINT ON                                                               
*DDSOFDATD                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDSOFDATD                                                      
         PRINT ON                                                               
*DDWRKIOD                                                                       
         PRINT OFF                                                              
WRKIOD   DSECT ,                                                                
       ++INCLUDE DDWRKIOD                                                       
         PRINT ON                                                               
*DMWRKFD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DMWRKFD                                                        
         PRINT ON                                                               
*DMWRKRK                                                                        
         PRINT OFF                                                              
       ++INCLUDE DMWRKRK                                                        
         PRINT ON                                                               
*DMREQHDRA                                                                      
         PRINT OFF                                                              
       ++INCLUDE DMREQHDRA                                                      
         PRINT ON                                                               
*FAGETTXTD                                                                      
         PRINT OFF                                                              
       ++INCLUDE FAGETTXTD                                                      
         PRINT ON                                                               
*FATABSD                                                                        
         PRINT OFF                                                              
       ++INCLUDE FATABSD                                                        
         PRINT ON                                                               
*FATABSRUN                                                                      
         PRINT OFF                                                              
       ++INCLUDE FATABSRUN                                                      
         PRINT ON                                                               
*FASYSFAC                                                                       
         PRINT OFF                                                              
       ++INCLUDE FASYSFAC                                                       
         PRINT ON                                                               
*FASSB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FASSB                                                          
         PRINT ON                                                               
*FASSBOFF                                                                       
         PRINT OFF                                                              
       ++INCLUDE FASSBOFF                                                       
         PRINT ON                                                               
*FATABSDEQU                                                                     
         PRINT OFF                                                              
       ++INCLUDE FATABSDEQU                                                     
         PRINT ON                                                               
*FATCB                                                                          
         PRINT OFF                                                              
       ++INCLUDE FATCB                                                          
         PRINT ON                                                               
*FATWA                                                                          
         PRINT OFF                                                              
       ++INCLUDE FATWA                                                          
TWAMSGH  DS    XL8                 Message header                               
TWAMSG   DS    CL60                Message text                                 
                                                                                
TWASVCH  DS    XL8                 Service request field header                 
TWASVC   DS    CL17                Service request field                        
         PRINT ON                                                               
*FATIOB                                                                         
         PRINT OFF                                                              
       ++INCLUDE FATIOB                                                         
         PRINT ON                                                               
*GEDDEQUS                                                                       
         PRINT OFF                                                              
       ++INCLUDE GEDDEQUS                                                       
         PRINT ON                                                               
*DDCOREQUS                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDCOREQUS                                                      
         PRINT ON                                                               
*DDGLOBEQUS                                                                     
         PRINT OFF                                                              
       ++INCLUDE DDGLOBEQUS                                                     
         PRINT ON                                                               
*DDGLVXCTLD                                                                     
         PRINT OFF                                                              
       ++INCLUDE DDGLVXCTLD                                                     
         PRINT ON                                                               
*DDLINKIOD                                                                      
         PRINT OFF                                                              
LIOBD    DSECT ,                                                                
       ++INCLUDE DDLINKIOD                                                      
         PRINT ON                                                               
*DDMINBLK                                                                       
         PRINT OFF                                                              
       ++INCLUDE DDMINBLK                                                       
         PRINT ON                                                               
*DDOFFICED                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDOFFICED                                                      
OFCLIST  DS    0C                  List of offices built here                   
         PRINT ON                                                               
*DDTSARD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DDTSARD                                                        
         PRINT ON                                                               
*DDBUFFD                                                                        
         PRINT OFF                                                              
       ++INCLUDE DDBUFFD                                                        
         PRINT ON                                                               
*FAFACTS                                                                        
         PRINT OFF                                                              
       ++INCLUDE FAFACTS                                                        
         PRINT ON                                                               
*FASECRETD                                                                      
         PRINT OFF                                                              
       ++INCLUDE FASECRETD                                                      
         PRINT ON                                                               
*FAUTL                                                                          
         PRINT OFF                                                              
       ++INCLUDE FAUTL                                                          
         PRINT ON                                                               
*FATSTTAB                                                                       
         PRINT OFF                                                              
       ++INCLUDE FATSTTAB                                                       
         PRINT ON                                                               
*FAXTRAINF                                                                      
         PRINT OFF                                                              
       ++INCLUDE FAXTRAINF                                                      
         PRINT ON                                                               
*FAWSSVRD                                                                       
         PRINT OFF                                                              
       ++INCLUDE FAWSSVRD                                                       
         PRINT ON                                                               
*CTGENRFP                                                                       
         PRINT OFF                                                              
       ++INCLUDE CTGENRFP                                                       
         PRINT ON                                                               
*GEGENARC                                                                       
         PRINT OFF                                                              
       ++INCLUDE GEGENARC                                                       
         PRINT ON                                                               
*GERFPIOD                                                                       
         PRINT OFF                                                              
RFPIOD   DSECT ,                                                                
       ++INCLUDE GERFPIOD                                                       
         PRINT ON                                                               
*GEGENSDR                                                                       
         PRINT OFF                                                              
       ++INCLUDE GEGENSDR                                                       
         PRINT ON                                                               
*FACIDTABD                                                                      
         PRINT OFF                                                              
       ++INCLUDE FACIDTABD                                                      
FACITABL EQU   *-FACITABD                                                       
         PRINT ON                                                               
*SEACSFILE                                                                      
         PRINT OFF                                                              
       ++INCLUDE SEACSFILE                                                      
                                                                                
SAPEREC  DSECT ,                                                                
         ORG   SAPESUB+L'SAPESUB                                                
SAPEFILL DS    XL(SAPEAGY-*)                                                    
                                                                                
SAOCREC  DSECT ,                                                                
         ORG   SAOCSUB+L'SAOCSUB                                                
SAOCFILL DS    XL(SAOCAGY-*)                                                    
                                                                                
SAFCREC  DSECT ,                                                                
         ORG   SAFCSUB+L'SAFCSUB                                                
SAFCFILL DS    XL(SAFCAGY-*)                                                    
                                                                                
SAASREC  DSECT ,                                                                
         ORG   SAASSUB+L'SAASSUB                                                
SAASFILL DS    XL(SAASAGY-*)                                                    
                                                                                
SARCREC  DSECT ,                                                                
         ORG   SARCSUB+L'SARCSUB                                                
SARCFILL DS    XL(SARCOVS-*)                                                    
                                                                                
SAAGREC  DSECT ,                                                                
         ORG   SAAGSUB+L'SAAGSUB                                                
SAAGFILL DS    XL(SAAGAGY-*)                                                    
                                                                                
         PRINT ON                                                               
                                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'028DDLINK    10/07/20'                                      
         END                                                                    
