*          DATA SET DDPAPTIEHP AT LEVEL 001 AS OF 10/30/17                      
*PROCESS USING(WARN(15))                                                        
*PHASE PAPTIEPA                                                                 
*INCLUDE REGSAVE                                                                
*INCLUDE KHDUMMY                                                                
*INCLUDE DDINFO                                                                 
*INCLUDE PRINT                                                                  
*INCLUDE PRINTER                                                                
         TITLE 'PERFORM LOADLIB MEMBER ACTIONS VIA IEHPROGM'                    
PAPTIEP  CSECT                                                                  
         PRINT NOGEN                                                            
         NBASE 0,*PAPTIEP,=V(REGSAVE)                                           
*                                                                               
***********************************************************************         
*                                                                               
* This program addresses a specific issue pertaining to the PanAPT              
* "LOAD" jobs, viz.: as originally architected, the "LOAD" jobs often           
* used to complete with RC=8 when there was really nothing wrong. I.e.,         
* it was very common to get false positive error return codes from the          
* "LOAD" jobs. This program was written to prevent that from happening.         
*                                                                               
* This program requires a DD allocation for $$LLIB$$, which is the              
* load library to be processed by IEHPROGM.                                     
*                                                                               
* Additional input to this program is generated by the JRXUTIL CLIST.           
* JRXUTIL generates output control cards from which IEHPROGM control            
* cards can be constructed.                                                     
*                                                                               
* Here's the main point: JRXUTIL (by design) constructs all possible            
* control cards for all possible situations. It does not know in                
* advance whether a given call to IEHPROGM will be successful, because          
* it does not modify its behavior based upon the existence or                   
* non-existence of a particular load module. What JRXUTIL *does* know           
* is the *highest* permissable IEHPROGM return code for each call.              
*                                                                               
* For example, if a Move Request is being promoted to STGE, we call             
* IEHPROGM to scratch any pre-existing "A" versions from LOADLIB. But           
* it is entirely possible that one or more "A" versions *do not already         
* exist* on LOADLIB. Since JRXUTIL knows that this is a legitimate              
* outcome, it indicates on its output cards that these calls to                 
* IEHPROGM can legitimately result in a return code as high as *8*.             
*                                                                               
* On the other hand, if a Move Request is being promoted to PROD, then          
* JRXUTIL knows that the rename of the "A" load module to its                   
* corresponding production name cannot legitimately fail. So JRXUTIL            
* says that the highest allowable return code from IEHPROGM in this             
* scenario is *zero*.                                                           
*                                                                               
* Hence the problem: in the original architecture, the "LOAD" jobs              
* often completed with RC=8 when there was no real issue, because               
* IEHPROGM was called *expecting* the possibility of a severity 8               
* error. That made it look to the naked eye as though an error had              
* occurred when all was well.                                                   
*                                                                               
* And so: this program was written to deal with this issue. We read the         
* JRXUTIL output dataset, and we construct the IEHPROGM control cards           
* to perform the SCRATCH and RENAME operations needed during a Move             
* Request promotion or backout. We iterate through the JRXUTIL output           
* cards, calling IEHPROGM programmatically for each card. Upon return           
* from each call to IEHPROGM, we examine the return code. JRXUTIL has           
* already told us (in its output cards) the highest permissable return          
* code from each call to IEHPROGM, so we know what to expect.                   
*                                                                               
* If *any* of the IEHPROGM invocations results in a return code that is         
* higher than the highest allowable return code, then this program will         
* exit with RC = 16. Otherwise, we exit with RC = 0.                            
*                                                                               
***********************************************************************         
*                                                                               
         L     RA,=V(CPRINT)                                                    
         USING DPRINT,RA                                                        
*                                                                               
         GOTO1 =V(DDINFO),DMCB,(8,=C'$$LLIB$$'),=AL2(DINRTDSN)                  
         LTR   RF,RF                                                            
         JNZ   *+2                 THIS CAN NEVER LEGITIMATELY FAIL             
         L     R1,DMCB+8                                                        
         MVC   DSNCOMMA,0(R1)      RETURNED DSN                                 
         LLC   R2,DMCB+8           RETURNED L'DSN                               
         MVC   P(6),=C'DSN = '                                                  
         MVC   P+6(44),DSNCOMMA                                                 
         GOTO1 =V(PRINTER)                                                      
         LA    R2,DSNCOMMA(R2)                                                  
         MVI   0(R2),C','          DELIMIT THE DSN WITH A COMMA                 
*                                                                               
         GOTO1 =V(DDINFO),DMCB,(8,=C'$$LLIB$$'),=AL2(DINRTVOL)                  
         LTR   RF,RF                                                            
         JNZ   *+2                 THIS CAN NEVER LEGITIMATELY FAIL             
         CLI   DMCB+8,6            RETURNED L'VOLSER                            
         JNE   *+2                 L'VOLSER CAN ONLY BE 6 !                     
         L     RE,DMCB+8                                                        
         MVC   VOLSER,0(RE)        RETURNED VOLSER                              
         MVC   P(9),=C'VOLSER = '                                               
         MVC   P+9(6),VOLSER                                                    
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         OPEN  INFILE              JRXUTIL OUTPUT DATASET                       
*                                                                               
GETNEXT  DS    0H                                                               
         GET   INFILE,CARDIN                                                    
*                                                                               
         MVI   P,0                 SKIP A LINE                                  
         GOTO1 =V(PRINTER)                                                      
         MVC   P(26),=C'CONTROL CARD FROM JRXUTIL:'                             
         GOTO1 =V(PRINTER)                                                      
         MVC   P(80),CARDIN        PRINT JRXUTIL CARD                           
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         CLC   =C'DELETE',CARDIN   DELETE REQUIRED?                             
         BNE   CHK_REN                                                          
*                                                                               
         OPEN  (SYSIN,OUTPUT)      CONSTRUCT SCRATCH CONTROL CARDS              
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD(16),=C' SCRATCH DSNAME='                                    
         MVC   CARD+16(45),DSNCOMMA                                             
         MVI   CARD+71,C'X'        CONTINUATION                                 
         PUT   SYSIN,CARD                                                       
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD+15(7),=C'MEMBER='                                           
         LA    RF,CARD+22                                                       
         LA    R1,CARDIN+7         BEGINNING OF MEMBER NAME                     
*                                                                               
         DO    WHILE=(CLI,0(R1),NE,C' ')                                        
           MVC   0(1,RF),0(R1)     MOVE IN ONE CHARACTER AT A TIME              
           LA    R1,1(R1)                                                       
           LA    RF,1(RF)                                                       
         ENDDO                                                                  
*                                                                               
         MVI   0(RF),C','          END WITH COMMA                               
         MVI   CARD+71,C'X'        CONTINUATION                                 
         PUT   SYSIN,CARD                                                       
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD+15(10),=C'VOL=SYSDA='                                       
         MVC   CARD+25(6),VOLSER                                                
         PUT   SYSIN,CARD                                                       
         CLOSE SYSIN                                                            
         B     LINK_IEHPROGM       CALL IEHPROGM                                
*                                                                               
CHK_REN  DS    0H                                                               
         CLC   =C'RENAME',CARDIN   RENAME REQUIRED?                             
         BNE   ENDLOOP                                                          
*                                                                               
         OPEN  (SYSIN,OUTPUT)      CONSTRUCT RENAME CONTROL CARDS               
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD(15),=C' RENAME DSNAME='                                     
         MVC   CARD+15(45),DSNCOMMA                                             
         MVI   CARD+71,C'X'        CONTINUATION                                 
         PUT   SYSIN,CARD                                                       
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD+15(7),=C'MEMBER='                                           
         LA    RF,CARD+22                                                       
         LA    R1,CARDIN+7         BEGINNING OF OLD MEMBER NAME                 
         DO    WHILE=(CLI,0(R1),NE,C' ')                                        
           MVC   0(1,RF),0(R1)     MOVE IN ONE CHARACTER AT A TIME              
           LA    R1,1(R1)                                                       
           LA    RF,1(RF)                                                       
         ENDDO                                                                  
*                                                                               
         MVI   0(RF),C','          END WITH COMMA                               
         MVI   CARD+71,C'X'        CONTINUATION                                 
         PUT   SYSIN,CARD                                                       
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD+15(8),=C'NEWNAME='                                          
         LA    RF,CARD+23                                                       
         LA    R1,CARDIN+17        BEGINNING OF NEW MEMBER NAME                 
         DO    WHILE=(CLI,0(R1),NE,C' ')                                        
           MVC   0(1,RF),0(R1)     MOVE IN ONE CHARACTER AT A TIME              
           LA    R1,1(R1)                                                       
           LA    RF,1(RF)                                                       
         ENDDO                                                                  
         MVI   0(RF),C','          END WITH COMMA                               
         MVI   CARD+71,C'X'        CONTINUATION                                 
         PUT   SYSIN,CARD                                                       
*                                                                               
         MVC   CARD,SPACES                                                      
         MVC   CARD+15(10),=C'VOL=SYSDA='                                       
         MVC   CARD+25(6),VOLSER                                                
         PUT   SYSIN,CARD                                                       
         CLOSE SYSIN                                                            
*                                                                               
LINK_IEHPROGM DS 0H                                                             
*                                                                               
* NOTE: THIS IS AN APF-AUTHORIZED CALL. IT'S MANDATORY THAT ALL OF THE          
*       LOAD LIBRARIES IN THE CONCATENATION FOR THIS LOAD MODULE (I.E.,         
*       STEPLIB OR JOBLIB) ARE APF-AUTHORIZED. OTHERWISE THIS CALL WILL         
*       ABEND.                                                                  
*                                                                               
         LINK  EP=IEHPROGM,PARAM=(OPTLIST),VL=1     APF-AUTHORIZED CALL         
         LR    R2,RF               SAVE RETURN CODE                             
*                                                                               
         MVC   P(25),=C'IEHPROGM RETURN CODE = XX'                              
         EDIT  (R2),(2,P+23),ALIGN=LEFT,ZERO=NOBLANK                            
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         LLC   R0,CARDIN+32        MAX ALLOWABLE RETURN CODE IN EBCDIC          
         N     R0,=X'0000000F'     SAME, BUT IN BINARY                          
         IF    CR,R2,NH,R0         IS IEHPROGM RETURN CODE HIGHER?              
           MVC  P(17),=C'RESULT ACCEPTABLE'  NO                                 
         ELSE                                                                   
           MVC  RETCODE,=F'16'               YES: WE'LL RETURN A 16             
           MVC  P(42),=C'*** ERROR: ALLOWABLE RETURN CODE EXCEEDED!'            
         ENDIF                                                                  
*                                                                               
         GOTO1 =V(PRINTER)                                                      
*                                                                               
ENDLOOP  DS    0H                                                               
         B     GETNEXT             LOOK FOR MORE ACTIONS TO PERFORM             
*                                                                               
CLOSE    DS    0H                                                               
         CLOSE INFILE              WE'VE PROCESSED ALL JRXUTIL CARDS            
*                                                                               
         MVI   P,0                 SKIP A LINE                                  
         GOTO1 =V(PRINTER)                                                      
         IF    CLC,RETCODE,EQ,=F'0'  PRINT FINAL MESSAGE                        
           MVC  P(31),=C'ALL IEHPROGM RESULTS ACCEPTABLE'                       
         ELSE                                                                   
           MVC  P(69),=C'*** AT LEAST ONE IEHPROGM FAILURE ENCOUNTERED.+        
                RETURN CODE SET TO 16.'                                         
         ENDIF                                                                  
         GOTO1 =V(PRINTER)                                                      
*                                                                               
         XBASE RC=RETCODE                                                       
         SPACE 3                                                                
         LTORG                                                                  
         EJECT                                                                  
DUB      DS    D                                                                
DMCB     DS    6F                                                               
WORK     DS    CL17                                                             
*                                                                               
RETCODE  DC    F'0'                DEFAULT RETURN CODE = ZERO                   
VOLSER   DS    CL6                                                              
DSNCOMMA DC    CL44' ',C' '        DSN FOLLOWED IMMEDIATELY BY COMMA            
*                                                                               
* SEE IBM MANUAL "DFSMSdfp Utilities" FOR IEHPROGM PARAMETER DETAILS.           
OPTLIST  DC    H'0'                PARAMETERS TO IEHPROGM                       
*                                                                               
CARDIN   DS    CL80                INPUT CARD (AS WRITTEN BY JRXUTIL)           
CARD     DS    CL80                IEHPROGM CONTROL CARD                        
*                                                                               
INFILE   DCB   DDNAME=INFILE,DSORG=PS,MACRF=GM,EODAD=CLOSE                      
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB                 
         SPACE 3                                                                
         IEFZB4D2                                                               
         SPACE 3                                                                
* DDDPRINT                                                                      
         PRINT OFF                                                              
       ++INCLUDE DDDPRINT                                                       
         PRINT ON                                                               
         SPACE 3                                                                
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'001DDPAPTIEHP10/30/17'                                      
         END                                                                    
