*          DATA SET FRLU62SERV AT LEVEL 005 AS OF 05/01/02                      
***  TO DO LIST  NEED TO MAKE RE-ENTRANT, ADD SENSE ON CNOS FAILURES            
***  CHECK RETURN CODES ON CNOS CALLS.                                          
LU62SERV CSECT                                                                  
LU62SERV AMODE 24                                                               
LU62SERV RMODE 24                                                               
         ENTRY LU62SERV                                                         
         ENTRY LU62SER2                                                         
         ENTRY MSGMOVE                                                          
         USING *,RF                                                             
         STM   RE,RC,12(RD)  SAVE REGS IN CALLER SAVE AREA                      
         BASR  RC,0                                                             
         USING *,RC                                                             
USINGX   LA    R8,1             INDICATE ENTRY POINT 1 ENTERED                  
         B     LUBEGIN          GO TO MAIN ROUTINE                              
         DC    C'&SYSDATE &SYSTIME'                                             
         PRINT NOGEN                                                            
         USING SAVEMAP,RD                                                       
LU62SER2 STM   RE,RC,REG14    SAVE REGS IN CALLER SAVE AREA                     
         DROP  RD                                                               
         BASR  RC,0                                                             
         USING *,RC                                                             
         LA    R8,2            INDICATE ENTRY TYPE 2                            
LUBEGIN  EQU   *                                                                
         BASR  RB,0                                                             
         USING *,RB                                                             
         LR    R5,RE           SAVE RETURN ADDRESS EXPLICITLY                   
         LR    R6,RF           SAVE ENTRY ADDRESS                               
         LR    R7,R1           SAVE INPUT PARM REG                              
         CH    R8,=H'2'        ENTRY NO 2?                                      
         BE    ENTRY2D                                                          
         L     R0,SIZE                                                          
         GETMAIN R,LV=(0)                                                       
         LR    RA,R1                                                            
         B     CHAINSAV                                                         
ENTRY2D  EQU   *                ALTERNATE DYNAMIC AREA                          
         L     R1,4(,R7)        GET P2                                          
         L     RA,0(,R1)        GET TOKEN, THE DYNAMIC AREA                     
         LTR   RA,RA                                                            
         BZ    BADTOKEN                                                         
         USING DATA,RA                                                          
         MVC   ID(4),=C'LU62'                                                   
         L     R1,ENTADDR                                                       
CHAINSAV ST    RD,SAVE+4       SAVE CALLERS SAVE AREA IN MINE                   
         LA    R3,SAVE          GET ADDRESS OF MY SAVE AREA                     
         ST    R3,8(RD)         STORE MY SAVE AREA IN HIS                       
         LR    RD,R3            SET R13 TO MY SAVE AREA                         
         ST    R5,RETADDR       CALLERS ADDRESS                                 
         ST    R7,INPARM        SAVE INPUT PARMS                                
         USING CALLPRMS,R7                                                      
         L     R1,P1            GET P1                                          
         ST    R1,INPARM2       SAVE INPUT PARMS (P1) OPTIONS ADDRESS           
         CH    R8,=H'2'         ENTRY NO 2?                                     
         BNE   BEGNOPEN         NO, THEN DO OPEN INITIALIZATION                 
         PRINT NOGEN                                                            
ENTRYTST EQU   *                                                                
         SR    R1,R1                                                            
         ST    R1,LOGSNAP      INDICATE NO SNAP DCB                             
         L     R5,P1           REG 7 HAS REG 1'S VALUE                          
         MVC   OPTION(2),0(R5) SAVE OPTION VALUE                                
         CLI   0(R5),C'R'      IS IT A RECEIVE REQUEST                          
         BE    RECVENT                                                          
         CLI   0(R5),C'S'      IS IT A SEND DATA REQUEST                        
         BE    SENDENT                                                          
*NOP     CLI   0(R5),C'P'      IS IT A PREPARE TO RECEIVE?                      
*NOP     BE    PREPENT                                                          
         CLI   0(R5),C'C'      IS IT A CLOSE REQUEST                            
         BE    CLOSE                                                            
         CLI   0(R5),C'D'      IS IT A DEALLOCATE REQUEST?                      
         BE    CLOSE                                                            
         CLI   0(R5),C'E'      IS IT AN EXTRACT /DISPLAY REQUEST                
         BE    QUERY                                                            
         CLI   0(R5),C'W'      IS IT A WAIT REQUEST (MAINLY FOR DEBUG)          
         MVC   WAITRSN,=C'WWWW'                                                 
         BE    ATTNWAIT                                                         
         LA    R1,ABEND102                                                      
         B     ABENDDMP                                                         
         DROP  R7                                                               
** NEED TO SET SESSION LIMITS TO 0 TO END THE SESSIONS                          
         EJECT                                                                  
EXIT     L     R3,ALU62ACB                                                      
         CLOSE (R3)             CLOSE THE VTAM ACB                              
EXIT2    EQU   *                                                                
         L     R0,SIZE          CAPTURE DATA NEEDED FOR FREEMAIN                
         LR    R1,RA            BEFORE REGS 2-12 ARE RESTORED                   
         L     RD,4(,RD)        GET PTR TO CALLERS SAVE AREA                    
         USING SAVEMAP,RD                                                       
         LM    R2,RC,REG02     RESTORE CALLER'S REGS                            
      FREEMAIN R,LV=(0),A=(1)                                                   
         SR    RF,RF            ZERO RETURN CODE                                
         L     RE,REG14         PICK UP RETURN ADDRESS                          
         BR    RE              RETURN TO CALLER                                 
         DROP  RD                                                               
EXITNF   EQU   *               EXIT BUT DON'T FREEMAIN AREA                     
         LR    R9,RF           SAVE RETURN CODE                                 
**  TEST HERE FOR SESSION LOSS TO FREE THE CT ENTRY                             
         L     R4,LOGSNAP      PICK UP DCB ADDRESS                              
         LTR   R4,R4                                                            
         BZ    SKIPCLOS                                                         
         CLOSE ((R4),)         CLOSE THE SNAP DCB SINCE IT RESIDES              
*                              IN STORAGE BEING FREED                           
         LTR   RF,RF                                                            
         BNZ   BADCLOSE                                                         
SKIPCLOS L     RD,4(,RD)        GET PTR TO CALLERS SAVE AREA                    
         USING SAVEMAP,RD                                                       
         L     RE,REG14                                                         
         LR    RF,R9            SET RETURN CODE VALUE                           
         LM    R2,RC,REG02      RESTORE REGS 2-12                               
         BR    RE               RETURN TO CALLER                                
         DROP  RD                                                               
BADCLOSE LA    R1,ABEND108                                                      
         B     ABENDDMP                                                         
BADTOKEN LA    R1,ABEND110                                                      
         B     ABENDDMP                                                         
         EJECT                                                                  
ABEND006 EQU   6         APPCCMD PRI CODE NOT IN OUR TABLE                      
ABEND007 EQU   7                                                                
ABEND008 EQU   08        TROUBLE WITH ECB LIST IN MASTER WAIT RTN               
ABEND033 EQU   33        PREP-RECEIVE ERROR                                     
*                                                                               
ABEND100 EQU   100       OPEN FAILED FOR SNAP DCB                               
ABEND101 EQU   101       OPEN FAILED FOR LOG DCB                                
ABEND102 EQU   102       UNKNOWN OPTION                                         
ABEND103 EQU   103       ACB DIDN'T OPEN                                        
ABEND108 EQU   108       BAD CLOSE  SNAP DCB                                    
ABEND109 EQU   109       CNOS FAILURE                                           
ABEND110 EQU   110       BAD TOKEN                                              
*                                                                               
ABEND201 EQU   201         P3 NOT PRESENT RECEIVER                              
ABEND202 EQU   202         P2 (TOKEN) NOT PRESENT RECEIVER                      
**  SEND FAILURES                                                               
ABEND301 EQU   301         P3 NOT PRESENT, SENDING                              
ABEND302 EQU   302         P2 (TOKEN) NOT PRESENT SENDER                        
ABEND304 EQU   304           CALLER SPECIFIED 0 LENGTH                          
*                                                                               
ABEND400 EQU   400           DEFUNCT                                            
ABEND401 EQU   401           UNKNOWN SEND SUB-OPTION                            
*                                                                               
ABEND666 EQU   666           LOSS OF VTAM'S SERVICE MANAGER SESSION             
ABENDDMP ABEND (R1),DUMP,, SER                                                  
ABEND    ABEND (R1),,,USER                                                      
         SPACE 3                                                                
RETCDE4  EQU   4             FUNCTION COMPLETED, BUT CHECK FLAGS                
RETCDE8  EQU   8                                                                
RETCDEC  EQU   12                                                               
RETCDEF  EQU   16                                                               
RETCD20  EQU   20            USER'S ECB WAS POSTED                              
        TITLE  'USER INTERFACE SECTION -- RECEIVE REQUESTS'                     
*--------------------------------------------------------------------*          
*    PROCESS THE USER INITIATED RECEIVE REQUESTS                     *          
*--------------------------------------------------------------------*          
RECVENT  EQU   *                                                                
         USING CALLPRMS,R7                                                      
         L     R1,P3          GET P3  -- ADDRESS OF F/L/BUFFER                  
         L     R3,P5          GET P5                                            
         N     R3,HIGHBIT                                                       
         ST    R1,SRDATAP3                                                      
         LTR   R3,R3          SEE IF HIGH ORDER BIT WAS ON IN P5                
         BZ    DOP6           NOT ON, P6 IS PRESENT                             
         SR    R3,R3          HIGH BIT ON, THUS NO P6 & NO ECB                  
         MVI   USERECBF,C'N'  INDICATE USER ECB IS NOT PRESENT                  
         B     SAVEP6                                                           
DOP6     L     R3,P6          LOAD ALTERNATE ECB ADDRESS (OPTIONAL)             
*                             WE DO THIS ON EACH ENTRY IN CASE IT'S             
*                             MOVED                                             
         MVI   USERECBF,C'Y'  INDICATE USER ECB IS PRESENT/VALID                
SAVEP6   ST    R3,USERECBA    SAVE FOR USE BY WAIT ROUTINE                      
         USING P3DATA,R1      MAP P3 DATA                                       
         XC    FLAGS,FLAGS    CLEAR THE FLAGS INFO                              
         CLI   SUBOPTN,C'D'   IS IT JUST A SIMPLE RECEIVE REQUEST?              
         BNE   RECV01         NO, GO CHECK FURTHER                              
RECVDATA LA    R3,LENGTH      GET BUFFER ADDRESS                                
         LH    R4,BUFFSIZE    GET BUFFER SIZE                                   
*        LA    R8,CTABLE     **** SPECIFIC CONVERSATION IMPLIED HERE            
*        ICM   R5,15,CTCONVID                                                   
         BAS   RE,RECVSUB     RECEIVE RECORD                                    
         B     EXITNF         REG 15 ALREADY SET                                
         DROP  R1,R7                                                            
         SPACE 2                                                                
RECV01   CLI   SUBOPTN,C' '   IS IT ANOTHER FORM OF RECV DATA?                  
         BE    RECVDATA                                                         
         USING CONVTBLE,R8                                                      
         LA    R8,CTABLE      GET CONV TABLE ENTRY, THIS REQUEST IS FOR         
         CLI   SUBOPTN,C'S'   IS IT A 'RQUEST TO SEND' REQUEST                  
         BE    RQSEND                                                           
         CLI   SUBOPTN,C'C'   IS IT A RQUEST TO SEND CONFIRMATION?              
         BE    SENDCNFM       YES, HANDLE                                       
         B     RECVOPTE       NO THEN UNKNOWN SUBOPTION                         
RQSEND   EQU   *                                                                
         MVI   CTSQUAL,RPL6RQSD     INDICATE REQUEST TO SEND                    
         B     RECVSEND             GO USE SEND NO-DATA                         
SENDCNFM MVI   CTSQUAL,RPL6CFMD     INDICATE CONFIRMED                          
RECVSEND EQU   *                                                                
         BAS   RE,SENDNODA                                                      
         LA    R1,MSG31                                                         
         DROP  R8                                                               
         CLI   SUBOPTN,C'S'   IS IT A RQUEST TO SEND REQUEST                    
         BE    RECVMSGM                                                         
         LA    R1,MSG24       CONFIRMATION MESSAGE                              
RECVMSGM L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         PUT   (R1),LOGLINE                                                     
         SR    RF,RF                                                            
         B     EXITNF                                                           
RECVOPTE ICM   R9,15,SUBOPTN    RECEIVE SUBOPTION ERROR                         
         DC    H'0'                                                             
OPTRECV  DC    C'D',X'80',AL1(RPL6DATA),AL4(RECVDATA)    RECV DATA              
         DC    C'C',X'00',AL1(RPL6CFMD),AL4(TEXTCFMD) RESPOND TO CONFIR         
         DC    C'S',X'00',AL1(RPL6RQSD),AL4(TEXTRQSD) REQUEST TO SEND           
*NOP     DROP   R2                                                              
        TITLE  'USER INTERFACE SECTION -- SEND REQUESTS '                       
*--------------------------------------------------------------------*          
*    PROCESS THE USER INITIATED SEND REQUESTS                        *          
*--------------------------------------------------------------------*          
SENDENT  DS    0H                                                               
         L     R3,8(,R7)      GET P3  -- ADDRESS OF F/L/BUFFER                  
         ST    R3,SRDATAP3                                                      
         USING P3DATA,R3      MAP SEND/RECEIVE DATA PARM                        
         XC    FLAGS,FLAGS    CLEAR THE FLAGS INFO                              
         XC    ERRORDAT,ERRORDAT                                                
         LH    R4,LENGTH                                                        
         LTR   R4,R4                  DO WE HAVE A ZERO LENGTH?                 
         BZ    SENDZERO               YES, THEN FAIL                            
         LA    R8,CTABLE      GET OUR CONVERSATION ENTRY                        
         LA    R1,MSG31                                                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+33(23),=C'SEND PROCESSING OPTION='                       
         MVC   LOGLINE+56(1),SUBOPTN                                            
         PUT   (R1),LOGLINE                                                     
         LA    R7,OPTSEND             GET SEND OPTION TABLE ADDRESS             
CHKSOPTN CLC   SUBOPTN(1),0(R7)       DO WE HAVE A MATCH?                       
         BE    DOSEND                 YES, GO DO THE FUNCTION                   
         LA    R7,7(,R7)              BUMP TO NEXT ENTRY                        
         CLI   0(R7),X'FF'            IS IT END OF THE TABLE                    
         BNE   CHKSOPTN               NO, CHECK THIS ENTRY                      
         B     SENDRECV               YES, CHECK FOR SEND-RECEIVE               
         USING CONVTBLE,R8        ACCESS OUR CONVERSATION TABLE                 
DOSEND   MVC   CTSQUAL(1),2(R7)   GET QUALIFY SETTING FROM TABLE                
         BE    SENDDATA                                                         
         DROP  R8                                                               
         SPACE                                                                  
SENDRECV EQU   *                                                                
         CLI   SUBOPTN,C'R'     IS IT A SWITCH TO RECEIVE REQUEST?              
         BNE   SOPTERR                                                          
         LA    R3,LENGTH                                                        
         BAS   RE,PREPRCV       SEND THE RECORD & TELL PARTNER                  
*                               HE IS NOW THE SENDER                            
         LH    R4,BUFFSIZE      GET BUFFER SIZE                                 
*NOP     XC    ECBAREA2,ECBAREA2 USER ECB NOT SUPPORTED HERE                    
*NOP     LA    R1,ECBAREA2                                                      
*NOP     O     R1,HIGHBIT       TURN ON HIGH ORDER BIT                          
*NOP     ST    R1,USERECBA      STORE IT IN MY ECBLIST                          
         BAS   RE,RECVSUB       RECEIVE A RECORD  (DO WE RETURN?)               
SENDEXIT B     EXITNF                                                           
         SPACE 2                                                                
         DROP  R3                                                               
SENDER1  LA    R1,ABEND400                                                      
         B     ABENDDMP                                                         
SOPTERR  LA    R1,ABEND401                                                      
         B     ABENDDMP                                                         
SENDZERO LA    R1,ABEND304                                                      
         B     ABENDDMP                                                         
         SPACE                                                                  
         DS    0H                                                               
OPTSEND  DC    C'D',X'00',AL1(RPL6DATA),AL4(TEXTDATA)    DATA                   
         DC    C'F',X'00',AL1(RPL6DFLU),AL4(TEXTDFLU)    FLUSH                  
         DC    C'C',X'00',AL1(RPL6DCON),AL4(TEXTDCON)    CONFIRM                
         DC    C'E',X'00',AL1(RPL6ERR),AL4(TEXTERR)      ERROR                  
         DC    X'FF'                                                            
         DC    C'R',X'80',AL1(0),AL4(SENDRECV)                                  
         DS    0H                                                               
MSG31OF1 EQU   TIMESTMP+19                                                      
MSG31OF2 EQU   TIMESTMP+31                                                      
      TITLE  ' APPCCMD MACRO SECTION   -- DEALLOC   '                           
*--------------------------------------------------------------------*          
*** DO DEALLOCATIONS    R8 HAS OUR CONVERSATION TABLE ENTRY                     
*--------------------------------------------------------------------*          
DEALMAC  DS    0H                                                               
         ST    RE,DEALR14                                                       
         USING CONVTBLE,R8                                                      
         ICM   R5,15,CTCONVID                                                   
         LA    R2,ASYRPL62          USE ASYNCH RPL                              
         USING IFGRPL,R2                                                        
         L     R6,RPLAAREA          GET RPL EXTENSION ADDRESS                   
         USING ISTRPL6X,R6                                                      
         XC    DEALECB,DEALECB      RESET ECB BEFORE WAIT                       
         MVC   RPL6QUAL,CTSQUAL     SET DESIRED QUALIFY VALUE                   
*  CONFIRMATION IS USED WITH DEALLOCATION SO PARTNER IS READY                   
         PRINT NOGEN                                                            
         APPCCMD  CONTROL=DEALLOC,RPL=(R2),QUALIFY=CONFIRM,            X        
               CONVID=(R5),OPTCD=ASY,ECB=DEALECB                                
         DROP  R2,R6                                                            
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   BADDEALL                                                         
         LTR   R0,R0                                                            
         BZ    DEALLOC1                                                         
BADDEALL LA    R4,CALLDCFM                                                      
         BAS   RE,ERRCHECK                                                      
DEALLOC1 ST    R2,DEALRPLA         SAVE ADDRESS OF RPL USED                     
         LA    R1,MSG30            ASY REQUEST MADE                             
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG30OFF(7),TEXTDEAL+1                                   
         PUT   (R1),LOGLINE                                                     
         XC    ATTNRSN,ATTNRSN     CLEAR ATTENTION REASON                       
         B     WAITLIST            GO TO MASTER WAIT/DISPATCHER                 
      TITLE  ' APPCCMD MACRO SECTION   -- SEND WITH DATA (ASYNC) '              
*--------------------------------------------------------------------*          
**                                                                              
**    COMMON  CONTROL=SEND  MACRO   QUALIFY SET DYNAMICALLY                     
**      INPUTS:   R4  = LENGTH TO SEND                                          
**                LENGTH  LABEL OF AREA TO SEND, BASED ON R                     
**                R7  = ADDRESS OF SEND SUB-OPTION TABLE ENTRY                  
**                R8  = CONVERSATION TABLE ENTRY ADDRESS                        
*--------------------------------------------------------------------*          
SENDDATA XC    SENDECB,SENDECB                                                  
         USING P3DATA,R3          MAP SEND/RECEIVE DATA PARM                    
         USING CONVTBLE,R8        ACCESS OUR CONVERSATION TABLE                 
         ICM   R5,15,CTCONVID     GET THE VTAM CONVERSATION ID                  
         USING IFGRPL,R2                                                        
         LA    R2,ASYRPL62        GET ADDRESS OF RPL TO USE                     
         L     R6,RPLAAREA        GET RPL EXTENSION                             
         USING ISTRPL6X,R6        RPL EXTENSION                                 
         MVC   RPL6QUAL,CTSQUAL   SET DESIRED QUALIFY VALUE                     
         PRINT NOGEN                                                            
         APPCCMD  CONTROL=SEND,RPL=(R2),CONVID=(R5),                   X        
               OPTCD=ASY,RECLEN=(R4),AREA=LENGTH,ECB=SENDECB                    
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   BADSEN01                                                         
         SR    R9,R9                                                            
         LTR   R0,R0                                                            
         BZ    SENDC01                                                          
BADSEN01 LA    R3,CALLDATA                                                      
         BAS   RE,ERRCHECK                                                      
         LR    R9,RF                                                            
SENDC01  ST    R2,SENDRPLA         SAVE ADDRESS OF RPL USED W/SEND              
         LA    R1,MSG30            ASY REQUEST MADE                             
         DROP  R3,R8                                                            
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         ICM   R4,15,3(R7)       GET ADDRESS OF MESSAGE INSERT TABLE            
         MVC   LOGLINE+MSG30OFF(7),1(R4)         SEE RPL6QUAL                   
         PUT   (R1),LOGLINE                                                     
         XC    ATTNRSN,ATTNRSN     CLEAR ATTENTION REASON                       
**                                                                              
**   BY VIRTUE OF THE SENDECB ABOVE, THE WAITLIST ROUTINE KNOWS TO              
**   RETURN CONTROL TO SENDCON2                                                 
**                                                                              
         B     WAITLIST           WAIT TILL ASYCH OPERATION COMPLETES           
      TITLE  ' APPCCMD MACRO SECTION   -- SEND WITH/OUT DATA '                  
*--------------------------------------------------------------------*          
**                                                                              
**   THE FOLLOWING SEND MACRO DOES NOT INVOLVE MOVEMENT OF DATA                 
**       REG 2  HAS RPL                                                         
**       REG 6  HAS RPL EXTENSION                                               
**       REG 8  HAS CONVERSATION TABLE ENTRY ADDRESS                            
**       MYQUAL  HAS APPCCMD QUALIFIER VALUE TO USE                             
*--------------------------------------------------------------------*          
SENDNODA DS    0H                                                               
         ST    RE,SNDNODRE        SAVE RETURN ADDRESS                           
         USING CONVTBLE,R8        ACCESS OUR CONVERSATION TABLE                 
         ICM   R5,15,CTCONVID       GET THE VTAM CONVERSATION ID                
         LA    R2,SYNRPL62          SYNCHRONOUS RPL                             
         USING IFGRPL,R2                                                        
         L     R6,RPLAAREA          GET RPL EXTENSION ADDRESS                   
         USING ISTRPL6X,R6                                                      
         MVC   RPL6QUAL,CTSQUAL     SET DESIRED QUALIFY VALUE                   
         PRINT NOGEN                                                            
         APPCCMD  CONTROL=SEND,RPL=(R2),                               X        
               CONVID=(R5),OPTCD=SYN,CONMODE=SAME                               
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   BADRQS01                                                         
         LTR   R0,R0                                                            
         BZ    RQSND01                                                          
BADRQS01 LA    R3,CALLRQSN                                                      
         BAS   RE,ERRCHECK              SETS R15                                
         LR    R9,RF                                                            
RQSND01  L     RE,SNDNODRE              LOAD RETURN ADDRESS                     
         BR    RE                                                               
         DROP  R2,R6,R8                                                         
      TITLE  ' APPCCMD MACRO SECTION   -- PREP RECEIVE   '                      
*--------------------------------------------------------------------*          
*       ISSUE THE PREPARE TO RECEIVE MACRO  (DONE BY A SENDER ONLY)             
*--------------------------------------------------------------------*          
PREPRCV  DS    0H                                                               
         ST     RE,PREPSAVE                                                     
         USING CONVTBLE,R8        ACCESS OUR CONVERSATION TABLE                 
         ICM   R5,15,CTCONVID     GET THE VTAM CONVERSATION ID                  
         LA    R2,SYNRPL62        PICK AN RPL TO USE                            
         USING IFGRPL,R2                                                        
         XC    PREPECB,PREPECB                                                  
**  CHANGED TO SWITCH CONVERSATION TO LOGICAL RECORD CONTINUE-ANY               
        APPCCMD  CONTROL=PREPRCV,RPL=(R2),QUALIFY=DATAFLU,             X        
               CONVID=(R5),AREA=(R3),RECLEN=(R4),                      X        
               OPTCD=SYN,CONMODE=LLCA                                           
*NOP           OPTCD=ASY,ECB=ECBAREA,CONMODE=SAME                               
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   BADFLU03                                                         
         LTR   R0,R0                                                            
         BZ    PREPEND                                                          
BADFLU03 EQU   *                                                                
         LA    R3,CALLDFL2                                                      
         BAS   RE,ERRCHECK                                                      
         LTR   RF,RF                                                            
         BZ    PREPEND                                                          
         LA    R1,ABEND033                                                      
         B     ABENDDMP                                                         
PREPEND  EQU   *                                                                
PREPCOMP DS    0H                                                               
         L     R6,RPLAAREA     GET READ-ONLY RPL EXTENSION ADDRESS WORD         
         USING ISTRPL6X,R6                                                      
         LA    R1,MSG32        XXXXXXX COMPLETE                                 
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG32OFF(7),TEXTPREC+1  GET MSG INSERT TEXT              
         MVC   LOGLINE+MSG32STA(1),RPL6CCST    GET CURRENT CONV STATE           
         DROP  R6,R8          DONE WITH RPL EXTENSION                           
         PUT   (R1),LOGLINE                                                     
         LA    R1,MSG31                                                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG31OF1(2),0(R3)  SET LENGTH                            
         MVC   LOGLINE+MSG31OF2(80),2(R3) SET DATA                              
         PUT   (R1),LOGLINE        PUT OUT RECORD                               
         L     RE,PREPSAVE                                                      
         BR    RE                                                               
BADCOND  DC    H'0'                                                             
         DROP  R2                                                               
      TITLE  ' APPCCMD MACRO SECTION   -- RECEIVE   '                           
*--------------------------------------------------------------------*          
*     THE PRIMARY PURPOSE OF THIS ROUTINE IS TO RECEIVE DATA FROM               
*     THE PARTNER PROGRAM.                                                      
*                                                                               
*        NEW VTAM 3.3  RPL6WPSH   PRESENTATION SERVICES HEADER RECEIV           
*        CONFIRMATION  RPL6WCFM                                                 
*        DEALLOCATION  RPL6WDAL                                                 
*--------------------------------------------------------------------*          
RECVSUB  EQU   *                                                                
         ST    RE,RECVSAVE                                                      
         LA    R2,ASYRPL62         USE AN ASYNCH RPL                            
         XC    RCVECB,RCVECB       CLEAR OUR ECB BEFORE WAITING                 
**  THE CONVERSATION ATTRIBUTE; CONTINUE MODE SET PREVIOUSLY                    
**                                                                              
**   CHANGED NOW TO DO ANY-MODE RECEIVES IN SUPPORT OF MULTIPLE                 
**   CONVERSATIONS                                                              
         PRINT NOGEN                                                            
         APPCCMD   CONTROL=RECEIVE,RPL=(R2),QUALIFY=ANY,               X        
               AREA=(R3),AREALEN=(R4),CONMODE=SAME,     CONVID=(R5),   X        
               OPTCD=ASY,ECB=RCVECB                     ,FILL=LL                
         PRINT NOGEN                                                            
         ST    R2,RCVRPLA          SAVE ADDRESS OF RPL USED W/RECEIVE           
         LTR   RF,RF                                                            
         BNZ   BADGEN04                                                         
         LTR   R0,R0                                                            
         BZ    RECVCON1                                                         
BADGEN04 LA    R4,CALLRCVR                                                      
         BAS   RE,ERRCHECK                                                      
         DC    H'0'                                                             
RECVCON1 LA    R1,MSG30            ASY REQUEST ISSUED                           
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG30OFF(7),TEXTRCV+1                                    
         MVC   LOGLINE+MSG30OFF+26(4),RCVRPLA                                   
         PUT   (R1),LOGLINE        WRITE MSG TO LOG FILE                        
         XC    ATTNRSN,ATTNRSN     CLEAR ATTENTION REASON                       
         B     WAITLIST            GO TO MASTER WAIT/DISPATCHER                 
        TITLE  '    QUERY + DISPLAY FUNCTIONS '                                 
QUERY    DS    0H                                                               
** NOW ASK VTAM TO DISPLAY THE MODE TABLE                                       
*        APPCCMD  CONTROL=OPRCNTL,QUALIFY=DISPLAY,RPL=(R2),         X           
*              OPTCD=SYN,AREA=(R9),AREALEN=64                                   
**             LOGMODE=0,                                                       
         LA    R1,MSG14                LOG WHERE WE ARE - CNOS ISSUED           
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         L     R1,LOG                                                           
         PUT   (R1),LOGLINE                                                     
         ST    R9,SNAPA1ST                                                      
         AH    R9,=H'64'                                                        
         O     R9,HIGHBIT       SET HIGH ORDER BIT FOR END OF LIST              
         ST    R9,SNAPA1EN                                                      
         LA    R9,SNAPLIST                                                      
         L     R4,LOGSNAP                                                       
*XA      SNAP  DCB=(R4),PDATA=REGS,LIST=(R9)   CNOS DISPLAY                     
        TITLE  '    CLOSE FUNCTIONS      '                                      
*    CP = CLOSE PREPARE  -- MEANS DEALLOCATION OF THE SESSION                   
*                           PARTNER NEEDS TO ACKNOWLEDGE W/CONFIRMATION         
*    C  = CLOSE          -- CLOSES ACB AND INVALIDATES THE TOKEN                
CLOSE    DS    0H                                                               
         L     R3,8(,R7)      GET P3  -- ADDRESS OF F/L/BUFFER                  
         ST    R3,SRDATAP3                                                      
         USING P3DATA,R3      MAP SEND/RECEIVE DATA PARM                        
         XC    FLAGS,FLAGS    CLEAR THE FLAGS INFO                              
         XC    ERRORDAT,ERRORDAT                                                
         DROP  R3                                                               
         CLI   SUBOPTN,C'P'   IS IT A DEALLOCATION REQUEST?                     
         BNE   CLSACB                                                           
         USING IFGRPL,R2                                                        
         LA    R2,ASYRPL62    GET ADDRESS OF RPL TO USE  ??                     
         CLI   RPLACTIV,X'FF'     IS RPL STILL ACTIVE                           
         BNE   CLOSE2             NO, SKIP CHECK                                
         L     R3,RPLECB          GET ECB ADDRESS                               
         TM    0(R3),RPLPOST      HAS IT BEEN POSTED?                           
         BNO   NOCHECK            NOT POSTED - AWKWARD SITUATION                
         APPCCMD  CONTROL=CHECK,RPL=(R2)                                        
         LTR   RF,RF                                                            
CLOSE2   DS    0H                                                               
         LA    R8,CTABLE                                                        
         USING CONVTBLE,R8                                                      
         MVI   CTSQUAL,RPL6CFRM   REQUEST CONFIRMATION                          
         BAS   RE,DEALMAC     GO DEALLOCATE THE CONVERSATION                    
         B     EXITNF                                                           
NOCHECK  LA    R5,24          ASYNC REQUEST NOT POSTED COMPLETE - RPL           
         B     EXITNF         IS STILL IN USE  MAYBE WE WAIT A SEC              
*                             SOMETIME IN THE FUTURE                            
CLSACB   EQU   *              NEED TO ADD IN CLOSE OF THE ACB                   
         L     R2,4(,R7)      GET P2                                            
         SR    R4,R4                                                            
         ST    R4,0(,R2)      INVALIDATE TOKEN (P2) VALUE                       
         B     EXIT                                                             
         TITLE  'PART III COMMON ROUTINES: ERROR ANALYSIS ROUTINE'              
**                                                                              
**    APPCCMD ERROR ANALYSIS ROUTINE                                            
**      (THIS ROUTINE ABENDS INTENTIONALLY IF THE CODE IS NOT OK)               
**                                                                              
CALLCNOS EQU   1                                                                
CALLALLC EQU   2                                                                
CALLFLSH EQU   3                                                                
CALLCHEK EQU   4                                                                
CALLRFMH EQU   6                                                                
CALLDATA EQU   7                                                                
CALLDFL2 EQU   9                                                                
CALLRCVR EQU   10                                                               
CALLDCON EQU   11                                                               
CALLDFLU EQU   12                                                               
CALLRQSN EQU   13                                                               
CALLCFMD EQU   14                                                               
CALLDCFM EQU   15                                                               
CALLCHK2 EQU   16                                                               
ERRCHECK DS     0H             COMMON ERROR HANDLER FOR APPCCMD MACROS          
**  RPL TO CHECK IS R2                                                          
         STM    R0,RE,SAVER14E    SAVE REGS IN CASE RC IS OK                    
         LR     R9,R0             SAVE REG 0 FROM APPCCMD                       
         LR     R8,RF             SAVE REG 15 FROM APPCCMD                      
         LA     R1,MSGER          LOG WHERE WE ARE - ERROR                      
         L      RF,AMSGMOVE                                                     
         BASR   RE,RF                                                           
         PUT    (R1),LOGLINE                                                    
         CH     R9,=H'11'     CHECK IF RPL EXTENSION HAS ERROR DATA             
*                         USF6APPC                                              
         BE     RPLXCHK                                                         
         DC     H'0'           SEE PAGES 178 & 179 FOR REG 0 VALUES             
         SPACE 2                                                                
RPLXCHK  EQU    *                                                               
         USING  IFGRPL,R2                                                       
         L      R5,RPLAAREA     GET RPL EXTENSION(ALTERNATE AREA)               
         DROP   R2                                                              
         USING  ISTRPL6X,R5                                                     
         SR     R2,R2                                                           
         SR     R7,R7                                                           
         ICM    R2,12,RPL6RCPR    XL2 FOLLOWED BY RCSC XL2                      
         LTR    R2,R2                                                           
         BNZ    ERR2                                                            
         LA     R7,RETCDE4     INDICATE ERROR SEVERITY OF 4                     
         B      ERREXIT                                                         
ERR2     SRL    R2,16          MOVE OVER 2 BYTES FOR COMPARES                   
         CH     R2,=H'72' X'48' SESSION TERMINATED.                             
         BE     ERRBAD          KNOWN CODE, LET USER HANDLE                     
         CH     R2,=H'8'       CNOS ERROR                                       
         BE     ERRBAD          KNOWN CODE, LET USER HANDLE                     
         CH     R2,=H'20' X'14' ABNORMALLY DEALLOCATED BY PARTNER               
         BE     ERRBAD          KNOWN CODE, LET USER HANDLE                     
         CH     R2,=H'44' X'2C' CONV-ID BAD(MOST LIKELY)                        
         BE     ERRBAD          KNOWN CODE, LET USER HANDLE                     
         CH     R2,=H'76' X'4C' RESOURCE FAILURE                                
         BE     ERRBAD          KNOWN CODE, LET USER HANDLE                     
         B      SHOWRPL                                                         
ERRBAD   LA     R7,RETCDEC     INDICATE ERROR SEVERITY OF 12                    
         L      R1,SRDATAP3                                                     
         LTR    R1,R1          IS IT ZERO AS WOULD BE THE CASE FOR OPEN         
         BZ     ERREXIT                                                         
         USING  P3DATA,R1                                                       
         MVC    ERRORDAT(4),RPL6RC                                              
         DROP   R1                                                              
ERREXIT  LA     R1,MSGEROK                                                      
         L      RF,AMSGMOVE                                                     
         BASR   RE,RF                                                           
         MVC    HEX2BYTE(2),RPL6RC           CONVERT FROM                       
         BAS    RE,FORMAT2                   HEX TO PRINTABLE                   
         MVC    LOGLINE+21(4),PRT2BYTE       PUT INTO OUTPUT                    
         MVC    LOGLINE+26(2),RPL6RC+2                                          
         PUT    (R1),LOGLINE                                                    
         LR     RF,R7             SET RETURN CODE BACK TO USER                  
         LM     R0,RE,SAVER14E    RESTORE ALL REGS                              
         BR     RE                                                              
         SPACE 2                                                                
SHOWRPL  EQU    *                                                               
** PRI CODE =X'48' MEANS SESSION DIED.                                          
         SR    R6,R6               CLEAR REG 6                                  
         ICM   R6,X'F',RPL6RC      PRIMARY + SEC (RCSC) CODE                    
         ICM   R4,X'F',RPL6SNSO    SENSE CODE                                   
         ICM   R8,X'F',RPL6SNSI    SENSE CODE                                   
*        ST    R5,SNAPA1ST         RPL EXTENSION START                          
*        LA    R5,200(,R5)         BUMP BY 200                                  
*        O     R5,HIGHBIT                                                       
*        ST    R5,SNAPA1EN                                                      
*        LA    R5,SNAPLIST                                                      
*        SNAP  DCB=LOGSNAP,PDATA=REGS,LIST=(R5),ID=99                           
         LA    R1,ABEND006                                                      
         B     ABENDDMP                                                         
NODUMP   LA    R1,ABEND007                                                      
         B     ABEND                                                            
SHOWBAD  DC    H'0'                                                             
         L     R4,ERRDATA     FEEDBACK CODE                                     
         L     R5,ERRDATA+4   SEE FOLLOWING IF ONLY IF THIS IS X'0B'            
*NOP     SHOWCB AM=VTAM,RPL=(R2),LENGTH=20,AREA=ERRDATA,         XX             
*NOP           FIELDS=(RTNCD,FDBK2,FDBK,USER)                                   
         DROP  R5                                                               
*        LTR   RF,RF                                                            
*        BNZ   SHOWBAD                                                          
         TITLE  'PART III MAIN WAIT ROUTINE    '                                
*--------------------------------------------------------------------*          
*     THIS IS THE MAIN WAIT  ROUTINE.                                           
*     IT RUNS UNDER THE PROGRAM'S NORMAL RB AND HANDLES THE POSTINGS            
*     OF VARIOUS ECB'S THUS ALLOWING ASYNCHRONUS OPERATIONS.                    
*     FROM THE ATTENTION EXIT THAT IS SCHEDULED BY VTAM AS AN IRB.              
*     THIS AVOIDS THE RESTRICTIVE ENVIRONMENT OF THE IRB.                       
*                                                                               
*--------------------------------------------------------------------*          
ATTNWAIT EQU   *         ENTRY IF WE ARE WAITING FOR AN ATTN EXIT               
         ST    RE,ATTNWR14       SAVE RETURN ADDRESS                            
         ST    R8,ATTNCTA        SAVE CONV TABLE ENTRY ADDRESS                  
         B     REWAIT2                                                          
REWAIT   XC    ATTNRSN,ATTNRSN         CLEAR REASON CODE                        
REWAIT2  LA    R1,MSG16                LOG WHERE WE ARE                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+50(4),WAITRSN   INDICATE REASON FOR WAITING              
         PUT   (R1),LOGLINE                                                     
WAITLIST EQU   *                   ISSUE WAIT WITHOUT MESSAGE                   
         CLI   USERECBF,C'Y'       IS USER'S ECB PRESENT?                       
*NOP     BE    USERWAIT            YES, INCLUDE IT IN THE WAIT                  
         WAIT  1,ECBLIST=MAINLIST  NO, USE REGULAR LIST                         
         B     CHEKPST2                                                         
USERWAIT WAIT  1,ECBLIST=USERECBA                                               
**                                                                              
**   ONE OR MORE ECBS IN THE LIST HAVE BEEN POSTED, GO CHECK THEM OUT           
**                                                                              
CHEKPOST EQU   *                                                                
         L     R1,USERECBA         GET USER'S ECB ADDRESS                       
         TM    0(R1),RPLPOST       HAS IT BEEN POSTED?                          
         BO    USERPOST            YES, HANDLE IT                               
CHEKPST2 TM    ATTNECB,RPLPOST     DID ATTENTION EXIT RUN?                      
         BO    ATTNRTN             YES, HANDLE IT                               
         TM    RCVECB,RPLPOST      DID A RECEIVE COMPLETE?                      
         BO    RECVPOST            YES, HANDLE IT                               
         TM    SENDECB,RPLPOST     DID A SEND COMPLETE?                         
         BO    SENDPOST            YES, HANDLE IT                               
         TM    DEALECB,RPLPOST     DID A DEALLOCATE COMPLETE?                   
         BO    DEALPOST            YES, HANDLE IT                               
         LA    R1,ABEND008         SOMETHING AMISS IN ECBLIST                   
         B     ABENDDMP                                                         
USERPOST LA    RF,RETCD20          INDICATE USER ECB WAS POSTED                 
         B     EXITNF              GO BACK TO CALLER                            
         SPACE                                                                  
***  NEED TO CHECK IF WE ARE WAITING FOR ATTENTION REASONS.                     
***  LOOKS LIKE WHAT WE NEED TO DO HERE IS TO LOOK THROUGH THE                  
***  ECBS AND FIND WHAT IS BEING WAITED ON AND THEN FORCE IT                    
***  TO COMPLETE                                                                
RECVPOST LA    RE,RECVCOMP       SETUP TO RESUME RECEIVE PROCESS                
         ST    RE,SAVER14        AFTER THE RPL IS CHECK'D                       
         L     R2,RCVRPLA        GET ADDRESS OF RPL TO CHECK                    
         B     CHECK             GO CHECK THE RPL                               
         SPACE                                                                  
SENDPOST LA    RE,SENDCOMP       SETUP TO PROCESS SEND COMPLETIONS              
         ST    RE,SAVER14        AFTER THE RPL IS CHECK'D                       
         L     R2,SENDRPLA       GET ADDRESS OF RPL TO CHECK                    
         B     CHECK             GO CHECK THE RPL                               
         SPACE                                                                  
DEALPOST LA    RE,DEALCOMP       SETUP TO RESUME DEALLOCATE PROCESS             
         ST    RE,SAVER14        AFTER THE RPL IS CHECK'D                       
         L     R2,DEALRPLA       GET ADDRESS OF RPL TO CHECK                    
         B     CHECK             GO CHECK THE RPL                               
         SPACE                                                                  
FMH5POST L     RE,=A(FMH5COMP)   SETUP TO RESUME FMH5 PROCESS                   
*NOP     ST    RE,SAVER14        AFTER THE RPL IS CHECK'D                       
*NOP     L     R2,FMH5RPLA       GET ADDRESS OF RPL TO CHECK                    
         DC    H'0'              GO CHECK THE RPL                               
         SPACE 3                                                                
         USING  IFGRPL,R2                                                       
CHECK    APPCCMD  CONTROL=CHECK,RPL=(R2)                                        
         LTR   RF,RF                                                            
         BNZ   BADGEN05                                                         
         LTR   R0,R0                                                            
         BZ    CHECK05                                                          
BADGEN05 LA    R3,CALLCHEK                                                      
         BAS   RE,ERRCHECK       NOTE -- SETS REG15                             
**                                                                              
**   CHECK TELLS US THAT VTAM IS DONE WITH THE RPL, NOW WE EXTRACT WHAT         
**   WE NEED FROM IT AND PLACE INTO THE CONVERSATION TABLE ENTRY THUS           
**   RELEASING THE RPL FOR OTHER APPCCMD MACRO OPERATIONS.                      
**                                                                              
CHECK05  L     R6,RPLAAREA        GET RPL EXTENSION                             
         USING ISTRPL6X,R6        RPL EXTENSION                                 
         L     R8,RPL6USR         USER FIELD-- OUR CONV TBLE E                  
         USING CONVTBLE,R8        MAP THE ENTRY                                 
         TM    CTSTATUS,CTINUSE   DID WE GET AN INUSE ENTRY?                    
         BNO   CTBAD1             NO, TROUBLE IN RIVER CITY                     
         MVC   CTSTATE,RPL6CCST   SAVE CURRENT CONV STATE                       
         MVC   CTWRMASK,RPL6RCV1  SAVE THE WHAT-RECEIVED MASK                   
         MVC   CTRTURNI,RPL6RTUN  SAVE THE RETURNED INFO                        
*** R8 IS PASSED ON TO THE NEXT ROUTINE                                         
         L     RE,SAVER14           RESTORE R14                                 
         BR    RE                                                               
CTBAD1   DC    H'0'                                                             
         DROP  R2,R6,R8                                                         
         EJECT                                                                  
*--------------------------------------------------------------------*          
*     IT IS POSSIBLE THAT VTAM WILL INVOKE THE ATTENTION EXIT                   
*     MULTIPLE TIMES IN QUICK SUCCESSION (I.E. WITHOUT GIVING THIS              
*     MAINLINE ROUTINE A CHANCE TO PROCESS IN BETWEEN).                         
*     AN INTERRUPT TABLE ENTRY IS THE METHOD BY WHICH INFORMATION IS            
*     PASSED FROM THE ATTENTION EXIT TO THIS ROUTINE                            
*                                                                               
*--------------------------------------------------------------------*          
*     AT THIS POINT ONE OR MORE ENTRIES IN THE INTERRUPT TABLE SHOULD           
*     BE IN USE AND AWAITING PROCESSING.  FIND THE ENTRY IN USE AND             
*     THEN LOOKUP THE ROUTINE TO PROCESS IT BASED UPON THE ATTENTION            
*     REASON CODE                                                               
*--------------------------------------------------------------------*          
ATTNRTN  XC    ATTNECB,ATTNECB   CLEAR THE ECB FOR REWAIT                       
         LA    R4,ITABAREA       GET INTERRUPT TABLE ADDRESS                    
         USING ITABLE,R4                                                        
ITEST    CLI   ISTATUS,IUSED     SHOULD WE PROCESS THIS ENTRY                   
         BE    PRCSATTN          YES, GO PROCESS HANDLE IT                      
         CLI   ISTATUS,X'FF'     ARE WE AT END OF TABLE?                        
         BE    ENDOFTBL                                                         
*                                CURRENTLY WE HANDLE ONE AND ONLY ONE           
         LA    R4,ITABLEN(0,R4)  NO, ADVANCE TO NEXT ENTRY                      
         B     ITEST             GO  CHECK IT'S STATUS                          
         SPACE 2                                                                
PRCSATTN LA    R1,MSG17          LOG WHERE WE ARE                               
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+40(4),IATTNRSN                                           
         PUT   (R1),LOGLINE                                                     
         LA    R6,ATTNTBL                                                       
CHCKRSN  CLC   IATTNRSN(4),0(R6) DO WE HAVE A MATCHING REASON CODE              
         BNE   ATTNNXT           NO, GO INCREMENT                               
         L     RF,4(R6)          YES, GET ROUTINE TO HANDLE REASON              
         BASR  RE,RF             GIVE CONTROL TO THE ROUTINE                    
*                                R4 PROVIDES ITABLE ENTRY ADDRESS               
*                                TO BE PROCESSED                                
         MVI   ISTATUS,IFREE     MARK THE ENTRY AS NOW FREE FOR REUSE           
         B     ATEXIT                                                           
ATTNNXT  LA    R6,8(,R6)         BUMP TO NEXT ENTRY                             
         CLI   0(R6),X'FF'       ARE WE AT END OF TABLE?                        
         BNE   CHCKRSN                                                          
         B     ATEXIT            NOT A KNOWN ATTN EXIT REASON                   
ATEXIT   CLC   WAITRSN,IATTNRSN  WAS THIS WHAT WE WERE WAITING FOR?             
         BNE   REWAIT            NO, WAIT SOME MORE                             
         XC    WAITRSN,WAITRSN   CLEAR WAIT REASON FIELD                        
         SR    RF,RF             ZERO RETCODE REGISTER                          
ATEXIT2  L     RE,ATTNWR14       YES, THEN RETURN TO CALLER                     
         BR    RE                                                               
ENDOFTBL DC    H'0'                                                             
         DROP  R4                                                               
         DS    0F                                                               
ATTNTBL  EQU   *                                                                
CNOSCNST DC    C'CNOS'              THE CHARACTER CONSTANTS SPECIFIED           
         DC    A(CNOSRTN2)                                                      
LOSSCNST DC    C'LOSS',A(LOSSRTN)   HERE ARE DEFINED BY VTAM                    
FMH5CNST DC    C'FMH5',A(FMH5RTN)                                               
**GNCNST DC    C'LOGN',A(LOGNRTN)      * NOT USED CURRENTLY                     
         DC    X'FF'   END OF TABLE DELIMITER                                   
         SPACE 2                                                                
LOSSRTN  DS    0H                                                               
         USING ITABLE,R4                                                        
         CLC   IMODE,SNASVCMG  IS IT VTAM'S CNOS HANDLER?                       
*** NEED TO SEARCH THE CTTABLE SO AS TO FREE ENTRIES                            
         BNE   LOSSXIT                                                          
         LA    R1,ABEND666     TERMINATE ROUTINE   <<< TEMP  >>>                
         B     ABEND                                                            
LOSSXIT  BR    RE              RETURN                                           
         DROP  R4                                                               
SNASVCMG DC    C'SNASVCMG'                                                      
*** IF THE LOSS COMES IN AFTER THE CONVERSATION HAS BEEN ESTABLISHED            
*** THEN IT IS UNLIKELY THAT THIS ROUTINE WILL GET CONTROL.  THE                
*** ERROR WILL BE REPORTED ON THE CURRENT/NEXT RPL OPERATION                    
*                           NOT ATTENTION EXIT REASON                           
  TITLE  ' HANDLE RECEIVE COMPLETIONS '                                         
**-------------------------------------------------------------------*          
**     THIS ROUTINE PROCESSES THE RESULTS OF A RECEIVE COMPLETION               
**     MOST NOTABLE IS THE HANDLING OF THE WHAT-RECEIVED FLAGS                  
**-------------------------------------------------------------------*          
RECVCOMP LTR   R9,RF               DID IT COMPLETE OK                           
         BNZ   RECVERR             NO, GO HANDLE RECEIVE ERRORS                 
         USING CONVTBLE,R8                                                      
* WHAT RECEIVED ANALYSIS  (SEQUENCE OF TESTS IS SIGNIFICANT)                    
         LA    R1,MSG32            LOG  RECEIVE COMPLETE                        
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
MSG32RTU EQU   39+TIMESTMP    LOCATION OF RPL6RTUN INSERT                       
MSG32STA EQU   50+TIMESTMP    LOCATION OF STATE INSERT                          
MSG32ID  EQU   TIMESTMP-2                                                       
         MVC   LOGLINE+MSG32ID(2),CTMYID                                        
         MVC   LOGLINE+MSG32RTU(1),CTRTURNI    GET RETURNED INFO                
         TM    CTRTURNI,RPL6RSIG                                                
         MVC   LOGLINE+MSG32STA(1),CTSTATE     GET CURRENT CONV STATE           
         STCM  R8,15,LOGLINE+70    PUT OUT THE USER FIELD FOR NOW               
         MVC   LOGLINE+MSG32OFF(7),TEXTRCV+1                                    
         PUT   (R1),LOGLINE                                                     
         LA    R1,MSG31            LOG  RECEIVE COMPLETE                        
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
*   HANDLE THE DATA PORTION  ASSUME FILL=LL                                     
         TM    CTWRMASK,RPL6WDAC   CHECK DATA COMPLETE                          
         BO    DODATA              YES DATA SENT                                
         TM    CTWRMASK,RPL6WDAI   CHECK DATA INCOMPLETE                        
         BNO   TESTCFM             NO, THEN NO DATA OF ANY SORT                 
DODATA   MVC   LOGLINE+MSG31OF1(2),0(R3)  SET LENGTH                            
         MVC   LOGLINE+MSG31OF2(80),2(R3) SET DATA                              
         PUT   (R1),LOGLINE        WRITE RECORD TO LOG FILE                     
         SR    RF,RF               OK RETURN CODE                               
         CLI   CTWRMASK,RPL6WDAC   IS IT JUST DATA?                             
         BE    RECVEND             YES, SKIP FURTHER TESTING                    
TESTCFM  TM    CTWRMASK,RPL6WCFM   CHECK CONFIRM INDICATOR                      
         BNO   TESTDALC                                                         
         LA    R1,MSG28                                                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+32(01),CTWRMASK                                          
         MVC   LOGLINE+34(6),=C'CONFRM'                                         
         PUT   (R1),LOGLINE        WRITE RECORD TO LOG FILE                     
         L     R1,SRDATAP3                                                      
         USING P3DATA,R1           MAP P3 DATA                                  
         OI    FLAGS,CNFMRQSD      INDICATE CONFIRMATION REQUESTED              
         DROP  R1                                                               
         LA    RF,RETCDE4          RETURN CODE = 4                              
**                                                                              
**                                                                              
TESTDALC TM    CTWRMASK,RPL6WDAL   CHECK DEALLOCATION                           
         BNO   TESTSEND                                                         
         LA    R1,MSG28           WHAT RECV'D                                   
         MVC   LOGLINE+36(06),TEXTDEAL                                          
**                                                                              
**    SETUP TO INVALIDATE THE CONVERSATION TABLE ENTRY                          
**                                                                              
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         PUT   (R1),LOGLINE     WRITE RECORD TO LOG FILE                        
         LA    RF,RETCDE8       RETURN CODE = 8                                 
         B     RECVEND                                                          
TESTSEND TM    CTWRMASK,RPL6WSND   CHECK SEND                                   
         BNO   TESTDINC                                                         
         LA    R1,MSG28           WHAT RECV'D                                   
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+36(L'SEND),SEND                                          
         PUT   (R1),LOGLINE    WRITE RECORD TO LOG FILE                         
         L     R5,SRDATAP3                                                      
         USING P3DATA,R5       MAP P3 DATA                                      
         OI    FLAGS,STOSEND   INDICATE SWITCH TO SEND MODE                     
         DROP  R5                                                               
         LA    RF,RETCDE4      RETURN CODE = 4                                  
         B     RECVEND                                                          
TESTDINC TM    CTWRMASK,RPL6WDAI   CHECK DATA INCOMPLET                         
         BNO   RECVEND                                                          
         LA    R1,MSG28            WHAT RECV'D                                  
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+36(6),=C'INCOMP'                                         
         MVC   LOGLINE+44(2),0(R3)     PUT OUT WHAT WE GOT                      
         PUT   (R1),LOGLINE    WRITE RECORD TO LOG FILE                         
         LA    RF,RETCDE4      RETURN CODE = 4                                  
         B     RECVEND                                                          
RECVERR  EQU   *                                                                
         LA    R1,MSG32           LOG  RECEIVE COMPLETE                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
**                                                                              
**    CHECK IF SESSION WENT AWAY, IF SO THEN INVALIDATE THE                     
**     CT-TABLE ENTRY                                                           
**                                                                              
         MVC   LOGLINE+MSG32OFF(7),=C'RCV-ERR'                                  
         STCM  R9,15,LOGLINE+MSG32OFF+8     PUT REGISTER OUT                    
         PUT   (R1),LOGLINE                                                     
         LR    RF,R9             RECEIVE ERROR RETURN CODE                      
RECVEND  L     RE,RECVSAVE                                                      
         BR    RE                                                               
  TITLE  ' SEND W/DATA COMPLETION PROCESSING '                                  
**-------------------------------------------------------------------*          
**                                                                              
**  INPUTS:   REG 4   SOME TABLE ENTRY                                          
**                8   OUR TABLE ENTRY                                           
**                9   RETURN CODE                                               
**                                                                              
**                                                                              
**-------------------------------------------------------------------*          
SENDCOMP LTR   R9,RF               SAVE RETURN CODE                             
         USING CONVTBLE,R8         MAP OUR CONVERSATION TABLE                   
         LA    R1,MSG32                                                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG32OFF(7),1(R4)                                        
         MVC   LOGLINE+MSG32RTU(1),CTRTURNI    GET RETURNED INFO                
         TM    CTRTURNI,RPL6RSIG                                                
         MVC   LOGLINE+MSG32STA(1),CTSTATE     GET CURRENT CONV STATE           
         PUT   (R1),LOGLINE                                                     
         LA    R1,MSG31                                                         
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         L     R3,SRDATAP3                                                      
         USING P3DATA,R3           MAP P3 DATA                                  
         MVC   LOGLINE+MSG31OF1(2),LENGTH  SET LENGTH                           
         MVC   LOGLINE+MSG31OF2(80),BUFFER SET DATA                             
         PUT   (R1),LOGLINE                                                     
         SR    RF,RF                                                            
         B     EXITNF                                                           
         DROP  R3,R8                                                            
  TITLE  ' DEALLOCATION COMPLETIONS   '                                         
DEALCOMP LA    R1,MSG32            OPERATION COMPLETED                          
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         PUT   (R1),LOGLINE                                                     
         SR    RF,RF                                                            
         L     RE,DEALR14         CHECK ON THIS                                 
         BR    RE                                                               
         TITLE  'PART III MAIN WAIT ROUTINE: CNOS RECEIPT        '              
*--------------------------------------------------------------------*          
*  THE FACT THAT THE CNOS ATTENTION EXIT HAS BEEN SCHEDULED IS THE              
*  SIGNAL THAT A PARTNER ROUTINE HAS "MADE CONTACT" AND ESTABLISHED             
*  ONE OR MORE VTAM SESSIONS (NOT CONVERSATIONS).                               
*                                                                               
*  THE EXIT CAPTURES KEY INFORMATION FROM THE "READ ONLY RPL" AND               
*  PLACES IT INTO AN INTERRUPT TABLE ENTRY.  THIS ROUTINE TAKES THIS            
*  DATA AND COPIES IT TO OUR CONVERSATION TABLE ENTRY -- REG 8                  
*--------------------------------------------------------------------*          
CNOSRTN2 EQU   *                                                                
         ST    RE,CNOSR14                                                       
**                                                                              
**   RIGHT NOW WE CAN ONLY ACCEPT A SINGLE CNOS COMING IN AT A TIME             
**    - FROM REPEATED ATTN EXIT SCHEDULES                                       
**    - FROM MULTIPLE PARTNERS -- WE                                            
**                                                                              
         USING ITABLE,R4              MAP THE INTERRUPT TABLE                   
         L     R8,ATTNCTA     GET CONV TABLE ENTRY TO BE USED                   
         USING CONVTBLE,R8    MAP OUR CONVERSATION TABLE ENTRY                  
HNDLCNOS OI    CTSTATUS,CTINUSE       NO, MARK IT AS IN USE NOW                 
         MVC   CTLUNAME(8),ILUNAME    SAVE PARTNER'S IDENTITY                   
         MVC   CTMODE(8),IMODE        SAVE PARTNER'S MODE                       
         OI    CTSTATUS,CTCNOSAR      INDICATE INBOUND CNOS RECEIVED            
         LA    R1,MSG04               CNOS DONE                                 
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG04PRT(8),CTLUNAME                                     
         MVC   LOGLINE+MSG04MDE(8),CTMODE                                       
         LA    R7,ICNOSDAT           POINT TO CNOS LIMITS DATA AREA             
         USING ISTSLCNS,R7                                                      
         MVC   LOGLINE+MSG04SL(2),SLCSESSL    SESS LIMIT                        
         MVC   LOGLINE+MSG04WL(2),SLCMCWL     MIN # CONT'N WINNERS LCL          
         MVC   LOGLINE+MSG04WP(2),SLCMCWP     MIN # CONT'N WINNERS PRT          
         MVC   LOGLINE+MSG04PRM(1),SLCPARMS    BIT STRING                       
         PUT   (R1),LOGLINE                                                     
         L      RE,CNOSR14                                                      
         BR     RE                                                              
*                                     WE SHOULD REJECT IT                       
         DROP   R4,R8                                                           
*NOP     SETLOGON  RPL=(R2),OPTCD=QUIESCE                                       
MSG04PRT EQU   28+TIMESTMP                                                      
MSG04MDE EQU   48+TIMESTMP                                                      
MSG04SL  EQU   66+TIMESTMP                                                      
MSG04WL  EQU   69+TIMESTMP                                                      
MSG04WP  EQU   72+TIMESTMP                                                      
MSG04PRM EQU   75+TIMESTMP                                                      
    TITLE  ' PART IV OPEN FUNCTION:  COMMON PROCESSING'                         
**                                                                              
**     COMMON PROCESSING TO START THE OPEN CALLS                                
**                                                                              
**                                                                              
         DS    0H                                                               
BEGNOPEN L     R2,LOGSNAP                                                       
         OPEN  ((2),OUTPUT)     OPEN THE SNAP DCB                               
         TM    48(R2),X'10'     TEST OPEN OK                                    
         BO    LOGOPEN                                                          
         LA    R1,ABEND100                                                      
         B     ABENDDMP                                                         
LOGOPEN  L     R3,16(,R7)      GET P5   USER DCB                                
         L     R6,SAVE+4       GET CALLERS SAVE AREA                            
         ST    R6,SNAPA1ST     START OF SAVE AREA                               
         LA    R6,94(,R6)      BUMP BY 100                                      
         O     R6,HIGHBIT      END OF SAVE AREA                                 
         ST    R6,SNAPA1EN                                                      
         LA    R6,SNAPLIST                                                      
*NOP     SNAP  DCB=(R2),LIST=(R6),ID=7,PDATA=REGS                               
         LR    R6,R3          LOG DCB AREA                                      
         SH    R6,=H'8'        BACK UP 8 BYTES                                  
         ST    R6,SNAPA1ST     LOG DCB AREA                                     
         LA    R6,64(,R3)    BUMP BY 100                                        
         O     R6,HIGHBIT                                                       
         ST    R6,SNAPA1EN                                                      
         LA    R6,SNAPLIST                                                      
*NOP     SNAP  DCB=(R2),LIST=(R6),ID=8,PDATA=REGS                               
         B     OPENSTUP         NOP THE OPEN                                    
         OPEN  ((3),OUTPUT)     OPEN THE LOG FILE                               
         TM    48(R3),X'10'    TEST OPEN OK                                     
         BO    OPENSTUP         NOP THE OPEN                                    
         LA    R1,ABEND101                                                      
         B     ABEND                                                            
OPENSTUP EQU   *                                                                
         ST    R3,LOGDCBA      SAVE ADDRESS OF LOG'S DCB                        
         MVI   LOGLINE,C' '                                                     
         MVC   LOGLINE+1(132),LOGLINE                                           
*NOP     SNAP  DCB=(R2),LIST=(R6),ID=9                                          
         PRINT NOGEN                                                            
         PUT   (R3),LOGLINE                                                     
         SR    R5,R5                                                            
         ST    R5,SRDATAP3     ZERO THIS OUT                                    
         L     R5,MSGRTN                                                        
         ST    R5,AMSGMOVE                                                      
         LA    R5,ERRCHECK                                                      
         ST    R5,AERRCHCK                                                      
*               REG 1 -> LIST  P1 -> ACTION, SUBACTIONS(S)                      
*                              P2 -> TOKEN                                      
*                              P3 -> ACTION SPECIFIC INFO                       
         L     R5,INPARM2        GET P1                                         
         MVC   OPENOPT(4),0(R5)  COPY USER'S P1 INFO                            
         MVI   FSTCNTCT,C'R'     RECEIVER MAKES 1ST CONTACT (DEFAULT)           
         CLI   1(R5),C'S'                                                       
         BE    OPENSEND                                                         
         CLI   1(R5),C'R'                                                       
         BE    OPENRECV                                                         
         CLI   1(R5),C'I'        OPEN RECEIVER, ALL INPUT FROM SENDER           
         BNE   ATTSEND                                                          
         MVI   FSTCNTCT,C'S'     SENDER MAKES 1ST CONTACT(I.E SKIP CNOS         
         B     OPENRECV                                                         
ATTSEND  CLI   1(R5),C'A'                                                       
         BNE   BADP1             OPEN SUBFUNCTION CODE UNKNOWN                  
         MVI   FSTCNTCT,C'S'     SENDER MAKES 1ST CONTACT FOR AT&T              
         B     OPENSEND                                                         
BADP1    ICM   R2,15,0(R5)                                                      
         LA    R1,ABEND102                                                      
         B     ABENDDMP                                                         
         DC    C'S',C'R',AL4(OPENSEND)                                          
         DC    C'R',C'R',AL4(OPENRECV)                                          
         DC    C'I',C'S',AL4(OPENSEND)                                          
         DC    C'A',C'S',AL4(OPENRECV)                                          
    TITLE  ' PART IV OPEN FUNCTION:  OPEN AS A SENDER'                          
OPENSEND EQU   *                                                                
*--------------------------------------------------------------------*          
**   OPEN FOR SEND                                                              
*--------------------------------------------------------------------*          
**                                                                              
**  OPENING FOR SEND REQUIRES THAT UPON COMPLETION THE CONVERSATION             
**  END UP IN SEND STATE.  TO ACCOMPLISH THIS THIS ROUTINE MUST                 
**  BUILD AN FMH5 AND ALLOCATE A CONVERSATION.  HOWEVER, BEFORE DOING           
**  THIS THE PARTNER LUID NEEDS TO BE DETERMINED.  TWO OPTIONS ARE              
**  AVAILABLE FOR PROVIDING THIS:                                               
**                                                                              
**   'OS' THE PARTNER ROUTINE IS EXPECTED TO MAKE THE FIRST CONTACT             
**        BY CAUSING THE CNOS TO FLOW TO THIS ROUTINE FROM WHICH THE            
**        THE LUID AND MODE NAME ARE DETERMINED.                                
**                                                                              
**   'OA' THE PARTNER LUID AND MODE NAME TO BE USED ARE TAKEN FROM              
**        THE P3 INPUT PARMS (SEE BELOW).  THIS IS THE CPIC STYLE.              
**                                                                              
**        IT IS POSSIBLE, WITH 'OA' THAT SOME FAILURES IN DEALING WITH          
**        THE PARTNER ARE NOT DETECTED UNTIL THE FIRST CONFIRMATION             
**        REQUEST IS SENT.  THUS A 2ND SUBOPTION OF 'OA' INDICATES IF           
**        THE FMH5 IS TO BE FLUSHED (DEFAULT) OR CONFIRMED.                     
**                                                                              
**    INPUT PARMS FOR SEND:                                                     
**       MYLUID        -  8 CHARACTERS LEFT JUSTIFIED                           
**       PARTNER LUID  -     DITTO  (IGNORED FOR 'OS')                          
**       MODE NAME     -     DITTO  (IGNORED FOR 'OS')                          
**       TRX NAME      -     DITTO                                              
**                                                                              
*--------------------------------------------------------------------*          
         L     R5,8(,R7)               GET P3 ACTION SPECIFIC INFO              
         LTR   R5,R5                                                            
         BZ    NOSENDI                                                          
         MVC   APPLNAME(8),0(R5)       APPLID MUST BE 8 BYTES                   
         MVI   APPLID,X'08'            SET THE LENGTH                           
         LA    R8,CTABLE          ASSIGN AN ENTRY IN OUR CONV TABLE             
         USING CONVTBLE,R8        MAP THE ENTRY                                 
** THE FOLLOWING TWO VALUES MAYBE IGNORED IF 'OS' OPTION IS USED                
         MVC   CTLUNAME(8),8(R5)       GET PARTNER LU-ID                        
         MVC   CTMODE(8),16(R5)        GET MODE NAME TO USE                     
         MVC   CTTRXNME(8),24(R5)      GET TRANSACTION PGM NAME                 
         L     R1,4(,R7)               GET P2                                   
         L     R6,0(,R1)               GET TOKEN, MUST BE ZERO                  
         LTR   R6,R6                                                            
         BNE   NZTOKENS                                                         
         USING ISTRPL6X,R3                                                      
         USING IFGRPL,R2                                                        
         L     RF,ACBSTRTN                                                      
         BASR  RE,RF                                                            
         LTR   RF,RF                                                            
         BNZ   SENDOERR                                                         
         CLI   FSTCNTCT,C'S'           DOES SENDER MAKE 1ST CONTACT?            
         BE    MKCNTCT                 YES, GO DO IT                            
         MVI   SESSFLAG,X'FF'          INDICATE SESSION NOT IN PROGRESS         
*--------------------------------------------------------------------*          
*    NOW GO INTO A WAIT; LOOKING PARTICULARLY FOR A CNOS REQUEST TO             
*    COME THROUGH INDICATING THAT THE PARTNER HAS MADE CONTACT.                 
*--------------------------------------------------------------------*          
         MVI   CTFSTCT,C'P'          PARTNER(S) MAKE FIRST CONTACT              
*                                    PROVIDING HIS LU AND MODE NAME             
         MVC   WAITRSN,CNOSCNST      NOW WAIT FOR THIS TO HAPPEN                
         BAS   RE,ATTNWAIT                                                      
         B     SENDALLC                                                         
MKCNTCT  EQU   *                                                                
*--------------------------------------------------------------------*          
*     NOW MAKE CONTACT WITH THE PARTNER BY DOING A CNOS              *          
*--------------------------------------------------------------------*          
         MVI   CTFSTCT,C'I'    WE MAKE FIRST CONTACT (I.E. CNOS)                
         L     RF,ACNOSSUB                                                      
         BASR  RE,RF                                                            
         LTR   RF,RF           DID CNOS FAIL?                                   
         BNZ   SENDOERR        YES, TIDY UP AND RETURN                          
         L     R3,RPLAAREA           GET EXTENSION ADDRESS                      
*--------------------------------------------------------------------*          
*   THE PARTNER HAS BEEN IDENTIFIED, NOW ALLOCATE A CONVERSATION.               
*   THE TRANSACTION PROGRAM NEEDS TO BE IDENTIFIED.                             
*   A CONVERSATION ID WILL BE RETURNED & THE CONV WILL BE IN SEND STATE         
*--------------------------------------------------------------------*          
SENDALLC EQU   *                                                                
         L     RF,AALLOCNV                                                      
         BASR  RE,RF           WE HAVE CONTACT, ALLOCATE A CONV                 
         DROP  R2,R3                                                            
         LTR   RF,RF           WAS ALLOCATION OK?                               
         BNZ   SENDOERR        NO, TIDY UP AND RETURN                           
*--------------------------------------------------------------------*          
** WE ARE NOW IN SEND STATE, FLUSH THE BUFFER SO AS TO DRIVE                    
** THE ATTENTION EXIT (FM5HDR) IN THE PARTNER PROGRAM                           
*--------------------------------------------------------------------*          
         MVI   CTSQUAL,RPL6FLSH  SET UP FLUSH AS THE 2ND OPEN OPTION            
         CLI   OPENOPT+2,C'C'   WAS CONFIRM REQUESTED FOR THE FMH5?             
         BNE   SENDOP2          NO, THEN FLUSH                                  
         MVI   CTSQUAL,RPL6CFRM  YES, INDICATE CONFIRM                          
SENDOP2  BAS   RE,SENDNODA                                                      
         LTR   RF,RF           WAS FLUSH/CONFIRM OK?                            
         BNZ   SENDOERR        NO, TIDY UP AND RETURN                           
         MVC   OPENMSG(L'SEND),SEND                                             
         B     OPENEXIT        RETURN TO CALLER, KEEP DATA AREA                 
         SPACE 2                                                                
NOSENDI  LA    R1,ABEND301     SENDING, NO P3 DATA                              
         B     ABEND                                                            
NZTOKENS LA    R1,ABEND302     TOKEN NON-ZERO SENDING                           
         B     ABENDDMP                                                         
SENDOERR L     R3,ALU62ACB                                                      
         CLOSE (R3)             CLOSE THE VTAM ACB                              
         LA    RF,RETCDEF      INDICATE THAT OPEN FAILED                        
         B     EXITNF                                                           
    TITLE  ' PART IV OPEN FUNCTION:  OPEN AS A RECEIVER'                        
*--------------------------------------------------------------------*          
**    OPEN FOR RECEIVE PROCESSING                                               
**      PARAMETERS NEEDED                                                       
**         A) MY LUID                                                           
**         B) PARTNER LUID                                                      
**                                                                              
*--------------------------------------------------------------------*          
**      1. THE VTAM CONTROL BLOCKS ARE BUILT, THE ACB OPENED AND THEN           
**         AN INQUIRE IS MADE SO AS TO WAIT FOR THE PARTNER APPLID TO           
**         BECOME ACTIVE.                                                       
**                                                                              
**      2. THIS ENTRY POINT STARTS THE PROCESS BY "CONTACTING"                  
**         THE LUNOPENS ENTRY POINT ROUTINE AS THE PARTNER LUID                 
**         VIA A CNOS REQUEST.                                                  
**                                                                              
**      3. WE THEN AWAIT THE ARRIVAL OF AN FMH5 HEADER WHICH INDICATES          
**         THAT THE PARTNER APPLICATION HAS RESPONDED TO THE CNOS               
**                                                                              
**      4. THE FMH5 IS THEN RECEIVED AND A CONVERSATION ID OBTAINED.            
**                                                                              
OPENRECV DS    0H                                                               
         L     R5,8(,R7)     GET P3 ACTION SPECIFIC INFO                        
         LTR   R5,R5                                                            
         BZ    NORECVI                                                          
         MVC   APPLNAME(8),0(R5)       APPLID MUST BE 8 BYTES                   
         MVI   APPLID,X'08'            SET THE LENGTH                           
         LA    R8,DMYTBLE         ASSIGN AN ENTRY IN OUR CONV TABLE             
         USING CONVTBLE,R8        MAP THE ENTRY                                 
** THE FOLLOWING TWO VALUES MAYBE IGNORED IF 'OR' OPTION IS USED                
         MVC   CTLUNAME(8),8(R5)       GET PARTNER LU-ID                        
         MVC   CTMODE(8),16(R5)        GET MODE NAME TO USE                     
         L     R1,4(,R7)      GET P2                                            
         L     R5,0(,R1)      GET TOKEN, MUST BE ZERO ON OPEN CALL              
         LTR   R5,R5                                                            
         BNE   NZTOKENR                                                         
         LA    R1,SNAPLIST                                                      
         L     R7,LOGSNAP              GET LOGGING DCB                          
*NOP     SNAP  DCB=(R7),LIST=(R1),ID=11                                         
         SR    R1,R1                                                            
         LA    R1,ASYECBA              ADDRESS OF START OF LIST                 
         ST    R1,ECBLIST2             SAVE IT                                  
         L     RF,ACBSTRTN             GO OPEN ACB AND SETUP RPL & EX           
         BASR  RE,RF                                                            
         CLI   FSTCNTCT,C'S'           DOES SENDER MAKE 1ST CONTACT?            
         BNE   DOCNOS                  YES, DO CNOS                             
         MVI   CTFSTCT,C'P'          PARTNER(S) MAKE FIRST CONTACT              
*--------------------------------------------------------------------*          
*    NOW GO INTO A WAIT -- THE PARTNER MAKES CONTACT BY DOING CNOS              
*    WHICH WE MUST NOW WAIT TO RECEIVE                                          
*    THE PARTNER'S IDENTITY WILL COME FROM THE R/O RPL AND                      
*    IS PLACED IN OUR CONVERSATION TABLE ENTRY                                  
*--------------------------------------------------------------------*          
         MVC   WAITRSN,CNOSCNST                                                 
         BAS   RE,ATTNWAIT                                                      
         LTR   RF,RF                 DID THIS COMPLETE OK?                      
         BZ    OPENR1                YES, CONTINUE                              
* NON-ZERO MEANS USER ECB GOT POSTED                                            
         B     EXITNF                                                           
*--------------------------------------------------------------------*          
*    SETUP TO CONTACT THE PARTNER VIA CNOS                                      
*--------------------------------------------------------------------*          
DOCNOS   EQU   *                                                                
         MVI   CTFSTCT,C'I'          PARTNER(S) MAKE FIRST CONTACT              
         OI    CTSTATUS,CTINUSE      MARK CTABLE ENTRY AS IN USE                
         USING ISTRPL6X,R3                                                      
         USING IFGRPL,R2                                                        
**       CNOSSUB ROUTINE GETS PARTNER & MODE FROM OUR TABLE ENTRY               
         L     RF,ACNOSSUB           GET CNOS SUBROUTINE ADDRESS                
         BASR  RE,RF                                                            
         LTR   RF,RF                                                            
         BZ    OMSG13                                                           
         LA    R1,ABEND109                                                      
         B     ABEND                                                            
OMSG13   LA    R1,MSG13                LOG WHERE WE ARE - CNOS DONE             
OPENR1   EQU   *                                                                
*--------------------------------------------------------------------*          
*    NOW GO INTO A WAIT                                                         
*    . THE PARTNER SHOULD RESPOND WITH AN FMH5                                  
*      INDICATING THAT A CONVERSATION HAS BEEN ALLOCATED.                       
*      AND MOST IMPORTANTLY THAT A CONVERSATION ID HAS BEEN ASSIGNED            
*--------------------------------------------------------------------*          
         MVC   WAITRSN,FMH5CNST                                                 
         BAS   RE,ATTNWAIT    THIS ROUTINE IS COMMON TO BOTH ENTRIES.           
         LTR   RF,RF                 DID THIS COMPLETE OK?                      
         BNZ   OPENFAIL                                                         
** AT THIS POINT THE OPEN FOR RECEIVE FUNCTION IS COMPLETE.                     
** SET RETURN INFO SO CALLER CAN MAKE SUBSEQUENT CALLS OK                       
** AND ISSUE MESSAGE                                                            
         MVC   OPENMSG(L'RECV),RECV                                             
         SPACE 4                                                                
OPENEXIT L     R7,INPARM      GET INPUT PARMS                                   
TIMESTMP EQU   12       WAS 9                                                   
MSG29OFF EQU   TIMESTMP+52                                                      
MSG30OFF EQU   13+TIMESTMP                                                      
MSG32OFF EQU   09+TIMESTMP                                                      
         MVC   LOGLINE+MSG29OFF(1),CTSTATE     GET CURRENT CONV STATE           
         L     R2,4(,R7)      GET P2                                            
         ST    RA,0(,R2)      SET TOKEN (P2) VALUE DYNAMIC DATA AREA            
         L     R1,12(,R7)                                                       
         MVC   0(8,R1),=C'LU62SER2'  RETURN ENTRY POINT NAME                    
         LA    R1,MSG29      SET UP FOR OPEN COMPLETE MESSAGE                   
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+32(L'OPENMSG),OPENMSG                                    
         PUT   (R1),LOGLINE                                                     
         SR    RF,RF                                                            
OPENFAIL B     EXITNF         EXIT W/O FREEING DYNAMIC AREA                     
NORECVI  LA    R1,ABEND201    P3 IS ZERO FOR RECEIVE FUNCTION                   
         B     ABEND                                                            
NZTOKENR LA    R1,ABEND202    P2 VALUE IS NON-ZERO                              
         B     ABEND                                                            
SIZE     DC    F'4096'   REMEMBER THE DOUBLE WORD ALIGNMENT OF GETMAIN          
SIZE2    DC    AL4(DBLWRDS)                                                     
ERRDATA  DS    4F           FEEDBACK FIELDS  -- FIX FOR RE-ENTRANCY             
MSGRTN   DC    A(MSGMOVE)                                                       
ACBSTRTN DC    A(ACBSETUP)                                                      
AALLOCNV DC    A(ALLOCSES)                                                      
ACNOSSUB DC    A(CNOSSUB)                                                       
LOGSNAP  DC    V(DLOGSNAP)                                                      
MDLRPL   DC    V(DRPL62)                                                        
MDLRPLX  DC    V(DRPL62X)                                                       
HIGHBIT  DC    X'80000000'  HIGH ORDER BIT FOR END OF LIST                      
RECV     DC    C'RECV'                                                          
SEND     DC    C'SEND'                                                          
DBUG     DC    C'DBUG'                                                          
*** TEXT FOR QUALIFY VALUES                                                     
         DC    AL1(RPL6CNOS),CL8'CNOS'                                          
TEXTCFRM DC    AL1(RPL6CFRM),CL8'CONFIRM'                                       
TEXTCFMD DC    AL1(RPL6CFMD),CL8'CONFRMD'                                       
TEXTDATA DC    AL1(RPL6DATA),CL8'DATA'                                          
TEXTDCON DC    AL1(RPL6DCON),CL8'DATACON'                                       
TEXTDFLU DC    AL1(RPL6DFLU),CL8'DATAFLU'                                       
TEXTRQSD DC    AL1(RPL6RQSD),CL8'RQSEND'                                        
TEXTERR  DC    AL1(RPL6ERR),CL8'SEND-ERR'                                       
         SPACE                                                                  
         LTORG                                                                  
*** TEXT FOR CONTROL= VALUES                                                    
TEXTALLC DC    AL1(RPL6ALLC),CL8'ALLOCATE'                                      
TEXTRSRV DC    AL1(RPL6RSRV),CL8'RESETRCV'                                      
TEXTDEAL DC    AL1(RPL6DEAL),CL8'DEALLOC'                                       
TEXTOPER DC    AL1(RPL6OPER),CL8'OPRCNTL'                                       
TEXTPREC DC    AL1(RPL6PREC),CL8'PREPRCV'                                       
TEXTRFH5 DC    AL1(RPL6RFH5),CL8'RCVFMH5'                                       
TEXTRCV  DC    AL1(RPL6RCV),CL8'RECEIVE'                                        
TEXTSEND DC    AL1(RPL6SEND),CL8'SEND'                                          
********************************************************************            
*             FORMAT ANY TWO BYTE FIELD AND RETURN                 *            
*                                                                  *            
*            DATA TO BE FORMATTED MUST BE IN RETCD2                *            
********************************************************************            
*                                                                               
FORMAT2  DS    0H                   THIS ROUTINE FORMATS 2 HEX BYTES            
         MVO   RETCD3,HEX2BYTE      MOVE SENSE TO PACKED FORMAT                 
         UNPK  PRT2BYTE,RETCD3      UNPACK TO MAKE PRINTABLE                    
         TR    PRT2BYTE,TRTABLE     TRANSLATE DIGITS TO EBCIDIC                 
         BR    RE                   RETURN                                      
RETCD3   DC    XL3'00000F'                                                      
TRTABLE  DC    XL240'00'            * TRANSLATE TABLE FOR RETURN CODES          
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                              
         TITLE  ' ROUTINE TO DO JUST PREP-RECEIVE  (WHY ??)'                    
PREPENT  DS    0H                                                               
         L     R3,8(,R7)      GET P3  -- ADDRESS OF F/L/BUFFER                  
         ST    R3,SRDATAP3                                                      
         USING P3DATA,R3     MAP SEND/RECEIVE DATA PARM                         
         XC    FLAGS,FLAGS    CLEAR THE FLAGS INFO                              
         XC    ERRORDAT,ERRORDAT                                                
         LH    R4,LENGTH                                                        
         LTR   R4,R4        DO WE HAVE A ZERO LENGTH?                           
*NOP     BNZ   PREP2                                                            
         LA    R1,ABEND304                                                      
         B     ABENDDMP                                                         
*NOP     L     R5,CONVID                                                        
         LA    R3,LENGTH                                                        
         BAS   RE,PREPRCV     SEND THE BUFFER & TELL PARTNER HE IS              
*                             NOW THE SENDER (OUR STATE SHOULD BE RECV)         
         SR    RF,RF                                                            
         B     SENDEXIT                                                         
         SPACE                                                                  
*NOP     INQUIRE RPL=(R2),ACB=(R9),NIB=LU62NIB,OPTCD=APPSTAT                    
         EJECT                                                                  
LOGNRTN  DS    0H                                                               
         USING *,R5            THE CODE BELOW IS DEAD FOR TIME BEING            
         L     R9,POOLST                                                        
LOGNLOOP LTR   R9,R9                                                            
         BZ    REWAIT            NO RPLS ON CHAIN                               
         USING RPLPOOL,R9                                                       
*  FOLLOWING MUST BE DONE OUTSIDE OF THE LOGON/SCIP EXIT                        
*        APPCCMD  CONTROL=CHECK                                                 
         LTR   RF,RF                                                            
         BNZ   BADLGN05                                                         
         LTR   R0,R0                                                            
         BZ    CONT08                                                           
BADLGN05 LA    R3,CALLCHK2                                                      
         BAS   RE,ERRCHECK                                                      
CONT08   EQU   *                                                                
         LA    R1,MSG19               LOG FM5H "A"                              
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         PUT   (R1),LOGLINE                                                     
         L     R9,PLRPLNXT       CHAIN IN NEXT                                  
         B     LOGNLOOP                                                         
         DROP  R9                                                               
    TITLE  ' PART IV OPEN FUNCTION:  CNOS PROCESSING '                          
         PRINT NOGEN                                                            
*--------------------------------------------------------------------*          
*     ESTABLISH THE VTAM SESSION LIMITS  -- CALLED BY OPEN RECEIVE              
*--------------------------------------------------------------------*          
CNOSSUB  DS    0H                                                               
         BASR  RC,0                                                             
         USING *,RC                                                             
         ST    RE,SAVER14              SAVE R14                                 
         USING IFGRPL,R2                                                        
         LA    R2,SYNRPL62             USE SYNCHRONOUS RPL                      
         L     R6,RPLAAREA             GET RPL EXTENSION                        
         USING ISTRPL6X,R6             RPL EXTENSION                            
         USING CONVTBLE,R8                                                      
         MVC   RPL6LU(8),CTLUNAME      PUT PARTNER LU-ID IN RPL                 
         MVC   RPL6MODE(8),CTMODE                                               
CNOSSUB2 XC    CNOSECB(4),CNOSECB      ZERO THE ECB                             
         MVI   LOGLINE,C' '                                                     
         MVC   LOGLINE+1(132),LOGLINE  BLANK OUT                                
         LA    R1,MSG02          INDICATE CNOS GOING TO BE ISSUED               
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+56(8),RPL6LU                                             
         MVC   LOGLINE+77(8),RPL6MODE                                           
         L     R1,LOG                                                           
         PUT   (R1),LOGLINE                                                     
         DROP  R6                                                               
         APPCCMD  CONTROL=OPRCNTL,QUALIFY=CNOS,RPL=(R2),               X        
               OPTCD=SYN,AREA=0                                                 
**NOP          OPTCD=SYN,AREA=(R9),RECLEN=7     SINGLE SESSION 12/01            
**             ECB=CNOSECB,OPTCD=ASY                                            
         LTR   RF,RF                                                            
         BNZ   BADGENRC                                                         
         LTR   R0,R0                                                            
         BZ    CNOSWAIT                                                         
BADGENRC EQU   *                                                                
         L     RF,AERRCHCK     GET ERROR HANDLER ADDRESS                        
         BASR  RE,RF           GOOD CHANCE THIS WILL RETURN AS OK               
         LA    RE,RETCDE4                                                       
         CR    RF,RE                                                            
         BNH   CNOSWAIT                                                         
         MVC   CNOSMSG+CNOSOFF(8),CTLUNAME                                      
WTORCNOS XC    WTORECB,WTORECB                                                  
*NOP     ICM   R4,X'F',RPL6SNSO    SENSE CODE                                   
         LA    R8,OPANSWR                                                       
         LA    R9,WTORECB                                                       
         WTOR  ,(R8),6,(R9),MF=(E,CNOSMSG)                                      
         WAIT  ECB=(R9)                                                         
         CLI   OPANSWR,C'R'    WAS REPLY RETRY?                                 
         BE    CNOSSUB2        YES, TRY AGAIN                                   
         CLI   OPANSWR,C'C'    WAS REPLY CANCEL?                                
         BNE   WTORCNOS        DO IT AGAIN TO GET RIGHT ANSWER                  
*** CNOS ERRORS MAY REQUIRE SENSE TO COMPLETELY DETERMINE CAUSE                 
         LA    RF,ABEND109     CNOS HARD ERROR  (TROUBLE CONTACTING             
         B     CNOSRET         THE PARTNER LU)                                  
CNOSWAIT LA    R1,MSG03        LOG WHERE WE ARE - CNOS ISSUED                   
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         L     R1,LOG                                                           
         PUT   (R1),LOGLINE                                                     
         LA    R9,CNOSDATA                                                      
         ICM   R4,X'F',CNOSDATA         LOAD UPDATED CNOS DATA INTO             
         ICM   R5,X'E',CNOSDATA+4       REGISTERS FOR SNAP DISPLAY              
*D0A     SNAP  DCB=LOGSNAP,PDATA=REGS     7-BYTE CNOS DATA                      
         SR    RF,RF                                                            
CNOSRET  L     RE,SAVER14                                                       
         BR    RE                      RETURN                                   
         DROP  R2,R8                                                            
         PRINT NOGEN                                                            
CNOSOFF  EQU   41+12                                                            
CNOSMSG  WTOR  'LU62SERV: ERROR CONTACTING PARTNER; LUID=ABCDEFGH. REPLX        
               Y RETRY OR CANCEL',MF=L                                          
         PRINT NOGEN                                                            
         SPACE 3                                                                
*NOP     XC    CNOSDATA,CNOSDATA                                                
*NOP     USING ISTSLD,R9          SEE PAGE 85                                   
*NOP     MVC   SLDDSESL,=X'0010'                                                
*NOP     MVC   SLDDMCWL,=X'0003'   MIN SOURCE SIDE WINNER                       
*NOP     MVC   SLDDMCWP,=X'0003'   MIN PARTNER WINNER                           
*NOP     MVI   SLDDEFPA,X'60'      SINGLE SESSION X'08'                         
    TITLE  'PART IV OPEN FUNCTION:  ALLOCATE CONVERSATION TO SESSION'           
         DS    0H                       ENSURE HALFWORD ALIGNMENT               
ALLOCSES STM   RE,RC,SAVEALOC                                                   
         BASR  RC,0                                                             
         USING *,RC                                                             
*--------------------------------------------------------------------*          
*        BUILD A FMH-5 TO BE USED FOR ALLOCATING THE CONVERSATION               
*           WE HAVE A BASIC CONVERSATION                                        
*           SYNC LEVEL IS CONFIRM  ONLY                                         
*                                                                               
*        "CONTROL=ALLOC" IS ISSUED TO ALLOCATE A CONVERSATION TO                
*         A VTAM SESSION (MOST LIKELY PREVIOUSLY CREATED BY CNOS).              
*        UPON SUCCESSFUL COMPLETION OF THIS A VTAM CONV ID IS ASSIGNED          
*        THE FMH5 IS NOT SENT IMMEDIATELY CALLER DECIDES HOW TO                 
*        DEAL WITH THIS                                                         
*                                                                               
*        R8 IS SET ON EXIT WITH OUR CONVERSATION TABLE ENTRY ADDRESS            
*                                                                               
*        THE LOGON & SCIP EXIT MAY BE DRIVEN IF A NEW SESSION IS                
*--------------------------------------------------------------------*          
         LA    R9,FMH5AREA                                                      
         XC    FMH5AREA,FMH5AREA  CLEAR THE FMH5 AREA                           
         USING ISTFM5,R9       REG 9 FOR WORK                                   
         MVC   FM5BASE(9),FM5MDL                                                
         MVI   FM5LENTH,24       13 BYTE BASE + 8 BYTE TRX NAME                 
*                                0 SECURITY, 0 LUW 0 CONV CORREL                
         MVI   FM5LNTPN,X'08'   SET TRANSACTION PROGRAM NAME LENGTH             
         USING CONVTBLE,R8                                                      
         MVC   FM5TPNAM(08),CTTRXNME     TRANSACTION PROGRAM NAME               
         DROP  R9              RELEASE WORK REG                                 
         LA    R2,SYNRPL62     USE SYNCHRONOUS RPL                              
         OI    CTSTATUS,CTINUSE                                                 
         PRINT NOGEN                                                            
         APPCCMD   CONTROL=ALLOC,QUALIFY=ALLOCD,RPL=(R2),              X        
               OPTCD=SYN,CONMODE=CS,USERFLD=(R8),                      X        
               RECLEN=24,AREA=FMH5AREA                                          
         PRINT NOGEN                                                            
         LTR   RF,RF                                                            
         BNZ   BADGENR1                                                         
         LTR   R0,R0                                                            
         BZ    ALLCWAIT                                                         
BADGENR1 LA    R3,CALLALLC                                                      
         L     RF,AERRCHCK                                                      
         BASR  RE,RF                                                            
ALLCWAIT EQU   *                                                                
         LA    R1,MSG06                CONVERSATION ALLOCATED                   
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         USING ISTRPL6X,R3                                                      
         L     R8,RPL6USR          GET ADDRESS OF OUR CONV TABLE ENTRY          
         MVC   CTCONVID,RPL6CNVD       SAVE THE CONVERSATION ID                 
         OI    CTSTATUS,CTCIDVAL       INDICATE CONV ID IS VALID NOW            
         MVC   LOGLINE+41(4),CTCONVID  PUT CONVERSATION ID IN MSG               
         DROP  R8                                                               
         PUT   (R1),LOGLINE                                                     
         LM    RE,RC,SAVEALOC                                                   
         SR    RF,RF                   SET RETURN CODE TO 0                     
         BR    RE                                                               
ALLCERR  LM    RE,RC,SAVEALOC                                                   
         LA    RF,RETCDE8              SET RETURN CODE TO 8                     
         BR    RE                                                               
         SPACE 2                                                                
FM5MDL   DS    0D        SEE PAGE 467                                           
         DC    X'10'     1 BYTE LENGTH                                          
         DC    X'05'     IBM FM5                                                
         DC    AL2(FM5ATTCH)  TYPE=ATTACH   (FROM DSECT)                        
         DC    X'00'      FLAG2 -- NO PIP                                       
         DC    X'03'      LENGTH OF FIXED LENGTH FIELDS                         
         DC    X'D0'      RESOURCE TYPE  -- BASIC CONV MAPPED NOT SPTED         
         DC    X'00'      RESERVED FIELD                                        
         DC    X'40'      FLAGS3  SYNC LEVEL 12/27/89 ALLOW CONFIRMATI          
FM5MDLED EQU   *                                                                
         DC    XL3'00'                                                          
         LTORG                                                                  
         TITLE  'PART XXX: PROCESS INBOUND FMH5'                                
*--------------------------------------------------------------------*          
*  THE POSTING OF THE ATTENTION EXIT FOR THE FM5H REASON IS THE                 
*  INDICATION THAT A CONVERSATION HAS BEEN INITIATED (ALLOCATED) BY             
*  THE PARTNER.  THIS ROUTINE FORMALLY RECIEVES THE FM5 HEADER                  
*  WHICH RESULTS IN THE CONVERSATION ID BEING ESTABLISHED FOR THIS              
*  SIDE OF THE CONVERSATION.  THE CONVERSATION IS IN RECEIVE STATE              
*  AND ALSO IN CONTINUE-SPECIFIC MODE                                           
*                                                                               
*  IF OUR CONVERSATION TABLE IS FULL THEN WE NEED TO REJECT THIS.               
*  THIS IS WHERE SECURITY CHECKS MIGHT BE DONE AS WELL AS ADDED                 
*  ANALYSIS OF THE FM5 HEADER INCLUDING EXTRACTION OF THE TPNAME                
*--------------------------------------------------------------------*          
FMH5RTN  DS    0H                                                               
         STM   RE,RC,SAVEFMH5                                                   
         BASR  RC,0                                                             
         USING *,RC                                                             
         ST    RE,FMH5R14                                                       
         LA    R2,SYNRPL62     USE A SYNCHRONOUS RPL  --                        
**                             WON'T BE ALREADY IN USE                          
         USING IFGRPL,R2                                                        
         L     R3,RPLAAREA     GET RPL EXTENSION(ALTERNATE AREA)                
         USING ISTRPL6X,R3     RPL EXTENSION                                    
         LA    R8,CTABLE       GET CONVERSATION TABLE ENTRY                     
         USING CONVTBLE,R8                                                      
         TM    CTSTATUS,CTINUSE       IS THIS ENTRY BEING USED?                 
         BO    DBLEFMH5               YES, BRANCH                               
         MVC   CTMYID,=C'01'                                                    
HNDLFMH5 OI    CTSTATUS,CTINUSE       MARK IT AS IN USE NOW                     
         APPCCMD   CONTROL=RCVFMH5,RPL=(R2),USERFLD=(R8),              X        
               OPTCD=SYN,CONMODE=LLCA,AREA=FMH5AREA,AREALEN=255                 
*NOP           OPTCD=SYN,CONMODE=CS,AREA=FMH5AREA,AREALEN=255                   
*NOP           OPTCD=ASY,CONMODE=CS,AREA=FMH5AREA,AREALEN=255,                  
*NOP           ECB=ECBAREA                                                      
*              NOW IN RECEIVE MODE, REDBOOK MODEL                               
         LTR   RF,RF                                                            
         BNZ   BADGEN51                                                         
         LTR   R0,R0                                                            
         BZ    FMH5CONT                                                         
BADGEN51 LA    R3,CALLRFMH                                                      
         BAS   RE,ERRCHECK                                                      
FMH5CONT EQU   *                                                                
*NOP     BAS   RE,WAITCHEK       OPTCD=SYN                                      
FMH5COMP EQU   *                                                                
         SR    R8,R8                                                            
         ICM   R8,8,RPL6RCV1       SEE WHAT THE WHAT-RECEIVED MASK SAYS         
         L     RE,LOGSNAP                                                       
*NOP     SNAP  DCB=(RE),PDATA=REGS    WHAT RECEIVED                             
         L     R8,RPL6USR          GET ADDRESS OF OUR CONV TABLE ENTRY          
         MVC   CTCONVID,RPL6CNVD   SAVE THE CONVERSATION ID ASSIGNED            
         OI    CTSTATUS,CTCIDVAL   INDICATE CONVERSATION ID IS PRESENT          
         OI    CTSTATUS,CTFMH5AR   INDICATE INBOUND FMH5 PROCESSED              
         MVC   CTLUNAME,RPL6LU     WHO IS THE PARTNER                           
         MVC   CTMODE,RPL6MODE     WHAT MODE WAS USED                           
         MVC   CTWRMASK(1),RPL6RCV1 SAVE THE WHAT RECEIVED MASK                 
         MVC   CTRTURNI(1),RPL6RTUN SAVE THE RETURNED INFO BYTE                 
*  THIS COULD INDICATE THAT ANOTHER FMH5 IS WAITING                             
         MVC   LOGLINE+41(4),CTCONVID  PUT CONVERSATION ID IN MSG               
         LA    R1,MSG19               LOG FM5H "A"                              
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+MSG19OF4(2),CTMYID    NOTE CONV-ID NUMBER                
         MVC   LOGLINE+MSG19OF1(1),CTWRMASK  WHAT RECEIVED MASK                 
         MVC   LOGLINE+MSG19OF2(1),RPL6MH5L  LENGTH OF FMH5                     
         MVC   LOGLINE+MSG19OF3(24),FMH5AREA                                    
         PUT   (R1),LOGLINE                                                     
         USING ISTFM5,R9           REG 9 FOR WORK                               
*        ICM   RXX,X'1',FM5LNTPN   SET TRANSACTION PROGRAM NAME LENGTH          
         MVC   CTTRXNME,FM5TPNAM   RECORD THE TP NAME                           
*                                                                               
         LM    RE,RC,SAVEFMH5      NO R15 SETTING HERE                          
         BR    RE                                                               
DBLEFMH5 LA    R8,CTLENGTH(,R8)       BUMP TO 2ND ENTRY                         
         TM    CTSTATUS,CTINUSE       IS THIS ENTRY BEING USED?                 
         BO    TOOMANY                YES, REACHED OUR LIMIT                    
         MVC   CTMYID,=C'02'                                                    
         B     HNDLFMH5                                                         
TOOMANY  DC    H'0'                   YES, STOP HERE -- REALLY                  
         DROP  R8                                                               
MSG19OF1 EQU   TIMESTMP+21                                                      
MSG19OF2 EQU   TIMESTMP+32                                                      
MSG19OF3 EQU   TIMESTMP+44                                                      
MSG19OF4 EQU   TIMESTMP-2                                                       
    TITLE  ' PART IV OPEN FUNCTION:  SETUP ACB + RPLS '                         
*  NOTE SPECIAL RETURN REG (11)                                                 
         DC    C'ACBSETUP'                                                      
ACBSETUP DS    0H                                                               
         ST    RC,SAVEBASE                                                      
         ST    RE,SAVEACBS                                                      
         BASR  RC,0                                                             
         USING *,RC                                                             
OPEN     LA    R9,LU62ACB     GET ACB ADDRESS                                   
         ST    R9,ALU62ACB    SAVE THE ACB ADDRESS                              
         USING IFGACB,R9                                                        
         LA    R1,APPLID      GET ADDRESS OF APPLID TO BE USED                  
         ST    R1,ACBAPID     STORE IT IN THE ACB                               
         XC    ITABAREA,ITABAREA  CLEAR AREA FOR ACB EXIT RTN TO USE            
         OPEN  ((R9))                                                           
         LTR   R5,RF                                                            
         BNZ   OPENERR         WAS REG15 ZERO, THEN OPEN WORKED                 
         MVC   LOGLINE+2(7),=C'DDSAPPC'                                         
         PUT   (R3),LOGLINE                                                     
         LA    R7,SNAPLIST                                                      
*XABUG   SNAP  DCB=LOGSNAP,LIST=(R7),ID=12                                      
         LA    R1,MSG01       INDICATE OPEN SUCCESSFUL                          
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
MSG01OF1 EQU   TIMESTMP+24                                                      
MSG01OF2 EQU   TIMESTMP+34                                                      
         MVC   LOGLINE+MSG01OF1(8),APPLNAME       ACB NAME USED                 
         MVC   LOGLINE+MSG01OF2(8),PARTNAME                                     
*XABUG   SNAP  DCB=LOGSNAP,LIST=(R7),ID=13                                      
         PUT   (R3),LOGLINE                                                     
**   REGISTER USAGE                                                             
**     R2  IS RPL (NOT EXTENSION) ADDRESS                                       
**     R3  IS RPL EXTENSION ADDRESS                                             
**     R9  IS A ACB REGISTER                                                    
         L     R2,MDL2RPL                GET ADDRESS OF MODEL RPL               
         MVC   RPL1ID,=C'RPL1'                                                  
         MVC   SYNRPL62(RPL62LN),0(R2)   CREATE RPL 1 - SYNCHRONOUS             
         MVC   RPL2ID,=C'RPL2'                                                  
         MVC   ASYRPL62(RPL62LN),0(R2)   CREATE RPL 2- ASYNCHRONUS              
         L     R3,MDL2RPLX               GET ADDRESS OF MODEL RPLX              
         MVC   P1RPL62X(RPL62XLN),0(R3)  CREATE RPL EXTENSION  1                
         MVC   P2RPL62X(RPL62XLN),0(R3)  CREATE RPL EXTENSION  2                
         LA    R2,SYNRPL62               GET ADDRESS  RPL 1                     
         USING IFGRPL,R2                                                        
         LA    R3,P1RPL62X               GET ADDRESS OF EXT 1                   
         USING ISTRPL6X,R3                                                      
         ST    R3,RPLAAREA    CHAIN THE EXTENSION TO THE RPL                    
         ST    R2,RPL6RPL     STORE RPL ADDRESS IN THE EXTENSION                
         ST    R9,RPLDACB     CHAIN ACB TO RPL                                  
         LA    R2,ASYRPL62               GET ADDRESS  RPL 2                     
         LA    R3,P2RPL62X               GET ADDRESS OF EXT 2                   
         USING ISTRPL6X,R3                                                      
         ST    R3,RPLAAREA    CHAIN THE EXTENSION TO THE RPL                    
         ST    R2,RPL6RPL     STORE RPL ADDRESS IN THE EXTENSION                
         ST    R9,RPLDACB     CHAIN ACB TO RPL                                  
         ST    RA,ACBUSER     CHAIN THE DYNAMIC AREA TO ACB FOR USE             
         LA    R1,ITABAREA    GET ADDRESS OF ATTENTION TABLE AREA               
         LA    R1,ITABLEN(,R1) ADD LENGTH OF ENTRY 1                            
         LA    R1,ITABLEN(,R1) ADD LENGTH OF ENTRY 2                            
         LA    R1,ITABLEN(,R1) ADD LENGTH OF ENTRY 3                            
         MVI   0(R1),X'FF'    MARK 4TH SLOT AS END OF TABLE                     
         SR    R3,R3                                                            
         ST    R3,ATTNECB     CLEAR ECB USED BY THE ATTENTION EXIT              
**                            BUILD ECB LIST FOR MASTER WAIT RTN                
         LA    R1,ATTNECB                                                       
         LA    R3,RCVECB      GET ADDRESS OF RECEIVE ECB                        
         ST    R1,MAINLIST    STORE 1ST ECB ADDRESS                             
         LA    R1,SENDECB                                                       
         ST    R1,MAINLIST+4                                                    
         LA    R1,DEALECB                                                       
         ST    R1,MAINLIST+8                                                    
         O     R3,HIGHBIT2    SET ON THE HIGH ORDER BIT FOR LIST END            
         ST    R3,MAINLIST+12 STORE LAST ECB ADDRESS                            
**                                                                              
**   UP TILL THIS POINT EVEN THOUGH THE ACB IS OPEN LOGONS CAN'T                
**   HAPPEN AND THUS VERY FEW VTAM ACTIONS CAN BE ACCOMPLISHED.                 
**   ONCE THE SETLOGON BELOW EXECUTES ASYNCHRONOUS VTAM EVENTS MAY              
**   BEGIN TO OCCUR.  ONCE SUCH EVENT WOULD BE THE SCHEDULING OF                
**   THE ATTENTION EXIT.                                                        
**                                                                              
         SETLOGON  RPL=(R2),ACB=(R9),OPTCD=START                                
         SR    R2,R2             FORCE RPL ADDRESS TO BE SET                    
         PRINT NOGEN                                                            
         LA    R1,MSG05                 LOG WHERE WE ARE - SLOGON DONE          
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         PUT   (R1),LOGLINE                                                     
         L     RC,SAVEBASE                                                      
         L     RE,SAVEACBS                                                      
         SR    RF,RF                                                            
         BR    RE                                                               
         DROP  R9,R3,R2     IN EXITS                                            
         SPACE 3                                                                
OPENERR  EQU   *                                                                
         SHOWCB AM=VTAM,ACB=(R9),FIELDS=(ERROR),AREA=ERRDATA2,         X        
               LENGTH=4                                                         
*  5A MEANS APPLID NOT ACTIVATED                                                
*  58 MEANS APPLID ALREADY ACTIVE                                               
         LA    R1,MSGOER           ACB OPEN FAILED                              
         L     RF,AMSGMOVE                                                      
         BASR  RE,RF                                                            
         MVC   LOGLINE+26(8),APPLNAME             ACB NAME USED                 
         MVC   OACBMSG+OACBOFF(8),APPLNAME                                      
         L     R4,ERRDATA2         PICK UP ERROR  FLAGS                         
         STCM  R4,X'F',LOGLINE+40                                               
         PUT   (R1),LOGLINE                                                     
OWTOR    XC    WTORECB,WTORECB                                                  
         LA    R8,OPANSWR                                                       
         LA    R9,WTORECB                                                       
         WTOR  ,(R8),6,(R9),MF=(E,OACBMSG)                                      
         WAIT  ECB=(R9)                                                         
         CLI   OPANSWR,C'R'         WAS IT RETRY?                               
         BE    OPEN                 GO, REDO THE OPEN                           
         CLI   OPANSWR,C'C'         THEN WAS IT NOT CANCEL?                     
         BNE   OWTOR                YES, ASK AGAIN                              
         ABEND 103,DUMP             ACB DIDN'T OPEN                             
OACBOFF  EQU   34+12                                                            
OACBMSG  WTOR  'LU62SERV: ERROR OPENING ACB; LUID=ABCDEFGH.  REPLY RETRX        
               Y OR CANCEL',MF=L                                                
         SPACE 2                                                                
LU62ACB  ACB   AM=VTAM,MACRF=LOGON,EXLST=EXITS                                  
EXITS    EXLST AM=VTAM,ATTN=ATTNEXIT,                                  X        
               TPEND=TPENDEXT                                                   
*        APPLID IS SET DYNAMICALLY                                              
         PRINT NOGEN                                                            
MDL2RPL  DC    V(DRPL62)                                                        
MDL2RPLX DC    V(DRPL62X)                                                       
ERRDATA2 DS    4F           FEEDBACK FIELDS  -- FIX FOR RE-ENTRANCY             
HIGHBIT2 DC    X'80000000'  HIGH ORDER BIT FOR END OF LIST                      
      TITLE  'PART V - VTAM EXITS  SCIP, LOGON + TPEND EXIT ROUTINE '           
         DS    0H                                                               
SCIPEXIT EQU   *                                                                
*  THESE EXITS NOLONGER BEING USED                                              
*   SCIP EXIT DRIVEN WHEN BIND'S REQUESTED                                      
**  THE SCHEDULING OF THIS EXIT IS CONTROLLED BY SETLOGON                       
**  A READONLY RPL IS PASSED TO THIS EXIT                                       
         BASR  RC,0                                                             
         USING *,RC           THIS ROUTINE HAS ITS OWN BASE REG/USING           
         LA    R9,1           INDICATE SCIP EXIT ENTRY                          
         B     SCIPLOGN       GO TO COMMON ROUTINE                              
LOGNEXIT BASR  RC,0                                                             
         USING *,RC           THIS ROUTINE HAS ITS OWN BASE REG/USING           
         LA    R9,2           INDICATE LOGON EXIT ENTRY                         
SCIPLOGN DC    H'0'                                                             
         DROP  RC                                                               
         SPACE 3                                                                
TPENDEXT BR    RE                                                               
         TITLE  'PART V - VTAM ATTENTION EXIT - CNOS/LOSS/FM5 HEADER'           
*---------------------------------------------------------------------          
*   THE ATTENTION EXIT ROUTINE CHAPTER 11.                                      
*    BECAREFUL OF ADDRESSIBILITY AND REGISTER CONTENTS.                         
*    THIS ROUTINE RUNS AS AN IRB UNDER VTAM CONTROL -- FAILURES                 
*    IN IT LOOK LIKE VTAM FAILURES                                              
*    ONLY ONE IRB CAN RUN AT A TIME, BUT THEY CAN QUEUE UP                      
*    BEHIND ONE ANOTHER -- ESPECIALLY TRUE WITH "LOSS" REASONS                  
*    AS EACH SESSION, INCLUDING VTAM'S, WILL CAUSE IT TO BE RUN                 
*    THE ACBUSER FIELD IS USED TO PASS DATA BETWEEN THE RB AND IRB.             
*                                                                               
*   DUE TO THE EXECUTION ENVIRONMENT ONLY THE MINIMUM NECESSARY                 
*   PROCESSING IS DONE HERE.  THE KEY INFO IS CAPTURED AND Q'D FOR              
*   FURTHER PROCESSING IN THE WAIT ROUTINE.                                     
*---------------------------------------------------------------------          
ATTNEXIT DS    0H                                                               
***                   THIS ROUTINE HAS AN ESTAE TO AVOID DUMPS                  
***                   IN VTAM                                                   
         BASR  RC,0                                                             
         USING *,RC           THIS ROUTINE MUST BE PHYSICALLY AT THE            
*                             END OF THE MODULE.                                
         LR    R7,R1          PRESERVE REGISTER 1                               
         ST    RE,ATTNRET     EXIT RETURN ADDRESS                               
         L     R8,0(,R7)      GET ACB ADDRESS (1ST WORD OF PLIST)               
         USING IFGACB,R8                                                        
         L     RA,ACBUSER     GET ADDRESS OF THE DYNAMIC AREA                   
         DROP  R8             DONE WITH ACB                                     
         LA    R6,ATTNRCVY    GET REVCOVERY RTN ADDRESS                         
         PRINT GEN                                                              
         ESTAE (R6),PARAM=(RA),MF=(E,ATELIST)  ESTABLISH RCVY EVRMNT            
         PRINT NOGEN                                                            
         USING DATA,RA                                                          
         LA    RD,SAVEEXIT    PROVIDE SAVE AREA FOR THIS ROUTINE                
* REGS  2=RPL, 3=RPLX, 4=TABLE E. 5=                                            
*       6=     7= R1,  8= R14,    9= WORK  10=DATA DSECT                        
         USING XITMAP,R7                                                        
         L     R2,XRORPL      LOAD RPL ADDRESS (5TH WORD OF PLIST)              
         USING IFGRPL,R2                                                        
         L     R3,RPLAAREA    GET READ-ONLY RPL EXTENSION ADDRESS WORD          
         USING ISTRPL6X,R3                                                      
         LA    R1,MSG10                ENTRY TO EXIT MSG                        
*        BAS   RE,MSGMOVE                                                       
         MVC   ESMSG5+20(4),XREASON                                             
         MVC   ESMSG5+25(8),RPL6LU                                              
         MVC   ESMSG5+33(8),RPL6MODE                                            
         STCM  RA,15,ESMSG5+48          GUESSING THIS IS THE PROBLEM            
         WTO   MF=(E,ESMSG5)    PUT MESSAGE TO JES LOG SO EASY TO TELL          
*                               IF WE HEARD FROM THE PARTNER                    
         CLC   ID(4),=C'LU62'                                                   
*NOP     BNE   BADIF                                                            
         MVI   LOGLINE,C' '                                                     
         MVC   LOGLINE+1(132),LOGLINE   BLANK OUT THE PRINT LINE                
         BAS   RB,ITABADD       FIND FREE INTERUPT/ATTENTION TABLE SLOT         
         USING ITABLE,R4                                                        
         MVC   ILUNAME,RPL6LU   GET PARTNER LU NAME                             
         MVC   IMODE,RPL6MODE   GET PARTNER MODE NAME FOR LATER USE             
         MVC   IATTNRSN(4),XREASON  SAVE EXIT INVOKATION REASON                 
**** THE ABOVE COULD BE AN EXPOSURE.                                            
*        ST    R4,ATTNITAB        SAVE TABLE ENTRY POINTER                      
*        ST    R2,SNAPA1ST      READ-ONLY RPL                                   
*        LR    R9,R2                                                            
*        AH    R9,=H'64'                                                        
*        ST    R9,SNAPA1EN      SET END OF RPL (+64)                            
*        LR    R9,R3                                                            
*        ST    R9,SNAPA2ST      READ-ONLY RPL EXTENSION                         
*        LA    R9,112(0,R3)                                                     
*        O     R9,HIGHBIT       SET HIGH ORDER BIT FOR END OF LIST              
*        ST    R9,SNAPA2EN      END OF READ-ONLY RPL EXTENSION                  
*        LA    R9,SNAPLIST                                                      
*        L     R6,LOGSNAP                                                       
*NOP     SNAP  DCB=(R6),PDATA=REGS,LIST=(R9)     R/O RPL                        
         CLC   XREASON,=C'CNOS'                                                 
         BNE   ATTNXIT                                                          
         L     R9,RPLAREA    SESSION LIMITS STRUCURE (7 BYTES)                  
         USING ISTSLCNS,R9                                                      
         MVC   ICNOSDAT(7),0(R9)         SAVE THESE LIMITS                      
*NOP     MVC   LOGLINE+30(7),=C'LIMITS='                                        
*NOP     MVC   LOGLINE+38(2),SLCSESSL    SESSION LIMIT                          
*NOP     MVC   LOGLINE+42(2),SLCMCWL     MIN # CONTENTION WINNERS LCL           
*NOP     MVC   LOGLINE+46(2),SLCMCWP     MIN # CONTENTION WINNERS PRT           
*NOP     MVC   LOGLINE+50(1),SLCPARMS    BIT STRING                             
         DROP  R9                                                               
ATTNXIT  EQU   *                                                                
         MVC   LOGLINE(30),=C'   ---->   ATTN EXIT COMPLETE '                   
         L     R1,LOGDCBA                                                       
         PUT   (R1),LOGLINE                                                     
         POST  ATTNECB                                                          
         ESTAE 0                         DELETE THE RECOVERY ENVIRN.            
         L     RE,ATTNRET                                                       
         BR    RE                                                               
         DROP  R2,R3,R4,R7                                                      
BADIF    ABEND 99             CHAIN TO ACBUSER NO GOOD                          
         SPACE 3                                                                
*** BECAREFUL OF SPECIAL ADDRESSIBLITY TO THE ROUTINE BELOW                     
*** DUE TO USING IN ATTN ROUTINE ABOVE.                                         
ITABADD  EQU    *                                                               
         LA     R4,ITABAREA     GET ITABLE ENTRY ADDRESS                        
         USING  ITABLE,R4                                                       
         CLI    ISTATUS,IFREE   IS THIS ENTRY FREE?                             
         BE     TAKEETRY        YES - USE IT                                    
         LA     R4,ITABLEN(0,R4)  CHECK NEXT ENTRY                              
         CLI    ISTATUS,IFREE   IS THIS ENTRY FREE?                             
         BE     TAKEETRY        YES - USE IT                                    
         LA     R4,ITABLEN(0,R4)  CHECK NEXT ENTRY                              
         CLI    ISTATUS,IFREE   IS THIS ENTRY FREE?                             
         BE     TAKEETRY        YES - USE IT                                    
         B      NONEFREE                                                        
TAKEETRY OI     ISTATUS,IUSED   MARK ENTRY AS IN-USE                            
         BR     RB              RETURN BACK ON REG 11                           
NONEFREE WTO    MF=(E,ESMSG6)   INDICATE TABLE IS FULL                          
         B      ATTNXIT                                                         
         DROP   R4                                                              
         EJECT                                                                  
*---------------------------------------------------------------------          
*     THE FOLLOWING ROUTINE WILL RECEIVE CONTROL IN THE EVENT OF                
*     A FAILURE IN THE ATTENTION EXIT.   THIS IS DONE, IN PART, SO              
*     AS TO AVOID DUMPS IN VTAM WHICH WOULD OCCUR OTHERWISE.                    
*                                                                               
*---------------------------------------------------------------------          
ATTNRCVY DS     0H                                                              
         BASR   RC,0                                                            
         USING  *,RC                                                            
         CH     R0,NOSDWACD      DID WE GET AN SDWA?                            
         BE     NOSDWA                                                          
         LR     R5,RE            SAVE RETURN ADDRESS                            
         LR     R2,R1            SAVE SDWA ADDRESS                              
         WTO    MF=(E,ESMSG1)                                                   
         USING  SDWA,R2                                                         
         MVC    ATTNPARM(4),SDWAPARM    PARAMETER LIST ADDRESS                  
         MVC    ATTNPSW(8),SDWAEC1      SAVE PSW AT ERROR                       
         MVC    ATTNICD1(1),SDWAICD1    INTERRUPT CODE                          
         MVC    ESMSG2+20(8),ATTNPSW    PUT OUT PSW                             
         WTO    MF=(E,ESMSG2)                                                   
         MVC    ATTNCMPC(3),SDWACMPC    COMPLETION CODE 12/12 BITS              
         MVC    ESMSG3+20(3),ATTNCMPC   PUT OUT COMP CODE                       
         WTO    MF=(E,ESMSG3)                                                   
         MVC    ATTNREGS(64),SDWAGRSV   SAVE REGS                               
         MVC    ATTNNSI(3),SDWANXTA     ESA?                                    
         MVC    ESMSG4+20(4),ATTNREGS      REG0                                 
         MVC    ESMSG4+25(4),ATTNREGS+4    REG1                                 
         MVC    ESMSG4+30(4),ATTNREGS+8    REG2                                 
         MVC    ESMSG4+35(4),ATTNREGS+12   REG3                                 
         WTO    MF=(E,ESMSG4)                                                   
*                                                                               
         MVC    ESMSG4+20(4),ATTNREGS+16   REG4                                 
         MVC    ESMSG4+25(4),ATTNREGS+20   REG5                                 
         MVC    ESMSG4+30(4),ATTNREGS+24   REG6                                 
         MVC    ESMSG4+35(4),ATTNREGS+28   REG7                                 
         WTO    MF=(E,ESMSG4)                                                   
*                                                                               
         MVC    ESMSG4+20(4),ATTNREGS+32   REG8                                 
         MVC    ESMSG4+25(4),ATTNREGS+36   REG9                                 
         MVC    ESMSG4+30(4),ATTNREGS+40   REGA                                 
         MVC    ESMSG4+35(4),ATTNREGS+44   REGB                                 
         WTO    MF=(E,ESMSG4)                                                   
*                                                                               
         MVC    ESMSG4+20(4),ATTNREGS+48   REGC                                 
         MVC    ESMSG4+25(4),ATTNREGS+52   REGD                                 
         MVC    ESMSG4+30(4),ATTNREGS+56   REGE                                 
         MVC    ESMSG4+35(4),ATTNREGS+60   REGF                                 
         WTO    MF=(E,ESMSG4)                                                   
         LR     R1,R2             SETRP REQUIRES SDWA ADDRESS IN R1             
         DROP   R2                                                              
         PRINT  GEN                                                             
         L      R6,ATTNRET        TELL MVS TO RETURN, NO PERCOLATION            
         SETRP  DUMP=NO,RC=4,FRESDWA=YES,RETADDR=(R6)                           
         BR     R5                RETURN TO MVS                                 
NOSDWA   DC     H'0'                                                            
NOSDWACD DC     H'12'                                                           
         PRINT  NOGEN                                                           
ESMSG1   WTO    'LU62SERV: ERROR IN ATTENTION EXIT',ROUTCDE=(22),MF=L           
ESMSG2   WTO    'LU62SERV: PSW ->XXXXXXXX',ROUTCDE=(22),MF=L                    
ESMSG3   WTO    'LU62SERV: COMP->XXX',ROUTCDE=(22),MF=L                         
ESMSG4   WTO    'LU62SERV: REGS->XXXX,XXXX,XXXX,XXXX',ROUTCDE=(22),MF=L         
ESMSG5   WTO   'LU62SERV: ATTN->                    ,REG10=>1234',     X        
               ROUTCDE=(11),MF=L                                                
ESMSG6   WTO   'LU62SERV: ATTENTION TABLE FULL INTERUPT LOST',         X        
               ROUTCDE=(11),MF=L                                                
         PRINT  NOGEN                                                           
ATTNICD1 DS     C                                                               
ATTNCMPC DS     CL3            COMPLETION CODE                                  
ATTNPSW  DS     D                                                               
ATTNREGS DS     16F            REGS AT TIME OF ERROR                            
ATTNRET  DS     1F             ADDRESS ATTENTION ROUTINE RETURNS TO             
ATTNPARM DS     1F             COMMO PARM                                       
ATTNNSI  DS     1F             NEXT SEQUENTIAL INSTRUCTION                      
         EJECT                                                                  
MSGMOVE  DS    0H                                                               
*** REG 1 IS TO HAVE MESSAGE TABLE OFFSET NUMBER IN IT                          
         STM   RC,R3,SAVEMSG                                                    
         BASR  RC,0                                                             
         USING *,RC                                                             
         MVI   LOGLINE,C' '                                                     
         MVC   LOGLINE+1(132),LOGLINE                                           
         L     R2,MSGTAB              GET ADDRESS OF MESSAGE TABLE              
         L     R2,0(0,R2)             GET ADDRESS OF MSG ADDRESS TBL            
         AR    R2,R1                  ADD OFFSET TO BASE                        
         L     R3,0(0,R2)             LOAD ADDRESS OF MSG ITSELF                
         SR    R1,R1                  CLEAR REG 1                               
         ICM   R1,X'8',0(R3)          PICK UP 1 BYTE LENGTH FIELD               
         SRL   R1,24                  MOVE IT TO LOW ORDER PART OF REG          
         EX    R1,MOVEIT              EXECUTE THE MOVE                          
*NOP     MVC   LOGLINE(20),1(R3)                                                
         TIME  DEC     ANSWER IN REG0/1 PACKED DECIMAL                          
         ST    R0,TIMEWRK                                                       
         STCM  R1,X'7',DATEWRK                                                  
         UNPK  TIMEDATE(13),TIMEWRK(7)                                          
         MVC   LOGLINE+1(8),TIMEDATE                                            
         LM    RC,R3,SAVEMSG                                                    
         L     R1,LOGDCBA              GET LOG'S DCB ADDRESS                    
         BR    RE                                                               
         DS    0F                                                               
TIMEWRK  DS    CL4                                                              
DATEWRK  DS    CL3                                                              
TIMEDATE DS    CL13                                                             
MOVEIT   MVC   LOGLINE+TIMESTMP(0),1(R3)   EXECUTE TARGET                       
MSGTAB   DC    V(MESSAGES)                                                      
ERROR    DC    H'0'                                                             
RPLPSZ   DC    H'158'                                                           
ATELIST  ESTAE ,ASYNCH=YES,PURGE=NONE,MF=L                                      
         LTORG                                                                  
         EJECT                                                                  
         PRINT GEN                                                              
*RPL62   RPL   AM=VTAM                                                          
*RPL62X  ISTRPL6  RPL EXTENSION                                                 
         PRINT  NOGEN                                                           
RPLPOOL  DSECT                                                                  
PLRPLNXT DS    AL4                POINT TO NEXT ENTRY                           
         DS    AL4                                                              
RPLPLEN  EQU   *-PLRPLNXT         GET TOTAL LENGTH                              
         SPACE 2                                                                
XITMAP   DSECT                                                                  
XACBPTR  DS    AL4      ADDRESS OF THE ACB                                      
XSCIPCID DS    AL4      CID VALUE -- SCIP EXIT ONLY                             
XRESV2   DS    AL4                                                              
XREASON  DS    CL4      REASON FOR EXIT INVOKATION                              
XRORPL   DS    AL4      ADDRESS OF THE READ ONLY RPL                            
XLOGNCID DS    AL4      CID VALUE -- LOGON EXIT ONLY                            
         SPACE 2                                                                
ITABLE   DSECT                                                                  
**   THIS TABLE IS USED TO COMMUNICATE INFORMATION FROM THE VTAM                
**   ATTENTION EXIT TO THE MAINLINE ROUTINE - NAMELY MASTER WAIT                
ISTATUS  DS    XL1           STATUS OF THIS ENTRY                               
IFREE    EQU   X'00'         FREE ENTRY INDICATOR   SET BY WAIT RTN             
IUSED    EQU   X'FF'         USED ENTRY INDICATOR   SET BY EXIT                 
IATTNRSN DS    CL4           ATTENTION EXIT INVOCATION REASON                   
ILUNAME  DS    CL8           LUNAME       FROM READ ONLY RPL                    
IMODE    DS    CL8           MODE NAME    FROM READ ONLY RPL                    
ICNOSDAT DS    XL7           CNOS LIMITS (FOR WHATEVER IT'S WORTH)              
ITABLEN  EQU   *-ITABLE                                                         
         SPACE                                                                  
CALLPRMS DSECT                                                                  
P1       DS    AL4            CONTROLLING INPUT CHAR STRINGS                    
P2       DS    AL4            TOKEN                                             
P3       DS    AL4            MESSAGE BUFFER                                    
P4       DS    AL4                                                              
P5       DS    AL4            ADDRESS OF LOGGING  DCB                           
P6       DS    AL4            ADDRESS OF OPTIONAL ECB                           
         SPACE 2                                                                
P3DATA   DSECT                                                                  
FLAGS    DS    XL2            INDICATORS BACK TO REQUESTER R15 ^= 0             
STOSEND  EQU   X'80'             SWITCH TO SEND MODE FLAG                       
CNFMRQSD EQU   X'40'             CONFIRMATION REQUESTED                         
ERRORDAT DS    XL4            VTAM PRI & SEC RETURN CODE INFO                   
BUFFSIZE DS    XL2            LENGTH OF AREA INTO WHICH RECEIVED                
*                             RECORDS ARE TO BE PLACED.  THE RECORD             
*                             ITSELF IS MAPPED BY NEXT TWO VARIABLES            
LENGTH   DS    XL2            LENGTH OF DATA INCLUDING LENGTH                   
BUFFER   DS    0XL200                                                           
         SPACE 2                                                                
SAVEMAP  DSECT                                                                  
         DS    1F                                                               
HISSAVE  DS    1F                                                               
MYSAVE   DS    1F                                                               
REG14    DS    1F                                                               
REG15    DS    1F                                                               
REG00    DS    1F                                                               
REG01    DS    1F                                                               
REG02    DS    1F                                                               
REG03    DS    1F                                                               
REG04    DS    1F                                                               
REG05    DS    1F                                                               
REG06    DS    1F                                                               
REG07    DS    1F                                                               
REG08    DS    1F                                                               
REG09    DS    1F                                                               
REG10    DS    1F                                                               
REG11    DS    1F                                                               
REG12    DS    1F                                                               
         EJECT                                                                  
DATA     DSECT                                                                  
ID       DS    CL4                                                              
SAVE     DS    20F                                                              
SAVEALOC DS    16F                                                              
SAVER14  DS    1F                                                               
DEALR14  DS    1F                                                               
SNDNODRE DS    1F           REG 14 FOR SEND-NO-DATA                             
PREPSAVE DS    1F                                                               
SAVEACBS DS    1F                                                               
SAVEBASE DS    1F                                                               
FMH5R14  DS    1F                                                               
CNOSR14  DS    1F                                                               
WAITR14  DS    1F                                                               
SRDATAP3 DS    1F                                                               
CALLRECB DS    AL4          ALTERNATE/USER ECB ADDRESS                          
SAVEMSG  DS    8F                                                               
SAVER14E DS    18F          REG14 SAVE AREA FOR ERR CHECK SUB RTN               
SAVEFMH5 DS    18F          SAVE AREA FOR INBOUND FMH5 PROCESSING               
SAVEEXIT DS    18F          REG14 SAVE AREA FOR ERR CHECK SUB RTN               
RECVSAVE DS    18F          SAVE AREA FOR RECEIVE SUBROUTINE                    
LOG      EQU   *                                                                
LOGDCBA  DS    1F           ADDRESS OF LOG DCB                                  
ALU62ACB DS    AL4          ADDRESS OF THE VTAM ACB                             
POOLST   DS    AL4          START OF RPL POOL                                   
AMSGMOVE DS    AL4          ADDRESS OF MESSAGE MOVE ROUTINE                     
AERRCHCK DS    AL4          ADDRESS OF ERROR ROUTINE                            
AACBSETU DS    AL4          ADDRESS OF ACB SETUP ROUTINE                        
ATTNCTA  DS    AL4          CONVERSATION TABLE ENTRY ADDRESS FOR ATTN           
***                                                                             
APPLID   DS    X            APPLID LENGTH                                       
APPLNAME DS    CL8                                                              
PARTNAME DS    CL8                      PARTNER APPL/LU-ID                      
MODENAME DS    CL8          MODENAME INPUT FROM CALLER                          
TRXNAME  DS    CL8          TRANSACTION PROGRAM NAME                            
DDSXECB  DS    1F           PTR TO ECB FOR POSTING FROM EXIT ROUTINES           
OPENOPT  DS    CL4          OPEN OPTIONS PROVIDED BY THE USER                   
PARML62C DS    2F           AREA FOR PARM LIST                                  
ATTNRSN  DS    CL4          EXIT ROUTING POSTING REASON CODES                   
ATTNITAB DS    1F           I-TAB ENTRY FOR WHICH ATTENTION WAS RUN             
DDSXRSN  DS    XL1          EXIT ROUTING POSTING REASON CODES                   
SESSFLAG DS    XL1          SESSION IN PROGRESS FLAG                            
DDSRSV1  DS    XL7          EXPANSION                                           
OPTION   DS    CL1                                                              
SUBOPTN  DS    CL1          2ND BYTE OF OPTION                                  
USERECBF DS    CL1          FLAG INDICATATOR                                    
LOGLINE  DS    CL133        AREA FOR MESSAGE                                    
OPENMSG  DS    CL4          INSERT FOR MESSAGE                                  
HEX2BYTE DS    XL2                                                              
PRT2BYTE DS    XL4                                                              
         DS    1F           FILLER ????                                         
ECBLIST2 DS    1F           ECB LIST LENGTH OF 2                                
ASYECBA  DS    1F           ADDRESS OF ECB                                      
*                                                                               
ECBAREA  DS    1F           OPCD=ASY ECB                                        
ECBAREA2 DS    1F           DUMMY ECB                                           
WTORECB  DS    1F           ECB USED WITH WTOR                                  
**                                                                              
**    THE FOLLOWING ARE THE MAIN ITEMS USED WITH WAITS & POSTING                
**                                                                              
USERECBA DS    1F           ADDRESS OF USERS ECB  (OPTIONALLY PART OF           
**                          THE MAINLIST BELOW                                  
MAINLIST DS    4F           MAIN ECBLIST HOB MARKS END                          
ATTNECB  DS    1F           ECB USED BY ATTENTION ROUTINE                       
WAITRSN  DS    CL4          WAITING REASON CODES                                
ATTNWR14 DS    1F          RETURN ADDRESS WHEN ATTN REASON MATCH                
RCVECB   DS    1F          ECB USED WITH CONTROL=RECEIVE MACRO                  
RCVRPLA  DS    1F          ADDRESS OF RPL USED WITH ASYNCH RECEIVE              
SENDECB  DS    1F          ECB USED WITH CONTROL=SEND MACRO                     
SENDRPLA DS    1F          ADDRESS OF RPL USED WITH ASYNCH SEND                 
DEALECB  DS    1F          ECB USED WITH CONTROL=DEALLOC MACRO                  
DEALRPLA DS    1F          ADDRESS OF RPL USED WITH ASYNCH DEALLOC              
CNOSECB  DS    1F          ECB USED WITH CONTROL=OPERCNTL                       
CNOSRPLA DS    1F          ADDRESS OF RPL USED WITH ASYNCH OPERCNTL             
PREPECB  DS    1F          ECB USED WITH CONTROL=PREPRCV                        
PREPRPLA DS    1F          ADDRESS OF RPL USED WITH ASYNCH PREPRCV              
FMH5ECB  DS    1F          ECB USED WITH CONTROL=RCVFMH5                        
FMH5RPLA DS    1F          ADDRESS OF RPL USED WITH ASYNCH RCVFMH5              
**                                                                              
INPARM   DS    1F          INPUT PARAMETER DATA                                 
INPARM2  DS    1F          INPUT PARAMETER DATA                                 
ENTADDR  DS    1F          ENTRY POINT ADDRESS                                  
RETADDR  DS    1F          RETURN ADDRESS                                       
SNAPLIST DS    0F                                                               
SNAPA1ST DS    1F          SNAP AREA 1 STARTING ADDRESS                         
SNAPA1EN DS    1F          SNAP AREA 1 ENDING   ADDRESS                         
SNAPA2ST DS    1F          AREA 2                                               
SNAPA2EN DS    1F                                                               
SNAPA3ST DS    1F          AREA 3                                               
SNAPA3EN DS    1F                                                               
SNAPLABL DS    2F                                                               
OPANSWR  DS    CL6          AREA FOR WTOR REPLIES                               
SAVEMASK DS    X            WHAT RECEIVED MASK SAVE AREA                        
FSTCNTCT DS    C            OPEN SEND, FIRST CONTACT FLAG                       
         DS    0F                                                               
ITABAREA DS    XL150                                                            
CNOSDATA DS    XL64      STORAGE FOR CNOS BLOCK                                 
CNOSEND  EQU   *                                                                
FMH5AREA DS    XL255     STORAGE FOR FMT-5 HEADER                               
FM5AREAL EQU   255                                                              
**  FOLLOWING ARE        RPL/RPLX  PAIRS                                        
RPL1ID   DS    CL4                                                              
SYNRPL62 RPL   AM=VTAM               RPL FOR SYNCHRONOUS OPERATIONS             
RPL62LN  EQU   *-SYNRPL62                                                       
         SPACE                                                                  
P1RPL62X ISTRPL6  RPL EXTENSION                                                 
RPL62XLN EQU   *-P1RPL62X                                                       
         SPACE                                                                  
RPL2ID   DS    CL4                                                              
ASYRPL62 RPL   AM=VTAM               RPL FOR ASYNCHRONOUS OPS                   
P2RPL62X ISTRPL6  RPL EXTENSION                                                 
         SPACE                                                                  
DMYTBLE  DS    XL60                                                             
CTABLE   DS    5XL60                                                            
DBLWRDS  EQU   ((*-DATA+7)/8)*8       SIZE OF AREA FOR GETMAIN                  
         SPACE  3                                                               
CONVTBLE DSECT                                                                  
** ---------  CONVERSATION / PARTNER SPECIFIC INFO  -----                       
CTSTATUS DS    XL1          ENTRY STATUS                                        
CTINUSE  EQU   X'80'        THIS ENTRY IS IN USE                                
CTFMH5AR EQU   X'04'        INBOUND FMH5 HAS BEEN PROCESSED                     
CTCNOSAR EQU   X'02'        INBOUND CNOS HAS BEEN PROCESSED                     
CTCIDVAL EQU   X'01'        VTAM CONVERSATION ID IS VALID                       
CTMYID   DS    CL2          OUR ID NUMBER                                       
CTFSTCT  DS    CL1          WHO MAKES FIRST CONTACT                             
CTSTATE  DS    XL1          CURRENT CONVERSATION STATE FROM RPL6CCST            
CTWRMASK DS    XL1          WHAT RECEIVED MASK FROM RECEIVE FUNCTION            
CTRTURNI DS    XL1          THE RETURNED INFO  FROM RECEIVE FUNCTION            
CTFCNERR DS    1H           RETURN CODE FROM 'CURRENT' FUNCTION                 
CTCONVID DS    XL4          RPL6CNVD   VTAM  32 BIT CONVERSATION ID             
CTLUNAME DS    CL8          RPL6LU           PARTNER LU                         
CTMODE   DS    CL8          RPL6MODE         MODE NAME FOR CONV.                
CTTRXNME DS    CL8          TRANSACTION NAME (LIMITED TO 8 BYTES)               
CTTIME   DS    XL4                                                              
CTSENDCT DS    1F           COUNT OF BYTES SENT                                 
CTRECVCT DS    1F           COUNT OF BYSTES RECEIVED                            
CTSQUAL  DS    XL1          QUALIFIER TO BE USED FOR SENDS                      
CTLENGTH EQU   *-CONVTBLE                                                       
         EJECT                                                                  
         DCBD  DSORG=PS,DEVD=DA                                                 
         PRINT NOGEN                                                            
         PRINT GEN                                                              
         ISTFM5   FORMAT 5 DSECT                                                
         PRINT NOGEN                                                            
         ISTDBIND   MAPPING OF BIND IMAGE                                       
         ISTSLD     SESSION LIMITS DATA STRUCTURE FOR DEFINE/DISPLAY            
         ISTSLCNS   SESSION LIMITS FOR CNOS                                     
         ISTUSFBC   FEEDBACK CODE DATA STRUCTURE                                
   TITLE  ' IFGRPL  RPL MAPPING(VTAM) '                                         
         PRINT GEN                                                              
         IFGRPL     DSECT=YES,AM=VTAM                                           
         PRINT NOGEN                                                            
   TITLE  ' IFGACB  ACB MAPPING(VTAM) '                                         
         IFGACB     DSECT=YES,AM=VTAM                                           
         IFGEXLST                                                               
         IHASDWA                                                                
LU62SERV CSECT                                                                  
*U62NIB  NIB   MODE=RECORD,NAME=SCHED                                           
R0       EQU    0                                                               
R1       EQU    01                                                              
R2       EQU    02                                                              
R3       EQU    03                                                              
R4       EQU    04                                                              
R5       EQU    05                                                              
R6       EQU    06                                                              
R7       EQU    07                                                              
R8       EQU    08                                                              
R9       EQU    09                                                              
RA       EQU    10                                                              
RB       EQU    11                                                              
RC       EQU    12                                                              
RD       EQU    13                                                              
R14      EQU    14                                                              
RE       EQU    14                                                              
RF       EQU    15                                                              
MSG01    EQU   00                                                               
MSG02    EQU   4                                                                
MSG03    EQU   8                                                                
MSG04    EQU   12                                                               
MSG05    EQU   16                                                               
MSG06    EQU   20                                                               
MSG07    EQU   24                                                               
MSG08    EQU   28                                                               
MSG09    EQU   32                                                               
MSG10    EQU   36                                                               
MSG11    EQU   40                                                               
MSG12    EQU   44                                                               
MSG13    EQU   48                                                               
MSG14    EQU   52                                                               
MSG15    EQU   56                                                               
MSG16    EQU   60                                                               
MSG17    EQU   64                                                               
MSG18    EQU   68                                                               
MSG19    EQU   72                                                               
MSG20    EQU   76                                                               
MSGER    EQU   80                                                               
MSGEROK  EQU   84                                                               
MSGOER   EQU   88                                                               
MSG21    EQU   92                                                               
MSG22    EQU   96                                                               
MSG23    EQU   MSG22+4                                                          
MSG24    EQU   MSG23+4                                                          
MSG25    EQU   MSG24+4                                                          
MSG26    EQU   MSG25+4                                                          
MSG27    EQU   MSG26+4                                                          
MSG28    EQU   MSG27+4                                                          
MSG29    EQU   MSG28+4                                                          
MSG30    EQU   MSG29+4                                                          
MSG31    EQU   MSG30+4                                                          
MSG32    EQU   MSG31+4                                                          
MSG33    EQU   MSG32+4                                                          
MSG34    EQU   MSG33+4                                                          
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'005FRLU62SERV05/01/02'                                      
         END   LU62SERV                                                         
