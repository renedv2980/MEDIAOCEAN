*          DATA SET SVCSMF     AT LEVEL 001 AS OF 04/08/08                      
         ACONTROL COMPAT(NOCASE)                                                
***  THIS HAS RUNNER SUPPORT IN IT.                                             
DDSSMF   CSECT                                                                  
DDSSMF   RMODE ANY                                                              
DDSSMF   AMODE 31                                                               
***                                                                             
***    FULL SUPPORT FOR AMODE 31 OPERATION                                      
***    SUPPORT FOR ASCH ENVIRONMENTS ADDED   3/14/00                            
***                                                                             
***    THIS ROUTINE IS TO ONLY GET CONTROL FROM THE MAIN ROUTINE OF             
***    SVC 247                                                                  
***    SEE ABOUT RUNNING WITH RMODE ANY, AMODE 31                               
***    SEE ABOUT MAKING IT REENTRANT                                            
***                                                                             
         ENTRY FWRSMF2                                                          
         ENTRY FWRSMF3                                                          
         ENTRY FWRSMF4                                                          
         ENTRY FWRSMF5                                                          
         ENTRY FWRSMF6                                                          
         ENTRY FWRSMF8                                                          
         ENTRY FWRSMF9                                                          
         ENTRY FWRSMFA                                                          
         ENTRY FWRSMFB                                                          
         ENTRY RUNSMFR                                                          
         USING *,RF                                                             
         STM   RE,R12,12(R13)  SAVE REGS IN CALLER SAVE AREA                    
         LH    R8,TYPE1        ENTRY 1                                          
         B     SMF1                                                             
         WTO   'SVC247 SMF ROUTINE: &SYSDATE &SYSTIME',ROUTCDE=11               
FWRSMF2  DS    0H               ENTRY POINT 2                                   
         USING *,RF                                                             
         STM   RE,R12,12(R13)  SAVE REGS IN CALLER SAVE AREA                    
         LA    R8,TYPE2        INDICATE ENTRY 2                                 
         B     SMF1                                                             
*                                                                               
FWRSMF3  DS    0H               ENTRY POINT 3  - QDQ CONTENTION                 
         USING *,RF                                                             
         STM   RE,R12,12(R13)  SAVE REGS IN CALLER SAVE AREA                    
         LA    R8,TYPE3        INDICATE ENTRY 3                                 
         B     SMF1                                                             
*                                                                               
FWRSMF4  DS    0H               ENTRY POINT 4  - START SOON JOB                 
         USING *,RF                                                             
         STM   RE,RC,12(RD)    SAVE REGS IN CALLER SAVE AREA                    
         LA    R8,TYPE4        INDICATE ENTRY 4                                 
         B     SMF1                                                             
*                                                                               
FWRSMF5  DS    0H               ENTRY POINT 5  - END SOON JOB                   
         USING *,RF                                                             
         STM   RE,RC,12(RD)     SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPE5         INDICATE ENTRY 5                                
         B     SMF1                                                             
*                                                                               
FWRSMF8  DS    0H               ENTRY POINT 8  - GENERCI   D                    
         USING *,RF                                                             
         STM   RE,R12,12(R13)   SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPE8         INDICATE TYPE 8 RECORD  REQUEST                 
         B     SMF1                                                             
*                                                                               
FWRSMF9  DS    0H               ENTRY POINT 9  - DARE RECORD                    
FWRSMF6  DS    0H               ENTRY POINT 6  - DARE RECORD 2/3/06             
         USING *,RF                                                             
         STM   RE,R12,12(R13)   SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPE6         INDICATE TYPE 6 RECORD  REQUEST                 
         B     SMF1                                                             
*                                                                               
FWRSMF7  DS    0H               ENTRY POINT 7  - 2/3/06                         
FWRSMFA  DS    0H               ENTRY POINT A  - BALANCING RECORD               
         USING *,RF                                                             
         STM   RE,RC,12(RD)     SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPE7         SETUP TO BUILD RECORD TYPE 7                    
         B     SMF1                                                             
*                                                                               
FWRSMFB  DS    0H               ENTRY POINT B  NEW REQUEST ACCTING              
         USING *,RF                                                             
         STM   RE,RC,12(RD)     SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPE9         SETUP TO BUILD RECORD TYPE 9                    
         B     SMF1                                                             
*                                                                               
RUNSMFR  DS    0H               ENTRY POINT - RUNNER SMF RECORD                 
         USING *,RF                                                             
         STM   RE,RC,12(RD)     SAVE REGS IN CALLER SAVE AREA                   
         LA    R8,TYPEA         SETUP TO BUILD RECORD TYPE 9                    
         B     SMF1                                                             
         EJECT                                                                  
SMF1     BASR  RC,0                                                             
         USING *,RC                                                             
         LR    R7,R1           SAVE PARM REG IN 7                               
         L     R0,SIZE                                                          
*NOP     GETMAIN R,LV=(0)                                                       
         STORAGE OBTAIN,LENGTH=(0)                                              
         LR    RA,R1                                                            
         USING DATA,RA                                                          
         ST    R13,SAVE+4       SAVE CALLERS SAVE AREA IN MINE                  
         LA    R3,SAVE                                                          
         ST    R3,8(R13)        STORE MY SAVE AREA IN HIS                       
         LR    R13,R3           SET R13 TO MY SAVE AREA                         
*                                                                               
         LA     R4,RECORD                                                       
         USING  SMFREC,R4                                                       
         XC     SMFREC,SMFREC                                                   
         LR     R1,R7                                                           
         N      R1,=X'FF00000'    TURN OFF LOW ORDER 3 BYTES                    
         LTR    R1,R1                                                           
         BZ     GETCVT                                                          
         OI     SMFFLAGS,SMFR1DTY R1 HAS HI ORDER BITS ON                       
GETCVT   L      R5,16             GET CVT  FROM 10 HEX                          
         USING  CVTMAP,R5                                                       
         L      R5,CVTSMCA        GET SMCA                                      
         DROP   R5                                                              
         MVC    SMFSID,SMCASID-SMCABASE(R05)  SMF SYSTEM ID                     
         MVI    SMFSYS,X'12'      INDICATE VS2 SYSTEM                           
         MVI    SMFTYPE,X'F7'     RECORD TYPE                                   
         LA     R5,SMFSIZE                                                      
         STH    R5,SMFRLEN        PUT IN RECORD SIZE                            
         SPACE                                                                  
**                                                                              
**      CAPTURE DATA FOR THE HDR SECTION                                        
**                                                                              
         L      R5,PSATOLD-PSA    GET CURRENT TCB                               
         USING  TCB,R5                                                          
         L      R6,TCBTIO         GET ADDRESS OF TIOT                           
         L      R3,TCBJSCB        GET JSCB ADDRESS                              
         DROP   R5                                                              
         USING  TIOT1,R6                                                        
         MVC    TMPJOBNM,TIOCNJOB GET THE JOBNAME FROM TIOT  (HDR)              
         MVC    TMPJOBST,TIOCSTEP GET THE STEP.PROC STEP NAME (HDR)             
         DROP   R6                                                              
         SPACE                                                                  
**       LA     RF,JOBID                                                        
**       O      RF,HIGHBIT            TURN ON 31 BIT INDICATOR                  
**       BSM    0,RF                                                            
JOBID    LA     R6,TMPJOBID           (HDR)                                     
         IAZXJSAB READ,WORKID=(R6)    ACCOMODATE ASCH ENVIRONMENTS              
         CHI    R8,TYPE9                                                        
         BE     NEWHDR                                                          
**       LA     RF,SMFCONT                                                      
**       N      RF,OFFHIBIT           TURN OFF 31 BIT INDICATOR                 
**       BSM    0,RF                                                            
SMFCONT  DS     0H                                                              
*NOP     MVC    JOBIDTXT+8(8),TMPJOBID                                          
*NOP     WTO    TEXT=JOBIDMSG,MF=(E,WTOLIST)                                    
         CHI    R8,TYPE9                                                        
         BE     NEWHDR                                                          
* CONSTRUCT HEADER SECTION IN ORIGINAL LOCATION                                 
         MVC    SMFJOBNM(32),TMPJOBNM                                           
         LA     R5,SMFJOBNM-SMFREC    GET HEADER OFFSET VALUE                   
         STH    R5,SMFDDSHO                                                     
         LA     R5,SMFDDSEH-SMFJOBNM  GET HEADER LENGTH                         
         STH    R5,SMFDDSHL                                                     
         B      CHKTYPE                                                         
NEWHDR   DS     0H                                                              
**                                                                              
**  THE SUBTYPE 9 DDS RECORD HAS 2 ADDITIONAL SECTIONS FOR A TOTAL OF 4         
**  THE FOLLOWING WILL PLACE THE HDR SECTION INFO FURTHER INTO THE              
**  RECORD TO MAKE ROOM FOR THE 2 ADDITIONAL OFFSET & LENGTH PAIRS              
**                                                                              
         MVC    SMNJOBNM(32),TMPJOBNM                                           
         LA     R5,SMNJOBNM-SMFREC    GET HEADER OFFSET VALUE                   
         STH    R5,SMFDDSHO                                                     
         LA     R5,32                 >>> CHECK FOR EQUATE HERE                 
         STH    R5,SMFDDSHL                                                     
*NOP     WTO   TEXT=MSG1,MF=(E,WTOLIST)                                         
         SPACE                                                                  
CHKTYPE  B      THRDETRY                                                        
         USING  TABLEMAP,R9                                                     
USETBLE  LA     R5,WHERETG                                                      
         SR     R9,R9                                                           
         SLL    R8,3                 MULTIPLY BY 8 (2**3)                       
         LA     R9,0(R8,R5)          CALCULATE ADDR IN WHERE TO GO TBL          
         L      R5,RTNADDR           LOAD TARGET ADDRESS                        
         BASR   RE,R5                BRANCH TO IT                               
         DC     H'0'                 WE DON'T EXPECT A RETURN                   
         DS     0F                                                              
HIGHBIT  DC     X'80000000'                                                     
OFFHIBIT DC     X'7FFFFFFF'                                                     
         EJECT                                                                  
***                                                                             
**   PROCESS REQUEST ACCOUNTING DATA                                            
***                                                                             
MAKEREC1 CLI    ENTRYTYP,TYP1E       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 1 RECORD                
         LA     R5,SMFSYSTE-SMFREC    GET OFFSET TO TYPE 1 RECORD               
         STH    R5,SMFDDS1O           STORE OFFSET                              
         LA     R5,DDS1LEN            GET LENGTH OF TYPE 1 RECORD               
         STH    R5,SMFDDS1L           STORE LENGTH                              
         USING  MASTD,R7              MAKE ORIGINAL DDS STATS RECORD            
         MVC    SMFSYSTE,MCSYSTEM                                               
         MVC    SMFPROG,MCPROG                                                  
         MVC    SMFUSER,MCUSER                                                  
         MVC    SMFMEDIA,MCMEDIA                                                
*                                                                               
         MVC    SMFREQNO,MCREQNO                                                
         MVC    SMFSEGNO,MCSEGNO                                                
*                                                                               
         MVC    SMFREQCP,MCREQTCB    FOR NEW MASTC                              
*        MVC    SMFREQCP,MCREQCPU    FOR OLD MASTC/D                            
         MVC    SMFREQLP,MCREQLPS                                               
         MVC    SMFREQSI,MCREQSIO                                               
         MVC    SMFREQPA,MCREQPAG                                               
         MVC    SMFREQLI,MCREQLIN                                               
*                                                                               
         MVC    SMFREMOT,MCREMOTE                                               
         MVC    SMFREMPQ,MCREMPQK    PRINT Q STUFF                              
         MVC    SMFPWCDE,MCIDPOWC    POWER CODE                                 
         L      R6,MCUTL            GET UTL ENTRY                               
         LTR    R6,R6                                                           
         BZ     RECFINAL                                                        
         MVC    SMFFILE(1),0(R6)                                                
         B      RECFINAL                                                        
         DROP   R7                                                              
         EJECT                                                                  
***                                                                             
**     PROCESS REQUEST CARD IMAGES                                              
***                                                                             
MAKEREC2 CLI    ENTRYTYP,TYPE2       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         MVC    SMFRECIM,0(R7)       MOVE THE DATA PASSED W/O EDIT              
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 2 RECORD                
         LA     R5,SMFRECIM-SMFREC   GET OFFSET TO TYPE 2 DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         MVI    SMFDDS1L+1,X'50'     INDICATE LENGTH OF OPTIONAL DATA           
         B      RECFINAL                                                        
         EJECT                                                                  
***                                                                             
**     PROCESS QDQ CONTENTION RECORDS                                           
***                                                                             
MAKEREC3 CLI    ENTRYTYP,TYPE3       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
THRDETRY EQU    *                    3RD ENTRY -QDQ CONTENTION                  
         LA     R5,TYPE3                                                        
         CR     R8,R5                DETERMINE ENTRY TYPE                       
         BNE    USETBLE                                                         
*NOPP    BNE    FITHETRY                                                        
         SR     R05,R05              CLEAR REG 5                                
         ICM    R05,X'C',0(R07)      REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R05,16               MOVE OVER TWO BYTES                        
         EX     R05,TYP3MOV                                                     
         MVI    SMFSUBTY,X'03'       INDICATE DDS TYPE 3 RECORD                 
         STH    R05,SMFDDS1L         STORE LENGTH VALUE                         
         LA     R05,SMFEQDQD-SMFREC  GET OFFSET TO TYPE 3 DATA                  
         STH    R05,SMFDDS1O         STORE OFFSET                               
         B      RECFINAL                                                        
         EJECT                                                                  
***                                                                             
**     START A SOON REQUEST                                                     
***    UPDATED TO SUPPORT TRUNCATION OF LONG RECORDS INSTEAD OF ABEND           
***                                                                             
MAKEREC4 CLI    ENTRYTYP,TYPE4       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 4 RECORD                
         SR     R5,R5                CLEAR REG 5                                
         SR     R1,R1                CLEAR REG 1                                
         ICM    R5,X'C',0(R7)        REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER TWO BYTES                        
         CH     R5,MAXREC            DO WE HAVE ENOUGH ROOM?                    
         BNH    TYPE4C                                                          
         OI     SMFFLAGS,SMFTRUNC    INDICATE RECORD WAS TRUNCATED              
         LH     R5,MAXREC            SET TO MAX LENGTH                          
TYPE4C   LA     R1,SMFFIXLN(,R5)     COMPUTE COMPLETE LENGTH                    
         STH    R1,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         EX     R5,TYP4MOV                                                      
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         LA     R5,SMFEQDQD-SMFREC   GET OFFSET TO TYPE 4 DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         B      RECFINAL                                                        
TYP4MOV  MVC   SMFSRTSN,2(R07)      MOVE THE DATA PASSED, SKIP OVER LEN         
TYP5MOV  MVC   SMFENDSN,2(R07)      MOVE THE DATA PASSED W/O EDIT               
**                                  DON'T INCLUDE LENGTH AS OF 2/19/98          
         EJECT                                                                  
***                                                                             
***                                                                             
***                                                                             
MAKEREC5 CLI    ENTRYTYP,TYPE5       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         SR     R5,R5                CLEAR REG 5                                
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 5 RECORD                
         ICM    R5,X'C',0(R7)        REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER TWO BYTES                        
         CH     R5,MAXREC            DO WE HAVE ENOUGH ROOM?                    
         BH     REC2BIG              NO, BAD NEWS                               
         LA     R1,SMFFIXLN(,R5)     COMPUTE COMPLETE LENGTH                    
         STH    R1,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         EX     R5,TYP5MOV                                                      
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         LA     R5,SMFEQDQD-SMFREC   GET OFFSET TO TYPE 5 DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         B      RECFINAL                                                        
*NOP     DC     H'0'                                                            
         EJECT                                                                  
***                                                                             
***    DARE RECORD                                                              
***                                                                             
MAKEREC6 CLI    ENTRYTYP,TYPE6       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         SR     R5,R5                CLEAR REG 5                                
         SR     R1,R1                CLEAR REG 1                                
         ICM    R5,X'C',0(R7)        REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER IN REGISTER                      
         CH     R5,MAXREC2           DO WE HAVE ENOUGH ROOM?                    
         BH     REC2BIG              NO, BAD NEWS                               
         LA     R1,SMFFIXLN(,R5)     COMPUTE COMPLETE LENGTH                    
         STH    R1,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         EX     R5,TYP6MOV                                                      
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 6 RECORD                
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         LA     R5,SMFEQDQD-SMFREC   GET OFFSET TO TYPE 6 DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         B      RECFINAL                                                        
TYP6MOV  MVC   SMFENDSN,2(R7)        SKIP LENGTH AS OF 1/8/97                   
         EJECT                                                                  
MAKEREC7 CLI    ENTRYTYP,TYPE7       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         SR     R5,R5                CLEAR REG 5                                
         SR     R1,R1                CLEAR REG 1                                
         ICM    R5,X'C',0(R7)        REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER TWO BYTES                        
         SH     R5,=H'2'             DEDUCT 2 FOR LENGTH FIELD                  
         CH     R5,MAXREC            DO WE HAVE ENOUGH ROOM?                    
         BNH    TYP702               YES, CONTINUE                              
         DC     H'0'                                                            
         LH     R5,MAXREC            NO, SET TO MAX RECORD SIZE                 
TYP702   LA     R1,SMFFIXLN(,R5)     COMPUTE COMPLETE LENGTH                    
         STH    R1,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         EX     R5,TYP7MOV                                                      
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS TYPE 7 RECORD                
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         LA     R5,SMFFIBAL-SMFREC   GET OFFSET TO TYPE A DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         B      RECFINAL                                                        
TYP7MOV  MVC   SMFENDSN,2(R7)       FILE BALANCING RECORD, SKIP LENGTH          
         EJECT                                                                  
**                                                                              
**  UNIVERSAL/UTILITY RECORD, 1ST CHARACTER AFTER LENGTH IS MEANT TO            
**  BE AN INDICATOR OF THE FORMAT OF THIS PARTICULAR RECORD                     
**                                                                              
MAKERECA CLI    ENTRYTYP,TYPEA       PROPER ENTRY IN TABLE?                     
         BE     TYPEACON                                                        
MAKEREC8 CLI    ENTRYTYP,TYPE8       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
TYPEACON SR     R5,R5                CLEAR REG 5                                
         SR     R1,R1                CLEAR REG 1                                
         ICM    R5,X'C',0(R7)        REG7 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER TWO BYTES                        
         SHI    R5,2                 DEDUCT 2 FOR LENGTH FIELD                  
         CH     R5,MAXREC            DO WE HAVE ENOUGH ROOM?                    
         BNH    TYP802               YES, CONTINUE                              
         LH     R5,MAXREC            NO, SET TO MAX RECORD SIZE                 
TYP802   LA     R1,SMFFIXLN(,R5)     COMPUTE COMPLETE LENGTH                    
         STH    R1,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         EX     R5,MOVE_NO_LEN                                                  
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE DDS RECORD TYPE                  
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         LA     R5,SMFFIBAL-SMFREC   GET OFFSET TO TYPE A DATA                  
         STH    R5,SMFDDS1O          STORE OFFSET                               
         B      RECFINAL                                                        
MOVE_NO_LEN MVC SMFENDSN,2(R7)        SKIP LENGTH                               
         EJECT                                                                  
**                                                                              
**  NEW STYLE REQUEST ACCOUNTING DATA                                           
**    R7 + 0  ->  LEN, STATS AREA                                               
**       + 4  ->  LEN, REQUEST INFO (ALL CARDS)                                 
**       + 8  ->  LEN, DIRECT/ARCHIVE "CARD"?                                   
**    R4      ->  AREA OF THE SMF RECORD                                        
**                                                                              
MAKEREC9 CLI    ENTRYTYP,TYPE9       PROPER ENTRY IN TABLE?                     
         BNE    0(0,RE)              NOPE, EXIT                                 
         MVC    SMFSUBTY(1),DDSRTYPE  INDICATE RECORD SUB TYPE                  
         SR     R5,R5                CLEAR REG 5                                
         SR     R1,R1                CLEAR REG 1                                
**                                                                              
**  HERE WE NOW MAKE AN DDS SMF RECORD OF MORE THAN 1 DDS SECTION               
**       R6     POINTS TO THE PARAMETER AREA; LENGTH + STRING                   
**       R8     POINTS TO THE BEGINNING OF THE SMF RECORD SECTION               
**       R5     CONTAINS THE LENGTH OF THE STRING                               
**                                                                              
**                                                                              
** PROCESS FIRST SECTION                                                        
         MVC    MSG(MSG2LEN),MSG2                                               
         LA     R1,SMNDDSEH-SMFREC   GET OFFSET TO DDS SUB SECTION 1            
         STH    R1,SMFDDS1O          STORE OFFSET IN THE RECORD                 
         USING  DDSSECM,R8                                                      
         LA     R8,SMNDDSEH          GET ADDRESS OF DDS SECTION 1               
         L      R6,0(R7,0)           GET ADDRESS OF VALUES                      
         LTR    R6,R6                                                           
         BZ     NODDS1                                                          
         ICM    R5,X'C',0(R6)        REG1 PTS TO 2 BYTES OF LENGTH              
*NOP     STCM   R5,15,MSG1_TXT+12                                               
         SRL    R5,16                MOVE OVER TWO BYTES                        
*NOP     STCM   R6,15,MSG1_TXT+17                                               
*NOP     WTO   TEXT=MSG1,MF=(E,WTOLIST)                                         
         AHI    R5,-2                DEDUCT 2 FOR LENGTH FIELD                  
         BNP    NODDS1                                                          
         CHI    R5,MAXDDS1           DO WE HAVE ENOUGH ROOM?                    
         BNH    TYP901               YES, CONTINUE                              
         LA     R5,MAXDDS1           SET LENGTH TO MAX VALUE                    
         OI     SMFFLAGS,SMFTRUNC    INDICATE OVERALL TRUNCATION                
         STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
         OI     SMFDDS1L,X'80'       INDICATE THIS SUBTYPE TRUNCATED            
         B      TYP901B                                                         
TYP901   STH    R5,SMFDDS1L          STORE LENGTH VALUE                         
TYP901B  BCTR   R5,0                                                            
         EX     R5,MOVE_NO_LEN2                                                 
         AR     R8,R5                POINT TO END OF 1ST SECTION                
         LA     R8,1(R8,0)                                                      
         MVI    MSG+10,C'1'        INDICATE SECTION 1                           
*NOP     WTO    TEXT=MSG,MF=(E,WTOLIST)                                         
         B      DDS2                                                            
NODDS1   SR     R1,R1                                                           
         STH    R1,SMFDDS1L          LENGTH IS ZERO                             
** PROCESS 2ND   SECTION                                                        
DDS2     LR     R1,R8                                                           
         SR     R1,R4                                                           
         STH    R1,SMFDDS2O          STORE OFFSET IN THE RECORD                 
         L      R6,4(R7,0)           GET ADDRESS OF VALUES, P2                  
         LTR    R6,R6                                                           
         BZ     NODDS2                                                          
         ICM    R5,X'C',0(R6)        REG6 PTS TO 2 BYTES OF LENGTH              
         SRL    R5,16                MOVE OVER TWO BYTES                        
         AHI    R5,-2                DEDUCT 2 FOR LENGTH FIELD                  
         BNP    NODDS2                                                          
         CHI    R5,MVCMAX            WILL MVC DO THE MOVE?                      
         BNH    TYP902               YES, CONTINUE                              
         CHI    R5,MAXDDS2                                                      
         BNH    TYP902C                                                         
         OI     SMFFLAGS,SMFTRUNC    INDICATE OVERALL TRUNCATION                
         LA     R5,MAXDDS2           SET LENGTH TO 255                          
         STH    R5,SMFDDS2L          STORE LENGTH VALUE                         
         OI     SMFDDS2L,X'80'       INDICATE THIS SUBTYPE TRUNCATED            
TYP902C  EQU    *                    DO MVCL  2 EVEN/ODD REG PAIRS              
**                                                                              
**      R4  ?                  R5 LENGTH                                        
**      R6 +2 IS DATA          R7                                               
**      R8 AREA IN RECORD      R9   "      (TEMP)                               
**                                                                              
         MVI    MSG+10,C'L'        INDICATE SECTION MVCL                        
*NOP     WTO    TEXT=MSG,MF=(E,WTOLIST)                                         
         ST     R7,SAVER7                                                       
         LR     R7,R5                                                           
         LR     R9,R5                GET COPY OF LENGTH                         
         MVCL   R8,R6                                                           
         L      R7,SAVER7                                                       
         STH    R5,SMFDDS2L          STORE LENGTH VALUE                         
         AR     R8,R5                POINT TO END OF SECTION                    
         B      DDS3                 BYPASS THE MVC                             
TYP902   STH    R5,SMFDDS2L          STORE LENGTH VALUE                         
TYP902B  BCTR   R5,0                                                            
         EX     R5,MOVE_NO_LEN2                                                 
TYP902D  AR     R8,R5                POINT TO END OF SECTION                    
         LA     R8,1(R8,0)                                                      
         MVI    MSG+10,C'2'        INDICATE SECTION 2                           
*NOP     WTO    TEXT=MSG,MF=(E,WTOLIST)                                         
         B      DDS3                                                            
NODDS2   SR     R1,R1                                                           
         STH    R1,SMFDDS2L          LENGTH IS ZERO                             
**                                                                              
** PROCESS 3RD   SECTION   (DIRECT CARD)                                        
**                                                                              
DDS3     LR     R1,R8                                                           
         SR     R1,R4                                                           
         STH    R1,SMFDDS3O          STORE OFFSET IN THE RECORD                 
         L      R6,8(R7,0)           GET ADDRESS OF VALUES, P3                  
         LTR    R6,R6                                                           
         BZ     NODDS3                                                          
         LHI    R5,DDS3LEN           SET LENGTH TO 80 BY CONVENTION             
         STH    R5,SMFDDS3L          STORE LENGTH VALUE                         
         BCTR   R5,0                                                            
         EX     R5,MOVE_NO_LEN2                                                 
         AR     R8,R5                POINT TO END OF SECTION                    
         LA     R8,1(R8,0)                                                      
         MVI    MSG+10,C'3'        INDICATE SECTION 3                           
*NOP    WTO    TEXT=MSG,MF=(E,WTOLIST)                                          
**                                                                              
** PROCESS 4TH   SECTION                                                        
**                                                                              
DDS4     LR     R1,R8                                                           
         SR     R1,R4                                                           
         STH    R1,SMFDDS4O          STORE OFFSET IN THE RECORD                 
         L      R6,12(R7,0)          GET ADDRESS OF VALUES, P4                  
         LTR    R6,R6                                                           
         BZ     NODDS4                                                          
         LHI    R5,DDS4LEN           SET LENGTH                                 
         STH    R5,SMFDDS4L          STORE LENGTH VALUE                         
         BCTR   R5,0                                                            
         EX     R5,MOVE_NO_LEN2                                                 
         AR     R8,R5                POINT TO END OF SECTION                    
         LA     R8,1(R8,0)                                                      
         MVI    MSG+10,C'4'          INDICATE SECTION 4                         
*NOP     WTO    TEXT=MSG,MF=(E,WTOLIST)                                         
TYP9END  DS     0H                                                              
         LA     R1,SMFREC                                                       
         SR     R8,R1                                                           
         STH    R8,SMFRLEN           SET RECORD SIZE TO BE WRITTEN              
         B      RECFINAL                                                        
NODDS3   SR     R1,R1                                                           
         STH    R1,SMFDDS3L          LENGTH IS ZERO                             
         B      DDS4                                                            
NODDS4   SR     R1,R1                                                           
         STH    R1,SMFDDS4L          LENGTH IS ZERO                             
         B      TYP9END                                                         
MVCMAX   EQU    256                                                             
MAXDDS1  EQU    200                 AVOID RUN AWAY RECORD LENGTH                
MAXDDS2  EQU    1000                MAX STRING OF REQUEST CARDS                 
DDS3LEN  EQU    80                                                              
DDS4LEN  EQU    72                                                              
MOVE_NO_LEN2 MVC DDSSEC,2(R6)       SKIP LENGTH                                 
         EJECT                                                                  
**                                                                              
**    THE FOLLOWING IS THE WHERE TO GO TABLE BASED ON ENTRY POINT USED          
**                                                                              
         DC     C'WHERE TO GO TABLE'                                            
         DS     0F                                                              
WHERETG  DC     AL1(DUMMY),X'00',CL2'00',A(BADTYPE)    DUMMY ENTRY              
         DC     AL1(TYP1E),X'01',CL2'11',A(MAKEREC1)   REQUEST ACCOUNT          
         DC     AL1(TYPE2),X'02',CL2'22',A(MAKEREC2)   REQUEST CARD             
         DC     AL1(TYPE3),X'03',CL2'33',A(THRDETRY)   QDQ                      
         DC     AL1(TYPE4),X'04',CL2'44',A(MAKEREC4)   SOON START               
         DC     AL1(TYPE5),X'05',CL2'55',A(MAKEREC5)   SOON END                 
         DC     AL1(TYPE6),X'06',CL2'06',A(MAKEREC6)   DARE ACTNG               
         DC     AL1(TYPE7),X'07',CL2'07',A(MAKEREC7)   BALANCING                
         DC     AL1(TYPE8),X'08',CL2'88',A(MAKEREC8)   GENERAL                  
         DC     AL1(TYPE9),X'09',CL2'99',A(MAKEREC9)   NEW REQUEST ACT          
         DC     AL1(TYPEA),X'0A',CL2'99',A(MAKERECA)   RUNNER RECORD            
         DS     0H                                                              
REC2BIG  DC     H'0'                                                            
         LH     R2,ABEND4F7         RECORD IS TOO BIG FOR BUFFER                
         B      ABEND                                                           
BADTYPE  LH     R2,ABEND3F7                                                     
ABEND    ABEND  (R2),DUMP,STEP,SYSTEM                                           
**                                                                              
**    WE GET THE TIME HERE TO BE AS CLOSE AS POSSIBLE TO THE TIME THE           
**    RECORD IS GIVEN TO SMF                                                    
**                                                                              
RECFINAL TIME  BIN             R0=TIME R1=DATE                                  
         STCM  R0,15,SMFTIME                                                    
         STCM  R1,15,SMFDATE                                                    
         SMFEWTM (R4),BRANCH=NO,SUBSYS=#DDS                                     
         LTR   RF,RF                                                            
         BZ    EXIT                                                             
         MVC   WTORLSTW(WTORLSTL),WTORLST                                       
         XC    WTORECB,WTORECB                                                  
ASKOP    WTOR  TEXT=(WTORMSG,REPLYA,5,WTORECB),                        X        
               MF=(E,WTORLSTW,EXTENDED)                                         
         WAIT  ECB=WTORECB                                                      
         CLI   REPLYA,C'R'         DID OP SPECIFY  R- RETRY?                    
         BE    RECFINAL            YES GO TRY AGAIN                             
         CLI   REPLYA,C'C'         DID OP SPECIFY  C- CANCEL                    
         BE    EXIT                YES EXIT                                     
         B     ASKOP                                                            
         DC    H'0'                                                             
ABEND3F7 DC    XL2'03F7'                                                        
ABEND4F7 DC    XL2'04F7'                                                        
*                                                                               
***  RETURN TO 24 BIT MODE                                                      
EXIT31   LA     RF,EXIT                                                         
         N      RF,OFFHIBIT           TURN OFF 31 BIT INDICATOR                 
         BSM    0,RF                                                            
EXIT     EQU   *                                                                
         L     R5,4(,R13)       GET PTR TO CALLERS SAVE AREA BEFORE             
*                               FREEMAIN OF MY SAVE AREA                        
         L     R3,SIZE                                                          
         STORAGE RELEASE,LENGTH=(R3),ADDR=(RA)                                  
         L     RE,12(,R5)      PICK UP RETURN ADDRESS                           
         LM    R0,R12,20(R5)   RESTORE REGS                                     
         BR    RE              RETURN TO CALLER                                 
         DS    0H                                                               
MAXREC   DC    AL2(SMFDDSM)                                                     
MAXREC2  DC    AL2(255)                                                         
TYP3MOV  MVC   SMFEQDQD,0(R07)      MOVE THE DATA PASSED W/O EDIT               
*                                                                               
WTOLIST  WTO   TEXT=(R1),MF=L                                                   
WTOLISTL EQU   *-WTOLIST            GET SIZE OF AREA                            
*                                                                               
WTORLST  WTOR   TEXT=(,,,),MF=L                                                 
WTORLSTL EQU    *-WTORLST                                                       
*                                                                               
JOBIDMSG DC    AL2(L'JOBIDTXT)                                                  
JOBIDTXT DC    C'JOBID=> 12345678  '                                            
*                                                                               
MSG1     DC    AL2(L'MSG1_TXT)                                                  
MSG1_TXT DC    C'DEBUG POINT ---- ----'                                         
*                                                                               
MSG2     DC    AL2(L'MSG2_TXT)                                                  
MSG2_TXT DC    C'SECTION ? COMPLETE'                                            
*                012345678                                                      
MSG2LEN  EQU   *-MSG2                                                           
*                                                                               
WTORMSG  DC    AL2(L'WTORLTXT)                                                  
WTORLTXT DC    C'UNABLE TO WRITE DDS SMF RECORD (TYPE 247), SPECIFY R (X        
               RETRY) OR C (CANCEL)'                                            
*                                                                               
         EJECT                                                                  
TABLEMAP DSECT                                                                  
ENTRYTYP DS     AL1       1ST BYTE, ENTRY TYPE IN TABLE                         
DDSRTYPE DS     XL1       DDS SUBTYPE BEING CREATED                             
FLAG1    DS     XL1                                                             
FLAG2    DS     XL1                                                             
RTNADDR  DS     AL4       ADDRESS OF ROUTINE TO PROCESS THE RECORD              
         SPACE  3                                                               
SMFREC   DSECT                                                                  
SMFRLEN  DS    H                                                                
SMFRDES  DS    H                                                                
SMFSYS   DS    X                                                                
SMFTYPE  DS    X                                                                
SMFTIME  DS    XL4                                                              
SMFDATE  DS    PL4                                                              
SMFSID   DS    CL4                                                              
**                                                                              
SMFSUBSY DS    CL4       SUBSYSTEM IDENTIFICATION                               
SMFFLAGS DS    XL1                                                              
SMFTRUNC EQU   X'80'     THIS SMF RECORD HAS BEEN TRUNCATED                     
SMFR1DTY EQU   X'40'     INPUT R1 HAS BITS IN HIGH ORDER BYTE ON                
SMFSUBTY DS    XL1       RECORD SUBTYPE (DDS DEFINED)                           
SMFDDSHO DS    XL2       OFFSET TO DDS HEADER (FROM SMFREC)                     
SMFDDSHL DS    XL2       LENGTH OF DDS HEADER                                   
SMFDDS1O DS    XL2       OFFSET TO 1ST DDS SECTION                              
SMFDDS1L DS    XL2       LENGTH OF 1ST DDS SECTION                              
SMFDDS1E DS    0X        END OF 1ST DDS SECTION                                 
**                                                                              
**  FOR (SUB) TYPE 9 RECORDS TWO ADDTIONAL OFFEST& LENGTH PAIRS ARE             
**  PRESENT HERE, THEN FOLLOWED BY THE HDR SECTION ETC                          
**                                                                              
**  DDS HEADER SECTION FOLLOWS                                                  
SMFJOBNM DS    CL8       JOB           NAME                                     
SMFJOBST DS    CL16      STEP/PROCSTEP NAME                                     
SMFJOBID DS    CL8       JES JOB ID    NAME                                     
SMFDDSEH EQU   *         END OF DDS HEADER                                      
SMFFIXLN EQU   SMFDDSEH-SMFREC                                                  
SMFHDRLN EQU   SMFDDSEH-SMFJOBNM       LENGTH OF HEADER FOR SHIFT               
**                       BEGIN DDS DATA SECTION                                 
SMFSYSTE DS    CL2                                                              
SMFPROG  DS    CL2                                                              
SMFUSER  DS    CL2                                                              
SMFMEDIA DS    CL1                                                              
SMFREQNO DS    PL3                                                              
SMFSEGNO DS    PL3                                                              
SMFREQCP DS    XL4      REQUEST CPU TIME                                        
SMFREQLP DS    XL4              LPS                                             
SMFREQSI DS    XL4              SIO'S                                           
SMFREQPA DS    XL4              PAGES                                           
SMFREQLI DS    XL4              LINES PRINTED                                   
SMFREMOT DS    CL80                                                             
SMFREMPQ DS    XL7             ???                                              
SMFFILE  DS    X                                                                
SMFPWCDE DS    XL4             POWER CODE FIELD                                 
SMFEND   DS    0X                                                               
         ORG   SMFSYSTE                                                         
SMFRECIM DS    CL80            REQUEST CARD IMAGE                               
         ORG   SMFSYSTE                                                         
SMFEQDQD DS    CL32            ENQ/DEQ DATA                                     
         ORG   SMFSYSTE                                                         
SMFENDSN DS    CL4             END OF SOON JOB DATA                             
         ORG   SMFSYSTE                                                         
SMFSRTSN DS    CL4             START OF SOON JOB DATA                           
*      ABOVE FIELD AREA IS ACTUALLY MUCH LONGER                                 
         ORG   SMFSYSTE                                                         
SMFFIBAL DS    CL4             START OF FILE BALANCING DATA                     
*      ABOVE FIELD AREA IS ACTUALLY MUCH LONGER                                 
DDS1LEN  EQU   SMFEND-SMFSYSTE LENGTH OF SUBTYPE 1 RECORD                       
SMFSIZE  EQU   SMFEND-SMFREC   LENGTH OF LARGEST  RECORD                        
SMFDDSM  EQU   SMFSIZE-SMFFIXLN    LARGEST AREA TO HOLD MOVED IN DATA           
         ORG   SMFDDS1E                                                         
SMFDDS2O DS    XL2       OFFSET TO 2ND DDS SECTION                              
SMFDDS2L DS    XL2       LENGTH OF 2ND DDS SECTION                              
SMFDDS3O DS    XL2       OFFSET TO 3RD DDS SECTION                              
SMFDDS3L DS    XL2       LENGTH OF 3RD DDS SECTION                              
SMFDDS4O DS    XL2       OFFSET TO 4TH DDS SECTION                              
SMFDDS4L DS    XL2       LENGTH OF 5TH DDS SECTION                              
SMNJOBNM DS    CL8       JOB           NAME                                     
SMNJOBST DS    CL16      STEP/PROCSTEP NAME                                     
SMNJOBID DS    CL8       JES JOB ID    NAME                                     
SMNDDSEH EQU   *         END OF DDS HEADER FOR (SUB) TYPE 9 RECS                
         EJECT                                                                  
DDSSECM  DSECT                                                                  
DDSSEC   DS    C                                                                
**                       BEGIN DDS DATA SECTION                                 
         EJECT                                                                  
         SPACE 3                                                                
MASTD    DSECT         SWITCH TO PAN MAPPING  8/28/00                           
         COPY  DDMASTC                                                          
         EJECT                                                                  
DATA     DSECT                                                                  
         DS    0D                                                               
SAVE     DS    20F                                                              
SAVER7   DS    F                                                                
WTORECB  DS    F                                                                
MSG      DS    XL(MSG2LEN)                                                      
TMPJOBNM DS    CL8       JOB           NAME                                     
TMPJOBST DS    CL16      STEP/PROCSTEP NAME                                     
TMPJOBID DS    CL8       JES JOB ID    NAME                                     
BUFFER   DS    F                                                                
REPLYA   DS    CL5                                                              
WTORLSTW DS    XL(WTORLSTL)                                                     
RECORD   DS    XL(SMFSIZE)                                                      
ENDOFA   DS    0X                                                               
DDSSMF   CSECT                                                                  
#DDS     DC    CL4'#DDS'                                                        
ANUM     DC    F'6000'                                                          
*IZE     DC    F'800'  CHANGE TO DOUBLE WORD MULTIPLE                           
SIZE     DC    F'990'  CHANGE TO DOUBLE WORD MULTIPLE                           
DUMMY    EQU    0       DUMMY TYPE                                              
TYPE1    DC    H'1'                                                             
TYP1E    EQU    1       EQUATE VERSION OF TYPE1                                 
TYPE2    EQU    2                                                               
TYPE3    EQU    3                                                               
TYPE4    EQU    4                                                               
TYPE5    EQU    5                                                               
TYPE6    EQU    6                                                               
TYPE7    EQU    7        FILE BALANCING RECORD                                  
TYPE8    EQU    8        GENERIC/UTILITY RECORD                                 
TYPE9    EQU    9                                                               
TYPEA    EQU    10       RECORD FOR RUNNER                                      
R0       EQU    00                                                              
R1       EQU    01                                                              
R2       EQU    02                                                              
R3       EQU    03                                                              
R4       EQU    04                                                              
R5       EQU    05                                                              
R05      EQU    05                                                              
R6       EQU    06                                                              
R7       EQU    07                                                              
R07      EQU    07                                                              
R8       EQU    08                                                              
R08      EQU    08                                                              
R9       EQU    09                                                              
RA       EQU    10                                                              
RB       EQU    11                                                              
RC       EQU    12                                                              
R12      EQU    12                                                              
RD       EQU    13                                                              
R13      EQU    13                                                              
RE       EQU    14                                                              
R14      EQU    14                                                              
RF       EQU    15                                                              
R15      EQU    15                                                              
         PRINT  NOGEN                                                           
         IEESMCA                                                                
         IHAPSA                                                                 
*NOP     CVT    DSECT=YES,LIST=YES                                              
         CVT    DSECT=YES                                                       
         IEZJSCB                IEZJSCB                                         
         IHAASCB                                                                
         IHAASSB                                                                
         IHASTCB                                                                
         IAZJSAB DSECT=YES                                                      
         IKJTCB                 TCB                                             
         IEFTIOT1       TCBTIO  TIOT1 IN USING                                  
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'001SVCSMF    04/08/08'                                      
         END                                                                    
