*          DATA SET FASCRIPTQS AT LEVEL 004 AS OF 06/12/98                      
***********************************************************************         
*                                                                     *         
* EQUATES FOR THE TWO CHARACTER SCRIPT OP CODES.                      *         
*                                                                     *         
* SOME OP CODE HAVE NO OPERANDS (EG 00 WHICH MEANS HIT ENTER KEY)     *         
* OTHERS HAVE OPERANDS THAT ARE EBCDIC LENGTH AND/OR TEXT FIELDS.     *         
*                                                                     *         
* SOME OP CODES SET A CONDITION CODE TO EQUAL OR NOT EQUAL (AND LOWER *         
* OR HIGHER.) THESE CONDITIONS ARE TESTED BY BRANCH INSTRUCTIONS.     *         
*                                                                     *         
* PARAMETER FORMATS DESCRIBED BY A CODE IN COMMENT COLUMN 30, WHERE:  *         
* CL - STRING OF CHARACTERS PRECEDED BY 2 DIGIT LENGTH                *         
* IL - INTEGER AS STRING OF DIGITS PRECEDED BY 2 DIGIT LENGTH         *         
* LA - 2 CHARACTER LABEL CODE                                         *         
* L2 - 2 DIGIT LENGTH OF DATA STORED AT INDIRECT LOCATION             *         
* H2 - 2 CHARACTER HEX BYTE                                           *         
* N  - NO PARAMETERS                                                  *         
*                                                                     *         
***********************************************************************         
         SPACE 1                                                                
S_USRS   EQU   C'US',2,C'C'  CL    SET USERID FROM SCRIPT                       
S_SYSS   EQU   C'SS',2,C'C'  CL    SET SYSTEM FROM SCRIPT                       
S_PRGS   EQU   C'PS',2,C'C'  CL    SET PROGRAM FROM SCRIPT                      
S_PWDS   EQU   C'WS',2,C'C'  CL    SET PASSWORD FROM SCRIPT                     
S_USRI   EQU   C'UI',2,C'C'  L2    SET USERID FROM INPUT DATA                   
S_SYSI   EQU   C'SI',2,C'C'  L2    SET SYSTEM FROM INPUT DATA                   
S_PRGI   EQU   C'PI',2,C'C'  L2    SET PROGRAM FROM INPUT DATA                  
S_PWDI   EQU   C'WI',2,C'C'  L2    SET PASSWORD FROM INPUT DATA                 
*                                                                               
S_SRV    EQU   C'SR',2,C'C'  H2    SET SERVICE REQUEST (TWO HEX CHRS)           
S_$CT    EQU   C'CT',2,C'C'  N     PASS CONTROL TO CONNECT PROGRAM              
S_$CTT   EQU   C'C1',2,C'C'  N     PASS CONTROL TO $CT WITH TEST RETURN         
*                                                                               
S_LBLS   EQU   C'DS',2,C'C'  LA    DEFINE A SCRIPT LABEL (TWO CHRS)             
S_LBLT   EQU   C'DF',2,C'C'  LA    DEFINE A TWA LABEL (TWO CHRS)                
S_ATBT   EQU   C'DA',2,C'C'  IL    DEFINE A TWA ATTRIBUTE (1 .. 255)            
S_LBLW   EQU   C'DW',2,C'C'  LA    DEFINE A WORK AREA LABEL (TWO CHRS)          
*                                                                               
S_READ   EQU   C'BI',2,C'C'  N     DATA BLOCK INPUT (READ)                      
S_WRITE  EQU   C'BO',2,C'C'  N     DATA BLOCK OUTPUT (WRITE)                    
*                                                                               
S_FIRST  EQU   C'FF',2,C'C'  N     POSITION TO FIRST FIELD                      
S_FST    EQU   C'FF',2,C'C'  N     POSITION TO FIRST FIELD                      
S_FSTPRO EQU   C'FP',2,C'C'  N     POSITION TO FIRST PROTECTED FIELD            
S_FSTUNP EQU   C'FU',2,C'C'  N     POSITION TO FIRST UNPROTECTED FIELD          
S_HOME   EQU   C'FU',2,C'C'  N     POSITION TO FIRST UNPROTECTED FIELD          
S_FLDOFF EQU   C'FO',2,C'C'  IL    POSITION TO OFFSET IN FIELD                  
S_NEXT   EQU   C'NF',2,C'C'  N     POSITION TO NEXT FIELD                       
S_NXT    EQU   C'NF',2,C'C'  N     POSITION TO NEXT FIELD                       
S_NXTUNP EQU   C'NU',2,C'C'  N     POSITION TO NEXT UNPROTECTED FIELD           
S_TAB    EQU   C'NU',2,C'C'  N     POSITION TO NEXT UNPROTECTED FIELD           
S_NXTPRO EQU   C'NP',2,C'C'  N     POSITION TO NEXT PROTECTED FIELD             
S_NTH    EQU   C'LF',2,C'C'  IL    LOCATE THE NTH FIELD                         
S_NTHPRO EQU   C'LP',2,C'C'  IL    LOCATE THE NTH PROTECTED FIELD               
S_NTHUNP EQU   C'LU',2,C'C'  IL    LOCATE THE NTH UNPROTECTED FIELD             
S_LOCNUM EQU   C'LN',2,C'C'  IL    LOCATE A FIELD WITH FIELD NUMBER             
S_LOCTXT EQU   C'LT',2,C'C'  CL    LOCATE A FIELD WITH TEXT COMPARE             
S_LOCDIC EQU   C'LD',2,C'C'  IL    LOCATE A FIELD WITH DICTIONARY #             
S_LOCLBL EQU   C'LL',2,C'C'  LA    LOCATE A FIELD WITH LABEL                    
S_LOCATB EQU   C'LA',2,C'C'  IL    LOCATE NEXT FIELD WITH ATTRIBUTE             
S_LOCWRK EQU   C'LW',2,C'C'  LA    LOCATE A WORK AREA LABEL                     
S_LOCCUR EQU   C'LC',2,C'C'  N     LOCATE THE CURSOR POSITION                   
S_LOCOFF EQU   C'LO',2,C'C'  IL    LOCATE TO OFFSET IN TWA                      
S_BACKUP EQU   C'BU',2,C'C'  IL    BACK UP TO LAST NON SPACE CHARACTER          
S_NXTFF  EQU   C'FN',2,C'C'  N     POSITION TO NEXT FIELD WITHIN FIELD          
*                                                                               
S_INPI   EQU   C'EI',2,C'C'  L2    ENTER INTO TWA FROM NEXT INPUT LOCN          
S_INPM   EQU   C'EM',2,C'C'  L2    ENTER INTO TWA FROM NEXT INPUT LOCN          
*                                  DO NOT ADVANCE INPUT AREA PTR                
S_INPIF  EQU   C'EF',2,C'C'  N     ENTER INTO TWA FROM NEXT INPUT FIELD         
S_INPS   EQU   C'ES',2,C'C'  CL    ENTER INTO TWA FROM SCRIPT                   
S_INPW   EQU   C'EW',2,C'C'  L2    ENTER INTO TWA FROM WORK AREA LABEL          
S_ERASE  EQU   C'EE',2,C'C'  N     ENTER INTO TWA ERASED FIELD                  
S_NXTIF  EQU   C'NI',2,C'C'  N     GOTO NEXT INPUT FIELD                        
*                                                                               
S_OUTO   EQU   C'MO',2,C'C'  L2    MOVE FROM TWA INTO NEXT OUTPUT LOCN          
S_OUTOF  EQU   C'MF',2,C'C'  N     MOVE FROM TWA INTO NEXT OUTPUT FIELD         
S_OUTS   EQU   C'MS',2,C'C'  CL    MOVE FROM TWA INTO SCRIPT                    
S_OUTI   EQU   C'MI',2,C'C'  L2    MOVE FROM TWA INTO INPUT AREA                
S_OUTW   EQU   C'MW',2,C'C'  L2    MOVE FROM TWA INTO WORK AREA                 
S_OUTFW  EQU   C'FW',2,C'C'  L2    MOVE TWA FLD. WITHIN FLD. TO WORK            
*                                                                               
S_CURO   EQU   C'CO',2,C'C'  N     CURSOR POSN INTO NEXT OUTPUT LOCN            
S_CUROF  EQU   C'CF',2,C'C'  N     CURSOR POSN INTO NEXT OUTPUT FIELD           
S_CURS   EQU   C'CS',2,C'C'  N     CURSOR POSN INTO SCRIPT                      
S_CURI   EQU   C'CI',2,C'C'  N     CURSOR POSN INTO INPUT AREA                  
*                                                                               
S_RESO   EQU   C'RO',2,C'C'  N     RESULT INTO NEXT OUTPUT LOCN                 
S_RESOF  EQU   C'RF',2,C'C'  N     RESULT INTO NEXT OUTPUT FIELD                
S_RESS   EQU   C'RS',2,C'C'  N     RESULT INTO SCRIPT                           
S_RESI   EQU   C'RI',2,C'C'  N     RESULT INTO INPUT AREA                       
*                                                                               
S_SAVERR EQU   C'SE',2,C'C'  N     SAVE ERROR MESSAGE IN ERROR BUFFER           
*                                                                               
S_TSTI   EQU   C'TI',2,C'C'  L2    TEST TWA TO NEXT INPUT LOCN                  
S_CMTI   EQU   C'TI',2,C'C'  L2    COMPARE TWA WITH NEXT INPUT LOCN             
S_TSTIF  EQU   C'TF',2,C'C'  N     TEST TWA TO NEXT INPUT FIELD                 
S_CMTIF  EQU   C'TF',2,C'C'  N     COMPARE TWA WITH NEXT INPUT FIELD            
*                                                                               
S_TSTS   EQU   C'TS',2,C'C'  CL    TEST TWA FIELD WITH SCRIPT                   
S_CMTS   EQU   C'TS',2,C'C'  CL    COMPARE TWA FIELD WITH SCRIPT                
*                                                                               
S_TSTOK  EQU   C'TO',2,C'C'  N     TEST TWA HEADER FOR OK STATUS                
S_TSTHEX EQU   C'TH',2,C'C'  H2    TEST TWA OFFSET WITH HEX BYTE VALUE          
S_TSTFX  EQU   C'FX',2,C'C'  H2    TEST TWA FIELD WITH HEX BYTE VALUE           
S_TSTBIT EQU   C'TB',2,C'C'  H2    TEST TWA OFFSET WITH BIT VALUE               
S_TSTERR EQU   C'TE',2,C'C'  N     TEST ERROR IN TWA MESSAGE FLD                
S_TSTERN EQU   C'TN',2,C'C'  IL    TEST ERROR NUMBER IN TWA MESSAGE FLD         
S_TSTCUR EQU   C'TC',2,C'C'  N     TEST CURSOR TO TWA FIELD                     
S_TSTLIN EQU   C'TL',2,C'C'  IL    TEST SCREEN LINE NUMBER                      
S_TSTOFF EQU   C'FT',2,C'C'  L2    TEST CURRENT OFFSET INTO TWA FIELD           
*                                                                               
S_TRON   EQU   C'T+',2,C'C'  N     TURN TWA TRACE ON                            
S_TROFF  EQU   C'T-',2,C'C'  N     TURN TWA TRACE OFF                           
*                                                                               
S_SCTON  EQU   C'+S',2,C'C'  N     TURN SCRIPT TRACE ON                         
S_SCTOFF EQU   C'-S',2,C'C'  N     TURN SCRIPT TRACE OFF                        
*                                                                               
S_EXIT   EQU   C'XX',2,C'C'  N     EXIT UNCONDITIONALLY                         
S_EXITEQ EQU   C'XE',2,C'C'  N     EXIT IF EQUAL (TRUE)                         
S_EXITNE EQU   C'XN',2,C'C'  N     EXIT IF NOT EQUAL (NOT EQUAL)                
S_BR     EQU   C'BR',2,C'C'  LA    BRANCH TO A LABEL UNCONDITIONALLY            
S_BE     EQU   C'BE',2,C'C'  LA    BRANCH TO A LABEL IF EQUAL                   
S_BNE    EQU   C'BN',2,C'C'  LA    BRANCH TO A LABEL IF NOT EQ.                 
S_BL     EQU   C'BL',2,C'C'  LA    BRANCH TO A LABEL IF LOWER.                  
S_BH     EQU   C'BH',2,C'C'  LA    BRANCH TO A LABEL IF HIGHER.                 
S_BNL    EQU   C'NL',2,C'C'  LA    BRANCH TO A LABEL IF NOT LOWER.              
S_BNH    EQU   C'NH',2,C'C'  LA    BRANCH TO A LABEL IF NOT HIGHER.             
S_BZ     EQU   C'BZ',2,C'C'  LA    BRANCH TO A LABEL IF ZERO                    
S_BNZ    EQU   C'NZ',2,C'C'  LA    BRANCH TO A LABEL IF NOT ZERO                
S_NOP    EQU   C'NO',2,C'C'  N     NO-OP                                        
S_ABEND  EQU   C'AB',2,C'C'  N     CAUSE SCRIPT TO ABEND                        
S_COMMIT EQU   C'OK',2,C'C'  N     COMMIT UPDATES DONE SO FAR                   
S_SETC   EQU   C'SC',2,C'C'  IL    SET COUNTER                                  
S_INC    EQU   C'IC',2,C'C'  N     INCREMENT COUNTER                            
S_DEC    EQU   C'DC',2,C'C'  N     DECREMENT COUNTER                            
*                                                                               
S_SAVFP  EQU   C'FS',2,C'C'  N     SAVE TWA FIELD POSITION                      
S_RESFP  EQU   C'FR',2,C'C'  N     RESTORE TWA FIELD POSITION                   
*                                                                               
S_FILLO  EQU   C'OF',2,C'C'  H2    FILL OUTPUT ATEA WITH CHARACTER              
*                                                                               
S_SEP    EQU   C'ST',2,C'C'  H2    SET FIELD SEPARATOR                          
*                                                                               
S_SETIP  EQU   C'SP',2,C'C'  IL    SET INPUT DATA AREA POINTER                  
S_ADDIP  EQU   C'AP',2,C'C'  IL    ADD VALUE TO INPUT DATA AREA PTR             
S_SUBIP  EQU   C'UP',2,C'C'  IL    SUBTRACT VALUE FROM INPUT PTR                
S_SUBTWA EQU   C'SU',2,C'C'  IL    SUBTRACT VALUE FROM TWA FIELD PTR            
S_ADDTWA EQU   C'AD',2,C'C'  IL    ADD VALUE TO TWA FIELD PTR                   
S_SETOP  EQU   C'SO',2,C'C'  IL    SET OUTPUT DATA AREA POINTER                 
S_ADDOP  EQU   C'AO',2,C'C'  IL    ADD VALUE TO OUTPUT DATA AREA PTR            
S_SUBOP  EQU   C'UO',2,C'C'  IL    SUBTRACT VALUE FROM OUTPUT PTR               
S_SETWP  EQU   C'SW',2,C'C'  IL    SET WORK AREA POINTER                        
S_ADDWP  EQU   C'AW',2,C'C'  IL    ADD VALUE TO WORK AREA POINTER               
S_SUBWP  EQU   C'UW',2,C'C'  IL    SUBTRACT VALUE FROM WORK POINTER             
S_SETIRP EQU   C'IR',2,C'C'  IL    SET INPUT RECORD POINTER                     
S_SETORP EQU   C'OR',2,C'C'  IL    SET OUTPUT RECORD POINTER                    
S_SETORL EQU   C'OL',2,C'C'  IL    SET OUTPUT RECORD LENGTH                     
*                                                                               
S_MVIO   EQU   C'IO',2,C'C'  IL    MOVE FROM INPUT TO OUTPUT                    
S_MVIW   EQU   C'IW',2,C'C'  IL    MOVE FROM INPUT TO WORK AREA                 
S_MVWO   EQU   C'WO',2,C'C'  IL    MOVE FROM WORK AREA TO OUTPUT                
S_MVSO   EQU   C'OS',2,C'C'  CL    MOVE FROM SCRIPT TO OUTPUT   (NOTE1)         
S_MVSI   EQU   C'IM',2,C'C'  CL    MOVE FROM SCRIPT TO INPUT    (NOTE1)         
S_MVSW   EQU   C'VW',2,C'C'  CL    MOVE FROM SCRIPT TO WORK AREA(NOTE1)         
*                                                                               
S_CMIS   EQU   C'IS',2,C'C'  CL    COMPARE INPUT TO SCRIPT      (NOTE1)         
S_CMIF   EQU   C'IF',2,C'C'  CL    COMPARE INPUT FIELD TO SCRIPT(NOTE1)         
S_CMWS   EQU   C'CW',2,C'C'  CL    COMPARE WORK AREA TO SCRIPT  (NOTE1)         
S_CMIP   EQU   C'IP',2,C'C'  IL    COMPARE INPUT POINTER TO VALUE               
S_CMWF   EQU   C'WF',2,C'C'  L2    COMPARE WORK AREA TO FIELD                   
S_CMIFF  EQU   C'FC',2,C'C'  L2    COMPARE INPUT WITH FLD. WITHIN FLD.          
S_CMIW   EQU   C'WN',2,C'C'  IL    COMPARE INPUT TO WORK AREA                   
*                                                                               
S_ECHO   EQU   C'EC',2,C'C'  IL    ECHO ERROR CODE                              
*                                                                               
S_IAMI   EQU   C'II',2,C'C'  L2    IAM=TESTID FROM INPUT DATA AREA              
S_IAMS   EQU   C'IA',2,C'C'  CL    IAM=TESTID FROM SCRIPT PARAMETER             
*                                                                               
S_ENTWA  EQU   C'ET',2,C'C'  N     ENTER KEY WITH NO TWA POSITION RESET         
S_ENTER  EQU   C'00',2,C'C'  N     ENTER KEY                                    
S_PF01   EQU   C'01',2,C'C'  N     PF01 KEY                                     
S_PF02   EQU   C'02',2,C'C'  N     PF02 KEY                                     
S_PF03   EQU   C'03',2,C'C'  N     PF03 KEY                                     
S_PF04   EQU   C'04',2,C'C'  N     PF04 KEY                                     
S_PF05   EQU   C'05',2,C'C'  N     PF05 KEY                                     
S_PF06   EQU   C'06',2,C'C'  N     PF06 KEY                                     
S_PF07   EQU   C'07',2,C'C'  N     PF07 KEY                                     
S_PF08   EQU   C'08',2,C'C'  N     PF08 KEY                                     
S_PF09   EQU   C'09',2,C'C'  N     PF09 KEY                                     
S_PF10   EQU   C'10',2,C'C'  N     PF10 KEY                                     
S_PF11   EQU   C'11',2,C'C'  N     PF11 KEY                                     
S_PF12   EQU   C'12',2,C'C'  N     PF12 KEY                                     
S_PF13   EQU   C'13',2,C'C'  N     PF13 KEY                                     
S_PF14   EQU   C'14',2,C'C'  N     PF14 KEY                                     
S_PF15   EQU   C'15',2,C'C'  N     PF15 KEY                                     
S_PF16   EQU   C'16',2,C'C'  N     PF16 KEY                                     
S_PF17   EQU   C'17',2,C'C'  N     PF17 KEY                                     
S_PF18   EQU   C'18',2,C'C'  N     PF18 KEY                                     
S_PF19   EQU   C'19',2,C'C'  N     PF19 KEY                                     
S_PF20   EQU   C'20',2,C'C'  N     PF20 KEY                                     
S_PF21   EQU   C'21',2,C'C'  N     PF21 KEY                                     
S_PF22   EQU   C'22',2,C'C'  N     PF22 KEY                                     
S_PF23   EQU   C'23',2,C'C'  N     PF23 KEY                                     
S_PF24   EQU   C'24',2,C'C'  N     PF24 KEY                                     
*                                                                               
S_END    EQU   C'**',2,C'C'  N     END OF SCRIPT                                
**********************************************************************          
* NOTE 1 THE COMPILER CANNOT HANDLE STRINGS WITH CONSECUTIVE SPACES  *          
*        USE º INSTEAD OF C' '                                       *          
**********************************************************************          
         EJECT                                                                  
***********************************************************************         
* EQUATES FOR FASCRUNCH ERROR CODES            .                      *         
*                                                                     *         
* FOR EXECUTION OR RUN-TIME ERRORS '9000' IS ADDED BY FASCRIPT        *         
*                                                                     *         
* OTHERWISE ERRORS RESULT FROM FIRST PASS COMPILE VALIDATION          *         
* PROCESSING BY FASCRUNCH AND INDICATE ERROR IN ORIGINAL SCRIPT       *         
* COMPILATION.                                                        *         
***********************************************************************         
         SPACE 1                                                                
EQNOERR  EQU   0000                NO ERROR                                     
EQVALI1  EQU   0001                GENERAL VALIDATION PROCESS ERROR 1           
EQEXEC1  EQU   0002                GENERAL EXECUTE PROCESS ERROR 1              
EQVPAR1  EQU   0011                VALIDATE SCRIPT PARAMETER ERROR 1            
EQVCHA1  EQU   0021                VALCHAR - NON NUMERIC LENGTH                 
EQVCHA2  EQU   0022                VALCHAR - LESS THAN MINIMUM LENGTH           
EQVCHA3  EQU   0023                VALCHAR - GREATER THAN MAXIMUM LEN.          
EQVHIN1  EQU   0031                VALHINT - NON NUMERIC LENGTH                 
EQVHIN2  EQU   0032                VALHINT - LESS THAN MINIMUM LENGTH           
EQVHIN3  EQU   0033                VALHINT - GREATER THAN MAXIMUM LEN.          
EQVHIN4  EQU   0034                VALHINT - NON NUMERIC VALUE                  
EQVHIN5  EQU   0035                VALHINT - GREATER THAN HALF WORD             
EQVFIN1  EQU   0041                VALFINT - NON NUMERIC LENGTH                 
EQVFIN2  EQU   0042                VALFINT - LESS THAN MINIMUM LENGTH           
EQVFIN3  EQU   0043                VALFINT - GREATER THAN MAXIMUM LEN.          
EQVFIN4  EQU   0044                VALFINT - NON NUMERIC VALUE                  
EQVFIN5  EQU   0045                VALFINT - GREATER THAN FULL WORD             
EQVSLA1  EQU   0051                VALSLAB - TABLE OVERFLOW                     
EQVSLA2  EQU   0052                VALSLAB - PREVIOUSLY DEFINED SYMBOL          
EQCTVA1  EQU   0061                CTVAL - CONNECT SYSTEM NOT ENTERED           
EQCTVA2  EQU   0062                CTVAL - CONNECT PROGRAM NOT ENTERED          
EQCTVA3  EQU   0063                CTVAL - CONNECT USER NOT ENTERED             
EQCTVA4  EQU   0064                CTVAL - CONNECT PASSWORD NOT ENTERED         
EQVSYM1  EQU   0071                VALSYMT - UNDEFINED LABEL ADDRESS            
EQVFLA1  EQU   0081                VALFLAB - TABLE OVERFLOW                     
EQVFLA2  EQU   0082                VALFLAB - UNDEFINED FIELD LABEL              
EQGMON1  EQU   0091                GOTOMON - ALREADY CONNECTED                  
EQGMON2  EQU   0092                GOTOMON - SWITCH SYSTEM NO-OP                
EQGMON3  EQU   0093                GOTOMON - INVALID SWITCH SYSTEM              
EQGMON4  EQU   0094                GOTOMON - FAILED TO CONNECT                  
EQVHX21  EQU   0101                VALHEX2 - INVALID HEX VALUE                  
EQLHX21  EQU   0111                LOADHX2 - INVALID HEX VALUE                  
EQTINP1  EQU   0121                TSTINP - INPUT DATA AREA OVERFLOW            
EQTOUT1  EQU   0131                TSTOUT - OUTPUT DATA AREA OVERFLOW           
EQCONN1  EQU   0141                CONNECT - CALLOV NOT LINKED                  
EQCONN2  EQU   0142                CONNECT - SCREEN PHASE CALLOV ERROR          
EQCONN3  EQU   0143                CONNECT - SCREEN PHASE LOAD ERROR            
EQCONN4  EQU   0144                CONNECT - INVALID PROGRAM PARAMETER          
EQCONN5  EQU   0145                CONNECT - TEMPSTR READ ERROR                 
EQCONN6  EQU   0146                CONNECT - UNDEFINED ERROR MESSAGE            
EQSAVV1  EQU   0151                SAVEVAL - SAVE ERROR BUFFER MISSING          
EQLFLD1  EQU   0161                LOADFLD - TWA LOCATION UNINITIALISED         
EQLFLD2  EQU   0162                LOADFLD - NOOPED FIELD                       
EQLFLD3  EQU   0163                LOADFLD - PROTECTED FIELD                    
EQLFLD4  EQU   0163                LOADFLD - SHORT TWA FIELD LENGTH             
EQGTWA1  EQU   0171                GETTWA - TWA LOCATION UNINITIALISED          
EQGTWA2  EQU   0172                GETTWA - NOOPED FIELD                        
EQGTWA3  EQU   0173                GETTWA - SHORT TWA FIELD LENGTH              
EQVWLA1  EQU   0181                VALWLAB - TABLKE OVERFLOW                    
EQVWLA2  EQU   0182                VALWLAB - PREVIOUSLY DEFINED LABEL           
EQIAMI1  EQU   0191                IAMIXEC - IAM=TESTID PARAMETER ERROR         
EQIAMS1  EQU   0192                IAMSXEC - IAM=TESTID PARAMETER ERROR         
EQTUNP1  EQU   0201                TABUNP - TWA LOCATION UNINITIALISED          
EQTUNP2  EQU   0202                TABUNP - SHORT TWA FIELD LENGTH              
EQTPRO1  EQU   0211                TABPRO - TWA LOCATION UNINITIALISED          
EQTPRO2  EQU   0212                TABPRO - SHORT TWA FIELD LENGTH              
EQNFLD1  EQU   0221                NXTFLD - TWA LOCATION UNINITIALISED          
EQNFLD2  EQU   0222                NXTFLD - SHORT TWA FIELD LENGTH              
EQPFPO1  EQU   0231                PUTFPOT - FIELD POS. TABLE OVERFLOW          
EQGFPO1  EQU   0241                GETFPOT - FIELD POS. TABLE OVERFLOW          
EQGFPO2  EQU   0242                GETFPOT - FIELD POS. TABLE OVERFLOW          
EQPFAT1  EQU   0251                PUTFATT - FIELD ATR. TABLE OVERFLOW          
EQGFAT1  EQU   0261                GETFATT - FIELD ATR. UNDEFINED               
EQDECU1  EQU   0271                DECUNT - LOOP COUNTER MAX EXCEEDED           
EQIATE1  EQU   0281                IAMTEST ROUTINE ERROR 1                      
EQIATE2  EQU   0282                IAMTEST ROUTINE ERROR 2                      
EQIATE3  EQU   0283                IAMTEST ROUTINE ERROR 3                      
EQIATE4  EQU   0284                IAMTEST ROUTINE ERROR 4                      
EQLSLB1  EQU   0291                LOADSLB - SYMBOL TABLE OVERFLOW              
EQLSLB2  EQU   0292                LOADSLB - SYMBOL NOT FOUND                   
EQSRVE1  EQU   0301                SRVEXEC - INVALID HEX PROGRAM CODE           
EQSRVE2  EQU   0302                SRVEXEC - CALLOV NOT FOUND                   
EQSRVE3  EQU   0303                SRVEXEC - CALLOV ERROR RETURN                
EQSRVE4  EQU   0304                SRVEXEC - LOAD EPLOC ERROR                   
EQDONE1  EQU   0311                =DONE ROUTINE ERROR 1                        
EQDONE2  EQU   0312                =DONE ROUTINE ERROR 2                        
EQDONE3  EQU   0313                =DONE ROUTINE ERROR 3                        
EQDONE4  EQU   0314                =DONE ROUTINE ERROR 4                        
EQVLN21  EQU   0361                VALLEN2 - NON NUMERIC 2 BYTE LENGTH          
EQVBYT1  EQU   0371                VALBYTE - NON NUMERIC LENGTH                 
EQVBYT2  EQU   0372                VALBYTE - LESS THAN MINIMUM LENGTH           
EQVBYT3  EQU   0373                VALBYTE - GREATER THAN MAXIMUM LEN.          
EQVBYT4  EQU   0374                VALBYTE - NON NUMERIC VALUE                  
EQVBYT5  EQU   0375                VALBYTE - VALUE EXCEEDS BYTE MAXIMUM         
EQLTWF1  EQU   0381                LTWAFLD - SHORT TWA FIELD LENGTH             
EQLTWN1  EQU   0391                LTWANUM - SHORT TWA FIELD LENGTH             
EQLTWD1  EQU   0401                LTWADIC - SHORT TWA FIELD LENGTH             
EQLTWT1  EQU   0411                LTWATXT - SHORT TWA FIELD LENGTH             
EQFUNP1  EQU   0421                FRSTUNP - SHORT TWA FIELD LENGTH             
EQFPRO1  EQU   0431                FRSTPRO - SHORT TWA FIELD LENGTH             
EQBLIV1  EQU   0441                BLKIVAL - NO BLOCK INPUT ROUTINE             
EQBLOV1  EQU   0451                BLKOVAL - NO BLOCK OUTPUT ROUTINE            
EQUSSE1  EQU   0461                USRSEXEC - NULL/BLANK USER ID                
EQSYSE1  EQU   0471                SYSSEXEC - NULL/BLANK SYSTEM                 
EQPRSE1  EQU   0481                PRGSEXEC - NULL/BLANK PROGRAM                
EQUSDE1  EQU   0491                USRDEXEC - NULL/BLANK USER ID                
EQSYDE1  EQU   0501                SYSDEXEC - NULL/BLANK SYSTEM                 
EQPRDE1  EQU   0511                PRGDEXEC - NULL/BLANK PROGRAM                
EQLOCC1  EQU   0521                LOCCEXEC - LOCATE CURSOR FIELD ERROR         
EQTSHE1  EQU   0531                TSTHEXEC - TSTHEX ERROR CODE 1               
EQTSHE2  EQU   0532                TSTHEXEC - TSTHEX ERROR CODE 2               
EQTSBE1  EQU   0541                TSTHEXEC - TSTBIT ERROR CODE 1               
EQTSBE2  EQU   0542                TSTHEXEC - TSTBIT ERROR CODE 2               
EQSSLB1  EQU   0551                SETSLB - SYMBOL TABLE OVERFLOW               
EQSSLB2  EQU   0552                SETSLB - SYMBOL NOT FOUND                    
EQTSFX1  EQU   0561                TSFXEXEC - TSTFX ERROR CODE 1                
EQTSFX2  EQU   0562                TSFXEXEC - TSTFX ERROR CODE 2                
EQFLOE1  EQU   0581                FILLO - INVALID HEX CODE PARAMETER           
EQLTAD1  EQU   0591                LTWAADR - SHORT TWA FIELD LENGTH             
EQSEPE1  EQU   0600                SETSEP - INVALID HEX CODE PARAMETER          
EQNOSYS  EQU   1000                CONNECT - SYSTEM NOT OPERATIONAL             
*                                    NOTE - 1001-1255 RESERVED FOR SE#S         
EQCONER  EQU   1300                CONNECT - ANY OTHER ERROR MESSAGE            
*                                    1300 + THE ERROR MESSAGE NUMBER            
*                                    E.G. 1331 = INVALID USERID                 
         EJECT                                                                  
